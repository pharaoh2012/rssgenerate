
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/powertoolsteam/p/18934279" title="发布于 2025-06-18 10:00">
    <span role="heading" aria-level="2">C# 将 CSV 转化为 Excel</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="引言">引言</h2>
<p>在数据处理和交换的过程中，CSV（逗号分隔值）格式和 Excel 文件格式都是非常常见的。CSV 文件以纯文本形式存储表格数据，易于生成和处理；而 Excel 文件则提供了更丰富的功能，如数据可视化、公式计算等。在实际应用中，我们经常需要将 CSV 文件转化为 Excel 文件，以利用 Excel 的强大功能进行数据分析和展示。本文将介绍如何使用合适的技术手段在 C# 中实现将 CSV 文件转化为 Excel 文件的功能。</p>
<h3 id="实现思路">实现思路</h3>
<p>在 C# 中，要实现将 CSV 转化为 Excel，我们可以按照以下步骤进行：</p>
<ol>
<li><strong>创建项目</strong>：首先需要创建一个 C# 项目，这里假设使用 Visual Studio 创建一个控制台应用程序项目。</li>
<li><strong>读取 CSV 文件</strong>：使用 C# 的文件操作功能读取 CSV 文件的内容。</li>
<li><strong>创建 Excel 文件</strong>：借助合适的第三方库，如 EPPlus（一个开源的用于创建和操作 Excel 文件的库）来创建一个新的 Excel 工作簿。</li>
<li><strong>写入数据</strong>：将从 CSV 文件中读取的数据逐行写入到 Excel 工作簿的工作表中。</li>
<li><strong>保存 Excel 文件</strong>：将创建好的 Excel 工作簿保存到指定的文件路径。</li>
</ol>
<h3 id="代码示例">代码示例</h3>
<pre><code class="language-csharp">using System;
using System.IO;
using OfficeOpenXml;

class Program
{
    static void Main()
    {
        // 1. 读取CSV文件
        string csvFilePath = "path/to/your/csv/file.csv";
        string[] csvLines = File.ReadAllLines(csvFilePath);

        // 2. 创建Excel工作簿
        ExcelPackage.LicenseContext = LicenseContext.NonCommercial;
        using (ExcelPackage package = new ExcelPackage())
        {
            // 创建一个新的工作表
            ExcelWorksheet worksheet = package.Workbook.Worksheets.Add("Sheet1");

            // 3. 写入数据
            for (int i = 0; i &lt; csvLines.Length; i++)
            {
                string[] values = csvLines[i].Split(',');
                for (int j = 0; j &lt; values.Length; j++)
                {
                    worksheet.Cells[i + 1, j + 1].Value = values[j];
                }
            }

            // 4. 保存Excel文件
            string excelFilePath = "path/to/your/excel/file.xlsx";
            FileInfo excelFile = new FileInfo(excelFilePath);
            package.SaveAs(excelFile);
        }

        Console.WriteLine("CSV文件已成功转化为Excel文件。");
    }
}
</code></pre>
<ol>
<li><strong>读取 CSV 文件</strong>：使用<code>File.ReadAllLines</code>方法读取 CSV 文件的所有行，并将其存储在一个字符串数组中。</li>
<li><strong>创建 Excel 工作簿</strong>：使用<code>ExcelPackage</code>类创建一个新的 Excel 工作簿，并添加一个名为 "Sheet1" 的工作表。</li>
<li><strong>写入数据</strong>：遍历 CSV 文件的每一行，将每行数据按逗号分割，并逐列写入到 Excel 工作表的相应单元格中。</li>
<li><strong>保存 Excel 文件</strong>：使用<code>SaveAs</code>方法将创建好的 Excel 工作簿保存到指定的文件路径。</li>
</ol>
<h3 id="注意事项">注意事项</h3>
<ul>
<li>在使用 EPPlus 库时，需要根据实际情况设置<code>LicenseContext</code>，以确保符合开源协议的要求。</li>
<li>要确保 CSV 文件的路径和 Excel 文件的保存路径是正确的，并且程序对这些路径具有读写权限。</li>
</ul>
<h2 id="结论">结论</h2>
<p>通过以上步骤和代码示例，我们可以在 C# 中实现将 CSV 文件转化为 Excel 文件的功能。这种方法简单易懂，借助第三方库可以快速完成文件格式的转换，为数据处理和分析提供了便利。在实际应用中，我们可以根据具体需求对代码进行扩展，如对数据进行进一步的处理、添加样式等，以满足不同的业务需求。</p>
<p><a href="https://www.grapecity.com.cn/developer/grapecitydocuments/excel-net" target="_blank" rel="noopener nofollow">GrapeCity Documents for Excel</a></p>

</div>
<div id="MySignature" role="contentinfo">
    <hr>
<br>
<p style="font-size: 16px; font-family: 微软雅黑, 黑体, Arial; color: #000">本文是由葡萄城技术开发团队发布，转载请注明出处：<a href="https://www.grapecity.com.cn/" target="_blank">葡萄城官网</a></p>
<!--p style="font-size: 16px; font-family: 微软雅黑, 黑体, Arial; color: #000">了解企业级低代码开发平台，请前往<a href="https://www.grapecity.com.cn/solutions/huozige" target="_blank">活字格</a>
</p><p style="font-size: 16px; font-family: 微软雅黑, 黑体, Arial; color: #000">了解可嵌入您系统的在线 Excel，请前往<a href="https://www.grapecity.com.cn/developer/spreadjs" target="_blank">SpreadJS纯前端表格控件</a></p>
<p style="font-size: 16px; font-family: 微软雅黑, 黑体, Arial; color: #000">了解嵌入式的商业智能和报表软件，请前往<a href="https://www.grapecity.com.cn/solutions/wyn" target="_blank">Wyn Enterprise
</a></p-->

<br>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-06-18 10:01">2025-06-18 10:00</span>&nbsp;
<a href="https://www.cnblogs.com/powertoolsteam">葡萄城技术团队</a>&nbsp;
阅读(<span id="post_view_count">88</span>)&nbsp;
评论(<span id="post_comment_count">1</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18934279);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18934279', targetLink: 'https://www.cnblogs.com/powertoolsteam/p/18934279', title: 'C# 将 CSV 转化为 Excel' })">举报</a>
</div>
        