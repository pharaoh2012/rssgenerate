
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wikeflow/p/18868313" title="发布于 2025-05-09 15:41">
    <span role="heading" aria-level="2">.net core workflow流程定义</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h1 align="center">.net core workflow流程定义</h1>
<p class="p">WikeFlow<span style="font-family: 宋体">官网：</span><a href="http://www.wikesoft.com/" rel="noopener nofollow"><span style="text-decoration: underline">http</span><span style="text-decoration: underline"><span style="font-family: Calibri">://</span></span><span style="text-decoration: underline">www.wikesoft.com</span></a></p>
<p class="p">WikeFlow<span style="font-family: 宋体">学习版演示地址：</span><a href="http://workflow.wikesoft.com/" rel="noopener nofollow"><span style="text-decoration: underline"><span style="font-family: Calibri">http://</span></span><span style="text-decoration: underline">workflow.wikesoft.com</span></a></p>
<p class="p">WikeFlow<span style="font-family: 宋体">学习版源代码下载：</span><a href="https://gitee.com/wikesoft/WorkFlow" rel="noopener nofollow"><span style="text-decoration: underline">https://gitee.com/wikesoft/WorkFlow</span></a></p>
<p class="p">WikeFlow2.0<span style="font-family: 宋体">演示地址：</span><a href="http://workflow2.wikesoft.com/" rel="noopener nofollow"><span style="text-decoration: underline"><span style="font-family: Calibri">http://</span></span><span style="text-decoration: underline">workflow2.wikesoft.com</span></a></p>
<p class="p">WikeFlow2.0-Vue3<span style="font-family: 宋体">演示地址：</span><a href="http://workflow2-vue3.wikesoft.com:8080/" rel="noopener nofollow"><span style="text-decoration: underline">http://workflow2-vue3.wikesoft.com:8080/</span></a></p>
<p class="p">WikeFlow2.0<span style="font-family: 宋体">帮助文档：</span><a href="http://wikeflowhelp.wikesoft.com/" rel="noopener nofollow"><span style="text-decoration: underline">http://wikeflowhelp.wikesoft.com/</span></a></p>
<p>&nbsp;</p>
<hr align="center" size="2" width="100%">
<p>&nbsp;</p>
<h2>&nbsp;流程定义的作用</h2>
<p class="p"><span style="font-family: &quot;Open Sans&quot;">定义一个流程，并指定该流程的唯一</span>Key值 。通过流程定义的Key值 ，在创建实例的时候，通过指定Key值 ，能找到创建的是什么流程。如何创建流程，请查看<a>《如何创建流程》</a></p>
<p class="p">&nbsp;<img src="https://img2024.cnblogs.com/blog/1132363/202505/1132363-20250509153757857-1421538094.png" alt=""></p>
<p>&nbsp;</p>
<p class="p">工作流在执行的过程中，会通过反射的方式实例化业务类指定的对象，并调用<a href="http://wikeflowhelp.wikesoft.com/Home/Index/9" rel="noopener nofollow">IWorkFlowService</a>接口实现的方法。</p>
<p class="p">业务类名必须要有一个无参数的构造方法，<span style="font-family: &quot;Open Sans&quot;">如果业务类名没有无参数构造方法会导致调用不成功的异常。</span></p>
<p class="p"><span style="font-family: &quot;Open Sans&quot;">如果你的业务类名的构造方法带有参数又不想调整，可以新建一个</span>cs文件，这个类实现IWorkFlowService接口。</p>
<h3><span style="font-family: &quot;Open Sans&quot;">业务类的构造方法是一个无参数的构造方法。</span></h3>
<p class="p">流程定义字段解释：</p>
<p class="p">1、定义Key：创建流程实例时指定的关键字。</p>
<p class="p">&nbsp;<img src="https://img2024.cnblogs.com/blog/1132363/202505/1132363-20250509153826886-527413590.png" alt=""></p>
<p>&nbsp;</p>
<p class="p">2、业务路径：跟流程不相关的人，查看流程明细时绑定的页面路径，它是WorkFlowInstance/WorkFlowDetail.cshtml（.aspx）绑定的页面。</p>
<p class="p">&nbsp; &nbsp; &nbsp;<span style="font-family: &quot;Open Sans&quot;">业务路径跟流程节点【待办路径】和【已办路径】的区别</span></p>
<p class="p">&nbsp; &nbsp; &nbsp;待办路径：是审批人在【待办事项】审批时，查看流程明细时绑定的页面路径，是WorkFlowInstance/Exec.cshtml（.aspx）绑定的页面；</p>
<p class="p">&nbsp; &nbsp; &nbsp;已办路径：是审批人在【已办事项】审批后，查看流程明细时绑定的页面路径，是WorkFlowInstance/Execed.cshtml（.aspx）绑定的页面。</p>
<p class="p">3、业务程序集：业务类所在的程序集。</p>
<p class="p">4、业务类名：相关业务的类名（<span style="font-family: &quot;Open Sans&quot;">命名空间</span>.类名，该类要实现IWorkFlowService）</p>
<p class="p"><span style="font-family: &quot;Open Sans&quot;">流程在执行过程中会通过反射的方式调用业务类实现的</span>IWorkFlowService方法。</p>
<p>&nbsp;</p>
<hr align="center" size="2" width="100%">
<p>&nbsp;</p>
<h2>&nbsp; 如何关联你的业务</h2>
<p class="p">流程定义要指定业务程序集和业务类名（<span style="font-family: &quot;Open Sans&quot;">命名空间</span>.类名，该类要实现IWorkFlowService）。</p>
<p class="p">该业务类要实现两部分功能</p>
<p class="p">1、该业务类自己本身的业务功能（增、删、改、查或其它业务操作）；</p>
<p class="p">2、IWorkFlowService的六个接口的实现，这六个接口可以完成业务系统和工作流的交互功能。</p>
<p class="p"><span style="font-family: &quot;Open Sans&quot;">当流程执行相关操作的时候，流程引擎自动调用业务类实现的</span>IWorkFlowService方法，达到你的业务代码与WikeFlow2的系统交互功能。IWorkFlowService接口说明，请查看<a><span style="font-family: &quot;Open Sans&quot;">《关于</span>IWorkFlowService》</a></p>
<p class="p">演示用例的请假申请的业务程序集是<strong>WikeSoft.Enterprise</strong>，业务类名是<strong>WikeSoft.Enterprise.AppServices.HolidayApplyService</strong></p>
<p class="p"><strong><span>请假申请业务类</span>HolidayApplyService代码截图如下图：</strong></p>
<p class="p">&nbsp;<img src="https://img2024.cnblogs.com/blog/1132363/202505/1132363-20250509153850287-1951015812.png" alt=""></p>
<p>&nbsp;</p>
<p class="p"><strong><span style="font-family: &quot;Open Sans&quot;">示例：</span>HolidayService实现IWorkFlowServer的BeforeExecNextEvent接口</strong></p>
<p class="p"><strong>代码解释：</strong></p>
<p class="p">1、当申请人提交，将状态修改为审核中</p>
<p class="p">2、驳回到申请人，将状态修改为未审核</p>
<p class="p">3、流程结束，将状态修改为已审核</p>
<p class="p">4、<span>动作标记（</span>ActionSign）：是执行该动作的一个标记，通过该标记，你的业务系统能知道流程执行的什么操作，你的业务系统要处理什么逻辑。</p>
<p class="p">&nbsp;<img src="https://img2024.cnblogs.com/blog/1132363/202505/1132363-20250509153910687-191309400.png" alt=""></p>
<p>&nbsp;</p>
<p class="pre">&nbsp; &nbsp; &nbsp;&nbsp;</p>
<div class="cnblogs_code">
<pre>  <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>

        <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 流程节点审批前事件

        </span><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>

        <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="invokeMember"&gt;</span><span style="color: rgba(0, 128, 0, 1)">参数</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>

        <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;returns&gt;</span><span style="color: rgba(0, 128, 0, 1)">WorkFlowMessage，如果Code= Fail，会中断流程引擎</span><span style="color: rgba(128, 128, 128, 1)">&lt;/returns&gt;</span>

        <span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> WorkFlowMessage BeforeExecNextEvent(InvokeMember invokeMember)

        {

            WorkFlowMessage workFlowMessage </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> InstanceMessage();

            </span><span style="color: rgba(0, 0, 255, 1)">try</span><span style="color: rgba(0, 0, 0, 1)">

            {

                </span><span style="color: rgba(0, 0, 255, 1)">using</span> (<span style="color: rgba(0, 0, 255, 1)">var</span> context = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> WikeDbContext())

                {

                    </span><span style="color: rgba(0, 0, 255, 1)">var</span> data = context.Holidays.FirstOrDefault(c =&gt; c.INSTANCEID ==<span style="color: rgba(0, 0, 0, 1)"> invokeMember.InstanceId);

                    </span><span style="color: rgba(0, 0, 255, 1)">if</span> (data != <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">)

                    {

                        </span><span style="color: rgba(0, 0, 255, 1)">if</span> (invokeMember.ActionSign == <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">start</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)

                        {

                            data.AUDITSTATE </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">审核中</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;

                        }

                        </span><span style="color: rgba(0, 0, 255, 1)">if</span> (invokeMember.ActionSign == <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">reject_to_start</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)

                        {

                            data.AUDITSTATE </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">未审核</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;

                        }

                        </span><span style="color: rgba(0, 0, 255, 1)">if</span> (invokeMember.ActionSign == <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">finish</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)

                        {

                            data.AUDITSTATE </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">已审核 </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;

                        }

                        context.Holidays.AddOrUpdate(data);

                        context.SaveChanges();

                    }

 

                }

            }

            </span><span style="color: rgba(0, 0, 255, 1)">catch</span><span style="color: rgba(0, 0, 0, 1)"> (Exception ex)

            {

                workFlowMessage.Code </span>=<span style="color: rgba(0, 0, 0, 1)"> CodeEum.Fail;

                workFlowMessage.Message </span>=<span style="color: rgba(0, 0, 0, 1)"> ex.Message;

 

            }

 

            </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> workFlowMessage;

        }</span></pre>
</div>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="3.8602212495335646" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-09 15:42">2025-05-09 15:41</span>&nbsp;
<a href="https://www.cnblogs.com/wikeflow">WikeSoft</a>&nbsp;
阅读(<span id="post_view_count">408</span>)&nbsp;
评论(<span id="post_comment_count">1</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18868313);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18868313', targetLink: 'https://www.cnblogs.com/wikeflow/p/18868313', title: '.net core workflow流程定义' })">举报</a>
</div>
        