
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Tzyyyyy/p/19001324" title="发布于 2025-07-23 19:07">
    <span role="heading" aria-level="2">（绕过最新360、火绒）shellcode分离加载实现CS免杀上线</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        基于XOR加密的Shellcode加载器项目，通过内存解密执行实现基础免杀，包含C++加载器和Python加密脚本，可绕过常规静态检测。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>基于XOR加密的Shellcode加载器项目，通过内存解密执行实现基础免杀，包含C++加载器和Python加密脚本，可绕过常规静态检测。</p>
<h2 id="项目地址">项目地址</h2>
<pre><code class="language-bash">https://github.com/tzyyyyyyy/shellcode_loader_bypass
</code></pre>
<h2 id="绕过效果">绕过效果</h2>
<p>截止时间为2025年7月23日<br>
<img src="https://img2024.cnblogs.com/blog/3242563/202507/3242563-20250723190458033-1178946046.png" alt="06b09e5a509bd5568becb56b7f132b9" loading="lazy"></p>
<h3 id="360安全卫士">360安全卫士</h3>
<p><img src="https://img2024.cnblogs.com/blog/3242563/202507/3242563-20250723190501594-1851390120.png" alt="acb33abb2190b35dc660395b72fd096" loading="lazy"></p>
<h3 id="火绒">火绒</h3>
<p><img src="https://img2024.cnblogs.com/blog/3242563/202507/3242563-20250723190504373-1773397128.png" alt="8140b0facb661b5ccae51c5cea68a68" loading="lazy"></p>
<h3 id="腾讯电脑管家">腾讯电脑管家</h3>
<p><img src="https://img2024.cnblogs.com/blog/3242563/202507/3242563-20250724091558923-1658651864.png" alt="bc50923aedfa7d333982d440b9a1e7c" loading="lazy"></p>
<h3 id="联想电脑管家">联想电脑管家</h3>
<p><img src="https://img2024.cnblogs.com/blog/3242563/202507/3242563-20250723190513475-1459760242.png" alt="a3cbfd4d92b9fb71182fed9899ddca6" loading="lazy"></p>
<h2 id="文件结构">文件结构</h2>
<pre><code class="language-bash">project/
├── bypass.cpp        # Shellcode 加载器
├── xor_encrypt.py    # Shellcode 加密工具
└── shellcode.bin     # 加密后的 Shellcode 文件（生成）
</code></pre>
<h2 id="功能特性">功能特性</h2>
<ul>
<li><strong>XOR 加密</strong>：使用 0x5A 密钥加密 Shellcode</li>
<li><strong>内存加载</strong>：直接在内存中解密并执行 Shellcode</li>
<li><strong>简单易用</strong>：只需两个文件即可完成加解密和加载流程</li>
</ul>
<h2 id="使用说明">使用说明</h2>
<h3 id="1-加密-shellcode">1. 加密 Shellcode</h3>
<pre><code class="language-bash">python xor_encrypt.py input.bin shellcode.bin
</code></pre>
<p>参数说明：</p>
<ul>
<li><code>input.bin</code>：原始 Shellcode 文件</li>
<li><code>shellcode.bin</code>：输出加密后的文件</li>
</ul>
<h3 id="2-编译加载器">2. 编译加载器</h3>
<p>使用 MinGW 编译：</p>
<pre><code class="language-bash">g++ bypass.cpp -o loader.exe -static -mwindows -s -Os
</code></pre>
<p>编译选项说明：</p>
<ul>
<li><code>-static</code>：静态链接</li>
<li><code>-mwindows</code>：隐藏控制台窗口</li>
<li><code>-s</code>：移除符号表</li>
<li><code>-Os</code>：优化大小</li>
</ul>
<h3 id="3-运行加载器">3. 运行加载器</h3>
<p>将 <code>shellcode.bin</code> 与 <code>loader.exe</code> 放在同一目录下，直接运行：</p>
<pre><code class="language-bash">loader.exe
</code></pre>
<h2 id="技术细节">技术细节</h2>
<h3 id="加载流程">加载流程</h3>
<ol>
<li>读取加密的 shellcode.bin 文件</li>
<li>在内存中进行 XOR 解密</li>
<li>分配可执行内存</li>
<li>创建线程执行 Shellcode</li>
</ol>
<h2 id="授权信息">授权信息</h2>
<p>本项目仅用于测试目的，禁止用于非法用途。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.6333333333333333" data-date-updated="2025-07-24 10:19">2025-07-23 19:07</span>&nbsp;
<a href="https://www.cnblogs.com/Tzyyyyy">Tzyyyyy</a>&nbsp;
阅读(<span id="post_view_count">133</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19001324);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19001324', targetLink: 'https://www.cnblogs.com/Tzyyyyy/p/19001324', title: '（绕过最新360、火绒）shellcode分离加载实现CS免杀上线' })">举报</a>
</div>
        