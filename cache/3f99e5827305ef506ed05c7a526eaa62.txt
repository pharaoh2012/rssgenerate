
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/cyzf/p/18683001" title="发布于 2025-01-21 10:46">
    <span role="heading" aria-level="2">菜单权限的设计与实现</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p><strong>说明<br></strong></p>
<p>&nbsp; &nbsp; 该文章是属于OverallAuth2.0系列文章，每周更新一篇该系列文章（从0到1完成系统开发）。</p>
<p>&nbsp;&nbsp;&nbsp; 该系统文章，我会尽量说的非常详细，做到不管新手、老手都能看懂。</p>
<p>&nbsp;&nbsp;&nbsp; 说明：OverallAuth2.0 是一个简单、易懂、功能强大的权限+可视化流程管理系统。</p>
<p>友情提醒：本篇文章是属于系列文章，看该文章前，建议先看之前文章，可以更好理解项目结构。</p>
<p><strong>qq群：801913255，进群有什么不懂的尽管问，群主都会耐心解答。</strong></p>
<p><strong>有兴趣的朋友，请关注我吧(*^▽^*)。</strong></p>
<p><strong><img src="https://img2024.cnblogs.com/blog/1158526/202408/1158526-20240824140446786-404771438.png" alt="" width="543" height="198"></strong></p>
<p><span style="color: rgba(255, 0, 0, 1)"><strong>关注我，学不会你来打我</strong></span></p>
<p style="text-align: center"><span style="font-size: 18pt; color: rgba(51, 153, 102, 1)">1、前言</span></p>
<p style="text-align: left"><span style="font-size: 16px; color: rgba(0, 0, 0, 1)">经过上一篇《</span><span style="font-size: 16px"><a href="https://www.cnblogs.com/cyzf/p/18609903" target="_blank">大话《权限设计》全篇，领略不同设计模式的魅力</a><a id="cb_post_title_url" class="postTitle2 vertical-middle" title="发布于 2024-12-16 13:44" href="https://www.cnblogs.com/cyzf/p/18609903"></a></span><span style="font-size: 16px; color: rgba(0, 0, 0, 1)">》对权限的介绍，相信大家看了之后，对权限的设计有了较为清晰的理解。而我们的OverallAuth2.0 也正好到了需要开发权限的阶段，借助这个机会，我们一起来看下菜单权限是怎么设计与实现的。</span></p>
<p style="text-align: center"><span style="font-size: 18pt; color: rgba(51, 153, 102, 1)">&nbsp;2、菜单权限实现流程</span></p>
<p style="text-align: left"><img src="https://img2024.cnblogs.com/blog/1158526/202501/1158526-20250121095056556-664940503.png" alt=""></p>
<p><span style="font-size: 16px">通过以上流程图可以看出。菜单权限实现的关键点就是用户、角色、菜单三者之间的关系。也正是上一篇文章中，我们说的到RABC基于角色的权限设计。当然这里的角色我们是分了等级的，也就是说上级角色会继承下级角色的权限。</span></p>
<p style="text-align: center"><span style="font-size: 18pt; color: rgba(51, 153, 102, 1)">3、数据表设计</span></p>
<p><span style="font-size: 16px"><img src="https://img2024.cnblogs.com/blog/1158526/202501/1158526-20250121100155231-1350097646.png" alt=""></span></p>
<p><span style="font-size: 16px">上图是菜单权限实现的主要表。从图中可以看出，<span><span>不同于一般的菜单权限设计，这次设计中我加入了公司表和系统表，它们的作用是为了实现不同公司、不同系统都可以在<span><span>【<span><span>OverallAuth2.0<span><span>】系统中实现菜单权限的分配。可以把【<span><span>OverallAuth2.0<span><span>】系统看作一个【<span><span>统一权限分发中心<span><span>】来统一分发权限。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p style="text-align: center"><span style="font-size: 18pt; color: rgba(51, 153, 102, 1)">4、建立角色与菜单的关系</span></p>
<p><span style="font-size: 16px"><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>要通过RABC实现【菜单权限】，我们需要建立菜单与角色的关系，也就是要往【Sys_MenuRoleRelation】表中写入数据。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><span style="font-size: 16px"><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>那么接下来，我们需要实现以下2张图中的功能。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><span style="font-size: 16px"><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><img src="https://img2024.cnblogs.com/blog/1158526/202501/1158526-20250121101215416-1305397134.png" alt=""></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><img src="https://img2024.cnblogs.com/blog/1158526/202501/1158526-20250121101222780-889781441.png" alt=""></p>
<p><span style="font-size: 16px">要保存菜单与角色的关系，主要有3个接口</span></p>
<p><span style="font-size: 16px">第一个接口：根据公司key和系统key，获取对应的菜单</span></p>
<div class="cnblogs_code">
<pre>   <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
   <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 获取公司下系统的菜单
   </span><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
   <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="corporationKey"&gt;</span><span style="color: rgba(0, 128, 0, 1)">公司key</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
   <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="systemKey"&gt;</span><span style="color: rgba(0, 128, 0, 1)">系统key</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
   <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;returns&gt;&lt;/returns&gt;</span>
   <span style="color: rgba(0, 0, 255, 1)">public</span> ReceiveStatus&lt;TreeOutPut&gt; GetCorporationSystemMenuList(<span style="color: rgba(0, 0, 255, 1)">string</span> corporationKey, <span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)"> systemKey)
   {
       ReceiveStatus</span>&lt;TreeOutPut&gt; receiveStatus = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)">();
       </span><span style="color: rgba(0, 0, 255, 1)">if</span> (<span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)">.IsNullOrEmpty(corporationKey))
           </span><span style="color: rgba(0, 0, 255, 1)">return</span> ExceptionHelper&lt;TreeOutPut&gt;.CustomExceptionData(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">公司不能为空！</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
       </span><span style="color: rgba(0, 0, 255, 1)">if</span> (<span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)">.IsNullOrEmpty(systemKey))
           </span><span style="color: rgba(0, 0, 255, 1)">return</span> ExceptionHelper&lt;TreeOutPut&gt;.CustomExceptionData(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">系统不能为空！</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);

       </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">公司信息</span>
       <span style="color: rgba(0, 0, 255, 1)">var</span> corporationModel =<span style="color: rgba(0, 0, 0, 1)"> _sysCorporationRepository.GetByKey(corporationKey, BaseSqlRepository.sysCorporation_selectByKeySql);
       </span><span style="color: rgba(0, 0, 255, 1)">if</span> (corporationModel == <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">)
           </span><span style="color: rgba(0, 0, 255, 1)">return</span> ExceptionHelper&lt;TreeOutPut&gt;.CustomExceptionData(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">公司不存在！</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
       </span><span style="color: rgba(0, 0, 255, 1)">if</span> (corporationModel.IsOpen == <span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">)
           </span><span style="color: rgba(0, 0, 255, 1)">return</span> ExceptionHelper&lt;TreeOutPut&gt;.CustomExceptionData(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">公司已停用，不能设置！</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);

       </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">系统信息</span>
       <span style="color: rgba(0, 0, 255, 1)">var</span> sysModel =<span style="color: rgba(0, 0, 0, 1)"> _sysSystemRepository.GetByKey(systemKey, BaseSqlRepository.sysSystem_selectByKeySql);
       </span><span style="color: rgba(0, 0, 255, 1)">if</span> (sysModel == <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">)
           </span><span style="color: rgba(0, 0, 255, 1)">return</span> ExceptionHelper&lt;TreeOutPut&gt;.CustomExceptionData(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">系统不存在！</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
       </span><span style="color: rgba(0, 0, 255, 1)">if</span> (sysModel.IsOpen == <span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">)
           </span><span style="color: rgba(0, 0, 255, 1)">return</span> ExceptionHelper&lt;TreeOutPut&gt;.CustomExceptionData(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">系统已停用,不能设置！</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);

       </span><span style="color: rgba(0, 0, 255, 1)">var</span> corporationSystemMenuList =<span style="color: rgba(0, 0, 0, 1)"> _menuRepository.GetCorporationSystemMenuList(corporationKey, systemKey);
       </span><span style="color: rgba(0, 0, 255, 1)">foreach</span> (<span style="color: rgba(0, 0, 255, 1)">var</span> item <span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)"> corporationSystemMenuList)
       {
           item.disabled </span>= Const.OverallAuth_MenuKey.Any(f =&gt; f == item.key) ? <span style="color: rgba(0, 0, 255, 1)">true</span> : <span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">;
       }
       
       </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">把菜单递归转换成树形结构</span>
       <span style="color: rgba(0, 0, 255, 1)">var</span> tree =<span style="color: rgba(0, 0, 0, 1)"> corporationSystemMenuList.ConvertTreeData();
       receiveStatus.data </span>=<span style="color: rgba(0, 0, 0, 1)"> tree;
       </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> receiveStatus;
   }</span></pre>
</div>
<p><span style="font-size: 16px">该接口获取系统对应的菜单，用于呈现到界面上，有人可能会问，为什么要传公司key和系统key。文章开头也有提到，<span><span>由于overallAuth2.0设计的初衷是，统一权限的分发中心，可以支持多公司、多系统的权限分发，系统中存在不同公司、不同系统的菜单<span><span>。所以我们在接口处需要传递公司key和系统key获取菜单。</span></span></span></span></span></p>
<p><span style="font-size: 16px"><span><span><span><span>第二个接口：根据角色获取菜单</span></span></span></span></span></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 根据角色id获取权限菜单
</span><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="roleId"&gt;</span><span style="color: rgba(0, 128, 0, 1)">角色id</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="corporationKey"&gt;</span><span style="color: rgba(0, 128, 0, 1)">公司key</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="isContainSubordinate"&gt;</span><span style="color: rgba(0, 128, 0, 1)">是否包含下级角色</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;returns&gt;</span><span style="color: rgba(0, 128, 0, 1)">返回角色所属菜单key</span><span style="color: rgba(128, 128, 128, 1)">&lt;/returns&gt;</span>
<span style="color: rgba(0, 0, 255, 1)">public</span> ReceiveStatus&lt;menuOrRoleOutPut&gt; GetMenuKeyByRoleId(<span style="color: rgba(0, 0, 255, 1)">int</span> roleId, <span style="color: rgba(0, 0, 255, 1)">bool</span> isContainSubordinate, <span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)"> corporationKey)
{
    ReceiveStatus</span>&lt;menuOrRoleOutPut&gt; receiveStatus = <span style="color: rgba(0, 0, 255, 1)">new</span> ReceiveStatus&lt;menuOrRoleOutPut&gt;<span style="color: rgba(0, 0, 0, 1)">();
    List</span>&lt;menuOrRoleOutPut&gt; selectedItem = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)">();

    </span><span style="color: rgba(0, 0, 255, 1)">if</span> (<span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)">.IsNullOrWhiteSpace(corporationKey))
        </span><span style="color: rgba(0, 0, 255, 1)">return</span> ExceptionHelper&lt;menuOrRoleOutPut&gt;.CustomExceptionData(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">请先登录</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
    </span><span style="color: rgba(0, 0, 255, 1)">if</span> (roleId &gt; <span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">)
    {
        </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">获取角色</span>
        <span style="color: rgba(0, 0, 255, 1)">var</span> roleModel =<span style="color: rgba(0, 0, 0, 1)"> _sysRoleRepository.GetByKey(roleId.ToString(), BaseSqlRepository.sysRole_selectByKeySql);
        </span><span style="color: rgba(0, 0, 255, 1)">if</span> (roleModel == <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">)
            </span><span style="color: rgba(0, 0, 255, 1)">return</span> ExceptionHelper&lt;menuOrRoleOutPut&gt;.CustomExceptionData(<span style="color: rgba(0, 0, 255, 1)">string</span>.Format(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">角色id为【{0}】的角色不存在</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, roleId));

        </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">当前角色菜单</span>
        <span style="color: rgba(0, 0, 255, 1)">var</span> currentRoleMenuList = _sysMenuRoleRelationRepository.GetSysMenuRoleRelationByRoleId(<span style="color: rgba(0, 0, 255, 1)">new</span> List&lt;<span style="color: rgba(0, 0, 255, 1)">int</span>&gt;<span style="color: rgba(0, 0, 0, 1)"> { roleId });
        </span><span style="color: rgba(0, 0, 255, 1)">foreach</span> (<span style="color: rgba(0, 0, 255, 1)">var</span> item <span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)"> currentRoleMenuList)
        {
            menuOrRoleOutPut menuOrRoleOutPut </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)">()
            {
                subordinateRoleMenu </span>= <span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">,
                roleKey </span>=<span style="color: rgba(0, 0, 0, 1)"> roleId,
                menuKey </span>= item.MenuId ?? <span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)">.Empty
            };
            selectedItem.Add(menuOrRoleOutPut);
        }
        </span><span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)"> (isContainSubordinate)
        {
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">递归获取下级角色菜单</span>
            <span style="color: rgba(0, 0, 255, 1)">var</span> roleIdList =<span style="color: rgba(0, 0, 0, 1)"> RoleCore.GetChildrenRoleById(roleId, corporationKey, Const.OverallAuth_SystemKey);
            </span><span style="color: rgba(0, 0, 255, 1)">var</span> menuRoleList =<span style="color: rgba(0, 0, 0, 1)"> _sysMenuRoleRelationRepository.GetSysMenuRoleRelationByRoleId(roleIdList);
            </span><span style="color: rgba(0, 0, 255, 1)">foreach</span> (<span style="color: rgba(0, 0, 255, 1)">var</span> item <span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)"> menuRoleList)
            {
                menuOrRoleOutPut menuOrRoleOutPut </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)">()
                {
                    subordinateRoleMenu </span>= <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">,
                    roleKey </span>=<span style="color: rgba(0, 0, 0, 1)"> roleId,
                    menuKey </span>= item.MenuId ?? <span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)">.Empty
                };
                selectedItem.Add(menuOrRoleOutPut);
            }
        }
    }
    receiveStatus.data </span>=<span style="color: rgba(0, 0, 0, 1)"> selectedItem;
    receiveStatus.msg </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">获取成功</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;
    </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> receiveStatus;
}</span></pre>
</div>
<p><span style="font-size: 16px">该接口主要是获取角色已经分配好的菜单，用于默认显示在界面上。</span></p>
<p><span style="font-size: 16px">第三个接口：保存角色与菜单关系</span></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 保存角色权限
</span><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="roleMenuExend"&gt;</span><span style="color: rgba(0, 128, 0, 1)">角色和菜单模型</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="userId"&gt;</span><span style="color: rgba(0, 128, 0, 1)">操作人员id</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
<span style="color: rgba(0, 0, 255, 1)">public</span> ReceiveStatus SaveRoleAuthority(RoleMenuInput roleMenuExend, <span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)"> userId)
{
    ReceiveStatus receiveStatus </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)">();
    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">获取角色</span>
    <span style="color: rgba(0, 0, 255, 1)">var</span> roleModel =<span style="color: rgba(0, 0, 0, 1)"> _sysRoleRepository.GetByKey(roleMenuExend.roleId.ToString(), BaseSqlRepository.sysRole_selectByKeySql);
    </span><span style="color: rgba(0, 0, 255, 1)">if</span> (roleModel == <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">)
        </span><span style="color: rgba(0, 0, 255, 1)">return</span> ExceptionHelper.CustomException(<span style="color: rgba(0, 0, 255, 1)">string</span>.Format(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">角色id为【{0}】的角色不存在</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, roleMenuExend.roleId));
    </span><span style="color: rgba(0, 0, 255, 1)">var</span> dateTime =<span style="color: rgba(0, 0, 0, 1)"> DateTime.Now;

    List</span>&lt;SysMenuRoleRelation&gt; list = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)">();
    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">全选菜单</span>
    <span style="color: rgba(0, 0, 255, 1)">foreach</span> (<span style="color: rgba(0, 0, 255, 1)">var</span> item <span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)"> roleMenuExend.menuIds)
    {
        SysMenuRoleRelation sysMenuRoleRelation </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> SysMenuRoleRelation
        {
            CreateTime </span>=<span style="color: rgba(0, 0, 0, 1)"> dateTime,
            RoleId </span>=<span style="color: rgba(0, 0, 0, 1)"> roleMenuExend.roleId,
            CreateUser </span>=<span style="color: rgba(0, 0, 0, 1)"> userId,
            IsHalfSelected </span>= <span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">,
            MenuId </span>=<span style="color: rgba(0, 0, 0, 1)"> item,
        };
        list.Add(sysMenuRoleRelation);
    }

    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">半选菜单</span>
    <span style="color: rgba(0, 0, 255, 1)">foreach</span> (<span style="color: rgba(0, 0, 255, 1)">var</span> item <span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)"> roleMenuExend.isHalfMenuIds)
    {
        SysMenuRoleRelation sysMenuRoleRelation </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> SysMenuRoleRelation
        {
            CreateTime </span>=<span style="color: rgba(0, 0, 0, 1)"> dateTime,
            RoleId </span>=<span style="color: rgba(0, 0, 0, 1)"> roleMenuExend.roleId,
            CreateUser </span>=<span style="color: rgba(0, 0, 0, 1)"> userId,
            IsHalfSelected </span>= <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">,
            MenuId </span>=<span style="color: rgba(0, 0, 0, 1)"> item,
        };
        list.Add(sysMenuRoleRelation);
    }

    TransactionHelper.ExecuteTransaction(() </span>=&gt;<span style="color: rgba(0, 0, 0, 1)">
    {
        _sysMenuRoleRelationRepository.DeleteByRoleId(roleMenuExend.roleId);
        _sysMenuRoleRelationRepository.BatchInsert(list);
    });
    </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> receiveStatus;
}</span></pre>
</div>
<p><span style="font-size: 16px">通过以上3个接口，我们就能自由的分配角色与菜单的关系。</span></p>
<p style="text-align: center"><span style="font-size: 18pt; color: rgba(51, 153, 102, 1)">5、建立用户与角色的关系</span></p>
<p><span style="font-size: 16px">有了角色与菜单关系后，我们还需要建立用户与角色的关系，也就是要往【Sys_UserRoleRelation】中插入数据。</span></p>
<p><span style="font-size: 16px">同理我们要实现以下2张图的业务逻辑</span></p>
<p><span style="font-size: 16px"><img src="https://img2024.cnblogs.com/blog/1158526/202501/1158526-20250121103045229-796884639.png" alt=""></span></p>
<p><img src="https://img2024.cnblogs.com/blog/1158526/202501/1158526-20250121103049309-207489373.png" alt=""></p>
<p><span style="font-size: 16px">同样，要建立用户与角色的关系，我们同样要实现3个接口</span></p>
<p><span style="font-size: 16px">第一个接口：获取系统角色数据</span></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 获取树形结构角色数据
</span><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="corporationKey"&gt;</span><span style="color: rgba(0, 128, 0, 1)">公司key</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="systemKey"&gt;</span><span style="color: rgba(0, 128, 0, 1)">系统key</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;returns&gt;&lt;/returns&gt;</span>
<span style="color: rgba(0, 0, 255, 1)">public</span> ReceiveStatus&lt;TreeOutPut&gt; GetRoleTree(<span style="color: rgba(0, 0, 255, 1)">string</span> corporationKey, <span style="color: rgba(0, 0, 255, 1)">string</span>?<span style="color: rgba(0, 0, 0, 1)"> systemKey)
{
    ReceiveStatus</span>&lt;TreeOutPut&gt; receiveStatus = <span style="color: rgba(0, 0, 255, 1)">new</span> ReceiveStatus&lt;TreeOutPut&gt;<span style="color: rgba(0, 0, 0, 1)">();
    </span><span style="color: rgba(0, 0, 255, 1)">if</span> (<span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)">.IsNullOrWhiteSpace(corporationKey))
        </span><span style="color: rgba(0, 0, 255, 1)">return</span> ExceptionHelper&lt;TreeOutPut&gt;.CustomExceptionData(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">请选择公司！</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);

    </span><span style="color: rgba(0, 0, 255, 1)">if</span> (!<span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)">.IsNullOrWhiteSpace(systemKey))
    {
        </span><span style="color: rgba(0, 0, 255, 1)">var</span> systemModel =<span style="color: rgba(0, 0, 0, 1)"> _sysSystemRepository.GetByKey(systemKey, BaseSqlRepository.sysSystem_selectByKeySql);
        </span><span style="color: rgba(0, 0, 255, 1)">if</span> (systemModel == <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">)
            </span><span style="color: rgba(0, 0, 255, 1)">return</span> ExceptionHelper&lt;TreeOutPut&gt;.CustomExceptionData(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">系统不存在或已删除！</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
    }

    </span><span style="color: rgba(0, 0, 255, 1)">var</span> corporationModel =<span style="color: rgba(0, 0, 0, 1)"> _sysCorporationRepository.GetByKey(corporationKey, BaseSqlRepository.sysCorporation_selectByKeySql);
    </span><span style="color: rgba(0, 0, 255, 1)">if</span> (corporationModel == <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">)
        </span><span style="color: rgba(0, 0, 255, 1)">return</span> ExceptionHelper&lt;TreeOutPut&gt;.CustomExceptionData(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">公司不存在或已删除！</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);

    </span><span style="color: rgba(0, 0, 255, 1)">var</span> corporationSystemList =<span style="color: rgba(0, 0, 0, 1)"> _sysRoleRepository.GetRoleList(corporationKey, systemKey);

    List</span>&lt;TreeOutPut&gt; list =<span style="color: rgba(0, 0, 0, 1)">
    [
        </span><span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> TreeOutPut
        {
            key </span>=<span style="color: rgba(0, 0, 0, 1)"> corporationModel.CorporationKey,
            pKey </span>= <span style="color: rgba(128, 0, 0, 1)">""</span><span style="color: rgba(0, 0, 0, 1)">,
            label </span>=<span style="color: rgba(0, 0, 0, 1)"> corporationModel.CorporationName,
        },
    ];
    list.AddRange(corporationSystemList);

    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">递归获取角色树</span>
    <span style="color: rgba(0, 0, 255, 1)">var</span> tree =<span style="color: rgba(0, 0, 0, 1)"> list.ConvertTreeData();
    receiveStatus.data </span>=<span style="color: rgba(0, 0, 0, 1)"> tree;
    </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> receiveStatus;
}</span></pre>
</div>
<p><span style="font-size: 16px">该接口就是，获取系统中所有的角色<br>第二个接口：获取已分配用户的角色数据</span></p>
<div class="cnblogs_code">
<pre> <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
 <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 根据用户id获取对应角色
 </span><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
 <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="userId"&gt;</span><span style="color: rgba(0, 128, 0, 1)">用户ID</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
 <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;returns&gt;</span><span style="color: rgba(0, 128, 0, 1)">返回用户所属角色key</span><span style="color: rgba(128, 128, 128, 1)">&lt;/returns&gt;</span>
 <span style="color: rgba(0, 0, 255, 1)">public</span> ReceiveStatus&lt;<span style="color: rgba(0, 0, 255, 1)">int</span>&gt; GetUserRole(<span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)"> userId)
 {
     ReceiveStatus</span>&lt;<span style="color: rgba(0, 0, 255, 1)">int</span>&gt; receiveStatus = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)">();

     </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">获取用户角色，并验证</span>
     <span style="color: rgba(0, 0, 255, 1)">var</span> model =<span style="color: rgba(0, 0, 0, 1)"> _sysUserRepository.GetByKey(userId, BaseSqlRepository.sysUser_selectByKeySql);
     </span><span style="color: rgba(0, 0, 255, 1)">if</span> (model == <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">)
         </span><span style="color: rgba(0, 0, 255, 1)">return</span> ExceptionHelper&lt;<span style="color: rgba(0, 0, 255, 1)">int</span>&gt;.CustomExceptionData(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">用户不存在或已停用</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);

     </span><span style="color: rgba(0, 0, 255, 1)">var</span> userRoleList =<span style="color: rgba(0, 0, 0, 1)"> _sysUserRoleRelationRepository.GetSysUserRoleRelationsByUserId(userId);
     </span><span style="color: rgba(0, 0, 255, 1)">var</span> roleIdList = userRoleList.Select(f =&gt;<span style="color: rgba(0, 0, 0, 1)"> f.RoleId).ToList();

     receiveStatus.data </span>=<span style="color: rgba(0, 0, 0, 1)"> roleIdList;
     </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> receiveStatus;
 }</span></pre>
</div>
<p><span style="font-size: 16px">第三个接口：设置（保存）用户角色</span></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 设置用户角色
</span><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="userOrRoleInput"&gt;</span><span style="color: rgba(0, 128, 0, 1)">传入模型</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="userId"&gt;</span><span style="color: rgba(0, 128, 0, 1)">修改用户id</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
<span style="color: rgba(0, 0, 255, 1)">public</span> ReceiveStatus SetUserRole(UserRoleInput userOrRoleInput, <span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)"> userId)
{
    ReceiveStatus receiveStatus </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> ReceiveStatus();
    </span><span style="color: rgba(0, 0, 255, 1)">if</span> (userOrRoleInput.RoleId.Count == <span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">)
        </span><span style="color: rgba(0, 0, 255, 1)">return</span> ExceptionHelper.CustomException(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">没有选择任何角色！</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
    </span><span style="color: rgba(0, 0, 255, 1)">var</span> userModel =<span style="color: rgba(0, 0, 0, 1)"> _sysUserRepository.GetByKey(userOrRoleInput.UserId, BaseSqlRepository.sysUser_selectByKeySql);
    </span><span style="color: rgba(0, 0, 255, 1)">if</span> (userModel == <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">)
        </span><span style="color: rgba(0, 0, 255, 1)">return</span> ExceptionHelper.CustomException(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">该用户不存在</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);

    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">写入数据库，加入事务</span>
    TransactionHelper.ExecuteTransaction(() =&gt;<span style="color: rgba(0, 0, 0, 1)">
    {
        _sysUserRoleRelationRepository.DeleteByUserId(userOrRoleInput.UserId);
        </span><span style="color: rgba(0, 0, 255, 1)">var</span> dateTime =<span style="color: rgba(0, 0, 0, 1)"> DateTime.Now;
        </span><span style="color: rgba(0, 0, 255, 1)">foreach</span> (<span style="color: rgba(0, 0, 255, 1)">var</span> item <span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)"> userOrRoleInput.RoleId)
        {
            SysUserRoleRelation sysUserRoleRelation </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> SysUserRoleRelation
            {
                RoleId </span>=<span style="color: rgba(0, 0, 0, 1)"> item,
                UserId </span>=<span style="color: rgba(0, 0, 0, 1)"> userOrRoleInput.UserId,
                CreateUser </span>=<span style="color: rgba(0, 0, 0, 1)"> userId.ToString(),
                CreateTime </span>=<span style="color: rgba(0, 0, 0, 1)"> dateTime
            };
            _sysUserRoleRelationRepository.Insert(sysUserRoleRelation, BaseSqlRepository.sysUserRoleRelation_insertSql);
        }
    });
    </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> receiveStatus;
}</span></pre>
</div>
<p><span style="font-size: 16px">该接口，就是保存角色与用户的关系。</span></p>
<p style="text-align: center"><span style="font-size: 18pt; color: rgba(51, 153, 102, 1)">6、登录验证</span></p>
<p><span style="font-size: 16px"><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>有了以上的关系，我们就需要再登录是做好验证。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><span style="font-size: 16px">大致的验证有几点</span></p>
<p><span style="font-size: 16px">1、用户是否存在</span></p>
<p><span style="font-size: 16px">2、用户是否启用</span></p>
<p><span style="font-size: 16px">3、用户是否分配角色</span></p>
<p><span style="font-size: 16px">4、角色是否启用</span></p>
<p><span style="font-size: 16px">5、角色是否分配菜单</span></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 获取用户所属菜单
</span><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="userId"&gt;</span><span style="color: rgba(0, 128, 0, 1)">用户id</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="corporationKey"&gt;</span><span style="color: rgba(0, 128, 0, 1)">公司key</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;returns&gt;</span><span style="color: rgba(0, 128, 0, 1)">返回用户所属菜单</span><span style="color: rgba(128, 128, 128, 1)">&lt;/returns&gt;</span>
<span style="color: rgba(0, 0, 255, 1)">public</span> ReceiveStatus&lt;SysMenuOutPut&gt; GetMenuByUserId(<span style="color: rgba(0, 0, 255, 1)">string</span> userId, <span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)"> corporationKey)
{
    ReceiveStatus</span>&lt;SysMenuOutPut&gt; receiveStatus = <span style="color: rgba(0, 0, 255, 1)">new</span> ReceiveStatus&lt;SysMenuOutPut&gt;<span style="color: rgba(0, 0, 0, 1)">();
        
    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">获取用户，并验证</span>
    <span style="color: rgba(0, 0, 255, 1)">var</span> userModel =<span style="color: rgba(0, 0, 0, 1)"> _sysUserRepository.GetByKey(userId, BaseSqlRepository.sysUser_selectByKeySql);
    </span><span style="color: rgba(0, 0, 255, 1)">if</span> (userModel == <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">)
        </span><span style="color: rgba(0, 0, 255, 1)">return</span> ExceptionHelper&lt;SysMenuOutPut&gt;.CustomExceptionData(<span style="color: rgba(0, 0, 255, 1)">string</span>.Format(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">用户Id【{0}】不存在</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, userId));
    </span><span style="color: rgba(0, 0, 255, 1)">if</span> (!<span style="color: rgba(0, 0, 0, 1)">userModel.IsOpen)
        </span><span style="color: rgba(0, 0, 255, 1)">return</span> ExceptionHelper&lt;SysMenuOutPut&gt;.CustomExceptionData(<span style="color: rgba(0, 0, 255, 1)">string</span>.Format(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">用户【{0}】未启用</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, userModel.UserName));

    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">获取用户角色，并验证</span>
    <span style="color: rgba(0, 0, 255, 1)">var</span> userRoleList = _sysUserRoleRelationRepository.GetSysUserRoleRelationsByUserId(userModel.UserId ?? <span style="color: rgba(0, 0, 255, 1)">string</span>.Empty).Where(f =&gt;<span style="color: rgba(0, 0, 0, 1)"> f.IsOpen).ToList();
    </span><span style="color: rgba(0, 0, 255, 1)">if</span> (userRoleList == <span style="color: rgba(0, 0, 255, 1)">null</span> || userRoleList.Count == <span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">)
        </span><span style="color: rgba(0, 0, 255, 1)">return</span> ExceptionHelper&lt;SysMenuOutPut&gt;.CustomExceptionData(<span style="color: rgba(0, 0, 255, 1)">string</span>.Format(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">用户【{0}】未分配角色,或绑定角色未开启</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, userModel.UserName));
    </span><span style="color: rgba(0, 0, 255, 1)">var</span> roleIdList = userRoleList.Select(f =&gt;<span style="color: rgba(0, 0, 0, 1)"> f.RoleId).ToList();

    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">递归获取角色下，说有角色，并去重  ps:因为我们的角色有继承关系，上级角色会继承下级角色的所有权限</span>
    List&lt;<span style="color: rgba(0, 0, 255, 1)">int</span>&gt; roleKeyList = <span style="color: rgba(0, 0, 255, 1)">new</span> List&lt;<span style="color: rgba(0, 0, 255, 1)">int</span>&gt;<span style="color: rgba(0, 0, 0, 1)">();
    </span><span style="color: rgba(0, 0, 255, 1)">foreach</span> (<span style="color: rgba(0, 0, 255, 1)">var</span> role <span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)"> roleIdList)
    {
        </span><span style="color: rgba(0, 0, 255, 1)">var</span> key =<span style="color: rgba(0, 0, 0, 1)"> RoleCore.GetChildrenRoleById(role, corporationKey, Const.OverallAuth_SystemKey);
        roleKeyList.AddRange(key);
        roleKeyList.Add(role);
    }
    roleKeyList </span>=<span style="color: rgba(0, 0, 0, 1)"> roleKeyList.Distinct().ToList();

    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">获取角色菜单</span>
    <span style="color: rgba(0, 0, 255, 1)">var</span> menuRoleList =<span style="color: rgba(0, 0, 0, 1)"> _sysMenuRoleRelationRepository.GetSysMenuRoleRelationByRoleId(roleKeyList);
    </span><span style="color: rgba(0, 0, 255, 1)">if</span> (menuRoleList == <span style="color: rgba(0, 0, 255, 1)">null</span> || menuRoleList.Count == <span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">)
        </span><span style="color: rgba(0, 0, 255, 1)">return</span> ExceptionHelper&lt;SysMenuOutPut&gt;.CustomExceptionData(<span style="color: rgba(0, 0, 255, 1)">string</span>.Format(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">用户【{0}】未分配菜单</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, userModel.UserName));

    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">递归菜单并返回</span>
    <span style="color: rgba(0, 0, 255, 1)">var</span> menuIdList = menuRoleList.GroupBy(f =&gt; f.MenuId).Select(f =&gt;<span style="color: rgba(0, 0, 0, 1)"> f.Key).ToList();
    </span><span style="color: rgba(0, 0, 255, 1)">var</span> menuList =<span style="color: rgba(0, 0, 0, 1)"> _menuRepository.GetMenusByMenuIdList(menuIdList);
    List</span>&lt;SysMenuOutPut&gt; list = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)">();

    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">模型的转换</span>
    <span style="color: rgba(0, 0, 255, 1)">foreach</span> (<span style="color: rgba(0, 0, 255, 1)">var</span> item <span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)"> menuList)
    {
        SysMenuOutPut model </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)">()
        {
            Id </span>=<span style="color: rgba(0, 0, 0, 1)"> item.Id,
            Pid </span>=<span style="color: rgba(0, 0, 0, 1)"> item.Pid,
            CorporationKey </span>=<span style="color: rgba(0, 0, 0, 1)"> item.CorporationKey,
            SystemKey </span>=<span style="color: rgba(0, 0, 0, 1)"> item.SystemKey,
            Path </span>=<span style="color: rgba(0, 0, 0, 1)"> item.Path,
            Name </span>=<span style="color: rgba(0, 0, 0, 1)"> item.Name,
            MenuIcon </span>=<span style="color: rgba(0, 0, 0, 1)"> item.MenuIcon,
            Component </span>=<span style="color: rgba(0, 0, 0, 1)"> item.Component,
            IsOpen </span>=<span style="color: rgba(0, 0, 0, 1)"> item.IsOpen,
            Sort </span>=<span style="color: rgba(0, 0, 0, 1)"> item.Sort,
            RequireAuth </span>=<span style="color: rgba(0, 0, 0, 1)"> item.RequireAuth,
            Redirect </span>=<span style="color: rgba(0, 0, 0, 1)"> item.Redirect,
            CreateTime </span>=<span style="color: rgba(0, 0, 0, 1)"> item.CreateTime,
            CreateUser </span>=<span style="color: rgba(0, 0, 0, 1)"> item.CreateUser,
        };
        list.Add(model);
    }

    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">把菜单递归转换成前端能识别的树形接口</span>
    <span style="color: rgba(0, 0, 255, 1)">var</span> menuDaoList =<span style="color: rgba(0, 0, 0, 1)"> MenuCore.GetMenuTreeList(list);
    receiveStatus.data </span>=<span style="color: rgba(0, 0, 0, 1)"> menuDaoList;
    receiveStatus.msg </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">获取成功</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;
    </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> receiveStatus;
}</span></pre>
</div>
<p><span style="font-size: 16px">该接口就是用户在登录之后，获取属于自身的菜单，然后用于绑定到路由菜单中。</span></p>
<p>&nbsp;</p>
<p><span style="font-size: 16px; color: rgba(0, 0, 0, 1)">提示：如果你是跟着本人的系列文章搭建的系统。那么需要做以下修改</span></p>
<p><span style="font-size: 16px; color: rgba(0, 0, 0, 1)">找到路径：store-&gt;user.ts&nbsp;把loadMenus()方法中的getMenuTreeData()方法替换成getMenuByUserId()方法即可实现菜单权限。</span></p>
<p><span style="font-size: 18pt; color: rgba(255, 0, 0, 1)">需要源码的，关注公众号，发送【权限】获取源码</span></p>
<p>以上就是本篇文章的全部内容，感谢耐心观看</p>
<p><strong><strong>后端WebApi&nbsp;</strong>预览地址：http://139.155.137.144:8880/swagger/index.html</strong></p>
<p><strong>前端vue 预览地址：http://139.155.137.144:8881</strong></p>
<p><strong>关注公众号：发送【权限】，获取源码</strong></p>
<p><strong>有兴趣的朋友，请关注我微信公众号吧(*^▽^*)。</strong></p>
<p class="code-snippet__js" data-lang="ruby"><strong><img src="https://img2024.cnblogs.com/blog/1158526/202408/1158526-20240824140446786-404771438.png" alt="" width="543" height="198"></strong></p>
<p>关注我：一个全栈多端的宝藏博主，定时分享技术文章，不定时分享开源项目。关注我，带你认识不一样的程序世界</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.06391132987962964" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-21 10:46">2025-01-21 10:46</span>&nbsp;
<a href="https://www.cnblogs.com/cyzf">陈逸子风</a>&nbsp;
阅读(<span id="post_view_count">16</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18683001" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18683001);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18683001', targetLink: 'https://www.cnblogs.com/cyzf/p/18683001', title: '菜单权限的设计与实现' })">举报</a>
</div>
        