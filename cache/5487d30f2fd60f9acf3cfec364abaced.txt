
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/danieldaren/p/18912626" title="发布于 2025-06-05 16:47">
    <span role="heading" aria-level="2">如何使用MCP开发一个客户端和服务端</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p style="font-size: 0; line-height: 0; margin: 0">&nbsp;</p><section style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px"><h1 style="text-align: center; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 19.6px; display: table; padding: 0.5em 1em; border-bottom: 2px solid rgba(15, 76, 129, 1); margin: 0 auto 1em; color: rgba(15, 76, 129, 1); font-weight: bold; text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1)">如何使用MCP开发一个客户端和服务端</h1><h3 style="text-align: left; line-height: 1.2; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 16.8px; padding: 0 0.2em 0 12px; margin: 2em 8px 0.75em 0; color: rgba(15, 76, 129, 1); font-weight: bold; border-left: 4px solid rgba(15, 76, 129, 1); border-bottom: 1px dashed rgba(15, 76, 129, 1)"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">一、MCP和API以及Function Call核心概念对比</strong></h3>
        <section style="padding: 0 8px; max-width: 100%; overflow: auto">
          <table class="preview-table">
            <thead style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; background: rgba(0, 0, 0, 0.05); font-weight: bold; color: rgba(255, 255, 255, 1)"><tr><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">特性</strong></td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">API</strong></td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">Function Call</strong></td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">MCP (Model Context Protocol)</strong></td></tr></thead>
            <tbody><tr><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">定位</strong></td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all">通用应用程序接口</td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all">大模型原生扩展能力</td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">标准化模型-服务交互协议</strong></td></tr><tr><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">耦合度</strong></td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all">与具体服务绑定</td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all">与模型强绑定 (如 GPT-4-turbo)</td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">与模型解耦</strong>，跨平台通用</td></tr><tr><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">交互模式</strong></td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all">直接请求-响应</td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all">模型生成结构化调用建议</td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">JSON-RPC 2.0 标准化通信</strong></td></tr><tr><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">典型场景</strong></td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all">数据集成、微服务通信</td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all">简单实时操作 (天气/订单查询)</td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">复杂异步任务 &amp; 跨系统整合</strong></td></tr></tbody>
          </table>
        </section>
      <hr style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: none; -webkit-transform-origin: 0 0; -webkit-transform: scale(1, 0.5); transform-origin: left top; transform: scale(1, 0.5); height: 1px; margin: 2em 0; background: linear-gradient(90deg, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0))"><h3 style="text-align: left; line-height: 1.2; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 16.8px; padding: 0 0.2em 0 12px; margin: 2em 8px 0.75em 0; color: rgba(15, 76, 129, 1); font-weight: bold; border-left: 4px solid rgba(15, 76, 129, 1); border-bottom: 1px dashed rgba(15, 76, 129, 1)"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">二、 MCP 协议</strong></h3><h3 style="text-align: left; line-height: 1.2; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 16.8px; padding: 0 0.2em 0 12px; margin: 2em 8px 0.75em 0; color: rgba(15, 76, 129, 1); font-weight: bold; border-left: 4px solid rgba(15, 76, 129, 1); border-bottom: 1px dashed rgba(15, 76, 129, 1)">1. 什么是MCP协议</h3><p style="text-align: justify; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; margin: 1.5em 8px; letter-spacing: 0.1em; color: rgba(63, 63, 63, 1)">模型上下文协议（Model Context <span style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; color: rgba(87, 107, 149, 1)">Protocol</span>）是一种专为大语言模型设计的标准化协议，它允许LLM以安全、一致的方式与外部系统交互。MCP协议常被描述为"AI的USB-C接口"，提供了一种统一的方式连接LLM与它们可以使用的资源。</p><p style="text-align: justify; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; margin: 1.5em 8px; letter-spacing: 0.1em; color: rgba(63, 63, 63, 1)">MCP协议的核心功能包括：</p><ul style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; list-style: none; padding-left: 1.5em; margin-left: 0; color: rgba(63, 63, 63, 1)"><li style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; text-indent: -1em; display: block; margin: 0.5em 8px; color: rgba(63, 63, 63, 1)">• <strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">资源（Resources）</strong>：类似于GET端点，用于将信息加载到LLM的上下文中</li><li style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; text-indent: -1em; display: block; margin: 0.5em 8px; color: rgba(63, 63, 63, 1)">• <strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">工具（Tools）</strong>：类似于POST端点，用于执行代码或产生副作用</li><li style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; text-indent: -1em; display: block; margin: 0.5em 8px; color: rgba(63, 63, 63, 1)">• <strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">提示（Prompts）</strong>：可重用的LLM交互模板</li><li style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; text-indent: -1em; display: block; margin: 0.5em 8px; color: rgba(63, 63, 63, 1)">• <strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">上下文（Context）</strong>：提供额外的交互功能，如日志记录和进度报告</li></ul><h3 style="text-align: left; line-height: 1.2; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 16.8px; padding: 0 0.2em 0 12px; margin: 2em 8px 0.75em 0; color: rgba(15, 76, 129, 1); font-weight: bold; border-left: 4px solid rgba(15, 76, 129, 1); border-bottom: 1px dashed rgba(15, 76, 129, 1)"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">2. 核心价值</strong></h3><ul style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; list-style: none; padding-left: 1.5em; margin-left: 0; color: rgba(63, 63, 63, 1)"><li style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; text-indent: -1em; display: block; margin: 0.5em 8px; color: rgba(63, 63, 63, 1)">• <strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">标准化</strong>：统一 AI 与外部服务的交互格式，解决工具碎片化问题</li><li style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; text-indent: -1em; display: block; margin: 0.5em 8px; color: rgba(63, 63, 63, 1)">• <strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">解耦设计</strong>：模型无需硬编码 API 逻辑，通过声明式函数描述调用服务</li><li style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; text-indent: -1em; display: block; margin: 0.5em 8px; color: rgba(63, 63, 63, 1)">• <strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">异步支持</strong>：适用于多步骤工作流（如爬取数据→分析→存储）</li></ul><h3 style="text-align: left; line-height: 1.2; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 16.8px; padding: 0 0.2em 0 12px; margin: 2em 8px 0.75em 0; color: rgba(15, 76, 129, 1); font-weight: bold; border-left: 4px solid rgba(15, 76, 129, 1); border-bottom: 1px dashed rgba(15, 76, 129, 1)"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">3. 工作流程</strong></h3><p style="text-align: justify; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; margin: 1.5em 8px; letter-spacing: 0.1em; color: rgba(63, 63, 63, 1)">MCP 大概的工作方式： Claude Desktop、Cursor 这些工具，在内部实现了 MCP Client，然后MCP Client 通过标准的 MCP 协议和 MCP Server 进行交互，由各种三方开发者提供的 MCP Server 负责实现各种和三方资源交互的逻辑，比如访问数据库、浏览器、本地文件，最终再通过 标准的 MCP 协议返回给 MCP Client，最终给用户进行展示。</p><p style="text-align: justify; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; margin: 1.5em 8px; letter-spacing: 0.1em; color: rgba(63, 63, 63, 1)">下图是一个通过查询天气来简单展示其对应的工作方式：</p><pre class="mermaid" data-processed="true"><svg aria-roledescription="sequence" role="graphics-document document" viewBox="-50 -10 1204 575" style="font-family: &quot;trebuchet ms&quot;, verdana, arial, sans-serif; font-size: 16px; fill: rgba(51, 51, 51, 1); max-width: 1204px" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" width="100%" id="mermaid-1749113070264"><g><rect class="actor actor-bottom" ry="3" rx="3" name="External_Service" height="65" width="150" stroke="#666" fill="#eaeaea" y="489" x="954" style="stroke: rgba(218, 206, 243, 1); fill: rgba(236, 236, 255, 1)"></rect><text style="stroke: rgba(218, 206, 243, 1); fill: rgba(236, 236, 255, 1); text-anchor: middle; font-size: 16px; font-weight: 400" class="actor actor-box" alignment-baseline="central" dominant-baseline="central" y="521.5" x="1029"><tspan dy="0" x="1029">External_Service</tspan></text></g><g><rect class="actor actor-bottom" ry="3" rx="3" name="MCP_Server" height="65" width="150" stroke="#666" fill="#eaeaea" y="489" x="754" style="stroke: rgba(218, 206, 243, 1); fill: rgba(236, 236, 255, 1)"></rect><text style="stroke: rgba(218, 206, 243, 1); fill: rgba(236, 236, 255, 1); text-anchor: middle; font-size: 16px; font-weight: 400" class="actor actor-box" alignment-baseline="central" dominant-baseline="central" y="521.5" x="829"><tspan dy="0" x="829">MCP_Server</tspan></text></g><g><rect class="actor actor-bottom" ry="3" rx="3" name="AI_Model" height="65" width="150" stroke="#666" fill="#eaeaea" y="489" x="280" style="stroke: rgba(218, 206, 243, 1); fill: rgba(236, 236, 255, 1)"></rect><text style="stroke: rgba(218, 206, 243, 1); fill: rgba(236, 236, 255, 1); text-anchor: middle; font-size: 16px; font-weight: 400" class="actor actor-box" alignment-baseline="central" dominant-baseline="central" y="521.5" x="355"><tspan dy="0" x="355">AI_Model</tspan></text></g><g><rect class="actor actor-bottom" ry="3" rx="3" name="User" height="65" width="150" stroke="#666" fill="#eaeaea" y="489" x="0" style="stroke: rgba(218, 206, 243, 1); fill: rgba(236, 236, 255, 1)"></rect><text style="stroke: rgba(218, 206, 243, 1); fill: rgba(236, 236, 255, 1); text-anchor: middle; font-size: 16px; font-weight: 400" class="actor actor-box" alignment-baseline="central" dominant-baseline="central" y="521.5" x="75"><tspan dy="0" x="75">User</tspan></text></g><g><line name="External_Service" stroke="#999" stroke-width="0.5px" class="actor-line 200" y2="489" x2="1029" y1="65" x1="1029" id="actor3" style="fill: rgba(236, 236, 255, 1); stroke-width: 2px; stroke: rgba(218, 206, 243, 1)"></line><g id="root-3"><rect class="actor actor-top" ry="3" rx="3" name="External_Service" height="65" width="150" stroke="#666" fill="#eaeaea" y="0" x="954" style="stroke: rgba(218, 206, 243, 1); fill: rgba(236, 236, 255, 1)"></rect><text style="stroke: rgba(218, 206, 243, 1); fill: rgba(236, 236, 255, 1); text-anchor: middle; font-size: 16px; font-weight: 400" class="actor actor-box" alignment-baseline="central" dominant-baseline="central" y="32.5" x="1029"><tspan dy="0" x="1029">External_Service</tspan></text></g></g><g><line name="MCP_Server" stroke="#999" stroke-width="0.5px" class="actor-line 200" y2="489" x2="829" y1="65" x1="829" id="actor2" style="fill: rgba(236, 236, 255, 1); stroke-width: 2px; stroke: rgba(218, 206, 243, 1)"></line><g id="root-2"><rect class="actor actor-top" ry="3" rx="3" name="MCP_Server" height="65" width="150" stroke="#666" fill="#eaeaea" y="0" x="754" style="stroke: rgba(218, 206, 243, 1); fill: rgba(236, 236, 255, 1)"></rect><text style="stroke: rgba(218, 206, 243, 1); fill: rgba(236, 236, 255, 1); text-anchor: middle; font-size: 16px; font-weight: 400" class="actor actor-box" alignment-baseline="central" dominant-baseline="central" y="32.5" x="829"><tspan dy="0" x="829">MCP_Server</tspan></text></g></g><g><line name="AI_Model" stroke="#999" stroke-width="0.5px" class="actor-line 200" y2="489" x2="355" y1="65" x1="355" id="actor1" style="fill: rgba(236, 236, 255, 1); stroke-width: 2px; stroke: rgba(218, 206, 243, 1)"></line><g id="root-1"><rect class="actor actor-top" ry="3" rx="3" name="AI_Model" height="65" width="150" stroke="#666" fill="#eaeaea" y="0" x="280" style="stroke: rgba(218, 206, 243, 1); fill: rgba(236, 236, 255, 1)"></rect><text style="stroke: rgba(218, 206, 243, 1); fill: rgba(236, 236, 255, 1); text-anchor: middle; font-size: 16px; font-weight: 400" class="actor actor-box" alignment-baseline="central" dominant-baseline="central" y="32.5" x="355"><tspan dy="0" x="355">AI_Model</tspan></text></g></g><g><line name="User" stroke="#999" stroke-width="0.5px" class="actor-line 200" y2="489" x2="75" y1="65" x1="75" id="actor0" style="fill: rgba(236, 236, 255, 1); stroke-width: 2px; stroke: rgba(218, 206, 243, 1)"></line><g id="root-0"><rect class="actor actor-top" ry="3" rx="3" name="User" height="65" width="150" stroke="#666" fill="#eaeaea" y="0" x="0" style="stroke: rgba(218, 206, 243, 1); fill: rgba(236, 236, 255, 1)"></rect><text style="stroke: rgba(218, 206, 243, 1); fill: rgba(236, 236, 255, 1); text-anchor: middle; font-size: 16px; font-weight: 400" class="actor actor-box" alignment-baseline="central" dominant-baseline="central" y="32.5" x="75"><tspan dy="0" x="75">User</tspan></text></g></g><g></g><defs><symbol height="24" width="24" id="computer"><path d="M2 2v13h20v-13h-20zm18 11h-16v-9h16v9zm-10.228 6l.466-1h3.524l.467 1h-4.457zm14.228 3h-24l2-6h2.104l-1.33 4h18.45l-1.297-4h2.073l2 6zm-5-10h-14v-7h14v7z" transform="scale(.5)"></path></symbol></defs><defs><symbol clip-rule="evenodd" fill-rule="evenodd" id="database"><path d="M12.258.001l.256.004.255.005.253.008.251.01.249.012.247.015.246.016.242.019.241.02.239.023.236.024.233.027.231.028.229.031.225.032.223.034.22.036.217.038.214.04.211.041.208.043.205.045.201.046.198.048.194.05.191.051.187.053.183.054.18.056.175.057.172.059.168.06.163.061.16.063.155.064.15.066.074.033.073.033.071.034.07.034.069.035.068.035.067.035.066.035.064.036.064.036.062.036.06.036.06.037.058.037.058.037.055.038.055.038.053.038.052.038.051.039.05.039.048.039.047.039.045.04.044.04.043.04.041.04.04.041.039.041.037.041.036.041.034.041.033.042.032.042.03.042.029.042.027.042.026.043.024.043.023.043.021.043.02.043.018.044.017.043.015.044.013.044.012.044.011.045.009.044.007.045.006.045.004.045.002.045.001.045v17l-.001.045-.002.045-.004.045-.006.045-.007.045-.009.044-.011.045-.012.044-.013.044-.015.044-.017.043-.018.044-.02.043-.021.043-.023.043-.024.043-.026.043-.027.042-.029.042-.03.042-.032.042-.033.042-.034.041-.036.041-.037.041-.039.041-.04.041-.041.04-.043.04-.044.04-.045.04-.047.039-.048.039-.05.039-.051.039-.052.038-.053.038-.055.038-.055.038-.058.037-.058.037-.06.037-.06.036-.062.036-.064.036-.064.036-.066.035-.067.035-.068.035-.069.035-.07.034-.071.034-.073.033-.074.033-.15.066-.155.064-.16.063-.163.061-.168.06-.172.059-.175.057-.18.056-.183.054-.187.053-.191.051-.194.05-.198.048-.201.046-.205.045-.208.043-.211.041-.214.04-.217.038-.22.036-.223.034-.225.032-.229.031-.231.028-.233.027-.236.024-.239.023-.241.02-.242.019-.246.016-.247.015-.249.012-.251.01-.253.008-.255.005-.256.004-.258.001-.258-.001-.256-.004-.255-.005-.253-.008-.251-.01-.249-.012-.247-.015-.245-.016-.243-.019-.241-.02-.238-.023-.236-.024-.234-.027-.231-.028-.228-.031-.226-.032-.223-.034-.22-.036-.217-.038-.214-.04-.211-.041-.208-.043-.204-.045-.201-.046-.198-.048-.195-.05-.19-.051-.187-.053-.184-.054-.179-.056-.176-.057-.172-.059-.167-.06-.164-.061-.159-.063-.155-.064-.151-.066-.074-.033-.072-.033-.072-.034-.07-.034-.069-.035-.068-.035-.067-.035-.066-.035-.064-.036-.063-.036-.062-.036-.061-.036-.06-.037-.058-.037-.057-.037-.056-.038-.055-.038-.053-.038-.052-.038-.051-.039-.049-.039-.049-.039-.046-.039-.046-.04-.044-.04-.043-.04-.041-.04-.04-.041-.039-.041-.037-.041-.036-.041-.034-.041-.033-.042-.032-.042-.03-.042-.029-.042-.027-.042-.026-.043-.024-.043-.023-.043-.021-.043-.02-.043-.018-.044-.017-.043-.015-.044-.013-.044-.012-.044-.011-.045-.009-.044-.007-.045-.006-.045-.004-.045-.002-.045-.001-.045v-17l.001-.045.002-.045.004-.045.006-.045.007-.045.009-.044.011-.045.012-.044.013-.044.015-.044.017-.043.018-.044.02-.043.021-.043.023-.043.024-.043.026-.043.027-.042.029-.042.03-.042.032-.042.033-.042.034-.041.036-.041.037-.041.039-.041.04-.041.041-.04.043-.04.044-.04.046-.04.046-.039.049-.039.049-.039.051-.039.052-.038.053-.038.055-.038.056-.038.057-.037.058-.037.06-.037.061-.036.062-.036.063-.036.064-.036.066-.035.067-.035.068-.035.069-.035.07-.034.072-.034.072-.033.074-.033.151-.066.155-.064.159-.063.164-.061.167-.06.172-.059.176-.057.179-.056.184-.054.187-.053.19-.051.195-.05.198-.048.201-.046.204-.045.208-.043.211-.041.214-.04.217-.038.22-.036.223-.034.226-.032.228-.031.231-.028.234-.027.236-.024.238-.023.241-.02.243-.019.245-.016.247-.015.249-.012.251-.01.253-.008.255-.005.256-.004.258-.001.258.001zm-9.258 20.499v.01l.001.021.003.021.004.022.005.021.006.022.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.023.018.024.019.024.021.024.022.025.023.024.024.025.052.049.056.05.061.051.066.051.07.051.075.051.079.052.084.052.088.052.092.052.097.052.102.051.105.052.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.048.144.049.147.047.152.047.155.047.16.045.163.045.167.043.171.043.176.041.178.041.183.039.187.039.19.037.194.035.197.035.202.033.204.031.209.03.212.029.216.027.219.025.222.024.226.021.23.02.233.018.236.016.24.015.243.012.246.01.249.008.253.005.256.004.259.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.021.224-.024.22-.026.216-.027.212-.028.21-.031.205-.031.202-.034.198-.034.194-.036.191-.037.187-.039.183-.04.179-.04.175-.042.172-.043.168-.044.163-.045.16-.046.155-.046.152-.047.148-.048.143-.049.139-.049.136-.05.131-.05.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.053.083-.051.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.05.023-.024.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.023.01-.022.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.127l-.077.055-.08.053-.083.054-.085.053-.087.052-.09.052-.093.051-.095.05-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.045-.118.044-.12.043-.122.042-.124.042-.126.041-.128.04-.13.04-.132.038-.134.038-.135.037-.138.037-.139.035-.142.035-.143.034-.144.033-.147.032-.148.031-.15.03-.151.03-.153.029-.154.027-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.01-.179.008-.179.008-.181.006-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.006-.179-.008-.179-.008-.178-.01-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.027-.153-.029-.151-.03-.15-.03-.148-.031-.146-.032-.145-.033-.143-.034-.141-.035-.14-.035-.137-.037-.136-.037-.134-.038-.132-.038-.13-.04-.128-.04-.126-.041-.124-.042-.122-.042-.12-.044-.117-.043-.116-.045-.113-.045-.112-.046-.109-.047-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.05-.093-.052-.09-.051-.087-.052-.085-.053-.083-.054-.08-.054-.077-.054v4.127zm0-5.654v.011l.001.021.003.021.004.021.005.022.006.022.007.022.009.022.01.022.011.023.012.023.013.023.015.024.016.023.017.024.018.024.019.024.021.024.022.024.023.025.024.024.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.052.11.051.114.051.119.052.123.05.127.051.131.05.135.049.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.044.171.042.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.022.23.02.233.018.236.016.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.012.241-.015.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.048.139-.05.136-.049.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.051.051-.049.023-.025.023-.024.021-.025.02-.024.019-.024.018-.024.017-.024.015-.023.014-.023.013-.024.012-.022.01-.023.01-.023.008-.022.006-.022.006-.022.004-.021.004-.022.001-.021.001-.021v-4.139l-.077.054-.08.054-.083.054-.085.052-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.044-.118.044-.12.044-.122.042-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.035-.143.033-.144.033-.147.033-.148.031-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.009-.179.009-.179.007-.181.007-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.007-.179-.007-.179-.009-.178-.009-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.031-.146-.033-.145-.033-.143-.033-.141-.035-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.04-.126-.041-.124-.042-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.051-.093-.051-.09-.051-.087-.053-.085-.052-.083-.054-.08-.054-.077-.054v4.139zm0-5.666v.011l.001.02.003.022.004.021.005.022.006.021.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.024.018.023.019.024.021.025.022.024.023.024.024.025.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.051.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.043.171.043.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.021.23.02.233.018.236.017.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.013.241-.014.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.049.139-.049.136-.049.131-.051.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.049.023-.025.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.022.01-.023.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.153l-.077.054-.08.054-.083.053-.085.053-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.048-.105.048-.106.048-.109.046-.111.046-.114.046-.115.044-.118.044-.12.043-.122.043-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.034-.143.034-.144.033-.147.032-.148.032-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.024-.161.024-.162.023-.163.023-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.01-.178.01-.179.009-.179.007-.181.006-.182.006-.182.004-.184.003-.184.001-.185.001-.185-.001-.184-.001-.184-.003-.182-.004-.182-.006-.181-.006-.179-.007-.179-.009-.178-.01-.176-.01-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.023-.162-.023-.161-.024-.159-.024-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.032-.146-.032-.145-.033-.143-.034-.141-.034-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.041-.126-.041-.124-.041-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.048-.105-.048-.102-.048-.1-.05-.097-.049-.095-.051-.093-.051-.09-.052-.087-.052-.085-.053-.083-.053-.08-.054-.077-.054v4.153zm8.74-8.179l-.257.004-.254.005-.25.008-.247.011-.244.012-.241.014-.237.016-.233.018-.231.021-.226.022-.224.023-.22.026-.216.027-.212.028-.21.031-.205.032-.202.033-.198.034-.194.036-.191.038-.187.038-.183.04-.179.041-.175.042-.172.043-.168.043-.163.045-.16.046-.155.046-.152.048-.148.048-.143.048-.139.049-.136.05-.131.05-.126.051-.123.051-.118.051-.114.052-.11.052-.106.052-.101.052-.096.052-.092.052-.088.052-.083.052-.079.052-.074.051-.07.052-.065.051-.06.05-.056.05-.051.05-.023.025-.023.024-.021.024-.02.025-.019.024-.018.024-.017.023-.015.024-.014.023-.013.023-.012.023-.01.023-.01.022-.008.022-.006.023-.006.021-.004.022-.004.021-.001.021-.001.021.001.021.001.021.004.021.004.022.006.021.006.023.008.022.01.022.01.023.012.023.013.023.014.023.015.024.017.023.018.024.019.024.02.025.021.024.023.024.023.025.051.05.056.05.06.05.065.051.07.052.074.051.079.052.083.052.088.052.092.052.096.052.101.052.106.052.11.052.114.052.118.051.123.051.126.051.131.05.136.05.139.049.143.048.148.048.152.048.155.046.16.046.163.045.168.043.172.043.175.042.179.041.183.04.187.038.191.038.194.036.198.034.202.033.205.032.21.031.212.028.216.027.22.026.224.023.226.022.231.021.233.018.237.016.241.014.244.012.247.011.25.008.254.005.257.004.26.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.022.224-.023.22-.026.216-.027.212-.028.21-.031.205-.032.202-.033.198-.034.194-.036.191-.038.187-.038.183-.04.179-.041.175-.042.172-.043.168-.043.163-.045.16-.046.155-.046.152-.048.148-.048.143-.048.139-.049.136-.05.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.05.051-.05.023-.025.023-.024.021-.024.02-.025.019-.024.018-.024.017-.023.015-.024.014-.023.013-.023.012-.023.01-.023.01-.022.008-.022.006-.023.006-.021.004-.022.004-.021.001-.021.001-.021-.001-.021-.001-.021-.004-.021-.004-.022-.006-.021-.006-.023-.008-.022-.01-.022-.01-.023-.012-.023-.013-.023-.014-.023-.015-.024-.017-.023-.018-.024-.019-.024-.02-.025-.021-.024-.023-.024-.023-.025-.051-.05-.056-.05-.06-.05-.065-.051-.07-.052-.074-.051-.079-.052-.083-.052-.088-.052-.092-.052-.096-.052-.101-.052-.106-.052-.11-.052-.114-.052-.118-.051-.123-.051-.126-.051-.131-.05-.136-.05-.139-.049-.143-.048-.148-.048-.152-.048-.155-.046-.16-.046-.163-.045-.168-.043-.172-.043-.175-.042-.179-.041-.183-.04-.187-.038-.191-.038-.194-.036-.198-.034-.202-.033-.205-.032-.21-.031-.212-.028-.216-.027-.22-.026-.224-.023-.226-.022-.231-.021-.233-.018-.237-.016-.241-.014-.244-.012-.247-.011-.25-.008-.254-.005-.257-.004-.26-.001-.26.001z" transform="scale(.5)"></path></symbol></defs><defs><symbol height="24" width="24" id="clock"><path d="M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm5.848 12.459c.202.038.202.333.001.372-1.907.361-6.045 1.111-6.547 1.111-.719 0-1.301-.582-1.301-1.301 0-.512.77-5.447 1.125-7.445.034-.192.312-.181.343.014l.985 6.238 5.394 1.011z" transform="scale(.5)"></path></symbol></defs><defs><marker orient="auto-start-reverse" markerHeight="12" markerWidth="12" markerUnits="userSpaceOnUse" refY="5" refX="7.9" id="arrowhead"><path d="M -1 0 L 10 5 L 0 10 z" style="fill: rgba(51, 51, 51, 1); stroke: rgba(51, 51, 51, 1)"></path></marker></defs><defs><marker refY="4.5" refX="4" orient="auto" markerHeight="8" markerWidth="15" id="crosshead"><path style="fill: rgba(51, 51, 51, 1); stroke: rgba(51, 51, 51, 1)" d="M 1,2 L 6,7 M 6,2 L 1,7" stroke-width="1pt" stroke="#000000" fill="none"></path></marker></defs><defs><marker orient="auto" markerHeight="28" markerWidth="20" refY="7" refX="15.5" id="filled-head"><path d="M 18,7 L9,13 L14,7 L9,1 Z"></path></marker></defs><defs><marker orient="auto" markerHeight="40" markerWidth="60" refY="15" refX="15" id="sequencenumber" style="fill: rgba(51, 51, 51, 1)"><circle r="6" cy="15" cx="15"></circle></marker></defs><text style="fill: rgba(51, 51, 51, 1); stroke: none; font-size: 16px; font-weight: 400" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="80" x="214">“查询北京天气”</text><line style="stroke-width: 1.5; stroke-dasharray: none; stroke: rgba(51, 51, 51, 1); fill: none" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" y2="123" x2="351" y1="123" x1="76"></line><text style="fill: rgba(51, 51, 51, 1); stroke: none; font-size: 16px; font-weight: 400" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="138" x="356">解析意图，生成MCP调用</text><path style="stroke-width: 1.5; stroke-dasharray: none; stroke: rgba(51, 51, 51, 1); fill: none" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" d="M 356,173 C 416,163 416,203 356,193"></path><text style="fill: rgba(51, 51, 51, 1); stroke: none; font-size: 16px; font-weight: 400" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="218" x="591">{ "function": "get_weather", "params": {"city":"北京"} }</text><line style="stroke-width: 1.5; stroke-dasharray: none; stroke: rgba(51, 51, 51, 1); fill: none" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" y2="261" x2="825" y1="261" x1="356"></line><text style="fill: rgba(51, 51, 51, 1); stroke: none; font-size: 16px; font-weight: 400" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="276" x="928">调用天气API</text><line style="stroke-width: 1.5; stroke-dasharray: none; stroke: rgba(51, 51, 51, 1); fill: none" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" y2="311" x2="1025" y1="311" x1="830"></line><text style="fill: rgba(51, 51, 51, 1); stroke: none; font-size: 16px; font-weight: 400" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="326" x="931">返回原始数据</text><line style="stroke-width: 1.5; stroke-dasharray: none; stroke: rgba(51, 51, 51, 1); fill: none" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" y2="361" x2="833" y1="361" x1="1028"></line><text style="fill: rgba(51, 51, 51, 1); stroke: none; font-size: 16px; font-weight: 400" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="376" x="594">{ "temperature": "22°C", "condition": "晴" }</text><line style="stroke-width: 1.5; stroke-dasharray: none; stroke: rgba(51, 51, 51, 1); fill: none" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" y2="411" x2="359" y1="411" x1="828"></line><text style="fill: rgba(51, 51, 51, 1); stroke: none; font-size: 16px; font-weight: 400" dy="1em" class="messageText" alignment-baseline="middle" dominant-baseline="middle" text-anchor="middle" y="426" x="217">“北京今天晴天，气温22°C”</text><line style="stroke-width: 1.5; stroke-dasharray: none; stroke: rgba(51, 51, 51, 1); fill: none" marker-end="url(#arrowhead)" stroke="none" stroke-width="2" class="messageLine0" y2="469" x2="79" y1="469" x1="354"></line></svg></pre><h3 style="text-align: left; line-height: 1.2; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 16.8px; padding: 0 0.2em 0 12px; margin: 2em 8px 0.75em 0; color: rgba(15, 76, 129, 1); font-weight: bold; border-left: 4px solid rgba(15, 76, 129, 1); border-bottom: 1px dashed rgba(15, 76, 129, 1)"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">3. 代码实现mcp客户端和服务端</strong></h3><p style="text-align: justify; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; margin: 1.5em 8px; letter-spacing: 0.1em; color: rgba(63, 63, 63, 1)">现在python编写mcp server和mcp client的有两个分别是<span style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; color: rgba(87, 107, 149, 1)">FastMCP</span> 和<span style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; color: rgba(87, 107, 149, 1)">MCP</span>，其中MCP是官方的pythonsdk,这两个之间的关系是官方收编了FastMCP的第一个版本的包，但官方集成的是 fastmcp 的 v1.0 版本。然而，jlowin 继续开发 fastmcp，还发布了 v2.0 版本，其中包含代理和客户端采样等新功能。以下的演示以官方版本MCP为例，</p><p style="text-align: justify; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; margin: 1.5em 8px; letter-spacing: 0.1em; color: rgba(63, 63, 63, 1)">安装：<code style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 90%; color: rgba(221, 17, 68, 1); background: rgba(27, 31, 35, 0.05); padding: 3px 5px; border-radius: 4px">uv add "mcp[cli]”</code> 或者<code style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 90%; color: rgba(221, 17, 68, 1); background: rgba(27, 31, 35, 0.05); padding: 3px 5px; border-radius: 4px">pip install "mcp[cli]”</code></p><h3 style="text-align: left; line-height: 1.2; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 16.8px; padding: 0 0.2em 0 12px; margin: 2em 8px 0.75em 0; color: rgba(15, 76, 129, 1); font-weight: bold; border-left: 4px solid rgba(15, 76, 129, 1); border-bottom: 1px dashed rgba(15, 76, 129, 1)">(1) <strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">MCP 服务端</strong></h3><pre class="hljs code__pre" style="text-align: left; line-height: 1.5; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; overflow-x: auto; border-radius: 8px; margin: 10px 8px; box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.05); padding: 0 !important"><span class="mac-sign" style="display: flex; padding: 10px 14px 0" hidden=""><svg xmlns="http://www.w3.org/2000/svg" version="1.1" x="0px" y="0px" width="45px" height="13px" viewBox="0 0 450 130">
    <ellipse cx="50" cy="65" rx="50" ry="52" stroke="rgb(220,60,54)" stroke-width="2" fill="rgb(237,108,96)"></ellipse>
    <ellipse cx="225" cy="65" rx="50" ry="52" stroke="rgb(218,151,33)" stroke-width="2" fill="rgb(247,193,81)"></ellipse>
    <ellipse cx="400" cy="65" rx="50" ry="52" stroke="rgb(27,161,37)" stroke-width="2" fill="rgb(100,200,86)"></ellipse>
  </svg></span><code class="language-python" style="padding: 0.5em 1em 1em; overflow-x: auto; text-indent: 0; text-align: left; line-height: 1.75; font-family: &quot;Fira Code&quot;, Menlo, Operator Mono, Consolas, Monaco, monospace; font-size: 14px; margin: 0; white-space: pre-wrap"><span class="hljs-keyword">from</span>&nbsp;mcp.server.fastmcp&nbsp;<span class="hljs-keyword">import</span>&nbsp;FastMCP<br><span class="hljs-keyword">from</span>&nbsp;mcp.server.fastmcp.prompts&nbsp;<span class="hljs-keyword">import</span>&nbsp;base<br><br><span class="hljs-comment">#&nbsp;mcp&nbsp;=&nbsp;FastMCP(name="demo",host="127.0.0.1",port=8256,sse_path="/sse")&nbsp;&nbsp;&nbsp;###&nbsp;启动方式为sse时使用</span><br>mcp&nbsp;=&nbsp;FastMCP()<br><span class="hljs-meta">@mcp.tool()</span><br><span class="hljs-keyword">def</span>&nbsp;<span class="hljs-title function_">add_2_numbers</span>(<span class="hljs-params">a:&nbsp;<span class="hljs-built_in">int</span>,&nbsp;b:&nbsp;<span class="hljs-built_in">int</span></span>)&nbsp;-&gt;&nbsp;<span class="hljs-built_in">int</span>:<br>&nbsp;<span class="hljs-string">"""两个数字相加"""</span><br>&nbsp;<span class="hljs-keyword">return</span>&nbsp;a&nbsp;+&nbsp;b<br><br><span class="hljs-meta">@mcp.resource(<span class="hljs-params"><span class="hljs-string">"config://app"</span></span>)</span><br><span class="hljs-keyword">def</span>&nbsp;<span class="hljs-title function_">get_config</span>()&nbsp;-&gt;&nbsp;<span class="hljs-built_in">str</span>:<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"""Static&nbsp;configuration&nbsp;data"""</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">return</span>&nbsp;<span class="hljs-string">"App&nbsp;configuration&nbsp;here"</span><br><br><span class="hljs-meta">@mcp.prompt()</span><br><span class="hljs-keyword">def</span>&nbsp;<span class="hljs-title function_">debug_error</span>(<span class="hljs-params">error:&nbsp;<span class="hljs-built_in">str</span></span>)&nbsp;-&gt;&nbsp;<span class="hljs-built_in">list</span>[base.Message]:<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">return</span>&nbsp;[<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;base.UserMessage(<span class="hljs-string">"I'm&nbsp;seeing&nbsp;this&nbsp;error:"</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;base.UserMessage(error),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;base.AssistantMessage(<span class="hljs-string">"I'll&nbsp;help&nbsp;debug&nbsp;that.&nbsp;What&nbsp;have&nbsp;you&nbsp;tried&nbsp;so&nbsp;far?"</span>),<br><br><span class="hljs-meta">@mcp.tool()</span><br><span class="hljs-keyword">def</span>&nbsp;<span class="hljs-title function_">multiply_2_numbers</span>(<span class="hljs-params">a:&nbsp;<span class="hljs-built_in">int</span>,&nbsp;b:&nbsp;<span class="hljs-built_in">int</span></span>):<br>&nbsp;<span class="hljs-string">"""两个数字相乘"""</span><br>&nbsp;<span class="hljs-keyword">return</span>&nbsp;a&nbsp;*&nbsp;b<br><br><span class="hljs-keyword">if</span>&nbsp;__name__&nbsp;==&nbsp;<span class="hljs-string">"__main__"</span>:<br>&nbsp;<span class="hljs-comment">#&nbsp;mcp.run(transport='sse')&nbsp;&nbsp;&nbsp;##&nbsp;启动方式为sse</span><br>&nbsp;mcp.run(transport=<span class="hljs-string">'stdio'</span>)&nbsp;&nbsp;&nbsp;<span class="hljs-comment">##&nbsp;启动方式为stdio</span></code></pre><p style="text-align: justify; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; margin: 1.5em 8px; letter-spacing: 0.1em; color: rgba(63, 63, 63, 1)">解释：</p><ul style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; list-style: none; padding-left: 1.5em; margin-left: 0; color: rgba(63, 63, 63, 1)"><li style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; text-indent: -1em; display: block; margin: 0.5em 8px; color: rgba(63, 63, 63, 1)">• Tools（工具）是MCP中最常用的功能之一，它允许LLM执行特定的操作或函数。使用<code style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 90%; color: rgba(221, 17, 68, 1); background: rgba(27, 31, 35, 0.05); padding: 3px 5px; border-radius: 4px">@mcp.tool()</code>装饰器可以轻松将Python函数转换为LLM可调用的工具：</li><li style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; text-indent: -1em; display: block; margin: 0.5em 8px; color: rgba(63, 63, 63, 1)">• Resources（资源）用于向LLM提供数据和上下文信息。与工具不同，资源主要用于读取数据而非执行操作</li><li style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; text-indent: -1em; display: block; margin: 0.5em 8px; color: rgba(63, 63, 63, 1)">• Prompts（提示）允许您创建可重用的提示模板，这些模板可以被参数化并用于标准化LLM交互</li></ul><p style="text-align: justify; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; margin: 1.5em 8px; letter-spacing: 0.1em; color: rgba(63, 63, 63, 1)">简单验证服务端功能可以通过<code style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 90%; color: rgba(221, 17, 68, 1); background: rgba(27, 31, 35, 0.05); padding: 3px 5px; border-radius: 4px">mcp dev server.py</code>进入界面检测</p><h3 style="text-align: left; line-height: 1.2; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 16.8px; padding: 0 0.2em 0 12px; margin: 2em 8px 0.75em 0; color: rgba(15, 76, 129, 1); font-weight: bold; border-left: 4px solid rgba(15, 76, 129, 1); border-bottom: 1px dashed rgba(15, 76, 129, 1)">(2) <strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">MCP 客户端</strong></h3><p style="text-align: justify; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; margin: 1.5em 8px; letter-spacing: 0.1em; color: rgba(63, 63, 63, 1)">MCP客户端一般分别按照服务端的stdio和sse分别写了两个，具体融合的最后修改一下即可。</p><ol style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; padding-left: 1.5em; margin-left: 0; color: rgba(63, 63, 63, 1)"><li style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; text-indent: -1em; display: block; margin: 0.5em 8px; color: rgba(63, 63, 63, 1)">1. STDIO客户端</li></ol><pre class="hljs code__pre" style="text-align: left; line-height: 1.5; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; overflow-x: auto; border-radius: 8px; margin: 10px 8px; box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.05); padding: 0 !important"><span class="mac-sign" style="display: flex; padding: 10px 14px 0" hidden=""><svg xmlns="http://www.w3.org/2000/svg" version="1.1" x="0px" y="0px" width="45px" height="13px" viewBox="0 0 450 130">
    <ellipse cx="50" cy="65" rx="50" ry="52" stroke="rgb(220,60,54)" stroke-width="2" fill="rgb(237,108,96)"></ellipse>
    <ellipse cx="225" cy="65" rx="50" ry="52" stroke="rgb(218,151,33)" stroke-width="2" fill="rgb(247,193,81)"></ellipse>
    <ellipse cx="400" cy="65" rx="50" ry="52" stroke="rgb(27,161,37)" stroke-width="2" fill="rgb(100,200,86)"></ellipse>
  </svg></span><code class="language-python" style="padding: 0.5em 1em 1em; overflow-x: auto; text-indent: 0; text-align: left; line-height: 1.75; font-family: &quot;Fira Code&quot;, Menlo, Operator Mono, Consolas, Monaco, monospace; font-size: 14px; margin: 0; white-space: pre-wrap"><span class="hljs-keyword">import</span>&nbsp;asyncio<br><span class="hljs-keyword">import</span>&nbsp;json<br><span class="hljs-keyword">import</span>&nbsp;re<br><span class="hljs-keyword">from</span>&nbsp;contextlib&nbsp;<span class="hljs-keyword">import</span>&nbsp;AsyncExitStack<br><span class="hljs-keyword">from</span>&nbsp;typing&nbsp;<span class="hljs-keyword">import</span>&nbsp;<span class="hljs-type">Optional</span><br><br><span class="hljs-keyword">from</span>&nbsp;lxml&nbsp;<span class="hljs-keyword">import</span>&nbsp;etree<br><span class="hljs-keyword">from</span>&nbsp;mcp&nbsp;<span class="hljs-keyword">import</span>&nbsp;ClientSession,&nbsp;StdioServerParameters,&nbsp;stdio_client<br><span class="hljs-keyword">from</span>&nbsp;mcp.client.sse&nbsp;<span class="hljs-keyword">import</span>&nbsp;sse_client<br><span class="hljs-keyword">from</span>&nbsp;openai&nbsp;<span class="hljs-keyword">import</span>&nbsp;AsyncOpenAI<br><br><span class="hljs-keyword">class</span>&nbsp;<span class="hljs-title class_">Stdio_MCPClient</span>():<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">def</span>&nbsp;<span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,api_key,&nbsp;base_url,&nbsp;model</span>):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.session:&nbsp;<span class="hljs-type">Optional</span>[ClientSession]&nbsp;=&nbsp;<span class="hljs-literal">None</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.exit_stack&nbsp;=&nbsp;AsyncExitStack()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.client&nbsp;=&nbsp;AsyncOpenAI(api_key=api_key,&nbsp;base_url=base_url)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.model&nbsp;=&nbsp;model<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.message&nbsp;=&nbsp;[]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">with</span>&nbsp;<span class="hljs-built_in">open</span>(<span class="hljs-string">"MCP_Prompt.txt"</span>,&nbsp;<span class="hljs-string">"r"</span>,&nbsp;encoding=<span class="hljs-string">"utf-8"</span>)&nbsp;<span class="hljs-keyword">as</span>&nbsp;f:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.system_prompt&nbsp;=&nbsp;f.read()<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">async</span>&nbsp;<span class="hljs-keyword">def</span>&nbsp;<span class="hljs-title function_">connect_to_stdio_server</span>(<span class="hljs-params">self,&nbsp;mcp_name,&nbsp;command,args,env={}</span>):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;server_params&nbsp;=&nbsp;StdioServerParameters(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;command=command,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args=args,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env=env<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stdio_transport&nbsp;=&nbsp;<span class="hljs-keyword">await</span>&nbsp;<span class="hljs-variable language_">self</span>.exit_stack.enter_async_context(stdio_client(server_params))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.stdio,<span class="hljs-variable language_">self</span>.write&nbsp;=&nbsp;stdio_transport<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.session&nbsp;=&nbsp;<span class="hljs-keyword">await</span>&nbsp;<span class="hljs-variable language_">self</span>.exit_stack.enter_async_context(ClientSession(<span class="hljs-variable language_">self</span>.stdio,&nbsp;<span class="hljs-variable language_">self</span>.write))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">await</span>&nbsp;<span class="hljs-variable language_">self</span>.session.initialize()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response&nbsp;=&nbsp;<span class="hljs-keyword">await</span>&nbsp;<span class="hljs-variable language_">self</span>.session.list_tools()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tools&nbsp;=&nbsp;response.tools<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in">print</span>(<span class="hljs-string">f"成功链接到<span class="hljs-subst">{mcp_name}</span>服务，对应的tools："</span>,[tool.name&nbsp;<span class="hljs-keyword">for</span>&nbsp;tool&nbsp;<span class="hljs-keyword">in</span>&nbsp;tools])<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.available_tools&nbsp;=&nbsp;[{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"type"</span>:&nbsp;<span class="hljs-string">"function"</span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"function"</span>:&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"name"</span>:&nbsp;tool.name,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"description"</span>:&nbsp;tool.description,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"parameters"</span>:&nbsp;tool.inputSchema<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword">for</span>&nbsp;tool&nbsp;<span class="hljs-keyword">in</span>&nbsp;response.tools]<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">async</span>&nbsp;<span class="hljs-keyword">def</span>&nbsp;<span class="hljs-title function_">process_query</span>(<span class="hljs-params">self,&nbsp;query:&nbsp;<span class="hljs-built_in">str</span>,&nbsp;stream:&nbsp;<span class="hljs-built_in">bool</span>&nbsp;=&nbsp;<span class="hljs-literal">False</span></span>):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment">#&nbsp;self.message.append({"role":&nbsp;"system",&nbsp;"content":&nbsp;self.system_prompt})</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.message.append({<span class="hljs-string">"role"</span>:&nbsp;<span class="hljs-string">"user"</span>,&nbsp;<span class="hljs-string">"content"</span>:&nbsp;query})<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response&nbsp;=&nbsp;<span class="hljs-keyword">await</span>&nbsp;<span class="hljs-variable language_">self</span>.client.chat.completions.create(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model=<span class="hljs-variable language_">self</span>.model,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;messages=<span class="hljs-variable language_">self</span>.message,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tools=<span class="hljs-variable language_">self</span>.available_tools<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;final_text&nbsp;=&nbsp;[]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assistant_message&nbsp;=&nbsp;response.choices[<span class="hljs-number">0</span>].message<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">while</span>&nbsp;assistant_message.tool_calls:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">for</span>&nbsp;tool_call&nbsp;<span class="hljs-keyword">in</span>&nbsp;assistant_message.tool_calls:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tool_name&nbsp;=&nbsp;tool_call.function.name<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tool_args&nbsp;=&nbsp;json.loads(tool_call.function.arguments)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;<span class="hljs-keyword">await</span>&nbsp;<span class="hljs-variable language_">self</span>.session.call_tool(tool_name,&nbsp;tool_args)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in">print</span>(<span class="hljs-string">f"calling&nbsp;tools&nbsp;<span class="hljs-subst">{tool_name}</span>,wirh&nbsp;args&nbsp;<span class="hljs-subst">{tool_args}</span>"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in">print</span>(<span class="hljs-string">"Result:"</span>,&nbsp;result.content[<span class="hljs-number">0</span>].text)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.message.extend([<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"role"</span>:&nbsp;<span class="hljs-string">"assistant"</span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"content"</span>:&nbsp;<span class="hljs-literal">None</span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"tool_calls"</span>:&nbsp;[tool_call]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"role"</span>:&nbsp;<span class="hljs-string">"tool"</span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"content"</span>:&nbsp;result.content[<span class="hljs-number">0</span>].text,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"tool_call_id"</span>:&nbsp;tool_call.<span class="hljs-built_in">id</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;])<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response&nbsp;=&nbsp;<span class="hljs-keyword">await</span>&nbsp;<span class="hljs-variable language_">self</span>.client.chat.completions.create(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model=<span class="hljs-variable language_">self</span>.model,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;messages=<span class="hljs-variable language_">self</span>.message,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tools=<span class="hljs-variable language_">self</span>.available_tools,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;max_tokens=<span class="hljs-number">8048</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assistant_message&nbsp;=&nbsp;response.choices[<span class="hljs-number">0</span>].message<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;content&nbsp;=&nbsp;assistant_message.content<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;final_text.append(content)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">return</span>&nbsp;<span class="hljs-string">"\n"</span>.join(final_text)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">async</span>&nbsp;<span class="hljs-keyword">def</span>&nbsp;<span class="hljs-title function_">chat_loop</span>(<span class="hljs-params">self,stream_mode=<span class="hljs-literal">True</span></span>):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.message&nbsp;=&nbsp;[]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">while</span>&nbsp;<span class="hljs-literal">True</span>:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">try</span>:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;query&nbsp;=&nbsp;<span class="hljs-built_in">input</span>(<span class="hljs-string">"\nQuery:&nbsp;"</span>).strip()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">if</span>&nbsp;query.lower()&nbsp;==&nbsp;<span class="hljs-string">'quit'</span>:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">break</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">if</span>&nbsp;query.strip()&nbsp;==&nbsp;<span class="hljs-string">''</span>:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">continue</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response&nbsp;=&nbsp;<span class="hljs-keyword">await</span>&nbsp;<span class="hljs-variable language_">self</span>.process_query(query,&nbsp;stream=stream_mode)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in">print</span>(<span class="hljs-string">"\nAI:"</span>,&nbsp;response)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">except</span>&nbsp;Exception&nbsp;<span class="hljs-keyword">as</span>&nbsp;e:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in">print</span>(<span class="hljs-string">f"\nError:&nbsp;<span class="hljs-subst">{<span class="hljs-built_in">str</span>(e)}</span>"</span>)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">async</span>&nbsp;<span class="hljs-keyword">def</span>&nbsp;<span class="hljs-title function_">cleanup</span>(<span class="hljs-params">self</span>):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">await</span>&nbsp;<span class="hljs-variable language_">self</span>.exit_stack.aclose()<br><br><span class="hljs-keyword">async</span>&nbsp;<span class="hljs-keyword">def</span>&nbsp;<span class="hljs-title function_">main</span>():<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">with</span>&nbsp;<span class="hljs-built_in">open</span>(<span class="hljs-string">"config.json"</span>,&nbsp;<span class="hljs-string">"r"</span>)&nbsp;<span class="hljs-keyword">as</span>&nbsp;f:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config&nbsp;=&nbsp;json.load(f)<br>&nbsp;&nbsp;&nbsp;&nbsp;client&nbsp;=&nbsp;Stdio_MCPClient(config[<span class="hljs-string">"llm"</span>][<span class="hljs-string">"api_key"</span>],&nbsp;config[<span class="hljs-string">"llm"</span>][<span class="hljs-string">"base_url"</span>],&nbsp;config[<span class="hljs-string">"llm"</span>][<span class="hljs-string">"model"</span>])<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">try</span>:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env&nbsp;=&nbsp;{}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">await</span>&nbsp;client.connect_to_stdio_server(<span class="hljs-string">"testserver"</span>,<span class="hljs-string">"python"</span>,[<span class="hljs-string">"server.py"</span>,],{})<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">await</span>&nbsp;client.chat_loop()<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">except</span>&nbsp;&nbsp;Exception&nbsp;<span class="hljs-keyword">as</span>&nbsp;e:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in">print</span>(e)<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">finally</span>:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">await</span>&nbsp;client.cleanup()<br><br><span class="hljs-keyword">if</span>&nbsp;__name__&nbsp;==&nbsp;<span class="hljs-string">'__main__'</span>:<br>&nbsp;&nbsp;&nbsp;&nbsp;asyncio.run(main())</code></pre><ol style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; padding-left: 1.5em; margin-left: 0; color: rgba(63, 63, 63, 1)"><li style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; text-indent: -1em; display: block; margin: 0.5em 8px; color: rgba(63, 63, 63, 1)">1. SSE客户端</li></ol><pre class="hljs code__pre" style="text-align: left; line-height: 1.5; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; overflow-x: auto; border-radius: 8px; margin: 10px 8px; box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.05); padding: 0 !important"><span class="mac-sign" style="display: flex; padding: 10px 14px 0" hidden=""><svg xmlns="http://www.w3.org/2000/svg" version="1.1" x="0px" y="0px" width="45px" height="13px" viewBox="0 0 450 130">
    <ellipse cx="50" cy="65" rx="50" ry="52" stroke="rgb(220,60,54)" stroke-width="2" fill="rgb(237,108,96)"></ellipse>
    <ellipse cx="225" cy="65" rx="50" ry="52" stroke="rgb(218,151,33)" stroke-width="2" fill="rgb(247,193,81)"></ellipse>
    <ellipse cx="400" cy="65" rx="50" ry="52" stroke="rgb(27,161,37)" stroke-width="2" fill="rgb(100,200,86)"></ellipse>
  </svg></span><code class="language-python" style="padding: 0.5em 1em 1em; overflow-x: auto; text-indent: 0; text-align: left; line-height: 1.75; font-family: &quot;Fira Code&quot;, Menlo, Operator Mono, Consolas, Monaco, monospace; font-size: 14px; margin: 0; white-space: pre-wrap"><span class="hljs-keyword">import</span>&nbsp;asyncio<br><span class="hljs-keyword">import</span>&nbsp;json<br><span class="hljs-keyword">import</span>&nbsp;re<br><span class="hljs-keyword">from</span>&nbsp;contextlib&nbsp;<span class="hljs-keyword">import</span>&nbsp;AsyncExitStack<br><span class="hljs-keyword">from</span>&nbsp;typing&nbsp;<span class="hljs-keyword">import</span>&nbsp;<span class="hljs-type">Optional</span><br><br><span class="hljs-keyword">from</span>&nbsp;lxml&nbsp;<span class="hljs-keyword">import</span>&nbsp;etree<br><span class="hljs-keyword">from</span>&nbsp;mcp&nbsp;<span class="hljs-keyword">import</span>&nbsp;ClientSession,&nbsp;StdioServerParameters,&nbsp;stdio_client<br><span class="hljs-keyword">from</span>&nbsp;mcp.client.sse&nbsp;<span class="hljs-keyword">import</span>&nbsp;sse_client<br><span class="hljs-keyword">from</span>&nbsp;openai&nbsp;<span class="hljs-keyword">import</span>&nbsp;AsyncOpenAI<br><br><span class="hljs-keyword">class</span>&nbsp;<span class="hljs-title class_">SSE_MCPClient</span>():<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">def</span>&nbsp;<span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,api_key,&nbsp;base_url,&nbsp;model</span>):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.session:&nbsp;<span class="hljs-type">Optional</span>[ClientSession]&nbsp;=&nbsp;<span class="hljs-literal">None</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.exit_stack&nbsp;=&nbsp;AsyncExitStack()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.client&nbsp;=&nbsp;AsyncOpenAI(api_key=api_key,&nbsp;base_url=base_url)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.model&nbsp;=&nbsp;model<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.message&nbsp;=&nbsp;[]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">with</span>&nbsp;<span class="hljs-built_in">open</span>(<span class="hljs-string">"MCP_Prompt.txt"</span>,&nbsp;<span class="hljs-string">"r"</span>,&nbsp;encoding=<span class="hljs-string">"utf-8"</span>)&nbsp;<span class="hljs-keyword">as</span>&nbsp;f:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.system_prompt&nbsp;=&nbsp;f.read()<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">async</span>&nbsp;<span class="hljs-keyword">def</span>&nbsp;<span class="hljs-title function_">connect_to_sse_server</span>(<span class="hljs-params">self,&nbsp;mcp_name,&nbsp;server_url,headers=<span class="hljs-literal">None</span></span>):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.service&nbsp;=&nbsp;[{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"name"</span>:&nbsp;mcp_name,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"url"</span>:&nbsp;server_url,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"headers"</span>:&nbsp;headers<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sse_transport&nbsp;=&nbsp;<span class="hljs-keyword">await</span>&nbsp;<span class="hljs-variable language_">self</span>.exit_stack.enter_async_context(sse_client(server_url,&nbsp;headers,timeout=<span class="hljs-number">30</span>,sse_read_timeout=<span class="hljs-number">30</span>))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.sse,<span class="hljs-variable language_">self</span>.write&nbsp;=&nbsp;sse_transport<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.session&nbsp;=&nbsp;<span class="hljs-keyword">await</span>&nbsp;<span class="hljs-variable language_">self</span>.exit_stack.enter_async_context(ClientSession(<span class="hljs-variable language_">self</span>.sse,&nbsp;<span class="hljs-variable language_">self</span>.write))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">await</span>&nbsp;<span class="hljs-variable language_">self</span>.session.initialize()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response&nbsp;=&nbsp;<span class="hljs-keyword">await</span>&nbsp;<span class="hljs-variable language_">self</span>.session.list_tools()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tools&nbsp;=&nbsp;response.tools<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in">print</span>(<span class="hljs-string">f"成功链接到<span class="hljs-subst">{mcp_name}</span>服务，对应的tools："</span>,[tool.name&nbsp;<span class="hljs-keyword">for</span>&nbsp;tool&nbsp;<span class="hljs-keyword">in</span>&nbsp;tools])<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.available_tools&nbsp;=&nbsp;[{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"type"</span>:&nbsp;<span class="hljs-string">"function"</span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"function"</span>:&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"name"</span>:&nbsp;tool.name,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"description"</span>:&nbsp;tool.description,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"parameters"</span>:&nbsp;tool.inputSchema<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword">for</span>&nbsp;tool&nbsp;<span class="hljs-keyword">in</span>&nbsp;response.tools]<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">async</span>&nbsp;<span class="hljs-keyword">def</span>&nbsp;<span class="hljs-title function_">reconnect_sse_server</span>(<span class="hljs-params">self</span>):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">for</span>&nbsp;service&nbsp;<span class="hljs-keyword">in</span>&nbsp;<span class="hljs-variable language_">self</span>.service:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mcp_name&nbsp;=&nbsp;service[<span class="hljs-string">"name"</span>]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;server_url&nbsp;=&nbsp;service[<span class="hljs-string">"url"</span>]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headers&nbsp;=&nbsp;service.get(<span class="hljs-string">"headers"</span>,&nbsp;<span class="hljs-literal">None</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sse_transport&nbsp;=&nbsp;<span class="hljs-keyword">await</span>&nbsp;<span class="hljs-variable language_">self</span>.exit_stack.enter_async_context(sse_client(server_url,&nbsp;headers))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.sse,&nbsp;<span class="hljs-variable language_">self</span>.write&nbsp;=&nbsp;sse_transport<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.session&nbsp;=&nbsp;<span class="hljs-keyword">await</span>&nbsp;<span class="hljs-variable language_">self</span>.exit_stack.enter_async_context(ClientSession(<span class="hljs-variable language_">self</span>.sse,&nbsp;<span class="hljs-variable language_">self</span>.write))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">await</span>&nbsp;<span class="hljs-variable language_">self</span>.session.initialize()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in">print</span>(<span class="hljs-string">f"重新成功链接到&nbsp;<span class="hljs-subst">{mcp_name}</span>&nbsp;服务"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">async</span>&nbsp;<span class="hljs-keyword">def</span>&nbsp;<span class="hljs-title function_">process_query</span>(<span class="hljs-params">self,&nbsp;query:&nbsp;<span class="hljs-built_in">str</span>,&nbsp;stream:&nbsp;<span class="hljs-built_in">bool</span>&nbsp;=&nbsp;<span class="hljs-literal">False</span></span>):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment">#&nbsp;self.message.append({"role":&nbsp;"system",&nbsp;"content":&nbsp;self.system_prompt})</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.message.append({<span class="hljs-string">"role"</span>:&nbsp;<span class="hljs-string">"user"</span>,&nbsp;<span class="hljs-string">"content"</span>:&nbsp;query})<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response&nbsp;=&nbsp;<span class="hljs-keyword">await</span>&nbsp;<span class="hljs-variable language_">self</span>.client.chat.completions.create(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model=<span class="hljs-variable language_">self</span>.model,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;messages=<span class="hljs-variable language_">self</span>.message,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tools=<span class="hljs-variable language_">self</span>.available_tools<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;final_text&nbsp;=&nbsp;[]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assistant_message&nbsp;=&nbsp;response.choices[<span class="hljs-number">0</span>].message<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">while</span>&nbsp;assistant_message.tool_calls:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">for</span>&nbsp;tool_call&nbsp;<span class="hljs-keyword">in</span>&nbsp;assistant_message.tool_calls:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tool_name&nbsp;=&nbsp;tool_call.function.name<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tool_args&nbsp;=&nbsp;json.loads(tool_call.function.arguments)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">await</span>&nbsp;<span class="hljs-variable language_">self</span>.reconnect_sse_server()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;<span class="hljs-keyword">await</span>&nbsp;<span class="hljs-variable language_">self</span>.session.call_tool(tool_name,&nbsp;tool_args)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in">print</span>(<span class="hljs-string">f"calling&nbsp;tools&nbsp;<span class="hljs-subst">{tool_name}</span>,wirh&nbsp;args&nbsp;<span class="hljs-subst">{tool_args}</span>"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in">print</span>(<span class="hljs-string">"Result:"</span>,&nbsp;result.content[<span class="hljs-number">0</span>].text)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.message.extend([<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"role"</span>:&nbsp;<span class="hljs-string">"assistant"</span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"content"</span>:&nbsp;<span class="hljs-literal">None</span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"tool_calls"</span>:&nbsp;[tool_call]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"role"</span>:&nbsp;<span class="hljs-string">"tool"</span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"content"</span>:&nbsp;result.content[<span class="hljs-number">0</span>].text,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">"tool_call_id"</span>:&nbsp;tool_call.<span class="hljs-built_in">id</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;])<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response&nbsp;=&nbsp;<span class="hljs-keyword">await</span>&nbsp;<span class="hljs-variable language_">self</span>.client.chat.completions.create(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model=<span class="hljs-variable language_">self</span>.model,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;messages=<span class="hljs-variable language_">self</span>.message,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tools=<span class="hljs-variable language_">self</span>.available_tools,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;max_tokens=<span class="hljs-number">8048</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assistant_message&nbsp;=&nbsp;response.choices[<span class="hljs-number">0</span>].message<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;content&nbsp;=&nbsp;assistant_message.content<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;final_text.append(content)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">return</span>&nbsp;<span class="hljs-string">"\n"</span>.join(final_text)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">async</span>&nbsp;<span class="hljs-keyword">def</span>&nbsp;<span class="hljs-title function_">chat_loop</span>(<span class="hljs-params">self,stream_mode=<span class="hljs-literal">True</span></span>):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable language_">self</span>.message&nbsp;=&nbsp;[]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">while</span>&nbsp;<span class="hljs-literal">True</span>:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">try</span>:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;query&nbsp;=&nbsp;<span class="hljs-built_in">input</span>(<span class="hljs-string">"\nQuery:&nbsp;"</span>).strip()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">if</span>&nbsp;query.lower()&nbsp;==&nbsp;<span class="hljs-string">'quit'</span>:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">break</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">if</span>&nbsp;query.strip()&nbsp;==&nbsp;<span class="hljs-string">''</span>:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">continue</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response&nbsp;=&nbsp;<span class="hljs-keyword">await</span>&nbsp;<span class="hljs-variable language_">self</span>.process_query(query,&nbsp;stream=stream_mode)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in">print</span>(<span class="hljs-string">"\nAI:"</span>,&nbsp;response)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">except</span>&nbsp;Exception&nbsp;<span class="hljs-keyword">as</span>&nbsp;e:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in">print</span>(<span class="hljs-string">f"\nError:&nbsp;<span class="hljs-subst">{<span class="hljs-built_in">str</span>(e)}</span>"</span>)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">async</span>&nbsp;<span class="hljs-keyword">def</span>&nbsp;<span class="hljs-title function_">cleanup</span>(<span class="hljs-params">self</span>):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">await</span>&nbsp;<span class="hljs-variable language_">self</span>.exit_stack.aclose()<br><br><span class="hljs-keyword">async</span>&nbsp;<span class="hljs-keyword">def</span>&nbsp;<span class="hljs-title function_">main</span>():<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">with</span>&nbsp;<span class="hljs-built_in">open</span>(<span class="hljs-string">"config.json"</span>,&nbsp;<span class="hljs-string">"r"</span>)&nbsp;<span class="hljs-keyword">as</span>&nbsp;f:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config&nbsp;=&nbsp;json.load(f)<br>&nbsp;&nbsp;&nbsp;&nbsp;client&nbsp;=&nbsp;Stdio_MCPClient(config[<span class="hljs-string">"llm"</span>][<span class="hljs-string">"api_key"</span>],&nbsp;config[<span class="hljs-string">"llm"</span>][<span class="hljs-string">"base_url"</span>],&nbsp;config[<span class="hljs-string">"llm"</span>][<span class="hljs-string">"model"</span>])<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">try</span>:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">await</span>&nbsp;client.connect_to_sse_server(mcp_name=<span class="hljs-string">"test"</span>,&nbsp;server_url=<span class="hljs-string">"https://127.0.0.1:7860/sse"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">await</span>&nbsp;client.chat_loop()<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">except</span>&nbsp;&nbsp;Exception&nbsp;<span class="hljs-keyword">as</span>&nbsp;e:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in">print</span>(e)<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">finally</span>:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">await</span>&nbsp;client.cleanup()<br><br><span class="hljs-keyword">if</span>&nbsp;__name__&nbsp;==&nbsp;<span class="hljs-string">'__main__'</span>:<br>&nbsp;&nbsp;&nbsp;&nbsp;asyncio.run(main())</code></pre><p style="text-align: justify; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; margin: 1.5em 8px; letter-spacing: 0.1em; color: rgba(63, 63, 63, 1)"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">注意： sse链接，我增加了一个<code style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 90%; color: rgba(221, 17, 68, 1); background: rgba(27, 31, 35, 0.05); padding: 3px 5px; border-radius: 4px">reconnect_sse_server</code> 函数，主要原因是sse链接过程中过2分钟会自然断开，不论什么办法都无法处理，因此增加这样一个操作。</strong></p><h3 style="text-align: left; line-height: 1.2; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 16.8px; padding: 0 0.2em 0 12px; margin: 2em 8px 0.75em 0; color: rgba(15, 76, 129, 1); font-weight: bold; border-left: 4px solid rgba(15, 76, 129, 1); border-bottom: 1px dashed rgba(15, 76, 129, 1)">（3）版本的自然更新</h3><p style="text-align: justify; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; margin: 1.5em 8px; letter-spacing: 0.1em; color: rgba(63, 63, 63, 1)">有了上面两种客户端的连接方法，自然而然结合两个就可以做到同时结合sse和stdio的方法只需要增加一个分别调用的方法即可，后续代码微微改动便可使用。</p><p style="text-align: justify; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; margin: 1.5em 8px; letter-spacing: 0.1em; color: rgba(63, 63, 63, 1)">当然官方的MCP也是在不段更新的，看了官方有发布<strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">Streamable HTTP Transport ,这种方式在取代sse,以及通过with来启动执行服务的更新等等，一些简单的更新参考下面，更多更新可以前往github上看</strong></p><pre class="hljs code__pre" style="text-align: left; line-height: 1.5; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; overflow-x: auto; border-radius: 8px; margin: 10px 8px; box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.05); padding: 0 !important"><span class="mac-sign" style="display: flex; padding: 10px 14px 0" hidden=""><svg xmlns="http://www.w3.org/2000/svg" version="1.1" x="0px" y="0px" width="45px" height="13px" viewBox="0 0 450 130">
    <ellipse cx="50" cy="65" rx="50" ry="52" stroke="rgb(220,60,54)" stroke-width="2" fill="rgb(237,108,96)"></ellipse>
    <ellipse cx="225" cy="65" rx="50" ry="52" stroke="rgb(218,151,33)" stroke-width="2" fill="rgb(247,193,81)"></ellipse>
    <ellipse cx="400" cy="65" rx="50" ry="52" stroke="rgb(27,161,37)" stroke-width="2" fill="rgb(100,200,86)"></ellipse>
  </svg></span><code class="language-python" style="padding: 0.5em 1em 1em; overflow-x: auto; text-indent: 0; text-align: left; line-height: 1.75; font-family: &quot;Fira Code&quot;, Menlo, Operator Mono, Consolas, Monaco, monospace; font-size: 14px; margin: 0; white-space: pre-wrap"><span class="hljs-keyword">from</span>&nbsp;mcp.server.fastmcp&nbsp;<span class="hljs-keyword">import</span>&nbsp;FastMCP<br><br><span class="hljs-comment">#&nbsp;Stateful&nbsp;server&nbsp;(maintains&nbsp;session&nbsp;state)</span><br>mcp&nbsp;=&nbsp;FastMCP(<span class="hljs-string">"StatefulServer"</span>)<br><br><span class="hljs-comment">#&nbsp;Stateless&nbsp;server&nbsp;(no&nbsp;session&nbsp;persistence)</span><br>mcp&nbsp;=&nbsp;FastMCP(<span class="hljs-string">"StatelessServer"</span>,&nbsp;stateless_http=<span class="hljs-literal">True</span>)<br><br><span class="hljs-comment">#&nbsp;Stateless&nbsp;server&nbsp;(no&nbsp;session&nbsp;persistence,&nbsp;no&nbsp;sse&nbsp;stream&nbsp;with&nbsp;supported&nbsp;client)</span><br>mcp&nbsp;=&nbsp;FastMCP(<span class="hljs-string">"StatelessServer"</span>,&nbsp;stateless_http=<span class="hljs-literal">True</span>,&nbsp;json_response=<span class="hljs-literal">True</span>)<br><br><span class="hljs-comment">#&nbsp;Run&nbsp;server&nbsp;with&nbsp;streamable_http&nbsp;transport</span><br>mcp.run(transport=<span class="hljs-string">"streamable-http"</span>)</code></pre><p style="text-align: justify; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; margin: 1.5em 8px; letter-spacing: 0.1em; color: rgba(63, 63, 63, 1)">其余高级用法可参考页面：https://github.com/modelcontextprotocol/python-sdk#advanced-usage</p><h3 style="text-align: left; line-height: 1.2; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 16.8px; padding: 0 0.2em 0 12px; margin: 2em 8px 0.75em 0; color: rgba(15, 76, 129, 1); font-weight: bold; border-left: 4px solid rgba(15, 76, 129, 1); border-bottom: 1px dashed rgba(15, 76, 129, 1)"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">三、典型应用场景</strong></h3><h3 style="text-align: left; line-height: 1.2; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 16.8px; padding: 0 0.2em 0 12px; margin: 2em 8px 0.75em 0; color: rgba(15, 76, 129, 1); font-weight: bold; border-left: 4px solid rgba(15, 76, 129, 1); border-bottom: 1px dashed rgba(15, 76, 129, 1)"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">1. MCP 适用场景</strong></h3><ul style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; list-style: none; padding-left: 1.5em; margin-left: 0; color: rgba(63, 63, 63, 1)"><li style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; text-indent: -1em; display: block; margin: 0.5em 8px; color: rgba(63, 63, 63, 1)">• <strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">企业系统整合</strong>  将 CRM/ERP 封装为 MCP 服务，供多个 Agent 安全调用<pre class="hljs code__pre" style="text-align: left; line-height: 1.5; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; overflow-x: auto; border-radius: 8px; margin: 10px 8px; box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.05); padding: 0 !important"><span class="mac-sign" style="display: flex; padding: 10px 14px 0" hidden=""><svg xmlns="http://www.w3.org/2000/svg" version="1.1" x="0px" y="0px" width="45px" height="13px" viewBox="0 0 450 130">
    <ellipse cx="50" cy="65" rx="50" ry="52" stroke="rgb(220,60,54)" stroke-width="2" fill="rgb(237,108,96)"></ellipse>
    <ellipse cx="225" cy="65" rx="50" ry="52" stroke="rgb(218,151,33)" stroke-width="2" fill="rgb(247,193,81)"></ellipse>
    <ellipse cx="400" cy="65" rx="50" ry="52" stroke="rgb(27,161,37)" stroke-width="2" fill="rgb(100,200,86)"></ellipse>
  </svg></span><code class="language-" style="padding: 0.5em 1em 1em; overflow-x: auto; text-indent: 0; text-align: left; line-height: 1.75; font-family: &quot;Fira Code&quot;, Menlo, Operator Mono, Consolas, Monaco, monospace; font-size: 14px; margin: 0; white-space: pre-wrap">#&nbsp;MCP&nbsp;连接数据库示例<br>@app.post("/mcp")<br>def&nbsp;query_database(request:&nbsp;dict):<br>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;request["function"]&nbsp;==&nbsp;"get_user_orders":<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user_id&nbsp;=&nbsp;request["parameters"]["user_id"]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;执行SQL查询&nbsp;(伪代码)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;{"orders":&nbsp;db.query(f"SELECT&nbsp;*&nbsp;FROM&nbsp;orders&nbsp;WHERE&nbsp;user_id={user_id}")}</code></pre></li><li style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; text-indent: -1em; display: block; margin: 0.5em 8px; color: rgba(63, 63, 63, 1)">• <strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">跨平台自动化</strong>  组合 GitHub + Slack 的 MCP 服务实现 CI/CD 流程：<pre class="hljs code__pre" style="text-align: left; line-height: 1.5; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; overflow-x: auto; border-radius: 8px; margin: 10px 8px; box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.05); padding: 0 !important"><span class="mac-sign" style="display: flex; padding: 10px 14px 0" hidden=""><svg xmlns="http://www.w3.org/2000/svg" version="1.1" x="0px" y="0px" width="45px" height="13px" viewBox="0 0 450 130">
    <ellipse cx="50" cy="65" rx="50" ry="52" stroke="rgb(220,60,54)" stroke-width="2" fill="rgb(237,108,96)"></ellipse>
    <ellipse cx="225" cy="65" rx="50" ry="52" stroke="rgb(218,151,33)" stroke-width="2" fill="rgb(247,193,81)"></ellipse>
    <ellipse cx="400" cy="65" rx="50" ry="52" stroke="rgb(27,161,37)" stroke-width="2" fill="rgb(100,200,86)"></ellipse>
  </svg></span><code class="language-" style="padding: 0.5em 1em 1em; overflow-x: auto; text-indent: 0; text-align: left; line-height: 1.75; font-family: &quot;Fira Code&quot;, Menlo, Operator Mono, Consolas, Monaco, monospace; font-size: 14px; margin: 0; white-space: pre-wrap">#&nbsp;自动化工作流：提交代码→构建→通知<br>def&nbsp;ci_cd_pipeline():<br>&nbsp;&nbsp;&nbsp;&nbsp;call_mcp("github",&nbsp;{"action":&nbsp;"pull_code",&nbsp;"repo":&nbsp;"my-app"})<br>&nbsp;&nbsp;&nbsp;&nbsp;build_result&nbsp;=&nbsp;call_mcp("jenkins",&nbsp;{"job":&nbsp;"build"})<br>&nbsp;&nbsp;&nbsp;&nbsp;call_mcp("slack",&nbsp;{"channel":&nbsp;"dev-team",&nbsp;"message":&nbsp;f"构建结果：{build_result}"})</code></pre></li></ul><h3 style="text-align: left; line-height: 1.2; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 16.8px; padding: 0 0.2em 0 12px; margin: 2em 8px 0.75em 0; color: rgba(15, 76, 129, 1); font-weight: bold; border-left: 4px solid rgba(15, 76, 129, 1); border-bottom: 1px dashed rgba(15, 76, 129, 1)"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">2. Function Call 适用场景</strong></h3><pre class="hljs code__pre" style="text-align: left; line-height: 1.5; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; overflow-x: auto; border-radius: 8px; margin: 10px 8px; box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.05); padding: 0 !important"><span class="mac-sign" style="display: flex; padding: 10px 14px 0" hidden=""><svg xmlns="http://www.w3.org/2000/svg" version="1.1" x="0px" y="0px" width="45px" height="13px" viewBox="0 0 450 130">
    <ellipse cx="50" cy="65" rx="50" ry="52" stroke="rgb(220,60,54)" stroke-width="2" fill="rgb(237,108,96)"></ellipse>
    <ellipse cx="225" cy="65" rx="50" ry="52" stroke="rgb(218,151,33)" stroke-width="2" fill="rgb(247,193,81)"></ellipse>
    <ellipse cx="400" cy="65" rx="50" ry="52" stroke="rgb(27,161,37)" stroke-width="2" fill="rgb(100,200,86)"></ellipse>
  </svg></span><code class="language-" style="padding: 0.5em 1em 1em; overflow-x: auto; text-indent: 0; text-align: left; line-height: 1.75; font-family: &quot;Fira Code&quot;, Menlo, Operator Mono, Consolas, Monaco, monospace; font-size: 14px; margin: 0; white-space: pre-wrap">#&nbsp;简单实时查询（无需MCP）<br>def&nbsp;get_stock_price(symbol:&nbsp;str):<br>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;yahoo_finance_api(symbol)<br><br>#&nbsp;注册函数到模型<br>functions&nbsp;=&nbsp;[{<br>&nbsp;&nbsp;&nbsp;&nbsp;"name":&nbsp;"get_stock_price",<br>&nbsp;&nbsp;&nbsp;&nbsp;"parameters":&nbsp;{"symbol":&nbsp;{"type":&nbsp;"string"}}<br>}]<br><br>#&nbsp;模型直接调用<br>response&nbsp;=&nbsp;model.generate("AAPL当前股价？",&nbsp;functions=functions)<br>if&nbsp;response.function_call:<br>&nbsp;&nbsp;&nbsp;&nbsp;print(get_stock_price(response.function_call.arguments["symbol"]))</code></pre><h3 style="text-align: left; line-height: 1.2; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 16.8px; padding: 0 0.2em 0 12px; margin: 2em 8px 0.75em 0; color: rgba(15, 76, 129, 1); font-weight: bold; border-left: 4px solid rgba(15, 76, 129, 1); border-bottom: 1px dashed rgba(15, 76, 129, 1)"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">3. 传统 API 调用</strong></h3><pre class="hljs code__pre" style="text-align: left; line-height: 1.5; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; overflow-x: auto; border-radius: 8px; margin: 10px 8px; box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.05); padding: 0 !important"><span class="mac-sign" style="display: flex; padding: 10px 14px 0" hidden=""><svg xmlns="http://www.w3.org/2000/svg" version="1.1" x="0px" y="0px" width="45px" height="13px" viewBox="0 0 450 130">
    <ellipse cx="50" cy="65" rx="50" ry="52" stroke="rgb(220,60,54)" stroke-width="2" fill="rgb(237,108,96)"></ellipse>
    <ellipse cx="225" cy="65" rx="50" ry="52" stroke="rgb(218,151,33)" stroke-width="2" fill="rgb(247,193,81)"></ellipse>
    <ellipse cx="400" cy="65" rx="50" ry="52" stroke="rgb(27,161,37)" stroke-width="2" fill="rgb(100,200,86)"></ellipse>
  </svg></span><code class="language-" style="padding: 0.5em 1em 1em; overflow-x: auto; text-indent: 0; text-align: left; line-height: 1.75; font-family: &quot;Fira Code&quot;, Menlo, Operator Mono, Consolas, Monaco, monospace; font-size: 14px; margin: 0; white-space: pre-wrap">#&nbsp;直接调用&nbsp;REST&nbsp;API（无AI参与）<br>import&nbsp;requests<br>def&nbsp;fetch_weather(city:&nbsp;str):<br>&nbsp;&nbsp;&nbsp;&nbsp;response&nbsp;=&nbsp;requests.get(f"https://api.weather.com/v1/{city}")<br>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;response.json()["temperature"]</code></pre><hr style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: none; -webkit-transform-origin: 0 0; -webkit-transform: scale(1, 0.5); transform-origin: left top; transform: scale(1, 0.5); height: 1px; margin: 2em 0; background: linear-gradient(90deg, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0))"><h3 style="text-align: left; line-height: 1.2; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 16.8px; padding: 0 0.2em 0 12px; margin: 2em 8px 0.75em 0; color: rgba(15, 76, 129, 1); font-weight: bold; border-left: 4px solid rgba(15, 76, 129, 1); border-bottom: 1px dashed rgba(15, 76, 129, 1)"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">四、技术选型建议</strong></h3>
        <section style="padding: 0 8px; max-width: 100%; overflow: auto">
          <table class="preview-table">
            <thead style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; background: rgba(0, 0, 0, 0.05); font-weight: bold; color: rgba(255, 255, 255, 1)"><tr><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">场景</strong></td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">推荐方案</strong></td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">原因</strong></td></tr></thead>
            <tbody><tr><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all">简单同步任务（天气/股价查询）</td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all">Function Call</td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all">低延迟，与模型紧密集成</td></tr><tr><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all">跨系统异步任务（数据分析流水线）</td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">MCP</strong></td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all">标准化协议支持复杂工作流</td></tr><tr><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all">企业内部系统暴露服务</td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all"><strong style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: inherit; color: rgba(15, 76, 129, 1); font-weight: bold">MCP</strong></td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all">统一认证 + 访问控制</td></tr><tr><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all">第三方公共服务调用</td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all">API + Function Call</td><td style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; border: 1px solid rgba(223, 223, 223, 1); padding: 0.5em 1em; color: rgba(63, 63, 63, 1); word-break: keep-all">无需额外协议层</td></tr></tbody>
          </table>
        </section>
      <blockquote style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; font-style: italic; padding: 1em 1em 1em 2em; border-left: 4px solid rgba(15, 76, 129, 1); border-radius: 6px; color: rgba(0, 0, 0, 0.6); background: rgba(247, 247, 247, 1); margin-bottom: 1em; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05)"><p style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 1em; display: block; letter-spacing: 0.1em; color: rgba(63, 63, 63, 1)">关键结论：MCP 的核心价值在于建立企业级 AI 基础设施。当系统需要连接多个异构数据源、要求严格的协议标准化或涉及长周期任务时，MCP 是优于 Function Call 的选择。</p></blockquote><p style="text-align: justify; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; margin: 1.5em 8px; letter-spacing: 0.1em; color: rgba(63, 63, 63, 1)">🌟 如果您对前沿科技、人工智能，尤其是多模态语言模型的应用前景充满好奇，那么这里就是您获取最新资讯、深入解析的绝佳平台。我们不仅分享创新技术，还探讨它们如何塑造我们的未来。</p><p style="text-align: justify; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; margin: 1.5em 8px; letter-spacing: 0.1em; color: rgba(63, 63, 63, 1)">🔍 想要不错过任何一篇精彩内容，就请订阅我们的公众号吧！您的关注是我们持续探索和分享的动力。在这里，我们一起揭开AI的神秘面纱，见证科技如何让世界变得更加精彩。</p><figure style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 14px; margin: 1.5em 8px; color: rgba(63, 63, 63, 1)"><img style="text-align: left; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 14px; display: block; margin: 0.1em auto 0.5em; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1)" src="https://fastly.jsdelivr.net/gh/bucketio/img11@main/2025/06/05/1749112364054-ca9dcf08-2e44-47dc-9afc-f75c5a78e224.png" title="null" alt=""><figcaption style="text-align: center; line-height: 1.75; font-family: -apple-system-font, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Hiragino Sans GB, Microsoft YaHei UI, Microsoft YaHei, Arial, sans-serif; font-size: 0.8em; color: rgba(136, 136, 136, 1)"></figcaption></figure>
</section>
</div>
<div id="MySignature" role="contentinfo">
    <p>本文来自博客园，作者：<a href="https://www.cnblogs.com/danieldaren/" target="_blank">高冷的程序员大大</a>，转载请注明原文链接：<a href="https://www.cnblogs.com/danieldaren/p/18912626" target="_blank">https://www.cnblogs.com/danieldaren/p/18912626</a></p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.06281735028356482" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-06-05 16:47">2025-06-05 16:47</span>&nbsp;
<a href="https://www.cnblogs.com/danieldaren">高冷的程序员大大</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18912626);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18912626', targetLink: 'https://www.cnblogs.com/danieldaren/p/18912626', title: '如何使用MCP开发一个客户端和服务端' })">举报</a>
</div>
        