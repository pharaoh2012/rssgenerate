
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiongzaiqiren/p/18675144/datepicker" title="发布于 2025-01-16 15:48">
    <span role="heading" aria-level="2">原生JS实现一个日期选择器（DatePicker）组件</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>这是通过原生HTML/CSS/JavaScript完成一个日期选择器（datepicker）组件，一个纯手搓的组件的开发。主要包括datepicker静态结构的编写、日历数据的计划获取、组件的渲染以及组件事件的处理。</p>
<p>根据调用时的时间格式参数，可以控制短日期格式或长日期格式。</p>
<table>
<thead>
<tr>
<th>实现效果（短日期格式）</th>
<th>实现效果（长日期格式）</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://img2024.cnblogs.com/blog/840264/202501/840264-20250116153141605-2099979558.png" alt="" loading="lazy"></td>
<td><img src="https://img2024.cnblogs.com/blog/840264/202501/840264-20250116153153504-468705891.png" alt="" loading="lazy"></td>
</tr>
</tbody>
</table>
<p>完整代码包含4个文件：</p>
<ol>
<li>JavaScript实现功能代码全部在 datepicker-v1.20250113.js 文件</li>
<li>CSS实现样式渲染代码全部在 datepicker-v1.20250113.css 文件</li>
<li>HTML实现一个调用demo 在 datepicker.html 文件</li>
<li>另外就是 输入框的小图标 calendar-icon.png</li>
</ol>
<p>datepicker-v1.20250113.js 完整代码如下：</p>
<details>
<summary>点击查看代码</summary>
<pre><code>/*!
 * datepicker Library v1.0
 *
 * Copyright 2025, xiongzaiqiren
 * Date: Mon Jan 13 2025 11:27:27 GMT+0800 (中国标准时间)
 */
; (function () {
    var datepicker = {
        paramsDate: function (inputElement, targetFormat) {
            this.inputElement = inputElement; // 当前输入框
            this.targetFormat = targetFormat || 'yyyy/MM/dd HH:mm:ss'; // 目标日期时间格式
            this.monthData = {}; // 绘制日历组件的数据源
            this.sureTime = { year: 0, month: 0, date: 0, hour: -1, minute: -1, second: -1 }; // 确定的选中的日期时间，或者初始化到某个时刻，或者是初始化到当前时刻。这里时分秒必需初始化小于0,后米面才好判断是否要构建时分秒控件
        },
        getMonthDate: function (year, month) {
            var ret = [];
            if (!year || !month) {
                var today = new Date();
                year = today.getFullYear();
                month = today.getMonth() + 1;
            }
            var firstDay = new Date(year, month - 1, 1);//获取当月第一天
            var firstDayWeekDay = firstDay.getDay();//获取星期几，才好判断排在第几列
            if (0 === firstDayWeekDay) {//周日
                firstDayWeekDay = 7;
            }

            year = firstDay.getFullYear();
            month = firstDay.getMonth() + 1;

            var lastDayOfLastMonth = new Date(year, month - 1, 0);//获取最后一天
            var lastDateOfLastMonth = lastDayOfLastMonth.getDate();

            var preMonthDayCount = firstDayWeekDay - 1;
            var lastDay = new Date(year, month, 0);
            var lastDate = lastDay.getDate();

            for (var i = 0; i &lt; 7 * 6; i++) {
                var date = i + 1 - preMonthDayCount;
                var showDate = date;
                var thisMonth = month;
                //上一月
                if (0 &gt;= date) {
                    thisMonth = month - 1;
                    showDate = lastDateOfLastMonth + date;
                } else if (date &gt; lastDate) {
                    //下一月
                    thisMonth = month + 1;
                    showDate = showDate - lastDate;
                }
                if (0 === thisMonth) {
                    thisMonth = 12;
                }
                if (13 === thisMonth) {
                    thisMonth = 1;
                }
                ret.push({
                    month: thisMonth,
                    date: date,
                    showDate: showDate
                })

            }
            return {
                year: year,
                month: month,
                days: ret
            };
        }
    };


     window.datepicker = datepicker;//该函数唯一暴露的对象
    
})();

/***** main.js *****/
(function () {
     var datepicker = window.datepicker;

    var $datepicker_wrapper;
    //渲染函数，由于没有使用第三方插件或库，所以使用的是模板拼接的方法
    datepicker.buildUi = function (monthData, sureTime) {
        // monthData = datepicker.getMonthDate(year, month); // year, month, monthData 是面板需要绘画的日期时间集合
        var html = '&lt;div class="ui-datepicker-header"&gt;' +
            '&lt;a href="javascript:void(0);" class="ui-datepicker-btn ui-datepicker-prevYear-btn"&gt;&amp;#8810;&lt;/a&gt;' +
            '&lt;a href="javascript:void(0);" class="ui-datepicker-btn ui-datepicker-prev-btn"&gt;&amp;lt;&lt;/a&gt;' +
            '&lt;a href="javascript:void(0);" class="ui-datepicker-btn ui-datepicker-nextYear-btn"&gt;&amp;#8811;&lt;/a&gt;' +
            '&lt;a href="javascript:void(0);" class="ui-datepicker-btn ui-datepicker-next-btn"&gt;&amp;gt;&lt;/a&gt;' +
            '&lt;span class="datepicker-curr-month"&gt;' + monthData.year + '-' + monthData.month + '&lt;/span&gt;' +
            '&lt;/div&gt;' +
            '&lt;div class="ui-datepicker-body"&gt;' +
            '&lt;table&gt;' +
            '&lt;thead&gt;' +
            '&lt;tr&gt;' +
            '&lt;th&gt;\u4e00&lt;/th&gt;' +
            '&lt;th&gt;\u4e8c&lt;/th&gt;' +
            '&lt;th&gt;\u4e09&lt;/th&gt;' +
            '&lt;th&gt;\u56db&lt;/th&gt;' +
            '&lt;th&gt;\u4e94&lt;/th&gt;' +
            '&lt;th&gt;\u516d&lt;/th&gt;' +
            '&lt;th&gt;\u65e5&lt;/th&gt;' +
            '&lt;/tr&gt;' +
            '&lt;/thead&gt;' +
            '&lt;tbody&gt;';

        function coreMonth(coreMonth, month) {
            return coreMonth == month;
        }
        function isToday(year, month, date) {
            const _today = new Date().getFullYear() + '/' + (new Date().getMonth() + 1) + '/' + new Date().getDate();
            return (year + '/' + month + '/' + date) == _today;
        }
        function sureTimeIsToday(year, month, date, sureTime) {
            return (!!sureTime &amp;&amp; (sureTime.year === year &amp;&amp; sureTime.month === month &amp;&amp; sureTime.date === date));
        }


        for (var i = 0; i &lt; monthData.days.length; i++) {
            var date = monthData.days[i];
            if (i % 7 === 0) {
                html += '&lt;tr&gt;';
            }

            html += '&lt;td class="' +
                ((i % 7 === 5 || i % 7 === 6) ? 'weekend' : '') +
                (coreMonth(monthData.month, date.month) ? '' : ' notmonth') +
                (isToday(monthData.year, date.month, date.showDate) ? ' today' : '') +
                (sureTimeIsToday(monthData.year, date.month, date.showDate, sureTime) ? ' active' : '') +

                '" data-date="' + date.date + '"&gt;' + date.showDate + '&lt;/td&gt;';
            if (i % 7 === 6) {
                html += '&lt;/tr&gt;';
            }
        }

        html += '&lt;/tbody&gt;' +
            '&lt;/table&gt;' +
            '&lt;/div&gt;';

        function buildTimeOptions(max) {
            let _s = '';
            for (i = 0; i &lt;= max; i++) {
                let _n = i &lt; 10 ? ('0' + i) : i;
                _s += '&lt;option value="' + _n + '"&gt;' + _n + '&lt;/option&gt;';
            }
            return _s;
        }

        html += '&lt;div class="ui-datepicker-footer"&gt;' +
            '&lt;a href="javascript:void(0);" class="ui-datepicker-btn ui-datepicker-today-btn"&gt;\u4eca\u5929&lt;/a&gt;';
        if (!!sureTime &amp;&amp; (0 &lt;= sureTime.hour &amp;&amp; 0 &lt;= sureTime.minute &amp;&amp; 0 &lt;= sureTime.second)) {
            html += '&lt;select class="hour"&gt;' + buildTimeOptions(23) + '&lt;/select&gt;' +
                '&lt;select class="minute"&gt;' + buildTimeOptions(59) + '&lt;/select&gt;' +
                '&lt;select class="second"&gt;' + buildTimeOptions(59) + '&lt;/select&gt;';
        }
        html += '&lt;a href="javascript:void(0);" class="ui-datepicker-btn ui-datepicker-ok-btn"&gt;\u786e\u5b9a&lt;/a&gt;' +
            '&lt;/div&gt;';
        return html;
    };
    //日历渲染函数
    datepicker.render = function (paramsDate, direction) {
        var year, month;
        if (!!paramsDate.monthData &amp;&amp; 0 &lt; paramsDate.monthData.year) {
            year = paramsDate.monthData.year;
            month = paramsDate.monthData.month;
        }
        else if (!!paramsDate.sureTime &amp;&amp; (0 &lt; paramsDate.sureTime.year &amp;&amp; 0 &lt; paramsDate.sureTime.month)) {
            // 根据输入框的值初始化确定日期
            year = paramsDate.sureTime.year;
            month = paramsDate.sureTime.month;
        }

        if ('prev' === direction) {
            month--;
            if (month &lt; 1) {
                year--;
                month = 12;
            }
        }
        else if ('next' === direction) {
            month++;
        }
        else if ('prevYear' === direction) {
            year--;
        }
        else if ('nextYear' === direction) {
            year++;
        }
        else if ('today' === direction) {
            let t = new Date();
            year = t.getFullYear();
            month = t.getMonth() + 1;

            paramsDate.sureTime.year = year;
            paramsDate.sureTime.month = month;
            paramsDate.sureTime.date = t.getDate();
            if (0 &lt;= paramsDate.sureTime.hour &amp;&amp; 0 &lt;= paramsDate.sureTime.minute &amp;&amp; 0 &lt;= paramsDate.sureTime.second) {
                paramsDate.sureTime.hour = t.getHours();
                paramsDate.sureTime.minute = t.getMinutes();
                paramsDate.sureTime.second = t.getSeconds();
            }
        }

        paramsDate.monthData = datepicker.getMonthDate(year, month); // year, month, monthData 是面板需要绘画的日期时间集合
        var html = datepicker.buildUi(paramsDate.monthData, paramsDate.sureTime);

        $datepicker_wrapper = document.querySelector('.ui-datepicker-wrapper');

        if (!$datepicker_wrapper) {
            $datepicker_wrapper = document.createElement('div');
            $datepicker_wrapper.className = 'ui-datepicker-wrapper';
        }

        $datepicker_wrapper.innerHTML = html;

        document.body.appendChild($datepicker_wrapper);
        // 绘画完了，初始化选中时间
        if (!!paramsDate.sureTime &amp;&amp; (0 &lt;= paramsDate.sureTime.hour &amp;&amp; 0 &lt;= paramsDate.sureTime.minute &amp;&amp; 0 &lt;= paramsDate.sureTime.second)) {
            setSelectedByValue('.ui-datepicker-wrapper select.hour', paramsDate.sureTime.hour);
            setSelectedByValue('.ui-datepicker-wrapper select.minute', paramsDate.sureTime.minute);
            setSelectedByValue('.ui-datepicker-wrapper select.second', paramsDate.sureTime.second);
        }

    };
    //初始换函数
    datepicker.main = function (paramsDate) {
        var $targetFormat = paramsDate.targetFormat;
        var $input = paramsDate.inputElement;
        // 根据输入框的值初始化控件的值
        let initInputdate = new Date($input.value);
        if (!!initInputdate &amp;&amp; initInputdate.getFullYear() &gt; 0) {
            paramsDate.sureTime.year = initInputdate.getFullYear();
            paramsDate.sureTime.month = initInputdate.getMonth() + 1;
            paramsDate.sureTime.date = initInputdate.getDate();
            if (/([0-1]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])/gi.test($input.value)) {
                // 校验时分秒：格式：HH:mm:ss
                paramsDate.sureTime.hour = initInputdate.getHours();
                paramsDate.sureTime.minute = initInputdate.getMinutes();
                paramsDate.sureTime.second = initInputdate.getSeconds();
            }
        }

        if (0 &gt; paramsDate.sureTime.hour || 0 &gt; paramsDate.sureTime.minute || 0 &gt; paramsDate.sureTime.second) {
            if (!!$targetFormat &amp;&amp; ($targetFormat.toLocaleLowerCase().includes('hh:mm:ss'))) {
                // 将展示时分秒控件
                paramsDate.sureTime.hour = 0;
                paramsDate.sureTime.minute = 0;
                paramsDate.sureTime.second = 0;
            }
            else {
                // 不展示时分秒控件
                paramsDate.sureTime.hour = -1;
                paramsDate.sureTime.minute = -1;
                paramsDate.sureTime.second = -1;
            }
        }

        // 在初始化控件之前，清理掉以前的日期时间控件
        const divsToRemove = document.querySelectorAll('.ui-datepicker-wrapper');
        divsToRemove.forEach(div =&gt; div.remove());

        datepicker.render(paramsDate);

        var isOpen = false;
        if (isOpen) {
            $datepicker_wrapper.classList.remove('ui-datepicker-wrapper-show');
            isOpen = false;
        } else {
            $datepicker_wrapper.classList.add('ui-datepicker-wrapper-show');

            var left = $input.offsetLeft;
            var top = $input.offsetTop;
            var height = $input.offsetHeight;

            $datepicker_wrapper.style.top = top + height + 2 + 'px';
            $datepicker_wrapper.style.left = left + 'px';

            isOpen = true;
        }


        //给按钮添加点击事件
        datepicker.addEventListener($datepicker_wrapper, 'click', function (e) {
            var $target = e.target;
            //上一月,下一月
            if ($target.classList.contains('ui-datepicker-prev-btn')) {
                datepicker.render(paramsDate, 'prev');
            } else if ($target.classList.contains('ui-datepicker-next-btn')) {
                datepicker.render(paramsDate, 'next');
            }
            //上一年,下一年
            else if ($target.classList.contains('ui-datepicker-prevYear-btn')) {
                datepicker.render(paramsDate, 'prevYear');
            } else if ($target.classList.contains('ui-datepicker-nextYear-btn')) {
                datepicker.render(paramsDate, 'nextYear');
            }
            //今天
            else if ($target.classList.contains('ui-datepicker-today-btn')) {
                datepicker.render(paramsDate, 'today');
            }

            if ($target.tagName.toLocaleLowerCase() === 'td') {
                // 移除其他日期选中状态
                document.querySelectorAll('.ui-datepicker-wrapper td').forEach(function (td) {
                    if (td.classList.contains('active')) {
                        td.classList.remove('active');
                    }
                });

                // 通过classname 设置选中日期
                $target.classList.add('active');
            }

            if (!$target.classList.contains('ui-datepicker-ok-btn')) {
                return true;
            }
            // 以下是点击“确定”之后的代码 
            var selected_date;
            var selectedTd = document.querySelector('.ui-datepicker-wrapper td.active');
            if (!!selectedTd) {
                selected_date = selectedTd.dataset.date || 0;
            }

            if (3 === document.querySelectorAll('.ui-datepicker-wrapper select').length) {
                var selectElementHour = document.querySelector('.ui-datepicker-wrapper select.hour');
                paramsDate.sureTime.hour = selectElementHour.options[selectElementHour.selectedIndex].value || 0;

                var selectElementMinute = document.querySelector('.ui-datepicker-wrapper select.minute');
                paramsDate.sureTime.minute = selectElementMinute.options[selectElementMinute.selectedIndex].value || 0;

                var selectElementSecond = document.querySelector('.ui-datepicker-wrapper select.second');
                paramsDate.sureTime.second = selectElementSecond.options[selectElementSecond.selectedIndex].value || 0;
            }

            if (1 &lt;= selected_date &amp;&amp; selected_date &lt;= 31) {
                // 至少选中到天
                let date;
                if (0 &lt;= paramsDate.sureTime.hour) {
                    date = new Date(paramsDate.monthData.year, paramsDate.monthData.month - 1, selected_date, paramsDate.sureTime.hour, paramsDate.sureTime.minute, paramsDate.sureTime.second);
                }
                else {
                    date = new Date(paramsDate.monthData.year, paramsDate.monthData.month - 1, selected_date);
                }

                $input.value = dateFormat(date, $targetFormat);
            }

            $datepicker_wrapper.classList.remove('ui-datepicker-wrapper-show');
            isOpen = false;

        }, false);

    };



    /* 定义一个函数，用于添加事件监听器，现代浏览器还是旧版IE浏览器。 */
    datepicker.addEventListener = function (el, eventName, callback, useCapture) {
        if (el.addEventListener) {
            el.addEventListener(eventName, callback, useCapture);
        } else if (el.attachEvent) {
            el.attachEvent('on' + eventName, callback);
        }
    };
    // 给输入框绑定点击事件
    datepicker.init = function (input, targetFormat) {
        this.addEventListener(document.querySelector(input), 'click', function (e) {
            let $paramsDate = new datepicker.paramsDate(e.target, targetFormat);
            datepicker.main($paramsDate);
        });
    };

    // 通过value设置选中项
    function setSelectedByValue(selectors, value) {
        var select = document.querySelector(selectors);
        if (!!!select || !!!select.options) {
            return false;
        }
        for (var i = 0; i &lt; select.options.length; i++) {
            if (parseInt(select.options[i].value) == value) {
                select.options[i].selected = true;
                break;
            }
        }
    };
    /* 日期时间格式化·开始 */
    Date.prototype.Format = function (fmt) {
        if (!this || this.getFullYear() &lt;= 1) return '';
        var o = {
            "M+": this.getMonth() + 1, //月份       
            "d+": this.getDate(), //日      
            "h+": this.getHours() == 0 ? 12 : this.getHours(), //小时       
            "H+": this.getHours(), //小时       
            "m+": this.getMinutes(), //分       
            "s+": this.getSeconds(), //秒       
            "q+": Math.floor((this.getMonth() + 3) / 3), //季度       
            "f": this.getMilliseconds() //毫秒       
        };
        var week = {
            "0": "\u65e5",
            "1": "\u4e00",
            "2": "\u4e8c",
            "3": "\u4e09",
            "4": "\u56db",
            "5": "\u4e94",
            "6": "\u516d"
        };
        const reg_y = /(y+)/;
        if (reg_y.test(fmt)) {
            fmt = fmt.replace(reg_y.exec(fmt)[1], (this.getFullYear() + "").slice(4 - reg_y.exec(fmt)[1].length));
        }
        const reg_E = /(E+)/;
        if (reg_E.test(fmt)) {
            fmt = fmt.replace(reg_E.exec(fmt)[1], ((reg_E.exec(fmt)[1].length &gt; 1) ? (reg_E.exec(fmt)[1].length &gt; 2 ? "\u661f\u671f" : "\u5468") : "") + week[this.getDay() + ""]);
        }
        for (var k in o) {
            const reg_k = new RegExp("(" + k + ")");
            if (reg_k.test(fmt)) {
                const t = reg_k.exec(fmt)[1];
                fmt = fmt.replace(t, (t.length == 1) ? (o[k]) : (("00" + o[k]).slice(("" + o[k]).length)));
            }
        }
        return fmt;
    };
    function dateFormat(date, format) {
        if (!date) return '';
        if (!format) format = 'yyyy/MM/dd HH:mm:ss';
        if ("object" == typeof (date)) return date.Format(format);
        else { return (new Date(date)).Format(format); }
    };
    /* 日期时间格式化·结束 */

})();

</code></pre>
</details>
<hr>
<p>datepicker-v1.20250113.css 完整代码如下：</p>
<details>
<summary>点击查看代码</summary>
<pre><code>.datepicker {
    width: 230px;
	padding: 5px;
	line-height: 24px;
    background: url(calendar-icon.png);
    background-repeat: no-repeat;
    background-position: right 3px center;
    padding-right: 20px;
	border: 1px solid #ccc;
	border-radius: 4px;
    -o-border-radius: 4px;
    -ms-border-radius: 4px;
    -moz-border-radius: 4px;
    -webkit-border-radius: 4px;
    -khtml-border-radius: 4px;
}
.datepicker:focus {
	outline: none;
	border: 1px solid #1abc9c;
}

/* 最外层区域 */
.ui-datepicker-wrapper {
	display: none; /*添加默认隐藏*/
    position: absolute; /*添加绝对定位*/
    width: 240px;
    font-size: 16px;
    color: #666666;
	background-color: #fff;
    box-shadow: 2px 2px 8px 2px rgba(128, 128, 128, 0.3);
}
/* 头部区域 */
.ui-datepicker-wrapper .ui-datepicker-header,.ui-datepicker-wrapper .ui-datepicker-footer {
    padding: 0 20px;
    height: 50px;
    line-height: 50px;
    text-align: center;
    background: #f0f0f0;
    border-bottom: 1px solid #cccccc;
    font-weight: bold;
}
/* 设置两个按钮 */
.ui-datepicker-wrapper .ui-datepicker-btn {
    font-family: serif;
    font-size: 20px;
    width: 20px;
    height: 50px;
    line-height: 50px;
    color: #1abc9c;
    text-align: center;
    cursor: pointer;
    text-decoration: none;
}
.ui-datepicker-wrapper .ui-datepicker-prev-btn,.ui-datepicker-wrapper .ui-datepicker-prevYear-btn {
    float: left;
}
.ui-datepicker-wrapper .ui-datepicker-next-btn,.ui-datepicker-wrapper .ui-datepicker-nextYear-btn {
    float: right;
}
.ui-datepicker-wrapper .ui-datepicker-footer{
    display: flex;
    line-height: 30px;
    height: 30px;
    padding: 1px 1px;
    background-color: #fff;
}
.ui-datepicker-wrapper .ui-datepicker-footer a,.ui-datepicker-wrapper select,.ui-datepicker-wrapper select option{
    flex: 1 1 auto;
    width: 100%;
    height: 30px;
    line-height: 30px;
    font-size: 12px;
    text-align: center;
    cursor: pointer;
}
.ui-datepicker-wrapper .ui-datepicker-footer .ui-datepicker-btn{
    height: 28px;
    line-height: 28px;
    border:1px solid #c0c0c0;
}
.ui-datepicker-wrapper .ui-datepicker-footer .ui-datepicker-btn:hover,.ui-datepicker-wrapper .ui-datepicker-footer .ui-datepicker-btn:active{
    border:1px solid #1abc9c;
}

/* body区域 */
.ui-datepicker-wrapper .ui-datepicker-body table {
    width: 100%;
	border-collapse: separate;
    border-spacing: 1px;
}
/* 表头和正文 */
.ui-datepicker-wrapper .ui-datepicker-body th,
.ui-datepicker-wrapper .ui-datepicker-body td {
    height: 30px;
    text-align: center;
}
.ui-datepicker-wrapper .ui-datepicker-body th {
    font-size: 14px;
    height: 40px;
    line-height: 40px;
}
/* 表格部分 */
.ui-datepicker-wrapper .ui-datepicker-body td {
    border: 1px solid #f0f0f0;
    font-size: 12px;
    width: 14%;
    cursor: pointer;
}
/* “周末”的日期 */
.ui-datepicker-wrapper .ui-datepicker-body td.weekend{
	color: #FF5722;
}
/* 非“当前展示月份”的日期 */
.ui-datepicker-wrapper .ui-datepicker-body td.notmonth{
	background-color: #f3f3f3;
}
/* “今天”的日期 */
.ui-datepicker-wrapper .ui-datepicker-body td.today {
    border-color:#7cffe5;
}
.ui-datepicker-wrapper .ui-datepicker-body td.today:hover,.ui-datepicker-wrapper .ui-datepicker-body td.today:active,
.ui-datepicker-wrapper .ui-datepicker-body td:hover,.ui-datepicker-wrapper .ui-datepicker-body td:focus {
    border-color: #c0c0c0;
}
/* 选中的日期 */
.ui-datepicker-wrapper .ui-datepicker-body td:active,.ui-datepicker-wrapper .ui-datepicker-body td.active {
    border-color: #1abc9c;
}

.ui-datepicker-wrapper-show {
    display: block;
}


</code></pre>
</details>
<hr>
<p>datepicker.html 做的一个简易 demo 完整代码如下：</p>
<details>
<summary>点击查看代码</summary>
<pre><code>&lt;!doctype html&gt;
&lt;html&gt;

&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;
    &lt;meta name="MobileOptimized" content="240"&gt;
    &lt;meta name="applicable-device" content="mobile"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"&gt;
    &lt;meta name="format-detection" content="telephone=no,email=no,adress=no"&gt;

    &lt;link href="datepicker-v1.20250113.css" rel="stylesheet" type="text/css"&gt;

    &lt;title&gt;测试demo -datepicker &lt;/title&gt;

    &lt;script src="datepicker-v1.20250113.js"&gt;&lt;/script&gt;
    
&lt;/head&gt;

&lt;body&gt;
    支持两种格式的日期时间输入控件。短日期时间格式的：
    &lt;input type="text" class="datepicker" id="t1"&gt;
    长日期时间格式的：
    &lt;input type="text" class="datepicker" id="t2"&gt;

    &lt;!-- JS脚本 --&gt;
    &lt;script&gt;
        // var monthDate = datepicker.getMonthDate(2019, 2);
        // console.log(monthDate);
        // datepicker.init(document.querySelector('.ui-datepicker-wrapper'))
        document.querySelector('#t1').value = '2008/08/20';
        datepicker.init('#t1', 'yyyy/MM/dd');
        datepicker.init('#t2', 'yyyy/MM/dd HH:mm:ss');
    &lt;/script&gt;

    调用示例：
    &lt;code&gt;
&lt;pre style="background-color: #eee;padding: 5px 3px;border: 1px solid #ccc;"&gt;
&amp;lt;!-- 引入 日期时间控件样式表文件 --&amp;gt;
&amp;lt;link href="datepicker-v1.20250113.css" rel="stylesheet" type="text/css"&amp;gt;
&amp;lt;!-- 引入 日期时间控件 JavaScript文件 --&amp;gt;
&amp;lt;script src="datepicker-v1.20250113.js"&amp;gt;&amp;lt;/script&amp;gt;


支持两种格式的日期时间输入控件。短日期时间格式的：
&amp;lt;input type="text" class="datepicker"  id="t1"&amp;gt;
长日期时间格式的：
&amp;lt;input type="text" class="datepicker"  id="t2"&amp;gt;

&amp;lt;script&amp;gt;
    document.querySelector('#t1').value = '2008/08/20';
    datepicker.init('#t1', 'yyyy/MM/dd');
    datepicker.init('#t2', 'yyyy/MM/dd HH:mm:ss');
&amp;lt;/script&amp;gt;
&lt;/pre&gt;
&lt;/code&gt;

&lt;/body&gt;

&lt;/html&gt;
</code></pre>
</details>
<p>最后是输入框里的小图标： <img src="https://img2024.cnblogs.com/blog/840264/202501/840264-20250116154420489-395056022.png" alt="" loading="lazy"></p>
<hr>
<p>完成代码已上传到 GitHub：<a href="https://github.com/classbao/ClassBaoJavascript" target="_blank" rel="noopener nofollow">GitHub 源代码</a></p>
<p>【完】</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="29.02201364478472" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-16 15:49">2025-01-16 15:48</span>&nbsp;
<a href="https://www.cnblogs.com/xiongzaiqiren">熊仔其人</a>&nbsp;
阅读(<span id="post_view_count">430</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18675144" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18675144);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18675144', targetLink: 'https://www.cnblogs.com/xiongzaiqiren/p/18675144/datepicker', title: '原生JS实现一个日期选择器（DatePicker）组件' })">举报</a>
</div>
        