
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/CryptoRzz/p/18749688" title="发布于 2025-03-03 23:59">
    <span role="heading" aria-level="2">php对接股票、期货数据源API接口</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>以下是使用 PHP 对接 StockTV API 的项目实现。我们将使用 <code>cURL</code> 进行 HTTP 请求，并使用 <code>Ratchet</code> 处理 WebSocket 连接。</p>
<hr>
<h2 id="项目结构">项目结构</h2>
<pre><code>stocktv-api-php/
│
├── src/
│   ├── StockAPI.php
│   ├── ForexAPI.php
│   ├── FuturesAPI.php
│   ├── CryptoAPI.php
│   └── ApiClient.php
│
├── tests/
│   ├── StockAPITest.php
│   ├── ForexAPITest.php
│   ├── FuturesAPITest.php
│   └── CryptoAPITest.php
│
├── composer.json
├── README.md
└── index.php
</code></pre>
<hr>
<h2 id="1-安装依赖">1. 安装依赖</h2>
<p>在项目根目录下创建 <code>composer.json</code> 文件，并添加以下内容：</p>
<pre><code class="language-json">{
    "name": "yourname/stocktv-api-php",
    "description": "PHP client for StockTV API",
    "require": {
        "php": "&gt;=7.4",
        "ext-curl": "*",
        "ext-json": "*",
        "ratchet/pawl": "^0.4.1"
    },
    "autoload": {
        "psr-4": {
            "StockTV\\": "src/"
        }
    },
    "require-dev": {
        "phpunit/phpunit": "^9.5"
    }
}
</code></pre>
<p>运行以下命令安装依赖：</p>
<pre><code class="language-bash">composer install
</code></pre>
<hr>
<h2 id="2-创建基础工具类">2. 创建基础工具类</h2>
<p>在 <code>src/ApiClient.php</code> 中，创建一个基础工具类来处理 API 请求：</p>
<pre><code class="language-php">&lt;?php

namespace StockTV;

class ApiClient
{
    private $apiKey;
    private $baseUrl = "https://api.stocktv.top";

    public function __construct(string $apiKey)
    {
        $this-&gt;apiKey = $apiKey;
    }

    protected function get(string $endpoint, array $params = []): array
    {
        $url = $this-&gt;baseUrl . "/" . $endpoint . "?key=" . $this-&gt;apiKey;
        if (!empty($params)) {
            $url .= "&amp;" . http_build_query($params);
        }

        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        $response = curl_exec($ch);
        curl_close($ch);

        return json_decode($response, true);
    }
}
</code></pre>
<hr>
<h2 id="3-实现股票-api">3. 实现股票 API</h2>
<p>在 <code>src/StockAPI.php</code> 中，实现股票相关的 API：</p>
<pre><code class="language-php">&lt;?php

namespace StockTV;

class StockAPI extends ApiClient
{
    public function getStockList(int $countryId, int $pageSize = 10, int $page = 1): array
    {
        return $this-&gt;get("stock/stocks", [
            "countryId" =&gt; $countryId,
            "pageSize"  =&gt; $pageSize,
            "page"      =&gt; $page
        ]);
    }

    public function getIndices(int $countryId, ?string $flag = null): array
    {
        $params = ["countryId" =&gt; $countryId];
        if ($flag) {
            $params["flag"] = $flag;
        }
        return $this-&gt;get("stock/indices", $params);
    }

    public function getKline(int $pid, string $interval): array
    {
        return $this-&gt;get("stock/kline", [
            "pid"      =&gt; $pid,
            "interval" =&gt; $interval
        ]);
    }
}
</code></pre>
<hr>
<h2 id="4-实现外汇-api">4. 实现外汇 API</h2>
<p>在 <code>src/ForexAPI.php</code> 中，实现外汇相关的 API：</p>
<pre><code class="language-php">&lt;?php

namespace StockTV;

class ForexAPI extends ApiClient
{
    public function getCurrencyList(): array
    {
        return $this-&gt;get("market/currencyList");
    }

    public function getRealTimeRates(?string $countryType = null): array
    {
        $params = [];
        if ($countryType) {
            $params["countryType"] = $countryType;
        }
        return $this-&gt;get("market/currency", $params);
    }
}
</code></pre>
<hr>
<h2 id="5-实现期货-api">5. 实现期货 API</h2>
<p>在 <code>src/FuturesAPI.php</code> 中，实现期货相关的 API：</p>
<pre><code class="language-php">&lt;?php

namespace StockTV;

class FuturesAPI extends ApiClient
{
    public function getFuturesList(): array
    {
        return $this-&gt;get("futures/list");
    }

    public function getFuturesMarket(string $symbol): array
    {
        return $this-&gt;get("futures/querySymbol", [
            "symbol" =&gt; $symbol
        ]);
    }
}
</code></pre>
<hr>
<h2 id="6-实现加密货币-api">6. 实现加密货币 API</h2>
<p>在 <code>src/CryptoAPI.php</code> 中，实现加密货币相关的 API：</p>
<pre><code class="language-php">&lt;?php

namespace StockTV;

class CryptoAPI extends ApiClient
{
    public function getCoinInfo(): array
    {
        return $this-&gt;get("crypto/getCoinInfo");
    }

    public function getTickerPrice(string $symbols): array
    {
        return $this-&gt;get("crypto/tickerPrice", [
            "symbols" =&gt; $symbols
        ]);
    }
}
</code></pre>
<hr>
<h2 id="7-websocket-支持">7. WebSocket 支持</h2>
<p>使用 <code>Ratchet</code> 库实现 WebSocket 连接：</p>
<pre><code class="language-php">&lt;?php

require 'vendor/autoload.php';

use Ratchet\Client\WebSocket;
use Ratchet\Client\Connector;
use React\EventLoop\Factory;

$loop = Factory::create();
$connector = new Connector($loop);

$apiKey = "your_api_key_here";
$wsUrl = "wss://ws-api.stocktv.top/connect?key=" . $apiKey;

$connector($wsUrl)-&gt;then(function (WebSocket $conn) {
    $conn-&gt;on('message', function ($msg) use ($conn) {
        echo "Received: {$msg}\n";
    });

    $conn-&gt;on('close', function ($code = null, $reason = null) {
        echo "Connection closed ({$code} - {$reason})\n";
    });
}, function (\Exception $e) use ($loop) {
    echo "Could not connect: {$e-&gt;getMessage()}\n";
    $loop-&gt;stop();
});

$loop-&gt;run();
</code></pre>
<hr>
<h2 id="8-测试代码">8. 测试代码</h2>
<p>在 <code>tests/StockAPITest.php</code> 中，编写测试代码：</p>
<pre><code class="language-php">&lt;?php

use PHPUnit\Framework\TestCase;
use StockTV\StockAPI;

class StockAPITest extends TestCase
{
    private $stockAPI;

    protected function setUp(): void
    {
        $this-&gt;stockAPI = new StockAPI("your_api_key_here");
    }

    public function testGetStockList(): void
    {
        $response = $this-&gt;stockAPI-&gt;getStockList(14, 10, 1);
        $this-&gt;assertArrayHasKey("data", $response);
    }
}
</code></pre>
<p>运行测试：</p>
<pre><code class="language-bash">./vendor/bin/phpunit tests
</code></pre>
<hr>
<h2 id="9-使用示例">9. 使用示例</h2>
<p>在 <code>index.php</code> 中，编写示例代码：</p>
<pre><code class="language-php">&lt;?php

require 'vendor/autoload.php';

use StockTV\StockAPI;

$apiKey = "your_api_key_here";
$stockAPI = new StockAPI($apiKey);

try {
    $stockList = $stockAPI-&gt;getStockList(14, 10, 1);
    print_r($stockList);
} catch (Exception $e) {
    echo "Error: " . $e-&gt;getMessage();
}
</code></pre>
<hr>
<h2 id="10-readmemd">10. README.md</h2>
<p>在项目根目录下创建 <code>README.md</code> 文件：</p>
<pre><code class="language-markdown"># StockTV API PHP Client

A PHP client for accessing StockTV's global financial data APIs.

## Installation

```bash
composer install
</code></pre>
<h2 id="usage">Usage</h2>
<pre><code class="language-php">use StockTV\StockAPI;

$apiKey = "your_api_key_here";
$stockAPI = new StockAPI($apiKey);

$stockList = $stockAPI-&gt;getStockList(14, 10, 1);
print_r($stockList);
</code></pre>
<h2 id="总结">总结</h2>
<p>这个 PHP 项目提供了对 StockTV API 的完整支持，包括股票、外汇、期货和加密货币数据。通过模块化设计和清晰的代码结构，开发者可以轻松扩展和集成到自己的项目中。</p>
<p>对接代码：<a href="https://github.com/CryptoRzz/stocktv-api-py" target="_blank" rel="noopener nofollow">https://github.com/CryptoRzz/stocktv-api-py</a></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.013159541523148148" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-04 00:00">2025-03-03 23:59</span>&nbsp;
<a href="https://www.cnblogs.com/CryptoRzz">CryptoRzz</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18749688" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18749688);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18749688', targetLink: 'https://www.cnblogs.com/CryptoRzz/p/18749688', title: 'php对接股票、期货数据源API接口' })">举报</a>
</div>
        