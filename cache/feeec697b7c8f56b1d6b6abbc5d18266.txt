
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xaboy/p/18987286" title="发布于 2025-07-16 13:03">
    <span role="heading" aria-level="2">Vue 开源项目低代码表单设计器  FcDesigner v3.3 版本发布!兼容Element Plus/Ant Design/Vant,支持PC/移动端</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        FcDesigner 是一款基于 Vue 的低代码可视化表单设计器工具，通过数据驱动表单渲染。可以通过拖拽的方式快速创建表单，提高开发者对表单的开发效率，节省开发者的时间。并广泛应用于在政务系统、OA 系统、ERP 系统、电商系统、流程管理等领域。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p><strong>FcDesigner 是一款基于 Vue 的低代码可视化表单设计器工具，通过数据驱动表单渲染。可以通过拖拽的方式快速创建表单，提高开发者对表单的开发效率，节省开发者的时间。并广泛应用于在政务系统、OA 系统、ERP 系统、电商系统、流程管理等领域。</strong></p>
<p>源码地址:&nbsp;<a href="https://github.com/xaboy/form-create-designer" target="_blank" rel="noopener nofollow">Github</a>&nbsp;|&nbsp;<a href="https://gitee.com/xaboy/form-create-designer" target="_blank" rel="noopener nofollow">Gitee</a>&nbsp;|&nbsp;<a href="https://view.form-create.com/" target="_blank" rel="noopener nofollow">文档</a>&nbsp;|&nbsp;<a href="https://form-create.com/v3/designer/" target="_blank" rel="noopener nofollow">在线演示</a></p>
<h2 id="核心功能">核心功能🔥</h2>
<ul>
<li>内置表单多语言体系，轻松打破语言隔阂。</li>
<li>提供 30+ 常用组件，涵盖表单组件、布局组件、辅助类组件等各类实用模块。</li>
<li>支持灵活扩展自定义组件，个性化开发轻松拿捏。支持二次扩展开发，深度定制不在话下。</li>
<li>支持组件样式配置，动态调整组件尺寸、颜色、间距等样式属性。</li>
<li>支持事件交互配置，灵活配置组件事件响应逻辑，实现复杂交互场景。</li>
<li>表单大纲、操作记录、数据录入、组件生成、事件配置、表单验证、栅格布局、表格布局等。</li>
</ul>
<h2 id="33-版本更新内容"><strong>3.3 版本更新内容</strong></h2>
<h3 id="-新增功能">✨ 新增功能:</h3>
<ul>
<li>增强表格布局组件，支持批量操作格子样式，清空，合并等操作，双击快速添加内容，支持通过拖动设置格子宽和高</li>
</ul>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1384602/202507/1384602-20250716125920667-66566092.png" class="lazyload"></p>
<ul>
<li>
<p>操作权限控制</p>
<ul>
<li><code>config</code>&nbsp;增加&nbsp;<code>componentPermission</code>&nbsp;配置，可精确控制每个组件的可见配置项和允许的操作</li>
<li><code>config</code>&nbsp;增加&nbsp;<code>beforeRemoveRule</code>&nbsp;和&nbsp;<code>beforeActiveRule</code>&nbsp;回调控制组件是否可以删除和选中</li>
<li>拖拽规则增加&nbsp;<code>allowDragTo</code>&nbsp;配置项，控制当前组件允许拖入到那些组件中</li>
<li>拖拽规则增加&nbsp;<code>maxChildren</code>&nbsp;配置项，限制子组件拖入数量</li>
<li>拖拽规则和&nbsp;<code>config</code>&nbsp;增加&nbsp;<code>checkDrag</code>&nbsp;回调控制组件是否可以拖入</li>
</ul>
</li>
<li>
<p>增加手写签名组件和标题组件</p>
</li>
<li>
<p>左右两侧板块增加展开收齐按钮</p>
</li>
</ul>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1384602/202507/1384602-20250716125937126-580464217.png" class="lazyload"></p>
<ul>
<li>完善快捷键</li>
</ul>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1384602/202507/1384602-20250716125946269-954536717.png" class="lazyload"></p>
<ul>
<li>增加 getHtml 方法，导出 Html</li>
</ul>

<pre><code>// 将表单导出为 HTML
this.$refs.designer.getHtml()
</code></pre>
<p></p>
<ul>
<li>
<p>增加标题和手写签名组件</p>
</li>
<li>
<p>远程请求支持前置处理回调</p>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1384602/202507/1384602-20250716130003705-1593988820.png" class="lazyload"></p>
</li>
<li>
<p>完善表格表单组件，新增最小行，是否可删除开关，是否可新增开关和标题位置的配置项</p>
</li>
<li>
<p>增加&nbsp;<code>previewSubmit</code>&nbsp;和&nbsp;<code>previewReset</code>&nbsp;事件，预览弹窗表单提交和重置时触发</p>
</li>
<li>
<p><code>config</code>&nbsp;增加&nbsp;<code>beforeRemoveRule</code>&nbsp;和&nbsp;<code>beforeActiveRule</code>&nbsp;回调控制组件是否可以删除和选中</p>
</li>
<li>
<p>表单增加&nbsp;<code>beforeSubmit</code>&nbsp;事件</p>
</li>
<li>
<p>增加&nbsp;<code>changeField</code>&nbsp;事件，监听组件的字段 ID 变化</p>
</li>
<li>
<p>增加&nbsp;<code>showMenuBar</code>&nbsp;配置项，控制是否显示最左侧菜单栏</p>
</li>
<li>
<p>增加&nbsp;<code>showPreviewBtn</code>&nbsp;配置项，控制是否显示预览按钮</p>
</li>
<li>
<p>增加&nbsp;<code>exitConfirm</code>&nbsp;配置项，控制关闭设计器时是否弹出确认操作弹窗</p>
</li>
</ul>
<h3 id="-功能优化">🔧 功能优化:</h3>
<ul>
<li>隐藏多语言后同步隐藏多语言选择</li>
<li>修改上传组件事件配置参数 (⚠️不兼容)</li>
<li>表单事件列表增加事件是否定义的状态</li>
<li><code>menu</code>&nbsp;增加&nbsp;<code>before</code>&nbsp;参数，可以显示在顶部</li>
<li>优化事件配置</li>
<li>修改弹出框宽度为&nbsp;<strong>1080px</strong></li>
<li>支持配置事件的描述</li>
<li>优化设计器样式</li>
</ul>
<h3 id="-问题修复">🐞 问题修复：</h3>
<ul>
<li>✅ 修复 预览 json 时函数解析问题</li>
<li>✅ 修复 事件保存时可能报错问题</li>
<li>✅ 修复 自定义属性可能保存失败问题</li>
<li>✅ 修复 默认表单配置项可能不生效问题</li>
</ul>
<h2 id="配置面板"><strong>配置面板</strong></h2>
<p>您可以根据业务需求随心定制设计器界面和功能组合啦，系统会自动生成对应的配置参数，简直不要太方便！</p>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1384602/202507/1384602-20250716130016526-433196384.png" class="lazyload"></p>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1384602/202507/1384602-20250716130024223-1536723359.png" class="lazyload"></p>
<p></p>
<ul>
<li>
<p><strong>@form-create/designer</strong> ElementPlus/ElementUI表单设计器 💻</p>
</li>
<li>
<p><strong>@form-create/antd-designer</strong> AntDesignVue表单设计器(Vue3) 💻</p>
</li>
<li>
<p><strong>@form-create/vant-designer</strong> Vant移动端表单设计器(Vue3) 📱</p>
</li>
</ul>
<p>作者：无懈可击<br>
链接：<a href="https://juejin.cn/post/7505633505980907529" target="_blank" rel="noopener nofollow">https://juejin.cn/post/7505633505980907529</a><br>
来源：稀土掘金<br>
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
<h1 id="element-ui-版本表单设计器">Element UI 版本表单设计器</h1>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1384602/202507/1384602-20250716130034133-1940272529.png" class="lazyload"></p>
<p>本项目采用 Vue2.7 和 Element UI 进行页面构建，内置多语言解决方案，支持二次扩展开发，支持自定义组件扩展。<a href="https://www.form-create.com/designer/" target="_blank" rel="noopener nofollow">演示站</a></p>
<h2 id="安装">安装</h2>
<p>要开始使用&nbsp; <strong>@form-create/designer</strong>，首先需要将其安装到您的项目中。可以通过 npm 安装：</p>
<pre><code class="language-sh">npm install @form-create/designer@^1
npm install @form-create/element-ui@^2.7
npm install element-ui
</code></pre>
<p>如已安装旧版本渲染器，请执行以下命令更新至最新版：</p>
<pre><code class="language-sh">npm update @form-create/element-ui@^2.7
</code></pre>
<p><strong>请检查当前 Vue 版本，若版本低于 2.7，请执行以下升级命令：</strong></p>
<pre><code class="language-sh">npm update vue@^2.7
</code></pre>
<h2 id="引入">引入</h2>
<p><strong>Node.js 引入</strong></p>
<p>对于 Node.js 项目，您需要通过 npm 安装相关依赖，并在您的项目中引入并配置它们。</p>
<pre><code class="language-js">import Vue from 'vue';
import FcDesigner from '@form-create/designer';
import ELEMENT from 'element-ui';
import 'element-ui/lib/theme-chalk/index.css';
// 使用 Element UI
Vue.use(ELEMENT);
// 使用 form-create 和 designer
Vue.use(FcDesigner);
Vue.use(FcDesigner.formCreate);
</code></pre>
<p><strong>CDN 引入</strong></p>
<p>如果您希望通过 CDN 方式引入&nbsp;<strong>FcDesigner</strong>，请确保先引入 Vue.js 和 Element UI。然后引入&nbsp; <strong>@form-create/element-ui</strong>&nbsp;和&nbsp; <strong>@form-create/designer</strong>，并在 Vue 实例中进行配置</p>
<pre><code class="language-html">&lt;!-- 引入 Vue.js --&gt;
&lt;script src="https://unpkg.com/vue@2.7.16/dist/vue.js"&gt;&lt;/script&gt;
&lt;!-- 引入 Element UI 样式 --&gt;
&lt;link rel="stylesheet" href="https://unpkg.com/element-ui/lib/theme-chalk/index.css"&gt;
&lt;!-- 引入 Element UI --&gt;
&lt;script src="https://unpkg.com/element-ui/lib/index.js"&gt;&lt;/script&gt;
&lt;!-- 引入 form-create 和 designer --&gt;
&lt;script src="https://unpkg.com/@form-create/element-ui/dist/form-create.min.js"&gt;&lt;/script&gt;
&lt;script src="https://unpkg.com/@form-create/designer/dist/index.min.js"&gt;&lt;/script&gt;
&lt;div id="app"&gt;
    &lt;fc-designer height="100vh"&gt;&lt;/fc-designer&gt;
&lt;/div&gt;
&lt;script&gt;
    Vue.use(FcDesigner);
    Vue.use(FcDesigner.formCreate);
    new Vue().$mount('#app');
&lt;/script&gt;
</code></pre>
<p><strong>使用</strong></p>
<p>在 Vue 组件中，您可以像下面这样使用 fc-designer 组件：</p>
<pre><code class="language-html">&lt;template&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;fc-designer ref="designer" height="100vh" /&gt;
&lt;/template&gt;
</code></pre>
<p></p>
<h1 id="element-plus-版本表单设计器">Element Plus 版本表单设计器</h1>
<p>@form-create/designer 支持 Vue 3 环境，以下是如何在 Vue 3 项目中安装和使用该库的指南。</p>
<p><a href="https://www.form-create.com/vue3/designer/" target="_blank" rel="noopener nofollow">演示站</a></p>
<h2 id="安装-1">安装</h2>
<p>首先，安装&nbsp; <strong>@form-create/designer</strong>&nbsp;的 Vue 3 版本</p>
<pre><code class="language-sh">npm install @form-create/designer@^3
npm install @form-create/element-ui@^3
npm install element-plus
</code></pre>
<p>如已安装旧版本渲染器，请执行以下命令更新至最新版：</p>
<pre><code class="language-sh">npm update @form-create/element-ui@^3
</code></pre>
<h2 id="引入-1">引入</h2>
<p><strong>Node.js 引入</strong></p>
<p>对于使用 Node.js 的项目，按照以下步骤在您的 Vue 3 项目中引入并配置：</p>
<pre><code class="language-js">import { createApp } from 'vue';
import FcDesigner from '@form-create/designer';
import ElementPlus from 'element-plus';
import 'element-plus/dist/index.css';
// 创建 Vue 应用
const app = createApp(App);
// 使用 Element Plus 和 FcDesigner
app.use(ElementPlus);
app.use(FcDesigner);
app.use(FcDesigner.formCreate);
// 挂载应用
app.mount('#app');
</code></pre>
<p><strong>CDN 引入</strong></p>
<p>如果您选择使用 CDN，可以按照以下步骤在 HTML 文件中引入相关依赖：</p>
<pre><code class="language-html">&lt;!-- 引入 Element Plus 样式 --&gt;
&lt;link href="https://unpkg.com/element-plus/dist/index.css" rel="stylesheet" /&gt;
&lt;!-- 引入 Vue 3 --&gt;
&lt;script src="https://unpkg.com/vue"&gt;&lt;/script&gt;
&lt;!-- 引入 Element Plus --&gt;
&lt;script src="https://unpkg.com/element-plus/dist/index.full.js"&gt;&lt;/script&gt;
&lt;!-- 引入 form-create 和 designer --&gt;
&lt;script src="https://unpkg.com/@form-create/element-ui@next/dist/form-create.min.js"&gt;&lt;/script&gt;
&lt;script src="https://unpkg.com/@form-create/designer@next/dist/index.umd.js"&gt;&lt;/script&gt;
&lt;div id="app"&gt;
    &lt;fc-designer height="100vh"&gt;&lt;/fc-designer&gt;
&lt;/div&gt;
&lt;script&gt;
    const { createApp } = Vue;
    const app = createApp({});
    app.use(ElementPlus);
    app.use(FcDesigner);
    app.use(FcDesigner.formCreate);
    app.mount('#app');
&lt;/script&gt;
</code></pre>
<h2 id="使用">使用</h2>
<p>在 Vue 3 组件中，您可以通过以下方式使用 fc-designer 组件：</p>
<pre><code class="language-html">&lt;template&gt;
    &lt;fc-designer ref="designer" height="100vh" /&gt;
&lt;/template&gt;
&lt;script setup&gt;
    import { ref } from 'vue';
    // 可以在此处获取设计器实例或进行其他操作
    const designer = ref(null);
&lt;/script&gt;
</code></pre>
<h1 id="antdesignvue-版本-pc-端表单设计器">AntDesignVue 版本 PC 端表单设计器</h1>
<p><a href="https://form-create.com/v3/antd/designer/" target="_blank" rel="noopener nofollow">演示站</a></p>
<p>本项目采用 Vue3.0 和 Ant Design Vue 进行页面构建，内置多语言解决方案，支持二次扩展开发，支持自定义组件扩展。</p>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1384602/202507/1384602-20250716130055369-2069115932.png" class="lazyload"></p>
<h2 id="安装-2">安装</h2>
<p>首先，安装&nbsp; <strong>@form-create/antd-designer</strong></p>
<pre><code class="language-sh">npm install @form-create/antd-designer@^3
npm install @form-create/ant-design-vue@^3
npm install ant-design-vue
</code></pre>
<p>如已安装旧版本渲染器，请执行以下命令更新至最新版：</p>
<pre><code class="language-sh">npm update @form-create/ant-design-vue@^3
</code></pre>
<h2 id="引入-2">引入</h2>
<p><strong>Node.js 引入</strong></p>
<p>对于使用 Node.js 的项目，按照以下步骤在您的 Vue 3 项目中引入并配置：</p>
<pre><code class="language-js">import FcDesigner from '@form-create/antd-designer'
import antd from 'ant-design-vue';
import 'ant-design-vue/dist/reset.css';
// 创建 Vue 应用
const app = createApp(App);
app.use(antd)
app.use(FcDesigner)
app.use(FcDesigner.formCreate)
// 挂载应用
app.mount('#app');
</code></pre>
<p><strong>CDN 引入</strong></p>
<p>如果您选择使用 CDN，可以按照以下步骤在 HTML 文件中引入相关依赖：</p>
<pre><code class="language-html">&lt;link rel="stylesheet" href="https://unpkg.com/ant-design-vue@4/dist/reset.css"&gt;&lt;/link&gt;
&lt;link rel="stylesheet" href="https://fastly.jsdelivr.net/npm/vant@4/lib/index.css"&gt;&lt;/link&gt;
&lt;!-- 引入 Vue 及所需组件 --&gt;
&lt;script src="https://unpkg.com/dayjs/dayjs.min.js"&gt;&lt;/script&gt;
&lt;script src="https://unpkg.com/dayjs/plugin/customParseFormat.js"&gt;&lt;/script&gt;
&lt;script src="https://unpkg.com/dayjs/plugin/weekday.js"&gt;&lt;/script&gt;
&lt;script src="https://unpkg.com/dayjs/plugin/localeData.js"&gt;&lt;/script&gt;
&lt;script src="https://unpkg.com/dayjs/plugin/weekOfYear.js"&gt;&lt;/script&gt;
&lt;script src="https://unpkg.com/dayjs/plugin/weekYear.js"&gt;&lt;/script&gt;
&lt;script src="https://unpkg.com/dayjs/plugin/advancedFormat.js"&gt;&lt;/script&gt;
&lt;script src="https://unpkg.com/dayjs/plugin/quarterOfYear.js"&gt;&lt;/script&gt;
&lt;script src="https://unpkg.com/vue"&gt;&lt;/script&gt;
&lt;script src="https://unpkg.com/ant-design-vue@4/dist/antd.min.js"&gt;&lt;/script&gt;
&lt;script src="https://fastly.jsdelivr.net/npm/vant@4/lib/vant.min.js"&gt;&lt;/script&gt;


&lt;!-- 引入 form-create 及 fcDesigner --&gt;
&lt;script src="https://unpkg.com/@form-create/ant-design-vue@^3/dist/form-create.min.js"&gt;&lt;/script&gt;
&lt;script src="https://unpkg.com/@form-create/vant@^3/dist/form-create.min.js"&gt;&lt;/script&gt;
&lt;script src="https://unpkg.com/@form-create/antd-designer@^3/dist/index.umd.js"&gt;&lt;/script&gt;


&lt;div id="app"&gt;
    &lt;fc-designer height="100vh"&gt;&lt;/fc-designer&gt;
&lt;/div&gt;
&lt;!-- 挂载组件 --&gt;
&lt;script&gt;
    // 创建 Vue 应用实例
    const app = Vue.createApp({});
    // 挂载 AntDesignVue
    app.use(antd);
    // 挂载 fcDesignerPro 组件
    app.use(FcDesigner);
    // 挂载 formCreate
    app.use(FcDesigner.formCreate);
    // 挂载 Vue 应用
    app.mount('#app');
&lt;/script&gt;
</code></pre>
<h2 id="使用-1">使用</h2>
<p>在 Vue 3 组件中，您可以通过以下方式使用 fc-designer 组件：</p>
<pre><code class="language-html">&lt;template&gt;
    &lt;fc-designer ref="designer" height="100vh" /&gt;
&lt;/template&gt;
&lt;script setup&gt;
    import { ref } from 'vue';
    // 可以在此处获取设计器实例或进行其他操作
    const designer = ref(null);
&lt;/script&gt;
</code></pre>
<h1 id="移动端表单设计器">移动端表单设计器</h1>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1384602/202507/1384602-20250716130107087-1101291186.png" class="lazyload"></p>
<p><a href="https://form-create.com/v3/mobile/" target="_blank" rel="noopener nofollow">演示站</a></p>
<p>本项目采用 Vue3.0 和 ElementPlus 进行移动端页面构建，移动端使用的是 vant4.0 版本，内置多语言解决方案，支持二次扩展开发，支持自定义组件扩展。</p>
<h2 id="安装-3">安装</h2>
<p>首先，安装&nbsp; <strong>@form-create/vant-designer</strong></p>
<pre><code class="language-sh">npm install @form-create/vant-designer@^3
npm install @form-create/element-ui@^3
npm install @form-create/vant@^3
npm install element-plus
npm install vant
</code></pre>
<p>如已安装旧版本渲染器，请执行以下命令更新至最新版：</p>
<pre><code class="language-sh">npm update @form-create/element-ui@^3
npm update @form-create/vant@^3
</code></pre>
<h2 id="引入-3">引入</h2>
<p><strong>Node.js 引入</strong></p>
<p>对于使用 Node.js 的项目，按照以下步骤在您的 Vue 3 项目中引入并配置：</p>
<pre><code class="language-js">import FcDesignerMobile from '@form-create/vant-designer'
import ELEMENT from 'element-plus';
import vant from 'vant';
import 'vant/lib/index.css';
import 'element-plus/dist/index.css';
// 创建 Vue 应用
const app = createApp(App);
app.use(ELEMENT)
app.use(vant)
app.use(FcDesignerMobile)
app.use(FcDesignerMobile.formCreate)
// 挂载应用
app.mount('#app');
</code></pre>
<p><strong>CDN 引入</strong></p>
<p>如果您选择使用 CDN，可以按照以下步骤在 HTML 文件中引入相关依赖：</p>
<pre><code class="language-html">&lt;link rel="stylesheet" href="https://unpkg.com/element-plus/dist/index.css"&gt;&lt;/link&gt;
&lt;link rel="stylesheet" href="https://unpkg.com/vant@4/lib/index.css"/&gt;
&lt;script src="https://unpkg.com/vue"&gt;&lt;/script&gt;
&lt;script src="https://unpkg.com/element-plus/dist/index.full.js"&gt;&lt;/script&gt;
&lt;script src="https://unpkg.com/vant@4/lib/vant.min.js"&gt;&lt;/script&gt;
&lt;script src="https://unpkg.com/@form-create/element-ui@next/dist/form-create.min.js"&gt;&lt;/script&gt;
&lt;script src="https://unpkg.com/@form-create/vant@next/dist/form-create.min.js"&gt;&lt;/script&gt;
&lt;script src="https://unpkg.com/@form-create/vant-designer@next/dist/index.umd.js"&gt;&lt;/script&gt;
&lt;div id="app"&gt;
    &lt;fc-designer-mobile height="100vh"&gt;&lt;/fc-designer-mobile&gt;
&lt;/div&gt;
&lt;script&gt;
    const { createApp } = Vue;
    const app = createApp({});
    app.use(ElementPlus);
    app.use(vant);
    app.use(FcDesignerMobile);
    app.use(FcDesignerMobile.formCreate);
    app.mount('#app');
&lt;/script&gt;
</code></pre>
<h2 id="使用-2">使用</h2>
<p>在 Vue 3 组件中，您可以通过以下方式使用 fc-designer 组件：</p>
<pre><code class="language-html">&lt;template&gt;
    &lt;fc-designer-mobile ref="designer" height="100vh" /&gt;
&lt;/template&gt;
&lt;script setup&gt;
    import { ref } from 'vue';
    // 可以在此处获取设计器实例或进行其他操作
    const designer = ref(null);
&lt;/script&gt;
</code></pre>
<p></p>
<h2 id="获取设计表单的数据">获取设计表单的数据</h2>
<p>在表单设计器中，可以通过以下方法获取表单的生成规则和配置，这些数据通常会被保存到数据库中，以便后续加载和回显。</p>
<pre><code class="language-js">//获取表单的生成规则
const ruleJson = this.$refs.designer.getJson();
//获取表单的配置
const optionsJson = this.$refs.designer.getOptionsJson();


//todo 保存JSON数据到数据库中
</code></pre>
<p>这些数据可以用来保存到数据库中，确保表单的状态和配置可以在页面刷新或重新加载时恢复。</p>
<h2 id="回显设计表单">回显设计表单</h2>
<p>当需要回显设计好的表单时，您需要加载之前保存的 JSON 规则和配置，并将其应用到设计器中。</p>
<pre><code class="language-js">//todo 加载表单JSON规则


//回显表单
this.$refs.designer.setOptions(optionsJson);
this.$refs.designer.setRule(ruleJson);
</code></pre>
<p>通过这些方法，可以将之前保存的表单规则和配置应用到设计器中，从而恢复表单的状态。</p>
<h2 id="表单渲染">表单渲染</h2>
<p>要渲染表单，您需要挂载 form-create 到 Vue 应用中，并加载表单规则和配置。</p>
<pre><code class="language-js">//从设计器中导入 formCreate
import {formCreate} from '@form-create/designer';
//挂载 formCreate
app.use(formCreate);
</code></pre>
<p><strong>表单渲染示例</strong></p>
<pre><code class="language-html">&lt;template&gt;
    &lt;div id="app"&gt;
        &lt;form-create v-model="formData" v-model:api="fApi" :rule="rule" :option="option"&gt;&lt;/form-create&gt;
    &lt;/div&gt;
&lt;/template&gt;
&lt;script&gt;
    import {formCreate} from '@form-create/designer';
    export default {
        data() {
            return {
                //实例对象
                fApi: {},
                //表单数据
                formData: {},
                //表单生成规则
                rule: [],
                //组件参数配置
                option: {}
            }
        },
        beforeCreate(){
            const rule,option;
            // todo 加载表单JSON规则
            this.rule = formCreate.parseJson(rule);
            this.option = formCreate.parseJson(option);
        }
    }
&lt;/script&gt;
</code></pre>
<h2 id="动态加载和保存表单配置">动态加载和保存表单配置</h2>
<p>可以通过 API 请求动态加载表单规则和配置，并将表单数据保存到服务器。</p>
<pre><code class="language-js">import axios from 'axios';


// 加载表单配置
async function loadFormConfig() {
    try {
        const response = await axios.get('/api/form-config');
        return response.data;
    } catch (error) {
        console.error('加载表单配置失败', error);
        return { rule: [], option: {} };
    }
}


// 保存表单配置
async function saveFormConfig(ruleJson, optionsJson) {
    try {
        await axios.post('/api/form-config', { rule: ruleJson, options: optionsJson });
    } catch (error) {
        console.error('保存表单配置失败', error);
    }
}
</code></pre>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-16 13:04">2025-07-16 13:03</span>&nbsp;
<a href="https://www.cnblogs.com/xaboy">xaboy</a>&nbsp;
阅读(<span id="post_view_count">98</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18987286);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18987286', targetLink: 'https://www.cnblogs.com/xaboy/p/18987286', title: 'Vue 开源项目低代码表单设计器  FcDesigner v3.3 版本发布!兼容Element Plus/Ant Design/Vant,支持PC/移动端' })">举报</a>
</div>
        