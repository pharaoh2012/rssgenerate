
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/BNTang/p/18911263" title="发布于 2025-06-04 22:29">
    <span role="heading" aria-level="2">AI编码焕新：用Context7</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>最近，一款名为 Context7 MCP 的工具备受瞩目。网络上流传着各种说法，比如它解决了大语言模型的痛点、革新了 AI 编码方式，甚至能让 Cursor 效率提升十倍。那么，Context7 真有这么神奇吗？它究竟是什么？</p>
<h1 id="context7-是什么">Context7 是什么？</h1>
<p>官方介绍称，Context7 能将最新的、特定版本的文档和代码片段等信息，直接整合到你给大模型的提示（prompt）中。如此一来，大模型便能根据这些实时更新的资料编写代码，避免被其固有的、可能过时的知识库所误导。</p>
<p>简单来说，Context7 就像给大模型配备了一个实时搜索引擎。在回应请求前，大模型会先用 Context7 搜集最新相关信息作为上下文进行学习，再根据这些新信息生成答案。</p>
<h1 id="不用-context7-会怎么样">不用 Context7 会怎么样？</h1>
<p>若不使用 Context7，大语言模型（LLM）在处理请求时，会依赖其知识库中关于所用库的过时或通用信息。这可能导致以下问题：</p>
<ul>
<li>生成的代码示例基于旧版训练数据（可能是一年甚至更久以前的），因此已经过时。</li>
<li>生成不存在的 API，即产生“幻觉”API。</li>
<li>针对旧版软件包给出笼统或不准确的答案。</li>
</ul>
<h1 id="使用-context7-有什么好处">使用 Context7 有什么好处？</h1>
<p>Context7 MCP 能直接从信息源提取最新的、特定版本的文档和代码示例，并将其整合到你的提示中。</p>
<p>例如，在 Cursor 中，你可以在提示中加入 <code>use context7</code>：</p>
<pre><code class="language-json">Create a basic Next.js project with app router. use context7
</code></pre>
<pre><code class="language-json">Create a script to delete the rows where the city is "" given PostgreSQL credentials. use context7
</code></pre>
<p>Context7 会将最新的代码示例和文档直接提取到大语言模型的上下文中。</p>
<p>使用 Context7 的步骤很简单：</p>
<ol>
<li>像往常一样写下提示。</li>
<li>告诉大语言模型使用 <code>use context7</code>。</li>
<li>获得准确可用的代码答案。</li>
</ol>
<p>简单说，就是在你的问题末尾加上 <code>use context7</code>。<br>
这样，大语言模型就会自动使用 Context7 获取最新相关信息。</p>
<p>如此，你便无需频繁切换浏览器标签页查找资料，也无需担心遇到“幻觉”API，更不会生成基于过时信息的代码。</p>
<h1 id="使用-context7">使用 Context7</h1>
<p>关于 MCP 是什么，以及如何在 Cursor 中使用 MCP，请参考以下文章：</p>
<ol>
<li><a href="https://mp.weixin.qq.com/s/-jalmsP7ZDEeo5n2NdW82g" target="_blank" rel="noopener nofollow">MCP协议爆火揭秘</a></li>
<li><a href="https://mp.weixin.qq.com/s/KFd7bTBFgTmBQcJtWMOL6w" target="_blank" rel="noopener nofollow">轻松配置Cursor玩转MCP</a></li>
</ol>
<p>mcp.json：</p>
<pre><code class="language-json">{
    "mcpServers": {
        "github.com/upstash/context7-mcp": {
            "command": "cmd",
            "args": [
                "/c",
                "npx",
                "-y",
                "@upstash/context7-mcp@latest"
            ],
            "disabled": false,
            "autoApprove": []
        }
    }
}
</code></pre>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202506/2105804-20250604220736885-2084451780.png" alt="" loading="lazy"></p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202506/2105804-20250604215639015-419338905.png" alt="" loading="lazy"></p>
<h1 id="演示示例">演示示例</h1>
<p>通过一个具体例子来看看 Context7 的实际效果。</p>
<p>假设你想创建一个使用 React 18 新特性的项目。不使用 Context7 时，AI 可能会提供基于旧版本的代码：</p>
<pre><code class="language-javascript">// 可能生成的过时代码
import React from 'react';
import ReactDOM from 'react-dom';

ReactDOM.render(&lt;App /&gt;, document.getElementById('root'));
</code></pre>
<p>但使用 Context7 后，你只需这样提问：</p>
<pre><code class="language-json">Create a React 18 project with the new createRoot API. use context7
</code></pre>
<p>Context7 会自动获取 React 18 的最新文档，AI 便会生成正确的代码：</p>
<pre><code class="language-javascript">// 基于最新文档生成的正确代码
import React from 'react';
import { createRoot } from 'react-dom/client';

const container = document.getElementById('root');
const root = createRoot(container);
root.render(&lt;App /&gt;);
</code></pre>
<p>这就是 Context7 的威力所在——确保生成的代码始终基于最新的官方文档。</p>
<h1 id="context7-网站介绍">Context7 网站介绍</h1>
<p>除了 MCP 集成，Context7 还提供了一个便捷的网站服务：<a href="https://context7.com" target="_blank" rel="noopener nofollow">https://context7.com</a></p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202506/2105804-20250604220923087-1270830258.png" alt="" loading="lazy"></p>
<h2 id="网站功能特点">网站功能特点</h2>
<p>Context7 网站的核心功能是为 LLM 和 AI 代码编辑器提供最新的文档支持，其主要特点包括：</p>
<p><strong>核心价值</strong>：</p>
<ul>
<li><strong>最新文档获取</strong>：直接从源头获取任何库的最新文档和代码</li>
<li><strong>实时更新</strong>：确保文档版本与库的最新版本保持同步</li>
<li><strong>一键复制</strong>：轻松将内容粘贴到 Cursor、Claude 或其他 LLM 工具中</li>
</ul>
<p><strong>解决的痛点</strong>：</p>
<p>不使用 Context7 时可能遇到的问题：</p>
<ul>
<li>❌ 训练数据包含过时文档</li>
<li>❌ 生成不存在的虚假代码示例</li>
<li>❌ 提供不针对特定版本的通用答案</li>
<li>❌ 浪费时间验证 AI 生成的响应</li>
<li>❌ 因与 LLM 反复沟通而感到挫败</li>
</ul>
<p>使用 Context7 后的优势：</p>
<ul>
<li>✅ 提供最新的、特定版本的文档</li>
<li>✅ 提供来源可靠、可实际工作的代码示例</li>
<li>✅ 提供简洁相关的信息，无冗余内容</li>
<li>✅ 个人使用免费</li>
<li>✅ 可与 MCP 服务器和工具集成</li>
</ul>
<p><strong>使用场景</strong>：</p>
<p>Context7 特别适合需要准确、最新技术文档的开发者。无论你使用 Cursor、Claude 还是其他 LLM 工具，它都能帮助你获得更好的答案，避免 AI 产生幻觉，让 AI 真正理解你的技术栈。</p>
<h1 id="参考资料">参考资料</h1>
<p>Context7 GitHub 链接：<a href="https://github.com/upstash/context7" target="_blank" rel="noopener nofollow">https://github.com/upstash/context7</a></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.07551259916550926" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-06-04 22:30">2025-06-04 22:29</span>&nbsp;
<a href="https://www.cnblogs.com/BNTang">BNTang</a>&nbsp;
阅读(<span id="post_view_count">11</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18911263);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18911263', targetLink: 'https://www.cnblogs.com/BNTang/p/18911263', title: 'AI编码焕新：用Context7' })">举报</a>
</div>
        