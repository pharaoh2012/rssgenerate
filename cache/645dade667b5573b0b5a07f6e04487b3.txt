
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/cicada-smile/p/18856079" title="发布于 2025-04-30 21:53">
    <span role="heading" aria-level="2">通过IP计算分析归属地</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        <img src="https://img2024.cnblogs.com/blog/1691717/202504/1691717-20250430215010479-435312404.png" alt="通过IP计算分析归属地" class="desc_img">
        IP地址一般分为两种，IPV4和IPV6，相应的计算方式也有差异，以国家维度来参考，每个国家都有对应的网段范围，计算网段中的最小和最大IP地址的对应数值，然后对比请求的IP地址。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>在产品中可能存在不同客户端，请求同一个服务端接口的场景。</p>
<p>例如小程序和App或者浏览器中，如果需要对请求的归属地进行分析，前提是需要先获取请求所在的国家或城市，这种定位通常需要主动授权，而用户一般是不愿意提供的，就需要通过请求的IP来进行归属地计算。</p>
<p>IP地址一般分为两种，IPV4和IPV6，相应的计算方式也有差异，以国家维度来参考，每个国家都有对应的网段范围，计算网段中的最小和最大IP地址的对应数值，然后对比请求的IP地址，来判断属于哪个国家的网段范围。</p>
<pre><code class="language-java">import cn.hutool.core.net.Ipv4Util;
import cn.hutool.core.util.StrUtil;
import java.math.BigInteger;
import java.net.InetAddress;

public class IpCalculate {
    public static void main(String[] args) throws Exception {
        // IPv4 网段
        String ipv4Network = "IPv4 网段";
        String[] ipv4Param = StrUtil.splitToArray(ipv4Network, "/");

        // IPv4 起始和结束IP
        String ipv4StartIp = Ipv4Util.getBeginIpStr(ipv4Param[0],Integer.parseInt(ipv4Param[1]));
        String ipv4OverIp = Ipv4Util.getEndIpStr(ipv4Param[0],Integer.parseInt(ipv4Param[1]));
        System.out.println(ipv4StartIp);
        System.out.println(ipv4OverIp);

        // IPv4 起始和结束IP对应的Long值
        System.out.println(Ipv4Util.ipv4ToLong(ipv4StartIp));
        System.out.println(Ipv4Util.ipv4ToLong(ipv4OverIp));

        // IPv6 网段
        String ipv6Network = "IPv6 网段";
        String[] ipv6Param =ipv6Network.split("/");
        int prefixLength = Integer.parseInt(ipv6Param[1]);

        // IPv6 起始和结束IP
        InetAddress baseAddress = InetAddress.getByName(ipv6Param[0]);
        BigInteger baseValue = new BigInteger(1, baseAddress.getAddress());
        BigInteger mask = BigInteger.ONE.shiftLeft(128).subtract(BigInteger.ONE)
                .shiftRight(128 - prefixLength).shiftLeft(128 - prefixLength);
        BigInteger minIp = baseValue.and(mask);
        BigInteger maxIp = minIp.add(BigInteger.ONE.shiftLeft(128 - prefixLength).subtract(BigInteger.ONE));
        System.out.println(toIPv6String(minIp));
        System.out.println(toIPv6String(maxIp));

        // IPv6 起始和结束IP对应的Long值
        System.out.println(minIp);
        System.out.println(maxIp);
    }

    private static String toIPv6String(BigInteger value) throws Exception {
        byte[] bytes = value.toByteArray();
        byte[] ipv6Bytes = new byte[16];
        int start = bytes.length &gt; 16 ? bytes.length - 16 : 0;
        int length = Math.min(bytes.length, 16);
        System.arraycopy(bytes, start, ipv6Bytes, 16 - length, length);
        return InetAddress.getByAddress(ipv6Bytes).getHostAddress();
    }
}
</code></pre>
<p>不过网段地址和国家的对应关系需要进行维护，如果归属地分析不需要非常精准，可以直接使用开源的字典库，比如使用比较多的就是GeoIP2组件。</p>
<pre><code class="language-xml">&lt;dependency&gt;
  &lt;groupId&gt;com.maxmind.geoip2groupId&gt;
  &lt;artifactId&gt;geoip2&lt;/artifactId&gt;
&lt;/dependency&gt;
</code></pre>
<p>通过组件中提供的API加载相应的文件字典，然后传入IP地址进行归属地判断，这里要注意争议和敏感地区的处理，如果出错产品可不止是上热搜的问题了。</p>
<pre><code class="language-java">import com.maxmind.geoip2.DatabaseReader;
import java.io.File;
import java.net.Inet4Address;
import java.net.Inet6Address;
import java.net.InetAddress;

public class GeoIpTool {
    public static void main(String[] args) throws Exception {

        // 读取IP库文件
        File ipFile = new File("IP文件库");
        DatabaseReader reader = new DatabaseReader.Builder(ipFile).build();

        // IPV4地址
        InetAddress ipV4 = InetAddress.getByName("IPV4");
        if (ipV4 instanceof Inet4Address){
            System.out.println(reader.country(ipV4));
            System.out.println(reader.country(ipV4).getCountry());
            // 默认英文名
            System.out.println(reader.country(ipV4).getCountry().getName());
            // 查询中文名
            System.out.println(reader.country(ipV4).getCountry().getNames().get("zh-CN"));
        }

        // IPV6地址
        InetAddress ipV6 = InetAddress.getByName("IPV6");
        if (ipV6 instanceof Inet6Address){
            System.out.println(reader.country(ipV6));
            System.out.println(reader.country(ipV6).getCountry());
            // 默认英文名
            System.out.println(reader.country(ipV6).getCountry().getName());
            // 查询中文名
            System.out.println(reader.country(ipV6).getCountry().getNames().get("zh-CN"));
        }
    }
}

</code></pre>
<p>如果需要非常精确的实时归属地分析，可以购买专业的IP网段数据，实时更新到本地的数据库中，作为IP字典使用，获取请求的IP后，直接范围匹配即可。</p>
<pre><code class="language-sql">CREATE TABLE `ip_place` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `network` varchar(100) DEFAULT NULL COMMENT '网段区间',
  `min_ip` bigint(20) DEFAULT NULL COMMENT '最小IP',
  `max_ip` bigint(20) DEFAULT NULL COMMENT '最大IP',
  `min_ip_number` bigint(20) DEFAULT NULL COMMENT '最小IP数值',
  `max_ip_number` bigint(20) DEFAULT NULL COMMENT '最大IP数值',
  `ip_place` varchar(100) DEFAULT NULL COMMENT '归属地',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='IP归属地';
</code></pre>
<p>最后需要补充说一句，对于很多标准的数据，尽可能在项目最初就设计好字典枚举或者数据表，避免后续规范时面临数据清洗的问题。</p>

</div>
<div id="MySignature" role="contentinfo">
    
<b>Gitee主页：</b> <a target="three" href="https://gitee.com/cicadasmile/butte-java-note">https://gitee.com/cicadasmile/butte-java-note</a>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="1.0150328010335647" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-30 21:54">2025-04-30 21:53</span>&nbsp;
<a href="https://www.cnblogs.com/cicada-smile">七号楼</a>&nbsp;
阅读(<span id="post_view_count">131</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18856079);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18856079', targetLink: 'https://www.cnblogs.com/cicada-smile/p/18856079', title: '通过IP计算分析归属地' })">举报</a>
</div>
        