
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/kason/p/18726745/build-applications-with-deft" title="发布于 2025-02-20 15:30">
    <span role="heading" aria-level="2">丢掉WebView,使用JS+Rust开发跨端桌面应用-Deft</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        Deft是一个高性能跨平台开源UI框架，底层使用Rust开发，支持使用JS/React开发界面，目前支持Linux,Windows,MacOS和Android等系统。为了提高性能，Deft提供了便捷高效的方式使用Rust开发API和UI组件。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="简介">简介</h1>
<p>随着Web技术的发展，越来越多的跨端应用选择了WebView作为基础解决方案。诚然WebView让跨端应用开发变得简单了很多，极大的提高了开发效率，但是，WebView也存在着一些广为诟病的缺点，比如内存占用大，包体积大，系统调用不方便等。所以，Deft诞生了。</p>
<p>Deft是一个高性能跨平台开源UI框架，底层使用Rust开发，支持使用JS/React开发界面，目前支持Linux,Windows,MacOS和Android等系统。为了提高性能，Deft提供了便捷高效的方式使用Rust开发API和UI组件。</p>
<h1 id="快速开始">快速开始</h1>
<p>开始前，系统需要先安装nodejs,Rust,clang14+，如果未安装，直接去官网下载安装即可。</p>
<p>执行下面命令，快速创建新工程，demo为新工程名称。</p>
<pre><code>npm create deft@latest demo
</code></pre>
<p>根据自己的喜好选择语言和框架，这里，以TypeScript+React为例。</p>
<p>命令执行完后，会在当前目录下创建一个<code>demo</code>项目，执行下面命令启动项目。</p>
<pre><code>cd demo
npm install
npm run dev
</code></pre>
<p>启动成功后，会得到如下输出：</p>
<pre><code>...
webpack 5.91.0 compiled successfully in 1995 ms

==============================================
Press r to run on this device
Press a to run on connected android device
Press q to quit
==============================================

</code></pre>
<p>按<code>r</code>，即可开始构建预览应用。首次构建，需要下载依赖，所以耗时可能会比较长，可以配置cargo镜像提高下载速度。</p>
<p>构建成功后，就能看到预览窗口了，可以直接修改ui目录下的JS/TS文件实时预览效果。</p>
<img src="https://img2024.cnblogs.com/blog/154217/202502/154217-20250220152447821-1341384648.png" width="400">
<h1 id="资源占用">资源占用</h1>
<p><strong>内存</strong>63M，<strong>应用体积包</strong>31.5M</p>
<h1 id="目录结构">目录结构</h1>
<pre><code>├── android               -- 安卓工程相关文件
├── build.rs              -- Cargo构建脚本
├── Cargo.lock
├── Cargo.toml            -- Cargo项目配置文件
├── dev-hack.js
├── package.json          -- JS项目配置文件
├── package-lock.json
├── src                   -- Rust源代码
│     └── main.rs
├── tsconfig.json         -- TypeScript配置文件
├── ui                    -- JS/TS源代码
│     ├── app.tsx
│     ├── deft-env.d.ts
│     └── main.ts
└── webpack.config.js     -- Webpack配置文件
</code></pre>
<h1 id="打包">打包</h1>
<p>执行下面命令即可打包</p>
<pre><code>npm run build
</code></pre>
<p>打包完成后，会在<code>target/你的系统架构/release/</code>目录下生成一个单独的可执行二进制文件（包含编译后的JS代码），将其拷贝出来即可。</p>
<h1 id="文档--demo参考">文档 &amp; Demo参考</h1>
<p>Github：<a href="https://github.com/deft-ui/deft" target="_blank" rel="noopener nofollow">https://github.com/deft-ui/deft</a></p>
<p>文档：<a href="https://deft-ui.github.io/guides/what-is-deft/" target="_blank" rel="noopener nofollow">https://deft-ui.github.io/guides/what-is-deft/</a></p>
<p>官方同时提供<code>贪吃蛇</code>,<code>视频播放器</code>,<code>视频格式转换器</code>,<code>SPICE远程桌面客户端</code>等多个Demo，可直接前往 <a href="https://deft-ui.github.io/demos/" target="_blank" rel="noopener nofollow">https://deft-ui.github.io/demos/</a> 查看。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.03426991574537037" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-20 15:30">2025-02-20 15:30</span>&nbsp;
<a href="https://www.cnblogs.com/kason">kason</a>&nbsp;
阅读(<span id="post_view_count">10</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18726745" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18726745);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18726745', targetLink: 'https://www.cnblogs.com/kason/p/18726745/build-applications-with-deft', title: '丢掉WebView,使用JS+Rust开发跨端桌面应用-Deft' })">举报</a>
</div>
        