
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wang_yb/p/18858226" title="发布于 2025-05-03 10:12">
    <span role="heading" aria-level="2">『Plotly实战指南』--在金融数据可视化中的应用（下）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>在金融市场的复杂博弈中，可视化技术如同精密的导航仪。</p>
<p>传统静态图表正在被交互式可视化取代——据<code>Gartner</code>研究，采用动态可视化的投资机构决策效率提升达<code>47%</code>。</p>
<p>本文的目标是探讨如何利用 <code>Plotly</code> 实现投资组合分析与金融时间序列的动态可视化。</p>
<p>文中将通过具体的案例和代码示例，展示 <code>Plotly</code> 在金融数据可视化中的强大功能。</p>
<h1 id="1-投资组合图表">1. <font style="color: rgba(0, 0, 0, 0.85)">投资组合图表</font></h1>
<p>在投资组合分析中，资产配置是关键的一步。</p>
<p>通过可视化资产配置，投资者可以清晰地了解不同资产在投资组合中的占比，从而评估投资策略的平衡性。</p>
<h2 id="11-资产配置的饼图与柱状图">1.1. 资产配置的饼图与柱状图</h2>
<p>使用<code>Plotly</code>的<code>plotly.express.pie</code>和<code>plotly.graph_objects.Bar</code>绘制资产分布图。</p>
<pre><code class="language-python">import plotly.express as px
import plotly.graph_objects as go
from plotly.subplots import make_subplots

# 示例数据：资产类别及其权重
data = {"Asset": ["股票", "债券", "现金", "黄金"], "Weight": [0.4, 0.3, 0.2, 0.1]}

fig = make_subplots(
    rows=1,
    cols=2,
    horizontal_spacing=0.1,
    specs=[[{"type": "domain"}, {"type": "bar"}]],
    subplot_titles=["资产配置饼图", "资产配置柱状图"]
)
# 绘制饼图
fig.add_trace(
    go.Pie(
        labels=data["Asset"],
        values=data["Weight"],
    ),
    row=1,
    col=1,
)

# 绘制柱状图
fig.add_trace(
    go.Bar(x=data["Asset"], y=data["Weight"]),
    row=1,
    col=2,
)

fig.show()
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/83005/202505/83005-20250503101144944-1645225248.png" alt="" loading="lazy"></p>
<h2 id="12-不同时间点资产配置">1.2. 不同时间点资产配置</h2>
<p><code>Plotly</code>提供了滑动条交互功能，可以动态展示不同时间点的资产配置比例。</p>
<p>这对于分析投资组合的动态调整过程非常有帮助。</p>
<pre><code class="language-python">import pandas as pd

# 示例数据：不同时间点的资产配置
data = pd.DataFrame(
    {
        "Date": ["2024-01-01", "2024-02-01", "2024-03-01"],
        "股票": [0.4, 0.45, 0.5],
        "债券": [0.3, 0.32, 0.3],
        "现金": [0.2, 0.18, 0.15],
        "黄金": [0.1, 0.05, 0.05],
    }
)

# 绘制动态柱状图
fig = px.bar(
    data, x="Date", y=["股票", "债券", "现金", "黄金"], title="不同时间点的资产配置"
)
fig.update_layout(
    updatemenus=[
        dict(
            type="buttons",
            direction="right",
            x=0.7,
            y=1.2,
            showactive=True,
            buttons=list(
                [
                    dict(
                        label="全部",
                        method="update",
                        args=[{"visible": [True, True, True, True]}],
                    ),
                    dict(
                        label="股票",
                        method="update",
                        args=[{"visible": [True, False, False, False]}],
                    ),
                    dict(
                        label="债券",
                        method="update",
                        args=[{"visible": [False, True, False, False]}],
                    ),
                    dict(
                        label="现金",
                        method="update",
                        args=[{"visible": [False, False, True, False]}],
                    ),
                    dict(
                        label="黄金",
                        method="update",
                        args=[{"visible": [False, False, False, True]}],
                    ),
                ]
            ),
        )
    ]
)
fig.show()
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/83005/202505/83005-20250503101144951-1554562661.gif" alt="" loading="lazy"></p>
<h2 id="13-对比不同投资策略下的资产占比">1.3. 对比不同投资策略下的资产占比</h2>
<p>通过绘制多个资产配置图表，可以对比不同投资策略下的资产占比差异。</p>
<p>这有助于投资者选择最适合自己的投资策略。</p>
<pre><code class="language-python"># 示例数据：两种投资策略的资产配置
strategy1 = pd.DataFrame(
    {"Asset": ["股票", "债券", "现金", "黄金"], "Weight": [0.4, 0.3, 0.2, 0.1]}
)

strategy2 = pd.DataFrame(
    {"Asset": ["股票", "债券", "现金", "黄金"], "Weight": [0.6, 0.2, 0.1, 0.1]}
)

# 绘制对比柱状图
fig = go.Figure(
    data=[
        go.Bar(name="策略1", x=strategy1["Asset"], y=strategy1["Weight"]),
        go.Bar(name="策略2", x=strategy2["Asset"], y=strategy2["Weight"]),
    ]
)
fig.update_layout(title_text="不同投资策略的资产配置对比")
fig.show()
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/83005/202505/83005-20250503101144944-1739907450.png" alt="" loading="lazy"></p>
<h1 id="2-风险收益关系的散点图">2. 风险收益关系的散点图</h1>
<p><strong>风险收益</strong>关系是投资分析中的重要概念。</p>
<p>通过散点图，可以直观地展示投资标的的风险（<strong>波动率</strong>）与<strong>收益</strong>之间的关系。</p>
<pre><code class="language-python"># 示例数据：投资标的的风险与收益
data = pd.DataFrame(
    {
        "资产": ["股票A", "股票B", "债券C", "基金D"],
        "收益": [0.12, 0.1, 0.05, 0.08],
        "波动性": [0.2, 0.18, 0.08, 0.15],
    }
)

# 绘制散点图
fig = px.scatter(data, x="波动性", y="收益", text="资产", title="风险收益关系散点图")
fig.update_traces(textposition="top center")
fig.show()
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/83005/202505/83005-20250503101144958-747550299.png" alt="" loading="lazy"></p>
<p>在上面的散点图中添加辅助线和注释可以进一步增强分析的深度。</p>
<p>例如，<strong>有效前沿</strong>可以帮助投资者识别最优的投资组合。</p>
<pre><code class="language-python"># 示例数据：有效前沿
frontier = pd.DataFrame(
    {
        "波动性": [0.05, 0.1, 0.15, 0.2],
        "收益": [0.05, 0.08, 0.1, 0.12],
    }
)

# 添加有效前沿线
fig.add_trace(
    go.Scatter(
        x=frontier["波动性"],
        y=frontier["收益"],
        mode="lines",
        name="有效前沿",
    ),
)
fig.show()
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/83005/202505/83005-20250503101144952-6287259.png" alt="" loading="lazy"></p>
<h1 id="3-动画展示投资组合变化">3. 动画展示投资组合变化</h1>
<p>金融<strong>时间序列数据</strong>的动态可视化可以帮助投资者更好地理解投资组合随时间的变化。</p>
<p><code>Plotly</code>的动画框架（<code>animation_frame</code>）可以实现这一目标。</p>
<p>下面的示例，通过<code>Plotly</code>动画框架（<code>animation_frame</code>）动态呈现资产权重随时间的变化。</p>
<pre><code class="language-python"># 示例数据：投资组合随时间的变化
data = pd.DataFrame(
    {
        "日期": ["2024-01-01", "2024-02-01", "2024-03-01"] * 4,
        "资产": ["股票"] * 3 + ["债券"] * 3 + ["现金"] * 3 + ["黄金"] * 3,
        "权重": [0.4, 0.45, 0.5, 0.3, 0.32, 0.3, 0.2, 0.18, 0.15, 0.1, 0.05, 0.05],
    }
)

# 绘制动态柱状图
fig = px.bar(
    data,
    x="资产",
    y="权重",
    animation_frame="日期",
    title="资产权重随时间的变化",
)
fig.show()
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/83005/202505/83005-20250503101144965-1080728941.gif" alt="" loading="lazy"></p>
<h1 id="4-总结">4. 总结</h1>
<p><code>Plotly</code>在金融分析中的核心应用场景涵盖了从静态图表到动态交互的全覆盖。</p>
<p>通过丰富的交互功能和动态图表支持，<code>Plotly</code> 能够帮助投资者更直观地理解复杂数据，从而辅助投资决策。</p>
<p>展望未来，<code>Plotly</code>与<code>AI</code>模型预测结果的可视化集成具有巨大的潜力。</p>
<p>通过将 <code>AI</code> 模型的预测结果与 <code>Plotly</code> 的可视化功能相结合，投资者可以更好地评估市场趋势和投资机会，从而实现更高效的投资决策。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="1.3397001446539352" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-03 10:12">2025-05-03 10:12</span>&nbsp;
<a href="https://www.cnblogs.com/wang_yb">wang_yb</a>&nbsp;
阅读(<span id="post_view_count">93</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18858226);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18858226', targetLink: 'https://www.cnblogs.com/wang_yb/p/18858226', title: '『Plotly实战指南』--在金融数据可视化中的应用（下）' })">举报</a>
</div>
        