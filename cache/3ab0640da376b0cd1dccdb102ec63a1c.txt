
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/freedom-h/p/18778021" title="发布于 2025-03-18 10:28">
    <span role="heading" aria-level="2">小程序和APP抓包的问题</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="小程序和app抓包的问题">小程序和APP抓包的问题</h1>
<p>很多同学都会遇到小程序和APP抓不到包的问题，抓不到https请求包，这边给大家提供一些解决方案。</p>
<h2 id="yakit工具">Yakit工具</h2>
<p>首先需要的就是一个抓包神器yakit，这个工具非常好用强大，具体安装和使用大家可以参考上一篇文章。</p>
<h2 id="pc端小程序抓包">PC端小程序抓包</h2>
<p>PC端可以采用双层代理的方式，Proxifier+Yakit</p>
<h3 id="proxifier的配置">Proxifier的配置</h3>
<p>首先配置一下代理</p>
<p><img src="https://img2023.cnblogs.com/blog/3587706/202503/3587706-20250317234720296-843839558.png" alt="image-20250317215707109" loading="lazy"></p>
<p><img src="https://img2023.cnblogs.com/blog/3587706/202503/3587706-20250317234720708-1882755619.png" alt="image-20250317215811461" loading="lazy"></p>
<p>端口和Yakit的端口保持一致</p>
<p>代理规则如下</p>
<p><img src="https://img2023.cnblogs.com/blog/3587706/202503/3587706-20250317234720977-694590872.png" alt="image-20250317220344713" loading="lazy"></p>
<h3 id="yakit配置">Yakit配置</h3>
<p><img src="https://img2023.cnblogs.com/blog/3587706/202503/3587706-20250317234721239-1005746856.png" alt="image-20250317220920071" loading="lazy"></p>
<p>记得端口保持一致</p>
<p><img src="https://img2023.cnblogs.com/blog/3587706/202503/3587706-20250317234721845-923969097.png" alt="image-20250317221033335" loading="lazy"></p>
<p>这样就能抓到https的数据包了</p>
<h2 id="手机端小程序和app抓包">手机端小程序和APP抓包</h2>
<p>由于安卓7.0以上版本不再信任用户证书，所以我们需要给手机安装系统证书（必须root！未root的安装<a href="https://so.csdn.net/so/search?q=%E6%89%8B%E6%9C%BA%E6%8A%93%E5%8C%85&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener nofollow">手机抓包</a>可以使用httpcanary）</p>
<h3 id="导出yakit的证书">导出Yakit的证书</h3>
<p><img src="https://img2023.cnblogs.com/blog/3587706/202503/3587706-20250317234722161-623096421.png" alt="image-20250317221318629" loading="lazy"></p>
<p><img src="https://img2023.cnblogs.com/blog/3587706/202503/3587706-20250317234722492-923744373.png" alt="image-20250317221330156" loading="lazy"></p>
<p>因为yakit的证书导出后就是pem格式，所以直接用openssl来查看其hash值（openssl kali会自带）</p>
<pre><code>openssl x509 -inform PEM -subject_hash_old -in cacert.pem
</code></pre>
<p>将文件名改为hash值最上方的数字，名字命名为hash值.0，到这里证书就算制作成功</p>
<p><img src="https://img2023.cnblogs.com/blog/3587706/202503/3587706-20250317234722807-1182783700.png" alt="image-20250317225316035" loading="lazy"></p>
<h3 id="导入证书">导入证书</h3>
<p>这里以逍遥模拟器为例</p>
<p>找到逍遥模拟器的Memu目录，把命名好的证书放到该目录下，并在该目录打开cmd</p>
<p>这里要用到adb，不了解的同学可以先去简单了解一下adb</p>
<p>进入cmd之后，输入命令</p>
<pre><code>adb connect 127.0.0.1:21503
</code></pre>
<p>21503端口是逍遥模拟器的端口，各模拟器可能有所不同</p>
<p><img src="https://img2023.cnblogs.com/blog/3587706/202503/3587706-20250317234723101-1994002592.png" alt="image-20250317231713286" loading="lazy"></p>
<p>判断是否开启root权限</p>
<pre><code>adb root
</code></pre>
<p>显示已经开启root</p>
<p><img src="https://img2023.cnblogs.com/blog/3587706/202503/3587706-20250317234723352-721296089.png" alt="image-20250317231744692" loading="lazy"></p>
<p>开启写入模式</p>
<pre><code>adb remount
</code></pre>
<p><img src="https://img2023.cnblogs.com/blog/3587706/202503/3587706-20250317234723602-767088944.png" alt="image-20250317231827298" loading="lazy"></p>
<p>将证书文件送至模拟器的证书目录下</p>
<pre><code>adb push hash.0 /system/etc/security/cacerts/
</code></pre>
<p><img src="https://img2023.cnblogs.com/blog/3587706/202503/3587706-20250317234723848-444803708.png" alt="image-20250317231925087" loading="lazy"></p>
<p>显示安装成功</p>
<p>最后去模拟器查看证书</p>
<p><img src="https://img2023.cnblogs.com/blog/3587706/202503/3587706-20250317234724135-1414060579.png" alt="image-20250317231959444" loading="lazy"></p>
<p>这样证书就安装好了</p>
<p>后续将手机的网络代理到yakit的监听端口就行了</p>
<p>以及注意抓取app时yakit需要劫持PC端IP的端口，不能劫持本地端口</p>
<p><strong>burpsuite导入证书</strong></p>
<p>bp导入证书步骤和yakit步骤一样，只是因为bp证书不是pem格式，所以要多一步将证书转为pem格式</p>
<pre><code>openssl x509 -inform DER -in cacert.cer -out cacert.pem
</code></pre>
<p><img src="https://img2023.cnblogs.com/blog/3587706/202503/3587706-20250317234724585-1853613992.png" alt="image-20250317233936656" loading="lazy"></p>
<p>这个就是bp的证书成功导入</p>
<p><strong>补充</strong></p>
<p>有时候抓包可直接抓取请求包，但是没有返回包，这可能是服务端对客户端证书做了校验，burp的证书不合法所以无法接受返回包</p>
<p>这种双向校验的情况下次再和大家介绍一下。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.02085327938425926" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-18 10:28">2025-03-18 10:28</span>&nbsp;
<a href="https://www.cnblogs.com/freedom-h">根本睡不醒#</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18778021" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18778021);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18778021', targetLink: 'https://www.cnblogs.com/freedom-h/p/18778021', title: '小程序和APP抓包的问题' })">举报</a>
</div>
        