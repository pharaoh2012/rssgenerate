
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/noear/p/18838309" title="发布于 2025-04-21 11:54">
    <span role="heading" aria-level="2">MCP Server Java 开发框架的体验比较（spring ai mcp 和 solon ai mcp）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        目前已知的两个 mcp-server java 应用开发框架（ID类的，封装后体验都比较简洁）：
spring-ai-mcp，支持 java17 或以上；
solon-ai-mcp，支持 java8 或以上（也支持集成到 springboot2, jfinal, vert.x 等第三方框架）。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>目前已知的两个 mcp-server  java 应用开发框架（ID类的，封装后体验都比较简洁）：</p>
<ul>
<li>spring-ai-mcp，支持 java17 或以上</li>
<li>solon-ai-mcp，支持 java8 或以上（也支持集成到 springboot2, jfinal, vert.x 等第三方框架）</li>
</ul>
<p>下面分别用两个框架，构建一个天气查询的 mcp 工具服务。</p>
<h3 id="1spring-ai-mcp-server支持-java17-或以上">1、spring ai mcp server（支持 java17 或以上）</h3>
<p>添加关键的依赖包（版本号与 springboot 各自独立）</p>
<pre><code class="language-xml">&lt;dependency&gt;
   &lt;groupId&gt;org.springframework.ai&lt;/groupId&gt;
   &lt;artifactId&gt;spring-ai-mcp-server-spring-boot-starter&lt;/artifactId&gt;
   &lt;version&gt;1.0.0-M6&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>
<p>添加配置（为服务端点命名）</p>
<pre><code class="language-yaml">spring.ai.mcp.server.name: jdbc-mcp-server
</code></pre>
<p>示例代码（构建服务，然后发布为 ToolCallbackProvider）</p>
<pre><code class="language-java">@Service
public class JdbcQueryService {
    @Tool(description = "查询天气预报")
    public String getWeather(@ToolParam(description = "城市位置") String location) {
        return "晴，14度";
    }
}

@Configuration
public class McpConfig {
    @Bean
    ToolCallbackProvider jdbcQueryTools(JdbcQueryService jdbcQueryService) {
        return MethodToolCallbackProvider
                .builder()
                .toolObjects(jdbcQueryService)
                .build();
    }
}
</code></pre>
<h3 id="2solon-ai-mcp-server支持-java8-或以上">2、solon ai mcp server（支持 java8 或以上）</h3>
<p>添加关键的依赖包（版本号随 solon 一致）</p>
<pre><code class="language-xml">&lt;dependency&gt;
    &lt;groupId&gt;org.noear&lt;/groupId&gt;
    &lt;artifactId&gt;solon-ai-mcp&lt;/artifactId&gt;
    &lt;version&gt;3.2.0&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>
<p>示例代码（跟 mvc 的开发非常像）</p>
<pre><code class="language-java">@McpServerEndpoint(name="mcp-case1", sseEndpoint = "/case1/sse") 
public class McpServerTool {
    @ToolMapping(description = "查询天气预报")
    public String getWeather(@ToolParam(description = "城市位置") String location) {
        return "晴，14度";
    }
}
</code></pre>
<p>solon ai mcp server 支持多端点。就是一个服务就可提供多组工具（供不同的场景使用，灵活性更好）：</p>
<ul>
<li>可以有一组关于天气的工具</li>
<li>可以再有一组关于地图的工具</li>
</ul>
<h3 id="3总结">3、总结</h3>
<p>开发体验比较</p>
<table>
<thead>
<tr>
<th>比较</th>
<th>srping-ai-mcp</th>
<th>solon-ai-mcp</th>
</tr>
</thead>
<tbody>
<tr>
<td>开发</td>
<td>基于组件开发</td>
<td>基于组件开发</td>
</tr>
<tr>
<td>配置</td>
<td>通过 yaml 配置</td>
<td>组件，即是配置（也可引用 yaml 配置）</td>
</tr>
<tr>
<td>发布</td>
<td>通过配置器发布为 ToolCallbackProvider</td>
<td>组件，即是发布</td>
</tr>
<tr>
<td>jdk要求</td>
<td>jdk17或以上</td>
<td>jdk8或以上</td>
</tr>
<tr>
<td>端点支持</td>
<td>好像只能一个（一个服务内）</td>
<td>支持多端点（一个服务内）</td>
</tr>
</tbody>
</table>
<p>solon-ai-mcp 的开发相对更简洁，三位一体。且支持多端点。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.018137327269675926" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-21 11:54">2025-04-21 11:54</span>&nbsp;
<a href="https://www.cnblogs.com/noear">带刺的坐椅</a>&nbsp;
阅读(<span id="post_view_count">14</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18838309);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18838309', targetLink: 'https://www.cnblogs.com/noear/p/18838309', title: 'MCP Server Java 开发框架的体验比较（spring ai mcp 和 solon ai mcp）' })">举报</a>
</div>
        