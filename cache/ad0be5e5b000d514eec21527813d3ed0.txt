
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/deali/p/19024294/csharp-aot-imageglider" title="发布于 2025-08-06 00:32">
    <span role="heading" aria-level="2">纯 C#实现+AOT 打造的多功能图片处理工具 ImageGlider</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="前言">前言</h2>
<p>上次我用 C# + AOT 开发了一个 <a href="https://blog.deali.cn/p/sharpico-pure-csharp-zero-dependency-ico-generator" target="_blank" rel="noopener nofollow">ICO 图标生成工具</a></p>
<p>这个实用小工具一经发布就受到不少朋友的关注</p>
<p>最近还被做成了网站，有图形化界面来一键生成 ico 图标，更方便普通用户的使用</p>
<p>这种 C# 开发，GitHub Actions 自动化发布 nuget 包和 dotnet tool 的一站式体验非常好，以至于让我对这种感觉有点上瘾了</p>
<p>最近又陆续开发了两个类似的工具，其中一个就是本文要介绍图片处理工具。</p>
<p>项目开源地址，欢迎 Star 和 PR : <a href="https://github.com/star-plan/image-glider" target="_blank" rel="noopener nofollow">https://github.com/star-plan/image-glider</a></p>
<h2 id="关于-imageglider">关于 ImageGlider</h2>
<p>一开始我开发这个工具，只是为了实现把目录中的 jfif 图片批量转换为 Windows 文件管理器能显示缩略图的 jpg 或者 png 格式。</p>
<p>不过在开发过程中，发现 C# 写小工具还真是方便，于是就慢慢增加了一堆功能。</p>
<p>接下来我还打算增加一个相似图片识别功能。</p>
<p>以下是目前的项目介绍：</p>
<p>ImageGlider 是一个功能强大的跨平台图像处理工具套件，使用 C# (.NET 9) 和 <a href="https://github.com/SixLabors/ImageSharp" target="_blank" rel="noopener nofollow">ImageSharp</a> 实现。项目采用模块化架构设计，包含核心类库、命令行工具、Web API、示例程序和完整的单元测试，支持 AOT 编译以获得原生性能。</p>
<p>通过 ImageGlider，可以轻松进行图像处理操作，完全摆脱外部依赖，无需 ImageMagick、Node.js 或 Python，适合在 .NET 项目中内嵌、分发或集成自动化流程中使用。</p>
<p>目标是打造一个跨平台、零依赖、高性能、全功能的图像处理解决方案！（可以理解为简化操作版本的 ImageMagick）</p>
<p>项目地址: <a href="https://github.com/star-plan/image-glider" target="_blank" rel="noopener nofollow">https://github.com/star-plan/image-glider</a></p>
<h2 id="功能特点">功能特点</h2>
<h3 id="-核心图像处理功能">🎯 核心图像处理功能</h3>
<ul>
<li>🖼️ <strong>格式转换</strong>：支持 JPEG、PNG、GIF、BMP、TIFF、WebP 等多种图像格式的相互转换</li>
<li>📏 <strong>尺寸调整</strong>：支持拉伸、保持宽高比、裁剪等多种调整模式</li>
<li>🗜️ <strong>压缩优化</strong>：智能压缩算法，在保持质量的同时减小文件体积</li>
<li>✂️ <strong>图像裁剪</strong>：精确裁剪指定区域，支持中心裁剪和自定义坐标裁剪</li>
<li>🖼️ <strong>缩略图生成</strong>：快速生成高质量缩略图，支持多种尺寸模式</li>
<li>💧 <strong>水印功能</strong>：支持文本和图片水印，9种位置选择，可调透明度和缩放</li>
<li>🧹 <strong>元数据清理</strong>：一键清除 EXIF、ICC、XMP 等隐私敏感的元数据信息</li>
<li>🎨 <strong>颜色调整</strong>：调整亮度、对比度、饱和度、色相、伽马值等颜色参数</li>
<li>ℹ️ <strong>信息提取</strong>：获取图像详细信息，支持JSON格式输出</li>
</ul>
<h3 id="️-技术特性">🛠️ 技术特性</h3>
<ul>
<li>🚀 <strong>跨平台</strong>：基于 .NET 9 和 ImageSharp，支持 Windows、Linux、macOS</li>
<li>⚡ <strong>AOT 编译</strong>：支持原生AOT编译，启动速度快，内存占用低</li>
<li>📦 <strong>零依赖</strong>：无需安装额外的图像处理工具或运行时环境</li>
<li>🧩 <strong>模块化设计</strong>：核心功能封装为独立类库，便于集成和扩展</li>
<li>🔧 <strong>多种接口</strong>：提供CLI工具、Web API、核心类库三种使用方式</li>
</ul>
<h3 id="-使用方式">💻 使用方式</h3>
<ul>
<li><strong>命令行工具</strong>：16种专业命令，支持单文件和批量处理</li>
<li><strong>Web API</strong>：RESTful接口，支持HTTP文件上传和处理</li>
<li><strong>核心类库</strong>：直接集成到.NET项目中使用</li>
<li><strong>批量处理</strong>：自动扫描目录，支持递归处理和文件过滤</li>
<li><strong>详细日志</strong>：完整的日志记录，支持多种日志级别</li>
<li><strong>错误处理</strong>：完善的异常处理机制，提供详细的处理结果信息</li>
</ul>
<h2 id="使用方法">使用方法</h2>
<p><strong>作为 .NET Global Tool 安装（推荐）</strong></p>
<pre><code class="language-bash">dotnet tool install --global ImageGlider.Cli
</code></pre>
<p>安装完成之后就可以通过命令行使用了</p>
<pre><code class="language-bash">$ imageglider
=== ImageGlider 命令行工具 ===

用法:
  ImageGlider.Cli &lt;命令&gt; [选项]
  ImageGlider.Cli help [命令]    显示帮助信息

可用命令:
  adjust                调整单个图片文件的颜色（亮度、对比度、饱和度、色相、伽马值）
  batch-adjust          批量调整指定目录下图片文件的颜色（亮度、对比度、饱和度、色相、伽马值）
  batch-compress        批量压缩优化图片文件
  batch-convert         批量转换图片文件
  batch-crop            批量裁剪指定目录下的图片文件
  batch-info            批量查看目录下图片文件的详细信息
  batch-resize          批量调整图片文件尺寸
  batch-strip-metadata  批量清理指定目录下图片文件的元数据
  batch-thumbnail       批量生成指定目录下图片文件的缩略图
  batch-watermark       批量为图片文件添加水印
  compress              压缩优化单个图片文件
  convert               转换单个图片文件
  crop                  裁剪单个图片文件
  info                  查看图片文件的详细信息
  resize                调整单个图片文件尺寸
  strip-metadata        清理单个图片文件的元数据
  thumbnail             生成单个图片文件的缩略图
  watermark             为单个图片文件添加水印

使用 'ImageGlider.Cli help &lt;命令&gt;' 查看特定命令的详细帮助。

示例:
  ImageGlider.Cli convert -s image.jfif -t image.jpeg -q 85
  ImageGlider.Cli batch-convert -se .jfif -te .jpeg -q 90
  ImageGlider.Cli resize -s input.jpg -t output.jpg -w 800 -h 600
  ImageGlider.Cli compress -s input.jpg -t output.jpg -l 60
  ImageGlider.Cli help convert
</code></pre>
<h3 id="aot-与其他方式">AOT 与其他方式</h3>
<p>通过其他方式安装（如 scoop、brew）和 AOT 编译发布，本文就不赘述了，请查看 <a href="https://github.com/star-plan/image-glider?tab=readme-ov-file#-%E5%AE%89%E8%A3%85%E6%96%B9%E5%BC%8F" target="_blank" rel="noopener nofollow">项目文档</a>。</p>
<h2 id="小结">小结</h2>
<p>这套开发流程非常舒服，我甚至想把这套流程集成到我的模板项目 FluentConsole 里了</p>
<p>接下来会输出几篇与这套流程有关的文章，感兴趣的同学可以关注一下。</p>

</div>
<div id="MySignature" role="contentinfo">
    微信公众号：「程序设计实验室」
专注于互联网热门新技术探索与团队敏捷开发实践，包括架构设计、机器学习与数据分析算法、移动端开发、Linux、Web前后端开发等，欢迎一起探讨技术，分享学习实践经验。
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-08-06 00:32">2025-08-06 00:32</span>&nbsp;
<a href="https://www.cnblogs.com/deali">程序设计实验室</a>&nbsp;
阅读(<span id="post_view_count">9</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19024294);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19024294', targetLink: 'https://www.cnblogs.com/deali/p/19024294/csharp-aot-imageglider', title: '纯 C#实现+AOT 打造的多功能图片处理工具 ImageGlider' })">举报</a>
</div>
        