
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/WangJunZzz/p/18643583" title="发布于 2024-12-31 11:10">
    <span role="heading" aria-level="2">Abp vNext 扩展属性</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="扩展属性">扩展属性</h1>
<ul>
<li>我们发现abp的默认都会有一个ExtraProperties属性，那么他的作用是什么呢？当我们使用abp的时候，需要对其原有的表进行扩展或者添加我们想要的字段，又不想改源码，以最小的方式实现，这个时候就体现它的价值了。</li>
<li>我们添加的数据都会在ExtraProperties以JSON对象方式进行存储。</li>
</ul>
<h2 id="如何添加">如何添加</h2>
<ul>
<li>在Domain.Shared层中提供了一个xxxModuleExtensionConfigurator类</li>
</ul>
<h3 id="示例">示例</h3>
<ul>
<li>给AbpUser表扩展一个用户头像地址的属性</li>
</ul>
<pre><code class="language-csharp"> public static class JuiceModuleExtensionConfigurator
 {
        private static readonly OneTimeRunner OneTimeRunner = new OneTimeRunner();

        public static void Configure()
        {
            OneTimeRunner.Run(() =&gt;
            {
                ConfigureExistingProperties();
                ConfigureExtraProperties();
            });
        }
        private static void ConfigureExtraProperties()
        {
            ObjectExtensionManager.Instance.Modules()
                .ConfigureIdentity(identity =&gt;
                {
                    identity.ConfigureUser(user =&gt;
                    {
                        user.AddOrUpdateProperty&lt;string&gt;( //property type: string
                            "AvatarUrl",
                            property =&gt;
                            {
                                property.Attributes.Add( new StringLengthAttribute(128)); // 最大长度为28
                                // ...property.Attributes.Add( new RequiredAttribute()); 还有很多特性直接可以使用
                            }
                        );
                    });
                });
        }
 }
</code></pre>
<ul>
<li>如何写入或者更新到数据库</li>
</ul>
<pre><code class="language-csharp">private readonly IdentityUserManager _userManager;
public TestAppService(IdentityUserManager userManager)
{
    _userManager = userManager;
}
public async Task AddUserAsync()
{
    var user = new IdentityUser(GuidGenerator.Create(), "test-user", "test@qq.com");
    user.ExtraProperties["AvatarUrl"] = "test-avatar-url";
    await _userManager.CreateAsync(user);
}
</code></pre>
<ul>
<li>效果<br>
<img src="https://lion-abp-pro.oss-cn-shenzhen.aliyuncs.com/foods/021ff0a2396a41fe9572aefee95a2fc6_extra.png" alt="" loading="lazy"></li>
</ul>
<h2 id="疑问">疑问？</h2>
<ul>
<li>
<p>这个数据是一个json格式保存在数据库的扩展字段的?假如我的场景是要加索引呢?这个时候这种方式就不行了?</p>
</li>
<li>
<p><strong>映射成数据库字段列</strong></p>
<ul>
<li>在EntityFrameworkCore层的xxxEfCoreEntityExtensionMappings下集成一下代码</li>
</ul>
</li>
</ul>
<pre><code class="language-csharp">public static class JuiceEfCoreEntityExtensionMappings
{
    private static readonly OneTimeRunner OneTimeRunner = new OneTimeRunner();
    public static void Configure()
    {
        JuiceGlobalFeatureConfigurator.Configure();
        JuiceModuleExtensionConfigurator.Configure();
        OneTimeRunner.Run(() =&gt;
        {
            ObjectExtensionManager.Instance
                .MapEfCoreProperty&lt;IdentityUser, string&gt;(
                    "AvatarUrl",
                    (entityBuilder, propertyBuilder) =&gt;
                    {
                        propertyBuilder.HasMaxLength(128);
                    }
                );
        });
    }
}
</code></pre>
<ul>
<li>执行ef core迁移</li>
</ul>
<pre><code class="language-bash">dotnet ef migrations addAvatarUrl
dotnet database update
</code></pre>
<ul>
<li>
<p>效果<br>
<img src="https://lion-abp-pro.oss-cn-shenzhen.aliyuncs.com/foods/da48a1496ece4c91880708f2d4e14428_extra1.png" alt="" loading="lazy"></p>
</li>
<li>
<p>如何通过代码新增和编辑方式还是通过扩展字段操作和之前保持一致。</p>
</li>
</ul>
<h2 id="注意">注意</h2>
<ul>
<li>AutoMapper的时候记得需要mapper扩展属性(MapExtraProperties)，如下：</li>
</ul>
<pre><code class="language-csharp">public class AbpIdentityApplicationModuleAutoMapperProfile : Profile
{
    public AbpIdentityApplicationModuleAutoMapperProfile()
    {
        CreateMap&lt;IdentityUser, IdentityUserDto&gt;()
            .MapExtraProperties();

        CreateMap&lt;IdentityRole, IdentityRoleDto&gt;()
            .MapExtraProperties();
    }
}
</code></pre>
<ul>
<li>我们自写自己的模块的时候，应该也支持ExtraProperties，这样灵活性会更好。</li>
</ul>
<h1 id="abp-vnext-pro">ABP vNext Pro</h1>
<ul>
<li><a href="http://182.43.18.151:44320/" target="_blank" rel="noopener nofollow">AbpPro Vben5 Antd Vue版本预览</a></li>
<li><a href="http://182.43.18.151:44321/" target="_blank" rel="noopener nofollow">AbpPro Vben5 Antd Element Plus Vue版本预览</a></li>
<li><a href="http://182.43.18.151:44322/" target="_blank" rel="noopener nofollow">AbpPro Vben5 Antd Naive UI Vue版本预览</a></li>
<li><a href="http://doc.cncore.club/" target="_blank" rel="noopener nofollow">文档地址</a></li>
</ul>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.046454529871527775" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2024-12-31 11:11">2024-12-31 11:10</span>&nbsp;
<a href="https://www.cnblogs.com/WangJunZzz">WangJunZzz</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18643583" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18643583);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18643583', targetLink: 'https://www.cnblogs.com/WangJunZzz/p/18643583', title: 'Abp vNext 扩展属性' })">举报</a>
</div>
        