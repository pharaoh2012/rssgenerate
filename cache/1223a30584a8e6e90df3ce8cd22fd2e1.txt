<!----> <meta itemprop="headline" content="Cursor 在前端需求开发工作流中的应用｜得物技术"> <meta itemprop="keywords" content="前端,AIGC,Cursor,AI编程"> <meta itemprop="datePublished" content="2025-04-08T01:45:19.000Z"> <meta itemprop="image" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-128.png~tplv-t2oaga2asx-image.image"> <div itemprop="author" itemscope="itemscope" itemtype="http://schema.org/Person"><meta itemprop="name" content="得物技术"> <meta itemprop="url" content="https://juejin.cn/user/2392954206960247"></div> <div itemprop="publisher" itemscope="itemscope" itemtype="http://schema.org/Organization"><meta itemprop="name" content="掘金"> <div itemprop="logo" itemscope="itemscope" itemtype="https://schema.org/ImageObject"><meta itemprop="url" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-white-180.png~tplv-t2oaga2asx-image.image"> <meta itemprop="width" content="180"> <meta itemprop="height" content="180"></div></div> <h1 class="article-title" data-v-61fb5e44="">
            Cursor 在前端需求开发工作流中的应用｜得物技术
            <!----> <!----></h1> <div class="author-info-block block-hidden" data-v-61fb5e44=""><div class="author-info-box" data-v-61fb5e44=""><div class="author-name" data-v-61fb5e44=""><a href="/user/2392954206960247/posts" target="_blank" rel="" class="jj-link username username ellipsis" data-v-65b50b51="" data-v-292f6e48="" data-v-61fb5e44=""><span class="name" style="max-width:160px;" data-v-65b50b51="" data-v-292f6e48="">
    得物技术
  </span> <!----> <!----> <!----> </a></div> <div class="meta-box" data-v-61fb5e44=""><time datetime="2025-04-08T01:45:19.000Z" title="Tue Apr 08 2025 01:45:19 GMT+0000 (Coordinated Universal Time)" class="time" data-v-61fb5e44="">
                    2025-04-08
                  </time> <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="read-icon" data-v-61fb5e44=""><path d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor" data-v-61fb5e44=""></path><circle cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor" data-v-61fb5e44=""></circle></svg> <span class="views-count" data-v-61fb5e44="">
                    7,835
                  </span> <span class="read-time" data-v-61fb5e44=""><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" data-v-61fb5e44=""><rect width="16" height="16" fill="none" data-v-61fb5e44=""></rect><circle cx="8" cy="8" r="5.65625" stroke="#8A919F" data-v-61fb5e44=""></circle><path d="M7.69141 5.18652V8.30924H10.8141" stroke="#8A919F" stroke-linecap="round" stroke-linejoin="round" data-v-61fb5e44=""></path></svg>
                    阅读13分钟
                  </span> <!----></div></div> <div style="flex:1;" data-v-61fb5e44=""></div> <!----> <!----></div> <!----> <!----> <!----> <!----> <div id="article-root" itemprop="articleBody" class="main" data-v-61fb5e44=""><div class="article-viewer markdown-body result"><h2 data-id="heading-0">一、引言</h2>
<p>很高兴与大家分享现阶段 Cursor 在我的工作中的使用体验。首先是预期管理，本篇文章不会分享 x 个你可能不知道的小技巧，也不会让你拥有无需自行编码的能力，同时不涉及 Cursor 工程化方面内容。仅仅是围绕个人开发流程中的已有问题，分享如何使用 Cursor 来提升这部分的开发体验，在工作中持续保持好的节奏和状态。</p>
<p>TL;DR</p>
<ul>
<li>
<p>列举 Cursor 的错误预期</p>
</li>
<li>
<p>相比过去的开发流程，使用 Cursor 后的变化</p>
</li>
<li>
<p>Cursor 在现状分析、方案设计和影响评估中的收益</p>
</li>
</ul>
<h2 data-id="heading-1">二、就差一个程序员了</h2>
<p>最近团队在大力推广 Cursor AI，随着几个版本迭代体验下来，其精准的自动补全深得我心，具体可以体现在 Tab 键的使用率已逐渐高于 Command + C/V。既然这么懂我，那么能否更进一步，根据 PRD 直接输出代码呢？</p>
<h3 data-id="heading-2">2.1 从需求到代码</h3>
<p>Cursor 能够理解代码上下文，从而根据简短的描述生成符合上下文的代码，于是我尝试直接将 PRD 提供给 Cursor 来生成代码：</p>
<pre><code class="hljs language-css" lang="css">PRD →&nbsp;<span class="hljs-attribute">Cursor</span>&nbsp;→&nbsp;<span class="hljs-selector-tag">Code</span>（一步到位）
</code></pre>
<p>几个需求尝试下来，总的来说分为两类问题：</p>
<p><img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/0c8c8e5836c64a618d30cf198e9c31ce~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5b6X54mp5oqA5pyv:q75.awebp?rk3s=f64ab15b&amp;x-expires=1751940549&amp;x-signature=8uv%2BEoFQLNJ7dExlj%2BEqGNKHX6Q%3D" alt="" loading="lazy"></p>
<p>这就像你去理发店，希望 Tony 老师稍微剪短一点，结果却被剪得稍微短了点。而这需要我们在开始之前对齐认知，补充描述和参照。在这个前置阶段，即使发现对方理解有偏差，也还能及时纠正。俗称“对齐颗粒度”。</p>
<h3 data-id="heading-3">2.2 从规划到执行</h3>
<p>Cursor 产出的代码由它所接收的上下文决定，如果没有准确描述需求意图，它会通过推断做出假设，导致产出不准确。因此我们在使用 Cursor 时，关键在于区分开发过程中的<strong>规划阶段</strong>和<strong>执行阶段</strong>。在这个分层的视角下，不管是自身的关注点还是 AI 的角色定位都变得更加清晰：</p>
<p><img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/2a70ed6d65ef4ac28227682229f05884~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5b6X54mp5oqA5pyv:q75.awebp?rk3s=f64ab15b&amp;x-expires=1751940549&amp;x-signature=0lrBc3rpcXITjqhNolBlzJzR5Qs%3D" alt="" loading="lazy"></p>
<p>Cursor 在这个过程中，不应该被视为开发者的替代品，而是一面能够放大开发者能力的镜子：</p>
<ul>
<li>
<p>对于<strong>已知</strong>的部分，Cursor 可以加速实现，减少重复劳动。</p>
</li>
<li>
<p>对于<strong>未知</strong>的部分，Cursor 可以协助探索，但不能替代开发者的判断。</p>
</li>
</ul>
<p>在理解了 AI 的角色后，我们需要重构目前的开发工作流，让 AI 成为真正有效的助手。最关键的转变是：**不再试图让 AI 替代开发流程中的任何环节，而是让它协助完成每个环节。**这意味着不是把 PRD 扔给 AI，等待完整代码，而是和 AI 一起理解 PRD 和代码现状，<strong>共同设计方案，明确步骤，然后分步实现。</strong></p>
<h2 data-id="heading-4">三、现有问题</h2>
<p>作为前端开发，我们的日常工作流程中大多围绕需求文档进行代码产出。这需要介于</p>
<ol>
<li>
<p><strong>我们对业务需求的理解。</strong></p>
</li>
<li>
<p><strong>对所属业务和项目现状的认知。</strong></p>
</li>
<li>
<p><strong>从而进行方案设计和决策，整理思路将复杂问题分解成可执行的粒度。</strong></p>
</li>
</ol>
<p><img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/ac79b3c89dde4a9d8f11c22a6d85adef~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5b6X54mp5oqA5pyv:q75.awebp?rk3s=f64ab15b&amp;x-expires=1751940549&amp;x-signature=HXMfT%2BG%2FquSFcglJ9KA43wbCdHU%3D" alt="" loading="lazy"></p>
<p>但同时，这导致我们不得不面临着一个矛盾：<strong>方案设计对效率的影响。一方面，方案设计是保证质量的必要环节；另一方面，生成和维护这些产物又会显著降低开发效率。尤其是在快速迭代的项目需求中，这种矛盾更为突出。</strong></p>
<p>有时即使是一个小需求，可能也需要经过大量前置分析，才能进入开发。举个例子，以下是某个小需求的前端方案截图，通过不同的颜色区分了各流程的占比。从图中可以看出，各模块中绿色和蓝色所对应的「现状分析」和「改动方案」后占据了主要的篇幅，与相应的时间占用成正比。</p>
<p><img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/a1cfeddd07cb490c9b249de38dbb401f~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5b6X54mp5oqA5pyv:q75.awebp?rk3s=f64ab15b&amp;x-expires=1751940549&amp;x-signature=qHPJul7RhoEQEwhfy8OJVdxGxTo%3D" alt="图片" loading="lazy"></p>
<p>前端方案中的各环节分布</p>
<p>传统的解决方案通常是：</p>
<ul>
<li>
<p>模板化方案设计，减少重复工作。</p>
</li>
<li>
<p>简化方案设计，减少不必要的细节描述。</p>
</li>
<li>
<p>提高团队熟练度，使得方案设计生成更加高效。</p>
</li>
</ul>
<p>作为附加项，现在我们能在这些基础上借助 Cursor 进一步提升效能。</p>
<h2 data-id="heading-5">四、协作流程</h2>
<h3 data-id="heading-6">4.1 反馈循环</h3>
<p>在协作时，关键在于对 Cursor 补充上下文，并对 Cursor 提供的结论进行人工核验，两者构成反馈循环。前者是希望 Cursor 知道，后者是需要我们自己知道，从而保障产出的结果符合预期。</p>
<p><img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/9e5a4a8ed4a94ac68c967b00c8d1e4d5~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5b6X54mp5oqA5pyv:q75.awebp?rk3s=f64ab15b&amp;x-expires=1751940549&amp;x-signature=VMDmsUkRdcpcLFT%2BI%2B9Jil8KX%2Fc%3D" alt="图片" loading="lazy"></p>
<p>整体的 Cursor 协作流程分为规划和执行两个阶段。<strong>规划阶段专注于产出方案，执行阶段根据方案产出代码，两者交替执行。</strong>
<img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/d3b06cccedba4110bb6558008d10d791~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5b6X54mp5oqA5pyv:q75.awebp?rk3s=f64ab15b&amp;x-expires=1751940549&amp;x-signature=cbiHJT3giaXcEjpgDUQlLUotOTY%3D" alt="" loading="lazy">
<img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/f6a8e24bc9f14384ad0de61e62646fa9~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5b6X54mp5oqA5pyv:q75.awebp?rk3s=f64ab15b&amp;x-expires=1751940549&amp;x-signature=0Le3I2APBTdHR8sm1SYkB%2Fc7SpQ%3D" alt="" loading="lazy"></p>
<h3 data-id="heading-7">4.2 流程对比</h3>
<p>相较于以往，在使用 Cursor 后的工作模式差异如下：</p>
<p><img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/7dc075fa331e451aa2a7f38a133589e4~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5b6X54mp5oqA5pyv:q75.awebp?rk3s=f64ab15b&amp;x-expires=1751940549&amp;x-signature=28EARwY1%2BeNsKaTrhaKIZDBJVbA%3D" alt="图片" loading="lazy">
<img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/e1eb9abcc42e409891a416ad783fdb91~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5b6X54mp5oqA5pyv:q75.awebp?rk3s=f64ab15b&amp;x-expires=1751940549&amp;x-signature=sWoJUl0vf%2BP%2BIHADTg4QSwUOP7E%3D" alt="" loading="lazy"></p>
<p>乍一看使用 Curosr 后流程更加繁琐，而实际上也确实如此。</p>
<p>所以这里更推荐换一个心态来看待流程上的变化，不必为了使用工具而使用。过去我们面向 Google / GitHub / Stack Overflow 编程也并不是因为我们为了搜索而搜索，是因为在具体开发中遇到了不明确的信息需要确认，现在这个角色可以渐进地由 Cursor 替代，比起搜索引擎，Cursor 能充分地根据项目现状分析出更贴切的答案，如同行车的导航和选购的得物，为此不必有太多的心理负担。</p>
<h2 data-id="heading-8">五、场景应用</h2>
<p>重新回到在需求开发工作中的问题，占据我代码之外的主要工作是“现状分析”、“改动方案”和“影响评估”，因此主要分享这三个场景中的 Cursor 使用体验。</p>
<p>关于提示词，可根据实际需要使用 notepads 或 rules 降低单次使用成本。</p>
<h3 data-id="heading-9">5.1 现状分析</h3>
<p>在需求开发过程中，我们时常会接触到陌生的业务模块，如何理解现状往往是最耗时也最容易被忽视的部分。如果对现状不够了解，当需求相对复杂或者项目本身存在较多的历史债务时，我们很难输出符合预期的方案，更难以保证最终代码的质量。对于新接手项目的开发者而言，这一阶段常常伴随着无数次的"代码考古"和"问询前人"。</p>
<p>Cursor 离代码上下文更近，我们可以在它的协助下抽丝剥茧，快速了解业务主线。这是一个学习的过程，当知道的越多，在后续的设计和开发中就越能正确地引导 Cursor。</p>
<p>具体可以从需求的目标改动点开始，梳理其所属功能和实现方式，包含交互流程、数据管理和条件渲染等：</p>
<pre><code class="hljs language-erlang" lang="erlang">业务需求
&nbsp; &nbsp; ├── <span class="hljs-number">1</span>. 功能
&nbsp; &nbsp; │ &nbsp; ├── <span class="hljs-number">2</span>. 实现&nbsp;
&nbsp; &nbsp; │ &nbsp; ... └── <span class="hljs-number">3</span>. 字段
&nbsp; &nbsp; ...
</code></pre>























<table><thead><tr><th>目标</th><th>了解业务功能</th><th>了解代码实现</th><th>了解字段依赖</th></tr></thead><tbody><tr><td>提示词参考</td><td>当前功能如何运作，用户交互有哪些路径，具体数据流向是怎样的，请整理成 mermaid 时序图。</td><td>当前代码如何组织，核心模块有哪些，组件间如何通信，梳理组件关系图。</td><td>梳理当前表单字段的显隐关系、联动逻辑以及数据源。</td></tr><tr><td>效果</td><td>输出所属功能中的角色和角色之间的交互方式，能快速掌握业务模块的大体脉络。<img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/659d0fe07de5495a88b12321ab1246f6~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5b6X54mp5oqA5pyv:q75.awebp?rk3s=f64ab15b&amp;x-expires=1751940549&amp;x-signature=rQTO9vO8hf%2Br7Y5lpfj47IdrFFI%3D" alt="" loading="lazy"></td><td>输出组件职责和组件间的关系，以便在投入开发前以组件模块维度确定改动范围。<img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/d2079f62d8094eb5bf9fbf96db824a5a~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5b6X54mp5oqA5pyv:q75.awebp?rk3s=f64ab15b&amp;x-expires=1751940549&amp;x-signature=FgV8gfBG1yCq6ji9HAVPvTVMjLs%3D" alt="" loading="lazy"></td><td>能直观地呈现表单字段间的联动说明。<img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/34b530c6cc1e4c978ca2dc9508ebf110~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5b6X54mp5oqA5pyv:q75.awebp?rk3s=f64ab15b&amp;x-expires=1751940549&amp;x-signature=iPS2ykbnPjXw%2BaMQql251aEZzus%3D" alt="" loading="lazy"></td></tr></tbody></table>
<p>通过对上述三个层面的不断往复，Cursor 提供的直观输入能帮助我们摆脱掉一知半解的状态，消除不确定性也就消除了焦虑。</p>
<h3 data-id="heading-10">5.2 改动方案</h3>
<p>在了解了现状后，开始面向需求进行改动方案设计。</p>
<p>在问答中，Cursor 倾向于直接满足表面的需求，但可能会忽略一些深层的系统设计考虑。当遇到复杂的问题时，建议先让 Cursor 分析问题本身，而不是直接要求它给出解决方案。通过引导它进行更全面的思考，能防止 Cursor 胡编乱造，确保它理解需求，同时也能暴露自身的思考局限，减少返工。具体做法可以先提示 “在我让你写代码之前不要生成代码” 以及 “先逐步分析需求再说明你打算怎么做”；</p>
<p>另一方面，由于 Cursor 背后 LLM 的 Context Window 存在上下文长度限制，意味着 Cursor 跟我们一样都存在“短期记忆”，这体现在当对话超出范围后，Cursor 会在输出方案和代码时，遗忘此前的要求和结论，造成不准确。因此，为了将短期记忆转换成长期记忆，需要我们对复杂任务进行必要的拆解，每次只专注于单个粒度下的问答，当确认方案后，再让 Cursor 汇总并记录到外置文档，以便在后续的对话中补充上下文（也可以借助 @Summarized Composers 实现）。在面对下一个任务时，开启新的会话进行问答，多轮下来形成由不同模块组装而成的方案设计。</p>
<p>这样一来，在生成代码阶段，Cursor 所需要面对的只是局部复杂度中的改动，这能很大程度上减缓我们在代码审核和验证上的投入成本。Cursor 也能始终保持在长度限制范围内，面对精炼后的方案设计进行决策和产出。</p>
<p>因此在整体流程上：</p>
<p>1. 拆解需求，缩小关注范围</p>
<p>2. 明确目标，清晰表达需求描述</p>
<ul>
<li>
<p>Cursor 提供方案</p>
</li>
<li>
<p>检查是否有理解偏差，并不断调整提示</p>
</li>
<li>
<p>在确认方案后，最终由 Cursor 汇总成果</p>
</li>
</ul>
<p>3. 渐进开发，分模块由 Cursor 生成代码，及时验证效果和审核代码</p>
<p>提示词参考：</p>
<ul>
<li>方案设计</li>
</ul>

<pre><code class="hljs">我们先探讨方案，在我让你写代码之前不要生成代码
如果此处要加个 xxx 该怎么做，请先逐步分析需求
在想明白后向我说明为什么要这么设计
</code></pre>
<ul>
<li>代码产出，在功能之外，留意识别边界场景以及控制影响面</li>
</ul>

<pre><code class="hljs">在写代码时遵循最小改动原则，避免影响原先的功能
即使识别到历史问题也不要自行优化，可以先告知我问题描述和对当前需求的影响，不要直接改跟本次需求无关的代码
</code></pre>
<h3 data-id="heading-11">5.3 影响评估</h3>
<p>除去开发之前的方案耗时，在完成开发后，我们所要解决的是如何保障自测质量的问题。对于研发而言，需要关注的是在这个需求迭代内，改动点所关联的调用链路，而在这个路径依赖下不断冒泡所涉及到的具体功能就是影响面。</p>
<p>因此可以从两个方面提高自测可信度</p>
<ul>
<li>
<p>自下而上：基于改动代码和依赖项进行白盒测试，这需要研发自身投入必要的时间进行代码审核；</p>
</li>
<li>
<p>自上而下：识别改动最终涉及到的页面和功能进行黑盒测试，逐个回归和确认功能是否符合预期。</p>
</li>
</ul>
<p><img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/71c6a37d7dc14ab5b5cdcb0d7cc2558b~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5b6X54mp5oqA5pyv:q75.awebp?rk3s=f64ab15b&amp;x-expires=1751940549&amp;x-signature=0Fmq7pA4t71DFYACaBr%2B55hok%2Fs%3D" alt="图片" loading="lazy"></p>
<p>借助 Cursor 可以很低成本地分析改动，并按需产出测试用例，通过&nbsp;@git&nbsp;指令让 Cursor 参与到对当前功能分支或具体 commit 的评估：</p>
<p><img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/ee2dd034d4fd49978853f8eaeea82cb3~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5b6X54mp5oqA5pyv:q75.awebp?rk3s=f64ab15b&amp;x-expires=1751940549&amp;x-signature=QrB5Ymz9WolAL9gdhxwaxKPb2SY%3D" alt="图片" loading="lazy"></p>




















<table><thead><tr><th>目标</th><th>代码审查</th><th>功能验证</th></tr></thead><tbody><tr><td>提示词</td><td>@git逐个文件分析并总结改动点，评估是否引入了新的问题。</td><td>@git基于代码变更输出自测用例清单。</td></tr><tr><td>效果</td><td>在列举出每个文件的改动意图后，会告知潜在问题和修改意见。<img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/efd2c18994554f8ab4b769095e65db81~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5b6X54mp5oqA5pyv:q75.awebp?rk3s=f64ab15b&amp;x-expires=1751940549&amp;x-signature=ehuTNa3zQG70iWJXciyXkk%2FxYT4%3D" alt="" loading="lazy"></td><td>围绕改动，生成新旧功能在不同场景中的测试用例。<img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/2a2439410daf4c89bf756d0dce23a226~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5b6X54mp5oqA5pyv:q75.awebp?rk3s=f64ab15b&amp;x-expires=1751940549&amp;x-signature=KZaDPb36umim0AiKehuTS9j%2BKVE%3D" alt="" loading="lazy"></td></tr></tbody></table>
<h2 data-id="heading-12">六、小结</h2>
<p>过去，成为一名优秀开发者需要经历漫长的积累：从反复查阅文档、在搜索引擎中筛选有效信息，到系统掌握编程语言、算法与网络原理，每一步都在构建扎实的「知识护城河」。而 AI 时代颠覆了这一逻辑 —— 当大模型能快速生成代码、解析技术方案时，开发者的核心能力似乎从“记忆与执行”转向成了“正确地提问，让 AI 提供答案”。</p>
<p>客观来看，AI 降低了信息获取的门槛，能更快地落地想法、验证思路。不变的是，好的答案源于好的问题，而提出好问题依旧需要积累专业领域下的知识，知道的越清楚才能在提问时描述得越清晰。</p>
<p>所有事都有吃力不讨好的部分，随着 Cursor 等 AI 工具在工程中的应用，我们可以逐渐将这部分职能分配出去，利用我们的知识储备，描述问题，引导过程，审核结果。工具的使用始终是为了节省人类体力和脑力的开销，从而在提升体验的同时提升生产力，以更充沛的精力聚焦在工作成果和个人成长上。</p>
<p><strong>往期回顾</strong></p>
<p><a href="https://link.juejin.cn?target=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkxNTE3ODU0NA%3D%3D%26mid%3D2247538355%26idx%3D1%26sn%3D9b67aef240411de3423aef55e222f82f%26scene%3D21%23wechat_redirect" target="_blank" title="https://mp.weixin.qq.com/s?__biz=MzkxNTE3ODU0NA==&amp;mid=2247538355&amp;idx=1&amp;sn=9b67aef240411de3423aef55e222f82f&amp;scene=21#wechat_redirect" ref="nofollow noopener noreferrer">1.</a><a href="https://link.juejin.cn?target=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkxNTE3ODU0NA%3D%3D%26mid%3D2247538355%26idx%3D1%26sn%3D9b67aef240411de3423aef55e222f82f%26scene%3D21%23wechat_redirect" target="_blank" title="https://mp.weixin.qq.com/s?__biz=MzkxNTE3ODU0NA==&amp;mid=2247538355&amp;idx=1&amp;sn=9b67aef240411de3423aef55e222f82f&amp;scene=21#wechat_redirect" ref="nofollow noopener noreferrer">得物 iOS 启动优化之 Building Closure</a></p>
<p><a href="https://link.juejin.cn?target=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkxNTE3ODU0NA%3D%3D%26mid%3D2247538314%26idx%3D1%26sn%3Da1f2d25a7a11fd50b543c6591317fd41%26scene%3D21%23wechat_redirect" target="_blank" title="https://mp.weixin.qq.com/s?__biz=MzkxNTE3ODU0NA==&amp;mid=2247538314&amp;idx=1&amp;sn=a1f2d25a7a11fd50b543c6591317fd41&amp;scene=21#wechat_redirect" ref="nofollow noopener noreferrer">2.</a><a href="https://link.juejin.cn?target=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkxNTE3ODU0NA%3D%3D%26mid%3D2247538314%26idx%3D1%26sn%3Da1f2d25a7a11fd50b543c6591317fd41%26scene%3D21%23wechat_redirect" target="_blank" title="https://mp.weixin.qq.com/s?__biz=MzkxNTE3ODU0NA==&amp;mid=2247538314&amp;idx=1&amp;sn=a1f2d25a7a11fd50b543c6591317fd41&amp;scene=21#wechat_redirect" ref="nofollow noopener noreferrer">分布式数据一致性场景与方案处理分析｜得物技术</a></p>
<p><a href="https://link.juejin.cn?target=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkxNTE3ODU0NA%3D%3D%26mid%3D2247538302%26idx%3D1%26sn%3Df85057dbe21821f68f9d9cd3b72fb8cb%26scene%3D21%23wechat_redirect" target="_blank" title="https://mp.weixin.qq.com/s?__biz=MzkxNTE3ODU0NA==&amp;mid=2247538302&amp;idx=1&amp;sn=f85057dbe21821f68f9d9cd3b72fb8cb&amp;scene=21#wechat_redirect" ref="nofollow noopener noreferrer">3.</a><a href="https://link.juejin.cn?target=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkxNTE3ODU0NA%3D%3D%26mid%3D2247538302%26idx%3D1%26sn%3Df85057dbe21821f68f9d9cd3b72fb8cb%26scene%3D21%23wechat_redirect" target="_blank" title="https://mp.weixin.qq.com/s?__biz=MzkxNTE3ODU0NA==&amp;mid=2247538302&amp;idx=1&amp;sn=f85057dbe21821f68f9d9cd3b72fb8cb&amp;scene=21#wechat_redirect" ref="nofollow noopener noreferrer">从对话到自主行动：AI应用如何从 Chat 进化为 Agent？开源项目源码深度揭秘｜得物技术</a></p>
<p><a href="https://link.juejin.cn?target=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkxNTE3ODU0NA%3D%3D%26mid%3D2247538265%26idx%3D1%26sn%3D46126305e017551fce1c548a0d482d52%26scene%3D21%23wechat_redirect" target="_blank" title="https://mp.weixin.qq.com/s?__biz=MzkxNTE3ODU0NA==&amp;mid=2247538265&amp;idx=1&amp;sn=46126305e017551fce1c548a0d482d52&amp;scene=21#wechat_redirect" ref="nofollow noopener noreferrer">4.</a><a href="https://link.juejin.cn?target=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkxNTE3ODU0NA%3D%3D%26mid%3D2247538265%26idx%3D1%26sn%3D46126305e017551fce1c548a0d482d52%26scene%3D21%23wechat_redirect" target="_blank" title="https://mp.weixin.qq.com/s?__biz=MzkxNTE3ODU0NA==&amp;mid=2247538265&amp;idx=1&amp;sn=46126305e017551fce1c548a0d482d52&amp;scene=21#wechat_redirect" ref="nofollow noopener noreferrer">得物技术部算法项目管理实践分享</a></p>
<p><a href="https://link.juejin.cn?target=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkxNTE3ODU0NA%3D%3D%26mid%3D2247538263%26idx%3D1%26sn%3D78e7e307da19e903656c2de2afb96dc9%26scene%3D21%23wechat_redirect" target="_blank" title="https://mp.weixin.qq.com/s?__biz=MzkxNTE3ODU0NA==&amp;mid=2247538263&amp;idx=1&amp;sn=78e7e307da19e903656c2de2afb96dc9&amp;scene=21#wechat_redirect" ref="nofollow noopener noreferrer">5.</a><a href="https://link.juejin.cn?target=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkxNTE3ODU0NA%3D%3D%26mid%3D2247538263%26idx%3D1%26sn%3D78e7e307da19e903656c2de2afb96dc9%26scene%3D21%23wechat_redirect" target="_blank" title="https://mp.weixin.qq.com/s?__biz=MzkxNTE3ODU0NA==&amp;mid=2247538263&amp;idx=1&amp;sn=78e7e307da19e903656c2de2afb96dc9&amp;scene=21#wechat_redirect" ref="nofollow noopener noreferrer">商家域稳定性建设之原理探索｜得物技术</a></p>
<p>文 / 魏命名</p>
<p>关注得物技术，每周一、三更新技术干货</p>
<p>要是觉得文章对你有帮助的话，欢迎评论转发点赞～</p>
<p>未经得物技术许可严禁转载，否则依法追究法律责任。</p></div></div>