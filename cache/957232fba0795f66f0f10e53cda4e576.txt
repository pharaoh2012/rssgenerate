
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/du-hong/p/18349063" title="发布于 2025-01-03 10:30">
    <span role="heading" aria-level="2">《刚刚问世》系列初窥篇-Java+Playwright自动化测试-9- 浏览器的相关操作  （详细教程）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h3>1.简介</h3>
<p>在自动化测试领域，元素定位是非常重要的一环。正确定位页面元素是测试用例能否成功执行的关键因素之一。playwright是一种自动化测试工具，它提供了丰富的元素定位方法，可以满足不同场景下的定位需求。前边宏哥已经通过不少的篇幅将playwright的元素定位的一些常用的基本方法和高级技巧基本介绍的差不多了，但是在Web端的UI自动化的测试中，我们通常需要使用一些方法来操作浏览器，用来模拟人工操作浏览器。今天就跟随宏哥学习了解一下。这一篇宏哥主要是介绍一下，在自动化测试的时候，我们常见的一些浏览器操作有哪些，宏哥将会一一介绍和讲解。</p>
<h3 id="autoid-0-1-0">2.层级</h3>
<p>在介绍浏览器的相关操作之前，宏哥先介绍一下层级，宏哥理解的其实就是操作层级，不对的话，欢迎批评指正。在Playwright中，测试层级为：</p>
<div class="cnblogs_code">
<pre><strong>Broswer-&gt;Context-&gt;Page</strong></pre>
</div>
<p>以上层级和在Python中介绍的一模一样，因为都是playwright，换汤不换药，这里只不过是将Python语言变成了Java语言。</p>
<h3 id="autoid-0-2-0">3.浏览器操作</h3>
<p>宏哥首先介绍一下浏览器常用的基本操作，然后再通过具体实例给小伙伴或者童鞋们演示一下。既然是浏览器的操作，那首先得将浏览器启动（打开）才能操作，但是要打开或者启动浏览器需要安装浏览器驱动，因此首先介绍一下playwright如何安装浏览器驱动。</p>
<h4>3.1安装浏览器驱动</h4>
<p>默认安装三大浏览器驱动webkit、chromium、firefox ，这里不需要我们考虑驱动的版本和浏览器的版本是否匹配，这个就比selenium方便多了。这里宏哥就不赘述了，可以看宏哥前边的文章自行安装即可！当然代码中也会自动检测是否存在驱动，不存在就会自动安装，但取决于网路问题，经常会失败。一般都可以自动安装成功，如果不成功，你可以自己查找资料手动安装。宏哥前边介绍的就是代码自动检测，然后自动安装，宏哥推荐这种方法。如果实在不成功，你可以多尝试几遍。</p>
<h4 id="autoid-0-3-0">3.2启动浏览器</h4>
<div>
<p>浏览器是通过<strong>BrowserType.launch()</strong> 创建的。使用浏览器创建公共主页的示例：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">import</span> com.microsoft.playwright.*<span style="color: rgba(0, 0, 0, 1)">;

</span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Example {
  </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> main(String[] args) {
    </span><span style="color: rgba(0, 0, 255, 1)">try</span> (Playwright playwright =<span style="color: rgba(0, 0, 0, 1)"> Playwright.create()) {
      BrowserType firefox </span>=<span style="color: rgba(0, 0, 0, 1)"> playwright.firefox()
      Browser browser </span>=<span style="color: rgba(0, 0, 0, 1)"> firefox.launch();
      Page page </span>=<span style="color: rgba(0, 0, 0, 1)"> browser.newPage();
      page.navigate(</span>'https://example.com'<span style="color: rgba(0, 0, 0, 1)">);
      browser.close();
    }
  }
}</span></pre>
</div>
<h4>3.3相关方法</h4>
<h5>3.3.1browserType</h5>
<p>获取浏览器所属的浏览器类型（chromium、firefox 或 webkit）。</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">Usage</span>
<span style="color: rgba(0, 0, 0, 1)">
Browser.browserType();

</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">Returns</span>
<span style="color: rgba(0, 0, 0, 1)">
BrowserType</span></pre>
</div>
<h5>3.3.2close</h5>
<p>如果此浏览器是使用&nbsp;BrowserType.launch（）&nbsp;获取的，则关闭浏览器及其所有页面（如果已打开）。</p>
<p>如果此浏览器已连接，将清除属于此浏览器的所有已创建上下文，并断开与浏览器服务器的连接。</p>
<p>敲黑板！！！注意：这类似于强制退出浏览器。因此，在调用&nbsp;Browser.close（）&nbsp;<span>之前，您应该在之前使用&nbsp;Browser.newContext（）&nbsp;显式创建的任何&nbsp;BrowserContext&nbsp;上调用&nbsp;BrowserContext.close（）。</span></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">Usage</span>
<span style="color: rgba(0, 0, 0, 1)">
Browser.close();
Browser.close(options);

</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">Arguments</span>
<span style="color: rgba(0, 0, 0, 1)">
options Browser.CloseOptions (optional)
setReason String (optional) Added in: v1.</span>40<span style="color: rgba(0, 0, 0, 1)">#

The reason to be reported to the operations interrupted by the browser closure.

</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">Returns</span>

<span style="color: rgba(0, 0, 255, 1)">void</span></pre>
</div>
<h5><span>3.3.3</span>contexts</h5>
<p>返回所有打开的浏览器上下文的数组。在新创建的浏览器中，这将返回零个浏览器上下文。</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">Usage</span>
<span style="color: rgba(0, 0, 0, 1)">
Browser browser </span>=<span style="color: rgba(0, 0, 0, 1)"> pw.webkit().launch();
System.out.println(browser.contexts().size()); </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> prints "0"</span>
BrowserContext context =<span style="color: rgba(0, 0, 0, 1)"> browser.newContext();
System.out.println(browser.contexts().size()); </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> prints "1"

</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">Returns</span>
<span style="color: rgba(0, 0, 0, 1)">
List</span>&lt;BrowserContext&gt;</pre>
</div>
<h4>3.4查看浏览器UI</h4>
<p>要查看浏览器UI，在启动浏览器时传递 headless=false 标志。</p>
<div class="cnblogs_code">
<pre>Playwright&nbsp;playwright&nbsp;=<span style="color: rgba(0, 0, 0, 1)">&nbsp;Playwright.create()；
Browser&nbsp;browser&nbsp;</span>=&nbsp;playwright.chromium().launch(<span style="color: rgba(0, 0, 255, 1)">new</span> BrowserType.LaunchOptions().setHeadless(<span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">));
Page&nbsp;page&nbsp;</span>=&nbsp;browser.newPage();</pre>
</div>
<h4>3.5减慢执行速度</h4>
<p>可以使用 slowMo 来减慢执行速度。在调试工具部分了解更多信息。</p>
<div class="cnblogs_code">
<pre>Playwright&nbsp;playwright&nbsp;=<span style="color: rgba(0, 0, 0, 1)">&nbsp;Playwright.create()；
Browser&nbsp;browser&nbsp;</span>=&nbsp;playwright.chromium().launch(<span style="color: rgba(0, 0, 255, 1)">new</span> BrowserType.LaunchOptions().setSlowMo(50<span style="color: rgba(0, 0, 0, 1)">));
Page&nbsp;page&nbsp;</span>=&nbsp;browser.newPage();</pre>
</div>
<h4>3.6访问跳转页面</h4>
<div class="cnblogs_code">
<pre>page.navigate("http://playwright.dev");</pre>
</div>
<h4>3.7刷新、前进和后退</h4>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">Page.reload()
Page.goBack()
Page.goForward()</span></pre>
</div>
<h4>3.8设置浏览器窗口大小</h4>
<p>窗口包含在设备中，但您可以使用&nbsp;Page.setViewportSize（）&nbsp;在某些测试中覆盖它。</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Create context with given viewport</span>
BrowserContext context = browser.newContext(<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Browser.NewContextOptions()
  .setViewportSize(</span>1280, 1024<span style="color: rgba(0, 0, 0, 1)">));

</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Resize viewport for individual page</span>
page.setViewportSize(1600, 1200<span style="color: rgba(0, 0, 0, 1)">);

</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Emulate high-DPI</span>
BrowserContext context = browser.newContext(<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Browser.NewContextOptions()
  .setViewportSize(</span>2560, 1440<span style="color: rgba(0, 0, 0, 1)">)
  .setDeviceScaleFactor(</span>2);</pre>
</div>
<h4>3.9配置浏览器</h4>
<p>在不同的浏览器上运行测试。</p>
<h5>3.9.1特定浏览器运行</h5>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">import</span> com.microsoft.playwright.*<span style="color: rgba(0, 0, 0, 1)">;

</span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Example {
  </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> main(String[] args) {
    </span><span style="color: rgba(0, 0, 255, 1)">try</span> (Playwright playwright =<span style="color: rgba(0, 0, 0, 1)"> Playwright.create()) {
      </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Launch chromium, firefox or webkit.</span>
      Browser browser =<span style="color: rgba(0, 0, 0, 1)"> playwright.chromium().launch();
      Page page </span>=<span style="color: rgba(0, 0, 0, 1)"> browser.newPage();
      </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> ...</span>
<span style="color: rgba(0, 0, 0, 1)">    }
  }
}</span></pre>
</div>
<h5>3.9.2多个浏览器运行</h5>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">import</span> com.microsoft.playwright.*<span style="color: rgba(0, 0, 0, 1)">;

</span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Example {
  </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> main(String[] args) {
    </span><span style="color: rgba(0, 0, 255, 1)">try</span> (Playwright playwright =<span style="color: rgba(0, 0, 0, 1)"> Playwright.create()) {
      Browser browser </span>= <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">;
      String browserName </span>= System.getenv("BROWSER"<span style="color: rgba(0, 0, 0, 1)">);
      </span><span style="color: rgba(0, 0, 255, 1)">if</span> (browserName.equals("chromium"<span style="color: rgba(0, 0, 0, 1)">)) {
        browser </span>=<span style="color: rgba(0, 0, 0, 1)"> playwright.chromium().launch();
      } </span><span style="color: rgba(0, 0, 255, 1)">else</span> <span style="color: rgba(0, 0, 255, 1)">if</span> (browserName.equals("firefox"<span style="color: rgba(0, 0, 0, 1)">)) {
        browser </span>=<span style="color: rgba(0, 0, 0, 1)"> playwright.firefox().launch();
      } </span><span style="color: rgba(0, 0, 255, 1)">else</span> <span style="color: rgba(0, 0, 255, 1)">if</span> (browserName.equals("webkit"<span style="color: rgba(0, 0, 0, 1)">)) {
        browser </span>=<span style="color: rgba(0, 0, 0, 1)"> playwright.webkit().launch();
      }
      Page page </span>=<span style="color: rgba(0, 0, 0, 1)"> browser.newPage();
      </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> ...</span>
<span style="color: rgba(0, 0, 0, 1)">    }
  }
}</span></pre>
</div>
<h3 id="autoid-0-3-9">4.项目实战</h3>
<p>以度娘为例，首先启动浏览器，然后再设置浏览器的大小。查询“北京宏哥”后，刷新页面执行回退到百度首页，然后有执行前进进入到搜索“北京宏哥”页面，最后退出浏览器。</p>
<h4 id="autoid-0-4-0">4.1代码设计</h4>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202408/1232840-20240808155633361-1174117744.png" alt="" loading="lazy"></p>
<h4>4.2参考代码</h4>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">package</span><span style="color: rgba(0, 0, 0, 1)"> com.bjhg.playwright;

</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Browser;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.BrowserContext;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.BrowserType;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Locator;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Page;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Playwright;

</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">
 * </span><span style="color: rgba(128, 128, 128, 1)">@author</span><span style="color: rgba(0, 128, 0, 1)"> 北京-宏哥
 * 
 * @公众号:北京宏哥（微信搜索，关注宏哥，提前解锁更多测试干货）
 * 
 * 《刚刚问世》系列初窥篇-Java+Playwright自动化测试-9- 浏览器的相关操作 （详细教程）
 *
 * 2024年8月16日
 </span><span style="color: rgba(0, 128, 0, 1)">*/</span>
<span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Test_Search {

    </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> main(String[] args) {
        </span><span style="color: rgba(0, 0, 255, 1)">try</span> (Playwright playwright =<span style="color: rgba(0, 0, 0, 1)"> Playwright.create()) {
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">1.使用chromium浏览器，# 浏览器配置，设置以GUI模式启动Chrome浏览器（要查看浏览器UI，在启动浏览器时传递&nbsp;headless=false&nbsp;标志。您还可以使用&nbsp;slowMo&nbsp;来减慢执行速度。</span>
          Browser browser = playwright.chromium().launch(<span style="color: rgba(0, 0, 255, 1)">new</span> BrowserType.LaunchOptions().setHeadless(<span style="color: rgba(0, 0, 255, 1)">false</span>).setSlowMo(500<span style="color: rgba(0, 0, 0, 1)">));
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">2.设置浏览器窗口大小</span>
          BrowserContext context = browser.newContext(<span style="color: rgba(0, 0, 255, 1)">new</span> Browser.NewContextOptions().setViewportSize(1280, 1024<span style="color: rgba(0, 0, 0, 1)">));
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">创建page</span>
          Page page =<span style="color: rgba(0, 0, 0, 1)"> context.newPage();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">3.浏览器打开百度</span>
          page.navigate("https://www.baidu.com/"<span style="color: rgba(0, 0, 0, 1)">);
          
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">判断title是不是 百度一下，你就知道</span>
             
          <span style="color: rgba(0, 0, 255, 1)">try</span><span style="color: rgba(0, 0, 0, 1)">{
               String baidu_title </span>= "百度一下，你就知道"<span style="color: rgba(0, 0, 0, 1)">;
               </span><span style="color: rgba(0, 0, 255, 1)">assert</span> baidu_title ==<span style="color: rgba(0, 0, 0, 1)"> page.title();
               System.out.println(</span>"Test Pass"<span style="color: rgba(0, 0, 0, 1)">);
                 
          }</span><span style="color: rgba(0, 0, 255, 1)">catch</span><span style="color: rgba(0, 0, 0, 1)">(Exception e){
               e.printStackTrace();
          }
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">使用xpath属性定位百度首页输入框 ，并输入搜索内容：北京-宏哥</span>
          page.locator("//*[@id='kw']").type("北京-宏哥"<span style="color: rgba(0, 0, 0, 1)">); 
          
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">使用路径与属性结合定位“百度一下”按钮，并点击 。</span>
          page.locator("//span/input[@id='su']"<span style="color: rgba(0, 0, 0, 1)">).click();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 5.刷新页面</span>
<span style="color: rgba(0, 0, 0, 1)">          page.reload();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 6.浏览器后退</span>
<span style="color: rgba(0, 0, 0, 1)">          page.goBack();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 7.浏览器前进</span>
<span style="color: rgba(0, 0, 0, 1)">          page.goForward();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">关闭page</span>
<span style="color: rgba(0, 0, 0, 1)">          page.close();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">关闭browser</span>
<span style="color: rgba(0, 0, 0, 1)">          browser.close();
        }
      }

}</span></pre>
</div>
<h4>4.3运行代码</h4>
<p>1.运行代码，右键Run'Test'，就可以看到控制台输出，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202408/1232840-20240808155545891-2128165493.png" alt="" loading="lazy"></p>
<p>2.运行代码后电脑端的浏览器的动作（先访问后搜索宏哥，然后刷新，后退到百度首页，然后再前进搜素宏哥的页面）。如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202408/1232840-20240808160035595-670006435.gif" alt="" loading="lazy"></p>
<h3 id="autoid-0-4-3">5.小结</h3>
<p>好了，关于浏览器的相关操作非常简单，时间不早了今天就分享到这里，感谢你耐心地阅读！</p>
</div>
</div>
<div id="MySignature" role="contentinfo">
    <div id="MySignature" style="display: block">
<div style="font-size: 13px; border: 1px dashed rgb(45, 161, 45); padding: 10px 15px; background-color: rgb(248, 248, 248)">
<label style="font-weight: bold">
&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家在移动端也能看到我分享的博文，现已注册个人微信公众号，扫描左下方二维码即可，欢迎大家关注，有时间会及时分享相关技术博文。</label><br>
<label style="font-weight: bold">
&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家互动讨论相关技术问题，现已组建专门的微信群，由于微信群满100，请您扫描右下方宏哥个人微信二维码拉你进群<label style="font-weight: bold; color: red; font-size: 15px">（请务必备注：已关注公众号进群）平时上班忙（和你一样），所以加好友不及时，请稍安勿躁~</label>，欢迎大家加入这个大家庭，我们一起畅游知识的海洋。</label><br>
&nbsp;&nbsp;&nbsp;&nbsp;感谢您花时间阅读此篇文章,如果您觉得这篇文章你学到了东西也是为了犒劳下博主的码字不易不妨打赏一下吧，让博主能喝上一杯咖啡，在此谢过了！<br>
&nbsp;&nbsp;&nbsp;&nbsp;如果您觉得阅读本文对您有帮助，请点一下左下角<a id="recommend" style="font-weight: bold; color: red; font-size: 15px; text-decoration: underline">“推荐”</a>按钮，您的<label style="font-weight: bold; color: red; font-size: 15px">“推荐”</label>将是我最大的写作动力！另外您也可以选择<a id="follow_me_btn" style="cursor: pointer; color: blue; text-decoration: underline">【<strong>关注我</strong>】</a>，可以很方便找到我！<br>
&nbsp;&nbsp;&nbsp;&nbsp;本文版权归作者和博客园共有，来源网址：<a href="https://www.cnblogs.com/du-hong" style="color: red; text-decoration: underline" target="_blank">https://www.cnblogs.com/du-hong</a> 欢迎各位转载，但是未经作者本人同意，转载文章之后必须在文章页面明显位置给出作者和原文连接，否则保留追究法律责任的权利！
</div>
<div style="text-align: center; margin-top: 10px">
   <p style="
    font-weight: bolder;
    color: red;
">公众号(关注宏哥)&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;客服微信</p><img style="width: 200px; padding-right: 20%" alt="个人微信公众号" src="https://img2018.cnblogs.com/common/1741949/201911/1741949-20191119095948011-608816619.png">
   <img style="width: 200px" alt="个人微信" src="https://img2018.cnblogs.com/common/1741949/201911/1741949-20191106101257091-849954564.png">
</div>
</div>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.15899526104861111" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-03 10:31">2025-01-03 10:30</span>&nbsp;
<a href="https://www.cnblogs.com/du-hong">北京-宏哥</a>&nbsp;
阅读(<span id="post_view_count">40</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18349063" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18349063);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18349063', targetLink: 'https://www.cnblogs.com/du-hong/p/18349063', title: '《刚刚问世》系列初窥篇-Java+Playwright自动化测试-9- 浏览器的相关操作  （详细教程）' })">举报</a>
</div>
        