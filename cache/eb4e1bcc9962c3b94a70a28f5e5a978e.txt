
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/duxingren/p/18846789" title="发布于 2025-04-25 15:20">
    <span role="heading" aria-level="2">可轻便docker部署的密码保存系统：Vaultwarden</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h4 class="coz-fg-plus mb-1 mt-5 text-base leading-[1.75] font-bold">一、简介</h4>
<p class="coz-fg-primary text-base leading-[1.75] whitespace-wrap break-normal">Vaultwarden是著名的Bitwarden项目的一个分支，是一个社区驱动的项目，使用Rust语言编写。它是Bitwarden的轻量级自托管替代方案，完全兼容Bitwarden客户端协议，支持通过Docker或Podman极速部署，几分钟内就能完成上线，极为便捷，尤其适合服务器资源有限、追求轻量化的用户。</p>
<h4 class="coz-fg-plus mb-1 mt-5 text-base leading-[1.75] font-bold">二、主要特点</h4>
<ol class="coz-fg-primary list-decimal leading-[1.75] ml-8 whitespace-normal">
<li class="coz-fg-primary leading-[1.75] mb-0 break-all whitespace-normal"><span class="coz-fg-plus font-bold text-base leading-[1.75]">自托管：可以将其托管在自己的服务器或基础设施上，完全控制数据，减少对第三方服务和云提供商的依赖。</span></li>
<li class="coz-fg-primary leading-[1.75] mb-0 break-all whitespace-normal"><span class="coz-fg-plus font-bold text-base leading-[1.75]">端到端加密：采用强大的端到端加密来保护密码和其他敏感信息，所有数据在发送到服务器之前都会在设备上进行加密，只有用户可以访问解密的数据。</span></li>
<li class="coz-fg-primary leading-[1.75] mb-0 break-all whitespace-normal"><span class="coz-fg-plus font-bold text-base leading-[1.75]">开源和透明度：是一个开源项目，源代码可公开供审查，这种透明度促进信任，并允许安全专家审核代码，增强平台的整体安全性。</span></li>
<li class="coz-fg-primary leading-[1.75] mb-0 break-all whitespace-normal"><span class="coz-fg-plus font-bold text-base leading-[1.75]">跨平台兼容性：服务器可与官方Bitwarden客户端配合使用，适用于各种平台，包括Windows、macOS、Linux、iOS和Android，能从任何设备轻松访问密码。</span></li>
<li class="coz-fg-primary leading-[1.75] mb-0 break-all whitespace-normal"><span class="coz-fg-plus font-bold text-base leading-[1.75]">浏览器集成：使用Bitwarden的浏览器扩展，可将自托管Vaultwarden服务器与所有主要Web浏览器无缝集成，在浏览网页时自动填充登录凭据并直接访问密码。</span></li>
<li class="coz-fg-primary leading-[1.75] mb-0 break-all whitespace-normal"><span class="coz-fg-plus font-bold text-base leading-[1.75]">活跃的社区支持：受益于活跃且参与的开发者和用户社区，为其持续的开发和支持做出贡献。</span></li>
<li class="coz-fg-primary leading-[1.75] mb-0 break-all whitespace-normal"><span class="coz-fg-plus font-bold text-base leading-[1.75]">经济高效：与订阅基于云的密码管理服务相比，自托管Vaultwarden是一种经济高效的选择，特别是对于拥有特定托管资源的个人或组织而言。</span></li>
<li class="coz-fg-primary leading-[1.75] mb-0 break-all whitespace-normal"><span class="coz-fg-plus font-bold text-base leading-[1.75]">资源占用低：相比官方服务器，内存占用显著降低，仅需约10MB内存。</span></li>
<li class="coz-fg-primary leading-[1.75] mb-0 break-all whitespace-normal"><span class="coz-fg-plus font-bold text-base leading-[1.75]">完整功能支持：支持密码存储、安全笔记、信用卡信息、身份信息等核心功能。</span></li>
</ol>
<h4 class="coz-fg-plus mb-1 mt-5 text-base leading-[1.75] font-bold">三、部署要求</h4>
<ol class="coz-fg-primary list-decimal leading-[1.75] ml-8 whitespace-normal">
<li class="coz-fg-primary leading-[1.75] mb-0 break-all whitespace-normal"><span class="coz-fg-plus font-bold text-base leading-[1.75]">Docker Engine：用于容器化部署和管理。</span></li>
<li class="coz-fg-primary leading-[1.75] mb-0 break-all whitespace-normal"><span class="coz-fg-plus font-bold text-base leading-[1.75]">Docker Compose：支持configs的版本，用于多容器应用的编排。</span></li>
<li class="coz-fg-primary leading-[1.75] mb-0 break-all whitespace-normal"><span class="coz-fg-plus font-bold text-base leading-[1.75]">推荐服务器配置：CPU为2核心，内存为2GB RAM，存储为20GB+可用空间。</span></li>
<li class="coz-fg-primary leading-[1.75] mb-0 break-all whitespace-normal"><span class="coz-fg-plus font-bold text-base leading-[1.75]">网络环境：要求支持https访问，需配备tls证书，如果是自签证书，需要浏览器信任。</span></li>
</ol>
<h4 class="coz-fg-plus mb-1 mt-5 text-base leading-[1.75] font-bold">四、部署步骤（以Docker Compose为例）</h4>
<ol class="coz-fg-primary list-decimal leading-[1.75] ml-8 whitespace-normal">
<li class="coz-fg-primary leading-[1.75] mb-0 break-all whitespace-normal"><span class="coz-fg-plus font-bold text-base leading-[1.75]"><span class="coz-fg-plus font-bold text-base leading-[1.75]">安装Docker和Docker Compose：</span></span>
<ul class="coz-fg-primary list-disc leading-[1.75] list-disc ml-8 break-all whitespace-normal">
<li class="coz-fg-primary leading-[1.75] mb-0 break-all whitespace-normal">如果尚未安装Docker，可以参考相关指南，如在Ubuntu 22.04、Debian 12 (Bullseye)、AlmaLinux/Rocky Linux、Fedora、Linux Mint 21、树莓派等系统上的安装方法。</li>
<li class="coz-fg-primary leading-[1.75] mb-0 break-all whitespace-normal">安装Docker Compose，可使用以下命令：</li>
</ul>
</li>
</ol>
<pre><code class="language-bash"><span class="linenumber react-syntax-highlighter-line-number">1<span class="token">sudo <span class="token">curl -L <span class="token">"https://github.com/docker/compose/releases/latest/download/docker-compose-linux-<span class="token">$(<span class="token">uname<span class="token"> -m<span class="token">)<span class="token">" -o /usr/local/bin/docker-compose
<span class="linenumber react-syntax-highlighter-line-number">2<span class="token">sudo <span class="token">chmod +x /usr/local/bin/docker-compose</span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
<ol class="coz-fg-primary list-decimal leading-[1.75] ml-8 whitespace-normal" start="2">
<li class="coz-fg-primary leading-[1.75] mb-0 break-all whitespace-normal"><span class="coz-fg-plus font-bold text-base leading-[1.75]"><span class="coz-fg-plus font-bold text-base leading-[1.75]">创建部署目录并编辑部署文件：</span></span>
<ul class="coz-fg-primary list-disc leading-[1.75] list-disc ml-8 break-all whitespace-normal">
<li class="coz-fg-primary leading-[1.75] mb-0 break-all whitespace-normal">创建部署目录：</li>
</ul>
</li>
</ol>
<pre><code class="language-bash"><span class="linenumber react-syntax-highlighter-line-number">1<span class="token">mkdir -p /data/vaultwarden <span class="token">&amp;&amp;  <span class="token">cd /data/vaultwarden</span></span></span></span></code></pre>
<pre class="custom-pre my-2 coz-fg-primary w-full rounded overflow-auto text-sm whitespace-pre-wrap break-all"><code class="coz-fg-primary vertical-middle p-2 rounded overflow-auto text-sm">- 在部署目录下，创建docker-compose.yaml文件，示例内容如下：
</code></pre>
<pre><code class="language-yaml"><span class="linenumber react-syntax-highlighter-line-number">1<span class="token key">version<span class="token">: <span class="token">'3'
<span class="linenumber react-syntax-highlighter-line-number">2<span class="token key">services<span class="token">:
<span class="linenumber react-syntax-highlighter-line-number">3  <span class="token key">vaultwarden<span class="token">:
<span class="linenumber react-syntax-highlighter-line-number">4    <span class="token key">container_name<span class="token">: vaultwarden
<span class="linenumber react-syntax-highlighter-line-number">5    <span class="token key">image<span class="token">: vaultwarden/server<span class="token">:latest
<span class="linenumber react-syntax-highlighter-line-number">6    <span class="token key">restart<span class="token">: unless<span class="token">-stopped
<span class="linenumber react-syntax-highlighter-line-number">7    <span class="token key">volumes<span class="token">:
<span class="linenumber react-syntax-highlighter-line-number">8      <span class="token">- ./data/<span class="token">:/data/
<span class="linenumber react-syntax-highlighter-line-number">9    <span class="token key">ports<span class="token">:
<span class="linenumber react-syntax-highlighter-line-number">10      <span class="token">- 8080<span class="token">:<span class="token">80
<span class="linenumber react-syntax-highlighter-line-number">11    <span class="token key">environment<span class="token">:
<span class="linenumber react-syntax-highlighter-line-number">12      <span class="token">- DOMAIN=https<span class="token">://subdomain.yourdomain.com <span class="token"># 这是您希望与您的Vaultwarden实例关联的域名。
<span class="linenumber react-syntax-highlighter-line-number">13      <span class="token">- LOGIN_RATELIMIT_MAX_BURST=10 <span class="token"># 允许在一阵登录/两步验证尝试中的最大请求次数。
<span class="linenumber react-syntax-highlighter-line-number">14      <span class="token">- LOGIN_RATELIMIT_SECONDS=60 <span class="token"># 这是来自同一IP的登录请求之间的平均秒数，在Vaultwarden限制登录次数之前。
<span class="linenumber react-syntax-highlighter-line-number">15      <span class="token">- ADMIN_RATELIMIT_MAX_BURST=10 <span class="token"># 这与LOGIN_RATELIMIT_MAX_BURST相同，只争对admin面板。
<span class="linenumber react-syntax-highlighter-line-number">16      <span class="token">- ADMIN_RATELIMIT_SECONDS=60 <span class="token"># 这与LOGIN_RATELIMIT_SECONDS相同
<span class="linenumber react-syntax-highlighter-line-number">17      <span class="token">- ADMIN_SESSION_LIFETIME=20 <span class="token"># 会话持续时间
<span class="linenumber react-syntax-highlighter-line-number">18      <span class="token">- ADMIN_TOKEN=YourReallyStrongAdminTokenHere <span class="token"># 此值是Vaultwarden管理员面板的令牌（一种密码）。为了安全起见，这应该是一个长的随机字符串。如果未设置此值，则管理员面板将被禁用。建议openssl rand -base64 48生成ADMIN_TOKEN确保安全
<span class="linenumber react-syntax-highlighter-line-number">19      <span class="token">- SENDS_ALLOWED=true  <span class="token"># 此设置决定是否允许用户创建Bitwarden发送 - 一种凭证共享形式。
<span class="linenumber react-syntax-highlighter-line-number">20      <span class="token">- EMERGENCY_ACCESS_ALLOWED=true <span class="token"># 此设置控制用户是否可以启用紧急访问其账户的权限。例如，这样做可以在用户去世后，配偶可以访问密码库以获取账户凭证。可能的值：true / false。
<span class="linenumber react-syntax-highlighter-line-number">21      <span class="token">- WEB_VAULT_ENABLED=true <span class="token"># 此设置决定了网络保险库是否可访问。一旦您配置了您的账户和客户端，停止您的容器，然后将此值切换为false并重启Vaultwarden，可以用来防止未授权访问。可能的值：true/false。
<span class="linenumber react-syntax-highlighter-line-number">22      <span class="token">- SIGNUPS_ALLOWED=true <span class="token"># 此设置控制新用户是否可以在没有邀请的情况下注册账户。可能的值：true / false。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
<pre class="custom-pre my-2 coz-fg-primary w-full rounded overflow-auto text-sm whitespace-pre-wrap break-all"><code class="coz-fg-primary vertical-middle p-2 rounded overflow-auto text-sm">- 注意：`DOMAIN` 改成最后要用的域名形式，`ADMIN_TOKEN` 可以在ssh里面输入 `openssl rand -base64 48` 生成。
</code></pre>
<p class="coz-fg-primary text-base leading-[1.75] whitespace-wrap break-normal">3.&nbsp;<span class="coz-fg-plus font-bold text-base leading-[1.75]">创建Vaultwarden容器：</span></p>
<pre><code class="language-bash"><span class="linenumber react-syntax-highlighter-line-number">1<span class="token">docker-compose up -d</span></span></code></pre>
<ol class="coz-fg-primary list-decimal leading-[1.75] ml-8 whitespace-normal" start="4">
<li class="coz-fg-primary leading-[1.75] mb-0 break-all whitespace-normal"><span class="coz-fg-plus font-bold text-base leading-[1.75]">配置反向代理（可选）：为了便于长期维护和提供HTTPS服务，推荐使用Nginx或Caddy等反代服务。例如，使用Caddy作为反向代理，它可以自动颁发Let’s Encrypt SSL证书。</span></li>
</ol>
<h4 class="coz-fg-plus mb-1 mt-5 text-base leading-[1.75] font-bold">五、访问Vaultwarden服务</h4>
<p class="coz-fg-primary text-base leading-[1.75] whitespace-wrap break-normal">安装以后，就可以通过<code class="coz-fg-primary vertical-middle p-2 rounded overflow-auto text-sm">ip:8080</code>访问Vaultwarden密码管理面板。如果配置了反向代理和HTTPS，可通过域名进行安全访问。</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.04180666756481481" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-25 15:21">2025-04-25 15:20</span>&nbsp;
<a href="https://www.cnblogs.com/duxingren">执手仗剑天涯</a>&nbsp;
阅读(<span id="post_view_count">40</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18846789);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18846789', targetLink: 'https://www.cnblogs.com/duxingren/p/18846789', title: '可轻便docker部署的密码保存系统：Vaultwarden' })">举报</a>
</div>
        