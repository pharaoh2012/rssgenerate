
        <h2>
            <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wuhuacong/p/19050995" title="发布于 2025-08-21 17:49">
    <span role="heading" aria-level="2">在Vant4+Vue3+TypeScript的H5移动前端使用UnoCSS</span>
    

</a>

        </h2>
        <div class="postbody">
                <div id="cnblogs_post_description" style="display: none">
        
        UnoCSS 是一个 即时原子化 CSS（Atomic CSS / Utility-first CSS）引擎，类似于 Tailwind CSS 或 Windi CSS，但更轻量、灵活、性能高。本篇随笔结合项目代码介绍在Vant4+Vue3+TypeScript的H5移动前端使用UnoCSS。
    </div>
<div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p data-start="76" data-end="182"><strong data-start="76" data-end="86">UnoCSS</strong> 是一个 <strong data-start="91" data-end="138">即时原子化 CSS（Atomic CSS / Utility-first CSS）引擎</strong>，类似于 Tailwind CSS 或 Windi CSS，但更轻量、灵活、性能高。本篇随笔结合项目代码介绍在Vant4+Vue3+TypeScript的H5移动前端使用UnoCSS。</p>
<p data-start="184" data-end="192"><strong data-start="76" data-end="86">UnoCSS</strong>&nbsp;它的核心理念是：</p>
<ul data-start="194" data-end="405">
<li data-start="194" data-end="259">
<p data-start="196" data-end="259"><strong data-start="196" data-end="207">原子化 CSS</strong>：每一个 class 对应一条 CSS 规则，例如 <code data-start="233" data-end="238">p-4</code> 就表示 <code data-start="243" data-end="258">padding: 1rem</code>。</p>
</li>
<li data-start="260" data-end="339">
<p data-start="262" data-end="339"><strong data-start="262" data-end="270">按需生成</strong>：只有在 HTML / JS / Vue / React / Svelte 中使用到的类，UnoCSS 才会生成对应的 CSS，避免冗余。</p>
</li>
<li data-start="340" data-end="367">
<p data-start="342" data-end="367"><strong data-start="342" data-end="351">零配置可用</strong>：开箱即用，同时支持高度自定义。</p>
</li>
<li data-start="368" data-end="405">
<p data-start="370" data-end="405"><strong data-start="370" data-end="378">极速编译</strong>：使用静态分析和即时生成技术，CSS 构建速度非常快。</p>
</li>
</ul>
<p data-start="407" data-end="453">官网介绍：<a href="https://unocss.dev" target="_blank" rel="noopener nofollow"> https://unocss.dev</a></p>
<h3 data-start="407" data-end="453">1、<strong data-start="76" data-end="86">UnoCSS</strong>&nbsp;核心概念</h3>
<p data-start="407" data-end="453"><strong data-start="819" data-end="840">原子类（Atomic Class）</strong><br data-start="840" data-end="843">
每个 class 对应一个 CSS 属性，例如：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="p-4 text-red-500 bg-gray-100"</span><span style="color: rgba(0, 0, 255, 1)">&gt;&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span></pre>
</div>
<p data-start="944" data-end="951">对应 CSS：</p>
<div class="cnblogs_code">
<pre>div { padding: 1rem; color: #f56565; background-color: #f7fafc; }</pre>
</div>
<p><strong>Preset（预设）</strong></p>
<p data-start="1060" data-end="1099">预定义的一套 class 规则，例如：</p>
<ul data-start="1103" data-end="1232">
<li data-start="1103" data-end="1135">
<p data-start="1105" data-end="1135"><code data-start="1105" data-end="1118">presetWind3</code> → 类似 Tailwind 风格</p>
</li>
<li data-start="1139" data-end="1203">
<p data-start="1141" data-end="1203"><code data-start="1141" data-end="1160">presetAttributify</code> → 属性化写法 <code data-start="1169" data-end="1203">&lt;div p="4" text="red-500"&gt;&lt;/div&gt;</code></p>
</li>
<li data-start="1207" data-end="1232">
<p data-start="1209" data-end="1232"><code data-start="1209" data-end="1222">presetIcons</code> → 图标类自动生成</p>
</li>
</ul>
<p><strong>Shortcuts（快捷类）</strong></p>
<p>将多个 class 合并为一个，例如：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">shortcuts: {
  btn: </span>'px-4 py-2 rounded bg-blue-500 text-white'<span style="color: rgba(0, 0, 0, 1)">
}</span></pre>
</div>
<p><strong>变体（Variants）</strong></p>
<p data-start="1415" data-end="1448">前缀用于状态或响应式：</p>
<ul data-start="1452" data-end="1551">
<li data-start="1452" data-end="1483">
<p data-start="1454" data-end="1483"><code data-start="1454" data-end="1473">hover:bg-blue-500</code> → 悬停时背景蓝色</p>
</li>
<li data-start="1487" data-end="1516">
<p data-start="1489" data-end="1516"><code data-start="1489" data-end="1498">md:flex</code> → 中屏及以上显示 flex 布局</p>
</li>
<li data-start="1520" data-end="1551">
<p data-start="1522" data-end="1551"><code data-start="1522" data-end="1539">dark:text-white</code> → 暗黑模式下字体白色</p>
</li>
</ul>
<p>UnoCSS = 原子化 + 按需生成 + 极速编译 + 高度可定制的 CSS 工具库</p>
<h3>2、如何掌握<strong data-start="6" data-end="16">UnoCSS</strong></h3>
<p>要熟练使用 <strong data-start="6" data-end="16">UnoCSS</strong>，你需要掌握它背后的 <strong data-start="27" data-end="45">原子化 CSS 规则和标识符</strong>。其实，UnoCSS 并没有发明新的 CSS 属性，它是把 <strong data-start="75" data-end="97">CSS 属性 + 值 + 状态/变体</strong> 封装成原子类（class），所以掌握 UnoCSS 的标识，核心就是理解 <strong data-start="135" data-end="153">CSS 属性、常用缩写和变体</strong>。我给你总结一个体系：</p>
<p><strong>核心 CSS 属性标识（必会）</strong></p>
<p>这些几乎是每个 UnoCSS 项目都会用到的：</p>
<table style="height: 709px; width: 1037px">
<thead>
<tr><th>类名示例</th><th>对应 CSS</th><th>说明</th></tr>
</thead>
<tbody>
<tr>
<td><code>p-4</code></td>
<td><code>padding: 1rem</code></td>
<td>内边距</td>
</tr>
<tr>
<td><code>pt-2</code></td>
<td><code>padding-top: 0.5rem</code></td>
<td>上内边距</td>
</tr>
<tr>
<td><code>m-3</code></td>
<td><code>margin: 0.75rem</code></td>
<td>外边距</td>
</tr>
<tr>
<td><code>mt-1</code></td>
<td><code>margin-top: 0.25rem</code></td>
<td>上外边距</td>
</tr>
<tr>
<td><code>w-24</code></td>
<td><code>width: 6rem</code></td>
<td>宽度</td>
</tr>
<tr>
<td><code>h-32</code></td>
<td><code>height: 8rem</code></td>
<td>高度</td>
</tr>
<tr>
<td><code>max-w-md</code></td>
<td><code>max-width: 28rem</code></td>
<td>最大宽度</td>
</tr>
<tr>
<td><code>min-h-screen</code></td>
<td><code>min-height: 100vh</code></td>
<td>最小高度</td>
</tr>
<tr>
<td><code>text-sm</code></td>
<td><code>font-size: 0.875rem</code></td>
<td>字体大小</td>
</tr>
<tr>
<td><code>font-bold</code></td>
<td><code>font-weight: 700</code></td>
<td>字重</td>
</tr>
<tr>
<td><code>text-center</code></td>
<td><code>text-align: center</code></td>
<td>文本对齐</td>
</tr>
<tr>
<td><code>leading-6</code></td>
<td><code>line-height: 1.5rem</code></td>
<td>行高</td>
</tr>
<tr>
<td><code>tracking-wide</code></td>
<td><code>letter-spacing: 0.05em</code></td>
<td>字间距</td>
</tr>
<tr>
<td><code>text-red-500</code></td>
<td><code>color: #f56565</code></td>
<td>字体颜色</td>
</tr>
<tr>
<td><code>bg-gray-100</code></td>
<td><code>background-color: #f7fafc</code></td>
<td>背景色</td>
</tr>
<tr>
<td><code>border</code></td>
<td><code>border-width: 1px</code></td>
<td>边框</td>
</tr>
<tr>
<td><code>border-gray-300</code></td>
<td><code>border-color: #d2d6dc</code></td>
<td>边框颜色</td>
</tr>
<tr>
<td><code>rounded</code></td>
<td><code>border-radius: 0.25rem</code></td>
<td>圆角</td>
</tr>
<tr>
<td><code>rounded-lg</code></td>
<td><code>border-radius: 0.5rem</code></td>
<td>大圆角</td>
</tr>
<tr>
<td><code>shadow-md</code></td>
<td><code>box-shadow: 0 4px 6px -1px rgba(...)</code></td>
<td>阴影</td>
</tr>
</tbody>
</table>
<p>核心思路：<strong data-start="1178" data-end="1205">属性缩写 + 数值/颜色/尺寸 + 状态/变体</strong></p>
<p><strong data-start="1178" data-end="1205">常用状态 / 伪类变体</strong></p>
<p>UnoCSS 可以直接在 class 前加状态：</p>
<div class="_tableContainer_1rjym_1">
<div class="_tableWrapper_1rjym_13 group flex w-fit flex-col-reverse">
<table class="w-fit min-w-(--thread-content-width)" style="height: 170px; width: 903px" data-start="1257" data-end="1497">
<thead data-start="1257" data-end="1273">
<tr data-start="1257" data-end="1273"><th data-start="1257" data-end="1262" data-col-size="sm">前缀</th><th data-start="1262" data-end="1267" data-col-size="sm">说明</th><th data-start="1267" data-end="1273" data-col-size="sm">示例</th></tr>
</thead>
<tbody data-start="1297" data-end="1497">
<tr data-start="1297" data-end="1338">
<td data-start="1297" data-end="1308" data-col-size="sm"><code data-start="1299" data-end="1307">hover:</code></td>
<td data-col-size="sm" data-start="1308" data-end="1315">鼠标悬停</td>
<td data-col-size="sm" data-start="1315" data-end="1338"><code data-start="1317" data-end="1336">hover:bg-blue-500</code></td>
</tr>
<tr data-start="1339" data-end="1373">
<td data-start="1339" data-end="1350" data-col-size="sm"><code data-start="1341" data-end="1349">focus:</code></td>
<td data-col-size="sm" data-start="1350" data-end="1355">获焦</td>
<td data-col-size="sm" data-start="1355" data-end="1373"><code data-start="1357" data-end="1371">focus:ring-2</code></td>
</tr>
<tr data-start="1374" data-end="1412">
<td data-start="1374" data-end="1386" data-col-size="sm"><code data-start="1376" data-end="1385">active:</code></td>
<td data-col-size="sm" data-start="1386" data-end="1391">激活</td>
<td data-col-size="sm" data-start="1391" data-end="1412"><code data-start="1393" data-end="1410">active:scale-95</code></td>
</tr>
<tr data-start="1413" data-end="1451">
<td data-start="1413" data-end="1423" data-col-size="sm"><code data-start="1415" data-end="1422">dark:</code></td>
<td data-col-size="sm" data-start="1423" data-end="1430">夜间模式</td>
<td data-col-size="sm" data-start="1430" data-end="1451"><code data-start="1432" data-end="1449">dark:text-white</code></td>
</tr>
<tr data-start="1452" data-end="1497">
<td data-start="1452" data-end="1476" data-col-size="sm"><code data-start="1454" data-end="1459">sm:</code> / <code data-start="1462" data-end="1467">md:</code> / <code data-start="1470" data-end="1475">lg:</code></td>
<td data-col-size="sm" data-start="1476" data-end="1484">响应式断点</td>
<td data-col-size="sm" data-start="1484" data-end="1497"><code data-start="1486" data-end="1495">md:flex</code></td>
</tr>
</tbody>
</table>
</div>
</div>
<blockquote data-start="1499" data-end="1546">
<p data-start="1501" data-end="1546">可以组合：<code data-start="1506" data-end="1527">hover:md:bg-red-500</code> → 在中屏及以上，鼠标悬停时背景红色</p>
</blockquote>
<p><strong data-start="1178" data-end="1205">属性缩写规则（UnoCSS vs Tailwind 很类似）</strong></p>
<ul>
<li data-start="1591" data-end="1630">
<p data-start="1593" data-end="1630"><strong data-start="1593" data-end="1599">尺寸</strong>：<code data-start="1600" data-end="1606">w-24</code>, <code data-start="1608" data-end="1614">h-32</code>, <code data-start="1616" data-end="1628">min-w-full</code></p>
</li>
<li data-start="1631" data-end="1671">
<p data-start="1633" data-end="1671"><strong data-start="1633" data-end="1639">间距</strong>：<code data-start="1640" data-end="1645">p-4</code>, <code data-start="1647" data-end="1653">px-2</code>, <code data-start="1655" data-end="1661">mt-1</code>, <code data-start="1663" data-end="1669">my-6</code></p>
</li>
<li data-start="1672" data-end="1718">
<p data-start="1674" data-end="1718"><strong data-start="1674" data-end="1680">字体</strong>：<code data-start="1681" data-end="1690">text-sm</code>, <code data-start="1692" data-end="1703">font-bold</code>, <code data-start="1705" data-end="1716">leading-6</code></p>
</li>
<li data-start="1719" data-end="1778">
<p data-start="1721" data-end="1778"><strong data-start="1721" data-end="1727">颜色</strong>：<code data-start="1728" data-end="1742">text-red-500</code>, <code data-start="1744" data-end="1757">bg-blue-200</code>, <code data-start="1759" data-end="1776">border-gray-300</code></p>
</li>
<li data-start="1779" data-end="1851">
<p data-start="1781" data-end="1851"><strong data-start="1781" data-end="1787">边框</strong>：<code data-start="1788" data-end="1796">border</code>, <code data-start="1798" data-end="1808">border-t</code>, <code data-start="1810" data-end="1822">border-l-2</code>, <code data-start="1824" data-end="1833">rounded</code>, <code data-start="1835" data-end="1849">rounded-full</code></p>
</li>
<li data-start="1852" data-end="1905">
<p data-start="1854" data-end="1905"><strong data-start="1854" data-end="1863">阴影/动画</strong>：<code data-start="1864" data-end="1872">shadow</code>, <code data-start="1874" data-end="1885">shadow-lg</code>, <code data-start="1887" data-end="1903">animate-bounce</code></p>
</li>
<li data-start="1906" data-end="1973">
<p data-start="1908" data-end="1973"><strong data-start="1908" data-end="1914">布局</strong>：<code data-start="1915" data-end="1921">flex</code>, <code data-start="1923" data-end="1929">grid</code>, <code data-start="1931" data-end="1947">justify-center</code>, <code data-start="1949" data-end="1962">items-start</code>, <code data-start="1964" data-end="1971">gap-4</code></p>
</li>
<li data-start="1974" data-end="2026">
<p data-start="1976" data-end="2026"><strong data-start="1976" data-end="1982">定位</strong>：<code data-start="1983" data-end="1993">absolute</code>, <code data-start="1995" data-end="2005">relative</code>, <code data-start="2007" data-end="2014">top-4</code>, <code data-start="2016" data-end="2024">left-0</code></p>
</li>
</ul>
<p data-start="2033" data-end="2048"><strong>高级标识（可选）</strong></p>
<ul>
<li data-start="2049" data-end="2090">
<p data-start="2051" data-end="2090"><strong data-start="2051" data-end="2057">图标</strong>：<code data-start="2058" data-end="2070">i-mdi-home</code>（需要 <code data-start="2074" data-end="2087">presetIcons</code>）</p>
</li>
<li data-start="2091" data-end="2150">
<p data-start="2093" data-end="2150"><strong data-start="2093" data-end="2101">属性风格</strong>：<code data-start="2102" data-end="2124">p="4" text="red-500"</code>（需要 <code data-start="2128" data-end="2147">presetAttributify</code>）</p>
</li>
<li data-start="2151" data-end="2301">
<p data-start="2153" data-end="2177"><strong data-start="2153" data-end="2174">自定义规则 / shortcuts</strong>：</p>
</li>
</ul>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">shortcuts: {
  btn: 'px-4 py-2 rounded bg-blue-500 text-white'
}</span></pre>
</div>
<div class="cnblogs_code">
<pre>使用：<span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">button </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="btn"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>点击<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">button</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span></pre>
</div>
<h3>3、在Vite+Vue3+TS+Vant4的H5移动前端使用UnoCSS</h3>
<p>在Vite的移动前端项目中使用UnoCSS，和其他的操作一样，先安装在项目依赖库中</p>
<div class="cnblogs_code">
<pre>pnpm <span style="color: rgba(0, 0, 255, 1)">install</span> -D unocss</pre>
</div>
<p>一般我们还会同时使用它的预设图标处理，因此增加多两个类库。</p>
<div class="cnblogs_code">
<pre>pnpm <span style="color: rgba(0, 0, 255, 1)">install</span> -D @unocss/preset-icons @iconify-json</pre>
</div>
<p>在&nbsp;<code>uno.config.ts</code>&nbsp;中配置 presetIcons 插件。图标预设: <a href="https://unocss.dev/presets/icons" target="_blank" rel="noopener nofollow">https://unocss.dev/presets/icons</a></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">presetIcons({
  extraProperties: {</span>'display': 'inline-block'<span style="color: rgba(0, 0, 0, 1)">,
    </span>'vertical-align': 'middle'<span style="color: rgba(0, 0, 0, 1)">,
    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> ...</span>
<span style="color: rgba(0, 0, 0, 1)">  },
})<br></span></pre>
</div>
<p><code>iconify</code>&nbsp;生态的图标都可以使用，具体可以在这里查找&nbsp;<a href="https://icones.js.org/" rel="noopener nofollow">Iconify</a>（<a href="https://icones.js.org/" target="_blank" rel="noopener nofollow">https://icones.js.org/</a>）&nbsp;- 本项目推荐图标库。它是统一的图标框架，超过&nbsp;<code>150</code>&nbsp;多个图标集，和&nbsp;<code>200,000</code>&nbsp;个开源矢量图标，并且会定期更新图标。您可以在&nbsp;<a href="https://icon-sets.iconify.design/" rel="noopener nofollow" target="_blank">iconify</a>&nbsp;或者&nbsp;<a href="https://icones.js.org/" rel="noopener nofollow" target="_blank">icones</a>&nbsp;中看到所有的图标集。</p>
<p>在VSCode下使用预设的图标集合，如下所示。</p>
<p><img src="https://img2024.cnblogs.com/blog/8867/202508/8867-20250821155551680-237741305.png" alt="image" width="645" height="179" loading="lazy"></p>
<p>在<code data-start="324" data-end="340">vite.config.ts</code> 配置：</p>
<div class="cnblogs_code">
<pre>import Unocss from 'unocss/vite'<span style="color: rgba(0, 0, 0, 1)">
import { defineConfig } from </span>'vite'<span style="color: rgba(0, 0, 0, 1)">

export </span><span style="color: rgba(0, 0, 255, 1)">default</span><span style="color: rgba(0, 0, 0, 1)"> defineConfig({
  plugins: [
    <span style="color: rgba(255, 0, 0, 1)"><strong>Unocss()</strong></span>
  ]
})</span></pre>
</div>
<p>在&nbsp;<code>main.ts</code>&nbsp;中导入使用。</p>
<div class="cnblogs_code">
<pre>import 'virtual:uno.css'<span style="color: rgba(0, 0, 0, 1)">
import </span>'@unocss/reset/tailwind-compat.css'</pre>
</div>
<p>在界面代码中class里面使用即可</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="p-4 text-red-500 bg-gray-100 rounded-lg"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span><span style="color: rgba(0, 0, 0, 1)">
  Hello UnoCSS
</span><span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span></pre>
</div>
<p>在你的 <code data-start="820" data-end="835">uno.config.ts</code> 或 <code data-start="838" data-end="853">uno.config.js</code> 中进行配置UnoCSS 即可。</p>
<div class="cnblogs_code">
<pre>import { defineConfig, presetUno } from 'unocss'<span style="color: rgba(0, 0, 0, 1)">
import { presetWind3 } from </span>'unocss/preset-wind3'<span style="color: rgba(0, 0, 0, 1)">

export </span><span style="color: rgba(0, 0, 255, 1)">default</span><span style="color: rgba(0, 0, 0, 1)"> defineConfig({
  presets: [
    presetWind3 (),
    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> ...其他 preset</span>
<span style="color: rgba(0, 0, 0, 1)">  ],
})</span></pre>
</div>
<p>一般来说会比这个更多一些内容。</p>
<p><img src="https://img2024.cnblogs.com/blog/8867/202508/8867-20250821153959455-1007817290.png" alt="image" width="706" height="763" loading="lazy"></p>
<p>而一般VSCode 安装插件UnoCSS后，</p>
<div>[UnoCSS](https://marketplace.visualstudio.com/items?itemName=antfu.unocss) - UnoCSS 提示插件</div>
<p>VSCode里面都有智能提示的，方便使用的同时也有助于了解UnoCSS的具体语法细节，如下我的项目所示。</p>
<p><img src="https://img2024.cnblogs.com/blog/8867/202508/8867-20250821153407515-1542035067.png" alt="image" width="768" height="502" loading="lazy"></p>
<p>生成的H5端界面效果如下所示</p>
<p><img src="https://img2024.cnblogs.com/blog/8867/202508/8867-20250821154345653-301143735.png" alt="image" width="257" height="556" loading="lazy">&nbsp;</p>
<p>消息详细界面中，也是统一使用了这样的样式处理方式。</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">template</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
  <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="scroll-container"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">page-header </span><span style="color: rgba(255, 0, 0, 1)">@click</span><span style="color: rgba(0, 0, 255, 1)">="goback"</span> <span style="color: rgba(0, 0, 255, 1)">/&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="m-2 border border-gray-300 rounded-[12px]"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="m-2 mb-2 font-bold"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span><span style="color: rgba(0, 0, 0, 1)">
        {{ article.title }}
      </span><span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="m-2 flex flex-row text-xs text-gray"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="flex-grow-1"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span><span style="color: rgba(0, 0, 0, 1)">
          时间:{{ format(article.edittime) }}
        </span><span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="mr-2"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span><span style="color: rgba(0, 0, 0, 1)">
          类别:{{ article.category }}
        </span><span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="m-2 mb-4 mt-2"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">span </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="line-height-loose"</span><span style="color: rgba(255, 0, 0, 1)"> v-html</span><span style="color: rgba(0, 0, 255, 1)">="article.content"</span> <span style="color: rgba(0, 0, 255, 1)">/&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>

      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">van-space </span><span style="color: rgba(255, 0, 0, 1)">direction</span><span style="color: rgba(0, 0, 255, 1)">="vertical"</span><span style="color: rgba(255, 0, 0, 1)"> fill class</span><span style="color: rgba(0, 0, 255, 1)">="m-4 mb-10 mt-4"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">van-button </span><span style="color: rgba(255, 0, 0, 1)">round type</span><span style="color: rgba(0, 0, 255, 1)">="default"</span><span style="color: rgba(255, 0, 0, 1)"> block @click</span><span style="color: rgba(0, 0, 255, 1)">="goback"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span><span style="color: rgba(0, 0, 0, 1)">
          返回
        </span><span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">van-button</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">van-space</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
  <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">template</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span></pre>
</div>
<p>&nbsp;下面是一些使用UnoCSS来构建界面显示的效果图，供参考。</p>
<p>&nbsp;<img src="https://img2024.cnblogs.com/blog/8867/202507/8867-20250727184506462-553876639.png" alt="image" width="232" height="495" class="medium-zoom-image" loading="lazy">&nbsp; &nbsp;<img src="https://img2024.cnblogs.com/blog/8867/202508/8867-20250815131546383-1382788588.png" alt="image" width="227" height="491" class="medium-zoom-image" loading="lazy">&nbsp;&nbsp; &nbsp;&nbsp;<img src="https://img2024.cnblogs.com/blog/8867/202508/8867-20250815131418439-855023247.png" alt="image" width="228" height="492" class="medium-zoom-image" loading="lazy"></p>
<p>&nbsp;</p>
</div>
<div id="MySignature" role="contentinfo">
    <div style="border-right-color: #cccccc; border-right-width: 1px; border-right-style: solid; padding-right: 5px; border-top-color: #cccccc; border-top-width: 1px; border-top-style: solid; padding-left: 4px; font-size: 13px; padding-bottom: 4px; border-left-color: #cccccc; border-left-width: 1px; border-left-style: solid; width: 98%; padding-top: 4px; border-bottom-color: #cccccc; border-bottom-width: 1px; border-bottom-style: solid; background-color: #eeeeee;">
    <img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" align="top" alt="">
    <span style="color: #000000"><span class="Apple-tab-span" style="white-space: pre"></span>
     专注于代码生成工具、.Net/Python 框架架构及软件开发，以及各种Vue.js的前端技术应用。著有Winform开发框架/混合式开发框架、微信开发框架、Bootstrap开发框架、ABP开发框架、SqlSugar开发框架、Python开发框架等框架产品。
     <br>&nbsp;&nbsp;转载请注明出处：撰写人：伍华聪&nbsp;&nbsp;<a href="http://www.iqidi.com/" target="_blank">http://www.iqidi.com</a>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</span></div>
</div>
<div class="clear"></div>

        </div>
        <p class="postfoot">
            posted on 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-08-21 17:50">2025-08-21 17:49</span>&nbsp;
<a href="https://www.cnblogs.com/wuhuacong">伍华聪</a>&nbsp;
阅读(<span id="post_view_count">20</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19050995);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19050995', targetLink: 'https://www.cnblogs.com/wuhuacong/p/19050995', title: '在Vant4+Vue3+TypeScript的H5移动前端使用UnoCSS' })">举报</a>

        </p>
    