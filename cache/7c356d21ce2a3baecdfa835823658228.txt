
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/mingupupu/p/19004717" title="发布于 2025-07-25 15:11">
    <span role="heading" aria-level="2">Qwen Code与Claude Coder Router体验</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="qwen-code介绍">Qwen Code介绍</h2>
<p>Qwen Code 是一个命令行 AI 工作流工具，源自 Gemini CLI，针对 Qwen3-Coder 模型进行了优化，增强了解析器支持和工具支持。</p>
<p><img alt="image-20250725122306052" loading="lazy" data-src="https://mingupupup.oss-cn-wuhan-lr.aliyuncs.com/imgs/image-20250725122306052.png" class="lazyload"></p>
<p>GitHub地址：<a href="https://github.com/QwenLM/qwen-code" target="_blank" rel="noopener nofollow">https://github.com/QwenLM/qwen-code</a></p>
<p>主要特性：</p>
<p>代码理解和编辑 - 超越传统上下文窗口限制的代码库查询和编辑</p>
<p>工作流自动化 - 自动化处理拉取请求和复杂重新合并等操作任务</p>
<p>增强解析器 - 专门为Qwen-Coder模型优化的解析器</p>
<p>Qwen Code安装：</p>
<pre><code class="language-cmd">npm install -g @qwen-code/qwen-code
</code></pre>
<p>然后在你打开的项目根目录创建一个.env文件，里面这样写：</p>
<pre><code class="language-cmd">OPENAI_API_KEY="sk-xxx"
OPENAI_BASE_URL="https://dashscope.aliyuncs.com/compatible-mode/v1"
OPENAI_MODEL="qwen3-coder-480b-a35b-instruct"
</code></pre>
<p>控制台输入Qwen即可打开Qwen Code：</p>
<p><img alt="image-20250725120647353" loading="lazy" data-src="https://mingupupup.oss-cn-wuhan-lr.aliyuncs.com/imgs/image-20250725120647353.png" class="lazyload"></p>
<p>速度很快，修改文件会询问你是否同意：</p>
<p><img alt="image-20250725121005463" loading="lazy" data-src="https://mingupupup.oss-cn-wuhan-lr.aliyuncs.com/imgs/image-20250725121005463.png" class="lazyload"></p>
<p>确实成功修改了。</p>
<p>就是token花费有点快，只有一百万免费额度，这个需要注意一下。</p>
<p>整体体验下来发现Qwen Code搭配Qwen Coder还是很流畅的。</p>
<h2 id="claude-code-router项目介绍">Claude-Code-Router项目介绍</h2>
<p>使用 Claude Code 作为编码基础设施的基础，让你可以决定如何与模型互动，同时享受 Anthropic 的更新。</p>
<p><img alt="image-20250725122914438" loading="lazy" data-src="https://mingupupup.oss-cn-wuhan-lr.aliyuncs.com/imgs/image-20250725122914438.png" class="lazyload"></p>
<p>GitHub地址：<a href="https://github.com/musistudio/claude-code-router" target="_blank" rel="noopener nofollow">https://github.com/musistudio/claude-code-router</a></p>
<p>特点</p>
<p>模型路由：根据需要将请求路由到不同的模型（例如，后台任务、思考、长上下文）。</p>
<p>多供应商支持：支持各种模型供应商，如 OpenRouter、DeepSeek、Ollama、Gemini、Volcengine 和 SiliconFlow。</p>
<p>请求/响应转换：使用转换器自定义不同供应商的请求和响应。</p>
<p>动态模型切换：在 Claude Code 中使用 /model 命令实时切换模型。</p>
<p>GitHub Actions 集成：在 GitHub 工作流中触发 Claude Code 任务。</p>
<p>插件系统：使用自定义转换器扩展功能。</p>
<p>使用它需要先安装Claude Code：</p>
<pre><code class="language-cmd">npm install -g @anthropic-ai/claude-code
</code></pre>
<p>再安装Claude Code Router：</p>
<pre><code class="language-cmd">npm install -g @musistudio/claude-code-router
</code></pre>
<p>进行配置，打开C盘下的这个配置文件：</p>
<p><img alt="image-20250725123247576" loading="lazy" data-src="https://mingupupup.oss-cn-wuhan-lr.aliyuncs.com/imgs/image-20250725123247576.png" class="lazyload"></p>
<p>以使用硅基流动提供的Kimi K2为例，配置可以这样写：</p>
<pre><code class="language-cmd">{
  "LOG": false,
  "OPENAI_API_KEY": "",
  "OPENAI_BASE_URL": "",
  "OPENAI_MODEL": "",
  "Providers": [
    {
      "name": "siliconflow",
      "api_base_url": "https://api.siliconflow.cn/v1/chat/completions",
      "api_key": "sk-xxx",
      "models": [
        "moonshotai/Kimi-K2-Instruct"
      ]
    }
  ],
  "Router": {
    "default": "siliconflow,moonshotai/Kimi-K2-Instruct"
  }
}
</code></pre>
<p>注意如果修改了配置，需要先ccr stop一下。</p>
<p>输入ccr code即可运行：</p>
<p><img alt="image-20250725123622960" loading="lazy" data-src="https://mingupupup.oss-cn-wuhan-lr.aliyuncs.com/imgs/image-20250725123622960.png" class="lazyload"></p>
<p>丢给它一个任务：</p>
<p><img alt="image-20250725123812614" loading="lazy" data-src="https://mingupupup.oss-cn-wuhan-lr.aliyuncs.com/imgs/image-20250725123812614.png" class="lazyload"></p>
<p>也是修改文件会询问你：</p>
<p><img alt="image-20250725123933839" loading="lazy" data-src="https://mingupupup.oss-cn-wuhan-lr.aliyuncs.com/imgs/image-20250725123933839.png" class="lazyload"></p>
<p>体验下来感觉不太好的地方是经常断掉，比如下面这样：</p>
<p><img alt="image-20250725124055191" loading="lazy" data-src="https://mingupupup.oss-cn-wuhan-lr.aliyuncs.com/imgs/image-20250725124055191.png" class="lazyload"></p>
<p>输入继续才会继续操作：</p>
<p><img alt="image-20250725124332830" loading="lazy" data-src="https://mingupupup.oss-cn-wuhan-lr.aliyuncs.com/imgs/image-20250725124332830.png" class="lazyload"></p>
<p>有时候输入继续，也没法操作：</p>
<p><img alt="image-20250725124431494" loading="lazy" data-src="https://mingupupup.oss-cn-wuhan-lr.aliyuncs.com/imgs/image-20250725124431494.png" class="lazyload"></p>
<p>整个体验下来，觉得通过Claude Code Router在Claude Code中使用Kimi K2不如直接在Cline与Roo Code中使用。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-25 15:12">2025-07-25 15:11</span>&nbsp;
<a href="https://www.cnblogs.com/mingupupu">mingupupup</a>&nbsp;
阅读(<span id="post_view_count">258</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19004717);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19004717', targetLink: 'https://www.cnblogs.com/mingupupu/p/19004717', title: 'Qwen Code与Claude Coder Router体验' })">举报</a>
</div>
        