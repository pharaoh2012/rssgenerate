
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/topicjie/p/18840481" title="发布于 2025-04-22 13:39">
    <span role="heading" aria-level="2">定时任务稳定性解决方案-healthchecks监控系统</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="背景">背景</h2>
<p>目前crontab出现问题后无感知，发现问题不及时，几乎是靠业务部门或用户反馈的方式，研发部门再排查的方式，处理问题、发现问题相对滞后，由此可见需要进一步优化crontab的稳定性，降故障通知前置，在用户反馈之前接受故障处理故障.<br>
历史问题总结：</p>
<ul>
<li>人为误操作导致所有的crontab全部清空</li>
<li>定时任务服务器误操作后灾难恢复困难</li>
<li>未加锁机制检测启动多个进程导致数据错乱</li>
<li>定时任务被系统oom 导致任务失败</li>
<li>定时任务服务器重启后cron未开机自启导致任务未执行</li>
<li>定时任务失败后无监控、出问题无感知（发现问题&amp;处理问题滞后）</li>
<li>...................</li>
</ul>
<h2 id="一定时任务管理规范">一、定时任务管理规范</h2>
<p>问题描述：目前上线是通过运维在salt服务器分发的方式，发布方式不透明，还存在手动修改的方式，不规范，曾出现过误操作导致全清空事件，定时任务服务器误操作后灾难恢复困难的问题<br>
解决方案： 统一规范成jenkins发布的模式，同发布代码走相同的逻辑</p>
<h2 id="二定时任务发布选择机器问题">二、定时任务发布选择机器问题</h2>
<p>问题描述： 目前发布代码需要选择服务器，存在错误选择的情况，从而引发问题.<br>
解决方案：优化发布方式，发布无需选择服务器，自动判断发布服务器。</p>
<h2 id="三定时任务无法及时查看">三、定时任务无法及时查看</h2>
<p>问题描述：目前是通过定时同步任务列表到/tmp/work_cron的方式，存在延迟<br>
解决方案： 研发直接查看gitlab的仓库即可</p>
<h2 id="四定时任务执行oom中断">四、定时任务执行OOM中断</h2>
<p>问题描述： 较大的程序执行会耗费很大的内存，从而出现被系统oom的风险，然而系统oom后目前并不能发现<br>
解决方案：针对系统oom的问题，可以收集/var/log/message的方式进行报警处理，可第一时间发现问题.</p>
<h2 id="五定时任务进程数据安全保障锁机制">五、定时任务进程数据安全保障（锁机制）</h2>
<p>定时任务出现hang住进程，导致很多进程启动的问题 ；<br>
多个进程同时运行导致数据错乱问题.<br>
例如每次写的临时表名称一致，两个进程同时写则可能产生错误的数据结果.<br>
解决方案： 对于不可同时启动两个进程的任务，程序需要加锁判断状态保证数据的可靠性</p>
<h2 id="六大型定时任务升级队列实现">六、大型定时任务升级队列实现</h2>
<p>问题描述： 定时任务应当尽量的轻量化，最优方案是只做定时任务的触发，而后程序通过队列方式进行数据处理.<br>
例如定时任务程序单次运行需要几十分钟以上，或者处理的数据量达千万级别.<br>
解决方案：</p>
<h3 id="方案一">方案一</h3>
<ol>
<li>将重量级别的任务改造优化成队列的方式实现. 代码实现数据处理逻辑，数据放入队列依次处理的方式.</li>
<li>使用cronsun触发的方式进行定时任务的管理</li>
</ol>
<h3 id="方案二">方案二</h3>
<ul>
<li>迁移至大数据任务平台，利用大数据集群运算能力完成相关功能</li>
</ul>
<h2 id="七定时任务状态感知">七、定时任务状态感知</h2>
<p>问题描述：目前每个定时任务的执行状态（成功/失败/hang/warn）无法感知，只能通过日志来排查（如果有日志）</p>
<ol>
<li>如何知道任务是否开始执行？（目前靠人）【cron服务未开启】</li>
<li>如何知道任务执行成功/失败？（目前靠人）【脚本执行80%后失败】</li>
<li>任务执行失败如何第一时间发现？（目前基本靠业务&amp;用户侧反馈）<br>
解决方案：</li>
</ol>
<ul>
<li>增加判断crontab是否按照预期执行监控机制</li>
<li>增加状态汇报逻辑，使任务执行可视化&amp;数据化，并且增加报警机制.（核心任务）</li>
<li>增加定时任务日志，提供关键字进行报警（核心任务）</li>
</ul>
<h2 id="八healthchecks-监控系统">八、healthchecks 监控系统</h2>
<p>详情移步官网： <a href="https://healthchecks.io/" target="_blank" rel="noopener nofollow">https://healthchecks.io/</a> （开源软件）</p>
<p>Healthchecks 是一个用来 监控定时任务（cron job）是否按时运行 的系统。它通过一种非常简单有效的方式帮助你发现定时任务是否异常或失败。</p>
<h3 id="主要作用">主要作用</h3>
<ul>
<li>监控 cron、systemd timer、脚本等是否按时执行；</li>
<li>当任务没有按时“打卡”时，发送通知（邮件、Webhook、Slack、钉钉等）；</li>
<li>提供简单的 Web UI 记录任务运行历史和状态。</li>
</ul>
<h3 id="healthchecks-的工作原理如下">Healthchecks 的工作原理如下：</h3>
<ol>
<li>系统为每个任务分配一个唯一的“ping URL”（如 <a href="https://hc.example.com/your-uuid%EF%BC%89%EF%BC%9B" target="_blank" rel="noopener nofollow">https://hc.example.com/your-uuid）；</a></li>
<li>每次任务执行成功后，向这个 URL 发一个 HTTP 请求（称为“ping”）；</li>
<li>Healthchecks 会为每个任务设置一个超时时间（比如 1 小时）；</li>
<li>如果超时未收到“ping”，则认为该任务未执行或执行失败，触发告警</li>
</ol>
<h3 id="应用场景">应用场景</h3>
<ul>
<li>生产环境中的定时脚本/任务监控</li>
<li>如 MySQL 备份脚本、日志归档、数据同步等。</li>
<li>Kubernetes CronJob 监控</li>
<li>CronJob 成功后加一个 ping 请求，Healthchecks 提供独立的状态记录和报警。</li>
<li>没有集成监控系统的小团队</li>
<li>Healthchecks.io 提供简单、即开即用的 Web UI 和通知集成，非常适合中小项目快速接入。</li>
<li>与 Prometheus/Grafana 互补</li>
<li>可在任务层面提供更直观的“是否执行”状态，结合已有监控形成闭环。</li>
</ul>
<p>如果你有多个定时任务，还可以用标签、项目分组等方式管理。如果你有兴趣搭建私有版本，它也支持 Docker 一键部署。</p>

</div>
<div id="MySignature" role="contentinfo">
    原创作品，允许转载，转载时请务必以超链接形式标明文章 原始出处 、作者信息和本声明。否则将追究法律责任。

http://www.cnblogs.com/topicjie/
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.5296296734293982" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-22 13:39">2025-04-22 13:39</span>&nbsp;
<a href="https://www.cnblogs.com/topicjie">Topic</a>&nbsp;
阅读(<span id="post_view_count">304</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18840481);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18840481', targetLink: 'https://www.cnblogs.com/topicjie/p/18840481', title: '定时任务稳定性解决方案-healthchecks监控系统' })">举报</a>
</div>
        