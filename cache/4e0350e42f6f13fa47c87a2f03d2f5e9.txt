
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/18780354" title="发布于 2025-03-19 09:27">
    <span role="heading" aria-level="2">浅谈 C# 13 中的 params 集合</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h2 data-tool="mdnice编辑器"><span>前言</span></h2>
<p data-tool="mdnice编辑器"><span>在 C# 13 中，<code><span>params</span></code><span>&nbsp;的改进使其从<code><span>可变数量的数组参数</span></code><span>升级为<code><span>可变数量的集合类型参数</span></code><span>。这一改进通过支持高性能集合类型（如<code><span>Span&lt;T&gt;</span></code><span>,<code><span>ReadOnlySpan&lt;T&gt;</span></code><span>）和简化调用语法，显著提升了代码的灵活性和效率。</span></span></span></span></span></span></p>
<h2 data-tool="mdnice编辑器"><span>params的适用场景</span></h2>
<p data-tool="mdnice编辑器"><span>params适用于参数个数动态变化的场景，例如日志、数学计算或格式化输出等，减少冗余代码，增强方法通用性。</span></p>
<h2 data-tool="mdnice编辑器"><span>C# 13 的改进与旧版本对比</span></h2>
<h3 data-tool="mdnice编辑器"><span>在 C# 13 之前：</span></h3>
<p data-tool="mdnice编辑器"><span>params 仅支持一维数组（如<code><span>params int[] list</span></code><span>、<code><span>params object[] list</span></code><span>）。调用方法时需显式传递数组或数组元素类型的参数的逗号分隔列表。</span></span></span></p>
<h3 data-tool="mdnice编辑器"><span>在 C# 13 中：</span></h3>
<p data-tool="mdnice编辑器"><span>params 修饰符并不局限于数组类型。 现在可以将 params 用于任何已识别的集合类型，包括&nbsp;<code><span>System.Span&lt;T&gt;、System.ReadOnlySpan&lt;T&gt;</span></code><span>，以及那些实现&nbsp;<code><span>System.Collections.Generic.IEnumerable&lt;T&gt;</span></code><span>&nbsp;并具有 Add 方法的类型。 除了具体类型外，还可以使用接口&nbsp;<code><span>System.Collections.Generic.IEnumerable&lt;T&gt;、System.Collections.Generic.IReadOnlyCollection&lt;T&gt;、System.Collections.Generic.IReadOnlyList&lt;T&gt;、System.Collections.Generic.ICollection&lt;T&gt;和 System.Collections.Generic.IList&lt;T&gt;</span></code><span>。</span></span></span></span></p>
<h2 data-tool="mdnice编辑器"><span>注意事项</span></h2>
<p data-tool="mdnice编辑器"><span>在方法声明中的&nbsp;<code><span>params</span></code><span>&nbsp;关键字之后不允许有任何其他参数，并且在方法声明中只允许有一个 params 关键字。</span></span></p>
<h2 data-tool="mdnice编辑器"><span>性能基准测试</span></h2>
<p data-tool="mdnice编辑器"><span>下面我们使用一个数据求和场景，对C# 13 之前和C# 13 中的改进方式使用<code><span>BenchmarkDotNet</span></code><span>做一下性能基准测试对比：</span></span></p>
<pre data-tool="mdnice编辑器"><span data-cacheurl="" data-remoteid="" data-lazy-bgimg="https://mmbiz.qpic.cn/mmbiz_svg/9M0PhLTmTIfzNFlBn3E31bhdb160ysX89wkS1jK55TWj6b7UNIz3YVIGbcXib1SLibeP2OOp8gIJG357uibvBjsdSK6Hq3oia9e6/640?wx_fmt=svg&amp;from=appmsg" data-fail="0"><code><span>&nbsp; &nbsp; [MemoryDiagnoser]//记录内存分配情况<br><span>&nbsp; &nbsp; [MarkdownExporter, AsciiDocExporter, HtmlExporter, CsvExporter, RPlotExporter]<br><span>&nbsp; &nbsp; public class ParamsBenchmark<br><span>&nbsp; &nbsp; {<br><span>&nbsp; &nbsp; &nbsp; &nbsp; private List&lt;int&gt; dataList = new();<br><br><span>&nbsp; &nbsp; &nbsp; &nbsp; /// &lt;summary&gt;<br><span>&nbsp; &nbsp; &nbsp; &nbsp; /// 初始化测试数据<br><span>&nbsp; &nbsp; &nbsp; &nbsp; /// 如创建大型数据集、分配内存资源等，避免在每次基准测试迭代中重复初始化带来的性能干扰<br><span>&nbsp; &nbsp; &nbsp; &nbsp; /// &lt;/summary&gt;<br><span>&nbsp; &nbsp; &nbsp; &nbsp; [GlobalSetup]<br><span>&nbsp; &nbsp; &nbsp; &nbsp; public void&nbsp;Setup<span>()<br><span>&nbsp; &nbsp; &nbsp; &nbsp; {<br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dataList = new List&lt;int&gt; { 1, 2, 3, 4, 5, 6, 7, 9, 10, 22, 55, 66, 88, 44, 66, 33, 77, 54, 24, 8789, 24, 54, 244, 377, 26, 99, 888, 1000 };<br><span>&nbsp; &nbsp; &nbsp; &nbsp; }<br><br><span>&nbsp; &nbsp; &nbsp; &nbsp; [Benchmark]<br><span>&nbsp; &nbsp; &nbsp; &nbsp; public int&nbsp;CalculateOldSum<span>()<br><span>&nbsp; &nbsp; &nbsp; &nbsp; {<br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;return<span>&nbsp;OldSumArray(dataList.ToArray());<br><span>&nbsp; &nbsp; &nbsp; &nbsp; }<br><br><span>&nbsp; &nbsp; &nbsp; &nbsp; [Benchmark]<br><span>&nbsp; &nbsp; &nbsp; &nbsp; public int&nbsp;CalculateNewSumList<span>()<br><span>&nbsp; &nbsp; &nbsp; &nbsp; {<br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;return<span>&nbsp;NewSumList(dataList);<br><span>&nbsp; &nbsp; &nbsp; &nbsp; }<br><br><span>&nbsp; &nbsp; &nbsp; &nbsp; /// &lt;summary&gt;<br><span>&nbsp; &nbsp; &nbsp; &nbsp; /// C# 13 之前<br><span>&nbsp; &nbsp; &nbsp; &nbsp; /// &lt;/summary&gt;<br><span>&nbsp; &nbsp; &nbsp; &nbsp; /// &lt;param name="datas"<span>&gt;datas&lt;/param&gt;<br><span>&nbsp; &nbsp; &nbsp; &nbsp; /// &lt;returns&gt;&lt;/returns&gt;<br><span>&nbsp; &nbsp; &nbsp; &nbsp; public int OldSumArray(params int[] datas)<br><span>&nbsp; &nbsp; &nbsp; &nbsp; {<br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;return<span>&nbsp;datas.Sum();<br><span>&nbsp; &nbsp; &nbsp; &nbsp; }<br><br><span>&nbsp; &nbsp; &nbsp; &nbsp; /// &lt;summary&gt;<br><span>&nbsp; &nbsp; &nbsp; &nbsp; /// C# 13 中<br><span>&nbsp; &nbsp; &nbsp; &nbsp; /// &lt;/summary&gt;<br><span>&nbsp; &nbsp; &nbsp; &nbsp; /// &lt;param name="datas"<span>&gt;datas&lt;/param&gt;<br><span>&nbsp; &nbsp; &nbsp; &nbsp; /// &lt;returns&gt;&lt;/returns&gt;<br><span>&nbsp; &nbsp; &nbsp; &nbsp; public int NewSumList(params List&lt;int&gt; datas)<br><span>&nbsp; &nbsp; &nbsp; &nbsp; {<br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;return<span>&nbsp;datas.Sum();<br><span>&nbsp; &nbsp; &nbsp; &nbsp; }<br><span>&nbsp; &nbsp; }<br></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></span></pre>
<h2 data-tool="mdnice编辑器"><span>基准测试报告</span></h2>
<p><img src="https://img2024.cnblogs.com/blog/1336199/202503/1336199-20250319092640362-1934525397.png" alt="" loading="lazy"></p>
<ul class="list-paddingleft-1">
<li><strong>Mean</strong><span>: 所有测量值的算术平均值。</span></li>
<li><strong>Error</strong><span>: 99.9% 置信区间的一半。</span></li>
<li><strong>StdDev</strong><span>: 所有测量值的标准差。</span></li>
<li><strong>Gen0</strong><span>: 第 0 代 GC 每 1000 次操作收集一次。</span></li>
<li><strong>Allocated</strong><span>: 每次操作分配的内存（仅托管内存，包含所有内容，1KB = 1024B）。</span></li>
</ul>
<h2 data-tool="mdnice编辑器"><span>最后总结</span></h2>
<p data-tool="mdnice编辑器"><span>综上所述C# 13 中的 params 集合变得类型更灵活，满足更复杂的应用场景，并且性能得到了进一步的提升。</span></p>
<h2 data-tool="mdnice编辑器"><span>参考文章</span></h2>
<ul class="list-paddingleft-1">
<li><a href="https://learn.microsoft.com/zh-cn/dotnet/csharp/language-reference/proposals/csharp-13.0/params-collections" target="_blank" rel="noopener nofollow"><span>https://learn.microsoft.com/zh-cn/dotnet/csharp/language-reference/proposals/csharp-13.0/params-collections</span></a></li>
</ul>
<div id="gtx-trans" style="position: absolute; left: 35px; top: 2638.14px">&nbsp;</div>
</div>
<div id="MySignature" role="contentinfo">
    <blockquote>
<p style="font-family:YouYuan;font-size: 16px;margin: 0 auto 0.01em auto;"><span style="font-size: 17px; ">作者名称：</span><a href="https://www.cnblogs.com/Can-daydayup/" target="_blank">追逐时光者</a></p>
<p style="font-family:YouYuan;font-size: 16px;margin: 0 auto 0.01em auto;"><span style="font-size: 17px; ">作者简介：</span>一个热爱编程、善于分享、喜欢学习、探索、尝试新事物和新技术的全栈软件工程师。</p>
<p style="font-family:YouYuan;font-size: 16px;margin: 0 auto 0.01em auto;">
本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文链接，否则保留追究法律责任的权利。如果该篇文章对您有帮助的话，可以点一下右下角的<a onclick="votePost(cb_entryId,'Digg')" href="javascript:void(0)" style="color:red;">【♥推荐♥】</a>，希望能够持续的为大家带来好的技术文章，文中可能存在描述不正确的地方，欢迎指正或补充，不胜感激。
</p>
</blockquote>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.20544535381365742" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-19 09:27">2025-03-19 09:27</span>&nbsp;
<a href="https://www.cnblogs.com/Can-daydayup">追逐时光者</a>&nbsp;
阅读(<span id="post_view_count">49</span>)&nbsp;
评论(<span id="post_comment_count">1</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18780354" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18780354);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18780354', targetLink: 'https://www.cnblogs.com/Can-daydayup/p/18780354', title: '浅谈 C# 13 中的 params 集合' })">举报</a>
</div>
        