
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/HarmonyOSSDK/p/18863939" title="发布于 2025-05-07 11:40">
    <span role="heading" aria-level="2">深度解析用户意图，让设备真正听懂需求</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>语音交互以其自然的沟通方式和直观的操作体验，让用户能够通过简单的语音指令迅速完成日常任务，如设定闹钟、查询天气或搜索信息，大幅提升了效率。然而，当系统无法准确捕捉和理解用户的语音意图时，这些便捷的操作就会受阻，迫使用户转而手动执行，从而降低了整体的效率和体验。在人工智能技术日新月异的当下，用户期望手机系统语音不仅能够听清他们的指令，更能听懂他们的意图，直接触发应用或元服务的相关功能，将所需信息即时呈现。</p>
<p>面对这样的挑战，HarmonyOS SDK<a href="https://developer.huawei.com/consumer/cn/sdk/intents-kit?ha_source=hms1" title="意图框架服务" target="_blank" rel="noopener nofollow">意图框架服务</a>（Intents Kit）提供<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V13/intents-skill-all-rec-access-programme-V13?ha_source=hms1" title="技能调用方案" target="_blank" rel="noopener nofollow">技能调用方案</a>，是意图框架依托系统AI多模态大模型能力做深度用户输入理解，并通过解析的用户意图对接应用或元服务内的功能和内容。用户通过对小艺对话进行自然语言输入实现内容查询，知识问答，以及通过对图片选定识别问答进行服务获取。</p>
<p>技能调用场景分为两种：</p>
<pre><code>功能服务类：端侧意图调用直接进入应用或元服务对应意图功能服务页面。

信息交互类：云侧意图调用进行内容查询后展示，端侧用户点击进行意图调用闭环。
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/2396482/202505/2396482-20250507114031065-831068256.png" alt="image" loading="lazy"></p>
<h3 id="典型场景">典型场景</h3>
<h4 id="功能服务类">功能服务类</h4>
<ol>
<li>
<p>跳转页面不带参数场景。例如打开付款码：语音对话输入"打开xx付款码"，即可弹窗对应付款码。</p>
</li>
<li>
<p>跳转页面带参数场景。例如搜索商品带关键词：语音对话输入"打开xx应用搜一下xx品牌39码"，即可弹窗对应商品。</p>
</li>
<li>
<p>功能执行并展示UIExtension。例如操控蓝牙开关：语音对话输入"打开蓝牙"，即可弹窗蓝牙设置，并打开蓝牙开关。</p>
</li>
</ol>
<h4 id="信息交互类">信息交互类</h4>
<ol>
<li>
<p>内容展示场景。例如查找菜谱：语音对话输入"鱼香肉丝怎么做"，即可搜索到对应的菜谱。</p>
</li>
<li>
<p>内容展示+AIGC（Artificial Intelligence Generated Content）生成场景。例如查公司：语音对话输入"xxx公司怎么样"，即可生成并展示关于xxx公司的信息。</p>
</li>
<li>
<p>功能履约场景。例如订电影票：语音对话输入"买两张今天的电影票，xxx电影"，即可进行电影票购买选座。</p>
</li>
</ol>
<h3 id="接入方案">接入方案</h3>
<h4 id="方案概述">方案概述</h4>
<p>开发者需要按照意图定义，进行意图注册并实现意图调用；用户通过对小艺对话进行自然语言输入，小艺理解语义转换成意图调用（含意图参数），执行意图调用实现对应交互体验。</p>
<p><img src="https://img2024.cnblogs.com/blog/2396482/202505/2396482-20250507114042842-220013893.png" alt="image" loading="lazy"></p>
<h4 id="端侧意图注册">端侧意图注册</h4>
<p>以"搜索旅游攻略"特性为例，开发者首先要注册"查看旅游攻略"（ViewTravelGuides），其他意图见各垂域意图Schema。开发者需要编辑对应的意图配置PROJECT_HOME/entry/src/main/resources/base/profile/insight_intent.json文件，实现意图注册。</p>
<pre><code>{
  "insightIntents": [
    {
      "intentName": "ViewTravelGuides",
      "domain": "TravelDomain",
      "intentVersion": "1.0.1",
      "srcEntry": "./ets/entryability/InsightIntentExecutorImpl.ets",
      "uiAbility": {
        "ability": "EntryAbility",
        "executeMode": [
          "background",
          "foreground"
        ]
      },
      "uiExtension": {
        "ability": "insightIntentUIExtensionAbility"
      }
    }
  ]
}
</code></pre>
<h4 id="端侧前台意图调用">端侧前台意图调用</h4>
<p>开发者需自己实现InsightIntentExecutor，并在对应回调实现打开落地页（点击推荐卡片跳转的界面，如旅游攻略落页面）的能力，ViewTravelGuides的意图调用字段定义见查看旅游攻略 （ViewTravelGuides）。</p>
<p>步骤如下：</p>
<ol>
<li>
<p>继承InsightIntentExecutor。</p>
</li>
<li>
<p>重写对应方法，例如目标拉起前台页面，则可重写onExecuteInUIAbilityForegroundMode方法。</p>
</li>
<li>
<p>通过意图名称，识别查看旅游攻略意图(ViewTravelGuides)，在对应的方法中传递意图参数（param），并拉起对应落地页（点击推荐卡片跳转的界面，如旅游攻略落页面）。</p>
</li>
</ol>
<pre><code>import { insightIntent, InsightIntentExecutor } from '@kit.AbilityKit';
import { window } from '@kit.ArkUI';
import { BusinessError } from '@kit.BasicServicesKit';

/**
 * 意图调用样例 */
export default class InsightIntentExecutorImpl extends InsightIntentExecutor {
  private static readonly VIEW_TRAVEL_GUIDES = 'ViewTravelGuides';
  /**
   * override 执行前台UIAbility意图
   *
   * @param name 意图名称
   * @param param 意图参数
   * @param pageLoader 窗口
   * @returns 意图调用结果
   */
  onExecuteInUIAbilityForegroundMode(name: string, param: Record&lt;string, Object&gt;, pageLoader: window.WindowStage):
    Promise&lt;insightIntent.ExecuteResult&gt; {
    // 根据意图名称分发处理逻辑
    switch (name) {
      case InsightIntentExecutorImpl.VIEW_TRAVEL_GUIDES:
        return this.viewTravelGuides(param, pageLoader);
      default:
        break;
    }
    return Promise.resolve({
      code: -1,
      result: {
        message: 'unknown intent'
      }
    } as insightIntent.ExecuteResult)
  }
  /**
   * 实现调用查看旅游攻略功能
   *
   * @param param 意图参数
   * @param pageLoader 窗口
   */
  private viewTravelGuides(param: Record&lt;string, Object&gt;, pageLoader: window.WindowStage): Promise&lt;insightIntent.ExecuteResult&gt; {
    return new Promise((resolve, reject) =&gt; {
      // TODO 实现意图调用，loadContent的入参为旅游攻略落地页路径，例如：pages/TravelGuidePage
      pageLoader.loadContent('pages/TravelGuidePage')
        .then(() =&gt; {
          let entityId: string = (param.items as Array&lt;object&gt;)?.[0]?.['entityId'];
          // TODO 调用成功的情况，此处可以打印日志
          resolve({
            code: 0,
            result: {
              message: 'Intent execute succeed'
            }
          });
        })
        .catch((err: BusinessError) =&gt; {
          // TODO 调用失败的情况
          resolve({
            code: -1,
            result: {
              message: 'Intent execute failed'
            }
          })
        });
    })
  }
}

</code></pre>
<h4 id="端侧前台窗口意图调用">端侧前台窗口意图调用</h4>
<p>开发者需自己实现InsightIntentExecutor，并在对应回调实现窗口页面内容加载的能力。</p>
<p>步骤如下：</p>
<ol>
<li>
<p>继承InsightIntentExecutor。</p>
</li>
<li>
<p>重写对应方法，例如目标拉起前台窗口化页面，则可重写onExecuteInUIExtensionAbility方法。</p>
</li>
<li>
<p>通过意图名称，识别打开蓝牙意图（LoadBluetoothCard）调用扩展意图，在对应的方法中传递意图参数（param），并拉起对应窗口化页面（如打开蓝牙窗口化页面）。</p>
</li>
</ol>
<pre><code>import { insightIntent, InsightIntentExecutor, UIExtensionContentSession } from '@kit.AbilityKit';

/**
 * 意图调用样例 */
export default class IntentExecutorImpl extends InsightIntentExecutor {
  private static readonly TAG: string = 'IntentExecutorImpl';
  private static readonly LOAD_BLUETOOTH_CARD: string = 'LoadBluetoothCard';
  /**
   * override 执行前台UI扩展意图
   *
   * @param name 意图名称
   * @param param 意图参数
   * @param pageLoader 窗口
   * @returns 意图调用结果
   */
  async onExecuteInUIExtensionAbility(name: string, param: Record&lt;string, Object&gt;,
    pageLoader: UIExtensionContentSession):
    Promise&lt;insightIntent.ExecuteResult&gt; {
    console.info(IntentExecutorImpl.TAG, `onExecuteInUIExtensionAbility`);
    switch (name) {
      case IntentExecutorImpl.LOAD_BLUETOOTH_CARD:
        console.info(IntentExecutorImpl.TAG, `onExecuteInUIAbilityForegroundMode::ForegroundUiAbility intent`);
        return this.openLoadBluetoothCard(pageLoader);
      default:
        console.info(IntentExecutorImpl.TAG, `onExecuteInUIAbilityForegroundMode::invalid intent`);
        break;
    }

    let result: insightIntent.ExecuteResult = {
      code: -1,
      result: {
        message: 'onExecuteInUIExtensionAbility failed'
      }
    };
    return result;
  }

  /**
   * 打开加载蓝牙卡片意图
   *
   * @param pageLoader 意图内容Session对象
   * @returns 执行结果
   */
  private async openLoadBluetoothCard(pageLoader: UIExtensionContentSession): Promise&lt;insightIntent.ExecuteResult&gt; {
    pageLoader.loadContent('pages/UiExtensionPage');
    let result: insightIntent.ExecuteResult = {
      code: 0,
      result: {
        message: 'intent execute succeed'
      }
    }
    return result;
  }
}

</code></pre>
<p><strong>了解更多详情&gt;&gt;</strong></p>
<p>访问<a href="https://developer.huawei.com/consumer/cn/sdk/intents-kit?ha_source=hms1" title="意图框架服务联盟官网" target="_blank" rel="noopener nofollow">意图框架服务联盟官网</a></p>
<p>获取<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V13/intents-skill-all-rec-access-programme-V13?ha_source=hms1" title="技能调用方案开发指导文档" target="_blank" rel="noopener nofollow">技能调用方案开发指导文档</a></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.026817962116898148" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-07 11:41">2025-05-07 11:40</span>&nbsp;
<a href="https://www.cnblogs.com/HarmonyOSSDK">HarmonyOS_SDK</a>&nbsp;
阅读(<span id="post_view_count">25</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18863939);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18863939', targetLink: 'https://www.cnblogs.com/HarmonyOSSDK/p/18863939', title: '深度解析用户意图，让设备真正听懂需求' })">举报</a>
</div>
        