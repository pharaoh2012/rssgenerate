
	<h1 class="postTitle"><a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/TangQF/p/19006447" title="发布于 2025-07-26 18:12">
    <span role="heading" aria-level="2">Vim 进阶教程</span>
    

</a>
</h1>
	<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h3 id="文本替换-s">文本替换 (<code>:s</code>)</h3>
<p>这是 <code>Vim</code> 中最强大和最常用的进阶功能之一。</p>
<h4 id="基本语法-rangesoldnewflags">基本语法： <code>:[range]s/old/new/[flags]</code></h4>
<ul>
<li>
<p><code>[range]</code>: 指定替换操作的范围。省略时默认为当前行。</p>
<ul>
<li>
<p><code>%</code>：整个文件 (例如 <code>:%s/old/new/</code>)</p>
</li>
<li>
<p><code>5,10</code>：第 <code>5</code> 行到第 <code>10</code> 行 (例如 <code>:5,10s/old/new/</code>)</p>
</li>
<li>
<p><code>.,$</code>：从当前行到文件末尾 (例如 <code>:.,$s/old/new/</code>)</p>
</li>
<li>
<p><code>.+1,$-1</code>：从当前行下一行到文件倒数第二行</p>
</li>
<li>
<p><code>/pattern1/,/pattern2/</code>：从匹配 <code>pattern1</code> 的行到匹配 <code>pattern2</code> 的行</p>
</li>
<li>
<p><code>'&lt;,'&gt;</code>：当前选中的可视区域（在可视模式下按 <code>:</code> 后自动填充）</p>
</li>
</ul>
</li>
<li>
<p><code>s</code>: substitute (替换) 命令。</p>
</li>
<li>
<p><code>old</code>: 要被替换的文本（模式）。支持正则表达式！ (这是它强大的核心)</p>
</li>
<li>
<p><code>new</code>: 替换成的新文本。</p>
</li>
<li>
<p><code>[flags]</code>: 控制替换行为的标志（可选，可组合使用）。</p>
<ul>
<li>
<p><code>g (global)</code>: 对一行内的所有匹配项进行替换（默认只替换一行中的第一个匹配项）。非常重要！</p>
</li>
<li>
<p><code>c (confirm)</code>: 每次替换前要求确认。按 <code>y</code> 替换，<code>n</code> 跳过，<code>a</code> 替换所有，<code>q</code> 退出替换。</p>
</li>
<li>
<p><code>i (ignore case)</code>: 忽略大小写进行匹配。</p>
</li>
<li>
<p><code>I (no ignore case)</code>: 区分大小写进行匹配（默认行为）。</p>
</li>
<li>
<p><code>e (no errors)</code>: 如果 <code>old</code> 没有匹配项，不报错（抑制错误信息）。</p>
</li>
</ul>
</li>
</ul>
<h4 id="常见示例">常见示例：</h4>
<ul>
<li>
<p>替换当前行第一个 <code>foo</code> 为 <code>bar</code>： <code>:s/foo/bar/</code></p>
</li>
<li>
<p>替换当前行所有 <code>foo</code> 为 <code>bar</code>： <code>:s/foo/bar/g</code></p>
</li>
<li>
<p>替换整个文件中所有 <code>foo</code> 为 <code>bar</code> (全局替换)： <code>:%s/foo/bar/g</code></p>
</li>
<li>
<p>替换第 10 行到第 20 行所有 <code>foo</code> 为 <code>bar</code>： <code>:10,20s/foo/bar/g</code></p>
</li>
<li>
<p>替换整个文件中所有 <code>foo</code> 为 <code>bar</code>，但每次替换前确认： <code>:%s/foo/bar/gc</code></p>
</li>
<li>
<p>将文件中所有 <code>color</code> 或 <code>colour</code> 替换为 <code>hue</code> (忽略大小写)： <code>:%s/colou\?r/hue/gi</code>  (这里 <code>\?</code> 表示前面的 <code>u</code> 可有可无，<code>i</code> 忽略大小写)</p>
</li>
<li>
<p>删除所有行尾的空白字符： <code>:%s/\s\+$//g</code> (<code>\s\+</code> 匹配一个或多个空白字符，<code>$</code> 匹配行尾)</p>
</li>
<li>
<p>删除所有行首的空白字符： <code>:%s/^\s\+//g</code> (<code>^</code> 匹配行首)</p>
</li>
<li>
<p>将 <code>"name"</code> 替换为 <code>'name'</code>： <code>:%s/"$$[^"]*$$"/'\1'/g</code> (使用捕获组 <code>$$...$$</code> 和反向引用 <code>\1</code>)</p>
</li>
<li>
<p>在变量名后添加 <code>_v2</code>（捕获组 <code>\1</code>）：<code>:%s/\&lt;\(\w\+\)\&gt;/\1_v2/g</code></p>
</li>
</ul>
<h4 id="重要提示">重要提示：</h4>
<ul>
<li>
<p>正则表达式是核心： 要充分利用 <code>:s</code>，必须学习基础的正则表达式 (<code>Vim</code> 使用自己的变种，但基础与其他类似)。</p>
</li>
<li>
<p>分隔符 <code>/</code> 可替换： 如果 <code>old</code> 或 <code>new</code> 中包含 <code>/</code>，可以用其他字符作为分隔符，如 <code>:s#old#new#g</code> 或 <code>:s@old@new@g</code>。</p>
</li>
<li>
<p>先确认 (<code>c</code> 标志)： 对于全局替换 (<code>:%s/...</code>)，尤其是在生产代码中，强烈建议使用 <code>c</code> 标志先检查确认。</p>
</li>
<li>
<p>查看匹配： 在输入 <code>:s/old</code> 后，按 <code>Ctrl-R Ctrl-W</code> (在命令模式下) 可以将光标下的单词插入到命令中。在替换前使用 <code>/old</code> 搜索一下，用 <code>:nohl</code> 取消高亮，可以直观看到哪些地方会被匹配。</p>
</li>
</ul>
<h3 id="批量操作多文件操作">批量操作/多文件操作</h3>
<h4 id="多行编辑可视化块模式">多行编辑（可视化块模式）</h4>
<p>结合 <code>Ctrl + v</code>（垂直选中）实现批量添加 / 删除前缀 / 后缀：</p>
<ul>
<li>
<p>批量给多行添加前缀（如注释符号 <code>//</code>）：</p>
<ul>
<li>
<p>按 <code>Ctrl + v</code> 进入垂直选择模式</p>
</li>
<li>
<p>移动光标选中需要操作的行（如向下按 <code>j</code> 选 5 行）</p>
</li>
<li>
<p>按 <code>I</code>（大写 <code>I</code>，进入插入模式），输入前缀（如 <code>//</code>）</p>
</li>
<li>
<p>按 <code>ESC</code>，所有选中行都会添加前缀</p>
</li>
</ul>
</li>
<li>
<p>批量删除多行前缀：</p>
<ul>
<li>
<p><code>Ctrl + v</code> 选中需要删除的前缀列（如前 2 个字符）</p>
</li>
<li>
<p>按 <code>d</code> 直接删除选中的列</p>
</li>
</ul>
</li>
</ul>
<h4 id="argdo--bufdo--windo--tabdo">argdo / bufdo / windo / tabdo:</h4>
<ul>
<li>
<p>这些命令允许在多个参数列表文件(<code>argdo</code>)、缓冲区(<code>bufdo</code>)、窗口(<code>windo</code>)、标签页(<code>tabdo</code>) 上执行相同的 <code>Ex</code> 命令。</p>
</li>
<li>
<p>示例：</p>
<ul>
<li>
<p>打开多个文件： <code>vim *.txt</code></p>
</li>
<li>
<p>在所有打开的 <code>.txt</code> 文件中替换 <code>old</code> 为 <code>new</code>： <code>:argdo %s/old/new/ge | update</code></p>
<ul>
<li>
<p><code>%s/old/new/ge</code>：在每个文件内执行全局替换 (<code>g</code>)，忽略错误 (<code>e</code> 防止没有匹配的文件报错退出)。</p>
</li>
<li>
<p><code>| update</code>：管道符 <code>|</code> 连接命令，<code>update</code> 仅在文件被修改过时才保存。</p>
</li>
</ul>
</li>
<li>
<p>在所有打开的缓冲区中执行替换并保存： <code>:bufdo %s/old/new/ge | w</code></p>
</li>
</ul>
</li>
<li>
<p>注意：<code>argdo</code> 操作的是 <code>:args</code> 列表中的文件，<code>bufdo</code> 操作的是所有加载到缓冲区的文件。</p>
</li>
</ul>
<h4 id="vimgrep--grep">:vimgrep / :grep:</h4>
<ul>
<li>
<p>在整个项目文件中搜索包含特定模式的行。</p>
</li>
<li>
<p><code>:vimgrep /pattern/[j][g] file(s)</code></p>
<ul>
<li>
<p><code>/pattern/</code>：搜索模式（支持 <code>Vim</code> 强大的正则）。</p>
</li>
<li>
<p><code>[j]</code>：不跳转到第一个匹配项（静默搜索）。</p>
</li>
<li>
<p><code>[g]</code>：每行只列出一次匹配（默认列出每行的所有匹配）。</p>
</li>
<li>
<p><code>file(s)</code>：文件模式，如 <code>**/*.py</code> 递归搜索所有 <code>.py</code> 文件。</p>
</li>
<li>
<p>示例： <code>:vimgrep /TODO/ **/*.py</code> (在所有 <code>.py</code> 文件中搜索 <code>"TODO"</code>)</p>
</li>
</ul>
</li>
<li>
<p>搜索结果会填充到 <code>quickfix</code> 列表 (<code>:copen</code> 打开列表，<code>:cclose</code> 关闭，<code>:cn</code> 下一个，<code>:cp</code> 上一个)。</p>
</li>
<li>
<p>结合 <code>:cdo</code> / <code>:cfdo</code>：</p>
<ul>
<li>
<p><code>:cdo command</code>：对 <code>quickfix</code> 列表中的每一行执行命令 (光标会移动到对应行)。</p>
</li>
<li>
<p><code>:cfdo command</code>：对 <code>quickfix</code> 列表中的每一个文件执行命令 (光标会移动到对应文件)。</p>
</li>
<li>
<p>强大示例： 在所有包含 <code>"TODO"</code> 的 <code>.py</code> 文件中，将 <code>"TODO"</code> 替换为 <code>"FIXME"</code>：</p>
<p><code>:vimgrep /TODO/ **/*.py</code></p>
<ul>
<li>
<p><code>:cfdo %s/TODO/FIXME/ge | update</code></p>
</li>
<li>
<p>对每个匹配文件 (<code>:cfdo</code>) 执行全局替换 (<code>%s/.../g</code>)，忽略错误 (<code>e</code>)，修改才保存 (<code>update</code>)。</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="宏录制-q">宏录制 (q)：</h4>
<ul>
<li>
<p>录制： <code>q + &lt;register&gt;</code> (例如 <code>qa</code>) 开始录制到寄存器 <code>a</code> -&gt; 执行你的操作序列 -&gt; <code>q</code> 停止录制。</p>
</li>
<li>
<p>播放： <code>@ + &lt;register&gt;</code> (例如 <code>@a</code>) 播放寄存器 <code>a</code> 中的宏。<code>@@</code> 重复播放上一次播放的宏。</p>
</li>
<li>
<p>批量播放： 结合行号或可视选择。</p>
<ul>
<li>
<p><code>:10,20 normal @a</code>：对第 10 行到第 20 行的每一行，在普通模式下执行寄存器 <code>a</code> 中的宏。</p>
</li>
<li>
<p>在可视模式下选中多行，然后按 <code>:</code>，会自动填充为 <code>:'&lt;,'&gt;</code>，然后输入 <code>normal @a</code>。</p>
</li>
</ul>
</li>
<li>
<p>示例： 给一组连续的行添加注释 (<code>//</code> )：</p>
<ul>
<li>
<p>将光标移动到第一行的行首。</p>
</li>
<li>
<p><code>qa</code> 开始录制到 <code>a</code>。</p>
</li>
<li>
<p><code>I// &lt;Esc&gt;</code>：进入插入模式，输入 <code>//</code> ，退出插入模式。</p>
</li>
<li>
<p><code>j</code>：移动到下一行。</p>
</li>
<li>
<p><code>q</code>：停止录制。</p>
</li>
<li>
<p>按 <code>@a</code> 对当前行执行宏（添加注释并下移一行）。</p>
</li>
<li>
<p>按 <code>5@a</code> 重复执行 5 次宏（给接下来的 5 行添加注释）。或者用 <code>jVG</code> 选中剩余行，然后 <code>:'&lt;,'&gt;normal @a</code>。</p>
</li>
</ul>
</li>
</ul>
<h3 id="其他高级技巧">其他高级技巧</h3>
<h4 id="重复操作命令">重复操作（.命令）</h4>
<p><code>.</code> 可以重复上一次的编辑操作，是 <code>Vim</code> 最被低估的技巧之一：</p>
<ul>
<li>
<p>例 1：删除一行后，按 <code>.</code> 会重复删除下一行</p>
</li>
<li>
<p>例 2：在某行末尾添加 <code>;</code>，按 <code>.</code>会在其他行末尾重复添加</p>
</li>
</ul>
<h4 id="快速跳转与定位">快速跳转与定位</h4>
<ul>
<li>
<p>按内容跳转：</p>
<ul>
<li>
<p><code>*</code>：向下跳转到当前单词的下一个匹配</p>
</li>
<li>
<p><code>#</code>：向上跳转到当前单词的上一个匹配</p>
</li>
</ul>
</li>
<li>
<p>跳转到上次编辑位置：</p>
<ul>
<li>
<p><code>''</code>（两个单引号）：跳回上一次跳转前的位置</p>
</li>
<li>
<p><code>.</code>（点符号）：跳转到上次编辑的位置</p>
</li>
</ul>
</li>
</ul>
<h4 id="global-命令-g">global 命令 (:g)：</h4>
<ul>
<li>
<p>对匹配特定模式的行执行命令。</p>
</li>
<li>
<p>语法： <code>:[range]g/pattern/command</code></p>
</li>
<li>
<p>示例：</p>
<ul>
<li>
<p>删除所有空行： <code>:g/^$/d</code> (匹配行首 <code>^</code> 紧接着行尾 <code>$</code> 的行，即空行，执行 <code>d</code> 删除)。</p>
</li>
<li>
<p>删除所有包含 <code>DEBUG</code> 的行： <code>:g/DEBUG/d</code></p>
</li>
<li>
<p>将所有包含 <code>TODO</code> 的行复制到文件末尾： <code>:g/TODO/t$</code> (<code>t</code> 是 <code>copy</code> 的缩写，<code>$</code> 表示文件末尾)。</p>
</li>
<li>
<p>在包含 <code>function</code> 的行前面添加注释： <code>:g/function/normal O// TODO: Implement</code></p>
</li>
</ul>
</li>
</ul>
<h4 id="全局反向操作vglobal">全局反向操作（:vglobal）</h4>
<ul>
<li><code>:v/^$/d</code>：删除所有非空行</li>
</ul>
<h4 id="寄存器--的高级使用">寄存器 (") 的高级使用：</h4>
<table>
<thead>
<tr>
<th>寄存器</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>"</code></td>
<td>默认寄存器，存放最近一次的删除或复制</td>
</tr>
<tr>
<td><code>0</code></td>
<td>存放最近一次的复制（<code>y</code> 命令）</td>
</tr>
<tr>
<td><code>1–9</code></td>
<td>最近 9 次删除操作 (滚动存放)</td>
</tr>
<tr>
<td><code>a–z</code></td>
<td>用户自定义寄存器，可用 <code>"ayy</code> 复制到 <code>a</code></td>
</tr>
<tr>
<td><code>/:</code></td>
<td>存放最近一次的搜索模式</td>
</tr>
</tbody>
</table>
<ul>
<li>
<p>指定寄存器： 在操作命令前加上 <code>"&lt;register&gt;</code>。</p>
<ul>
<li>
<p><code>"ayy</code>：复制当前行到寄存器 <code>a</code>。</p>
</li>
<li>
<p><code>"bdd</code>：删除当前行到寄存器 <code>b</code> (剪切)。</p>
</li>
<li>
<p><code>"ap</code>：粘贴寄存器 <code>a</code> 的内容。</p>
</li>
</ul>
</li>
<li>
<p>查看寄存器内容： <code>:reg</code> 或 <code>:reg &lt;register&gt;</code> (如 <code>:reg a</code>)。</p>
</li>
<li>
<p>系统剪贴板 (<code>"+ / "*</code>)： 设置了 <code>clipboard=unnamed</code>，通常 <code>"+</code> 和 <code>"*</code> 都指向系统剪贴板。显式使用：</p>
<ul>
<li>
<p><code>"+yy</code>：复制当前行到系统剪贴板。</p>
</li>
<li>
<p><code>"+p</code>：粘贴系统剪贴板内容到 <code>Vim</code>。</p>
</li>
</ul>
</li>
<li>
<p>只读寄存器：</p>
<ul>
<li>
<p><code>"%</code>：当前文件名。</p>
</li>
<li>
<p><code>".</code>：上次插入的文本。</p>
</li>
<li>
<p><code>":</code>：上次执行的命令。</p>
</li>
<li>
<p><code>"/</code>：上次搜索的模式。</p>
</li>
</ul>
</li>
</ul>
<h4 id="折叠代码">折叠代码</h4>
<ul>
<li>
<p><code>zc</code>：折叠当前代码块（如函数、循环）</p>
</li>
<li>
<p><code>zo</code>：展开当前折叠块</p>
</li>
<li>
<p><code>zR</code>：展开所有折叠</p>
</li>
<li>
<p><code>zM</code>：折叠所有代码块</p>
</li>
</ul>
<p>（需先设置折叠方式：<code>set foldmethod=indent</code> 按缩进折叠，或 <code>set foldmethod=syntax</code> 按语法折叠）</p>
<h4 id="显示不可见字符">显示不可见字符</h4>
<p>查看空格、制表符、换行符等：</p>
<pre><code class="language-shell">:set list  " 显示不可见字符（$表示换行，^I表示制表符）
:set nolist  " 关闭显示
</code></pre>
<h4 id="标记-marks">标记 (Marks)：</h4>
<ul>
<li>
<p>快速跳转到文件中的特定位置。</p>
</li>
<li>
<p>设置标记： <code>m + &lt;letter&gt;</code> (例如 <code>ma</code> 设置标记 <code>a</code>)。</p>
</li>
<li>
<p>跳转到标记：</p>
</li>
</ul>
<pre><code>` + &lt;letter&gt;
</code></pre>
<p>(反引号，例如 `a 精确跳转到标记 a 的行和列) 或</p>
<pre><code>' + &lt;letter&gt;
</code></pre>
<p>(单引号，例如 'a 跳转到标记 a 所在行的行首)。</p>
<ul>
<li>
<p>查看标记： <code>:marks</code>。</p>
</li>
<li>
<p>特殊标记：</p>
<ul>
<li>
<p>``：跳回上次跳转前的位置。</p>
</li>
<li>
<p>'.：上次修改的行。</p>
</li>
<li>
<p>'^：上次插入模式退出的位置。</p>
</li>
</ul>
</li>
</ul>
<h4 id="会话管理-sessions">会话管理 (Sessions)</h4>
<ul>
<li>保存会话（打开的文件、窗口布局等）：</li>
</ul>
<pre><code class="language-shell">:mksession ~/session.vim
</code></pre>
<ul>
<li>恢复会话：</li>
</ul>
<pre><code class="language-shell">vim -S ~/session.vim
</code></pre>
<h4 id="外部命令与管道">外部命令与管道</h4>
<ul>
<li>在 <code>Vim</code> 中执行 <code>shell</code> 命令并将结果导入缓冲区：</li>
</ul>
<pre><code class="language-shell">:r !ls -l
</code></pre>
<ul>
<li>对选中区域执行外部命令：</li>
</ul>
<pre><code class="language-shell">:'&lt;,'&gt;!sort
</code></pre>
<p>将选区内内容按 <code>sort</code> 排序。</p>
<h4 id="自动命令-autocmd">自动命令 (autocmd)：</h4>
<ul>
<li>
<p>在特定事件发生时自动执行命令，用于高度定制 <code>Vim</code> 行为（如文件类型检测、保存时自动格式化等）。这属于更高级的 <code>.vimrc</code> 配置。</p>
</li>
<li>
<p>基本示例 (在 <code>.vimrc</code> 中)：</p>
</li>
</ul>
<pre><code class="language-vim">" 当打开或新建 .py 文件时设置缩进
autocmd BufNewFile,BufRead *.py setlocal tabstop=4 shiftwidth=4 expandtab
" 保存 .py 文件前自动删除行尾空白
autocmd BufWritePre *.py :%s/\s\+$//e
</code></pre>
<h4 id="窗口和标签页管理">窗口和标签页管理：</h4>
<ul>
<li>
<p>分割窗口：</p>
<ul>
<li>
<p><code>:split / :sp [filename]</code>：水平分割当前窗口（或打开文件）。</p>
</li>
<li>
<p><code>:vsplit / :vsp [filename]</code>：垂直分割当前窗口（或打开文件）。</p>
</li>
<li>
<p><code>Ctrl-w s</code>：水平分割。</p>
</li>
<li>
<p><code>Ctrl-w v</code>：垂直分割。</p>
</li>
<li>
<p><code>Ctrl + w + =</code>：让所有分屏高度 / 宽度相等</p>
</li>
</ul>
</li>
<li>
<p>窗口间跳转： <code>Ctrl-w h/j/k/l</code> / <code>Ctrl-w w</code> (循环)。</p>
</li>
<li>
<p>关闭窗口： <code>:close</code> / <code>Ctrl-w c</code>。</p>
</li>
<li>
<p>调整窗口大小： <code>Ctrl-w +</code> / <code>Ctrl-w -</code> (高度), <code>Ctrl-w &gt;</code> / <code>Ctrl-w &lt;</code> (宽度)。</p>
</li>
<li>
<p>标签页：</p>
<ul>
<li>
<p><code>:tabnew [filename]</code>：在新标签页打开文件。</p>
</li>
<li>
<p><code>:tabclose</code>：关闭当前标签页。</p>
</li>
<li>
<p><code>:tabnext / gt</code>：下一个标签页。</p>
</li>
<li>
<p><code>:tabprevious / gT</code>：上一个标签页。</p>
</li>
<li>
<p><code>:tabm [n]</code>：移动当前标签页到位置 <code>n</code> (从 0 开始计数)。</p>
</li>
</ul>
</li>
</ul>
<h4 id="命令行窗口-q">命令行窗口 (q:)：</h4>
<ul>
<li>
<p>普通模式下按 <code>q:</code> 打开命令行窗口。这里显示命令历史，可以像编辑普通文本一样浏览、修改历史命令，然后按回车执行选中的命令。非常方便修改复杂命令（如带复杂正则的 <code>:s</code> 命令）。</p>
</li>
<li>
<p>表达式寄存器 (<code>=</code>)：</p>
<ul>
<li>在插入模式下按 <code>Ctrl-r =</code>，可以输入一个 Vim 表达式（如 <code>2+2</code> 或 <code>@a</code>），计算结果会插入到文本中。高级用法可以结合函数。</li>
</ul>
</li>
<li>
<p><code>normal</code> 命令 (<code>:normal</code>)：</p>
<ul>
<li>
<p>在命令行模式下执行普通模式的命令序列。</p>
</li>
<li>
<p>示例：</p>
<ul>
<li>
<p>在当前行执行宏 <code>a</code>： <code>:normal @a</code></p>
</li>
<li>
<p>在选中的行（可视模式后）删除行首空白： <code>:'&lt;,'&gt;normal ^dW</code> (先跳到行首非空字符 <code>^</code>，然后删除一个单词 <code>dW</code>，这里空白被当作一个单词)。</p>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>符号自动补全 (<code>Ctrl-x</code> 系列)：</p>
<ul>
<li>
<p>在插入模式下：</p>
<ul>
<li>
<p><code>Ctrl-x Ctrl-l</code>：整行补全。</p>
</li>
<li>
<p><code>Ctrl-x Ctrl-f</code>：文件名补全。</p>
</li>
<li>
<p><code>Ctrl-x Ctrl-o</code>：全能 (<code>Omni</code>) 补全（需要文件类型支持，如编程语言）。</p>
</li>
<li>
<p><code>Ctrl-n / Ctrl-p</code>：使用当前缓冲区中的单词补全。</p>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>自动缩进 (<code>=</code>)：</p>
<ul>
<li>
<p>在可视模式下选中代码块，按 <code>=</code> 会自动缩进（根据文件类型和你的 <code>indent</code> 设置）。</p>
</li>
<li>
<p><code>gg=G</code>：对整个文件进行自动缩进 (<code>gg</code> 到文件头，<code>=</code> 缩进操作，<code>G</code> 到文件尾)。</p>
</li>
</ul>
</li>
</ul>
<h3 id="高级配置技巧需修改vimrc">高级配置技巧（需修改.vimrc）</h3>
<h4 id="高效搜索">高效搜索</h4>
<ul>
<li>
<p><code>set incsearch</code>：输入搜索词时实时高亮匹配</p>
</li>
<li>
<p><code>set hlsearch</code>：高亮所有搜索结果，用 <code>:nohl</code> 临时关闭高亮</p>
</li>
</ul>
<h4 id="文件管理">文件管理</h4>
<ul>
<li>
<p><code>set autochdir</code>：自动切换工作目录到当前文件位置</p>
</li>
<li>
<p><code>set wildmenu</code>：增强文件名补全（按 <code>Tab</code> 循环选择）</p>
</li>
</ul>
<h4 id="备份与撤销">备份与撤销</h4>
<ul>
<li><code>set undodir=\~/.vim/undo</code>：持久化撤销历史（支持关闭文件后仍可撤销）</li>
</ul>
<h4 id="代码格式化">代码格式化</h4>
<ul>
<li>
<p><code>filetype indent on</code>：根据文件类型自动缩进</p>
</li>
<li>
<p><code>set tabstop=4</code>：设置 <code>Tab</code> 为4空格</p>
</li>
</ul>
<h3 id="插件推荐进阶工具">插件推荐（进阶工具）</h3>
<ul>
<li>
<p>多文件搜索：<br>
<code>fzf.vim</code>（模糊搜索文件/内容）</p>
</li>
<li>
<p>批量注释：<br>
<code>vim-commentary</code>（<code>gc</code> 快速注释）</p>
</li>
<li>
<p>环绕编辑：<br>
<code>vim-surround</code>（<code>cs"'</code> 替换双引号为单引号）</p>
</li>
<li>
<p>自动补全：<br>
<code>coc.nvim</code>（<code>LSP</code> 支持）</p>
</li>
<li>
<p>项目目录树浏览、文件管理。<br>
<code>nerdtree</code></p>
</li>
<li>
<p>实时显示 <code>Git diff</code>（新增、修改、删除行）</p>
<p><code>vim-gitgutter / signify</code></p>
</li>
</ul>
<h3 id="其他示例">其他示例</h3>
<h4 id="将项目中的-user_id-改为-user_id_new">将项目中的 user_id 改为 user_id_new：</h4>
<ul>
<li>精确全文替换：</li>
</ul>
<pre><code class="language-shell">:%s/\&lt;user_id\&gt;/user_id_new/gc
</code></pre>
<ul>
<li>如果涉及多个文件：</li>
</ul>
<pre><code class="language-shell">:argdo %s/\&lt;user_id\&gt;/user_id_new/ge | update
</code></pre>
<p>关键点：</p>
<ul>
<li>
<p><code>\&lt;</code> 和 <code>\&gt;</code> 匹配单词边界（避免匹配 <code>_user_id_old</code>）</p>
</li>
<li>
<p><code>/e</code> 屏蔽未匹配时的报错</p>
</li>
<li>
<p><code>| update</code> 只保存修改过的文件</p>
</li>
</ul>

</div>
<div class="clear"></div>

	<div class="postDesc">posted on 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-26 18:12">2025-07-26 18:12</span>&nbsp;
<a href="https://www.cnblogs.com/TangQF">我是唐青枫</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19006447);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19006447', targetLink: 'https://www.cnblogs.com/TangQF/p/19006447', title: 'Vim 进阶教程' })">举报</a>
</div>
