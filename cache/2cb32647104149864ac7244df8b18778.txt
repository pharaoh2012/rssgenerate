
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/keymotek/p/18961399" title="发布于 2025-07-02 14:13">
    <span role="heading" aria-level="2">康谋分享 | 基于多传感器数据的自动驾驶仿真确定性验证</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        自动驾驶仿真测试中，游戏引擎的底层架构可能会带来非确定性的问题，侵蚀测试可信度。如何通过专业仿真平台，在多传感器配置与极端天气场景中实现测试数据零差异？确定性验证方案已成为自动驾驶研发的关键突破口！
    </div>
<div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h2>01 引言&nbsp;</h2>
<p style="text-align: left">随着自动驾驶技术的飞速发展，<strong>仿真测试</strong>已成为替代成本高昂且充满风险的道路测试的关键环节。它能够在虚拟环境中<strong>模拟各种复杂的交通场景和极端天气</strong>，极大地加速了自动驾驶系统的开发与验证进程。然而，一个常被忽视的问题正悄然<strong>侵蚀着仿真测试的可信度——非确定性</strong>，即仿真测试过程中<strong>因核心引擎或其他因素导致的随机性</strong>。</p>
<p style="text-align: center"><img alt="" height="281" width="500" data-src="https://img2024.cnblogs.com/blog/3614920/202507/3614920-20250702140528687-180487068.png" class="lazyload"></p>
<p style="text-align: center">图1 aiSim多传感器融合示例</p>
<p>目前，许多市面上的仿真软件，尤其是<strong>基于游戏引擎开发</strong>的平台，其核心设计目标之一是高效地为玩家提供充满惊喜和变化的娱乐体验。这种<strong>内在的随机性</strong>，在游戏世界里是优点，但在<strong>严谨的汽车测试领域</strong>，却是一个<strong>致命的缺陷</strong>。</p>
<p>想象一下在仿真测试过程中，工程师<strong>精心设置了所有参数</strong>——车辆速度、行人轨迹、天气状况、传感器配置——期望能稳定复现一个特定的危险场景。然而，<strong>每次点击“开始”，结果却不尽相同</strong>：第一次，车辆完美避让；第二次，发生了轻微碰撞；第三次，又安然无恙。这或许并非是算法时好时坏，而是仿真环境本身在“摇摆不定”。</p>
<h2>02 随机性的前因与后果</h2>
<p>Greg等人研究指出，基于游戏引擎的仿真环境，其<strong>随机性并非偶然</strong>，而是源于其<strong>底层架构</strong>的诸多方面：</p>
<p><strong>（1）资源负载与调度：</strong>系统CPU/GPU的负载波动，会直接影响物理引擎的计算时机和顺序，导致即使输入完全相同，输出的轨迹也会产生高达数十厘米的偏差。</p>
<p><strong>（2）物理引擎的“模糊”处理：</strong>为了实时渲染流畅的画面，游戏引擎在处理物体碰撞等复杂物理交互时，往往采用近似计算。这种不精确性在一次碰撞后会被急剧放大，甚至影响到场景中其他未参与碰撞的物体，造成全局性的结果污染。</p>
<p><strong>（3）多线程与并行计算：</strong>为了效率，引擎会将任务分配给多个线程并行处理，但线程完成的顺序并非每次都固定，这种执行顺序的微小变化，会像蝴蝶效应一样，最终导致仿真结果的巨大差异。</p>
<p><strong>这种随机性带来的问题是灾难性的：</strong></p>
<p><strong>（1）问题无法追溯：</strong>当测试中出现问题，工程师无法稳定复现它，也就无从定位和修复缺陷，极大地增加了调试成本和时间。</p>
<p><strong>（2）结果失去可信度：</strong>如果仿真结果不稳定，如何相信它所提供的安全验证报告？这会给自动驾驶系统的安全性带来“伪证”，造成虚假的安全感。</p>
<p><strong>（3）测试覆盖率失效：</strong>随机性使得精确控制测试用例、确保覆盖所有关键场景变得不可能。</p>
<p>归根结底，对于自动驾驶这种安全至上的系统，测试必须是科学、严谨且可重复的。因此，<strong>一个具备高度确定性、一致性的仿真平台，是所有有效测试的绝对前提</strong>。</p>
<h2>03 确定性的验证——以aiSim为例</h2>
<p>为了<strong>验证一个仿真平台的确定性</strong>，最直接的方式便是确保各项参数不变的情况下进行<strong>重复仿真</strong>，对输出的仿真数据进行<strong>最直接的比较</strong>，判断是否存在差异。</p>
<p>例如，世界上<strong>首个获得ISO 26262 ASIL-D认证的AD/ADAS仿真测试软件aiSim</strong>，它构建了独特的仿真内核，摒弃了游戏引擎中那些为“体验”而牺牲“精确”的设计。<strong>为了验证aiSim的确定性，我们进行了一系列重复性实验。</strong></p>
<h2>1、传感器选型与配置</h2>
<p><img alt="" height="284" width="500" style="display: block; margin-left: auto; margin-right: auto" data-src="https://img2024.cnblogs.com/blog/3614920/202507/3614920-20250702140601684-1680987506.png" class="lazyload"></p>
<p style="text-align: center">图2 aiSim传感器配置GUI</p>
<p>通过<strong>在GUI中拖放仿真传感器</strong>，我们在仿真车辆中添加了1个带有目标检测功能的1920×1080的<strong>前置针孔Camera</strong>、1个带有目标检测功能的<strong>前置Radar</strong>、1个带有目标检测功能的128线<strong>顶置LiDAR</strong>、1个内置<strong>IMU</strong>、1个内置<strong>GPS</strong>以及1个可以反馈自车状态的<strong>Vehicle sensor</strong>。</p>
<p style="text-align: center"><img alt="" height="352" width="500" data-src="https://img2024.cnblogs.com/blog/3614920/202507/3614920-20250702140801946-1451665296.png" class="lazyload"></p>
<p style="text-align: center">图3 仿真传感器数据示例</p>
<h2>2、场景与方法</h2>
<p style="text-align: center"><img alt="" data-src="https://img2024.cnblogs.com/blog/3614920/202507/3614920-20250702140818219-1695681546.png" class="lazyload"></p>
<p style="text-align: center">图4 仿真场景示例</p>
<p><strong>aiSim本身包含了数十种城市、郊区的室内、室外场景</strong>。本文以真实世界常见的“<strong>行泊一体</strong>”为例，在一个包含14辆他车的室外停车场环境（Parking_US-CA_SanJoseAlamitos）中，对主车执行了“<strong>跟车 -&gt; 切入变道 -&gt; 寻找车位 -&gt; 泊车</strong>”的全套连贯动作。</p>
<p>我们在完全<strong>固定的软硬件环境</strong>下，针对<strong>三种典型天气</strong>进行了<strong>5轮完全独立的重复测试</strong>，每一轮测试都记录了<strong>长达1000帧</strong>的数据，以确保完整与统一。我们将每一轮测试的数据与首次测试的基准数据进行精确比对：</p>
<p><strong>晴天 (Sunny)：</strong>在Sunny.json配置下，模拟了日光充足的理想泊车环境。</p>
<p><strong>雨天 (Rainy)：</strong>切换至Rainy.json配置，引入了雨水对传感器性能的干扰。</p>
<p><strong>复杂雪天 (Snowy &amp; Broken Road)：</strong>在Snowy.json的预设配置基础之上，加入了道路老化、标线磨损、路面破损、坑洼等极端退化元素，将测试环境推向了极限。</p>
<p>测试过程中，我们记录了<strong>全部传感器和车辆状态数据</strong>，包括：</p>
<p><strong>视觉数据 (Camera)：</strong>RGBA原始图像、语义分割图、目标检测图及JSON格式的2D/3D标注框。</p>
<p><strong>雷达数据 (Radar &amp; LiDAR)：</strong>毫米波雷达和激光雷达的点云（LAS v1.4）、目标列表及3D标注框。</p>
<p><strong>车辆自身状态 (GPS, IMU, Vehicle)：</strong>高精度的定位、姿态、加速度及车辆动力学信息。</p>
<p><img alt="" height="156" width="700" style="display: block; margin-left: auto; margin-right: auto" data-src="https://img2024.cnblogs.com/blog/3614920/202507/3614920-20250702140831096-508423086.png" class="lazyload"></p>
<p style="text-align: center">图5 仿真相机输出图像类型</p>
<p>我们采用<strong>均方根误差（RMSE）</strong>来量化图像、点云等原始数据的细微差异，并对JSON格式的结构化数据采用<strong>根据样本数值差异个数</strong>进行判定的统计确定性检验。</p>
<h2>3、验证结果</h2>
<p>Camera Sensor的RGBA原始图像、分割图像、目标检测图像均以<strong>tga格式</strong>输出，2D Bounding Box、3D Bounding Box均已<strong>json格式</strong>输出。通过比较<strong>同一环境、场景下相同帧之间的误差或差异项，验证Camera的确定性</strong>。</p>
<p style="text-align: left">对于<strong>tga格式文件</strong>，计算所有1000帧图像所有通道的像素均方根误差（MSE，Mean Squared Error）。在<strong>3类天气5次测试</strong>过程中，RGBA原始图像、分割图像、目标检测图像的所有通道的像素<strong>均方根误差均为0</strong>；<br><img alt="" height="492" width="500" style="display: block; margin-left: auto; margin-right: auto" data-src="https://img2024.cnblogs.com/blog/3614920/202507/3614920-20250702141120073-741799750.png" class="lazyload"></p>
<p style="text-align: center">图6 基于python脚本可视化的彩色图像、分割图像、目标检测图像均方根误差结果</p>
<p>对于<strong>json格式文件</strong>，比较2D与3D Bounding Box的所有Group的key与value，记录差异项个数（Number of Differences）。在<strong>3类天气5次测试过程</strong>中，Bounding Box信息（包括位置、姿态、个数、类型、id、相对速度、持续时间、像素遮挡率等）<strong>不存在差异项</strong>。<br><img alt="" height="230" width="700" style="display: block; margin-left: auto; margin-right: auto" data-src="https://img2024.cnblogs.com/blog/3614920/202507/3614920-20250702141146850-1823461653.png" class="lazyload"></p>
<p style="text-align: center">图7 基于python脚本可视化的2D&amp;3D BoundingBox差异项个数结果</p>
<p><strong>Radar Sensor输出json格式</strong>的检测目标相关信息，包括距离、旋转、相对速度、id、类型等，因此与相机的Bounding Box一样，记录差异项个数（Number of Differences），结果也是一样，<strong>不存在差异项。</strong></p>
<p style="text-align: center"><img alt="" height="245" width="700" data-src="https://img2024.cnblogs.com/blog/3614920/202507/3614920-20250702141202991-1315847384.png" class="lazyload"></p>
<p style="text-align: center">图8 基于python脚本可视化的Radar检测差异项个数结果</p>
<p><strong>LiDAR Sensor</strong>生成的输出包括两种格式的数据：<strong>LAS格式的3D激光点云</strong>和<strong>JSON格式的目标检测数据</strong>。激光点云数据包含每个点的坐标、强度、返回次数、唯一标识符（ID）等，我们<strong>比较内部的所有属性</strong>，记录差异项个数（Number of Differences）；<br>对于以<strong>JSON格式</strong>输出的目标检测数据，与Camera类似，我们将比较所有Group的键（key）与值（value），并记录差异项个数（Number of Differences）。最终结果与前面相同，在<strong>3类天气5次测试之间均不存在差异项</strong>。</p>
<p><strong>需要指出的是</strong>，由于las文件和检测到的目标内部包含的GPS时间属性在aiSim中取自系统时间（UTC时间），<strong>该项不纳入差异比较范围</strong>。</p>
<p style="text-align: center"><img alt="" height="312" width="500" data-src="https://img2024.cnblogs.com/blog/3614920/202507/3614920-20250702141217707-1366195355.png" class="lazyload"></p>
<p style="text-align: center">图9 基于python脚本可视化的LiDAR检测差异项个数结果</p>
<p style="text-align: left">GPS Sensor、IMU Sensor以及用于观测仿真自车状态的Vehicle Sensor输出的均为JSON格式的信息，同样比较所有Group的键（key）与值（value），并记录差异项个数（Number of Differences）。<strong>对于3类天气5次测试的GPS、IMU、Vehicle数据信息，3类天气5次测试之间均不存在差异项。</strong><br><img alt="" height="556" width="500" style="display: block; margin-left: auto; margin-right: auto" data-src="https://img2024.cnblogs.com/blog/3614920/202507/3614920-20250702141230834-557975055.png" class="lazyload"></p>
<p style="text-align: center">图10 基于python脚本可视化的GPS、IMU、Vehicle Sensor结果</p>
<h2><br>04 总结</h2>
<p>在本文设计的<strong>传感器配置与场景</strong>中，aiSim的各项传感器数据在固定的参数配置下，<strong>仿真过程与仿真结果不存在任何差异</strong>（除UTC时间）。除了本文提到的传感器与场景，在其他不同环境、传感器配置下的验证中，aiSim也均表现出了卓越的确定性。</p>
<p>在aiSim的仿真世界里，没有偶然和随机，只有精确和必然。每一次的测试结果都真实反映了被测算法的真实能力，每一次的问题暴露都能被稳定复现和修正。</p>
<p><strong>参考文献</strong><br>1.&nbsp;On Determinism of Game Engines Used for&nbsp;Simulation-Based Autonomous Vehicle Verification</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-02 14:13">2025-07-02 14:13</span>&nbsp;
<a href="https://www.cnblogs.com/keymotek">康谋自动驾驶</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18961399);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18961399', targetLink: 'https://www.cnblogs.com/keymotek/p/18961399', title: '康谋分享 | 基于多传感器数据的自动驾驶仿真确定性验证' })">举报</a>
</div>
        