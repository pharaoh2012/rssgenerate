
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/qiuzhendezhen/p/18938939" title="发布于 2025-06-20 17:54">
    <span role="heading" aria-level="2">Rtpengine 全面指南 (mr13.1.1.6)：启动参数、配置详解及双网卡SBC部署实例</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<div class="lake-content">
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/2500940/202506/2500940-20250620175420824-1009468933.jpg" class="lazyload"></p>
<p>&nbsp;</p>
<h2 id="fkTyb"><span class="ne-text">引言</span></h2>
<p id="uc82ef55d" class="ne-p"><span class="ne-text">本文档旨在为 rtpengine (版本 mr13.1.1.6) 用户提供一份详尽的参考指南。内容涵盖 rtpengine 的进程启动参数、<code class="ne-code"><span class="ne-text">rtpengine.conf</span></code><span class="ne-text"> 配置文件的主要参数说明，并针对一个常见的双网卡 SBC (Session Border Controller) 服务器应用场景，详细分析了其媒体流转发原理，并给出了具体的配置实例。无论您是初次接触 rtpengine，还是希望深入了解其特定配置，本文都将力求提供清晰、准确且具有实践指导意义的信息。</span></span></p>
<p id="ud35f2171" class="ne-p"><span class="ne-text">rtpengine 作为一款高性能的 RTP 媒体代理，在 VoIP 和 WebRTC 等实时通信领域扮演着至关重要的角色。它能够有效地处理媒体流的转发、NAT 穿透、编解码转换、录音等多种复杂任务。理解其丰富的配置选项，对于构建稳定、高效的实时通信系统至关重要。</span></p>
<p id="uc33751e9" class="ne-p"><span class="ne-text">接下来，我们将依次深入探讨 rtpengine 的各项配置细节和应用实例。</span></p>
<p id="ucf5941d6" class="ne-p">&nbsp;</p>
<p id="u41342359" class="ne-p">&nbsp;</p>
<h2 id="qN9k6"><span class="ne-text">Rtpengine mr13.1.1.6 进程启动参数</span></h2>
<p id="u0d7067b9" class="ne-p"><span class="ne-text">本部分将详细介绍 rtpengine mr13.1.1.6 版本的主要进程启动参数。这些参数可以在启动 rtpengine 守护进程时通过命令行指定，也可以写入配置文件中（通常是 <code class="ne-code"><span class="ne-text">/etc/rtpengine/rtpengine.conf</span></code><span class="ne-text">）。</span></span></p>
<h3 id="MCdHI"><span class="ne-text">主要启动参数</span></h3>
<p id="u52c1e7dd" class="ne-p"><span class="ne-text">以下是根据官方文档整理的主要启动参数及其功能说明：</span></p>
<ul class="ne-ul">
<li id="u4926a7f6" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--help</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u3ef9c78c" data-lake-index-type="0"><span class="ne-text">功能：打印用法信息并退出。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u0ba9819b" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">-v</span></code><span class="ne-text">, <code class="ne-code"><span class="ne-text">--version</span></code></span></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="ue7e93d58" data-lake-index-type="0"><span class="ne-text">功能：打印 rtpengine 的版本号并退出。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u60028131" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--codecs</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="ue4ffcbbc" data-lake-index-type="0"><span class="ne-text">功能：打印支持的编解码器列表并退出。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u5cb226da" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--config-file=FILE</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u1c5eb4a1" data-lake-index-type="0"><span class="ne-text">功能：指定要使用的配置文件的位置。配置文件采用 <code class="ne-code"><span class="ne-text">.ini</span></code><span class="ne-text"> 格式。命令行中指定的参数会覆盖配置文件中的相同参数。如果希望禁止加载默认配置文件 (<code class="ne-code"><span class="ne-text">/etc/rtpengine/rtpengine.conf</span></code><span class="ne-text">)，可以将 <code class="ne-code"><span class="ne-text">FILE</span></code><span class="ne-text"> 设置为 <code class="ne-code"><span class="ne-text">none</span></code><span class="ne-text">。</span></span></span></span></span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u7adc0a1b" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--config-section=STRING</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u601d06b2" data-lake-index-type="0"><span class="ne-text">功能：指定在配置文件中使用的 <code class="ne-code"><span class="ne-text">.ini</span></code><span class="ne-text"> 部分。默认值为 <code class="ne-code"><span class="ne-text">rtpengine</span></code><span class="ne-text">。</span></span></span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u693b49b6" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">-t</span></code><span class="ne-text">, <code class="ne-code"><span class="ne-text">--table=INT</span></code></span></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="uccaa2761" data-lake-index-type="0"><span class="ne-text">功能：指定用于内核数据包转发的内核表 ID。默认为 0。如果不需要内核级转发，可以设置为负数。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="ueb60640a" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--nftables-chain=CHAIN</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="ua76f02ff" data-lake-index-type="0"><span class="ne-text">功能：指定用于创建自定义转发规则的 netfilter 链的名称，以便进行内核数据包转发。默认为 <code class="ne-code"><span class="ne-text">rtpengine</span></code><span class="ne-text">。仅当启用了内核数据包转发时（<code class="ne-code"><span class="ne-text">table</span></code><span class="ne-text"> 设置为 0 或更高）才使用此选项。</span></span></span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="ua69cc6cd" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--nftables-base-chain=CHAIN</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="ueb203fbc" data-lake-index-type="0"><span class="ne-text">功能：指定用作内核数据包转发生效点的 netfilter 基础链的名称。默认为 <code class="ne-code"><span class="ne-text">INPUT</span></code><span class="ne-text">。仅当 <code class="ne-code"><span class="ne-text">nftables-chain</span></code><span class="ne-text"> 选项激活时适用。</span></span></span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="ufef2f8f8" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--nftables-append</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u47fb60c1" data-lake-index-type="0"><span class="ne-text">功能：如果设置此选项，则在基础链中创建的 netfilter 规则将附加到现有规则列表的末尾。默认行为是将其前置（插入到开头）。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="uc29e1dcd" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--nftables-family=ip|ip6|ip,ip6</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u87b9b511" data-lake-index-type="0"><span class="ne-text">功能：配置要管理表、链和规则的 netfilter 地址族。默认为同时管理 IPv4 和 IPv6 地址族。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="uf63729c4" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--nftables-start</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u1a583f15" data-lake-index-type="0"><span class="ne-text">功能：指示 rtpengine 执行 <code class="ne-code"><span class="ne-text">nftables-chain</span></code><span class="ne-text"> 和 <code class="ne-code"><span class="ne-text">nftables-base-chain</span></code><span class="ne-text"> 下描述的操作，然后立即退出。用于手动重新创建规则。</span></span></span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u9be2df39" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--nftables-stop</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="ua4047fc9" data-lake-index-type="0"><span class="ne-text">功能：指示 rtpengine 执行 <code class="ne-code"><span class="ne-text">nftables-chain</span></code><span class="ne-text"> 和 <code class="ne-code"><span class="ne-text">nftables-base-chain</span></code><span class="ne-text"> 下描述的删除操作，然后立即退出。用于手动删除规则。</span></span></span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u4ca976eb" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--nftables-status</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u885cb9d7" data-lake-index-type="0"><span class="ne-text">功能：指示 rtpengine 检查所管理的 netfilter 规则和链是否存在，打印检查结果，然后退出。如果检查成功，进程将以代码 0 退出，否则以 1 退出。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="ue7e9bd34" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">-F</span></code><span class="ne-text">, <code class="ne-code"><span class="ne-text">--no-fallback</span></code></span></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u15fd492f" data-lake-index-type="0"><span class="ne-text">功能：如果内核模块不可用，则阻止回退到仅用户空间操作。如果给出此选项，守护进程启动将失败并报错。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="ucdc1b30f" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--templates=STR</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u7e58dcf2" data-lake-index-type="0"><span class="ne-text">功能：包含信令模板的配置文件部分的名称。要求使用配置文件。默认值未设置。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="ue0130807" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">-S</span></code><span class="ne-text">, <code class="ne-code"><span class="ne-text">--save-interface-ports</span></code></span></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u1e584477" data-lake-index-type="0"><span class="ne-text">功能：仅在逻辑接口的第一个可用的本地接口（所需系列）上绑定端口。如果所需系列的任何本地接口上没有可用端口，则给出错误消息。在这种情况下，ICE 将中断。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u779269af" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">-i</span></code><span class="ne-text">, <code class="ne-code"><span class="ne-text">--interface=[NAME/]IP[!IP]</span></code></span></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u341b52c5" data-lake-index-type="0"><span class="ne-text">功能：为 RTP 指定本地网络接口。必须至少指定一个，但可以指定多个。详细信息请参阅 INTERFACES 部分。</span></li>
</ul>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u544d6955" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">NAME</span></code><span class="ne-text">: 可选的接口名称，例如 <code class="ne-code"><span class="ne-text">eth0</span></code><span class="ne-text">。</span></span></li>
<li id="u32837e05" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">IP</span></code><span class="ne-text">: 本地 IP 地址。</span></li>
<li id="u375b1831" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">!IP</span></code><span class="ne-text">: 可选的外部宣告 IP 地址 (NAT 场景)。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u9a202450" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">-l</span></code><span class="ne-text">, <code class="ne-code"><span class="ne-text">--listen-tcp=[IP:]PORT</span></code></span></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="udd3b98fd" data-lake-index-type="0"><span class="ne-text">功能：启用 TCP 控制协议，并指定监听的 IP 地址和端口。此协议已过时，用于旧版 OpenSER。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u926d6a4b" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">-u</span></code><span class="ne-text">, <code class="ne-code"><span class="ne-text">--listen-udp=[IP46:]PORT</span></code></span></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u01b5f1cf" data-lake-index-type="0"><span class="ne-text">功能：启用 UDP 控制协议，并指定监听的 IP 地址和端口。Kamailio 的 <code class="ne-code"><span class="ne-text">rtpproxy</span></code><span class="ne-text"> 模块使用此协议。</span></span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u42e67db8" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">-n</span></code><span class="ne-text">, <code class="ne-code"><span class="ne-text">--listen-ng=[IP46:]PORT</span></code></span></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u9147a74c" data-lake-index-type="0"><span class="ne-text">功能：启用 NG 控制协议 (基于 UDP)，并指定监听的 IP 地址和端口。这是推荐的高级控制协议。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u3df364a6" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--listen-tcp-ng=[IP46:]PORT</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="ufbdaeed7" data-lake-index-type="0"><span class="ne-text">功能：启用基于 TCP 的 NG 控制协议，并指定监听的 IP 地址和端口。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="udd631b25" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--listen-http=[IP46:]PORT</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u78f24404" data-lake-index-type="0"><span class="ne-text">功能：启用基于 HTTP 的控制协议，并指定监听的 IP 地址和端口。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u7286cf44" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--listen-https=[IP46:]PORT</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u886a872a" data-lake-index-type="0"><span class="ne-text">功能：启用基于 HTTPS 的控制协议，并指定监听的 IP 地址和端口。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u1c579ae3" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--listen-ws=[IP46:]PORT</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u0bf532cb" data-lake-index-type="0"><span class="ne-text">功能：启用基于 WebSocket (WS) 的控制协议，并指定监听的 IP 地址和端口。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="uc8276b3b" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--listen-wss=[IP46:]PORT</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u812469dd" data-lake-index-type="0"><span class="ne-text">功能：启用基于 Secure WebSocket (WSS) 的控制协议，并指定监听的 IP 地址和端口。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u21ef0aab" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--foreground</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u9c47f36e" data-lake-index-type="0"><span class="ne-text">功能：使 rtpengine 在前台运行，而不是作为守护进程分离到后台。主要用于调试。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u282cba3a" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--pidfile=FILE</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u83cadf3b" data-lake-index-type="0"><span class="ne-text">功能：指定 PID 文件的位置。默认为 <code class="ne-code"><span class="ne-text">/run/rtpengine/rtpengine.pid</span></code><span class="ne-text">。</span></span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u11bf267f" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--user=USER</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u64935e73" data-lake-index-type="0"><span class="ne-text">功能：指定运行 rtpengine 进程的用户。需要 root 权限才能切换用户。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="uf26bbe9c" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--group=GROUP</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u5f37ff81" data-lake-index-type="0"><span class="ne-text">功能：指定运行 rtpengine 进程的组。需要 root 权限才能切换组。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u5ae106a4" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--port-min=PORT</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u1dfeae19" data-lake-index-type="0"><span class="ne-text">功能：指定 RTP 使用的最小端口号。默认为 30000。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="udb047562" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--port-max=PORT</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="ueef999f1" data-lake-index-type="0"><span class="ne-text">功能：指定 RTP 使用的最大端口号。默认为 40000。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u9e92d6c7" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--max-sessions=NUM</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u4d479ed7" data-lake-index-type="0"><span class="ne-text">功能：设置 rtpengine 可以处理的最大并发会话数。默认为 5000。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u01f30b1c" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--max-load=NUM</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u311eb921" data-lake-index-type="0"><span class="ne-text">功能：设置 rtpengine 的最大负载阈值。如果当前负载超过此值，新的会话请求可能会被拒绝。默认为 0 (无限制)。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="uccb7cacf" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--max-cpu=NUM</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u76a9c4c2" data-lake-index-type="0"><span class="ne-text">功能：设置 rtpengine 进程允许使用的最大 CPU 百分比。默认为 0 (无限制)。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u38e92770" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--max-bandwidth=NUM</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u8c1017ea" data-lake-index-type="0"><span class="ne-text">功能：设置 rtpengine 允许使用的最大带宽 (以 Mbps 为单位)。默认为 0 (无限制)。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u3dd4bb7a" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--log-level=INT</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u16076baa" data-lake-index-type="0"><span class="ne-text">功能：设置日志级别。级别越高，日志越详细。范围通常从 0 (无日志) 到 7 (调试)。默认为 6。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="ue6743217" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--log-facility=daemon|local0|...|local7</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="uc50bbd93" data-lake-index-type="0"><span class="ne-text">功能：设置 syslog 日志记录的 facility。默认为 <code class="ne-code"><span class="ne-text">daemon</span></code><span class="ne-text">。</span></span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="ua275e30e" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--log-stderr</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u4d053ecb" data-lake-index-type="0"><span class="ne-text">功能：除了 syslog 外，还将日志消息打印到标准错误输出。主要用于调试。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="ua3c04ff5" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--num-threads=INT</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="ue103eda9" data-lake-index-type="0"><span class="ne-text">功能：指定用于处理媒体流的工作线程数。默认为内核数。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="uaca0ad29" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--delete-delay=SECONDS</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u0e57e851" data-lake-index-type="0"><span class="ne-text">功能：在会话结束后延迟删除会话状态的时间（秒）。默认为 60。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="ud6f367f0" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--silent-timeout=SECONDS</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="uaf26af67" data-lake-index-type="0"><span class="ne-text">功能：在媒体流静默多少秒后超时并关闭会话。默认为 0 (禁用)。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u3b43ac32" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--timeout=SECONDS</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="ubc95422f" data-lake-index-type="0"><span class="ne-text">功能：媒体会话的总超时时间（秒）。默认为 0 (禁用)。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u156bb7ca" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--final-timeout=SECONDS</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u85a7e263" data-lake-index-type="0"><span class="ne-text">功能：在收到 <code class="ne-code"><span class="ne-text">delete</span></code><span class="ne-text"> 命令后，等待多长时间（秒）再最终清除会话。默认为 3600 (1小时)。</span></span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="uc8dc1ef5" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--offer-timeout=SECONDS</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u47dff2d9" data-lake-index-type="0"><span class="ne-text">功能：等待 <code class="ne-code"><span class="ne-text">answer</span></code><span class="ne-text"> 的超时时间（秒）。默认为 3600 (1小时)。</span></span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="ubb14cefa" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--tos=TOS</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u3303f2e2" data-lake-index-type="0"><span class="ne-text">功能：为出站 RTP 数据包设置 IP 服务类型 (TOS) 字段。默认为 184 (EF - Expedited Forwarding)。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u3272c302" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--control-tos=TOS</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="ucf05b347" data-lake-index-type="0"><span class="ne-text">功能：为出站控制协议数据包设置 IP 服务类型 (TOS) 字段。默认为 184。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="uaa36951d" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--recording-dir=PATH</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u787825d8" data-lake-index-type="0"><span class="ne-text">功能：指定录音文件的存储目录。默认为 <code class="ne-code"><span class="ne-text">/var/spool/rtpengine</span></code><span class="ne-text">。</span></span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="uc871d7c0" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--recording-method=pcap|proc</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u7ce67fbe" data-lake-index-type="0"><span class="ne-text">功能：指定录音方法。<code class="ne-code"><span class="ne-text">pcap</span></code><span class="ne-text"> 使用 libpcap 进行抓包，<code class="ne-code"><span class="ne-text">proc</span></code><span class="ne-text"> 通过 <code class="ne-code"><span class="ne-text">/proc</span></code><span class="ne-text"> 文件系统接口进行录音。默认为 <code class="ne-code"><span class="ne-text">pcap</span></code><span class="ne-text">。</span></span></span></span></span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="uea8934b5" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--recording-format=raw|eth</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u4b8e9d17" data-lake-index-type="0"><span class="ne-text">功能：指定录音文件的格式。<code class="ne-code"><span class="ne-text">raw</span></code><span class="ne-text"> 只包含 RTP 载荷，<code class="ne-code"><span class="ne-text">eth</span></code><span class="ne-text"> 包含完整的以太网帧。默认为 <code class="ne-code"><span class="ne-text">raw</span></code><span class="ne-text">。</span></span></span></span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="uae47c1a2" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--max-recordings=NUM</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="uf6b0afcd" data-lake-index-type="0"><span class="ne-text">功能：允许同时进行的最大录音数量。默认为 0 (无限制)。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u5f105ad5" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--homer-id=ID</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u4223c7c8" data-lake-index-type="0"><span class="ne-text">功能：为与 Homer (SIP/RTC 监控系统) 集成指定捕获代理 ID。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="uf4b5574f" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--homer-ip=IP</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="ua9b0dbe6" data-lake-index-type="0"><span class="ne-text">功能：指定 Homer 服务器的 IP 地址。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u6fd2f01d" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--homer-port=PORT</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u2f64044a" data-lake-index-type="0"><span class="ne-text">功能：指定 Homer 服务器的端口号。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u89720870" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--homer-protocol=udp|tcp</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="ubbb1f357" data-lake-index-type="0"><span class="ne-text">功能：指定与 Homer 服务器通信的协议。默认为 <code class="ne-code"><span class="ne-text">udp</span></code><span class="ne-text">。</span></span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="ua973688c" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--redis=IP:PORT</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u22766137" data-lake-index-type="0"><span class="ne-text">功能：指定 Redis 服务器的 IP 地址和端口，用于存储会话信息等。可以指定多个，用分号分隔。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u40ea3665" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--redis-write=IP:PORT</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u67e90cc6" data-lake-index-type="0"><span class="ne-text">功能：指定用于写入操作的 Redis 服务器。如果未指定，则使用 <code class="ne-code"><span class="ne-text">--redis</span></code><span class="ne-text"> 指定的服务器。</span></span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="uf76b1e52" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--redis-db=INT</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="ubd69b0a9" data-lake-index-type="0"><span class="ne-text">功能：指定 Redis 数据库编号。默认为 0。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u867ae55b" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--redis-password=PASSWORD</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u57ba588e" data-lake-index-type="0"><span class="ne-text">功能：指定连接 Redis 服务器的密码。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="udd04cf4a" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--redis-prefix=PREFIX</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u1174edf8" data-lake-index-type="0"><span class="ne-text">功能：为 Redis 中存储的键添加前缀。默认为 <code class="ne-code"><span class="ne-text">rtpengine</span></code><span class="ne-text">。</span></span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u4aa5ea70" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--redis-subscribe</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u910e37ab" data-lake-index-type="0"><span class="ne-text">功能：使 rtpengine 订阅 Redis 键空间通知，用于集群模式下的会话同步。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="ubb924654" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--b2b-url=URL</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u5d21f66a" data-lake-index-type="0"><span class="ne-text">功能：指定 B2BUA (背靠背用户代理) 的 XML-RPC URL，用于高级呼叫控制功能。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u63defce0" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--xmlrpc-format=INT</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u522cc245" data-lake-index-type="0"><span class="ne-text">功能：指定与 B2BUA 通信时使用的 XML-RPC 格式版本。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="uedf2782f" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--sip-source</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u0f6bf816" data-lake-index-type="0"><span class="ne-text">功能：启用 SIP 源地址跟踪，用于防止欺骗。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u4b63de6f" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--dtls-passive</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u7342cf61" data-lake-index-type="0"><span class="ne-text">功能：使 rtpengine 在 DTLS 握手中充当被动方 (服务器)。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u4daec4a7" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--dtls-certificate=FILE</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="ub3d5bf8a" data-lake-index-type="0"><span class="ne-text">功能：指定 DTLS 使用的证书文件路径。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u4d7cf593" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--dtls-privatekey=FILE</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="uc0c315cf" data-lake-index-type="0"><span class="ne-text">功能：指定 DTLS 使用的私钥文件路径。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="uf14cd2e2" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--dtls-mtu=MTU</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u8ac0d625" data-lake-index-type="0"><span class="ne-text">功能：设置 DTLS 记录层的最大传输单元 (MTU)。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="uaabde584" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--max-connections=NUM</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="ueded5a2a" data-lake-index-type="0"><span class="ne-text">功能：控制协议监听器接受的最大并发连接数。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="ud17bf01b" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--media-address-family=ipv4|ipv6</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u529cc8e2" data-lake-index-type="0"><span class="ne-text">功能：优先使用的媒体地址族。默认为 <code class="ne-code"><span class="ne-text">ipv4</span></code><span class="ne-text">。</span></span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="ube383cd4" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--always-transcode</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u5577aba6" data-lake-index-type="0"><span class="ne-text">功能：即使编解码器匹配，也强制进行转码。主要用于测试或特定场景。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u4e1e3ea6" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--transcoding-paths=PATH1;PATH2...</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="ua4e62c8f" data-lake-index-type="0"><span class="ne-text">功能：指定转码模块的搜索路径。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="ub214e568" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--in-process-transcoding</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u61a81cdb" data-lake-index-type="0"><span class="ne-text">功能：在 rtpengine 主进程中执行转码，而不是派生子进程。可能会影响性能。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u06d48b87" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--max-transcode-load=NUM</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="ua797deea" data-lake-index-type="0"><span class="ne-text">功能：转码操作的最大负载。默认为 0 (无限制)。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u06a6eab6" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--transcode-buffer=MILLISECONDS</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u3fa863f3" data-lake-index-type="0"><span class="ne-text">功能：转码时使用的抖动缓冲区大小（毫秒）。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u9f724821" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--graphite-host=HOST</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u0c5d260e" data-lake-index-type="0"><span class="ne-text">功能：指定 Graphite 服务器的主机名或 IP 地址，用于发送统计信息。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="ue8c50cac" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--graphite-port=PORT</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="udb67899e" data-lake-index-type="0"><span class="ne-text">功能：指定 Graphite 服务器的端口号。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="ucc5a69fd" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--graphite-prefix=PREFIX</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="uf7b9c12d" data-lake-index-type="0"><span class="ne-text">功能：为发送到 Graphite 的统计信息键添加前缀。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u4ebf306a" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--graphite-interval=SECONDS</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="udacc26cb" data-lake-index-type="0"><span class="ne-text">功能：发送统计信息到 Graphite 的时间间隔（秒）。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u92e4a799" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--prometheus-listen=[IP:]PORT</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u80540431" data-lake-index-type="0"><span class="ne-text">功能：启用 Prometheus 指标导出器，并指定监听的 IP 地址和端口。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="uaa17f611" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--cluster-id=ID</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u45c49ec2" data-lake-index-type="0"><span class="ne-text">功能：指定 rtpengine 实例所属的集群 ID。用于集群部署。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="ue98a9d63" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--write-pid</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u0ad07ff5" data-lake-index-type="0"><span class="ne-text">功能：强制写入 PID 文件，即使在前台模式下运行。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u099783da" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--no-media-loop</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u81d85fc4" data-lake-index-type="0"><span class="ne-text">功能：禁止将媒体流环回到同一接口。某些情况下可能需要禁用此选项。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u91e41df7" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--jitter-buffer=MILLISECONDS</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u32a12d0b" data-lake-index-type="0"><span class="ne-text">功能：设置默认的抖动缓冲区大小（毫秒）。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u8de86137" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--max-jitter-buffer=MILLISECONDS</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u4bb14781" data-lake-index-type="0"><span class="ne-text">功能：设置最大的抖动缓冲区大小（毫秒）。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="uc87e301a" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--log-srtp-keys</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u3f116891" data-lake-index-type="0"><span class="ne-text">功能：在日志中记录 SRTP 密钥。<strong>警告：这会暴露敏感信息，仅用于调试目的！</strong></span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="ueaedd3da" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--mysql-host=HOST</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="udbf91f4b" data-lake-index-type="0"><span class="ne-text">功能：指定 MySQL 服务器的主机名或 IP 地址。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u6467178c" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--mysql-port=PORT</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u60b6549c" data-lake-index-type="0"><span class="ne-text">功能：指定 MySQL 服务器的端口号。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u40118e57" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--mysql-user=USER</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="ueab27891" data-lake-index-type="0"><span class="ne-text">功能：指定连接 MySQL 服务器的用户名。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u97ac0f46" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--mysql-password=PASSWORD</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u4630755e" data-lake-index-type="0"><span class="ne-text">功能：指定连接 MySQL 服务器的密码。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u0dab295f" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--mysql-database=DATABASE</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u0d9d9700" data-lake-index-type="0"><span class="ne-text">功能：指定要使用的 MySQL 数据库名称。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u07a4968b" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--mysql-table=TABLE</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u4aa70ed4" data-lake-index-type="0"><span class="ne-text">功能：指定用于存储会话信息的 MySQL 表名。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u63d04193" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--subscribe-replication-stats</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u8a462ed0" data-lake-index-type="0"><span class="ne-text">功能：订阅 Redis 主从复制统计信息，用于监控集群健康状况。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u668e9a2e" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--subscribe-keyspace-events</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u07677345" data-lake-index-type="0"><span class="ne-text">功能：订阅 Redis 键空间事件，用于集群会话同步。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="uf033e50e" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">--extra-flags=FLAG1;FLAG2...</span></code></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="ued521336" data-lake-index-type="0"><span class="ne-text">功能：设置额外的内部标志，通常用于调试或启用实验性功能。</span></li>
</ul>
</ul>
<p id="ue8309911" class="ne-p">&nbsp;</p>
<p id="u0923c54b" class="ne-p"><span class="ne-text">请注意，上述列表可能并非详尽无遗，具体可用的参数及其行为可能会因 rtpengine 的编译选项和具体子版本而略有不同。始终建议参考您所使用版本的官方文档或通过 <code class="ne-code"><span class="ne-text">rtpengine --help</span></code><span class="ne-text"> 命令获取最准确的信息。</span></span></p>
<p id="u1f04252e" class="ne-p">&nbsp;</p>
<p id="ucc7d3c95" class="ne-p">&nbsp;</p>
<h2 id="MzTM1"><span class="ne-text">Rtpengine mr13.1.1.6 rtpengine.conf 配置文件参数</span></h2>
<p id="u263887b5" class="ne-p"><span class="ne-text">本部分将详细介绍 rtpengine mr13.1.1.6 版本中 <code class="ne-code"><span class="ne-text">rtpengine.conf</span></code><span class="ne-text"> 配置文件的参数。该配置文件通常位于 <code class="ne-code"><span class="ne-text">/etc/rtpengine/rtpengine.conf</span></code><span class="ne-text">，并采用 <code class="ne-code"><span class="ne-text">.ini</span></code><span class="ne-text"> 文件格式。</span></span></span></span></p>
<h3 id="z2CJh"><span class="ne-text">配置文件格式</span></h3>
<p id="u7425038a" class="ne-p"><code class="ne-code"><span class="ne-text">rtpengine.conf</span></code><span class="ne-text"> 文件使用标准的 <code class="ne-code"><span class="ne-text">.ini</span></code><span class="ne-text"> 格式。主要配置通常位于一个或多个节 (section) 中，节名由方括号包围，例如 <code class="ne-code"><span class="ne-text">[rtpengine]</span></code><span class="ne-text">。通过 <code class="ne-code"><span class="ne-text">--config-section</span></code><span class="ne-text"> 启动参数可以选择加载哪个节的配置，默认为 <code class="ne-code"><span class="ne-text">rtpengine</span></code><span class="ne-text">。</span></span></span></span></span></p>
<p id="ufd33c586" class="ne-p"><span class="ne-text">大多数命令行启动参数都可以在配置文件中设置，规则如下：</span></p>
<ol class="ne-ol">
<li id="u4b20aa98" data-lake-index-type="0"><strong>参数名称</strong><span class="ne-text">：使用参数的完整长名称 (long name)，而不是单字符的短名称。例如，命令行中的 <code class="ne-code"><span class="ne-text">-t</span></code><span class="ne-text"> 或 <code class="ne-code"><span class="ne-text">--table</span></code><span class="ne-text"> 在配置文件中应写为 <code class="ne-code"><span class="ne-text">table</span></code><span class="ne-text">。</span></span></span></span></li>
<li id="ub1b91a72" data-lake-index-type="0"><strong>参数值</strong><span class="ne-text">：</span></li>
</ol>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u1a8ef974" data-lake-index-type="0"><span class="ne-text">对于需要值的参数，使用 <code class="ne-code"><span class="ne-text">参数名 = 值</span></code><span class="ne-text"> 的格式。例如：<code class="ne-code"><span class="ne-text">table = 0</span></code><span class="ne-text">。</span></span></span></li>
<li id="u5f8e02d9" data-lake-index-type="0"><span class="ne-text">对于布尔类型的启动参数 (例如 <code class="ne-code"><span class="ne-text">--no-fallback</span></code><span class="ne-text">)，在配置文件中应写为 <code class="ne-code"><span class="ne-text">参数名 = true</span></code><span class="ne-text"> 或 <code class="ne-code"><span class="ne-text">参数名 = false</span></code><span class="ne-text">。例如：<code class="ne-code"><span class="ne-text">no-fallback = false</span></code><span class="ne-text">。</span></span></span></span></span></li>
<li id="ue6d86516" data-lake-index-type="0"><span class="ne-text">对于可以多次指定的启动参数 (例如 <code class="ne-code"><span class="ne-text">--interface</span></code><span class="ne-text">)，在配置文件中只写一次，多个值之间用分号 (<code class="ne-code"><span class="ne-text">;</span></code><span class="ne-text">) 分隔。例如：<code class="ne-code"><span class="ne-text">interface = eth0/192.168.1.10!1.2.3.4;eth1/10.0.0.5</span></code><span class="ne-text">。</span></span></span></span></li>
</ul>
</ul>
<ol class="ne-ol" start="3">
<li id="u3f8412b0" data-lake-index-type="0"><strong>优先级</strong><span class="ne-text">：如果在命令行和配置文件中都指定了同一个参数，则命令行中的值会覆盖配置文件中的值。</span></li>
<li id="uba3eee3f" data-lake-index-type="0"><strong>注释</strong><span class="ne-text">：以 <code class="ne-code"><span class="ne-text">#</span></code><span class="ne-text"> 或 <code class="ne-code"><span class="ne-text">;</span></code><span class="ne-text"> 开头的行被视为注释。</span></span></span></li>
</ol>
<h3 id="rAaPC"><span class="ne-text">主要配置参数</span></h3>
<p id="u9fa218c8" class="ne-p"><span class="ne-text">以下列出的参数基于先前整理的进程启动参数，它们均可在 <code class="ne-code"><span class="ne-text">rtpengine.conf</span></code><span class="ne-text"> 文件中使用。请参考本文档的“Rtpengine mr13.1.1.6 进程启动参数”章节获取各参数的详细功能说明。</span></span></p>
<p id="u479082d4" class="ne-p"><strong>常规配置</strong></p>
<ul class="ne-ul">
<li id="u4dac57b0" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">table = INT</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--table</span></code><span class="ne-text">)</span></span></li>
<li id="u5ed9e299" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">no-fallback = true|false</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--no-fallback</span></code><span class="ne-text">)</span></span></li>
<li id="u4e552639" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">pidfile = FILE</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--pidfile</span></code><span class="ne-text">)</span></span></li>
<li id="u5c90a0fb" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">user = USER</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--user</span></code><span class="ne-text">)</span></span></li>
<li id="u7e562839" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">group = GROUP</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--group</span></code><span class="ne-text">)</span></span></li>
</ul>
<p id="uc3142adf" class="ne-p"><strong>网络接口与监听</strong></p>
<ul class="ne-ul">
<li id="ua7de7dcd" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">interface = [NAME/]IP[!IP];[NAME/]IP[!IP];...</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--interface</span></code><span class="ne-text">)</span></span></li>
<li id="u2bb24ae2" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">listen-tcp = [IP:]PORT</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--listen-tcp</span></code><span class="ne-text">)</span></span></li>
<li id="u89c14dd9" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">listen-udp = [IP46:]PORT</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--listen-udp</span></code><span class="ne-text">)</span></span></li>
<li id="u76a178e3" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">listen-ng = [IP46:]PORT</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--listen-ng</span></code><span class="ne-text">)</span></span></li>
<li id="u7d8a59ee" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">listen-tcp-ng = [IP46:]PORT</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--listen-tcp-ng</span></code><span class="ne-text">)</span></span></li>
<li id="u68256c9f" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">listen-http = [IP46:]PORT</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--listen-http</span></code><span class="ne-text">)</span></span></li>
<li id="udfcedf46" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">listen-https = [IP46:]PORT</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--listen-https</span></code><span class="ne-text">)</span></span></li>
<li id="u8a5a034f" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">listen-ws = [IP46:]PORT</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--listen-ws</span></code><span class="ne-text">)</span></span></li>
<li id="ua0abaad2" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">listen-wss = [IP46:]PORT</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--listen-wss</span></code><span class="ne-text">)</span></span></li>
<li id="u9eb21239" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">save-interface-ports = true|false</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--save-interface-ports</span></code><span class="ne-text">)</span></span></li>
</ul>
<p id="uf4768d45" class="ne-p"><strong>端口与会话限制</strong></p>
<ul class="ne-ul">
<li id="u23741ebc" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">port-min = PORT</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--port-min</span></code><span class="ne-text">)</span></span></li>
<li id="u680830a4" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">port-max = PORT</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--port-max</span></code><span class="ne-text">)</span></span></li>
<li id="u1b39e17d" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">max-sessions = NUM</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--max-sessions</span></code><span class="ne-text">)</span></span></li>
</ul>
<p id="u87f9f0a9" class="ne-p"><strong>性能与资源限制</strong></p>
<ul class="ne-ul">
<li id="u6d2d3a44" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">max-load = NUM</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--max-load</span></code><span class="ne-text">)</span></span></li>
<li id="u31c0f50c" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">max-cpu = NUM</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--max-cpu</span></code><span class="ne-text">)</span></span></li>
<li id="u7c492b17" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">max-bandwidth = NUM</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--max-bandwidth</span></code><span class="ne-text">)</span></span></li>
<li id="ua36ee0e5" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">num-threads = INT</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--num-threads</span></code><span class="ne-text">)</span></span></li>
</ul>
<p id="u3268af47" class="ne-p"><strong>日志记录</strong></p>
<ul class="ne-ul">
<li id="u25df06d2" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">log-level = INT</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--log-level</span></code><span class="ne-text">)</span></span></li>
<li id="ub17bb1e7" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">log-facility = daemon|local0|...|local7</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--log-facility</span></code><span class="ne-text">)</span></span></li>
<li id="u0f2475b7" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">log-stderr = true|false</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--log-stderr</span></code><span class="ne-text">)</span></span></li>
</ul>
<p id="ube5d21eb" class="ne-p"><strong>超时设置</strong></p>
<ul class="ne-ul">
<li id="u6a13d134" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">delete-delay = SECONDS</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--delete-delay</span></code><span class="ne-text">)</span></span></li>
<li id="ufc1c1a3c" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">silent-timeout = SECONDS</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--silent-timeout</span></code><span class="ne-text">)</span></span></li>
<li id="ud4ab909e" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">timeout = SECONDS</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--timeout</span></code><span class="ne-text">)</span></span></li>
<li id="ua4d7f728" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">final-timeout = SECONDS</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--final-timeout</span></code><span class="ne-text">)</span></span></li>
<li id="uf23e5731" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">offer-timeout = SECONDS</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--offer-timeout</span></code><span class="ne-text">)</span></span></li>
</ul>
<p id="ubb316e17" class="ne-p"><strong>服务质量 (TOS)</strong></p>
<ul class="ne-ul">
<li id="u1e214bef" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">tos = TOS</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--tos</span></code><span class="ne-text">)</span></span></li>
<li id="u433457a0" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">control-tos = TOS</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--control-tos</span></code><span class="ne-text">)</span></span></li>
</ul>
<p id="u9b3ee16d" class="ne-p"><strong>录音功能</strong></p>
<ul class="ne-ul">
<li id="u8fd312dd" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">recording-dir = PATH</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--recording-dir</span></code><span class="ne-text">)</span></span></li>
<li id="u9f03f7a4" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">recording-method = pcap|proc</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--recording-method</span></code><span class="ne-text">)</span></span></li>
<li id="uacf8e28f" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">recording-format = raw|eth</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--recording-format</span></code><span class="ne-text">)</span></span></li>
<li id="u67addb70" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">max-recordings = NUM</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--max-recordings</span></code><span class="ne-text">)</span></span></li>
</ul>
<p id="u57093481" class="ne-p"><strong>Homer 集成</strong></p>
<ul class="ne-ul">
<li id="u2b1afde1" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">homer-id = ID</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--homer-id</span></code><span class="ne-text">)</span></span></li>
<li id="ue6101c37" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">homer-ip = IP</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--homer-ip</span></code><span class="ne-text">)</span></span></li>
<li id="u727625c7" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">homer-port = PORT</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--homer-port</span></code><span class="ne-text">)</span></span></li>
<li id="u893ae699" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">homer-protocol = udp|tcp</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--homer-protocol</span></code><span class="ne-text">)</span></span></li>
</ul>
<p id="u4b9874cd" class="ne-p"><strong>Redis 集成 (用于集群和持久化)</strong></p>
<ul class="ne-ul">
<li id="u8207cb28" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">redis = IP:PORT;IP:PORT;...</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--redis</span></code><span class="ne-text">)</span></span></li>
<li id="u0545edd7" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">redis-write = IP:PORT</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--redis-write</span></code><span class="ne-text">)</span></span></li>
<li id="u126c7ef2" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">redis-db = INT</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--redis-db</span></code><span class="ne-text">)</span></span></li>
<li id="u4d78b4bf" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">redis-password = PASSWORD</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--redis-password</span></code><span class="ne-text">)</span></span></li>
<li id="u01ed865b" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">redis-prefix = PREFIX</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--redis-prefix</span></code><span class="ne-text">)</span></span></li>
<li id="uc7f8febd" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">redis-subscribe = true|false</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--redis-subscribe</span></code><span class="ne-text">)</span></span></li>
<li id="u85425537" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">subscribe-replication-stats = true|false</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--subscribe-replication-stats</span></code><span class="ne-text">)</span></span></li>
<li id="u0bcfedbf" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">subscribe-keyspace-events = true|false</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--subscribe-keyspace-events</span></code><span class="ne-text">)</span></span></li>
</ul>
<p id="u80f69e6b" class="ne-p"><strong>B2BUA 集成</strong></p>
<ul class="ne-ul">
<li id="u7228e402" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">b2b-url = URL</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--b2b-url</span></code><span class="ne-text">)</span></span></li>
<li id="u83d7d686" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">xmlrpc-format = INT</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--xmlrpc-format</span></code><span class="ne-text">)</span></span></li>
</ul>
<p id="ua4810639" class="ne-p"><strong>安全与 DTLS</strong></p>
<ul class="ne-ul">
<li id="u96f5a2a4" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">sip-source = true|false</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--sip-source</span></code><span class="ne-text">)</span></span></li>
<li id="u770c1297" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">dtls-passive = true|false</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--dtls-passive</span></code><span class="ne-text">)</span></span></li>
<li id="ubf5bae77" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">dtls-certificate = FILE</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--dtls-certificate</span></code><span class="ne-text">)</span></span></li>
<li id="u24eea6f9" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">dtls-privatekey = FILE</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--dtls-privatekey</span></code><span class="ne-text">)</span></span></li>
<li id="u2a815050" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">dtls-mtu = MTU</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--dtls-mtu</span></code><span class="ne-text">)</span></span></li>
<li id="u3f60292a" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">log-srtp-keys = true|false</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--log-srtp-keys</span></code><span class="ne-text">) <strong>警告：仅用于调试！</strong></span></span></li>
</ul>
<p id="uadb5fdb5" class="ne-p"><strong>转码</strong></p>
<ul class="ne-ul">
<li id="ub7323bc0" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">always-transcode = true|false</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--always-transcode</span></code><span class="ne-text">)</span></span></li>
<li id="u22f10425" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">transcoding-paths = PATH1;PATH2...</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--transcoding-paths</span></code><span class="ne-text">)</span></span></li>
<li id="u229bf827" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">in-process-transcoding = true|false</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--in-process-transcoding</span></code><span class="ne-text">)</span></span></li>
<li id="u4c52f3fe" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">max-transcode-load = NUM</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--max-transcode-load</span></code><span class="ne-text">)</span></span></li>
<li id="u5eff5145" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">transcode-buffer = MILLISECONDS</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--transcode-buffer</span></code><span class="ne-text">)</span></span></li>
</ul>
<p id="ud1cefe81" class="ne-p"><strong>统计与监控 (Graphite, Prometheus)</strong></p>
<ul class="ne-ul">
<li id="u825aef75" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">graphite-host = HOST</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--graphite-host</span></code><span class="ne-text">)</span></span></li>
<li id="uf04f647a" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">graphite-port = PORT</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--graphite-port</span></code><span class="ne-text">)</span></span></li>
<li id="u8237eddf" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">graphite-prefix = PREFIX</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--graphite-prefix</span></code><span class="ne-text">)</span></span></li>
<li id="ue6d5ade6" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">graphite-interval = SECONDS</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--graphite-interval</span></code><span class="ne-text">)</span></span></li>
<li id="u040bb354" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">prometheus-listen = [IP:]PORT</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--prometheus-listen</span></code><span class="ne-text">)</span></span></li>
</ul>
<p id="u5bbc3023" class="ne-p"><strong>内核模块与 nftables (通常在启动参数中指定，但也可在配置文件中)</strong></p>
<ul class="ne-ul">
<li id="u1116790a" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">nftables-chain = CHAIN</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--nftables-chain</span></code><span class="ne-text">)</span></span></li>
<li id="uc2b1e698" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">nftables-base-chain = CHAIN</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--nftables-base-chain</span></code><span class="ne-text">)</span></span></li>
<li id="u51c5deeb" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">nftables-append = true|false</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--nftables-append</span></code><span class="ne-text">)</span></span></li>
<li id="u6d4595ed" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">nftables-family = ip|ip6|ip,ip6</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--nftables-family</span></code><span class="ne-text">)</span></span></li>
</ul>
<p id="ua4dd6f38" class="ne-p"><strong>其他</strong></p>
<ul class="ne-ul">
<li id="ueab16841" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">max-connections = NUM</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--max-connections</span></code><span class="ne-text">)</span></span></li>
<li id="u65d7e9dd" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">media-address-family = ipv4|ipv6</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--media-address-family</span></code><span class="ne-text">)</span></span></li>
<li id="ue9e8fa8c" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">cluster-id = ID</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--cluster-id</span></code><span class="ne-text">)</span></span></li>
<li id="u8a8f9d0c" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">write-pid = true|false</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--write-pid</span></code><span class="ne-text">)</span></span></li>
<li id="u170e1b30" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">no-media-loop = true|false</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--no-media-loop</span></code><span class="ne-text">)</span></span></li>
<li id="u566c3f78" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">jitter-buffer = MILLISECONDS</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--jitter-buffer</span></code><span class="ne-text">)</span></span></li>
<li id="u6889e80a" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">max-jitter-buffer = MILLISECONDS</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--max-jitter-buffer</span></code><span class="ne-text">)</span></span></li>
<li id="u7c56ee29" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">mysql-host = HOST</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--mysql-host</span></code><span class="ne-text">)</span></span></li>
<li id="uc2462563" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">mysql-port = PORT</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--mysql-port</span></code><span class="ne-text">)</span></span></li>
<li id="ubbab4901" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">mysql-user = USER</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--mysql-user</span></code><span class="ne-text">)</span></span></li>
<li id="u87fe1f27" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">mysql-password = PASSWORD</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--mysql-password</span></code><span class="ne-text">)</span></span></li>
<li id="u05f0c567" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">mysql-database = DATABASE</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--mysql-database</span></code><span class="ne-text">)</span></span></li>
<li id="uc4e34371" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">mysql-table = TABLE</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--mysql-table</span></code><span class="ne-text">)</span></span></li>
<li id="uc5880569" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">extra-flags = FLAG1;FLAG2...</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--extra-flags</span></code><span class="ne-text">)</span></span></li>
</ul>
<p id="ub081d14e" class="ne-p"><strong>信令模板 (Signalling Templates)</strong></p>
<ul class="ne-ul">
<li id="ub07a253e" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">templates = SECTION_NAME</span></code><span class="ne-text"> (对应 <code class="ne-code"><span class="ne-text">--templates</span></code><span class="ne-text">)</span></span></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u02a9a8c1" data-lake-index-type="0"><span class="ne-text">此参数指定配置文件中包含信令模板的节名。例如，如果设置为 <code class="ne-code"><span class="ne-text">templates = rtpengine_templates</span></code><span class="ne-text">，则配置文件中应有一个名为 <code class="ne-code"><span class="ne-text">[rtpengine_templates]</span></code><span class="ne-text"> 的节。</span></span></span></li>
<li id="ubf5f950c" data-lake-index-type="0"><span class="ne-text">在该节内部，每个条目都是一个命名的模板。例如：</span></li>
</ul>
</ul>
<pre class="ne-codeblock language-properties" data-language="properties"><code>[rtpengine_templates]
my_default_flags = ICE=force trust-address replace-origin replace-session-connection
another_template = RTP/AVP symmetric</code></pre>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="ud6f710f0" data-lake-index-type="0"><span class="ne-text">这些模板可以通过 NG 控制协议中的 <code class="ne-code"><span class="ne-text">template=TEMPLATE_NAME</span></code><span class="ne-text"> 来引用。</span></span></li>
</ul>
</ul>
<h3 id="dvsiG"><span class="ne-text">示例配置节</span></h3>
<pre class="ne-codeblock language-properties" data-language="properties"><code>[rtpengine]
# 基本配置
table = 0
interface = eth0/192.168.1.100!203.0.113.10
port-min = 30000
port-max = 40000
log-level = 6
pidfile = /var/run/rtpengine.pid

# NG 协议监听
listen-ng = 127.0.0.1:22222

# Redis 配置 (如果使用集群)
# redis = 127.0.0.1:6379
# redis-password = yourpassword

# 更多参数...</code></pre>
<p id="u1a481aee" class="ne-p"><span class="ne-text">请注意，这只是一个基本示例。实际配置将根据您的具体需求和网络环境而有所不同。始终建议查阅官方文档以获取特定版本的最准确和最全面的信息。</span></p>
<p id="uac1f0f4d" class="ne-p">&nbsp;</p>
<p id="u53f94be9" class="ne-p">&nbsp;</p>
<h2 id="bg2jY"><span class="ne-text">双网卡 SBC 服务器场景分析：rtpengine 公私网媒体转发</span></h2>
<p id="u6943a1ec" class="ne-p"><span class="ne-text">本部分旨在分析在拥有双网卡（一块配置公网 IP，一块配置私网 IP）的 SBC (Session Border Controller) 服务器上，rtpengine 如何配置和工作以实现公网和私网之间的媒体流转发。我们将重点关注其原理、关键配置要点以及与 SIP 信令的协同工作。</span></p>
<h3 id="jb3qX"><span class="ne-text">1. 核心需求与目标</span></h3>
<p id="ud7cccf6e" class="ne-p"><span class="ne-text">核心需求是在公网用户/网络与私网用户/网络之间建立可靠的媒体通路。例如：</span></p>
<ul class="ne-ul">
<li id="u418f8822" data-lake-index-type="0"><span class="ne-text">外部 SIP 用户（公网）呼叫内部 IP-PBX 分机（私网）。</span></li>
<li id="u3e59fa77" data-lake-index-type="0"><span class="ne-text">内部 IP-PBX 分机（私网）呼叫外部 SIP 用户或 PSTN 网关（公网）。</span></li>
</ul>
<p id="u342c404b" class="ne-p"><span class="ne-text">rtpengine 在此场景中扮演媒体代理的角色，负责接收来自一端的媒体流，并将其转发到另一端，同时处理 NAT 穿透、编解码转换（如果需要）等问题。</span></p>
<h3 id="nXCO2"><span class="ne-text">2. rtpengine 的关键角色与参数</span></h3>
<p id="u55e3524c" class="ne-p"><span class="ne-text">rtpengine 通过其灵活的接口配置和控制协议，能够有效地管理双网卡环境下的媒体流。</span></p>
<h4 id="d25M1"><span class="ne-text">2.1. <code class="ne-code"><span class="ne-text">interface</span></code><span class="ne-text"> 参数：核心中的核心</span></span></h4>
<p id="u276d6df4" class="ne-p"><code class="ne-code"><span class="ne-text">interface</span></code><span class="ne-text"> 参数是实现双网卡媒体转发的基石。它允许 rtpengine 监听和使用多个网络接口（IP 地址）。其基本语法为：</span></p>
<p id="u43e00f5a" class="ne-p"><code class="ne-code"><span class="ne-text">interface = [NAME/]LOCAL_IP[!ADVERTISED_IP]</span></code></p>
<ul class="ne-ul">
<li id="u0880b56b" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">NAME</span></code><span class="ne-text">: 可选的逻辑接口名称，例如 <code class="ne-code"><span class="ne-text">public</span></code><span class="ne-text"> 或 <code class="ne-code"><span class="ne-text">private</span></code><span class="ne-text">，或者物理网卡名如 <code class="ne-code"><span class="ne-text">eth0</span></code><span class="ne-text">。这个名称可以在 SIP Proxy (如 Kamailio) 控制 rtpengine 时被引用，以指定使用哪个接口。</span></span></span></span></li>
<li id="uf34066d8" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">LOCAL_IP</span></code><span class="ne-text">: rtpengine 实际监听媒体流的本地 IP 地址。</span></li>
<li id="u51ffc282" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">ADVERTISED_IP</span></code><span class="ne-text">: 可选参数，指定在 SDP 中向对端宣告的 IP 地址。这对于 NAT 穿透至关重要。在双网卡直连公网和私网的 SBC 场景中，<code class="ne-code"><span class="ne-text">ADVERTISED_IP</span></code><span class="ne-text"> 通常与 <code class="ne-code"><span class="ne-text">LOCAL_IP</span></code><span class="ne-text"> 相同，因为 SBC 本身就拥有这些 IP。</span></span></span></li>
</ul>
<p id="u8c7a8d4d" class="ne-p"><span class="ne-text">对于双网卡 SBC：</span></p>
<ul class="ne-ul">
<li id="u3a860d34" data-lake-index-type="0"><strong>公网接口</strong><span class="ne-text">：<code class="ne-code"><span class="ne-text">interface = public_nic/PUBLIC_IP!PUBLIC_IP</span></code></span></li>
<li id="u1691807c" data-lake-index-type="0"><strong>私网接口</strong><span class="ne-text">：<code class="ne-code"><span class="ne-text">interface = private_nic/PRIVATE_IP!PRIVATE_IP</span></code></span></li>
</ul>
<p id="ueb1f2bb0" class="ne-p"><span class="ne-text">rtpengine 会在这些指定的 IP 地址和配置的端口范围内（<code class="ne-code"><span class="ne-text">port-min</span></code><span class="ne-text"> 到 <code class="ne-code"><span class="ne-text">port-max</span></code><span class="ne-text">）监听传入的 RTP/RTCP 流。</span></span></span></p>
<h4 id="HOyuP"><span class="ne-text">2.2. 控制协议监听</span></h4>
<p id="u5d4a3002" class="ne-p"><span class="ne-text">rtpengine 需要通过一个控制协议（如 NG 协议、UDP 协议等）接收来自 SIP Proxy (如 Kamailio) 的指令。监听地址通常配置为 SIP Proxy 可以访问的 IP 地址，例如私网 IP 或 <code class="ne-code"><span class="ne-text">127.0.0.1</span></code><span class="ne-text"> (如果 SIP Proxy 与 rtpengine 在同一台服务器上)。</span></span></p>
<p id="uad0e0bc9" class="ne-p"><span class="ne-text">例如：<code class="ne-code"><span class="ne-text">listen-ng = PRIVATE_IP:22222</span></code><span class="ne-text"> 或 <code class="ne-code"><span class="ne-text">listen-ng = 127.0.0.1:22222</span></code></span></span></p>
<h3 id="VMSns"><span class="ne-text">3. SIP Proxy (例如 Kamailio) 的协同作用</span></h3>
<p id="u984b724b" class="ne-p"><span class="ne-text">SIP Proxy 负责处理信令（SIP 消息），并在建立呼叫过程中与 rtpengine 交互以协商和建立媒体会话。在双网卡场景下，SIP Proxy 的配置逻辑至关重要，它需要判断呼叫的来源和目的地，然后指示 rtpengine 使用正确的公网或私网接口。</span></p>
<h4 id="GRxbc"><span class="ne-text">3.1. 判断呼叫方向</span></h4>
<p id="ub9aa3016" class="ne-p"><span class="ne-text">SIP Proxy 通常会检查 SIP 消息的来源 IP、Via 头、Contact URI 等信息，结合网络拓扑配置，来判断一个呼叫是来自公网还是私网，以及它的目标是公网还是私网。</span></p>
<h4 id="B6ifO"><span class="ne-text">3.2. 指示 rtpengine</span></h4>
<p id="uc861eeae" class="ne-p"><span class="ne-text">一旦确定了呼叫方向，SIP Proxy 会通过控制协议向 rtpengine 发送指令（如 <code class="ne-code"><span class="ne-text">offer</span></code><span class="ne-text">, <code class="ne-code"><span class="ne-text">answer</span></code><span class="ne-text">, <code class="ne-code"><span class="ne-text">delete</span></code><span class="ne-text">）。在这些指令中，SIP Proxy 会指定 rtpengine 应该为呼叫的每一端使用哪个接口/IP 地址。</span></span></span></span></p>
<p id="uae580171" class="ne-p"><span class="ne-text">例如，在使用 Kamailio 的 <code class="ne-code"><span class="ne-text">rtpengine</span></code><span class="ne-text"> 模块时，可能会用到类似 <code class="ne-code"><span class="ne-text">rtpengine_offer()</span></code><span class="ne-text"> 和 <code class="ne-code"><span class="ne-text">rtpengine_answer()</span></code><span class="ne-text"> 的函数，并通过参数指定 <code class="ne-code"><span class="ne-text">direction=public</span></code><span class="ne-text"> 或 <code class="ne-code"><span class="ne-text">direction=private</span></code><span class="ne-text">，或者直接指定接口的 IP 地址或逻辑名称。</span></span></span></span></span></span></p>
<h3 id="DIP0F"><span class="ne-text">4. 媒体流转发逻辑</span></h3>
<p id="ua14d7d35" class="ne-p"><span class="ne-text">当一个呼叫建立时，例如从公网用户 A 到私网用户 B：</span></p>
<ol class="ne-ol">
<li id="ue246bdc1" data-lake-index-type="0"><strong>用户 A (公网) -&gt; SBC (公网 IP)</strong><span class="ne-text">: 用户 A 的 SIP 终端发送 SIP INVITE 到 SBC 的公网 IP。SDP 中包含用户 A 的公网媒体地址。</span></li>
<li id="ub12bd90f" data-lake-index-type="0"><strong>SBC (SIP Proxy)</strong><span class="ne-text">: SIP Proxy 收到 INVITE，判断呼叫需要转发到私网。它向 rtpengine 发送 <code class="ne-code"><span class="ne-text">offer</span></code><span class="ne-text"> 指令，通常会指定：</span></span></li>
</ol>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u138f7108" data-lake-index-type="0"><span class="ne-text">对于公网侧 (用户 A)，使用 SBC 的公网接口 (<code class="ne-code"><span class="ne-text">public_nic/PUBLIC_IP</span></code><span class="ne-text">)。</span></span></li>
<li id="u6d2416ca" data-lake-index-type="0"><span class="ne-text">对于私网侧 (用户 B)，使用 SBC 的私网接口 (<code class="ne-code"><span class="ne-text">private_nic/PRIVATE_IP</span></code><span class="ne-text">)。</span></span></li>
</ul>
</ul>
<ol class="ne-ol" start="3">
<li id="ub4430ebe" data-lake-index-type="0"><strong>rtpengine</strong><span class="ne-text">: rtpengine 分配公网 IP 上的端口用于接收来自用户 A 的媒体，并分配私网 IP 上的端口用于向用户 B 发送媒体。它会修改 SDP，将 SBC 公网接口的媒体地址放入发往用户 A 的 SIP 消息中，将 SBC 私网接口的媒体地址放入发往用户 B 的 SIP 消息中。</span></li>
<li id="u63143a9c" data-lake-index-type="0"><strong>SBC (SIP Proxy) -&gt; 用户 B (私网)</strong><span class="ne-text">: SIP Proxy 将修改后的 INVITE (包含 rtpengine 私网媒体地址) 转发给用户 B。</span></li>
<li id="u9bebaaa6" data-lake-index-type="0"><strong>用户 B (私网) -&gt; SBC (私网 IP)</strong><span class="ne-text">: 用户 B 响应 200 OK，SDP 中包含用户 B 的私网媒体地址。</span></li>
<li id="u6aa55cf3" data-lake-index-type="0"><strong>SBC (SIP Proxy)</strong><span class="ne-text">: SIP Proxy 收到 200 OK，向 rtpengine 发送 <code class="ne-code"><span class="ne-text">answer</span></code><span class="ne-text"> 指令，包含用户 B 的媒体信息。</span></span></li>
<li id="u7a691b99" data-lake-index-type="0"><strong>rtpengine</strong><span class="ne-text">: rtpengine 确认媒体路径。现在它知道：</span></li>
</ol>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="u5ea62e4d" data-lake-index-type="0"><span class="ne-text">从用户 A (公网) 接收媒体到 <code class="ne-code"><span class="ne-text">PUBLIC_IP:port_A_recv</span></code><span class="ne-text">。</span></span></li>
<li id="ud321a1ca" data-lake-index-type="0"><span class="ne-text">将媒体转发到用户 B (私网) 从 <code class="ne-code"><span class="ne-text">PRIVATE_IP:port_B_send</span></code><span class="ne-text">。</span></span></li>
<li id="ub53fb803" data-lake-index-type="0"><span class="ne-text">从用户 B (私网) 接收媒体到 <code class="ne-code"><span class="ne-text">PRIVATE_IP:port_B_recv</span></code><span class="ne-text">。</span></span></li>
<li id="u72053fc1" data-lake-index-type="0"><span class="ne-text">将媒体转发到用户 A (公网) 从 <code class="ne-code"><span class="ne-text">PUBLIC_IP:port_A_send</span></code><span class="ne-text">。</span></span></li>
</ul>
</ul>
<ol class="ne-ol" start="8">
<li id="uef849c94" data-lake-index-type="0"><strong>SBC (SIP Proxy) -&gt; 用户 A (公网)</strong><span class="ne-text">: SIP Proxy 将修改后的 200 OK (包含 rtpengine 公网媒体地址) 转发给用户 A。</span></li>
<li id="uff14b1d0" data-lake-index-type="0"><strong>媒体流开始</strong><span class="ne-text">: 用户 A 向 <code class="ne-code"><span class="ne-text">PUBLIC_IP:port_A_recv</span></code><span class="ne-text"> 发送媒体，rtpengine 将其转发到用户 B。用户 B 向 <code class="ne-code"><span class="ne-text">PRIVATE_IP:port_B_recv</span></code><span class="ne-text"> 发送媒体，rtpengine 将其转发到用户 A。</span></span></span></li>
</ol>
<h3 id="EVz2B"><span class="ne-text">5. 关键 rtpengine 配置参数回顾</span></h3>
<ul class="ne-ul">
<li id="uf66186ec" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">interface = public_nic/PUBLIC_IP!PUBLIC_IP</span></code></li>
<li id="uf354c297" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">interface = private_nic/PRIVATE_IP!PRIVATE_IP</span></code></li>
<li id="u17cb395e" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">listen-ng</span></code><span class="ne-text"> (或其他控制协议监听地址，通常是私网 IP 或 localhost)</span></li>
<li id="uc74e6667" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">port-min</span></code><span class="ne-text"> 和 <code class="ne-code"><span class="ne-text">port-max</span></code><span class="ne-text">：定义 RTP 端口范围。</span></span></li>
<li id="u526e12de" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">tos</span></code><span class="ne-text"> 和 <code class="ne-code"><span class="ne-text">control-tos</span></code><span class="ne-text">：根据需要设置服务质量标记。</span></span></li>
<li id="u3cbc76be" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">log-level</span></code><span class="ne-text">：用于调试。</span></li>
</ul>
<h3 id="W4Pv9"><span class="ne-text">6. NAT 场景的进一步考虑</span></h3>
<p id="u170889b5" class="ne-p"><span class="ne-text">虽然在这个双网卡直连公私网的 SBC 场景中，<code class="ne-code"><span class="ne-text">ADVERTISED_IP</span></code><span class="ne-text"> 通常等于 <code class="ne-code"><span class="ne-text">LOCAL_IP</span></code><span class="ne-text">，但在更复杂的 NAT 环境下（例如 SBC 自身也位于 NAT 之后，或者需要与更深层次 NAT 后的设备通信），<code class="ne-code"><span class="ne-text">ADVERTISED_IP</span></code><span class="ne-text"> 的正确设置以及 SIP Proxy 传递给 rtpengine 的 <code class="ne-code"><span class="ne-text">flags</span></code><span class="ne-text"> (如 <code class="ne-code"><span class="ne-text">address-family</span></code><span class="ne-text">, <code class="ne-code"><span class="ne-text">ICE</span></code><span class="ne-text">, <code class="ne-code"><span class="ne-text">SDES</span></code><span class="ne-text">, <code class="ne-code"><span class="ne-text">DTLS</span></code><span class="ne-text"> 等) 会变得更加重要。</span></span></span></span></span></span></span></span></span></p>
<p id="u0a9d1844" class="ne-p"><span class="ne-text">rtpengine 支持 ICE (Interactive Connectivity Establishment)，这对于处理复杂的 NAT 场景非常有用。SIP Proxy 需要在 <code class="ne-code"><span class="ne-text">offer</span></code><span class="ne-text">/<code class="ne-code"><span class="ne-text">answer</span></code><span class="ne-text"> 指令中包含相应的 ICE 属性，rtpengine 会据此生成 ICE 候选者。</span></span></span></p>
<h3 id="gqT2r"><span class="ne-text">7. 安全性</span></h3>
<ul class="ne-ul">
<li id="ub401e393" data-lake-index-type="0"><span class="ne-text">确保控制协议的监听端口受到防火墙保护，只允许受信任的 SIP Proxy 访问。</span></li>
<li id="ud394530d" data-lake-index-type="0"><span class="ne-text">如果媒体流需要加密，应配置 SRTP (SDES 或 DTLS-SRTP)。SIP Proxy 需要在 <code class="ne-code"><span class="ne-text">offer</span></code><span class="ne-text">/<code class="ne-code"><span class="ne-text">answer</span></code><span class="ne-text"> 指令中包含 SRTP 相关的 flag，rtpengine 会据此协商和处理加密媒体。</span></span></span></li>
</ul>
<h3 id="Q6bfH"><span class="ne-text">总结</span></h3>
<p id="u951dcf0e" class="ne-p"><span class="ne-text">通过正确配置 <code class="ne-code"><span class="ne-text">interface</span></code><span class="ne-text"> 参数，并与 SIP Proxy (如 Kamailio) 紧密配合，rtpengine 能够有效地在双网卡 SBC 服务器上实现公网和私网之间的媒体流转发。SIP Proxy 负责信令层面的路由和决策，并指示 rtpengine 使用哪个网络接口处理媒体流，而 rtpengine 则专注于媒体流的接收、处理和转发。</span></span></p>
<p id="ub7ba2d7c" class="ne-p">&nbsp;</p>
<p id="u2bbc435e" class="ne-p">&nbsp;</p>
<h2 id="qwps7"><span class="ne-text">Rtpengine 双网卡 SBC 配置示例 (mr13.1.1.6)</span></h2>
<p id="u2f56472b" class="ne-p"><span class="ne-text">本部分提供一个针对双网卡 SBC (Session Border Controller) 服务器的 rtpengine 配置示例。假设 SBC 服务器有两块网卡：</span></p>
<ul class="ne-ul">
<li id="u5227ed08" data-lake-index-type="0"><strong>网卡1 (例如 </strong><code class="ne-code"><span class="ne-text">eth0</span></code><strong>)</strong><span class="ne-text">：配置公网 IP 地址，例如 <code class="ne-code"><span class="ne-text">203.0.113.10</span></code><span class="ne-text">。</span></span></li>
<li id="ua25ba833" data-lake-index-type="0"><strong>网卡2 (例如 </strong><code class="ne-code"><span class="ne-text">eth1</span></code><strong>)</strong><span class="ne-text">：配置私网 IP 地址，例如 <code class="ne-code"><span class="ne-text">192.168.1.100</span></code><span class="ne-text">。</span></span></li>
</ul>
<p id="uf8ba9d53" class="ne-p"><span class="ne-text">rtpengine 将通过 NG 协议与 SIP Proxy (如 Kamailio) 通信，SIP Proxy 监听在 <code class="ne-code"><span class="ne-text">127.0.0.1</span></code><span class="ne-text"> (假设 Kamailio 与 rtpengine 在同一台服务器上)。</span></span></p>
<h3 id="EFqfj"><span class="ne-text">1. rtpengine.conf 配置文件示例</span></h3>
<p id="u9a349c06" class="ne-p"><span class="ne-text">文件路径: <code class="ne-code"><span class="ne-text">/etc/rtpengine/rtpengine.conf</span></code></span></p>
<pre class="ne-codeblock language-properties" data-language="properties"><code>[rtpengine]
# ===================================================================
# General Settings
# ===================================================================
# Kernel table for packet forwarding. 0 is default.
# Set to a negative value to disable kernelspace forwarding.
table = 0

# Run in foreground (true) or as daemon (false - default)
# foreground = false

# PID file location
pidfile = /run/rtpengine/rtpengine.pid

# User and group to run as (if not root)
# user = rtpengine
# group = rtpengine

# ===================================================================
# Network Interface Configuration
# ===================================================================
# Define the network interfaces rtpengine will use.
# Format: [logical_name/]local_ip[!advertised_ip]
# Multiple interfaces are separated by a semicolon.

# Public Interface (WAN)
# Replace 203.0.113.10 with your actual public IP address.
# We use 'public' as a logical name for Kamailio to refer to.
interface = public/203.0.113.10!203.0.113.10

# Private Interface (LAN)
# Replace 192.168.1.100 with your actual private IP address.
# We use 'private' as a logical name for Kamailio to refer to.
interface = private/192.168.1.100!192.168.1.100

# ===================================================================
# Control Protocol Listener(s)
# ===================================================================
# Listen for control commands from Kamailio (or other SIP proxy).
# NG protocol is recommended.
# Listen on private IP for Kamailio if Kamailio is on a different machine in the private network.
# listen-ng = 192.168.1.100:22222
# Or listen on localhost if Kamailio and rtpengine are on the same machine.
listen-ng = 127.0.0.1:22222

# Optionally, listen for UDP commands (legacy rtpproxy module)
# listen-udp = 127.0.0.1:7722

# ===================================================================
# RTP/RTCP Port Range
# ===================================================================
port-min = 30000
port-max = 40000

# ===================================================================
# Logging Configuration
# ===================================================================
# Log level (0-7, higher is more verbose). 6 is a good default.
log-level = 6

# Log facility for syslog
log-facility = daemon

# Log to stderr in addition to syslog (useful for debugging if foreground=true)
# log-stderr = true

# ===================================================================
# Performance and Limits
# ===================================================================
# Maximum number of concurrent sessions
max-sessions = 5000

# Number of worker threads (defaults to number of CPU cores)
# num-threads = 4

# ===================================================================
# Timeouts (in seconds)
# ===================================================================
# Timeout for a call if no media is flowing
silent-timeout = 60

# Overall timeout for a call
# timeout = 3600

# Delay before deleting a session after it ends
delete-delay = 60

# ===================================================================
# Quality of Service (TOS) / DSCP
# ===================================================================
# Set TOS for outgoing RTP packets (e.g., 184 for EF, 46 for DSCP EF)
tos = 184

# Set TOS for outgoing control protocol packets
# control-tos = 184

# ===================================================================
# NAT Traversal / ICE
# ===================================================================
# By defining interfaces with !advertised_ip, basic NAT handling is covered.
# For more complex scenarios, ICE might be needed, controlled via Kamailio flags.

# ===================================================================
# Redis Integration (for clustering, optional)
# ===================================================================
# redis = 127.0.0.1:6379
# redis-password = yoursecretpassword
# redis-db = 0
# cluster-id = mycluster01

# ===================================================================
# Other settings
# ===================================================================
# If you don't want rtpengine to manage nftables rules (e.g., you manage them externally)
# nftables-chain =
# nftables-base-chain =

# Default is to manage for both IPv4 and IPv6 if kernel supports it.
# nftables-family = ip,ip6</code></pre>
<p id="u7d4ef9dd" class="ne-p"><strong>关键点说明：</strong></p>
<ul class="ne-ul">
<li id="ud74dcb46" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">interface = public/203.0.113.10!203.0.113.10</span></code><span class="ne-text">: 定义了公网接口。</span></li>
</ul>
<ul class="ne-list-wrap">
<ul class="ne-ul">
<li id="ue793fdb8" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">public</span></code><span class="ne-text">: 是一个逻辑名称，SIP Proxy (如 Kamailio) 在发送控制命令时可以使用这个名称来指定 rtpengine 在这个接口上分配媒体端口。</span></li>
<li id="u89cfcd1c" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">203.0.113.10</span></code><span class="ne-text">: 是 rtpengine 实际监听的本地公网 IP 地址。</span></li>
<li id="uf433f32e" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">!203.0.113.10</span></code><span class="ne-text">: 是在 SDP 中向对端宣告的公网 IP 地址。对于直接连接公网的网卡，本地 IP 和宣告 IP 通常是相同的。</span></li>
</ul>
</ul>
<ul class="ne-ul">
<li id="u4b919156" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">interface = private/192.168.1.100!192.168.1.100</span></code><span class="ne-text">: 定义了私网接口，逻辑与公网接口类似。</span></li>
<li id="u3bae36ce" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">listen-ng = 127.0.0.1:22222</span></code><span class="ne-text">: rtpengine 在本地回环地址监听来自 Kamailio (假设在同一台服务器) 的 NG 协议控制命令。如果 Kamailio 在另一台私网服务器，应改为私网 IP。</span></li>
<li id="uca97a384" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">port-min</span></code><strong> 和 </strong><code class="ne-code"><span class="ne-text">port-max</span></code><span class="ne-text">: 定义了 rtpengine 用于 RTP/RTCP 通信的 UDP 端口范围。确保防火墙允许这些端口的流量。</span></li>
<li id="u59db5e6d" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">log-level = 6</span></code><span class="ne-text">: 设置了较为详细的日志级别，有助于排错。</span></li>
<li id="u6f2e4c48" data-lake-index-type="0"><code class="ne-code"><span class="ne-text">tos = 184</span></code><span class="ne-text">: 为 RTP 包设置了 EF (Expedited Forwarding) 的 TOS 值，有助于 QoS。</span></li>
</ul>
<h3 id="g9gIs"><span class="ne-text">2. rtpengine 启动命令示例</span></h3>
<p id="u3d643be8" class="ne-p"><span class="ne-text">通常，rtpengine 会作为系统服务启动 (例如通过 systemd)。如果手动启动，命令可能如下：</span></p>
<pre class="ne-codeblock language-bash" data-language="bash"><code>/usr/sbin/rtpengine --config-file=/etc/rtpengine/rtpengine.conf --config-section=rtpengine</code></pre>
<p id="u5a841331" class="ne-p"><span class="ne-text">或者，如果所有配置都在默认位置和默认节名下，可以直接运行：</span></p>
<pre class="ne-codeblock language-bash" data-language="bash"><code>/usr/sbin/rtpengine</code></pre>
<p id="u46eccc66" class="ne-p"><strong>如果希望覆盖配置文件中的某些参数或不使用配置文件：</strong></p>
<pre class="ne-codeblock language-bash" data-language="bash"><code>/usr/sbin/rtpengine \
  --interface=public/203.0.113.10!203.0.113.10 \
  --interface=private/192.168.1.100!192.168.1.100 \
  --listen-ng=127.0.0.1:22222 \
  --port-min=30000 \
  --port-max=40000 \
  --log-level=6 \
  --pidfile=/run/rtpengine/rtpengine.pid \
  --table=0 \
  --foreground</code></pre>
<p id="uffcdc529" class="ne-p"><span class="ne-text">(在实际生产中，<code class="ne-code"><span class="ne-text">--foreground</span></code><span class="ne-text"> 通常不使用，除非用于调试。)</span></span></p>
<h3 id="XDM2y"><span class="ne-text">3. SIP Proxy (Kamailio) 的配合</span></h3>
<p id="u374ddc2f" class="ne-p"><span class="ne-text">在 Kamailio 的配置文件 (通常是 <code class="ne-code"><span class="ne-text">kamailio.cfg</span></code><span class="ne-text">) 中，与 rtpengine 交互时，需要根据呼叫的来源和目的地，指示 rtpengine 使用 <code class="ne-code"><span class="ne-text">public</span></code><span class="ne-text"> 还是 <code class="ne-code"><span class="ne-text">private</span></code><span class="ne-text"> 接口。</span></span></span></span></p>
<p id="ue6b60d3b" class="ne-p"><span class="ne-text">例如，在 <code class="ne-code"><span class="ne-text">rtpengine_offer()</span></code><span class="ne-text"> 或 <code class="ne-code"><span class="ne-text">rtpengine_answer()</span></code><span class="ne-text"> 函数的参数中，可以指定 <code class="ne-code"><span class="ne-text">direction=public</span></code><span class="ne-text"> 或 <code class="ne-code"><span class="ne-text">direction=private</span></code><span class="ne-text">，或者更精确地通过 <code class="ne-code"><span class="ne-text">rtpengine_manage()</span></code><span class="ne-text"> 函数的 <code class="ne-code"><span class="ne-text">flags</span></code><span class="ne-text"> 来控制接口选择和媒体属性。具体的 Kamailio 配置超出了本文档的范围，但理解这一交互机制对于成功部署至关重要。</span></span></span></span></span></span></span></p>
<h2 id="cVQ39"><span class="ne-text">结论</span></h2>
<p id="u6d8fd10f" class="ne-p"><span class="ne-text">本文档详细介绍了 rtpengine mr13.1.1.6 版本的进程启动参数、<code class="ne-code"><span class="ne-text">rtpengine.conf</span></code><span class="ne-text"> 配置文件参数，并深入分析了双网卡 SBC 场景下的媒体流转发原理及配置方法。通过合理的配置，rtpengine 能够高效、稳定地处理复杂的媒体代理任务。</span></span></p>
<p id="u0737a873" class="ne-p"><span class="ne-text">在实际部署中，请务必根据您的具体网络环境、安全需求和性能目标调整相关参数。建议仔细阅读官方文档，并在测试环境中充分验证配置的正确性和有效性。</span></p>
<p id="ude7413d7" class="ne-p"><span class="ne-text">希望本文档能为您使用和理解 rtpengine 提供有力的支持。</span></p>
<p id="u4a2adf85" class="ne-p">&nbsp;</p>
<p id="ufe679295" class="ne-p"><span class="ne-text">空空如常</span></p>
<p id="u3577a95d" class="ne-p"><span class="ne-text">求真得真</span></p>
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-06-20 17:55">2025-06-20 17:54</span>&nbsp;
<a href="https://www.cnblogs.com/qiuzhendezhen">求真得真</a>&nbsp;
阅读(<span id="post_view_count">39</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18938939);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18938939', targetLink: 'https://www.cnblogs.com/qiuzhendezhen/p/18938939', title: 'Rtpengine 全面指南 (mr13.1.1.6)：启动参数、配置详解及双网卡SBC部署实例' })">举报</a>
</div>
        