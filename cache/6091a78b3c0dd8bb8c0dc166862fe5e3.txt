
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/software-Development/p/18991268" title="发布于 2025-07-18 11:54">
    <span role="heading" aria-level="2">文档处理控件TX Text Control系列教程：使用 C# .NET 将二维码添加到 PDF 文档</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p><img alt="" data-src="https://image.evget.com/attachment/keditor/image/20250718/110333_4.jpg" class="lazyload"></p>
<p>PDF 文档通常是合同、发票、证书和报告的最终格式。尽管它们在设计上是静态的，但用户现在希望能够与它们交互、验证信息并直接从这些文件访问数字服务。这时，二维码就变得至关重要。</p>
<p><img alt="PDF文档中的二维码" class="screenshot-border lazyload" height="478" width="792" data-src="https://s1-www.textcontrol.com/application-1.7525.85602/blog/2025/07/15/a/assets/slip.webp"></p>
<p>PDF 文档中的二维码将印刷或数字内容与动态在线体验连接起来。用户只需扫描二维码即可验证文档、打开相关网站、访问客户门户或继续工作流程。在打印和共享文档的环境中，二维码可确保数字连接保持完整。</p>
<p>添加二维码还能为物流和文档管理带来益处。例如，送货单、采购订单和访客通行证可以包含可扫描的嵌入式信息。这使得公司能够实现流程自动化并改进追踪。在医疗保健和法律等行业，二维码可以验证真实性，并在不改变原始文档布局的情况下引导用户查看补充说明。</p>
<p><strong><u>TX Text Control</u></strong>&nbsp;提供两种在 PDF 文档中嵌入二维码的主要方法。您可以使用 API 以编程方式添加二维码，也可以创建带有二维码占位符的模板，并将其与 JSON 文件中的数据合并。根据具体应用，这两种方法都提供了灵活性，可以满足不同的需求。</p>
<p style="text-align: center"><span style="color: rgba(230, 126, 35, 1)"><strong>TX Text Control 免费试用版下载，请联系TX Text Control中国区官方授权代理商<span style="color: rgba(0, 0, 0, 1)">慧都科技</span></strong></span></p>
<h4 id="adding-qr-codes-programmatically">以编程方式添加二维码</h4>
<p>使用&nbsp;<strong><u>TX Text Control</u></strong>&nbsp;中的条形码对象，开发人员可以直接创建二维码并将其插入文档。此方法可以完全控制二维码的位置、大小和内容。</p>
<blockquote class="blockquote info tx-success">
<h3 id="prerequisites">先决条件</h3>
<p>您需要下载并安装 TX Text Control .NET Server for ASP.NET 的试用版：</p>
<ul>
<li><strong>下载试用版</strong><br>安装程序需要下载和安装。</li>
</ul>
</blockquote>
<h3><span style="color: rgba(230, 126, 35, 1)"><strong>TX Text Control 免费试用版下载，请联系TX Text Control中国区官方授权代理商<span style="color: rgba(0, 0, 0, 1)">慧都科技</span></strong></span></h3>
<h3 id="creating-the-application">创建应用程序</h3>
<p>确保您下载了.NET 8 SDK附带的最新版本的 Visual Studio 2022 。</p>
<ol>
<li>
<p>在 Visual Studio 2022 中，选择“创建新项目” 来<em>创建新项目</em>。</p>
</li>
<li>
<p>选择<em>Console App</em>作为项目模板并单击<em>Next</em>确认。</p>
</li>
<li>
<p>输入项目名称并选择保存项目的位置。单击<em>“下一步”</em>确认。</p>
</li>
<li>
<p>选择<em>.NET 8.0（长期支持）</em>作为<em>框架</em>。</p>
</li>
<li>
<p>启用<em>启用容器支持</em>复选框并选择<em>Linux</em>作为<em>容器操作系统</em>。</p>
</li>
<li>
<p>选择<em>Dockerfile</em>作为<em>容器构建类型</em>选项，并通过<em>创建</em>进行确认。</p>
<p><img alt="创建 .NET 8 项目" class="screenshot-border lazyload" height="933" width="1332" data-src="https://s1-www.textcontrol.com/application-1.7525.85602/blog/2025/07/15/a/assets/visualstudio1.webp"></p>
</li>
</ol>
<h4 id="adding-the-nuget-packages">添加 NuGet 包</h4>
<ol>
<li>
<p><em>在解决方案资源管理器</em>中，选择您创建的项目，然后从<em>项目主菜单中选择</em><em>“管理 NuGet 包...”</em>。选择“文本控制离线包”作为<em>包源</em>。</p>
</li>
</ol>
<p><span style="color: rgba(230, 126, 35, 1)"><strong>TX Text Control 免费试用版下载，请联系TX Text Control中国区官方授权代理商<span style="color: rgba(0, 0, 0, 1)">慧都科技</span></strong></span></p>
<ol>
<li>
<p>&nbsp;</p>
<p>安装以下软件包：</p>
<ul>
<li>TXTextControl.TextControl.Core.SDK</li>
</ul>
<p><img alt="ASP.NET Core Web 应用程序" class="screenshot-border lazyload" height="1043" width="1839" data-src="https://s1-www.textcontrol.com/application-1.7525.85602/blog/2025/07/15/a/assets/visualstudio2.webp"></p>
</li>
</ol>
<h4 id="using-servertextcontrol">使用 ServerTextControl</h4>
<ol>
<li>
<p>在<em>解决方案资源管理器</em>中找到<em>Program.cs</em>文件，并将代码替换为以下代码片段：</p>
</li>
</ol>
<pre class="prettyprint lang-js highlighter-hljs"><code>	using TXTextControl;
using TXTextControl.Barcode;
using TXTextControl.DataVisualization;
using System.Drawing;

// Create a new ServerTextControl instance for server-side document generation
using var tx = new ServerTextControl();

// Initialize a new, empty document
tx.Create();

// The text to be encoded in the QR code
var barCodeText = "https://www.textcontrol.com";

// Create the barcode core with type QR code and set the encoded text
var barcodeCore = new TXBarcodeCore
{
    BarcodeType = BarcodeType.QRCode,
    Text = barCodeText,
    UpperTextLength = barCodeText.Length // Optional visual setting
};

// Create a frame for the barcode and define its visual size
var barcodeFrame = new BarcodeFrame(barcodeCore)
{
    Size = new Size(5000, 5000) 
};

// Add the barcode to the document at the end (-1 means current input position)
tx.Barcodes.Add(barcodeFrame, -1);

// Save the document as a PDF
tx.Save("results.pdf", StreamType.AdobePDF);</code></pre>
<ol>
<li>
<p>现在运行在 Docker 容器中运行应用程序的项目。</p>
</li>
</ol>
<p>这将创建一个 PDF 文档，其中嵌入了指向给定网站的二维码。</p>
<h4 id="using-mailmerge">使用邮件合并</h4>
<p>在许多商业应用中，将文档的设计与数据分离至关重要。<strong><u>TX Text Control&nbsp;</u></strong>允许模板包含二维码占位符，这些占位符会在合并过程中填充动态内容。使用 TX Text Control 的编辑器可视化地设计这些模板。添加二维码占位符并为其命名。</p>
<p>在文档生成过程中，应用程序会加载模板并将其与 JSON 数据文件合并。JSON 对象中的值会自动应用于二维码占位符。此方法非常适合批量处理任务，例如生成证书、会员卡或发票，这些任务中每个文档都需要唯一的二维码，但布局保持不变。</p>
<p>现在，我们来看一下开头截图中显示的装箱单示例。</p>
<p><img alt="PDF文档中的二维码" class="screenshot-border lazyload" height="1080" width="792" data-src="https://s1-www.textcontrol.com/application-1.7525.85602/blog/2025/07/15/a/assets/slip_full.webp"></p>
<p><span class="tooltip-label intellisense tooltipstered">使用&nbsp;<strong><u>TX Text Control&nbsp;</u></strong>的邮件合并</span>&nbsp;引擎创建此装箱单非常简单。首先，如下所示，我们需要一个数据源，例如 JSON 对象。</p>
<pre class="prettyprint lang-js highlighter-hljs"><code>	[
    {
        "packing_slip_guid": "12345678-1234-1234-1234-123456789012",
        "dispatch_date": "2024-01-01",
        "recipient": {
            "id": 1,
            "name": "John Doe",
            "company": "Company A",
            "address": {
                "street": "123 Main St",
                "city": "Anytown",
                "state": "CA",
                "zip": "12345"
            }
        },
        "product": {
            "product_id": 1,
            "name": "Product 1",
            "qty": "Product 1 Description",
            "code": "123456789012"
        },
        "items": [
            {
                "item_id": 1,
                "name": "Item 1",
                "description": "Description 1",
                "quantity": 1,
                "price": 100,
                "upc": "12345678901"
            },
            {
                "item_id": 2,
                "name": "Item 2",
                "description": "Description 2",
                "quantity": 2,
                "price": 200,
                "upc": "12345678902"
            },
            {
                "item_id": 3,
                "name": "Item 3",
                "description": "Description 3",
                "quantity": 3,
                "price": 300,
                "upc": "12345678903"
            },
            [...]
        ]
    }
]</code></pre>
<p>我们需要一个包含合并字段和条形码的模板文档。合并字段将使用来自数据源的数据填充，条形码将基于相同的数据生成。下方屏幕截图显示了<strong><u>&nbsp;TX Text Control&nbsp;</u></strong>的所见即所得 (WYSIWYG) 文档编辑器中准备好的模板，该编辑器可以无缝集成到您的应用程序中。</p>
<p><img alt="带有 QR 码占位符的模板" class="screenshot-border lazyload" height="661" width="900" data-src="https://s1-www.textcontrol.com/application-1.7525.85602/blog/2025/07/15/a/assets/template.webp"></p>
<p>条形码可以链接到数据源字段，以便在最终文档生成期间自动使用正确的值进行更新。</p>
<p><img alt="带有 QR 码占位符的模板" class="screenshot-border lazyload" height="786" width="555" data-src="https://s1-www.textcontrol.com/application-1.7525.85602/blog/2025/07/15/a/assets/merge.gif"></p>
<p>此代码演示了如何使用<strong><u>&nbsp;TX Text Control</u></strong>&nbsp;的 MailMerge 类将动态 JSON 数据合并到预先设计的模板中来生成 PDF 文档。</p>
<pre class="prettyprint lang-js highlighter-hljs"><code>using TXTextControl;
using TXTextControl.DocumentServer;
using System.IO;

// Create a new ServerTextControl instance for document processing
using var tx = new ServerTextControl();

// Create a new, empty document
tx.Create();

// Load the template document in TX Text Control's internal format
tx.Load("packing_slip.tx", StreamType.InternalUnicodeFormat);

// Initialize the MailMerge component with the loaded document
var mailMerge = new MailMerge
{
    TextComponent = tx
};

// Load JSON data from file
var jsonData = File.ReadAllText("data.json");

// Merge the JSON data into the template
mailMerge.MergeJsonData(jsonData);

// Save the merged document as a PDF
tx.Save("output.pdf", StreamType.AdobePDF);</code></pre>
<h4 id="conclusion">结论</h4>
<p>使用&nbsp;<strong>TX Text Control</strong>，将二维码添加到 PDF 文档非常简单。无论您是通过编程方式生成二维码，还是结合模板使用邮件合并功能，该 API 的灵活性都让您能够创建动态的交互式文档，从而提升用户体验并简化工作流程。</p>
<blockquote class="blockquote info tx-success">
<p>二维码和条形码在各种文档或 PDF 中都非常有用，它们提供了一种便捷的方式，可以访问信息、验证真伪、追踪物品并增强用户交互。本文介绍如何使用&nbsp;<strong><u>TX Text Control .NET Server for ASP.NET</u></strong>&nbsp;在 .NET C# 中创建带有二维码和条形码的文档。</p>
<p><span style="color: rgba(230, 126, 35, 1)"><strong>TX Text Control 免费试用版下载，请联系TX Text Control中国区官方授权代理商<span style="color: rgba(0, 0, 0, 1)">慧都科技</span></strong></span></p>
</blockquote>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-18 11:54">2025-07-18 11:54</span>&nbsp;
<a href="https://www.cnblogs.com/software-Development">IT开发者笔记</a>&nbsp;
阅读(<span id="post_view_count">2</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18991268);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18991268', targetLink: 'https://www.cnblogs.com/software-Development/p/18991268', title: '文档处理控件TX Text Control系列教程：使用 C# .NET 将二维码添加到 PDF 文档' })">举报</a>
</div>
        