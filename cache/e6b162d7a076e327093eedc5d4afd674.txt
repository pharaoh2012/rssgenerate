
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/18909325" title="发布于 2025-06-04 08:00">
    <span role="heading" aria-level="2">一种更简单的方式运行 C# 代码，简化 C# 开发体验！</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h2 data-tool="mdnice编辑器"><span>前言</span></h2>
<p data-tool="mdnice编辑器"><span>前段时间 .NET 10 Preview 4 推出了一种更简单的方式运行 C# 代码，即可以直接使用<code>dotnet run file.cs</code><span>&nbsp;命令运行 C# 文件。这意味着我们不再需要创建项目文件或搭建整个应用程序框架，就能够快速运行脚本、测试代码片段或验证想法。</span></span></p>
<h2 data-tool="mdnice编辑器"><span>dotnet run file.cs的作用</span></h2>
<p data-tool="mdnice编辑器"><code>dotnet run file.cs</code><span>你可以直接运行一个独立的 C#&nbsp;<code>file.cs</code><span>&nbsp;文件，就像使用 Python 或 JavaScript 等脚本语言一样。这一改进显著降低了尝试 C# 的门槛，使得 C# 语言在教学演示、快速原型开发或自动化脚本场景中都更具吸引力。</span></span></p>
<h2 data-tool="mdnice编辑器"><span>开发环境安装</span></h2>
<p data-tool="mdnice编辑器"><span>目前该功能还处于预发布状态，使用之前需要先安装<code>10.0.100-preview.4</code><span>&nbsp;SDK。</span></span></p>
<ul class="list-paddingleft-1">
<li><span>https://dotnet.microsoft.com/zh-cn/download/dotnet/10.0</span></li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/1336199/202506/1336199-20250603233334399-764056374.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/1336199/202506/1336199-20250603233341092-497828554.png" alt="" loading="lazy"></p>
<h2 data-tool="mdnice编辑器"><span>VS Code 中创建 C# 文件并直接运行</span></h2>
<p data-tool="mdnice编辑器"><span>接下来我们直接在 VS Code 中创建一个独立的 helloWorld.cs 文件，然后直接在 cmd 命令行工具中使用 dotnet run 运行：</span></p>
<div>
<p><img src="https://img2024.cnblogs.com/blog/1336199/202506/1336199-20250603233353844-3115365.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/1336199/202506/1336199-20250603233402029-600513434.png" alt="" loading="lazy"></p>
<h2 data-tool="mdnice编辑器"><span>使用 #:package 引用 NuGet 包</span></h2>
<p data-tool="mdnice编辑器"><span>我们可以直接在&nbsp;<code>helloWorld.cs</code><span>&nbsp;文件中使用&nbsp;<code>#:package</code><span>&nbsp;指令添加&nbsp;<code>NuGet</code><span>&nbsp;包引用，接下来我们来引用&nbsp;<code>Newtonsoft.Json</code><span>&nbsp;来进行对象的序列化和反序列：</span></span></span></span></span></p>
<pre data-tool="mdnice编辑器"><span data-cacheurl="" data-remoteid="" data-lazy-bgimg="https://mmbiz.qpic.cn/mmbiz_svg/9M0PhLTmTIfzNFlBn3E31bJyGPX6MYXEaEpSaFxfL5hPYXc3mQQ9slku0AhZZJNamwX62iaJIJ4KWAq6w4emgTr5kfTxj2lu6/640?wx_fmt=svg&amp;from=appmsg" data-fail="0"><code>#:package Newtonsoft.Json@13.0.3<br><br><span>using Newtonsoft.Json;<br><br><span>public class Product<br><span>{<br><span>&nbsp; &nbsp; public string Name { get;&nbsp;set<span>; }<br><span>&nbsp; &nbsp; public decimal Price { get;&nbsp;set<span>; }<br><span>&nbsp; &nbsp; public DateTime ReleaseDate { get;&nbsp;set<span>; }<br><span>}<br><br><span>class Program<br><span>{<br><span>&nbsp; &nbsp; static void&nbsp;Main<span>()<br><span>&nbsp; &nbsp; {<br><span>&nbsp; &nbsp; &nbsp; &nbsp; // 序列化示例<br><span>&nbsp; &nbsp; &nbsp; &nbsp; var product = new Product<br><span>&nbsp; &nbsp; &nbsp; &nbsp; {<br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Name =&nbsp;"笔记本"<span>,<br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Price = 9999.99m,<br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ReleaseDate = DateTime.Now<br><span>&nbsp; &nbsp; &nbsp; &nbsp; };<br><br><span>&nbsp; &nbsp; &nbsp; &nbsp; string json = JsonConvert.SerializeObject(product, Formatting.Indented);<br><span>&nbsp; &nbsp; &nbsp; &nbsp; Console.WriteLine("序列化结果："<span>);<br><span>&nbsp; &nbsp; &nbsp; &nbsp; Console.WriteLine(json);<br><br><span>&nbsp; &nbsp; &nbsp; &nbsp; // 反序列化示例<br><span>&nbsp; &nbsp; &nbsp; &nbsp; string jsonInput = @<span>"{<br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ""Name"": ""华为手机"<span>",<br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ""Price"<span>": 3899.00,<br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ""ReleaseDate"": ""2025-06-04T00:00:00"<span>"<br><span>&nbsp; &nbsp; &nbsp; &nbsp; }"<span>;<br><br><span>&nbsp; &nbsp; &nbsp; &nbsp; Console.WriteLine("\n\r"<span>);<br><br><span>&nbsp; &nbsp; &nbsp; &nbsp; var newProduct = JsonConvert.DeserializeObject&lt;Product&gt;(jsonInput);<br><span>&nbsp; &nbsp; &nbsp; &nbsp; Console.WriteLine("反序列化结果："<span>);<br><span>&nbsp; &nbsp; &nbsp; &nbsp; Console.WriteLine($"名称：{newProduct.Name}"<span>);<br><span>&nbsp; &nbsp; &nbsp; &nbsp; Console.WriteLine($"价格：{newProduct.Price:C}"<span>);<br><span>&nbsp; &nbsp; &nbsp; &nbsp; Console.WriteLine($"发布日期：{newProduct.ReleaseDate:yyyy-MM-dd}"<span>);<br><span>&nbsp; &nbsp; }<br><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></span></pre>
</div>
<p><img src="https://img2024.cnblogs.com/blog/1336199/202506/1336199-20250603233420494-51312937.png" alt="" loading="lazy"></p>
<h2 data-tool="mdnice编辑器"><span>使用 #:sdk 指令指定 SDK</span></h2>
<p data-tool="mdnice编辑器"><span>默认情况下，基于文件的程序使用&nbsp;<code>Microsoft.NET.Sdk</code><span>&nbsp;SDK。如果您正在构建类似 Web API 的东西，可以使用&nbsp;<code>#:sdk</code><span>&nbsp;指令更改 SDK：</span></span></span></p>
<pre data-tool="mdnice编辑器"><span data-cacheurl="" data-remoteid="" data-lazy-bgimg="https://mmbiz.qpic.cn/mmbiz_svg/9M0PhLTmTIfzNFlBn3E31bJyGPX6MYXEaEpSaFxfL5hPYXc3mQQ9slku0AhZZJNamwX62iaJIJ4KWAq6w4emgTr5kfTxj2lu6/640?wx_fmt=svg&amp;from=appmsg" data-fail="0"><code>#:sdk Microsoft.NET.Sdk.Web<br></code></span></pre>
<h2 data-tool="mdnice编辑器"><span>使用 #:property 设置 MSBuild 属性</span></h2>
<p data-tool="mdnice编辑器"><span>可以使用&nbsp;<code>#:property</code><span>&nbsp;配置其他构建属性，例如：</span></span></p>
<pre data-tool="mdnice编辑器"><span data-cacheurl="" data-remoteid="" data-lazy-bgimg="https://mmbiz.qpic.cn/mmbiz_svg/9M0PhLTmTIfzNFlBn3E31bJyGPX6MYXEaEpSaFxfL5hPYXc3mQQ9slku0AhZZJNamwX62iaJIJ4KWAq6w4emgTr5kfTxj2lu6/640?wx_fmt=svg&amp;from=appmsg" data-fail="0"><code>#:property LangVersion preview<br></code></span></pre>
<h2 data-tool="mdnice编辑器"><span>参考文章</span></h2>
<ul class="list-paddingleft-1">
<li><span>https://devblogs.microsoft.com/dotnet/announcing-dotnet-run-app</span></li>
<li><span>https://github.com/dotnet/sdk/blob/main/documentation/general/dotnet-run-file.md</span></li>
</ul>
</div>
<div id="MySignature" role="contentinfo">
    <blockquote>
<p style="font-family:YouYuan;font-size: 16px;margin: 0 auto 0.01em auto;"><span style="font-size: 17px; ">作者名称：</span><a href="https://www.cnblogs.com/Can-daydayup/" target="_blank">追逐时光者</a></p>
<p style="font-family:YouYuan;font-size: 16px;margin: 0 auto 0.01em auto;"><span style="font-size: 17px; ">作者简介：</span>一个热爱编程、善于分享、喜欢学习、探索、尝试新事物和新技术的全栈软件工程师。</p>
<p style="font-family:YouYuan;font-size: 16px;margin: 0 auto 0.01em auto;">
本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文链接，否则保留追究法律责任的权利。如果该篇文章对您有帮助的话，可以点一下右下角的<a onclick="votePost(cb_entryId,'Digg')" href="javascript:void(0)" style="color:red;">【♥推荐♥】</a>，希望能够持续的为大家带来好的技术文章，文中可能存在描述不正确的地方，欢迎指正或补充，不胜感激。
</p>
</blockquote>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.050385697111111113" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-06-04 08:00">2025-06-04 08:00</span>&nbsp;
<a href="https://www.cnblogs.com/Can-daydayup">追逐时光者</a>&nbsp;
阅读(<span id="post_view_count">34</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18909325);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18909325', targetLink: 'https://www.cnblogs.com/Can-daydayup/p/18909325', title: '一种更简单的方式运行 C# 代码，简化 C# 开发体验！' })">举报</a>
</div>
        