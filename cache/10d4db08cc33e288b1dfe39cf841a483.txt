
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/HaiJun-Aion/p/18978417" title="发布于 2025-07-11 10:47">
    <span role="heading" aria-level="2">AI领域又新增协议： AG-UI</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1654515/202507/1654515-20250711103211049-833417260.png" class="lazyload"></p>
<p>随着AI的快速发展正在重塑技术生态，协议的演进速度尤为迅猛。一个令人头疼的问题浮现了：不同的AI智能体和前端应用之间就像说着不同语言的人，无法顺畅交流。开发者们需要为每个智能体单独编写接口，维护成本高昂，用户体验也参差不齐。</p>
<p><img alt="23ae511f4785578c23caf11413b53f89" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1654515/202507/1654515-20250711103207281-3740915.png" class="lazyload"></p>
<br>
正是在这样的背景下，2025年5月，以开发AI集成工具包CopilotKit而闻名的技术团队，正式开源发布了AG-UI (Agent-User Interaction Protocol)。其核心使命直击痛点：为AI智能体（Agent）与用户界面（UI Application）之间的实时、双向、结构化通信，制定一个专门为智能体与用户交互而设计的开放标准。
<p>MCP 和 A2A 为 AI 智能体与工具、其他智能体之间的交互奠定标准之后，AG-UI 进一步填补了智能体与用户前端交互的空白。</p>
<h2 id="什么是ag-ui协议">什么是AG-UI协议？</h2>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1654515/202507/1654515-20250711103217493-1501310470.png" class="lazyload"></p>
<p>AG-UI协议，全称Agent-User Interaction Protocol（智能体用户交互协议），是一个轻量级、事件驱动的开放协议。它充当了后端AI智能体和全栈应用之间的桥梁，是智能体与用户相遇的地方。</p>
<p>简单来说，AG-UI就像是一个"翻译官"，让不同的AI智能体都能用统一的"语言"与前端应用对话。无论你的智能体使用什么框架开发，通过AG-UI协议，它都能与用户界面实现流畅的实时交互。</p>
<h2 id="ag-ui协议的核心特性">AG-UI协议的核心特性</h2>
<h3 id="1-事件驱动架构">1. 事件驱动架构</h3>
<p>AG-UI采用事件驱动的设计理念，通过标准HTTP或可选的二进制通道流式传输单一序列的JSON事件。这些事件包括：</p>
<ul>
<li>消息事件：处理对话内容</li>
<li>工具调用事件：执行特定功能</li>
<li>状态补丁事件：更新应用状态</li>
<li>生命周期信号：管理会话流程</li>
</ul>
<h3 id="2-双向交互能力">2. 双向交互能力</h3>
<p>与传统的单向通信不同，AG-UI支持真正的双向交互。智能体不仅能向用户发送信息，还能接收用户的实时反馈，实现真正的协作式工作流程。</p>
<h3 id="3-传输方式灵活">3. 传输方式灵活</h3>
<p>AG-UI不强制要求特定的传输方式，支持多种通信机制：</p>
<ul>
<li>Server-Sent Events (SSE)</li>
<li>WebSockets</li>
<li>Webhooks</li>
<li>其他自定义传输方式</li>
</ul>
<p>这种灵活性让开发者能够根据自己的架构需求选择最适合的通信方式。</p>
<h3 id="4-兼容性强">4. 兼容性强</h3>
<p>AG-UI设计时充分考虑了兼容性问题。现有的智能体框架不需要完全重写，只需要让事件格式兼容AG-UI即可。这大大降低了迁移成本。</p>
<h2 id="ag-ui-与-a2amcp--的关系">AG-UI 与 A2A、MCP  的关系</h2>
<p>AG-UI专注于智能体与用户的交互层，它不与A2A（智能体到智能体协议）和MCP（模型上下文协议）等协议竞争。<br>
实际上，这些协议是互补的：</p>
<ul>
<li>AG-UI：专注于智能体与用户的深度协作，将智能体引入前端应用</li>
<li>MCP：标准化工具调用和上下文处理</li>
<li>A2A：促进智能体之间的通信和协作</li>
</ul>
<p>一个智能体可以同时使用这三种协议：用MCP调用工具，用A2A与其他智能体通信，用AG-UI与用户协作。</p>
<h2 id="接入使用--ag-ui">接入使用  AG-UI</h2>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1654515/202507/1654515-20250711103231639-578346015.png" class="lazyload"></p>
<p>目前官方提供了两种语言的SDK 接入使用：</p>
<p>Python SDK：</p>
<pre><code>pip install ag-ui-protocol
</code></pre>
<p>TS SDK</p>
<pre><code>npm install @ag-ui/core
</code></pre>
<h2 id="ag-ui提供了完整的开发工具链">AG-UI提供了完整的开发工具链</h2>
<ul>
<li>详细的文档和示例</li>
<li>多种编程语言的SDK</li>
<li>调试和故障排除工具</li>
<li>与Cursor等开发工具的集成</li>
</ul>
<h2 id="ag-ui">AG-UI</h2>
<h3 id="ag-ui-整体架构-以及传输机制">AG-UI 整体架构 以及传输机制</h3>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1654515/202507/1654515-20250711103240097-1479549912.png" class="lazyload"></p>
<h3 id="事件流执行流程">事件流执行流程</h3>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1654515/202507/1654515-20250711103244062-43433292.png" class="lazyload"></p>
<h3 id="ag-ui-chat-场景">AG-UI Chat 场景</h3>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1654515/202507/1654515-20250711103248354-960076016.png" class="lazyload"></p>
<h2 id="最后">最后</h2>
<p>AG-UI不仅仅是一个协议，它是智能系统与人类交互的新兴标准。对于开发者来说，AG-UI提供了一个简洁、可扩展、优雅的基础，用于创建高质量、交互性强、可控制的智能体应用。对于用户来说，这意味着更流畅、更自然、更智能的AI交互体验。<br>
随着AI技术的不断发展，智能体将越来越多地融入我们的日常工作和生活中。或许未来都是Agent 应用了，不是当下我们传统的App 多个分支输出端了，任何变的很简单。</p>
<blockquote>
<p>AG-UI doc:</p>
</blockquote>
<ul>
<li><a href="https://docs.ag-ui.com/introduction" target="_blank" rel="noopener nofollow">https://docs.ag-ui.com/introduction</a></li>
<li><a href="https://github.com/ag-ui-protocol/ag-ui" target="_blank" rel="noopener nofollow">https://github.com/ag-ui-protocol/ag-ui</a></li>
</ul>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1654515/202507/1654515-20250711103314453-1613914444.png" class="lazyload"></p>
<p><strong>欢迎关注我们，后期分享更多AI最新动态和玩法👏</strong></p>
<p>创作不易，欢迎一键三连👍️💗</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-11 10:48">2025-07-11 10:47</span>&nbsp;
<a href="https://www.cnblogs.com/HaiJun-Aion">程序员海军</a>&nbsp;
阅读(<span id="post_view_count">150</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18978417);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18978417', targetLink: 'https://www.cnblogs.com/HaiJun-Aion/p/18978417', title: 'AI领域又新增协议： AG-UI' })">举报</a>
</div>
        