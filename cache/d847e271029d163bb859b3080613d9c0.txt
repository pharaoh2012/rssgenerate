<!----> <meta itemprop="headline" content="🛒🚀🎉前端开发，实现商品抛物线飞入购物车"> <meta itemprop="keywords" content="前端"> <meta itemprop="datePublished" content="2024-11-13T02:40:53.000Z"> <meta itemprop="image" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-128.png~tplv-t2oaga2asx-image.image"> <div itemprop="author" itemscope="itemscope" itemtype="http://schema.org/Person"><meta itemprop="name" content="盏灯"> <meta itemprop="url" content="https://juejin.cn/user/3122268754677774"></div> <div itemprop="publisher" itemscope="itemscope" itemtype="http://schema.org/Organization"><meta itemprop="name" content="掘金"> <div itemprop="logo" itemscope="itemscope" itemtype="https://schema.org/ImageObject"><meta itemprop="url" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-white-180.png~tplv-t2oaga2asx-image.image"> <meta itemprop="width" content="180"> <meta itemprop="height" content="180"></div></div> <h1 class="article-title" data-v-7cdd11fb="">
            🛒🚀🎉前端开发，实现商品抛物线飞入购物车
            <!----> <!----></h1> <div class="author-info-block block-hidden" data-v-7cdd11fb=""><div class="author-info-box" data-v-7cdd11fb=""><div class="author-name" data-v-7cdd11fb=""><a href="/user/3122268754677774/posts" target="_blank" rel="" class="jj-link username username ellipsis" data-v-65b50b51="" data-v-1800aadb="" data-v-7cdd11fb=""><span class="name" style="max-width:160px;" data-v-65b50b51="" data-v-1800aadb="">
    盏灯
  </span> <!----> <!----> <!----> </a></div> <div class="meta-box" data-v-7cdd11fb=""><time datetime="2024-11-13T02:40:53.000Z" title="Wed Nov 13 2024 02:40:53 GMT+0000 (Coordinated Universal Time)" class="time" data-v-7cdd11fb="">
                    2024-11-13
                  </time> <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="read-icon" data-v-7cdd11fb=""><path d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor" data-v-7cdd11fb=""></path><circle cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor" data-v-7cdd11fb=""></circle></svg> <span class="views-count" data-v-7cdd11fb="">
                    6,466
                  </span> <span class="read-time" data-v-7cdd11fb=""><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" data-v-7cdd11fb=""><rect width="16" height="16" fill="none" data-v-7cdd11fb=""></rect><circle cx="8" cy="8" r="5.65625" stroke="#8A919F" data-v-7cdd11fb=""></circle><path d="M7.69141 5.18652V8.30924H10.8141" stroke="#8A919F" stroke-linecap="round" stroke-linejoin="round" data-v-7cdd11fb=""></path></svg>
                    阅读5分钟
                  </span> <!----></div></div> <div style="flex:1;" data-v-7cdd11fb=""></div> <!----> <!----></div> <!----> <!----> <!----> <div id="article-root" itemprop="articleBody" class="main" data-v-7cdd11fb=""><div class="article-viewer markdown-body result"><p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/789a3f66cc224ab3a3c4f947b82c02c9~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg55uP54Gv:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738198716&amp;x-signature=6YtjBpdZp6GQ55V8tmPGd9zrHCM%3D" alt="image.png" loading="lazy"></p>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/1bdd81c8feea42a4af6c77a3465a253c~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg55uP54Gv:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738198716&amp;x-signature=z5ZJlseL0AYdXhvysz%2Bq737Cr4Y%3D" alt="Kapture 2024-11-12 at 15.22.40.gif" loading="lazy"></p>
<h2 data-id="heading-0">一、运动动画</h2>
<p>抛物线由<code>两段</code>运动构成：<br>
1、<code>横</code>向 <br>
2、<code>纵</code>向</p>
<p>忽略空气阻力。<br>
横向是<code>匀速</code>直线运动，<br>
纵向是<code>自由</code>落体运动。</p>
<h3 data-id="heading-1">用css做</h3>
<h4 data-id="heading-2">一个元素不同方向动画</h4>
<pre><code class="hljs language-html" lang="html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en"</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css">
        <span class="hljs-selector-tag">body</span> {
            <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;
            <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;
        }
        <span class="hljs-selector-class">.ball</span> {
            <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;
            <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;
            <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;
            <span class="hljs-attribute">background</span>: <span class="hljs-number">#B30204</span>;
        }
    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"ball"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span>
</code></pre>
<p>给这个小球动画，分别一个x方向的移动，一个y方向的移动。</p>
<pre><code class="hljs language-css" lang="css">// x
<span class="hljs-keyword">@keyframes</span> moveX {
    <span class="hljs-selector-tag">to</span> {
        <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">200px</span>);
    }
}

// y
<span class="hljs-keyword">@keyframes</span> moveY {
    <span class="hljs-selector-tag">to</span> {
        <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">400px</span>);
    }
}

<span class="hljs-selector-class">.ball</span> {
    <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;
    <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;
    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;
    <span class="hljs-attribute">background</span>: <span class="hljs-number">#B30204</span>;
    <span class="hljs-attribute">animation</span>: moveX <span class="hljs-number">2s</span> linear forwards, moveY <span class="hljs-number">2s</span> ease forwards;
}
</code></pre>
<p>看看效果：</p>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/be9e7d78f1844124913f13ab81d80a50~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg55uP54Gv:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738198716&amp;x-signature=0L8fpeJylwwFpwZEkQNuyhrFuZY%3D" alt="Kapture 2024-11-12 at 16.00.29.gif" loading="lazy"></p>
<p>不是我们想要的效果。为什么呢？是因为一个元素同一时间，赋予两个动画，既让它往左走200米，又让它走往下走400米。明显造成冲突了。</p>
<p>那么如何来解决这个问题呢？<strong>多元素动画</strong>。每一个负责一段运动就好了，那么就不存在css属性冲突这个问题了。</p>
<h4 data-id="heading-3">多元素各负责一个动画</h4>
<pre><code class="hljs language-html" lang="html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en"</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css">
        <span class="hljs-selector-tag">body</span> {
            <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;
            <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;
        }
        <span class="hljs-selector-class">.ball</span> {
            <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;
            <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;
            <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;
            <span class="hljs-attribute">background</span>: <span class="hljs-number">#B30204</span>;
            <span class="hljs-attribute">animation</span>: moveX <span class="hljs-number">2s</span> linear forwards;
        }
        <span class="hljs-selector-class">.inner</span> {
            <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;
            <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;
            <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;
            <span class="hljs-attribute">background</span>: green;
            <span class="hljs-attribute">animation</span>: moveY <span class="hljs-number">2s</span> ease forwards;
        }
        
        // 动画
        // x
        <span class="hljs-keyword">@keyframes</span> moveX {
            <span class="hljs-selector-tag">to</span> {
                <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">200px</span>);
            }
        }

        // y
        <span class="hljs-keyword">@keyframes</span> moveY {
            <span class="hljs-selector-tag">to</span> {
                <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">400px</span>);
            }
        }
    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"ball"</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"inner"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span>
</code></pre>
<p>现在有两个元素了。一个x轴向右匀速移动200px，一个y轴向下缓慢加速移动400px。我们来看看效果：</p>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/1787a310288c471b829e28186bf3f24c~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg55uP54Gv:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738198716&amp;x-signature=Qdreq0XltHh8P%2BwFTHG%2Fue%2BYtrw%3D" alt="Kapture 2024-11-12 at 16.41.39.gif" loading="lazy"></p>
<p>🔴 红色是父 <br>
🟢 绿色是子 <br>
终点(x, y)是(200, 400)</p>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/b2a2c62c5f9e41669fb21193820487dc~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg55uP54Gv:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738198716&amp;x-signature=Y8OzDWl9jY8VZuLcR4N%2F71juY2Y%3D" alt="image.png" loading="lazy"></p>
<p>x轴方向的父确确实实也会影响y轴方向的子，只不过这个效果没达到我们想要的那种抛物线的效果。</p>
<h4 data-id="heading-4">贝塞尔曲线</h4>
<p>那么，想要达到我们想要的效果，y轴方向，其实是需要先向上抛一段路程，再向下做加速运动的。css动画中能满足我们<code>随心</code>所欲地<code>定制</code>复杂<code>动画</code>的需求，这里就需要用到<code>贝塞尔曲线cubic-bezier()函数</code>。</p>
<p><strong>基本语法</strong>：</p>
<p><code>cubic-bezier(x1, y1, x2, y2)</code>。<br>
<code>x1、y1、x2、y2</code>这四个参的取值范围都是(<code>0到1</code>)，较小就较慢，较大就较快。</p>
<p><strong>参数含义</strong>：</p>
<blockquote>
<p>x1, y1 ：起始速度（水平，垂直）</p>
</blockquote>
<ul>
<li>
<p><code>x1</code>：控制动画<code>起始</code>点的<code>水平</code>方向<code>速度</code>变化。</p>
</li>
<li>
<p><code>y1</code>：控制动画<code>起始</code>点的<code>垂直</code>方向<code>速度</code>变化。</p>
</li>
</ul>
<blockquote>
<p>x2, y2 ：结束速度（水平，垂直）</p>
</blockquote>
<ul>
<li>
<p><code>x2</code>：控制动画<code>结束</code>点的<code>水平</code>方向<code>速度</code>变化。</p>
</li>
<li>
<p><code>y2</code>：控制动画<code>结束</code>点的<code>垂直</code>方向<code>速度</code>变化。</p>
</li>
</ul>
<p>我们平常碰到的<code>ease</code>、<code>ease-in</code>、<code>ease-out</code>、<code>ease-in-out</code>等等这些，实际上就是贝塞尔曲线<code>cubic-bezier()</code>的特定实例。</p>
<p>实际上讲的是<code>速度</code>。只要<code>x1=y1, x2=y2</code>那即是匀速<code>linear</code>。</p>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/d4b16be7455e4ef7b7831fe53c4f5738~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg55uP54Gv:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738198716&amp;x-signature=YtnSvUg1QjJZHMkunuyFS9fpi%2Bc%3D" alt="image.png" loading="lazy"></p>
<hr>
<p>从<code>贝塞尔曲线</code>这点回到<code>抛物线</code>这里。</p>
<p>要想做抛物线，就得知道这条线是先<code>远离目标值</code>，再<code>逼近目标值</code>。那么我们可以设置它的时间函数<code>animation-timing-function</code>为<code>cubic-bezier(0.5, -0.5, 1, 1)</code>。</p>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/506e8b1edf3e4abc9caadf0855cf1e63~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg55uP54Gv:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738198716&amp;x-signature=nZtv%2Fkuei2H4uA8osct9p5f21G8%3D" alt="1.gif" loading="lazy"></p>
<h2 data-id="heading-5">二、实战</h2>
<p>写<code>按钮</code>(点击加号飞向购物车，实际上我们这案例是点加号，加号自己根据自己的位置飞向购物车，一般呢，这是不用选规格的商品就这样做，要选规格的，就跳到选这个商品的规格详情界面再去加，啰嗦了，大家去小程序上点个外卖瞅一眼)、<code>加号</code>、<code>购物车</code>。</p>
<pre><code class="hljs language-html" lang="html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en"</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css">
            // 加号位置动态变，方便后面用js控制它的位置
            <span class="hljs-selector-class">.plus</span> {
                <span class="hljs-attribute">left</span>: <span class="hljs-built_in">var</span>(--left);
                <span class="hljs-attribute">top</span>: <span class="hljs-built_in">var</span>(--top);
                <span class="hljs-attribute">animation</span>: moveY <span class="hljs-number">0.8s</span> <span class="hljs-built_in">cubic-bezier</span>(<span class="hljs-number">0.5</span>, -<span class="hljs-number">0.5</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>);
            }
            
            <span class="hljs-selector-class">.plus</span> <span class="hljs-selector-class">.iconfont</span> {
                <span class="hljs-attribute">animation</span>: moveX <span class="hljs-number">0.8s</span> linear;
            }
            
            <span class="hljs-keyword">@keyframes</span> moveY {
                <span class="hljs-selector-tag">to</span> {
                    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-built_in">var</span>(--y));
                }
            }
            
            <span class="hljs-keyword">@keyframes</span> moveX {
                <span class="hljs-selector-tag">to</span> {
                    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-built_in">var</span>(--x));
                }
            }
        </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>
    
    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"cart"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> // 购物车
        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"btn"</span>&gt;</span>点击<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span> // 点击按钮
        
        // 这个静态固定位置的（动态时需注释掉，需动态添加），下面动态js代码如下👇
        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"plus"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"--left: 300px; --top: 300px; --y: 400px; --x: 200px;"</span>&gt;</span> // 加号
            <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"iconfont"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>
        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span>
</code></pre>
<blockquote>
<p>以上是静态加号抛物线加入购物车。现在动态做，js去添加号，动态主要是要去算元素的位置，而不是固定的位置。</p>
</blockquote>
<p>// 根据加号的父元素的位置，去设置加号的位置</p>
<pre><code class="hljs language-js" lang="js"><span class="hljs-comment">/**
* 1、实现一个点击按钮，在按钮位置生成一个加号。
* 2、通过动画效果将加号抛物线姿势飞向购物车，飞完后移除该加号。
* 3、动态设置--left、--top、--x和--y去控制加号的位置和移动路径。
*/</span>
<span class="hljs-keyword">const</span> cart = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">".cart"</span>);
<span class="hljs-keyword">const</span> btn = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">".btn"</span>);
<span class="hljs-keyword">const</span> <span class="hljs-variable constant_">PLUS_SIZE</span>  = <span class="hljs-number">30</span>; <span class="hljs-comment">// 加号的宽度</span>

btn.<span class="hljs-property">onclick</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) {
  <span class="hljs-keyword">const</span> div = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">"div"</span>);
  div.<span class="hljs-property">className</span> = <span class="hljs-string">"plus"</span>;
  div.<span class="hljs-property">innerHTML</span> = <span class="hljs-string">`&lt;i class="iconfont"&gt;&lt;/i&gt;`</span>;

  <span class="hljs-keyword">const</span> btnRect = btn.<span class="hljs-title function_">getBoundingClientRect</span>();
  <span class="hljs-keyword">const</span> left = btnRect.<span class="hljs-property">left</span> + btnRect.<span class="hljs-property">width</span> / <span class="hljs-number">2</span> - <span class="hljs-variable constant_">PLUS_SIZE</span> / <span class="hljs-number">2</span>,
      top = btnRect.<span class="hljs-property">top</span> + btnRect.<span class="hljs-property">height</span> / <span class="hljs-number">2</span> - <span class="hljs-variable constant_">PLUS_SIZE</span> / <span class="hljs-number">2</span>;

  <span class="hljs-comment">// 横向移动的距离是 加号的left加上它自身宽度的一半，减去购物车的left加上它自身宽度的一半。</span>
  <span class="hljs-keyword">const</span> catRect = cart.<span class="hljs-title function_">getBoundingClientRect</span>();
  <span class="hljs-keyword">const</span> x = (catRect.<span class="hljs-property">left</span> + catRect.<span class="hljs-property">width</span> / <span class="hljs-number">2</span>) - <span class="hljs-title class_">PlUS</span>_SIZE/<span class="hljs-number">2</span>-left;
  <span class="hljs-comment">// 纵向移动的距离是 加号的top加上它自身高度的一半，减去购物车的top加上它自身高度的一半。</span>
  <span class="hljs-keyword">const</span> y = (catRect.<span class="hljs-property">top</span> + catRect.<span class="hljs-property">height</span> / <span class="hljs-number">2</span>) - <span class="hljs-variable constant_">PLUS_SIZE</span>/<span class="hljs-number">2</span>-top;

  div.<span class="hljs-property">style</span>.<span class="hljs-title function_">setProperty</span>(<span class="hljs-string">"--left"</span>, <span class="hljs-string">`<span class="hljs-subst">${left}</span>px`</span>);
  div.<span class="hljs-property">style</span>.<span class="hljs-title function_">setProperty</span>(<span class="hljs-string">"--top"</span>, <span class="hljs-string">`<span class="hljs-subst">${top}</span>px`</span>);
  div.<span class="hljs-property">style</span>.<span class="hljs-title function_">setProperty</span>(<span class="hljs-string">"--x"</span>, <span class="hljs-string">`<span class="hljs-subst">${x}</span>px`</span>);
  div.<span class="hljs-property">style</span>.<span class="hljs-title function_">setProperty</span>(<span class="hljs-string">"--y"</span>, <span class="hljs-string">`<span class="hljs-subst">${y}</span>px`</span>);

  div.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">"animationend"</span>, <span class="hljs-function">() =&gt;</span> { div.<span class="hljs-title function_">remove</span>(); }) <span class="hljs-comment">// 飞完后消失</span>

  <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-title function_">appendChild</span>(div);
}
</code></pre>
<p>css</p>
<pre><code class="hljs language-css" lang="css"><span class="hljs-selector-class">.plus</span> {
  <span class="hljs-attr">--duration</span>: <span class="hljs-number">0.5s</span>; // 定义自定义属性<span class="hljs-attr">--duration</span>，设置为<span class="hljs-number">0.5s</span>，代表动画持续<span class="hljs-number">0.5s</span>
  <span class="hljs-attribute">animation</span>: moveY <span class="hljs-built_in">var</span>(--duration) <span class="hljs-built_in">cubic-bezier</span>(<span class="hljs-number">0.5</span>, -<span class="hljs-number">0.5</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>);
}

<span class="hljs-selector-class">.plus</span> <span class="hljs-selector-class">.iconfont</span> {
  <span class="hljs-attribute">animation</span>: moveX <span class="hljs-built_in">var</span>(--duration) linear;
}
</code></pre>
<blockquote>
<p>--duration 这种是自定义属性，包括上面的<code>--left --top --x --y</code>这些都是自定义属性，以便重复使用。</p>
</blockquote>
<h2 data-id="heading-6">三、拓展</h2>
<ul>
<li><code>Houdini API</code></li>
</ul>
<p>说到动画，那么非常值得去看看一下<a href="https://link.juejin.cn?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FAPI%2FHoudini_APIs" target="_blank" title="https://developer.mozilla.org/zh-CN/docs/Web/API/Houdini_APIs" ref="nofollow noopener noreferrer"><code>Houdini API</code></a>。是<code>css引擎</code>暴露出来的一组<code>底层api</code>。可以直接和浏览器的<code>css引擎</code>去交互。</p>
<ul>
<li><code>tween.js</code>，js动画库，创一些平滑的动画效果。不必手动去处理一些复杂的动画细节。</li>
</ul>
<blockquote>
<p>脑子内存记不了太多，勤写一些笔记。</p>
</blockquote>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/63110e12c9e74f85902fbab66e54b2ac~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg55uP54Gv:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738198716&amp;x-signature=TEhQmBNzfFY0uM270N10mUxwhj0%3D" alt="1.gif" loading="lazy"></p>
<blockquote>
<p>☎️ 希望对大家有所帮助，本文有些地方可能考虑不够周到，有些纰漏，就当抛砖引玉，还望您海涵，如有错误，望不吝赐教，欢迎评论区留言互相学习。感谢阅读，祝您开发有乐趣。</p>
</blockquote></div></div>