<!----> <meta itemprop="headline" content="轻松搞定拖拽缩放、移动，不怕领导叫我写拖拽！！"> <meta itemprop="keywords" content="前端,JavaScript,Vue.js"> <meta itemprop="datePublished" content="2024-12-24T17:51:40.000Z"> <meta itemprop="image" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-128.png~tplv-t2oaga2asx-image.image"> <div itemprop="author" itemscope="itemscope" itemtype="http://schema.org/Person"><meta itemprop="name" content="前端金熊"> <meta itemprop="url" content="https://juejin.cn/user/97193028493655"></div> <div itemprop="publisher" itemscope="itemscope" itemtype="http://schema.org/Organization"><meta itemprop="name" content="掘金"> <div itemprop="logo" itemscope="itemscope" itemtype="https://schema.org/ImageObject"><meta itemprop="url" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-white-180.png~tplv-t2oaga2asx-image.image"> <meta itemprop="width" content="180"> <meta itemprop="height" content="180"></div></div> <h1 class="article-title" data-v-b21437b8="">
            轻松搞定拖拽缩放、移动，不怕领导叫我写拖拽！！
            <!----> <!----></h1> <div class="author-info-block block-hidden" data-v-b21437b8=""><div class="author-info-box" data-v-b21437b8=""><div class="author-name" data-v-b21437b8=""><a href="/user/97193028493655/posts" target="_blank" rel="" class="jj-link username username ellipsis" data-v-65b50b51="" data-v-1800aadb="" data-v-b21437b8=""><span class="name" style="max-width:160px;" data-v-65b50b51="" data-v-1800aadb="">
    前端金熊
  </span> <!----> <!----> <!----> </a></div> <div class="meta-box" data-v-b21437b8=""><time datetime="2024-12-24T17:51:40.000Z" title="Tue Dec 24 2024 17:51:40 GMT+0000 (Coordinated Universal Time)" class="time" data-v-b21437b8="">
                    2024-12-24
                  </time> <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="read-icon" data-v-b21437b8=""><path d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor" data-v-b21437b8=""></path><circle cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor" data-v-b21437b8=""></circle></svg> <span class="views-count" data-v-b21437b8="">
                    4,819
                  </span> <span class="read-time" data-v-b21437b8=""><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" data-v-b21437b8=""><rect width="16" height="16" fill="none" data-v-b21437b8=""></rect><circle cx="8" cy="8" r="5.65625" stroke="#8A919F" data-v-b21437b8=""></circle><path d="M7.69141 5.18652V8.30924H10.8141" stroke="#8A919F" stroke-linecap="round" stroke-linejoin="round" data-v-b21437b8=""></path></svg>
                    阅读6分钟
                  </span> <!----></div></div> <div style="flex:1;" data-v-b21437b8=""></div> <!----> <!----></div> <!----> <!----> <!----> <img src="//lf-web-assets.juejin.cn/obj/juejin-web/xitu_juejin_web/img/banner.a5c9f88.jpg" style="width:100%;height:auto;display:block;" data-v-b21437b8=""> <div id="article-root" itemprop="articleBody" class="main" data-v-b21437b8=""><div class="article-viewer markdown-body result"><p>本文已经授权【稀土掘金技术社区】官方公众号独家原创发布。</p>
<p>经常会碰到需要拖拽缩放的情况，只要有思路，实现起来会非常顺畅。<br>
功能的核心是鼠标放在四个边和角上，拖拽把容器放大或缩小</p>
<h2 data-id="heading-0">功能演示</h2>
<p><strong>缩放：</strong></p>
<img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/9ae1c67fe353449da64bc26c70492a47~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5YmN56uv6YeR54aK:q75.awebp?rk3s=f64ab15b&amp;x-expires=1742525142&amp;x-signature=m6kqXqBhVIMUAa8zCE2%2FVxuKynM%3D" alt="拖动缩放演示.gif" width="100%" loading="lazy">
<p><strong>移动：</strong></p>
<img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/79a6012e456a4867812b3ba8611c21f6~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5YmN56uv6YeR54aK:q75.awebp?rk3s=f64ab15b&amp;x-expires=1742525142&amp;x-signature=oblTzWLNYsnkjULvNyRWDdi0F%2F4%3D" alt="拖动演示.gif" width="100%" loading="lazy">
<p>演示网址：<a href="https://link.juejin.cn?target=https%3A%2F%2Fxionglongbing.github.io%2FTreasure-Navigation%2F" target="_blank" title="https://xionglongbing.github.io/Treasure-Navigation/" ref="nofollow noopener noreferrer">宝藏导航</a></p>
<hr>
<h2 data-id="heading-1">缩放设计思路</h2>
<ol>
<li>使用css绘制四条边和四个角，</li>
<li>通过css定位，控制四根线和四个角在对应的位置</li>
<li>监听鼠标点击和移动事件</li>
<li>在移动的过程中，改变容器的大小</li>
</ol>
<hr>
<h2 data-id="heading-2">核心设计</h2>
<h3 data-id="heading-3">基础html结构</h3>
<pre><code class="hljs language-html" lang="html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>
  <span class="hljs-comment">&lt;!-- 使用 v-if 判断是否插入到 body 中 --&gt;</span>
  <span class="hljs-comment">&lt;!-- 创建一个容器，支持拖拽，使用 ref 引用该容器 --&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>
    <span class="hljs-attr">ref</span>=<span class="hljs-string">"draggableContainer"</span>
    <span class="hljs-attr">class</span>=<span class="hljs-string">"draggable-container"</span>
    @<span class="hljs-attr">mousedown</span>=<span class="hljs-string">"startDrag"</span>
    <span class="hljs-attr">:style</span>=<span class="hljs-string">"containerStyle"</span>
  &gt;</span>
    <span class="hljs-comment">&lt;!-- 插槽，用户可以将其他内容插入到这个容器中 --&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">slot</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span>

    <span class="hljs-comment">&lt;!-- 创建缩放控制点，每个控制点代表一个边角，使用 v-for 循环渲染 --&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>
      <span class="hljs-attr">v-for</span>=<span class="hljs-string">"type in resizeTypes"</span>
      <span class="hljs-attr">:key</span>=<span class="hljs-string">"type"</span>
      <span class="hljs-attr">:class</span>=<span class="hljs-string">"`${type}-resize`"</span>
      @<span class="hljs-attr">mousedown</span>=<span class="hljs-string">"startResize($event, type)"</span>
    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>
</code></pre>
<h3 data-id="heading-4">基础data数据：</h3>
<pre><code class="hljs language-js" lang="js"><span class="hljs-attr">data</span>: {
      <span class="hljs-comment">// 定义可缩放的边和角的类型</span>
      <span class="hljs-attr">resizeTypes</span>: [<span class="hljs-string">"lt"</span>, <span class="hljs-string">"t"</span>, <span class="hljs-string">"rt"</span>, <span class="hljs-string">"r"</span>, <span class="hljs-string">"rb"</span>, <span class="hljs-string">"b"</span>, <span class="hljs-string">"lb"</span>, <span class="hljs-string">"l"</span>],
      <span class="hljs-comment">// 定义容器位置和大小的响应式数据</span>
      <span class="hljs-attr">position</span>: { <span class="hljs-attr">x</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">left</span>, <span class="hljs-attr">y</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">top</span> }, <span class="hljs-comment">// 容器的位置</span>
      <span class="hljs-attr">size</span>: { <span class="hljs-attr">width</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">width</span>, <span class="hljs-attr">height</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">height</span> }, <span class="hljs-comment">// 容器的尺寸</span>
  }
</code></pre>
<h3 data-id="heading-5">核心代码和思路</h3>
<blockquote>
<p><strong>容器新宽度 = 容器初始宽度 + 鼠标移动距离</strong><br></p>
</blockquote>
<p>通过上面公式，我们需要记录</p>
<ol>
<li><code>容器的初始宽度</code></li>
<li><code>鼠标移动距离 = 鼠标新位置 - 鼠标初始距离</code></li>
</ol>
<h4 data-id="heading-6">1. 记录容器和鼠标初始状态</h4>
<pre><code class="hljs language-js" lang="js"><span class="hljs-comment">// 鼠标按下，开始拖拽</span>
<span class="hljs-title function_">startResize</span>(<span class="hljs-params">event</span>) {
    <span class="hljs-comment">// 记录鼠标初始位置</span>
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">originMouseX</span> = event.<span class="hljs-property">clientX</span>;
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">originMouseY</span> = event.<span class="hljs-property">clientY</span>;

    <span class="hljs-comment">// 记录容器初始宽高</span>
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">originWidth</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">size</span>.<span class="hljs-property">width</span>;
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">originHeight</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">size</span>.<span class="hljs-property">height</span>;
},
</code></pre>
<h4 data-id="heading-7">2. 计算拖拽后新宽度</h4>
<p>根据：<strong>容器新宽度 = 容器初始宽度 + 鼠标移动距离</strong><br></p>
<p><strong><code>拖拽容器右边：</code></strong></p>
<pre><code class="hljs language-js" lang="js"><span class="hljs-comment">// 计算鼠标的移动距离 deltaX</span>
<span class="hljs-keyword">const</span> deltaX = event.<span class="hljs-property">clientX</span> - <span class="hljs-variable language_">this</span>.<span class="hljs-property">originMouseX</span>; 
<span class="hljs-comment">// 容器新宽度 = 初始宽度 + 鼠标移动距离</span>
newWidth = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originWidth</span> + deltaX; 
</code></pre>
<p><strong><code>拖拽容器右下角：</code></strong><br>
当我们拖拽容器右下角，容器的宽和高都会改变。我们需要把这个拆分成两个步骤来解决。<br></p>
<pre><code class="hljs language-js" lang="js"><span class="hljs-comment">// 获取新宽度</span>
<span class="hljs-keyword">const</span> deltaX = event.<span class="hljs-property">clientX</span> - <span class="hljs-variable language_">this</span>.<span class="hljs-property">originMouseX</span>; 
newWidth = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originWidth</span> + deltaX;

<span class="hljs-comment">// 获取新高度</span>
<span class="hljs-keyword">const</span> deltaY = event.<span class="hljs-property">clientY</span> - <span class="hljs-variable language_">this</span>.<span class="hljs-property">originMouseY</span>; <span class="hljs-comment">// 计算鼠标的纵向位移</span>
newHeight = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originHeight</span> + deltaY;
</code></pre>
<p><strong><code>拖拽左边和上边:</code></strong><br>
拖拽左边的时候，左边的定位不能始终都是在原来的位置。<br>
假设: <br>
&nbsp;&nbsp;&nbsp;&nbsp;我们的初始位置是 <code>left: 200px</code>。左边向左拖拽<code>50px</code>后，需要变为<code>left: 150px</code>
首先我们需要在开始的时候记录容器的初始位置</p>
<pre><code class="hljs language-js" lang="js"><span class="hljs-comment">// 鼠标按下，开始拖拽</span>
<span class="hljs-title function_">startResize</span>(<span class="hljs-params">event</span>) {
    <span class="hljs-comment">// 记录鼠标初始位置</span>
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">originMouseX</span> = event.<span class="hljs-property">clientX</span>;
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">originMouseY</span> = event.<span class="hljs-property">clientY</span>;

    <span class="hljs-comment">// 记录容器初始宽高</span>
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">originWidth</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">size</span>.<span class="hljs-property">width</span>;
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">originHeight</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">size</span>.<span class="hljs-property">height</span>;
    
    <span class="hljs-comment">// 记录容器初始位置</span>
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">originContainX</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">x</span>;
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">originContainY</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">y</span>;
}
</code></pre>
<p>改变宽高的同时，改变容器左上角的位置</p>
<pre><code class="hljs language-js" lang="js"><span class="hljs-comment">// 改变高度</span>
<span class="hljs-keyword">const</span> deltaX = event.<span class="hljs-property">clientX</span> - <span class="hljs-variable language_">this</span>.<span class="hljs-property">originMouseX</span>; 
newWidth = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originWidth</span> - deltaX;

<span class="hljs-comment">// 改变左边的位置</span>
<span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">x</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originContainX</span> + deltaX;
</code></pre>
<h4 data-id="heading-8">3. 确定拖拽的是哪条边</h4>
<p>我们在点击的时候会传递type,使用变量把type记录下。</p>
<pre><code class="hljs language-html" lang="html"><span class="hljs-tag">&lt;<span class="hljs-name">span</span>
  <span class="hljs-attr">v-for</span>=<span class="hljs-string">"type in resizeTypes"</span>
  <span class="hljs-attr">:key</span>=<span class="hljs-string">"type"</span>
  <span class="hljs-attr">:class</span>=<span class="hljs-string">"`${type}-resize`"</span>
  @<span class="hljs-attr">mousedown</span>=<span class="hljs-string">"startResize($event, type)"</span>
&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>
</code></pre>
<pre><code class="hljs language-js" lang="js"><span class="hljs-comment">// 鼠标按下，开始拖拽</span>
<span class="hljs-title function_">startResize</span>(<span class="hljs-params">event, type</span>) {
  <span class="hljs-variable language_">this</span>.<span class="hljs-property">resizeType</span> = type; <span class="hljs-comment">// 记录拖拽的边角的类型</span>
  ......
}
</code></pre>
<pre><code class="hljs language-js" lang="js">
<span class="hljs-comment">// 开始拖拽的过程中，改变容器状态</span>
<span class="hljs-title function_">handleResize</span>(<span class="hljs-params"></span>) {
<span class="hljs-keyword">const</span> deltaX = event.<span class="hljs-property">clientX</span> - <span class="hljs-variable language_">this</span>.<span class="hljs-property">originMouseX</span>; <span class="hljs-comment">// 计算鼠标的横向位移</span>
<span class="hljs-keyword">const</span> deltaY = event.<span class="hljs-property">clientY</span> - <span class="hljs-variable language_">this</span>.<span class="hljs-property">originMouseY</span>; <span class="hljs-comment">// 计算鼠标的纵向位移</span>

<span class="hljs-keyword">let</span> newWidth = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originWidth</span>;
<span class="hljs-keyword">let</span> newHeight = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originHeight</span>;

<span class="hljs-comment">// 根据缩放类型计算新的容器尺寸</span>
<span class="hljs-keyword">switch</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">resizeType</span>) {
    <span class="hljs-keyword">case</span> <span class="hljs-string">"lt"</span>: <span class="hljs-comment">// 左上角</span>
      newWidth = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originWidth</span> - deltaX;
      <span class="hljs-variable language_">this</span>.<span class="hljs-property">size</span>.<span class="hljs-property">width</span> = newWidth;
      <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">x</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originContainX</span> + deltaX;
      
      newHeight = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originHeight</span> - deltaY;
      <span class="hljs-variable language_">this</span>.<span class="hljs-property">size</span>.<span class="hljs-property">height</span> = newHeight;
      <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">y</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originContainY</span> + deltaY;
      <span class="hljs-keyword">break</span>;
      
    <span class="hljs-keyword">case</span> <span class="hljs-string">"t"</span>: <span class="hljs-comment">// 上边</span>
      newHeight = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originHeight</span> - deltaY;
      <span class="hljs-variable language_">this</span>.<span class="hljs-property">size</span>.<span class="hljs-property">height</span> = newHeight;
      <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">y</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originContainY</span> + deltaY;
      <span class="hljs-keyword">break</span>;

      右边，右下角同理......
}
</code></pre>
<h4 data-id="heading-9">4.设置最小的拖拽宽和高</h4>
<p>如果新拖拽的宽度，已经小于最小宽度。拖拽时不进行任何改动。</p>
<pre><code class="hljs language-js" lang="js"><span class="hljs-keyword">switch</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">resizeType</span>) {
    <span class="hljs-keyword">case</span> <span class="hljs-string">"lt"</span>: <span class="hljs-comment">// 左上角</span>
      newWidth = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originWidth</span> - deltaX;
      newHeight = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originHeight</span> - deltaY;
      <span class="hljs-keyword">if</span> (newWidth &gt;= <span class="hljs-variable language_">this</span>.<span class="hljs-property">minWidth</span>) {
        <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">x</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originContainX</span> + deltaX;
        <span class="hljs-variable language_">this</span>.<span class="hljs-property">size</span>.<span class="hljs-property">width</span> = newWidth;
      }
      <span class="hljs-keyword">if</span> (newHeight &gt;= <span class="hljs-variable language_">this</span>.<span class="hljs-property">minHeight</span>) {
        <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">y</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originContainY</span> + deltaY;
        <span class="hljs-variable language_">this</span>.<span class="hljs-property">size</span>.<span class="hljs-property">height</span> = newHeight;
      }
      <span class="hljs-keyword">break</span>;
    <span class="hljs-keyword">case</span> <span class="hljs-string">"t"</span>: <span class="hljs-comment">// 上边</span>
      newHeight = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originHeight</span> - deltaY;
      <span class="hljs-keyword">if</span> (newHeight &gt;= <span class="hljs-variable language_">this</span>.<span class="hljs-property">minHeight</span>) {
        <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">y</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originContainY</span> + deltaY;
        <span class="hljs-variable language_">this</span>.<span class="hljs-property">size</span>.<span class="hljs-property">height</span> = newHeight;
      }
      <span class="hljs-keyword">break</span>;
      
      右边边，右下角同理......
}
</code></pre>
<h4 data-id="heading-10">5.添加拖拽移动</h4>
<p>拖拽移动的详细内容，笔者写的另一篇文章：<a href="https://juejin.cn/post/7446366084325769228" target="_blank" title="https://juejin.cn/post/7446366084325769228">拖拽移动详细思路</a><br>
下面的完整代码是结合了拖拽移动和缩放整合在一起，一个较为完整的拖拽组件</p>
<hr>
<h2 data-id="heading-11">完整代码</h2>
<pre><code class="hljs language-js" lang="js">&lt;template&gt;
  &lt;!-- 使用 v-<span class="hljs-keyword">if</span> 判断是否插入到 body 中 --&gt;
  &lt;!-- 创建一个容器，支持拖拽，使用 ref 引用该容器 --&gt;
  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>
    <span class="hljs-attr">ref</span>=<span class="hljs-string">"draggableContainer"</span>
    <span class="hljs-attr">class</span>=<span class="hljs-string">"draggable-container"</span>
    @<span class="hljs-attr">mousedown</span>=<span class="hljs-string">"startDrag"</span>
    <span class="hljs-attr">:style</span>=<span class="hljs-string">"containerStyle"</span>
  &gt;</span>
    <span class="hljs-comment">&lt;!-- 插槽，用户可以将其他内容插入到这个容器中 --&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">slot</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span>

    <span class="hljs-comment">&lt;!-- 创建缩放控制点，每个控制点代表一个边角，使用 v-for 循环渲染 --&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>
      <span class="hljs-attr">v-for</span>=<span class="hljs-string">"type in resizeTypes"</span>
      <span class="hljs-attr">:key</span>=<span class="hljs-string">"type"</span>
      <span class="hljs-attr">:class</span>=<span class="hljs-string">"`${type}-resize`"</span>
      @<span class="hljs-attr">mousedown</span>=<span class="hljs-string">"startResize($event, type)"</span>
    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>
&lt;/template&gt;

<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {
  <span class="hljs-attr">props</span>: {
    <span class="hljs-attr">zIndex</span>: { <span class="hljs-attr">type</span>: <span class="hljs-title class_">Number</span>, <span class="hljs-attr">default</span>: <span class="hljs-number">1</span> }, <span class="hljs-comment">// 层级，控制显示顺序</span>
    <span class="hljs-attr">left</span>: { <span class="hljs-attr">type</span>: <span class="hljs-title class_">Number</span>, <span class="hljs-attr">default</span>: <span class="hljs-number">0</span> }, <span class="hljs-comment">// 容器的初始 X 位置</span>
    <span class="hljs-attr">top</span>: { <span class="hljs-attr">type</span>: <span class="hljs-title class_">Number</span>, <span class="hljs-attr">default</span>: <span class="hljs-number">0</span> }, <span class="hljs-comment">// 容器的初始 Y 位置</span>
    <span class="hljs-attr">width</span>: { <span class="hljs-attr">type</span>: <span class="hljs-title class_">Number</span>, <span class="hljs-attr">default</span>: <span class="hljs-number">300</span> }, <span class="hljs-comment">// 容器的初始宽度</span>
    <span class="hljs-attr">height</span>: { <span class="hljs-attr">type</span>: <span class="hljs-title class_">Number</span>, <span class="hljs-attr">default</span>: <span class="hljs-number">300</span> }, <span class="hljs-comment">// 容器的初始高度</span>
    <span class="hljs-attr">minWidth</span>: { <span class="hljs-attr">type</span>: <span class="hljs-title class_">Number</span>, <span class="hljs-attr">default</span>: <span class="hljs-number">100</span> }, <span class="hljs-comment">// 容器的最小宽度</span>
    <span class="hljs-attr">minHeight</span>: { <span class="hljs-attr">type</span>: <span class="hljs-title class_">Number</span>, <span class="hljs-attr">default</span>: <span class="hljs-number">100</span> }, <span class="hljs-comment">// 容器的最小高度</span>
  },
  <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) {
    <span class="hljs-keyword">return</span> {
      <span class="hljs-comment">// 定义可缩放的边和角的类型</span>
      <span class="hljs-attr">resizeTypes</span>: [<span class="hljs-string">"lt"</span>, <span class="hljs-string">"t"</span>, <span class="hljs-string">"rt"</span>, <span class="hljs-string">"r"</span>, <span class="hljs-string">"rb"</span>, <span class="hljs-string">"b"</span>, <span class="hljs-string">"lb"</span>, <span class="hljs-string">"l"</span>],
      <span class="hljs-comment">// 定义容器位置和大小的响应式数据</span>
      <span class="hljs-attr">position</span>: { <span class="hljs-attr">x</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">left</span>, <span class="hljs-attr">y</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">top</span> }, <span class="hljs-comment">// 容器的位置</span>
      <span class="hljs-attr">size</span>: { <span class="hljs-attr">width</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">width</span>, <span class="hljs-attr">height</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">height</span> }, <span class="hljs-comment">// 容器的尺寸</span>
      <span class="hljs-attr">originMouseX</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">// 鼠标初始 X 坐标</span>
      <span class="hljs-attr">originMouseY</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">// 鼠标初始 Y 坐标</span>
      <span class="hljs-attr">originContainX</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">// 容器初始 X 坐标</span>
      <span class="hljs-attr">originContainY</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">// 容器初始 Y 坐标</span>
      <span class="hljs-attr">originWidth</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">// 容器初始宽度</span>
      <span class="hljs-attr">originHeight</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">// 容器初始高度</span>
      <span class="hljs-attr">resizeType</span>: <span class="hljs-string">""</span>, <span class="hljs-comment">// 当前缩放类型</span>
    };
  },
  <span class="hljs-attr">computed</span>: {
    <span class="hljs-comment">// 计算容器的样式</span>
    <span class="hljs-title function_">containerStyle</span>(<span class="hljs-params"></span>) {
      <span class="hljs-keyword">return</span> {
        <span class="hljs-attr">top</span>: <span class="hljs-string">`<span class="hljs-subst">${<span class="hljs-variable language_">this</span>.position.y}</span>px`</span>, <span class="hljs-comment">// 设置容器的 top 样式</span>
        <span class="hljs-attr">left</span>: <span class="hljs-string">`<span class="hljs-subst">${<span class="hljs-variable language_">this</span>.position.x}</span>px`</span>, <span class="hljs-comment">// 设置容器的 left 样式</span>
        <span class="hljs-attr">width</span>: <span class="hljs-string">`<span class="hljs-subst">${<span class="hljs-variable language_">this</span>.size.width}</span>px`</span>, <span class="hljs-comment">// 设置容器的宽度</span>
        <span class="hljs-attr">height</span>: <span class="hljs-string">`<span class="hljs-subst">${<span class="hljs-variable language_">this</span>.size.height}</span>px`</span>, <span class="hljs-comment">// 设置容器的高度</span>
        <span class="hljs-attr">zIndex</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">zIndex</span>, <span class="hljs-comment">// 设置容器的层级</span>
      };
    },
  },
  <span class="hljs-attr">methods</span>: {
    <span class="hljs-comment">/**
     * 拖拽逻辑
     */</span>
    <span class="hljs-title function_">startDrag</span>(<span class="hljs-params">event</span>) {
      <span class="hljs-comment">// 记录鼠标初始位置</span>
      <span class="hljs-variable language_">this</span>.<span class="hljs-property">originMouseX</span> = event.<span class="hljs-property">clientX</span>;
      <span class="hljs-variable language_">this</span>.<span class="hljs-property">originMouseY</span> = event.<span class="hljs-property">clientY</span>;

      <span class="hljs-comment">// 记录容器初始位置</span>
      <span class="hljs-variable language_">this</span>.<span class="hljs-property">originContainX</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">x</span>;
      <span class="hljs-variable language_">this</span>.<span class="hljs-property">originContainY</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">y</span>;

      <span class="hljs-comment">// 添加鼠标移动和鼠标松开事件监听</span>
      <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">"mousemove"</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">handleDrag</span>);
      <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">"mouseup"</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">stopDrag</span>);
    },

    <span class="hljs-title function_">handleDrag</span>(<span class="hljs-params">event</span>) {
      <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">x</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originContainX</span> + event.<span class="hljs-property">clientX</span> - <span class="hljs-variable language_">this</span>.<span class="hljs-property">originMouseX</span>;
      <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">y</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originContainY</span> + event.<span class="hljs-property">clientY</span> - <span class="hljs-variable language_">this</span>.<span class="hljs-property">originMouseY</span>;
    },

    <span class="hljs-comment">/**
     * 缩放逻辑
     */</span>
    <span class="hljs-title function_">startResize</span>(<span class="hljs-params">event, type</span>) {
      <span class="hljs-variable language_">this</span>.<span class="hljs-property">resizeType</span> = type; <span class="hljs-comment">// 记录拖拽的边角的类型</span>

      <span class="hljs-comment">// 记录鼠标初始位置</span>
      <span class="hljs-variable language_">this</span>.<span class="hljs-property">originMouseX</span> = event.<span class="hljs-property">clientX</span>;
      <span class="hljs-variable language_">this</span>.<span class="hljs-property">originMouseY</span> = event.<span class="hljs-property">clientY</span>;

      <span class="hljs-comment">// 记录容器初始宽高</span>
      <span class="hljs-variable language_">this</span>.<span class="hljs-property">originWidth</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">size</span>.<span class="hljs-property">width</span>;
      <span class="hljs-variable language_">this</span>.<span class="hljs-property">originHeight</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">size</span>.<span class="hljs-property">height</span>;

      <span class="hljs-comment">// 记录容器初始位置</span>
      <span class="hljs-variable language_">this</span>.<span class="hljs-property">originContainX</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">x</span>;
      <span class="hljs-variable language_">this</span>.<span class="hljs-property">originContainY</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">y</span>;
      

      event.<span class="hljs-title function_">stopPropagation</span>(); <span class="hljs-comment">// 阻止事件传播，防止触发拖拽</span>

      <span class="hljs-comment">// 添加鼠标移动和鼠标松开事件监听</span>
      <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">"mousemove"</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">handleResize</span>);
      <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">"mouseup"</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">stopDrag</span>);
    },

    <span class="hljs-title function_">handleResize</span>(<span class="hljs-params">event</span>) {
      <span class="hljs-keyword">const</span> deltaX = event.<span class="hljs-property">clientX</span> - <span class="hljs-variable language_">this</span>.<span class="hljs-property">originMouseX</span>; <span class="hljs-comment">// 计算鼠标的横向位移</span>
      <span class="hljs-keyword">const</span> deltaY = event.<span class="hljs-property">clientY</span> - <span class="hljs-variable language_">this</span>.<span class="hljs-property">originMouseY</span>; <span class="hljs-comment">// 计算鼠标的纵向位移</span>

      <span class="hljs-keyword">let</span> newWidth = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originWidth</span>;
      <span class="hljs-keyword">let</span> newHeight = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originHeight</span>;

      <span class="hljs-comment">// 根据缩放类型计算新的容器尺寸</span>
      <span class="hljs-keyword">switch</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">resizeType</span>) {
        <span class="hljs-keyword">case</span> <span class="hljs-string">"lt"</span>: <span class="hljs-comment">// 左上角</span>
          newWidth = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originWidth</span> - deltaX;
          newHeight = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originHeight</span> - deltaY;
          <span class="hljs-keyword">if</span> (newWidth &gt;= <span class="hljs-variable language_">this</span>.<span class="hljs-property">minWidth</span>) {
            <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">x</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originContainX</span> + deltaX;
            <span class="hljs-variable language_">this</span>.<span class="hljs-property">size</span>.<span class="hljs-property">width</span> = newWidth;
          }
          <span class="hljs-keyword">if</span> (newHeight &gt;= <span class="hljs-variable language_">this</span>.<span class="hljs-property">minHeight</span>) {
            <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">y</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originContainY</span> + deltaY;
            <span class="hljs-variable language_">this</span>.<span class="hljs-property">size</span>.<span class="hljs-property">height</span> = newHeight;
          }
          <span class="hljs-keyword">break</span>;
        <span class="hljs-keyword">case</span> <span class="hljs-string">"t"</span>: <span class="hljs-comment">// 上边</span>
          newHeight = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originHeight</span> - deltaY;
          <span class="hljs-keyword">if</span> (newHeight &gt;= <span class="hljs-variable language_">this</span>.<span class="hljs-property">minHeight</span>) {
            <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">y</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originContainY</span> + deltaY;
            <span class="hljs-variable language_">this</span>.<span class="hljs-property">size</span>.<span class="hljs-property">height</span> = newHeight;
          }
          <span class="hljs-keyword">break</span>;
        <span class="hljs-keyword">case</span> <span class="hljs-string">"rt"</span>: <span class="hljs-comment">// 右上角</span>
          newWidth = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originWidth</span> + deltaX;
          newHeight = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originHeight</span> - deltaY;
          <span class="hljs-keyword">if</span> (newWidth &gt;= <span class="hljs-variable language_">this</span>.<span class="hljs-property">minWidth</span>) {
            <span class="hljs-variable language_">this</span>.<span class="hljs-property">size</span>.<span class="hljs-property">width</span> = newWidth;
          }
          <span class="hljs-keyword">if</span> (newHeight &gt;= <span class="hljs-variable language_">this</span>.<span class="hljs-property">minHeight</span>) {
            <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">y</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originContainY</span> + deltaY;
            <span class="hljs-variable language_">this</span>.<span class="hljs-property">size</span>.<span class="hljs-property">height</span> = newHeight;
          }
          <span class="hljs-keyword">break</span>;
        <span class="hljs-keyword">case</span> <span class="hljs-string">"r"</span>: <span class="hljs-comment">// 右边</span>
          newWidth = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originWidth</span> + deltaX;
          <span class="hljs-keyword">if</span> (newWidth &gt;= <span class="hljs-variable language_">this</span>.<span class="hljs-property">minWidth</span>) {
            <span class="hljs-variable language_">this</span>.<span class="hljs-property">size</span>.<span class="hljs-property">width</span> = newWidth;
          }
          <span class="hljs-keyword">break</span>;
        <span class="hljs-keyword">case</span> <span class="hljs-string">"rb"</span>: <span class="hljs-comment">// 右下角</span>
          newWidth = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originWidth</span> + deltaX;
          newHeight = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originHeight</span> + deltaY;
          <span class="hljs-keyword">if</span> (newWidth &gt;= <span class="hljs-variable language_">this</span>.<span class="hljs-property">minWidth</span>) {
            <span class="hljs-variable language_">this</span>.<span class="hljs-property">size</span>.<span class="hljs-property">width</span> = newWidth;
          }
          <span class="hljs-keyword">if</span> (newHeight &gt;= <span class="hljs-variable language_">this</span>.<span class="hljs-property">minHeight</span>) {
            <span class="hljs-variable language_">this</span>.<span class="hljs-property">size</span>.<span class="hljs-property">height</span> = newHeight;
          }
          <span class="hljs-keyword">break</span>;
        <span class="hljs-keyword">case</span> <span class="hljs-string">"b"</span>: <span class="hljs-comment">// 下边</span>
          newHeight = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originHeight</span> + deltaY;
          <span class="hljs-keyword">if</span> (newHeight &gt;= <span class="hljs-variable language_">this</span>.<span class="hljs-property">minHeight</span>) {
            <span class="hljs-variable language_">this</span>.<span class="hljs-property">size</span>.<span class="hljs-property">height</span> = newHeight;
          }
          <span class="hljs-keyword">break</span>;
        <span class="hljs-keyword">case</span> <span class="hljs-string">"lb"</span>: <span class="hljs-comment">// 左下角</span>
          newWidth = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originWidth</span> - deltaX;
          newHeight = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originHeight</span> + deltaY;
          <span class="hljs-keyword">if</span> (newWidth &gt;= <span class="hljs-variable language_">this</span>.<span class="hljs-property">minWidth</span>) {
            <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">x</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originContainX</span> + deltaX;
            <span class="hljs-variable language_">this</span>.<span class="hljs-property">size</span>.<span class="hljs-property">width</span> = newWidth;
          }
          <span class="hljs-keyword">if</span> (newHeight &gt;= <span class="hljs-variable language_">this</span>.<span class="hljs-property">minHeight</span>) {
            <span class="hljs-variable language_">this</span>.<span class="hljs-property">size</span>.<span class="hljs-property">height</span> = newHeight;
          }
          <span class="hljs-keyword">break</span>;
        <span class="hljs-keyword">case</span> <span class="hljs-string">"l"</span>: <span class="hljs-comment">// 左边</span>
          newWidth = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originWidth</span> - deltaX;
          <span class="hljs-keyword">if</span> (newWidth &gt;= <span class="hljs-variable language_">this</span>.<span class="hljs-property">minWidth</span>) {
            <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">x</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">originContainX</span> + deltaX;
            <span class="hljs-variable language_">this</span>.<span class="hljs-property">size</span>.<span class="hljs-property">width</span> = newWidth;
          }
          <span class="hljs-keyword">break</span>;
      }
    },

    <span class="hljs-comment">/**
     * 停止拖拽或缩放
     * 清除事件监听器
     */</span>
    <span class="hljs-title function_">stopDrag</span>(<span class="hljs-params"></span>) {
      <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">removeEventListener</span>(<span class="hljs-string">"mousemove"</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">handleDrag</span>);
      <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">removeEventListener</span>(<span class="hljs-string">"mousemove"</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">handleResize</span>);
      <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">removeEventListener</span>(<span class="hljs-string">"mouseup"</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">stopDrag</span>);
    },
  },

  <span class="hljs-comment">// 组件销毁时移除事件监听</span>
  <span class="hljs-title function_">beforeDestroy</span>(<span class="hljs-params"></span>) {
    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">stopDrag</span>();
  },
};
</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>
<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"scss"</span> <span class="hljs-attr">scoped</span>&gt;</span>
$lineOffset: -6px;
$cornerOffset: -8px;
/* 拖拽容器的样式 */
.draggable-container {
  position: fixed; /* 绝对定位 */
  cursor: move; /* 鼠标移动时显示抓手指针 */
  user-select: none; /* 禁止选中文本 */
  background-color: #ccc;
  span {
    position: absolute;
    display: block;
  }
  /* 左边和右边 */
  .l-resize,
  .r-resize {
    width: 8px;
    height: 100%;
    top: 0;
    cursor: w-resize;
  }
  .l-resize {
    left: $lineOffset;
  }
  .r-resize {
    right: $lineOffset;
  }

  /* 上边和下边 */
  .t-resize,
  .b-resize {
    width: 100%;
    height: 8px;
    left: 0;
    cursor: s-resize;
  }
  .t-resize {
    top: $lineOffset;
  }
  .b-resize {
    bottom: $lineOffset;
  }
  /* 四个角 */
  .lt-resize,
  .rt-resize,
  .rb-resize,
  .lb-resize {
    width: 15px;
    height: 15px;
    z-index: 10;
  }
  .lt-resize,
  .lb-resize {
    left: $cornerOffset;
  }
  .lt-resize,
  .rt-resize {
    top: $cornerOffset;
  }
  .rt-resize,
  .rb-resize {
    right: $cornerOffset;
  }
  .rb-resize,
  .lb-resize {
    bottom: $cornerOffset;
  }

  .lt-resize,
  .rb-resize {
    cursor: se-resize;
  }
  .rt-resize,
  .lb-resize {
    cursor: sw-resize;
  }
}
<span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span>
</code></pre>
<h3 data-id="heading-12">组件引用</h3>
<pre><code class="hljs language-html" lang="html"><span class="hljs-tag">&lt;<span class="hljs-name">DraggableContainer</span>
  <span class="hljs-attr">:width</span>=<span class="hljs-string">"400"</span>
  <span class="hljs-attr">:height</span>=<span class="hljs-string">"400"</span>
  <span class="hljs-attr">:min-height</span>=<span class="hljs-string">"300"</span>
  <span class="hljs-attr">:min-width</span>=<span class="hljs-string">"300"</span>
&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>能拖动我了<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">DraggableContainer</span>&gt;</span>
</code></pre>
<hr>
<h2 data-id="heading-13">总结</h2>
<blockquote>
<p>部分代码设计参考了著名第三方库vxe-modal的设计思路：<a href="https://link.juejin.cn?target=https%3A%2F%2Fvxetable.cn%2Fv2%2F%23%2Fmodal%2Fapi" target="_blank" title="https://vxetable.cn/v2/#/modal/api" ref="nofollow noopener noreferrer">vxe-modal</a><br></p>
</blockquote>
<p>本文实现了拖拽移动和缩放的功能，同学们也可以根据需要往上面添加自己的改动。希望对您有所帮助！</p></div></div>