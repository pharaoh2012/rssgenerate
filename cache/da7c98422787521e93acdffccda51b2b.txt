
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/isyues/p/18788028" title="发布于 2025-03-23 16:55">
    <span role="heading" aria-level="2">macos设置宿主机可以ping通docker容器</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="macos设置宿主机可以ping通docker容器">macos设置宿主机可以ping通docker容器</h2>
<h3 id="项目连接不上seata">项目连接不上seata</h3>
<p>今天在启动项目时候seata报错:<br>
<code>io.seata.common.exception.FrameworkException: can not connect to services-server</code><br>
意思就是连接不上seata server，然后打开注册中心一看<br>
<img src="https://img2024.cnblogs.com/blog/2467620/202503/2467620-20250323162846453-1175834591.png" alt="image" loading="lazy"><br>
ip为：172.17.0.5，果断ping一下<br>
<img src="https://img2024.cnblogs.com/blog/2467620/202503/2467620-20250323163013931-1186597958.png" alt="image" loading="lazy"></p>
<h3 id="原因">原因</h3>
<p>ping不通的原因是，我seata server是在docker里面部署的，我项目启动去注册中心拉seata server的ip，拉到172.17.0.5，这个ip是docker容器里面的ip，宿主机和容器是隔离的，所以我在宿主机上是不能直接访问172.17.0.5</p>
<h3 id="解决">解决</h3>
<p>github地址：<a href="https://github.com/wenjunxiao/mac-docker-connector/blob/master/README-ZH.md" target="_blank" rel="noopener nofollow">https://github.com/wenjunxiao/mac-docker-connector/blob/master/README-ZH.md</a></p>
<blockquote>
<p>windows系统看链接里面的教程也可以解决</p>
</blockquote>
<ol>
<li>先安装Mac端的服务mac-docker-connector</li>
</ol>
<pre><code class="language-shell">brew tap wenjunxiao/brew
brew install docker-connector
</code></pre>
<ol start="2">
<li>首次配置通过以下命令把所有Docker所有bridge子网放入配置文件</li>
</ol>
<blockquote>
<p>增减可以参考链接里的详细配置，一般不需要改，如果环境冲突（比如端口被占用，子网已使用）就需要改<br>
<a href="https://github.com/wenjunxiao/mac-docker-connector/blob/master/README-ZH.md#%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E" target="_blank" rel="noopener nofollow">https://github.com/wenjunxiao/mac-docker-connector/blob/master/README-ZH.md#配置说明</a></p>
</blockquote>
<pre><code class="language-shell">docker network ls --filter driver=bridge --format "{{.ID}}" | xargs docker network inspect --format "route {{range .IPAM.Config}}{{.Subnet}}{{end}}" &gt;&gt; "$(brew --prefix)/etc/docker-connector.conf"
</code></pre>
<ol start="3">
<li>启动Mac端的服务</li>
</ol>
<pre><code class="language-shell">sudo brew services start docker-connector
</code></pre>
<ol start="4">
<li>安装Docker端的容器mac-docker-connector</li>
</ol>
<pre><code class="language-shell">docker pull wenjunxiao/mac-docker-connector
</code></pre>
<ol start="5">
<li>启动Docker端的容器，其中网络必须是host，并且添加NET_ADMIN特性</li>
</ol>
<pre><code class="language-shell">docker run -it -d --restart always --net host --cap-add NET_ADMIN --name mac-connector wenjunxiao/mac-docker-connector
</code></pre>
<ol start="6">
<li>成功</li>
</ol>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.6492851830243056" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-23 22:48">2025-03-23 16:55</span>&nbsp;
<a href="https://www.cnblogs.com/isyues">isyues</a>&nbsp;
阅读(<span id="post_view_count">46</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18788028" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18788028);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18788028', targetLink: 'https://www.cnblogs.com/isyues/p/18788028', title: 'macos设置宿主机可以ping通docker容器' })">举报</a>
</div>
        