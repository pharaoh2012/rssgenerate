
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/gerry-wrl/p/18898109" title="发布于 2025-05-27 11:18">
    <span role="heading" aria-level="2">PostGIS栅格数据类型解析【raster】</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="postgis-栅格数据类型解析结构转换与应用">PostGIS 栅格数据类型解析：结构、转换与应用</h2>
<h3 id="一栅格数据类型概述">一、栅格数据类型概述</h3>
<p>在 PostGIS 中，raster 是用于存储和处理栅格数据的核心类型，支持从多种格式（如 JPEG、GeoTIFF、PNG、DEM）导入的数据。每个栅格由一个或多个波段（Band）组成，每个波段包含规则排列的像素值矩阵，且栅格可通过空间参考信息（SRID、原点坐标、像素尺寸）实现地理配准。</p>
<h3 id="二栅格数据结构核心要素">二、栅格数据结构核心要素</h3>
<ul>
<li>
<p>波段（Band）：</p>
<ul>
<li>栅格的基本组成单元，每个波段存储特定类型的数据（如 RGB 图像包含红、绿、蓝三个波段）。</li>
<li>支持多种像素类型（如 8 位无符号整数、32 位浮点等），可通过ST_BandPixelType查询。</li>
</ul>
</li>
<li>
<p>空间参考：</p>
<ul>
<li>SRID：定义坐标系（如 4326 代表 WGS84）。</li>
<li>原点坐标（ULX/ULY）：栅格左上角像素的地理坐标。</li>
<li>像素尺寸（ScaleX/ScaleY）：每个像素代表的地理单位（如 1 米、0.001 度）。</li>
</ul>
</li>
<li>
<p>元数据：</p>
<ul>
<li>存储于系统表 <em>raster_columns</em> 和 <em>raster_overviews</em> 中，包含栅格范围、波段数、NoData 值等信息。</li>
</ul>
</li>
</ul>
<h3 id="三栅格与几何类型的转换">三、栅格与几何类型的转换</h3>
<p><strong>1. 自动转换</strong></p>
<pre><code class="language-sql">-- 栅格自动转换为geometry（不推荐使用）
SELECT rast::geometry AS geom
FROM raster_table;

-- 等价于，推荐使用ST_ConvexHull
SELECT ST_ConvexHull(rast) AS geom
FROM raster_table;
</code></pre>
<blockquote>
<p><strong>注意：</strong> 此自动转换可能在未来版本中移除，建议显式调用ST_ConvexHull或其他几何提取函数。</p>
</blockquote>
<p><strong>2. 显式转换函数</strong></p>
<table>
<thead>
<tr>
<th style="text-align: left">函数</th>
<th style="text-align: left">作用</th>
<th style="text-align: left">示例</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left">ST_ConvexHull(rast)</td>
<td style="text-align: left">获取栅格外包络凸多边形</td>
<td style="text-align: left">SELECT ST_ConvexHull(rast) FROM ...</td>
</tr>
<tr>
<td style="text-align: left">ST_Envelope(rast)</td>
<td style="text-align: left">获取栅格外包矩形</td>
<td style="text-align: left">SELECT ST_Envelope(rast) FROM ...</td>
</tr>
<tr>
<td style="text-align: left">ST_AsRaster(geom)</td>
<td style="text-align: left">将几何转换为栅格（栅格化）</td>
<td style="text-align: left">SELECT ST_AsRaster(geom, 10, 10) ...</td>
</tr>
<tr>
<td style="text-align: left">ST_Polygon(rast)</td>
<td style="text-align: left">将栅格转换为等值面多边形</td>
<td style="text-align: left">SELECT ST_Polygon(rast, 1, 100) ...</td>
</tr>
</tbody>
</table>
<p>为了区分几个函数的区别，可以从下图直观感受到：</p>
<p><img src="https://img2024.cnblogs.com/blog/354588/202505/354588-20250527111347905-1540295493.jpg" alt="" loading="lazy"></p>
<h3 id="四栅格与几何交互操作">四、栅格与几何交互操作</h3>
<p><strong>1. 空间查询</strong></p>
<pre><code class="language-sql">-- 查询与多边形相交的栅格
SELECT rast
FROM raster_table
WHERE ST_Intersects(rast, ST_GeomFromText('POLYGON(...)'));

-- 裁剪栅格至指定区域
SELECT ST_Clip(rast, ST_GeomFromText('POLYGON(...)')) AS clipped_rast
FROM raster_table;
</code></pre>
<p><strong>2. 栅格化几何对象</strong></p>
<pre><code class="language-sql">-- 将多边形转换为100x100像素的栅格，值为1
SELECT ST_AsRaster(
  ST_GeomFromText('POLYGON(...)'),
  100, 100,          -- 宽度和高度
  ARRAY['8BUI'],     -- 像素类型
  ARRAY[1],          -- 像素值
  ARRAY[0]           -- NoData值
) AS rasterized_polygon;
</code></pre>
<h3 id="五最佳实践与注意事项">五、最佳实践与注意事项</h3>
<ul>
<li>
<p>避免依赖自动转换：</p>
<ul>
<li>现有代码中若使用rast::geometry，应替换为显式函数调用（如ST_ConvexHull(rast)）。</li>
</ul>
</li>
<li>
<p>栅格与几何性能差异（后续系列文章会讲到）：</p>
<ul>
<li>栅格操作（如ST_MapAlgebra）适合并行计算，但存储空间需求大。</li>
<li>几何操作（如ST_Buffer）适合精确分析，但处理大规模数据时性能较低。</li>
</ul>
</li>
<li>
<p>数据格式选择：</p>
<ul>
<li>连续表面数据（如 DEM、卫星影像）优先使用栅格存储。</li>
<li>离散对象（如建筑物、道路）优先使用几何存储。</li>
</ul>
</li>
<li>
<p>GDAL 依赖：</p>
<ul>
<li>需确保 PostGIS 编译时启用 GDAL 支持（通过 <em>SELECT postgis_full_version()</em> 检查）。</li>
</ul>
</li>
</ul>
<h3 id="六总结">六、总结</h3>
<p>raster 是作为PostGIS存储和处理栅格数据的核心类型，使得PostgreSQL可以存储处理栅格数据，也是GIS从业更偏向使用PostgreSQL的一大原因，可以方便实现从遥感影像到矢量分析的全流程空间数据处理，本系列文章也将深入分析PostGIS函数解析。</p>
<blockquote>
<p>原创不易，求关注支持，欢迎转发。</p>
</blockquote>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.5400152424965278" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-27 11:22">2025-05-27 11:18</span>&nbsp;
<a href="https://www.cnblogs.com/gerry-wrl">龙龙小生</a>&nbsp;
阅读(<span id="post_view_count">74</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18898109);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18898109', targetLink: 'https://www.cnblogs.com/gerry-wrl/p/18898109', title: 'PostGIS栅格数据类型解析【raster】' })">举报</a>
</div>
        