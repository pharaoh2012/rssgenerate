
        <h2>
            <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wuhuacong/p/18643713" title="发布于 2024-12-31 12:23">
    <span role="heading" aria-level="2">WxPython跨平台开发框架之图标选择界面</span>
    

</a>

        </h2>
        <div class="postbody">
                <div id="cnblogs_post_description" style="display: none">
        
        在使用 wxPython 开发跨平台桌面应用程序时，创建一个图标选择界面通常用于让用户从图标资源库中选择图标，我们可以把图标分为自定义的图标资源和系统的图标资源两大类，最终我们把它们整合一起使用，在框架的界面中使用，包括工具栏、右键菜单、按钮、图片等所需的地方显示，实现图文并茂的友好界面展示。本篇随笔介绍这两种图标资源的管理和使用过程。
    </div>
<div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>在使用&nbsp;wxPython 开发跨平台桌面应用程序时，创建一个<strong>图标选择界面</strong>通常用于让用户从图标资源库中选择图标，我们可以把图标分为自定义的图标资源和系统的图标资源两大类，最终我们把它们整合一起使用，在框架的界面中使用，包括工具栏、右键菜单、按钮、图片等所需的地方显示，实现图文并茂的友好界面展示。本篇随笔介绍这两种图标资源的管理和使用过程。</p>
<h3>1、图标分类介绍</h3>
<p>这里图标我们分为两类，一类是wxPython内置的图标资源，以wx.Art_开始。<code>wx.ART_</code> 是 wxPython 提供的艺术资源（Art Resource）常量，用于在界面中快速访问通用的图标或位图资源。这些资源可以通过 <code>wx.ArtProvider</code> 获取，主要用于创建标准化的界面，例如工具栏、菜单和对话框中的图标。这类可以使用 <code>wx.ArtProvider.GetBitmap</code> 或 <code>wx.ArtProvider.GetIcon</code> 获取对应的位图或图标。</p>
<div class="cnblogs_code">
<pre>bitmap = wx.ArtProvider.GetBitmap(wx.ART_INFORMATION, wx.ART_OTHER, (32, 32<span style="color: rgba(0, 0, 0, 1)">))
icon </span>= wx.ArtProvider.GetIcon(wx.ART_WARNING, wx.ART_OTHER, (16, 16))</pre>
</div>
<p>参数说明：</p>
<ul>
<li><strong><code>id</code></strong>：指定图标的类型，例如 <code>wx.ART_INFORMATION</code>、<code>wx.ART_WARNING</code> 等。</li>
<li><strong><code>client</code></strong>：指定图标的用途，一般用 <code>wx.ART_OTHER</code>。</li>
<li><strong><code>size</code></strong>：指定图标的尺寸，例如 <code>(16, 16)</code> 或 <code>(32, 32)</code>。</li>
</ul>
<h3>常用 <code>wx.ART_</code> 图标列表</h3>
<p>以下是一些常见的 <code>wx.ART_</code> 常量及其用途：</p>
<table style="height: 1029px; width: 988px">
<thead>
<tr><th>常量名称</th><th>描述</th><th>示例用途</th></tr>
</thead>
<tbody>
<tr>
<td><code>wx.ART_INFORMATION</code></td>
<td>信息图标（蓝色圆圈中的“i”）</td>
<td>消息框或工具栏中的信息提示</td>
</tr>
<tr>
<td><code>wx.ART_WARNING</code></td>
<td>警告图标（黄色三角形）</td>
<td>警告对话框</td>
</tr>
<tr>
<td><code>wx.ART_ERROR</code></td>
<td>错误图标（红色圆圈中的“X”）</td>
<td>错误提示框</td>
</tr>
<tr>
<td><code>wx.ART_QUESTION</code></td>
<td>问号图标</td>
<td>确认对话框中的问题提示</td>
</tr>
<tr>
<td><code>wx.ART_FILE_OPEN</code></td>
<td>打开文件图标</td>
<td>文件打开按钮或菜单项</td>
</tr>
<tr>
<td><code>wx.ART_FILE_SAVE</code></td>
<td>保存文件图标</td>
<td>文件保存按钮或菜单项</td>
</tr>
<tr>
<td><code>wx.ART_FILE_SAVE_AS</code></td>
<td>另存为图标</td>
<td>另存为操作</td>
</tr>
<tr>
<td><code>wx.ART_DELETE</code></td>
<td>删除图标</td>
<td>删除按钮或菜单项</td>
</tr>
<tr>
<td><code>wx.ART_COPY</code></td>
<td>复制图标</td>
<td>工具栏中的复制按钮</td>
</tr>
<tr>
<td><code>wx.ART_CUT</code></td>
<td>剪切图标</td>
<td>工具栏中的剪切按钮</td>
</tr>
<tr>
<td><code>wx.ART_PASTE</code></td>
<td>粘贴图标</td>
<td>工具栏中的粘贴按钮</td>
</tr>
<tr>
<td><code>wx.ART_UNDO</code></td>
<td>撤销图标</td>
<td>撤销操作按钮</td>
</tr>
<tr>
<td><code>wx.ART_REDO</code></td>
<td>重做图标</td>
<td>重做操作按钮</td>
</tr>
<tr>
<td><code>wx.ART_FIND</code></td>
<td>查找图标</td>
<td>查找工具栏或菜单项</td>
</tr>
<tr>
<td><code>wx.ART_HELP</code></td>
<td>帮助图标（问号）</td>
<td>帮助按钮或菜单项</td>
</tr>
<tr>
<td><code>wx.ART_NEW</code></td>
<td>新建文件图标</td>
<td>新建按钮或菜单项</td>
</tr>
<tr>
<td><code>wx.ART_TIP</code></td>
<td>提示图标</td>
<td>工具提示或信息提示框</td>
</tr>
<tr>
<td><code>wx.ART_ADD_BOOKMARK</code></td>
<td>添加书签图标</td>
<td>书签管理工具</td>
</tr>
<tr>
<td><code>wx.ART_DEL_BOOKMARK</code></td>
<td>删除书签图标</td>
<td>书签管理工具</td>
</tr>
<tr>
<td><code>wx.ART_GO_BACK</code></td>
<td>返回图标</td>
<td>浏览器中的后退按钮</td>
</tr>
<tr>
<td><code>wx.ART_GO_FORWARD</code></td>
<td>前进图标</td>
<td>浏览器中的前进按钮</td>
</tr>
<tr>
<td><code>wx.ART_GO_UP</code></td>
<td>向上导航图标</td>
<td>文件管理器中的向上导航</td>
</tr>
<tr>
<td><code>wx.ART_GO_DOWN</code></td>
<td>向下导航图标</td>
<td>文件管理器中的向下导航</td>
</tr>
<tr>
<td><code>wx.ART_EXECUTABLE_FILE</code></td>
<td>可执行文件图标</td>
<td>显示可执行文件类型</td>
</tr>
<tr>
<td><code>wx.ART_NORMAL_FILE</code></td>
<td>普通文件图标</td>
<td>显示普通文件类型</td>
</tr>
<tr>
<td><code>wx.ART_FOLDER</code></td>
<td>文件夹图标</td>
<td>显示文件夹类型</td>
</tr>
<tr>
<td><code>wx.ART_FOLDER_OPEN</code></td>
<td>打开文件夹图标</td>
<td>文件夹展开时显示</td>
</tr>
<tr>
<td><code>wx.ART_PRINT</code></td>
<td>打印图标</td>
<td>打印操作按钮或菜单项</td>
</tr>
<tr>
<td><code>wx.ART_REPORT_VIEW</code></td>
<td>报表视图图标</td>
<td>改变视图样式的按钮</td>
</tr>
<tr>
<td><code>wx.ART_LIST_VIEW</code></td>
<td>列表视图图标</td>
<td>改变视图样式的按钮</td>
</tr>
</tbody>
</table>
<p>通过使用 <code>wx.ART_</code>，可以显著提高界面的一致性和开发效率！</p>
<p>另外一类是我们自己自定义的图标资源，为了方便整合使用，我们往往把它作为嵌入资源的方式，放在一个文件里面，如下所示。</p>
<p><img src="https://img2024.cnblogs.com/blog/8867/202412/8867-20241231114543793-1639763965.png" alt="" width="758" height="464" loading="lazy"></p>
<p>&nbsp;需要的时候，直接导入这个core_image进行使用即可。</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> core.core_images as images

img: wx.Image </span>=<span style="color: rgba(0, 0, 0, 1)"> (
    images.catalog[name].Image </span><span style="color: rgba(0, 0, 255, 1)">if</span> name <span style="color: rgba(0, 0, 255, 1)">in</span> images.catalog <span style="color: rgba(0, 0, 255, 1)">else</span><span style="color: rgba(0, 0, 0, 1)"> result
)
img </span>=<span style="color: rgba(0, 0, 0, 1)"> img.Scale(icon_size, icon_size, wx.IMAGE_QUALITY_HIGH)
result </span>= wx.Bitmap(img)</pre>
</div>
<p>为了方便添加，我们可以使用wxpython的内置工具类img2py来生成代码到指定.py文件中。</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">from</span> wx.tools <span style="color: rgba(0, 0, 255, 1)">import</span> img2py</pre>
</div>
<p>然后可以通过命令行来生成代码到python类文件中。</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">-a -F -n TestStar2 bmp_source/teststar.png images.py</span><span style="color: rgba(128, 0, 0, 1)">"</span></pre>
</div>
<p>需要详细了解各个参数的意思，可以查看&nbsp;img2py.py 例子代码的说明即可。</p>
<p>我为了方便，参考修改编写了一个独立的工具类来方便生成所需的代码。</p>
<p>我可以再文件目录中选择所需的文件，然后右键复制文件地址，把它们路径复制出来。</p>
<p><img src="https://img2024.cnblogs.com/blog/8867/202412/8867-20241231115512381-1281060344.png" alt="" width="554" height="308" loading="lazy"></p>
<p>&nbsp;</p>
<p><img src="https://img2024.cnblogs.com/blog/8867/202412/8867-20241231115841893-1769783477.png" alt="" width="979" height="346" loading="lazy"></p>
<p>&nbsp;</p>
<h3>2、图标的选择界面及使用</h3>
<p>前面介绍了两种不同的图标资源库，我们应该再框架系统中能够顺利使用它们，以便为我们的工具栏、菜单、按钮等地方添加有趣而有意义的图标，比单纯的文本会好看很多。</p>
<p>如列表界面中的工具栏、按钮都采用了和内容一致的图标，比较美观一些。</p>
<p><img src="https://img2024.cnblogs.com/blog/8867/202412/8867-20241231120235757-226388441.png" alt="" width="961" height="640" loading="lazy"></p>
<p>&nbsp;有时候，我们右键菜单也可以根据图表库选择一致意义的图标。</p>
<p>表格显示的右键菜单</p>
<p><img src="https://img2024.cnblogs.com/blog/8867/202412/8867-20241231120747233-1652730544.png" alt="" width="198" height="272" loading="lazy"></p>
<p>或者树形列表的右键菜单</p>
<p><img src="https://img2024.cnblogs.com/blog/8867/202412/8867-20241231120905873-487170860.png" alt="" width="426" height="444" loading="lazy"></p>
<p>&nbsp;因此我们在系统中统一展示和选择图标操作，如下所示，包括自定义图标，也包括内置图标。</p>
<p><img src="https://img2024.cnblogs.com/blog/8867/202412/8867-20241231121139181-717198371.png" alt="" width="709" height="535" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/8867/202412/8867-20241231121415945-332653058.png" alt="" width="710" height="536" loading="lazy"></p>
<p>自定义图标可以根据需要进行添加到内置资源的类即可，图标来源很多，网上也有很多，可以参考一下下面的这个网址获取一些：<a href="https://www.iconarchive.com/" target="_blank" rel="noopener nofollow">https://www.iconarchive.com/</a></p>
<p>&nbsp;</p>
<p>&nbsp;在里面搜索关键字下载自己所需图标即可。</p>
<p>为了统一通过名称获取图标信息，我们可以编写一个通用的处理图标的函数来处理，如下函数。</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">def</span> get_bitmap(name: str, icon_size: int = 32) -&gt;<span style="color: rgba(0, 0, 0, 1)"> wx.Bitmap:
    </span><span style="color: rgba(128, 0, 0, 1)">"""</span><span style="color: rgba(128, 0, 0, 1)">获取位图,可以根据images里面的内容，或者是内置的wx.ART_XXX</span><span style="color: rgba(128, 0, 0, 1)">"""</span><span style="color: rgba(0, 0, 0, 1)">

    result </span>=<span style="color: rgba(0, 0, 0, 1)"> wx.ArtProvider.GetBitmap(
        wx.ART_FOLDER, wx.ART_OTHER, (icon_size, icon_size)
    )
    </span><span style="color: rgba(0, 0, 255, 1)">try</span><span style="color: rgba(0, 0, 0, 1)">:
        </span><span style="color: rgba(0, 0, 255, 1)">if</span> name <span style="color: rgba(0, 0, 255, 1)">is</span> None <span style="color: rgba(0, 0, 255, 1)">or</span> name == <span style="color: rgba(128, 0, 0, 1)">""</span><span style="color: rgba(0, 0, 0, 1)">:
            </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> result

        </span><span style="color: rgba(0, 0, 255, 1)">if</span> name.startswith(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">wx.ART_</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">):
            result </span>=<span style="color: rgba(0, 0, 0, 1)"> wx.ArtProvider.GetBitmap(
                eval(name), wx.ART_OTHER, (icon_size, icon_size)
            )
        </span><span style="color: rgba(0, 0, 255, 1)">else</span><span style="color: rgba(0, 0, 0, 1)">:
            img: wx.Image </span>=<span style="color: rgba(0, 0, 0, 1)"> (
                images.catalog[name].Image </span><span style="color: rgba(0, 0, 255, 1)">if</span> name <span style="color: rgba(0, 0, 255, 1)">in</span> images.catalog <span style="color: rgba(0, 0, 255, 1)">else</span><span style="color: rgba(0, 0, 0, 1)"> result
            )
            img </span>=<span style="color: rgba(0, 0, 0, 1)"> img.Scale(icon_size, icon_size, wx.IMAGE_QUALITY_HIGH)
            result </span>=<span style="color: rgba(0, 0, 0, 1)"> wx.Bitmap(img)
    </span><span style="color: rgba(0, 0, 255, 1)">except</span><span style="color: rgba(0, 0, 0, 1)"> Exception as e:
        </span><span style="color: rgba(0, 0, 255, 1)">print</span>(f<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">get_bitmap 调用错误: {e},没有找到{name}的图片</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)
    </span><span style="color: rgba(0, 0, 255, 1)">return</span> result</pre>
</div>
<p>这样我们在创建按钮、菜单的时候，使用这个生成图标位图的辅助函数即可通用了。</p>
<div class="cnblogs_code">
<pre>        button =<span style="color: rgba(0, 0, 0, 1)"> wx.Button(parent, id, btn_name)
        button.Enable(enable)
        </span><span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)"> icon_name:
            button.SetBitmap(<span style="color: rgba(255, 0, 0, 1)"><strong>get_bitmap</strong></span>(icon_name, icon_size))
            button.SetBitmapPosition(wx.LEFT)  </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 可以设置 LEFT, RIGHT, TOP, BOTTOM</span></pre>
</div>
<p><img src="https://img2024.cnblogs.com/blog/8867/202412/8867-20241231121956642-516984503.png" alt="" width="782" height="521" loading="lazy"></p>
<p>&nbsp;</p>
</div>
<div id="MySignature" role="contentinfo">
    <div style="border-right-color: #cccccc; border-right-width: 1px; border-right-style: solid; padding-right: 5px; border-top-color: #cccccc; border-top-width: 1px; border-top-style: solid; padding-left: 4px; font-size: 13px; padding-bottom: 4px; border-left-color: #cccccc; border-left-width: 1px; border-left-style: solid; width: 98%; padding-top: 4px; border-bottom-color: #cccccc; border-bottom-width: 1px; border-bottom-style: solid; background-color: #eeeeee;">
    <img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" align="top" alt="">
    <span style="color: #000000"><span class="Apple-tab-span" style="white-space: pre"></span>
     专注于代码生成工具、.Net/.NetCore 框架架构及软件开发，以及各种Vue.js的前端技术应用。著有Winform开发框架/混合式开发框架、微信开发框架、Bootstrap开发框架、ABP开发框架、SqlSugar开发框架等框架产品。
     <br>&nbsp;&nbsp;转载请注明出处：撰写人：伍华聪&nbsp;&nbsp;<a href="http://www.iqidi.com/" target="_blank">http://www.iqidi.com</a>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</span></div>
</div>
<div class="clear"></div>

        </div>
        <p class="postfoot">
            posted on 
<span id="post-date" data-last-update-days="0.41593188842708334" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2024-12-31 12:23">2024-12-31 12:23</span>&nbsp;
<a href="https://www.cnblogs.com/wuhuacong">伍华聪</a>&nbsp;
阅读(<span id="post_view_count">146</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18643713" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18643713);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18643713', targetLink: 'https://www.cnblogs.com/wuhuacong/p/18643713', title: 'WxPython跨平台开发框架之图标选择界面' })">举报</a>

        </p>
    