
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lradian/p/18820976" title="发布于 2025-04-11 16:48">
    <span role="heading" aria-level="2">C语言-基础知识（3）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        C语言-基础知识（3）
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="cpu刷新缓冲区的条件">CPU刷新缓冲区的条件</h1>
<h2 id="刷新输出缓冲区">刷新输出缓冲区</h2>
<ol>
<li>缓冲区数据已满会通知cpu</li>
<li>用户通知cpu去读取数据，在使用printf函数的时候加上‘\n’</li>
<li>输入缓冲区已满也会刷新输出缓冲区</li>
</ol>
<h1 id="缓冲区分类">缓冲区分类</h1>
<p>根据io设备的不同，可以把缓冲区分为输入缓冲区和输出缓冲区；根据刷新形式的不同也可以分为：全缓冲、行缓冲、无缓冲</p>
<ol>
<li>全缓冲指的是当缓冲区的数据被填满的时候，会立即把数据刷新到文件，或者在关闭文件、读取文件内容以及修改缓冲区类型时，也会立即把数据冲刷到文件，一般读写文件时用</li>
<li>行缓冲指的是当缓冲区的数据被填满时，或者缓冲区遇到‘\n’，或者在关闭文件、读取文件内容以及修改缓冲区类型时，也会立即把数据冲刷到文件，一般操作io设备时会采用，比如printf函数就是采用的行缓冲。</li>
<li>无缓冲就是没有缓冲区，直接输出，一般在linux系统的标准出错stderr就是采用的无缓冲，这样就可以立即输出错误信息</li>
</ol>
<h1 id="fflush函数">fflush函数</h1>
<pre><code>int fflush（FILE *stream）//FILE *指的是文件指针 显示器输出-&gt;标准输出-&gt;stdout  一般用于刷新输出缓冲区
</code></pre>
<h1 id="scanf函数">scanf函数</h1>
<p>此函数用于将用户从键盘输入的内容写入到内存中</p>
<pre><code>int scanf（const char * restrict format,）//第一个参数是字符串，里边可以包含转义说明符%
d	//整型
f	//浮点型
s	//字符串
c	//字符
[]	//需要匹配的字符由[]括起来，可以用-连接，比如匹配0-9：[0-9]
	//里边包含^的话表示不匹配
scanf("%[0-9]s",buf);	//通过键盘输入字符串，只打算接受0-9，如果输入其他字符串则结束输入
scanf("%[^0-9]s",buf);	//通过键盘输入字符串，不打算接受0-9，如果输入0-9则结束输入

</code></pre>
<p>如果包含多个转换说明符，类型必须一 一对应</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.8383080513252315" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-11 18:13">2025-04-11 16:48</span>&nbsp;
<a href="https://www.cnblogs.com/lradian">LRadian</a>&nbsp;
阅读(<span id="post_view_count">1</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18820976" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18820976);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18820976', targetLink: 'https://www.cnblogs.com/lradian/p/18820976', title: 'C语言-基础知识（3）' })">举报</a>
</div>
        