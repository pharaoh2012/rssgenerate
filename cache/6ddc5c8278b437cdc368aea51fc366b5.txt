
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/huangSir-devops/p/18907375" title="发布于 2025-06-02 16:57">
    <span role="heading" aria-level="2">Prometheus配置文件详解</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="概述">概述</h2>
<p>Prometheus是一个开源的系统监控和警报工具包。它的配置文件通常命名为prometheus.yml，用于配置Prometheus服务器的行为。</p>
<p>其配置文件主要包含以下几个部分：</p>
<ol>
<li>
<p>global: 全局配置</p>
</li>
<li>
<p>alerting: 警报配置</p>
</li>
<li>
<p>rule_files: 规则文件配置</p>
</li>
<li>
<p>scrape_configs: 抓取配置（用于配置监控目标）</p>
</li>
<li>
<p>remote_write, remote_read: 远程读写配置（用于与远程存储集成）</p>
</li>
</ol>
<h2 id="global全局配置">global（全局配置）</h2>
<p>定义整个 Prometheus 实例的默认行为</p>
<p>示例：</p>
<pre><code>global:
  # 设定 Prometheus 抓取目标实例指标数据的时间间隔，默认 1m ，可按需修改，如设为 15s 实现更频繁采集 。
  scrape_interval: 15s
  # Prometheus 评估告警规则的时间间隔，默认 1m ，即每 1 分钟检查告警规则是否触发。
  evaluation_interval: 15s
  # 一次抓取请求的超时时间，默认 10s ，超时则抓取失败
  scrape_timeout: 10s
  # 与外部系统（联邦、远程存储、Alertmanager 等 ）通信时，添加到度量指标数据的标签，用于标识监控源等信息。
  external_labels:
    cluster: "prod"
    region: "us-west"
</code></pre>
<h2 id="rule_files规则文件配置">rule_files（规则文件配置）</h2>
<p>指定告警规则文件路径列表，支持通配符。Prometheus 从中读取告警规则</p>
<p>示例：</p>
<pre><code>rule_files:
  - "rules/alerts.yml"        # 警报规则路径
  - "rules/*.rules"           # 支持通配符
</code></pre>
<p>规则文件示例 (rules/alerts.yml)：</p>
<pre><code>groups:
- name: example-alerts
  rules:
  - alert: HighCPU
    expr: avg(rate(node_cpu_seconds_total{mode="idle"}[5m])) &lt; 0.2
    for: 10m
    labels:
      severity: critical
    annotations:
      summary: "高CPU使用率 ({{ $labels.instance }})"
</code></pre>
<h2 id="alerting警报配置">alerting（警报配置）</h2>
<p>关联 Alertmanager 实例</p>
<pre><code>alertmanagers:
  - scheme: http
    # 发送警报超时时间
    timeout: 10s
    # Alertmanager实例地址
    static_configs:
      - targets:
        - "127.0.0.1:9093"
</code></pre>
<h2 id="scrape_configs抓取配置">scrape_configs（抓取配置）</h2>
<p>核心部分，用于定义监控目标及数据抓取方式。</p>
<pre><code>scrape_configs:
  # Job 名称（唯一标识）
  - job_name: "prometheus"
    # 静态目标列表
    static_configs:
      # 目标地址 (host:port)
      - targets: ["localhost:9090"]

  - job_name: "node_exporter"
    # 协议 (http/https, 默认http)
    scheme: https
    # 指标路径（默认为 /metrics）
    metrics_path: /metrics
    # 请求参数
    params:
      module: [net]
    # 目标地址
    static_configs:
      - targets: ["10.0.0.1:9100", "10.0.0.2:9100"]
    # 抓取前重写标签
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
    # 抓取后重写指标标签
    metric_relabel_configs:
      - source_labels: [device]
        regex: "^(/dev/sd.).*"
        replacement: "$1"
        action: replace
</code></pre>
<h2 id="remote_writeremote_read远程读写配置">remote_write&amp;remote_read（远程读写配置）</h2>
<h3 id="远程写入配置remote_write">远程写入配置（remote_write）</h3>
<p>配置将 Prometheus 采集数据远程写入其他存储系统的参数，如：</p>
<ul>
<li>url：远程存储写入地址。</li>
<li>remote_timeout：远程写入请求超时时间，默认 30s 。</li>
<li>还包括 tls_config（TLS 配置）、basic_auth（认证配置 ）、write_relabel_configs（对要远程写入数据重新标记 ）等配置项。</li>
</ul>
<h3 id="远程读取配置remote_read">远程读取配置（remote_read）</h3>
<p>配置从远程存储读取数据的相关参数，与 remote_write 类似 ，如 url（读取地址） 、read_recent（是否仅读取最近数据 ）、required_matchers（读取数据必须匹配的标签条件 ）等。</p>
<h2 id="热加载配置文件">热加载配置文件</h2>
<p>修改了配置文件之后，我们不想重启Prometheus，想让其进行热加载配置文件，应该怎么做呢？</p>
<blockquote>
<p>前提条件，启动Prometheus时需要开启热加载，需要指定该参数：--web.enable-lifecycle</p>
</blockquote>
<p>访问下面的接口即可</p>
<pre><code>curl -X POST http://localhost:9090/-/reload
</code></pre>
<p>热加载之前可以使用<code>promtool</code>工具对你的配置文件修改进行检查</p>
<pre><code>[root@lb ~/prometheus]# ./promtool check config prometheus.yml
Checking prometheus.yml
 SUCCESS: prometheus.yml is valid prometheus config file syntax
</code></pre>

</div>
<div id="MySignature" role="contentinfo">
    <p>本文来自博客园，作者：<a href="https://www.cnblogs.com/huangSir-devops/" target="_blank">huangSir-devops</a>，转载请注明原文链接：<a href="https://www.cnblogs.com/huangSir-devops/p/18907375" target="_blank">https://www.cnblogs.com/huangSir-devops/p/18907375</a>，微信Vac666666，欢迎交流</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.6767433880127315" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-06-02 16:58">2025-06-02 16:57</span>&nbsp;
<a href="https://www.cnblogs.com/huangSir-devops">huangSir-devops</a>&nbsp;
阅读(<span id="post_view_count">58</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18907375);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18907375', targetLink: 'https://www.cnblogs.com/huangSir-devops/p/18907375', title: 'Prometheus配置文件详解' })">举报</a>
</div>
        