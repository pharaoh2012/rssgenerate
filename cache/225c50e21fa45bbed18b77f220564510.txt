
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wenbochang/p/18675803" title="发布于 2025-01-16 21:40">
    <span role="heading" aria-level="2">https证书一键自动续期，帮你解放90天限制</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="前言">前言</h1>
<p>前几天网站证书到期，发觉证书颁发每次只能90天有效期，这谁能忍受，于是乎发觉网上有免费的一键续期脚本，真正解放我们的双手。项目如下<a href="https://github.com/acmesh-official/acme.sh" target="_blank" rel="noopener nofollow">acme.sh</a>。</p>
<p>期间由于"<strong>墙</strong>"的原因，踩了很多的坑，此文记录一下踩坑的过程，同时也帮助我们"<strong>墙内</strong>"的程序员，不需要踩不必要的坑。</p>
<h1 id="1安装acmesh脚本">1、安装acme.sh脚本</h1>
<p>官网教程如下，但你发觉，会一直clone失败，因为“墙内”链接github是不通的<br>
<img src="https://img2024.cnblogs.com/blog/1335795/202501/1335795-20250116213645436-1398086919.png" alt="" loading="lazy"></p>
<p>所以项目<strong>很贴心</strong>的给我们推荐了国内的gitee链接如下  (<strong>大坑</strong>)</p>
<p><img src="https://img2024.cnblogs.com/blog/1335795/202501/1335795-20250116213654481-958258304.png" alt="" loading="lazy"></p>
<p>但是你在后面几个命令，一推报错，原因竟然是 gitee作者已经好久不维护了，只维护github社区，也就是gitee已经落后github 两年之久了，缺失了非常非常多的文件，自然后面执行命令就会报错了</p>
<p><img src="https://img2024.cnblogs.com/blog/1335795/202501/1335795-20250116213706187-1680311532.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/1335795/202501/1335795-20250116213710574-1186110854.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/1335795/202501/1335795-20250116213715475-1312568457.png" alt="" loading="lazy"></p>
<p>所以大家<strong>千万不要用官方文档提供的gitee链接</strong>。所以大家可以用自己的gitee账号，同步一下github 这个仓库，然后clone 自己仓库下的最新仓库，我同步的仓库提供给大家，大家可以直接clone下载使用<a href="https://gitee.com/wenber/acme.sh" target="_blank" rel="noopener nofollow"> acme.sh - gitee </a></p>
<p>所以完整的安装命令如下</p>
<pre><code class="language-bash">git clone https://gitee.com/wenber/acme.sh   // 可以换成你自己的gitee仓库
cd acme.sh
./acme.sh --install -m my@example.com    //  这个是邮件，可以随便填写
</code></pre>
<h1 id="2生成证书">2、生成证书</h1>
<p>请大家使用官网提供的 <strong>自动验证DNS API</strong> 方式，不要使用手动方式。<br>
<img src="https://img2024.cnblogs.com/blog/1335795/202501/1335795-20250116213806234-1226763094.png" alt="" loading="lazy"></p>
<p>点击更详细的dns api用法，具体看你是哪个服务商。举个例子，我是腾讯云服务商，我选择腾讯云的说明，如果你是阿里云，请选择阿里云的说明文档</p>
<p><img src="https://img2024.cnblogs.com/blog/1335795/202501/1335795-20250116213815341-2055659803.png" alt="" loading="lazy"></p>
<p>以我的域名gdufe888.top  <a href="https://cloud.tencent.com/document/product/302/105900#.E7.94.B3.E8.AF.B7.E8.AF.81.E4.B9.A6" target="_blank" rel="noopener nofollow">腾讯云服务商</a>为例。</p>
<ol>
<li>获取 api token秘钥</li>
</ol>
<p><img src="https://img2024.cnblogs.com/blog/1335795/202501/1335795-20250116213823725-160605389.png" alt="" loading="lazy"></p>
<ol start="2">
<li>将秘钥写进linux环境变量上面，并且source强制生效一下</li>
</ol>
<pre><code class="language-bash">export Tencent_SecretId="&lt;Your SecretId&gt;"
export Tencent_SecretKey="&lt;Your SecretKey&gt;"
</code></pre>
<ol start="3">
<li>申请证书, 这一步如果报错请回到 “<strong>安装acme.sh脚本</strong>” 重新安装</li>
</ol>
<pre><code class="language-bash">acme.sh --issue --dns dns_tencent -d gdufe888.top -d *.gdufe888.top
</code></pre>
<h1 id="3复制证书">3、复制证书</h1>
<p>这一步也是官网的坑。生成的文件是在 gdufe888.top_ecc文件夹下面，而不是在gdufe888.top文件下面，如果命令必须加上 --ecc，强制使用gdufe888.top_ecc文件</p>
<pre><code class="language-bash">/root/work/acme.sh/acme.sh --install-cert -d gdufe888.top --ecc \    
--key-file       /usr/local/nginx/key.pem  \        // 文件存放的位置
--fullchain-file /usr/local/nginx/cert.pem \        // 文件存放的位置
--reloadcmd     "/usr/local/nginx/sbin/nginx -s reload"
</code></pre>
<h1 id="4修改nginx-ssl文件路径">4、修改nginx ssl文件路径</h1>
<p>第三步执行完毕之后，你会在/usr/local/nginx看到两个文件，key.pem &amp; cert.pem。这时候修改nginx.conf文件</p>
<pre><code class="language-bash">ssl_certificate /usr/local/nginx/cert.pem;
ssl_certificate_key /usr/local/nginx/key.pem;
</code></pre>
<p>然后重启/usr/local/nginx/sbin/nginx -s reload，你重新进入网站你就会发觉，证书更新了</p>
<p><img src="https://img2024.cnblogs.com/blog/1335795/202501/1335795-20250116213835197-142329466.png" alt="" loading="lazy"></p>
<p>同时linux有一个crontab -l 命令，每天早上9.54去检测证书是否过期，然后给你自动执行更新</p>
<p><img src="https://img2024.cnblogs.com/blog/1335795/202501/1335795-20250116213843300-2089914928.png" alt="" loading="lazy"></p>
<h1 id="最后">最后</h1>
<p>执行完以上操作，你会发现，脚本每天早上会去检测证书是否会过期。证书默认90天，如果小于30天有效期，他就会去更新，所以完全不用担心证书会过期了</p>
<pre><code class="language-bash"># Calculate the next renew time
_calculate_renew_time() {
  _d="$1"
  _savedomainconf "$_d"
  _currentTime=$(date -u "+%s")
  _renewTime=$(($_currentTime + 60 * 60 * 24 * 30))
  _debug "_renewTime='$_renewTime'"
  _savedomainconf "Le_NextRenewTime" "$_renewTime"
  _savedomainconf "Le_NextRenewTimeStr" "$(date -u -d "@$_renewTime" "+%Y-%m-%d %H:%M:%S UTC")"
}
</code></pre>
<p>这个脚本本来非常简单，但由于“墙”的原因，导致遇到了很多坑，难点，给自己一个记录，也给大家一个参考，谢谢大家</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.6938566311782407" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-16 21:41">2025-01-16 21:40</span>&nbsp;
<a href="https://www.cnblogs.com/wenbochang">程序员博博</a>&nbsp;
阅读(<span id="post_view_count">680</span>)&nbsp;
评论(<span id="post_comment_count">13</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18675803" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18675803);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18675803', targetLink: 'https://www.cnblogs.com/wenbochang/p/18675803', title: 'https证书一键自动续期，帮你解放90天限制' })">举报</a>
</div>
        