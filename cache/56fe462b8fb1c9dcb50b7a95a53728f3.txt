
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wybsignal/p/18796225" title="发布于 2025-03-27 18:16">
    <span role="heading" aria-level="2">HackTheBox-Linux-Brainfuck</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        <img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327181416627-2052654515.png" alt="HackTheBox-Linux-Brainfuck" class="desc_img">
        HTB-Linux-Brainfuck OSCP预备线路box1
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="brainfuck">brainfuck</h1>
<h2 id="一攻击流程">一、攻击流程：</h2>
<p>	使用nmap进行探测开放端口和服务。</p>
<pre><code class="language-shell">sudo nmap --min-rate=1000 -sT -sC -sV [target]
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327155630975-1432930961.png" alt="" loading="lazy"></p>
<p>	通过上图可以看出，有22端口的ssh服务、25端口的ftp端口、，然后我们将爆出的域名放入host文件中。不过要注意，首先host文件在linux和windows中都是实时生效的，所以host文件中修改不需要重启。然后hosts文件中IP和域名间距就用空格表示就好了，如果用其他的可能会存在无法识别的情况，所以就用空格就好了。</p>
<p><img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327155728049-946836975.png" alt="" loading="lazy"></p>
<p>	我们配置好hosts文件后，访问<a href="https://brainfuck.htb/" target="_blank" rel="noopener nofollow">https://brainfuck.htb/</a>，我们会发现这是wordpress的站点，所以接下来我们启用wpscan来进行辅助渗透。</p>
<p><img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327155755266-378081473.png" alt="" loading="lazy"></p>
<p>	然后我们利用wpscan开始wordpress的信息收集尝试</p>
<pre><code class="language-shell">wpscan --url https://brainfuck.htb –enumerate u,p --disable-tls-checks
</code></pre>
<p>	扫描完后我们可以看见，红框处的插件版本是过低了的，可以尝试去攻击一下，搜集一下漏洞尝试攻击。</p>
<p><img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327155822076-884008248.png" alt="" loading="lazy"></p>
<p>	利用searchsploit进行插件漏洞搜集，指令如下。</p>
<pre><code class="language-shell">searchsploit wp-support-plus-responsive-ticket-system 7.1.3
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327175751085-2102334625.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327175818580-1508025370.png" alt="" loading="lazy"></p>
<p>	修改action中的地址，然后将value修改后，点击即可进入后台。</p>
<p><img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327175842915-1182188547.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327175902353-298191506.png" alt="" loading="lazy"></p>
<p>		我们在进入了wordpress后台之后，我们找到设置中的“easy wp smtp”我们就可以看见SMTP配置的服务和密码，这里我们利用F12，修改密码属性，改为text即可显示SMTP密码。</p>
<p><img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327180005962-1059694536.png" alt="" loading="lazy"></p>
<p>	利用以下指令用nc来监听pop3。</p>
<pre><code class="language-shell">nc -nC [target] 110
user [username] --输入用户
pass [password] --输入密码
list --列表
retr [number]   --输入用户名和密码之后给的数字，几就是看几的信息
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327180137916-1842830038.png" alt="" loading="lazy"></p>
<p>	我们用之前得出的用户名和密码进行登录<a href="https://sup3rs3cr3t.brainfuck.htb/" target="_blank" rel="noopener nofollow">https://sup3rs3cr3t.brainfuck.htb/</a>，就可以进入这个站点。</p>
<p><img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327180451093-179233273.png" alt="" loading="lazy"></p>
<p>	然后我们将能够相似格式的信息放在一起，可以去尝试利用python破解。</p>
<p><img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327180507793-414143802.png" alt="" loading="lazy"></p>
<p>	利用下面这段代码就可以进行破解，得出密文，然后我们去重然后就可以得到可以组成的单词”fuck“"my""brain"。</p>
<pre><code class="language-shell">enc="Pieagnm - Jkoijeg nbw zwx mle grwsnn"
pt="Orestis - Hacking for fun and profit"
assert len(enc)==len(pt)
list(zip(enc,pt))
[ord(e)-ord(p) for e,p in zip(enc, pt)]
[(ord(e)-ord(p))%26 for e,p in zip(enc, pt)]
[(ord(e)-ord(p))%26 + ord('a') for e,p in zip(enc, pt)]
[chr((ord(e)-ord(p))%26 + ord('a')) for e,p in zip(enc, pt)]
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327180526579-618252759.png" alt="" loading="lazy"></p>
<p>	然后我们将其摆列组合可以得到，解密密钥”fuckmybrain“，接下来我们就可以成功解密了，然后我就可以得到下列地址。</p>
<p><img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327180542424-1540143210.png" alt="" loading="lazy"></p>
<p>	接着，我们进行curl我们得到的网址，就可以得到登录密钥。</p>
<pre><code class="language-shell">curl [url] -k
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327180604325-2133851739.png" alt="" loading="lazy"></p>
<p>	我们本来想尝试利用这个id_rsa文件直接进行登录的，但是貌似被解密过</p>
<p><img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327180619624-761117231.png" alt="" loading="lazy"></p>
<p>	<code>ssh2john</code> 是一个工具，它是 John the Ripper（一个流行的密码破解工具）的一部分。这个命令将 SSH 私钥文件 <code>id_rsa</code> 转换为 John the Ripper 能够处理的哈希格式，并将结果输出到 <code>id_rsa_hash</code> 文件中。换句话说，这个工具将 SSH 私钥文件转化为一种可以被 John the Ripper 破解的格式。</p>
<p>	<code>john</code> 是 John the Ripper 的命令，用于实际执行密码破解操作。这个命令将使用名为 <code>rockyou.txt</code> 的密码字典文件（通常包含常见密码的列表）来尝试破解 <code>id_rsa_hash</code> 文件中的哈希，寻找正确的密码。<code>rockyou.txt</code> 是一个非常常见的密码字典文件，通常用于密码破解测试，因为它包含了大量常见的密码。</p>
<pre><code class="language-shell">ssh2john id_rsa &gt; id_rsa_hash
john id_rsa -w=/usr/share/wordlists/rockyou.txt
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327180655633-481009295.png" alt="" loading="lazy"></p>
<p>	这里我们找到了密码之后，我们备份一个无加密的id_rsa文件。</p>
<pre><code class="language-shell">openssl rsa -in [加密文件] -out [保存文件]
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327180715185-1323906431.png" alt="" loading="lazy"></p>
<p>	接下来，我们将无加密的ssh密钥进行登录，然后就直接可以利用下列命令进行登录。</p>
<pre><code class="language-shell">sudo ssh -i [无加密文件] orestis@[target]
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327180732779-200592642.png" alt="" loading="lazy"></p>
<p>	我们浏览文件，可以看见debug.txt文件是一个串码，output是一个加密后的密码。</p>
<p><img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327180753015-1685497774.png" alt="" loading="lazy"></p>
<p>	同时，可以看见encrypt.sage，是一个加密脚本，仔细分析我们可以知道这是一个RSA的加密方式</p>
<p><img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327180817903-1339574042.png" alt="" loading="lazy"></p>
<p>	找来RSA解密文件，接下来我们顺序填入，进行解密。</p>
<pre><code class="language-python">def egcd(a, b):
    x,y, u,v = 0,1, 1,0
    while a != 0:
        q, r = b//a, b%a
        m, n = x-u*q, y-v*q
        b,a, x,y, u,v = a,r, u,v, m,n
        gcd = b
    return gcd, x, y

def main():

    p = 7493025776465062819629921475535241674460826792785520881387158343265274170009282504884941039852933109163193651830303308312565580445669284847225535166520307
    q = 7020854527787566735458858381555452648322845008266612906844847937070333480373963284146649074252278753696897245898433245929775591091774274652021374143174079
    e = 30802007917952508422792869021689193927485016332713622527025219105154254472344627284947779726280995431947454292782426313255523137610532323813714483639434257536830062768286377920010841850346837238015571464755074669373110411870331706974573498912126641409821855678581804467608824177508976254759319210955977053997
    ct = 44641914821074071930297814589851746700593470770417111804648920018396305246956127337150936081144106405284134845851392541080862652386840869768622438038690803472550278042463029816028777378141217023336710545449512973950591755053735796799773369044083673911035030605581144977552865771395578778515514288930832915182

    # compute n
    n = p * q

    # Compute phi(n)
    phi = (p - 1) * (q - 1)

    # Compute modular inverse of e
    gcd, a, b = egcd(e, phi)
    d = a

    print( "n:  " + str(d) );

    # Decrypt ciphertext
    pt = pow(ct, d, n)
    print( "pt: " + str(pt) )

if __name__ == "__main__":
    main()

</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327180932347-430874876.png" alt="" loading="lazy"></p>
<p>	执行脚本，然后将得到的pt进行解密，最后将这个pt进行ASCII解密。</p>
<p><img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327180859672-416196834.png" alt="" loading="lazy"></p>
<p>	最后进行ASCII解密，就可以得到最终的root的答案。</p>
<pre><code class="language-python">&gt;&gt;&gt; pt = 24604052029401386049980296953784287079059245867880966944246662849341507003750
&gt;&gt;&gt; f"{pt:x}"
&gt;&gt;&gt; bytes.fromhex(f"{pt:x}").decode()
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/2982868/202503/2982868-20250327180912658-1707413786.png" alt="" loading="lazy"></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.0008197993564814814" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-27 18:16">2025-03-27 18:16</span>&nbsp;
<a href="https://www.cnblogs.com/wybsignal">wybsignal</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18796225" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18796225);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18796225', targetLink: 'https://www.cnblogs.com/wybsignal/p/18796225', title: 'HackTheBox-Linux-Brainfuck' })">举报</a>
</div>
        