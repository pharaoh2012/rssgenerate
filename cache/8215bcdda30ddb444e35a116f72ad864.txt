
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/developer-tianyiyun/p/18926710" title="发布于 2025-06-13 11:32">
    <span role="heading" aria-level="2">使用 ftrace 跟踪内核丢包问题定位的实践</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>本文分享自天翼云开发者社区《<a href="https://www.ctyun.cn/developer/article/663340136087621" rel="noopener nofollow">使用 ftrace 跟踪内核丢包问题定位的实践</a>》，作者：f****n&nbsp;</p>
<p>数据包的丢失可能会导致性能下降或服务中断。为了诊断内核中是否有丢包问题，我们可以使用 ftrace 工具进行内核级别的跟踪，定位导致数据包丢失的原因。下面通过一个实际的例子，来展示如何使用 ftrace 来跟踪网络丢包的问题。</p>
<p><strong>一、背景</strong></p>
<p>在一个高流量的网络环境中，可能会发生数据包丢失。这种丢包可能是由于内核中的调度延迟、网络驱动问题或资源争用等原因导致的。通过分析内核的网络栈，可以帮助我们定位丢包的具体原因。</p>
<p><strong>二、启用 ftrace 并开始跟踪</strong></p>
<p>首先，确保你的系统已经启用了 ftrace。你可以通过以下命令检查系统是否支持 ftrace：ls /sys/kernel/debug/tracing如果返回了相关的文件和目录，说明系统支持 ftrace。</p>
<p>接下来，我们将使用 ftrace 跟踪内核中与网络相关的函数调用，查看是否有异常的情况发生。</p>
<p><strong>三、跟踪 tcp 发送和接收</strong></p>
<p>丢包通常与 TCP 发送和接收有关，因此我们首先从 tcp_sendmsg 和 tcp_recvmsg 函数入手。可以通过以下步骤开启 ftrace 跟踪：</p>
<p>选择跟踪点：<br>
我们将跟踪 tcp_sendmsg 和 tcp_recvmsg
这两个函数，它们分别处理数据包的发送和接收。</p>
<p>打开
ftrace 调试接口：echo function &gt;
/sys/kernel/debug/tracing/current_tracer<br>
启用 tcp_sendmsg 和 tcp_recvmsg 跟踪：<br>
在 ftrace 中，我们可以选择对特定的内核函数进行跟踪。我们将追踪 TCP 发送和接收相关的函数：</p>
<p>echo
tcp_sendmsg &gt; /sys/kernel/debug/tracing/set_ftrace_filter<br>
echo tcp_recvmsg &gt; /sys/kernel/debug/tracing/set_ftrace_filter<br>
开始跟踪：<br>
启动 ftrace 来记录内核函数的调用。</p>
<p>echo 1
&gt; /sys/kernel/debug/tracing/tracing_on<br>
查看跟踪结果：<br>
通过查看 /sys/kernel/debug/tracing/trace 文件，我们可以看到 tcp_sendmsg 和 tcp_recvmsg 函数的调用情况。</p>
<p>cat
/sys/kernel/debug/tracing/trace<br>
这时，ftrace 会输出类似如下的内容：</p>
<p>&lt;...&gt;-1234
&nbsp;[000] .... &nbsp;10938.567892: tcp_sendmsg: skb=0x1234, len=1500,
dest=192.168.1.10<br>
&lt;...&gt;-1234 &nbsp;[000] .... &nbsp;10938.567895: tcp_sendmsg: skb=0x1235,
len=1500, dest=192.168.1.10<br>
&lt;...&gt;-1234 &nbsp;[000] .... &nbsp;10938.568002: tcp_recvmsg: skb=0x1236,
len=1500, src=192.168.1.10<br>
每一条记录都包含了发送和接收数据包的具体信息，例如数据包的长度、源/目标ip等。</p>
<p><strong>四、分析丢包现象</strong></p>
<p>假设在跟踪结果中，我们注意到 tcp_sendmsg 和 tcp_recvmsg 的日志显示有发送的数据包，但接收端并没有相应的接收记录。通过分析这些日志，我们可以判断出以下几种可能性：</p>
<p>网络层丢包：<br>
如果发送的数据包数量大于接收的数据包数量，可能是由于网络层的丢包。此时，可以查看其他网络设备的日志，如交换机、路由器等，确认是否存在网络丢包。</p>
<p>内核队列拥塞：<br>
如果发送的数据包都显示成功发送，但由于内核网络栈中存在队列拥塞，接收端可能无法及时接收数据包。在 ftrace
中，我们还可以查看 tcp_retransmit_skb 函数的调用情况。如果这个函数被频繁调用，说明存在数据包重传，可能是由于网络拥塞或内核的调度延迟导致的。</p>
<p>可以通过以下命令启用 tcp_retransmit_skb 跟踪：</p>
<p>echo
tcp_retransmit_skb &gt; /sys/kernel/debug/tracing/set_ftrace_filter<br>
查看跟踪结果时，如果出现大量的重传记录，这就说明丢包发生的原因可能是网络拥塞或系统资源不足。</p>
<p>硬件问题：<br>
如果数据包在网络接口上确实被成功发送，但没有到达接收端，可能是由于硬件问题（如网卡驱动故障或硬件故障）。此时可以通过查看 netif_receive_skb 和网卡驱动的 net_device 函数来分析是否存在硬件故障或驱动问题。</p>
<p>echo
netif_receive_skb &gt; /sys/kernel/debug/tracing/set_ftrace_filter</p>
<p><strong>五、禁用跟踪和清理</strong></p>
<p>完成分析后，记得停止跟踪并清理 ftrace 配置，以较少对系统性能产生影响。</p>
<p>停止跟踪：echo
0 &gt; /sys/kernel/debug/tracing/tracing_on<br>
清理过滤器：echo &gt;
/sys/kernel/debug/tracing/set_ftrace_filter</p>
<p><strong>六、总结</strong></p>
<p>通过使用
ftrace 工具跟踪内核中的网络函数调用，我们可以非常方便地分析网络丢包的问题。在本例中，我们通过跟踪
tcp_sendmsg 和 tcp_recvmsg 函数，结合
tcp_retransmit_skb 和 netif_receive_skb 等内核函数的日志，能够帮助我们快速定位丢包的原因。无论是网络拥塞、内核调度问题，还是硬件故障，ftrace 提供了一个非常强大的工具来诊断内核中的各类问题。</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-06-13 11:33">2025-06-13 11:32</span>&nbsp;
<a href="https://www.cnblogs.com/developer-tianyiyun">天翼云开发者社区</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18926710);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18926710', targetLink: 'https://www.cnblogs.com/developer-tianyiyun/p/18926710', title: '使用 ftrace 跟踪内核丢包问题定位的实践' })">举报</a>
</div>
        