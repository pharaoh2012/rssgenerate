
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/deali/p/19026074/csharp-unit-test-coverage-analysis" title="发布于 2025-08-06 23:29">
    <span role="heading" aria-level="2">分析C#项目的单元测试覆盖率，提高代码质量</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        C#覆盖率分析？不就是用工具生成报告吗？VSCode、VS、Rider哪个不能干？真当这是啥高科技？
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="前言">前言</h2>
<p>正如我在<a href="https://blog.deali.cn/p/csharp-aot-imageglider" target="_blank" rel="noopener nofollow">前一篇</a>介绍 <a href="https://github.com/star-plan/image-glider" target="_blank" rel="noopener nofollow">ImageGlider</a> 的文章里预告的那样，这篇同样属于那套「C# + 自动化发布」开发流程的系列分享，继续把踩过的坑和总结的经验都记录下来，大家一起少走弯路。</p>
<p>单元测试的重要性不用我多说了吧？😄</p>
<p>而<strong>覆盖率</strong>，保证了单元测试的<strong>广度和有效性——它能帮助开发者发现遗漏的逻辑分支，避免“测试了但其实没测到”的尴尬场面</strong>。</p>
<p>特别是在如今的AI编程时代，完善的测试可以让AI自动验证功能的实现结果</p>
<p>刚好 C# 拥有非常完善的基础设施，这种功能丰富的语言，特别适应 AI 时代，我有预感，dotnet 平台在 AI 时代未来可期😁</p>
<p>要进行覆盖率测试，方法有非常多，一开始我使用了一个第三方工具来生成 HTML 报告，后面发现 VSCode、VS、Rider 这些 IDE 里都可以🤣</p>
<h2 id="c工具库">C#工具库</h2>
<p>今年我陆续用 C# 开发了不少工具</p>
<p>涵盖的范围也不小</p>
<p>感觉都可以组成一个小工具库了</p>
<p>这些工具分别是：</p>
<ul>
<li><a href="https://blog.deali.cn/Blog/Post/6a903b1c6fb2487f" target="_blank" rel="noopener nofollow">视频剪辑工具 Clipify</a></li>
<li><a href="https://blog.deali.cn/Blog/Post/f41b7410d59aa6b0" target="_blank" rel="noopener nofollow">AI 文章发布工具 StarBlog Publisher</a></li>
<li><a href="https://blog.deali.cn/p/sharpico-pure-csharp-zero-dependency-ico-generator" target="_blank" rel="noopener nofollow">图标生成工具 SharpIco</a></li>
<li><a href="https://blog.deali.cn/p/csharp-aot-imageglider" target="_blank" rel="noopener nofollow">多功能图片处理工具 ImageGlider</a></li>
<li><a href="https://github.com/star-plan/pdf-toc-extractor" target="_blank" rel="noopener nofollow">PDF 目录提取工具 PdfTocExtractor</a></li>
</ul>
<h2 id="依赖">依赖</h2>
<p>使用 <code>dotnet-reportgenerator-globaltool</code> 工具可以生成 HTML 报告</p>
<pre><code class="language-bash">dotnet tool install -g dotnet-reportgenerator-globaltool
</code></pre>
<h2 id="测试覆盖率">测试覆盖率</h2>
<p>以 ImageGlider 项目为例</p>
<p>使用以下命令分析项目的单元测试覆盖率，并生成测试报告网页</p>
<pre><code class="language-bash"># 生成测试覆盖率报告
dotnet test --collect:"XPlat Code Coverage" --results-directory ./temp/TestResults

# 使用 reportgenerator 生成HTML报告
reportgenerator -reports:"./temp/TestResults/*/coverage.cobertura.xml" -targetdir:"./TestResults/CoverageReport" -reporttypes:Html
</code></pre>
<p>生成的测试报告路径示例</p>
<pre><code class="language-bash">temp\TestResults\4eaa9684-a3b6-4b2a-81ac-d75e1e375e4b\coverage.cobertura.xml
</code></pre>
<p>直接打开这个网页就可以看到覆盖率的报告了</p>
<h3 id="html-报告">HTML 报告</h3>
<p>非常详细</p>
<h3 id="总览">总览</h3>
<p><img src="https://img2024.cnblogs.com/blog/866942/202508/866942-20250806232757389-1480062960.png" alt="" loading="lazy"></p>
<h3 id="查看详细覆盖率">查看详细覆盖率</h3>
<p>这里可以调整分组模式</p>
<p>默认是 By assembly</p>
<p>可以改成 By namespace ，命名空间模式又分 level 1 和 level 2</p>
<p>其中 Line coverage 和 Branch coverage 都是可以筛选的</p>
<p>项目大点的话，建议选择 By Namespace level 2 ，比较直观</p>
<p><img src="https://img2024.cnblogs.com/blog/866942/202508/866942-20250806232806367-554514041.png" alt="" loading="lazy"></p>
<h3 id="方法的测试覆盖率">方法的测试覆盖率</h3>
<p>点击具体的类，跳转到方法覆盖率页面</p>
<p><img src="https://img2024.cnblogs.com/blog/866942/202508/866942-20250806232814964-1654238720.png" alt="" loading="lazy"></p>
<p>这里可以看到哪个方法没写测试</p>
<p>或者哪些 case 是没有覆盖到的</p>
<p>总之非常方便</p>
<p><img src="https://img2024.cnblogs.com/blog/866942/202508/866942-20250806232840848-221384931.png" alt="image" loading="lazy"></p>
<h2 id="vscode">VSCode</h2>
<p>在 tests 目录上右键，运行覆盖率测试</p>
<p>很快就会在各个目录上出现类似手机电池的图标（好可爱😄）</p>
<p>可以很方便地看到各个项目、各个代码文件的测试覆盖率</p>
<p><img src="https://img2024.cnblogs.com/blog/866942/202508/866942-20250806232905674-644565643.png" alt="" loading="lazy"></p>
<h2 id="rider">Rider</h2>
<p>我是先在 VSCode 里发现的</p>
<p>我就在想</p>
<p>VSCode 都有的功能，老牌 C# IDE 的这个 Rider，应该更加有吧</p>
<p>结果测了一下，还真有</p>
<p>菜单 Tests -&gt; Cover Unit Tests</p>
<p>这个功能也不错，还能导出 HTML 什么的</p>
<p><img src="https://img2024.cnblogs.com/blog/866942/202508/866942-20250806232914145-559534939.png" alt="" loading="lazy"></p>
<h2 id="小结">小结</h2>
<p>总之，通过dotnet-reportgenerator-globaltool和VSCode、VS、Rider等IDE的内置功能，我们可以轻松分析C#项目的单元测试覆盖率，帮助提升代码质量和测试有效性。</p>

</div>
<div id="MySignature" role="contentinfo">
    微信公众号：「程序设计实验室」
专注于互联网热门新技术探索与团队敏捷开发实践，包括架构设计、机器学习与数据分析算法、移动端开发、Linux、Web前后端开发等，欢迎一起探讨技术，分享学习实践经验。
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.001388888888888889" data-date-updated="2025-08-06 23:31">2025-08-06 23:29</span>&nbsp;
<a href="https://www.cnblogs.com/deali">程序设计实验室</a>&nbsp;
阅读(<span id="post_view_count">111</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19026074);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19026074', targetLink: 'https://www.cnblogs.com/deali/p/19026074/csharp-unit-test-coverage-analysis', title: '分析C#项目的单元测试覆盖率，提高代码质量' })">举报</a>
</div>
        