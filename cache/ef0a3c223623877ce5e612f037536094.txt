
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chenshibao/p/18822323" title="发布于 2025-04-12 17:35">
    <span role="heading" aria-level="2">DeepSeek本地部署+Page Assist浏览器插件+C#接口调用</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="1安装ollama">1.安装Ollama</h2>
<p>Ollama作为本地部署大模型的方案，还是非常不错的。</p>
<p>1、跨平台：支持 macOS、Linux 和 Windows。</p>
<p>2、市面主流开源模型都支持：包括Llama 3.3, DeepSeek-R1, Phi-4, Gemma 2等54个开源模型。</p>
<p>3、REST API：Ollama提供对外API能力，想要自己开发客户端、或者集成到应用系统都是非常方便的。</p>
<p>4、生态完善：众多开源Web项目、开源桌面软件支持Ollama，还有终端工具、移动应用、开发工具库等开源项目。</p>
<p><strong>下载地址：<a href="https://ollama.com/download" target="_blank" rel="noopener nofollow">https://ollama.com/download</a></strong></p>
<p><img src="https://img2024.cnblogs.com/blog/2212230/202504/2212230-20250412171200313-387422387.png" alt="image" loading="lazy"></p>
<p>安装Ollama还是比较简单的，下载安装包后，直接安装就行。我这边选择的是Windows版本。</p>
<p><img src="https://img2024.cnblogs.com/blog/2212230/202504/2212230-20250412171220310-507818936.png" alt="image" loading="lazy"></p>
<h2 id="2修改ollama默认配置">2.修改Ollama默认配置</h2>
<p>配置系统变量</p>
<p><img src="uploading..." alt="image" loading="lazy"></p>
<p><strong>修改配置后，记得重启Ollama。</strong></p>
<p>我暂时就需要这两个，其他更多配置信息，大家可以查看官方文档：</p>
<p><a href="https://github.com/ollama/ollama/tree/main/docs" target="_blank" rel="noopener nofollow">https://github.com/ollama/ollama/tree/main/docs</a></p>
<h2 id="3下载并安装模型">3.下载并安装模型</h2>
<p>Ollama支持模型非常多，我们这边选择的是：deepseek-r1。</p>
<p><img src="https://img2024.cnblogs.com/blog/2212230/202504/2212230-20250412171545797-1039842117.png" alt="image" loading="lazy"></p>
<p>选择对应的模型，我们就可以看到模型的相信介绍、各种参数的模型。</p>
<p><img src="https://img2024.cnblogs.com/blog/2212230/202504/2212230-20250412171609657-1592317414.png" alt="image" loading="lazy"></p>
<p>各个版本模型对硬件要求，官方没有明确的说明，根据网友分享的大概整理如下，大家可以根据自己的电脑配置选择模型。</p>
<p><img src="https://img2024.cnblogs.com/blog/2212230/202504/2212230-20250412171638104-890234700.png" alt="image" loading="lazy"></p>
<p><strong>安装模型也很简单，选择对应版本的模型，拷贝命令就行。</strong></p>
<p><img src="https://img2024.cnblogs.com/blog/2212230/202504/2212230-20250412171748994-1302988524.png" alt="image" loading="lazy"></p>
<p>在命令窗口输入以上命令，就会自动下载。</p>
<p><img src="https://img2024.cnblogs.com/blog/2212230/202504/2212230-20250412172402381-1480122455.png" alt="image" loading="lazy"></p>
<p>耐心等待，等出现success就代表安装成功了。</p>
<p><img src="https://img2024.cnblogs.com/blog/2212230/202504/2212230-20250412171904405-1348708531.png" alt="image" loading="lazy"></p>
<p>测试提问</p>
<p><img src="https://img2024.cnblogs.com/blog/2212230/202504/2212230-20250412200012871-1850873908.png" alt="image" loading="lazy"></p>
<p>安装成功后，我们就可以直接在命令窗口进行使用了。</p>
<p>同时在浏览器访问：<a href="http://127.0.0.1:11434" target="_blank" rel="noopener nofollow">http://127.0.0.1:11434</a>，有如下提示也代表启动成功了。</p>
<p><img src="https://img2024.cnblogs.com/blog/2212230/202504/2212230-20250412172509136-1304308908.png" alt="image" loading="lazy"></p>
<h2 id="4api调用">4.API调用</h2>
<p>Ollama也为我们提供API接口功能，想要自己开发客户端、或者集成到应用系统都是非常方便的。</p>
<p>Ollama相关生态也非常完善，我们直接使用C#版本Ollama的SDK，就可以快速开发，下面一起看看简单例子。</p>
<h3 id="41安装依赖包ollamasharp">4.1、安装依赖包：OllamaSharp</h3>
<p><img src="https://img2024.cnblogs.com/blog/2212230/202504/2212230-20250412172714614-967489381.png" alt="image" loading="lazy"></p>
<h3 id="42-示例代码">4.2 示例代码</h3>
<pre><code>using Microsoft.Extensions.AI;
using OllamaSharp;

Uri modelEndpoint = new("http://localhost:11434");

//指定模型
string modelName = "deepseek-r1:14b";

var chatClient = new OllamaApiClient(modelEndpoint, modelName);

//提问
string question = "你好，我们可以认识一下吗？";
var response = chatClient.GetStreamingResponseAsync(question);

Console.WriteLine($"&gt;&gt;&gt; 你: {question}");
Console.Write("&gt;&gt;&gt;");
Console.WriteLine("&gt;&gt;&gt; DeepSeek: ");

//输出
await foreach (var item in response)
{
	Console.Write(item);
}

Console.ReadLine();
</code></pre>
<p><strong>效果如下：</strong></p>
<p>Ollama相关的API接口，也可以查看官方文档。</p>
<p><a href="https://github.com/ollama/ollama/blob/main/docs/api.md" target="_blank" rel="noopener nofollow">https://github.com/ollama/ollama/blob/main/docs/api.md</a></p>
<h2 id="5-ollama的客户端">5. OLLAMA的客户端</h2>
<p>在命令窗口使用DeepSeek，肯定是不方便的。自己开发客户端，又需要大量时间。</p>
<p>Ollama的客户端是非常众多的，而且都是开源的项目，包括：Web网页版本、桌面应用、浏览器插件、移动端APP等。</p>
<p>每一个客户端提供的功能也非常丰富，并且都不一样，包括：OCR图片识别、语音识别、文档解析等。</p>
<p>大家可以根据自己的需求自行选择。</p>
<p><a href="https://github.com/ollama/ollama" target="_blank" rel="noopener nofollow">https://github.com/ollama/ollama</a></p>
<p><img src="https://img2024.cnblogs.com/blog/2212230/202504/2212230-20250412173049412-1214779243.png" alt="image" loading="lazy"></p>
<h2 id="6-page-assist浏览器插件">6. Page Assist浏览器插件</h2>
<p>我这边的是选择浏览器插件，比较灵活。</p>
<p>在Chrome应用商店，安装浏览器插件：Page Assist。</p>
<p><img src="https://img2024.cnblogs.com/blog/2212230/202504/2212230-20250412173141235-1128668333.png" alt="image" loading="lazy"></p>
<p>安装后打开插件，把语音识别、界面语音修改为中文，方便我们使用。</p>
<p><img src="https://img2024.cnblogs.com/blog/2212230/202504/2212230-20250412173212345-1546572785.png" alt="image" loading="lazy"></p>
<p>修改Ollama的配置：</p>
<p>1、Ollama URL修改为Ollama服务器的地址。</p>
<p>2、在Ollama 高级配置中，启用：启用或禁用自定义来源 URL，这样才能访问。</p>
<p><img src="https://img2024.cnblogs.com/blog/2212230/202504/2212230-20250412173327302-624292971.png" alt="image" loading="lazy"></p>
<p>Ollama服务器需要关闭防火墙，或者在入站规则里开启端口：11434。<br>
<img src="https://img2024.cnblogs.com/blog/2212230/202504/2212230-20250412173341184-1801794516.png" alt="image" loading="lazy"></p>
<p><img src="uploading..." alt="image" loading="lazy"></p>
<p>完成以上配置后，我们就可以使用了。</p>
<p>使用的时候，选择对应的模型版本就可以了。</p>
<p><img src="https://img2024.cnblogs.com/blog/2212230/202504/2212230-20250412173357599-1937336346.png" alt="image" loading="lazy"></p>
<p>本文参考：<br>
1、<a href="https://www.cnblogs.com/mq0036/p/18742652" target="_blank">https://www.cnblogs.com/mq0036/p/18742652</a><br>
2、<a href="https://www.cnblogs.com/xiezhr/p/18712410" target="_blank">https://www.cnblogs.com/xiezhr/p/18712410</a></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.13123221166435184" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-12 21:10">2025-04-12 17:35</span>&nbsp;
<a href="https://www.cnblogs.com/chenshibao">似梦亦非梦</a>&nbsp;
阅读(<span id="post_view_count">4</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18822323);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18822323', targetLink: 'https://www.cnblogs.com/chenshibao/p/18822323', title: 'DeepSeek本地部署+Page Assist浏览器插件+C#接口调用' })">举报</a>
</div>
        