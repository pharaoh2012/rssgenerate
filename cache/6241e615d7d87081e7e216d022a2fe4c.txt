
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/FreakEmbedded/p/18728099" title="发布于 2025-02-21 00:00">
    <span role="heading" aria-level="2">开源一款I2C电机驱动扩展板-FreakStudio多米诺系列</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        <img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250221001101369-538800423.png" alt="开源一款I2C电机驱动扩展板-FreakStudio多米诺系列" class="desc_img">
        设计了一个I2C电机驱动板，通过I2C接口控制多个电机的转速和方向，支持刹车和减速功能。可连接16个扩展板，具有PWM输出、过流过热保护和可更换电机驱动芯片。支持按键控制使能，电源指示灯显示供电状态。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="总线直流电机扩展板">总线直流电机扩展板</h1>
<h2 id="原文链接">原文链接：</h2>
<p><a href="https://www.cnblogs.com/FreakEmbedded" target="_blank"><strong>FreakStudio的博客</strong></a></p>
<h2 id="摘要">摘要</h2>
<p>设计了一个I2C电机驱动板，通过I2C接口控制多个电机的转速和方向，支持刹车和减速功能。可连接16个扩展板，具有PWM输出、过流过热保护和可更换电机驱动芯片。支持按键控制使能，电源指示灯显示供电状态。</p>
<h2 id="往期推荐">往期推荐：</h2>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzkwMTYzNTY3Ng==&amp;mid=2247483825&amp;idx=1&amp;sn=149aaf3baa6a96703713e554d4a888db&amp;chksm=c0b08a82f7c70394074a24b722a1caddb0ad598a7303e61133216ae61423df0b5bc57a6b82b2&amp;scene=21#wechat_redirect" title="**学嵌入式的你，还不会面向对象？？！**" target="_blank" rel="noopener nofollow"><strong>学嵌入式的你，还不会面向对象？？！</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/sycnlnMhtFji8q2fYh0MFQ" title="**全网最适合入门的面向对象编程教程：00 面向对象设计方法导论**" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：00 面向对象设计方法导论</strong></a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzkwMTYzNTY3Ng==&amp;mid=2247483853&amp;idx=1&amp;sn=c7685237216b8dd1cadf95f3353fde8e&amp;chksm=c0b08afef7c703e8ce7b76958718ebe381220a199fac9e872710ea1cb4f8fc6f93d36d151279&amp;scene=21#wechat_redirect" title="**全网最适合入门的面向对象编程教程：01 面向对象编程的基本概念**" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：01 面向对象编程的基本概念</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/XKpEAGY9WJ7GRFc98E6dcw" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：02 类和对象的 Python 实现-使用 Python 创建类</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/LsNtLbHLNtVBtiQ3eaJnSg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：03 类和对象的 Python 实现-为自定义类添加属性</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/A5rMO3ppTZTUwRPL2NQxdg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：04 类和对象的Python实现-为自定义类添加方法</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/YjM1JPzLakfyWiDkyy4LQw" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：05 类和对象的Python实现-PyCharm代码标签</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/z7CmgHJXf0QlAgIIRRTXlw" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：06 类和对象的Python实现-自定义类的数据封装</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/7r4hgM3a187si_D5ReEMCA" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：07 类和对象的Python实现-类型注解</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/sSO-L_NQHarXh160xiVZVg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：08 类和对象的Python实现-@property装饰器</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/cAZzXr9MSL0nVxVcTgNlQA" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：09 类和对象的Python实现-类之间的关系</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/29Lr_nigsMuIJMmWEObk1g" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：10 类和对象的Python实现-类的继承和里氏替换原则</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/HEvQNiVXkjlnbhz8Sdt_4Q" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：11 类和对象的Python实现-子类调用父类方法</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/QHYLu7Mrs2ErUHvy_k59QA" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：12 类和对象的Python实现-Python使用logging模块输出程序运行日志</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/EbJJpqIq8v_eRQZfdWONFA" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：13 类和对象的Python实现-可视化阅读代码神器Sourcetrail的安装使用</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/fLSGXknzwY8FHzavunfQXg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：全网最适合入门的面向对象编程教程：14 类和对象的Python实现-类的静态方法和类方法</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/fLSGXknzwY8FHzavunfQXg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：15 类和对象的 Python 实现-__slots__魔法方法</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/VNlMnPhSyglZ9FalqIfw-A" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：16 类和对象的Python实现-多态、方法重写与开闭原则</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/mffQ0sdsI5yt_tJrZRxe-g" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：17 类和对象的Python实现-鸭子类型与“file-like object“</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/JSIKlWJ4pNShBGkfXolkQg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：18 类和对象的Python实现-多重继承与PyQtGraph串口数据绘制曲线图</strong></a></p>
<p><a href="https://www.cnblogs.com/FreakEmbedded/p/18308599" target="_blank"><strong>全网最适合入门的面向对象编程教程：19 类和对象的 Python 实现-使用 PyCharm 自动生成文件注释和函数注释</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/_TuErM5YRBsy2wixYbbbkw" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：20 类和对象的Python实现-组合关系的实现与CSV文件保存</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/zqG3vuxVq0pmUqrV-tztng" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：21 类和对象的Python实现-多文件的组织：模块module和包package</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/Wj5ovLUWqKudW5VSiycK5A" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：22 类和对象的Python实现-异常和语法错误</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/o5cgglFtmr9q3lW5gAiYEg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：23 类和对象的Python实现-抛出异常</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/DPC8Drr6iCnC0j-YMGyOfg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：24 类和对象的Python实现-异常的捕获与处理</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/ghhS3fk98LTkh1a-daEg0Q" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：25 类和对象的Python实现-Python判断输入数据类型</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/LHj-igDSYaL_1z8H7VEj1Q" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：26 类和对象的Python实现-上下文管理器和with语句</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/tQ2NHEWCMI4e4AG5BBsSpw" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：27 类和对象的Python实现-Python中异常层级与自定义异常类的实现</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/rvHzNvuovU-3KY2FtcQK-Q" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：28 类和对象的Python实现-Python编程原则、哲学和规范大汇总</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/swfA2JsajMFpaOa5PZCEbg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：29 类和对象的Python实现-断言与防御性编程和help函数的使用</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/5NxKSJUxetAkdwYW9n941w" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：30 Python的内置数据类型-object根类</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/Z3AMqnfkmhqzcK3A-J3ylw" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：31 Python的内置数据类型-对象Object和类型Type</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/C4pj9ujGsQMMOnLEqI414A" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：32 Python的内置数据类型-类Class和实例Instance</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/V_3QFDJRss_lAJHgJ4oVwg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：33 Python的内置数据类型-对象Object和类型Type的关系</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/crZBcEEBKBfDfWA9ub-d-A" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：34 Python的内置数据类型-Python常用复合数据类型：元组和命名元组</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/_X7sKhro7wJ96KwhbAcopg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：35 Python的内置数据类型-文档字符串和__doc__属性</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/KCvCx7Im35uiBkPpJASTkg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：36 Python的内置数据类型-字典</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/bNSPkIhKgmzLFz5BYdizNQ" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：37 Python常用复合数据类型-列表和列表推导式</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/XgTr4hvBC4Uk2hPmaDRn2Q" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：38 Python常用复合数据类型-使用列表实现堆栈、队列和双端队列</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/Cx0--RZGrzud_aILXTlEJg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：39 Python常用复合数据类型-集合</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/bCxbepaVypefwEOtKnzb5g" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：40 Python常用复合数据类型-枚举和enum模块的使用</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/Ah-fhWf67Jm7TF-OGooy-g" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：41 Python常用复合数据类型-队列（FIFO、LIFO、优先级队列、双端队列和环形队列）</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/XkIocfNXpie-65voC4W8wA" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：42 Python常用复合数据类型-collections容器数据类型</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/ODYRdwzdlcBQkCE3xpYjIA" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：43 Python常用复合数据类型-扩展内置数据类型</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/DLylf2L_dpkcXYw6iFnhwA" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：44 Python内置函数与魔法方法-重写内置类型的魔法方法</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/AEyP4BfRGZB63akTgGLWZw" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：45 Python实现常见数据结构-链表、树、哈希表、图和堆</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/3COyHC1ob9xs_EUQtk7hCA" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：46 Python函数方法与接口-函数与事件驱动框架</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/wmc2ZcSC3l5JOLpMpthv6Q" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：47 Python函数方法与接口-回调函数Callback</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/MEvlZqaItRNwP4zRtMQHhQ" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：48 Python函数方法与接口-位置参数、默认参数、可变参数和关键字参数</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/qDQo9KxfGrTj5-FDo-MBiA" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：49 Python函数方法与接口-函数与方法的区别和lamda匿名函数</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/DwKug8eHOYyC2pE77eLw9w" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：50 Python函数方法与接口-接口和抽象基类</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/pDQWfDDh3WeCgjC5b5rP1Q" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：51 Python函数方法与接口-使用Zope实现接口</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/Wgqc8PbpMMf8pKFHo4H7PA" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：52 Python函数方法与接口-Protocol协议与接口</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/jvOLalgkUpxR7LGgQnJ9aQ" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：53 Python字符串与序列化-字符串与字符编码</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/z3JS3dcpPQTD9ygWyxRUDg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：54 Python字符串与序列化-字符串格式化与format方法</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/C0rgRhmC1ydh2PpEwAuMlw" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：55 Python字符串与序列化-字节序列类型和可变字节字符串</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/UmXPSAbrLvYyH-45kBHLZQ" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：56 Python字符串与序列化-正则表达式和re模块应用</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/-Y8DX8wo1OAhKkWK7dikzg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：57 Python字符串与序列化-序列化与反序列化</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/BFTYNXXtXarbU70RvOs20Q" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：58 Python字符串与序列化-序列化Web对象的定义与实现</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/cgs1FP0bRMvqXv00J1AzkA" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：59 Python并行与并发-并行与并发和线程与进程</strong></a></p>
<h2 id="更多精彩内容可看">更多精彩内容可看：</h2>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzkwMTYzNTY3Ng==&amp;mid=2247483747&amp;idx=1&amp;sn=0e203586516fd6e925085b9c1244dbee&amp;scene=21#wechat_redirect" title="**给你的 Python 加加速：一文速通 Python 并行计算**" target="_blank" rel="noopener nofollow"><strong>给你的 Python 加加速：一文速通 Python 并行计算</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzkwMTYzNTY3Ng==&amp;mid=2247483719&amp;idx=1&amp;sn=7ece9da65d002fdc3df9539cc43f3a8d&amp;scene=21#wechat_redirect" title="**一文搞懂 CM3 单片机调试原理**" target="_blank" rel="noopener nofollow"><strong>一文搞懂 CM3 单片机调试原理</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzkwMTYzNTY3Ng==&amp;mid=2247483671&amp;idx=1&amp;sn=c267a0c6f4ab93d6b6d934bf803b5919&amp;scene=21#wechat_redirect" title="**肝了半个月，嵌入式技术栈大汇总出炉**" target="_blank" rel="noopener nofollow"><strong>肝了半个月，嵌入式技术栈大汇总出炉</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzkwMTYzNTY3Ng==&amp;mid=2247483774&amp;idx=1&amp;sn=46d57506febe92c1719c8567ebe95269&amp;scene=21#wechat_redirect" title="**电子计算机类比赛的“武林秘籍”**" target="_blank" rel="noopener nofollow"><strong>电子计算机类比赛的“武林秘籍”</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzkwMTYzNTY3Ng==&amp;mid=2247483854&amp;idx=1&amp;sn=fd666dc501a0de850abfbd8793abff00&amp;chksm=c0b08afdf7c703eb494f8e402a5d60eba9a802bfdb02c07a5e1666a8a1b335e38240adc6c1b5&amp;scene=21#wechat_redirect" title="**一个MicroPython的开源项目集锦：awesome-micropython，包含各个方面的Micropython工具库**" target="_blank" rel="noopener nofollow"><strong>一个MicroPython的开源项目集锦：awesome-micropython，包含各个方面的Micropython工具库</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/2-Z6WqekVOuDbEdiE65Wfw" target="_blank" rel="noopener nofollow"><strong>Avnet ZUBoard 1CG开发板—深度学习新选择</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/WrFVqS2-s1g6RYNd_Q5CDA" target="_blank" rel="noopener nofollow"><strong>工程师不要迷信开源代码，还要注重基本功</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/FUzf9kAHABNfo2aZh1jHzA" target="_blank" rel="noopener nofollow"><strong>什么？配色个性化的电机驱动模块？！！</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/TNsGwgi0pdE9v-tY4FZu6w" target="_blank" rel="noopener nofollow"><strong>什么？XIAO主控新出三款扩展板!</strong></a></p>
<h2 id="1总体介绍">1.总体介绍</h2>
<p><img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234724033-1122386284.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234735354-954772733.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234738575-1411246876.png" alt="image" loading="lazy"></p>
<p><a href="https://github.com/leezisheng/Domino-Series-Expansion-Board/tree/main/Bus-Motor-Expansion-Board" target="_blank" rel="noopener nofollow">总线直流电机扩展板</a>设计用于通过I2C接口控制最多四个直流电机，具有以下主要特点：</p>
<ul>
<li><strong>小尺寸设计</strong>：可以与XIAO系列主控板直接连接，也可以作为独立模块使用。</li>
<li><strong>I2C接口</strong>：提供I2C总线接口进行堆叠式级联，最多支持16个电机驱动扩展板，且提供4个地址位可供选择。</li>
<li><strong>PWM输出引脚</strong>：PWM扩展芯片的输出引脚连接有保护电阻，同时使用的电机驱动芯片自带过流和过热保护功能。</li>
<li><strong>按键控制芯片使能/失能</strong>：PWM扩展芯片的使能引脚通过按键引出，使用时可通过按键失能芯片。</li>
<li><strong>电机驱动芯片可更换</strong>：根据需要，可将RZ7899芯片替换为TMI8260、AM2837或SS6285L芯片。</li>
<li><strong>电源指示灯</strong>：板载电源指示灯显示电机供电状态和PWM扩展芯片供电状态。</li>
<li><strong>多种电源输入方式</strong>：支持接线端子和Type-C接口供电，具有防反接设计。</li>
<li><strong>支持6V至18V供电的电机</strong>：整个扩展板最大电流为5A，若只使用两个电机通道，单通道峰值电流支持最大4A。</li>
<li><strong>高频低阻电解电容供电</strong>：使用四颗220μF高频低阻电解电容或固态电解电容进行供电，固态电解电容相比铝电解电容具有更低的ESR、较高的工作频率和更长的使用寿命。</li>
<li><strong>散热设计</strong>：扩展板背面的VCC区域采用开窗设计，通过焊锡增大散热效果。<br>
该扩展板提供了优越的电机保护和电源管理功能，适用于各种电机控制应用，我们提供了MicroPython和Arduino例程。<br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234747975-1516397157.png" alt="image" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234753335-1409236288.png" alt="image" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234759412-1964627998.png" alt="image" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234803141-12619882.png" alt="image" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234806306-519093298.png" alt="image" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234819866-1244410797.png" alt="image" loading="lazy"></li>
</ul>
<h2 id="2接口说明">2.接口说明</h2>
<h3 id="21-通信接口">2.1 通信接口</h3>
<p>我们提供了两个I2C通信接口，当作为单独模块使用时，通过PH2.0连接线连接主控模块和扩展板，如下图所示：<br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234824192-244410829.png" alt="image" loading="lazy"></p>
<p>也可以使用主控板直接插入到扩展板的排母接口上：<br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234828795-699173577.png" alt="image" loading="lazy"></p>
<p>多个扩展板也可以堆叠连接，此时使用扩展板下方靠近供电端子部分的I2C通信接口与扩展板上方靠近供电端子部分的I2C通信接口相互连接，连接时需要注意线序，这里需要使用PH2.0双头反向连接线，我们这里使用M2塑料柱将两个扩展板进行固定：<br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234832535-1915058313.png" alt="image" loading="lazy"></p>
<h3 id="22-电机接口">2.2 电机接口</h3>
<p>连接电机时，注意电机线M+与A通道连接，电机线M-与B通道连接，若不确定电机的正负极，可以在程序中驱动两个编号电机都向正方向运动，若其中一个电机反向运动，将该电机连线反接即可：<br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234835650-2056818127.png" alt="image" loading="lazy"></p>
<h3 id="23-供电接口">2.3 供电接口</h3>
<p>我们可以使用Type-C接口的电源适配器进行供电（需要注意电源适配器最大电流，建议使用15V 3A适配器），也可以使用接线端子供电，电源正极连接V，电源负极连接G：<br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234839644-1641819047.png" alt="image" loading="lazy"></p>
<h2 id="3硬件细节">3.硬件细节</h2>
<h3 id="31-提高散热和电流">3.1 提高散热和电流</h3>
<p>我们的电路板对供电部分进行开窗处理，必要时可通过向开窗部分焊锡和加装散热片提高散热：<br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234843686-1089748550.png" alt="image" loading="lazy"></p>
<h3 id="32-更换电机驱动芯片">3.2 更换电机驱动芯片</h3>
<p>我们可以根据电机需要的电压和电流对驱动芯片进行更换：<br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234846333-1292897233.png" alt="image" loading="lazy"></p>
<h3 id="33-电容选择">3.3 电容选择</h3>
<p>我们使用220uF固态电容作为稳压元件，固态电容具有较低的等效串联电阻和快速的电荷释放能力，对高频信号的阻抗更低，能够更高效地滤除高频噪声，相比传统电解电容在高温下具有更稳定的性能和更长的使用寿命，你也可以选择高频低电阻铝电解电容：<br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234851037-36067473.png" alt="image" loading="lazy"></p>
<h3 id="34-pwm输出芯片地址位选择">3.4 PWM输出芯片地址位选择</h3>
<p>我们可以通过焊接扩展板背面短路点来设置PWM扩展芯片地址位，注意四个地址位必须都焊接，默认地址位浮空：<br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234854208-1218715301.png" alt="image" loading="lazy"></p>
<h3 id="35-沉金工艺">3.5 沉金工艺</h3>
<p>部分配置采用沉金工艺，确保焊接质<img src="uploading..." alt="image" loading="lazy">量和延长电路板的使用寿命。<br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234921349-166361012.png" alt="image" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234923551-245898869.png" alt="image" loading="lazy"></p>
<h2 id="4提供代码和使用须知">4.提供代码和使用须知</h2>
<p>在使用烧录完程序后的主控板通过扩展板控制电机前，务必确保电机和通信接线正确，供电无误：<br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234929613-1379981889.png" alt="image" loading="lazy"></p>
<p>示例代码包括以下版本：</p>
<ul>
<li><strong>MicroPython版本</strong>：<a href="https://github.com/leezisheng/Domino-Series-Expansion-Board/tree/main/Bus-Motor-Expansion-Board/code/MicroPython" target="_blank" rel="noopener nofollow"><strong>总线电机扩展板MicroPython示例程序</strong></a></li>
<li><strong>Arduino版本</strong>：<a href="https://github.com/leezisheng/Domino-Series-Expansion-Board/tree/main/Bus-Motor-Expansion-Board/code/Arduino" target="_blank" rel="noopener nofollow"><strong>总线电机扩展板Arduino示例程序</strong></a></li>
</ul>
<h2 id="5定制化选择">5.定制化选择</h2>
<p>你的模块，何必千篇一律？我们已经厌恶了市面上开源硬件厂商提供的一模一样的电子模块，类似如下：<br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234941303-1312996431.png" alt="image" loading="lazy"></p>
<p>为什么我们买的的模块都是一模一样的？而不能是像买手机或者电脑一样，对其配色和配置可以选择？<br>
<strong>秋刀鱼会过期，肉罐头会过期，连保鲜纸都会过期，但是我们持续满足玩家个性化需求的意愿永不过期！</strong></p>
<p>购买我们的模块，无论是选择散件发货还是成品发货，都可以对排母的高低、排针颜色、电容类型和电机驱动芯片类型进行选择：<br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234945518-1047510056.png" alt="image" loading="lazy"></p>
<p>甚至于电路板的颜色和阻焊类型也可以进行选择：<br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234950740-2091051501.png" alt="image" loading="lazy"></p>
<p>是的，再出高价，也可以把我们的logo换掉！！！：<br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220234954662-24454602.png" alt="image" loading="lazy"></p>
<h2 id="6获取链接">6.获取链接</h2>
<ul>
<li><strong>商品链接</strong>：<a href="https://item.taobao.com/item.htm?id=884537886628&amp;spm=a213gs.v2success.0.0.159d4831AvSz8f" target="_blank" rel="noopener nofollow"><strong>总线电机驱动扩展板购买链接</strong></a></li>
<li><strong>硬件开源链接</strong>：<a href="https://github.com/leezisheng/Domino-Series-Expansion-Board/tree/main/Bus-Motor-Expansion-Board/hardware" target="_blank" rel="noopener nofollow"><strong>硬件开源资料链接</strong></a></li>
</ul>
<h2 id="7设计思路">7.设计思路</h2>
<p>I2C总线电机扩展板类型可以分为I2C总线PWM电机控制类型和I2C总线外置主控电机控制类型两种：<br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220235003657-1237705970.png" alt="image" loading="lazy"></p>
<p>I2C总线PWM电机控制类型的基本原理为：使用主控板通过I2C通信接口控制一个独立的PWM芯片来生成多路PWM信号，并将其传输到电机驱动芯片，控制电机的速度和方向：<br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220235006674-392870936.png" alt="image" loading="lazy"></p>
<p>I2C总线外置主控电机控制类型的基本原理为：主控板通过I2C接口与电机驱动板上芯片进行通信，电机驱动板上内置芯片读取主控板的指令、数据或状态，并根据这些信息控制电机驱动芯片的工作（例如：调整电机转速、改变电机方向等）：<br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220235009844-1095826034.png" alt="image" loading="lazy"></p>
<p>两种方式各有侧重：</p>
<ul>
<li><strong>I2C总线PWM电机控制类型</strong>：适合简单、直接的电机控制，结构简单，控制方式易于实现。</li>
<li><strong>I2C总线外置主控电机控制类型</strong>：可以实现更复杂的电机控制算法（例如：PID控制、电机状态监测等）。</li>
</ul>
<p>做这块板的核心设计想法：</p>
<ul>
<li>小尺寸，可以和我的XIAO系列主控板搭配，也可以作为外置模块直接使用</li>
<li>电机驱动芯片烧坏时，可轻易更换电机驱动芯片<br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220235014290-1210782594.png" alt="image" loading="lazy"></li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250220235017489-177223030.png" alt="image" loading="lazy"></p>
<h2 id="8参考资料">8.参考资料</h2>
<ul>
<li><a href="https://github.com/Seeed-Studio/grove.py/blob/master/grove/motor/i2c_motor_driver.py" target="_blank" rel="noopener nofollow">https://github.com/Seeed-Studio/grove.py/blob/master/grove/motor/i2c_motor_driver.py</a></li>
<li><a href="https://github.com/Seeed-Studio/grove.py/blob/master/grove/grove_i2c_motor_driver.py" target="_blank" rel="noopener nofollow">https://github.com/Seeed-Studio/grove.py/blob/master/grove/grove_i2c_motor_driver.py</a></li>
<li><a href="https://github.com/adafruit/micropython-adafruit-pca9685/blob/master/stepper.py" target="_blank" rel="noopener nofollow">https://github.com/adafruit/micropython-adafruit-pca9685/blob/master/stepper.py</a></li>
<li><a href="https://wiki.seeedstudio.com/Grove-I2C_Motor_Driver-TB6612FNG/" target="_blank" rel="noopener nofollow">https://wiki.seeedstudio.com/Grove-I2C_Motor_Driver-TB6612FNG/</a></li>
<li><a href="https://wiki.seeedstudio.com/Grove-I2C_Motor_Driver_V1.2/" target="_blank" rel="noopener nofollow">https://wiki.seeedstudio.com/Grove-I2C_Motor_Driver_V1.2/</a></li>
<li><a href="https://wiki.seeedstudio.com/Grove-I2C-Motor-Driver-L298P/" target="_blank" rel="noopener nofollow">https://wiki.seeedstudio.com/Grove-I2C-Motor-Driver-L298P/</a></li>
<li><a href="https://item.taobao.com/item.htm?id=627007991368" target="_blank" rel="noopener nofollow">https://item.taobao.com/item.htm?id=627007991368</a></li>
<li><a href="https://www.adafruit.com/product/3243" target="_blank" rel="noopener nofollow">https://www.adafruit.com/product/3243</a></li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/2591203/202411/2591203-20241121002659547-1525516382.png" alt="image" loading="lazy"></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.0055566913009259256" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-21 00:11">2025-02-21 00:00</span>&nbsp;
<a href="https://www.cnblogs.com/FreakEmbedded">FreakStudio</a>&nbsp;
阅读(<span id="post_view_count">1</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18728099" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18728099);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18728099', targetLink: 'https://www.cnblogs.com/FreakEmbedded/p/18728099', title: '开源一款I2C电机驱动扩展板-FreakStudio多米诺系列' })">举报</a>
</div>
        