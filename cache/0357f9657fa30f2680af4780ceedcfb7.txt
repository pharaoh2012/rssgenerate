
		<h1 class="postTitle">
			<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/keatkeat/p/18817678" title="发布于 2025-04-10 00:42">
    <span role="heading" aria-level="2">JavaScript Library – Embla Carousel</span>
    

</a>

		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h2>前言</h2>
<p>2022 年 4 月，我写了一篇&nbsp;<a href="https://www.cnblogs.com/keatkeat/p/16124065.html" target="_blank">Swiper</a>&nbsp;介绍。</p>
<p>Swiper 是当时前端最多人使用的 Slider 库，没有之一，一骑绝尘。</p>
<p>但是！时过境迁，这两年已经有一匹神秘的黑马悄悄杀上来了。</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250405200326843-1037942657.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>它就是本篇的主角 --&nbsp;<a href="https://www.embla-carousel.com/" rel="noopener nofollow" target="_blank">Embla Carousel</a>。</p>
<p>&nbsp;</p>
<h2>Embla Carousel 的卖点</h2>
<p>Embla Carousel (简称 Embla) 何德何能？它凭什么在 Swiper 垄断的市场里能杀出一条血路🤔？</p>
<ol>
<li>
<p>lightweight</p>
<p>Embla 最大的卖点是 lightweight。</p>
<p>据说它非常非常轻，且性能非常好。</p>
<p>p.s.：具体多轻我不清楚，但肯定比 Swiper 轻很多，我就是嫌 Swiper 又重又慢，才在 research 替代方案时找到了 Embla。</p>
</li>
<li>
<p>framework&nbsp;integration</p>
<p>Embla 可以很容易得集成到各种前端框架，比如：React/Next.js，Svelte，Vue，Solid.js 等 (哎哟，不错哦，没有 Angular)。</p>
</li>
<li>
<p>Customization and&nbsp;independent of CSS</p>
<p>Embla 不掺和 styling CSS，它只负责 JS 逻辑，并且开放底层 API 接口，让使用者可以根据自己项目需求订做专属的 Carousel (a.k.a Slider)。</p>
</li>
</ol>
<p>以上三点无疑是近几年前端的趋势和刚需，雷军说过，站在风口上，猪也能飞，Embla 在这里做了最好的示范👍。</p>
<p>&nbsp;</p>
<h2>Swiper to Embla Carousel</h2>
<p>想从 Swiper 直接切换到 Embla Carousel 并不容易，因为 Embla 比 Swiper low level，我们需要自己补上许多上层的封装才行。</p>
<p>本篇我会把我使用到的 Swiper 范围 (<a href="https://www.cnblogs.com/keatkeat/p/16124065.html" target="_blank">这篇</a>里的内容) 用 Embla 来实现一遍，大家可以感受一下它俩在使用上的区别。</p>
<p>注：本篇不会从 0 基础讲起，最好你使用过 Swiper 或者其它 Slider Library。</p>
<p>&nbsp;</p>
<h2>参考：</h2>
<p><a href="https://www.embla-carousel.com/" rel="noopener nofollow" target="_blank">官网 –&nbsp;Embla Carousel</a></p>
<p>&nbsp;</p>
<h2>安装</h2>
<div class="cnblogs_code">
<pre>yarn add embla-carousel</pre>
</div>
<h3>HTML</h3>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slider"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
  <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide-list"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">img </span><span style="color: rgba(255, 0, 0, 1)">src</span><span style="color: rgba(0, 0, 255, 1)">="../images/yangmi.jpg"</span><span style="color: rgba(255, 0, 0, 1)"> alt</span><span style="color: rgba(0, 0, 255, 1)">="yangmi"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">img </span><span style="color: rgba(255, 0, 0, 1)">src</span><span style="color: rgba(0, 0, 255, 1)">="../images/tifa.webp"</span><span style="color: rgba(255, 0, 0, 1)"> alt</span><span style="color: rgba(0, 0, 255, 1)">="tifa"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">img </span><span style="color: rgba(255, 0, 0, 1)">src</span><span style="color: rgba(0, 0, 255, 1)">="../images/nana.jpg"</span><span style="color: rgba(255, 0, 0, 1)"> alt</span><span style="color: rgba(0, 0, 255, 1)">="nana"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
  <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span></pre>
</div>
<p>HTML 结构和 Swiper 是一样的，slider &gt; slide-list &gt; slide 三层。</p>
<h3>Styles</h3>
<p>和 Swiper 不同，Embla 不涉及 CSS (注：first render 的时候不涉及 CSS 而已，交互时它是肯定是要改 CSS 的)。</p>
<p>我们需要给 first render 的 CSS Styles，像这样</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(128, 0, 0, 1)">.slider </span>{<span style="color: rgba(255, 0, 0, 1)">
  max-width</span>:<span style="color: rgba(0, 0, 255, 1)"> 512px</span>;<span style="color: rgba(255, 0, 0, 1)">
  overflow</span>:<span style="color: rgba(0, 0, 255, 1)"> hidden</span>;<span style="color: rgba(255, 0, 0, 1)">

  .slide-list {
    display</span>:<span style="color: rgba(0, 0, 255, 1)"> flex</span>;<span style="color: rgba(255, 0, 0, 1)">

    .slide {
      flex-shrink</span>:<span style="color: rgba(0, 0, 255, 1)"> 0</span>;<span style="color: rgba(255, 0, 0, 1)">
      width</span>:<span style="color: rgba(0, 0, 255, 1)"> 100%</span>;<span style="color: rgba(255, 0, 0, 1)">

      img {
        width</span>:<span style="color: rgba(0, 0, 255, 1)"> 100%</span>;<span style="color: rgba(255, 0, 0, 1)">
        height</span>:<span style="color: rgba(0, 0, 255, 1)"> auto</span>;<span style="color: rgba(255, 0, 0, 1)">

        aspect-ratio</span>:<span style="color: rgba(0, 0, 255, 1)"> 16 / 9</span>;<span style="color: rgba(255, 0, 0, 1)">
        object-fit</span>:<span style="color: rgba(0, 0, 255, 1)"> cover</span>;
      }<span style="color: rgba(128, 0, 0, 1)">
    }
  }
}</span></pre>
</div>
<p>目前的效果</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250405234554742-150365079.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>只会看见一张图，因为另外两个 slide 被 overflow hide 起来了。</p>
<h3>Scripts</h3>
<div class="cnblogs_code">
<pre>import emblaCarousel from 'embla-carousel'<span style="color: rgba(0, 0, 0, 1)">;

const sliderElement </span>= document.querySelector&lt;HTMLElement&gt;('.slider')!<span style="color: rgba(0, 0, 0, 1)">;
const slider </span>=<span style="color: rgba(0, 0, 0, 1)"> emblaCarousel(sliderElement, {
  container: </span>'.slide-list'<span style="color: rgba(0, 0, 0, 1)">,
  slides: </span>'.slide'<span style="color: rgba(0, 0, 0, 1)">,
});</span></pre>
</div>
<p>emblaCarousel 是一个函数，调用这个函数，传入 slider element 就可以了。</p>
<p>container 如果是&nbsp;slider 的 first child 那可以不需要指定。(我指定只是为了演示)</p>
<p>slides 如果是 container 的 children 也可以不需要指定。(我指定只是为了演示)</p>
<p>相关源码在&nbsp;<a href="https://github.com/davidjerleke/embla-carousel/blob/v8.6.0/packages/embla-carousel/src/components/EmblaCarousel.ts#L59" rel="noopener nofollow" target="_blank">EmblaCarousel.ts</a></p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250406000006838-882342887.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>到这里就已经可以跑起来了</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250406000322529-1273586734.gif" alt="" class="medium-zoom-image"></p>
<p>&nbsp;</p>
<h2>Navigation</h2>
<p><a href="https://www.embla-carousel.com/examples/predefined/#default" rel="noopener nofollow" target="_blank">参考：官网</a></p>
<p>Swiper 有 built-in 完整的 navigation，Embla 没有。</p>
<p>Embla 只提供了底层操作 slider 的 API，上层需要我们自己写。</p>
<h3>HTML</h3>
<div class="cnblogs_code"><img src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" id="code_img_closed_2de46c92-bae5-4d6c-9196-bebccd6ff6a6" class="code_img_closed"><img src="https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" id="code_img_opened_2de46c92-bae5-4d6c-9196-bebccd6ff6a6" class="code_img_opened" style="display: none">
<div id="cnblogs_code_open_2de46c92-bae5-4d6c-9196-bebccd6ff6a6" class="cnblogs_code_hide">
<pre><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slider-container"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
  <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slider"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide-list"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">img </span><span style="color: rgba(255, 0, 0, 1)">src</span><span style="color: rgba(0, 0, 255, 1)">="../images/yangmi.jpg"</span><span style="color: rgba(255, 0, 0, 1)"> alt</span><span style="color: rgba(0, 0, 255, 1)">="yangmi"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">img </span><span style="color: rgba(255, 0, 0, 1)">src</span><span style="color: rgba(0, 0, 255, 1)">="../images/tifa.webp"</span><span style="color: rgba(255, 0, 0, 1)"> alt</span><span style="color: rgba(0, 0, 255, 1)">="tifa"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">img </span><span style="color: rgba(255, 0, 0, 1)">src</span><span style="color: rgba(0, 0, 255, 1)">="../images/nana.jpg"</span><span style="color: rgba(255, 0, 0, 1)"> alt</span><span style="color: rgba(0, 0, 255, 1)">="nana"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
  <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
  <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="navigation"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">button </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="prev"</span><span style="color: rgba(0, 0, 255, 1)">&gt;&lt;</span><span style="color: rgba(128, 0, 0, 1)">&lt;/button</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">button </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="next"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>&gt;<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">button</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
  <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span></pre>
</div>
<span class="cnblogs_code_collapse">View Code</span></div>
<p>增加一个 container 还有 navigation buttons</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250406102418363-191294777.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<h3>Styles</h3>
<p>给一点 Styles 美观一下</p>
<div class="cnblogs_code"><img src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" id="code_img_closed_157c2a01-6dcf-46fc-8f83-317d74621d0f" class="code_img_closed"><img src="https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" id="code_img_opened_157c2a01-6dcf-46fc-8f83-317d74621d0f" class="code_img_opened" style="display: none">
<div id="cnblogs_code_open_157c2a01-6dcf-46fc-8f83-317d74621d0f" class="cnblogs_code_hide">
<pre><span style="color: rgba(128, 0, 0, 1)">.slider-container </span>{<span style="color: rgba(255, 0, 0, 1)">
  max-width</span>:<span style="color: rgba(0, 0, 255, 1)"> 512px</span>;<span style="color: rgba(255, 0, 0, 1)">
  overflow</span>:<span style="color: rgba(0, 0, 255, 1)"> hidden</span>;<span style="color: rgba(255, 0, 0, 1)">

  .slider {
    width</span>:<span style="color: rgba(0, 0, 255, 1)"> 100%</span>;<span style="color: rgba(255, 0, 0, 1)">

    .slide-list {
      display</span>:<span style="color: rgba(0, 0, 255, 1)"> flex</span>;<span style="color: rgba(255, 0, 0, 1)">

      .slide {
        flex-shrink</span>:<span style="color: rgba(0, 0, 255, 1)"> 0</span>;<span style="color: rgba(255, 0, 0, 1)">
        width</span>:<span style="color: rgba(0, 0, 255, 1)"> 100%</span>;<span style="color: rgba(255, 0, 0, 1)">

        img {
          width</span>:<span style="color: rgba(0, 0, 255, 1)"> 100%</span>;<span style="color: rgba(255, 0, 0, 1)">
          height</span>:<span style="color: rgba(0, 0, 255, 1)"> auto</span>;<span style="color: rgba(255, 0, 0, 1)">

          aspect-ratio</span>:<span style="color: rgba(0, 0, 255, 1)"> 16 / 9</span>;<span style="color: rgba(255, 0, 0, 1)">
          object-fit</span>:<span style="color: rgba(0, 0, 255, 1)"> cover</span>;
        }<span style="color: rgba(128, 0, 0, 1)">
      }
    }
  }

  .navigation </span>{<span style="color: rgba(255, 0, 0, 1)">
    display</span>:<span style="color: rgba(0, 0, 255, 1)"> grid</span>;<span style="color: rgba(255, 0, 0, 1)">
    grid-template-columns</span>:<span style="color: rgba(0, 0, 255, 1)"> 1fr 1fr</span>;<span style="color: rgba(255, 0, 0, 1)">
    gap</span>:<span style="color: rgba(0, 0, 255, 1)"> 16px</span>;<span style="color: rgba(255, 0, 0, 1)">

    .prev,
    .next {
      font-size</span>:<span style="color: rgba(0, 0, 255, 1)"> 32px</span>;<span style="color: rgba(255, 0, 0, 1)">
      font-weight</span>:<span style="color: rgba(0, 0, 255, 1)"> 700</span>;<span style="color: rgba(255, 0, 0, 1)">
      padding</span>:<span style="color: rgba(0, 0, 255, 1)"> 16px 24px</span>;<span style="color: rgba(255, 0, 0, 1)">
      background-color</span>:<span style="color: rgba(0, 0, 255, 1)"> lightblue</span>;<span style="color: rgba(255, 0, 0, 1)">
      color</span>:<span style="color: rgba(0, 0, 255, 1)"> blue</span>;<span style="color: rgba(255, 0, 0, 1)">
      border-width</span>:<span style="color: rgba(0, 0, 255, 1)"> 0</span>;<span style="color: rgba(255, 0, 0, 1)">
      cursor</span>:<span style="color: rgba(0, 0, 255, 1)"> pointer</span>;<span style="color: rgba(255, 0, 0, 1)">

      &amp;[disabled] {
        opacity</span>:<span style="color: rgba(0, 0, 255, 1)"> 0.4</span>;<span style="color: rgba(255, 0, 0, 1)">
        cursor</span>:<span style="color: rgba(0, 0, 255, 1)"> unset</span>;<span style="color: rgba(255, 0, 0, 1)">
        pointer-events</span>:<span style="color: rgba(0, 0, 255, 1)"> none</span>;
      }<span style="color: rgba(128, 0, 0, 1)">
    }
  }
}</span></pre>
</div>
<span class="cnblogs_code_collapse">View Code</span></div>
<p>目前的效果</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250406102702490-178760766.gif" alt="" class="medium-zoom-image"></p>
<p>两个 button 还只是摆设，点击不会有任何效果。</p>
<h3>Scripts</h3>
<div class="cnblogs_code">
<pre>const sliderContainer = document.querySelector&lt;HTMLElement&gt;('.slider-container')!<span style="color: rgba(0, 0, 0, 1)">;
const sliderElement </span>= sliderContainer.querySelector&lt;HTMLElement&gt;('.slider')!<span style="color: rgba(0, 0, 0, 1)">;
const slider </span>=<span style="color: rgba(0, 0, 0, 1)"> emblaCarousel(sliderElement);

const prevBtn </span>= sliderContainer.querySelector&lt;HTMLButtonElement&gt;('.navigation .prev')!<span style="color: rgba(0, 0, 0, 1)">;
const nextBtn </span>= sliderContainer.querySelector&lt;HTMLButtonElement&gt;('.navigation .next')!<span style="color: rgba(0, 0, 0, 1)">;

</span><span style="color: rgba(0, 0, 255, 1)">for</span><span style="color: rgba(0, 0, 0, 1)"> (const button of [prevBtn, nextBtn]) {
  const directive </span>= button === prevBtn ? 'Prev' : 'Next'<span style="color: rgba(0, 0, 0, 1)">;
  </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 监听 prev next button click</span>
  <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 当 user 点击后，调用 slider.scrollPrev() 或 scrollNext 方法来移动 slide</span>
  button.addEventListener('click', () =&gt;<span style="color: rgba(0, 0, 0, 1)"> slider[`scroll${directive}`]());
}</span></pre>
</div>
<p>监听 prev 和 next button click，当 user 点击后，调用 slider.scrollPrev 或 scrollNext 来移动 slide。</p>
<p>效果</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250406105125652-1610868177.gif" alt="" class="medium-zoom-image"></p>
<h4>disabled 体验</h4>
<p>navigation button 通常会有 disabled 体验。</p>
<p>当 user next 到最后一个 slide，我们需要 disable next button，让 user 知道已经到头了，不可以再继续 next。</p>
<p>相反，一开始在第一个 slide 时，我们需要 disable prev button。</p>
<p>首先，定义一个 handler</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">function</span><span style="color: rgba(0, 0, 0, 1)"> handleStateChange() {
  prevBtn.disabled </span>= !<span style="color: rgba(0, 0, 0, 1)">slider.canScrollPrev();
  nextBtn.disabled </span>= !<span style="color: rgba(0, 0, 0, 1)">slider.canScrollNext();
}</span></pre>
</div>
<p>透过&nbsp;slider.canScrollPrev 或&nbsp;canScrollNext 方法来 detect 当前 slider 是否可以 next or prev。</p>
<p>如果当前是在第一个 slide 那&nbsp;canScrollPrev 将返回 false，如果当前是在最后一个 slide 那&nbsp;canScrollNext 将返回 false。</p>
<p>注：这两个方法还会考量 slider 是否支持 looping，如果支持 looping 的话，那不管当前在哪一个 slide，它们一定返回 true。</p>
<p>接着我们要监听 slider 的 slide 变更，然后 apply handler。</p>
<div class="cnblogs_code">
<pre>slider.on('init'<span style="color: rgba(0, 0, 0, 1)">, handleStateChange);
slider.on(</span>'select'<span style="color: rgba(0, 0, 0, 1)">, handleStateChange);
slider.on(</span>'reInit', handleStateChange);</pre>
</div>
<p>有三个事件我们需要监听。</p>
<p>init 就是初始化完成，此时会是第一个 slide，所以 prev button 会 disabled。</p>
<p>select 是每一次 slide change，比如我们 click next / prev button，或者 swipe slide 的时候。</p>
<p>reInit 是当 slider 被修改 (e.g. add/remove slide, options change) 重置。</p>
<h4>最终效果</h4>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250406110710682-1894228618.gif" alt="" class="medium-zoom-image"></p>
<p>&nbsp;</p>
<h2>looping 无限循环</h2>
<p>Embla 支持 looping，配置 options 就可以了。</p>
<div class="cnblogs_code">
<pre>const slider = emblaCarousel(sliderElement, { loop: <span style="color: rgba(0, 0, 255, 1)">true</span> });</pre>
</div>
<p>效果</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250406113614659-241602868.gif" alt="" class="medium-zoom-image"></p>
<p>超级丝滑...这个 slide 的体验秒杀 Swiper。</p>
<p>上一 part 我们提到的&nbsp;canScrollPrev 和&nbsp;canScrollNext 在 looping 的情况下，一定返回 true。</p>
<p>&nbsp;</p>
<h2>Autoplay</h2>
<p><a href="https://www.embla-carousel.com/examples/predefined/" rel="noopener nofollow" target="_blank">参考：官网</a></p>
<p>Autoplay 是自动 swipe 功能，体验是这样 -- delay 几秒后，自动 swipe to next slide，然后又 delay 又 swipe 以此类推。</p>
<p>Embla Carousel 可以透过 Autoplay Plugin 实现这个功能。</p>
<h3>安装 Plugin</h3>
<p>首先，需要另外安装 npm package</p>
<div class="cnblogs_code">
<pre>yarn add embla-carousel-autoplay</pre>
</div>
<h3>setup &amp; options</h3>
<p>然后配置</p>
<div class="cnblogs_code">
<pre>import autoplay from 'embla-carousel-autoplay'<span style="color: rgba(0, 0, 0, 1)">;

const slider </span>= emblaCarousel(sliderElement, { loop: <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)"> }, [
  autoplay(),
]);</span></pre>
</div>
<p>emblaCarousel 第三个参数是用来配置 plugins 的。</p>
<p>autoplay 是一个函数，调用它会返回 plugin 实例。</p>
<p>它有一些 options 可以调</p>
<ol>
<li>
<p>autoPlay({ delay: 1000 })</p>
<p>delay 多久后 auto swipe to next slide，默认是 4000 milliseconds。</p>
</li>
<li>
<p>playOnInit</p>
<p>是不是一开始就 start autoplay，默认是 true，如果我们想自己决定何时 start 那就 set to false，然后自己调用 API 让它 start，下面会教。</p>
</li>
<li>
<p>stopOnFocusIn</p>
<p>当 slider 内有任何 element 被 focused，autoplay 就会终止 (不是 pause，是 stop)，默认是 true。</p>
</li>
<li>
<p>stopOnMouseEnter</p>
<p>mouse hover 到 slider，autoplay 就终止，默认是 false。</p>
</li>
<li>
<p>stopOnInteraction</p>
<p>interaction 指的是 slider 被 pointerdown，默认是 true。</p>
比如 swipe to next slide 这个交互就涉及到了 pointerdown，所以它会 stop autoplay。
<p>注：如果我们是透过 click navigation button 来 next slide，这可不会 stop autoplay 哦，因为 button 是在 slider 外面，click button 不会触发 slider 的 pointerdown。</p>
</li>
<li>
<p>stopOnLastSnap</p>
<p>autoplay 到最后一个 slide 就终止，默认是 false。</p>
<p>如果没有设置 looping，在最后一个 slide 它依然会倒退回到第一个 slide。</p>
</li>
<li>
<p>默认 options</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250406125430954-1549584363.png" alt="" class="medium-zoom-image" loading="lazy"></p>
</li>
</ol>
<p>效果</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250406132301775-2146755429.gif" alt="" class="medium-zoom-image"></p>
<h3>Autoplay plugin 实例、方法、事件</h3>
<p>想操控 autoplay，我们可以从 slider 里面取出 autoplay plugin 实例，然后调用它的各种方法</p>
<div class="cnblogs_code">
<pre>const autoplayPlugin = slider.plugins().autoplay; <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> autoplay plugin 实例</span></pre>
</div>
<p>或者先创建实例，再传给 embla slider 也行。</p>
<div class="cnblogs_code">
<pre>const autoplayPlugin = autoplay({ delay: 1000 }); <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> autoplay plugin 实例</span>
const slider = emblaCarousel(sliderElement, { loop: <span style="color: rgba(0, 0, 255, 1)">false</span> }, [autoplayPlugin]); <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 传入 embla slider</span></pre>
</div>
<p>常用方法：</p>
<ol>
<li>
<p>autoplayPlugin.play();</p>
启动 timer，到点 auto swipe to next slide。
<p>如果我们配置 playOnInit: false，那 autoplay 就不会开启，我们需要手动调用 play 方法让它启动。</p>
</li>
<li>
<p>stop()</p>
<p>stop 就是完全停掉 autoplay，timer 会马上被 clear 掉。</p>
<p>stop 了以后，可以用 play 让它恢复。</p>
</li>
<li>
<p>isPlaying()</p>
<p>返回 boolean，判断当前 autoplay 是否是启动状态。</p>
</li>
<li>
<p>reset()</p>
reset 的意思是重算 timer。(注：autoplay 在启动状态下才能 reset 哦)
<p>比如说，timer delay 4 秒后会 auto swipe，当前是第二秒，我们执行 reset，那 timer 就重算，要再等 4 秒后才会 auto swipe。</p>
</li>
<li>
<p>timeUntilNext()</p>
<p>距离下一次 auto swipe 的时间，它返回的是 millisecond。</p>
<p>比如说，timer delay 4 秒后会 auto swipe，当前是第三秒，我们执行 timeUntilNext 会得到 1000，代表 1 秒后会 auto swipe。</p>
</li>
<li>
<p>init()</p>
<p>所有 plugin 都必须实现 init 方法，这个是给 slider 初始化 plugin 时用的，我们一般不会直接调用它。</p>
</li>
<li>
<p>destroy()</p>
<p>所有 plugin 都必须实现 destroy 方法，这个是给 slider destroy 时用的，我们一般不会直接调用它。</p>
</li>
<li>
<p>name</p>
<p>每个 plugin 都有名字，autoplay plugin 的名字叫 'autoplay'。</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250406173947949-1727507415.png" alt="" class="medium-zoom-image" loading="lazy"></p>
</li>
<li>
<p>options</p>
<p>这个 options 对象就是我们调用 autoplay 函数时传入的那个 options 对象。</p>
<p>特别要留意的地方是，这个对象不包含 default options。</p>
<p>比如说，传入的 options 对象是 { delay: 1000 }，default options 是这样</p>
<img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250406125430954-1549584363.png" alt="" class="medium-zoom-image" loading="lazy">
<p>拿 autoplayPlugin.options.stopOnInteraction 将得到 undefined，而不是 true，因为&nbsp;stopOnInteraction 是定义在 default options 里，而不是在我们传入的 options 对象里。</p>
<p>我个人觉得它这样设计很不方便，应该要提供一个 merged options 给我们用才对。</p>
</li>
</ol>
<p>常用事件：</p>
<ol>
<li>autoplay:stop<br>
<div class="cnblogs_code">
<pre>const slider = emblaCarousel(sliderElement, { loop: <span style="color: rgba(0, 0, 255, 1)">false</span> }, [autoplay({ delay: 1000<span style="color: rgba(0, 0, 0, 1)"> })]);
const autoplayPlugin </span>=<span style="color: rgba(0, 0, 0, 1)"> slider.plugins().autoplay;

slider.on(`autoplay:stop`, () </span>=&gt; console.log('stop')); <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 监听事件</span>
window.setTimeout(() =&gt; autoplayPlugin.stop(), 1000);  <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 触发 stop event</span></pre>
</div>
<p>事件监听是透过 slider.on 绑定的，事件名的规范是 autoplayPlugin.name + ':' + supportedEventName。</p>
<p>stop event 会在 autoplay stop 的时候触发，很多情况会导致 autoplay stop，比如 focus, hover, interaction, last slide, call stop method，不管什么情况，只要状态从 play to stop，它就会触发。</p>
</li>
<li>
<p>autoplay:play</p>
<p>状态从 stop to play 时触发。</p>
<p>注：play on init 不会触发，因为我们监听的比较晚，它的顺序是这样：</p>
<p>emblaCarousel 里面会调用 autoplayPlugin.init，init 里面会调用&nbsp;startAutoplay，因为默认 playOnInit: true，startAutoplay 里面会 fire 'autoplay:play' event，</p>
<p>等 emblaCarousel 跑完，我们才调用 slider.on('autoplay:play')，此时 event 已经 fire 掉了。</p>
</li>
<li>
<p>autoplay:select</p>
<p>autoplay 开启后，会先 delay，等 timer 到点后，它会 auto swipe，这个 select event 就是在 auto swipe 的时候触发的。</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250406175508419-719929577.png" alt="" class="medium-zoom-image" loading="lazy"></p>
</li>
<li>
<p>autoplay:timerset</p>
<p>autoplay 的流程是 delay &gt; swipe &gt; delay &gt; swipe，每一次 delay 都是用 setTimeout 完成的，每一次 set 这个 timer 都会 fire 'autoplay:timerset' event。</p>
</li>
<li>
<p>autoplay:timerstopped</p>
<p>顾名思义，当 clearTimeout 时它就会 fire 'autoplay:timerstopped' event。(e.g. when autoplay stop 的时候，注：stop 会比 timerstopped 早一拍 fire)。</p>
</li>
</ol>
<h3>Change autoplay options?</h3>
<p>如果我们想修改 options 可以吗？</p>
<p>比如说，一开始配置 delay: 1000，2 秒后我想改去 delay: 4000。</p>
<p>我们先天真的试一试</p>
<div class="cnblogs_code">
<pre>const autoplayPlugin = autoplay({ delay: 1000<span style="color: rgba(0, 0, 0, 1)"> });
const slider </span>= emblaCarousel(sliderElement, { loop: <span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)"> }, [autoplayPlugin]);
window.setTimeout(() </span>=&gt;<span style="color: rgba(0, 0, 0, 1)"> {
  autoplayPlugin.options.delay </span>= 4000; <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 2 秒后修改 delay 从 1 秒变 4 秒</span>
}, 2000);</pre>
</div>
<p>结果什么都没有改变，依然维持 delay 1 秒。</p>
<p>如果我们加一句 reset 呢？</p>
<div class="cnblogs_code">
<pre>autoplayPlugin.reset();</pre>
</div>
<p>还是不行。</p>
<p>那 stop &gt; change delay &gt; play 呢？</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">autoplayPlugin.stop();
autoplayPlugin.options.delay </span>= 4000; <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 2 秒后修改 delay 从 1 秒变 4 秒</span>
autoplayPlugin.play();</pre>
</div>
<p>通通不行。</p>
<p>why? 看一看源码</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250406190423808-249940787.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>每当 setTimeout 的时候，它会从 delay 对象中拿出 options 的 4 秒。</p>
<p>这个 delay 对象是在 plugin.init 时制作好的，并且后续没有监听 options 变更，所以我们修改 options 它是不管的。</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250406190510317-285358920.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>因此，倘若我们想修改 options，唯一的方法就是手动调用 destory，然后再调用 init，让它整个 plugin 重启。</p>
<p>调用 destroy 不难，但调用 init 就有点困难了。</p>
<p>init 方法需要一个 optionsHandler 对象</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250406190905743-740707092.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>这个对象是透过一个内部函数 OptionsHandler 创建的 (在执行 emblaCarousel 函数的时候，注：Embla 的函数命名规范是 PascalCase，而不是我们常用的 camelCase，在翻阅源码的时候要看得懂哦)</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250406191014466-754162237.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>Embla 没有公开这个 OptionsHandler&nbsp;函数，所以我们无法调用 plugin.init 方法。</p>
<h4>emblaCarousel.reInit (a.k.a reActive)</h4>
<p>我们只剩下最后一条路 --&nbsp;emblaCarousel.reInit 方法</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250406191744498-714409209.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>这个方法会重启整个 slider，所有的 plugin 会被 destroy 然后再 init。</p>
<p>重启不会把 slide 跳回第一个，而是保持在当前位置。</p>
<p>如果我们没有传入新的 options 或 plugins，那它会使用回之前的 options 和 plugins。</p>
<p>最后的实现代码是这样</p>
<div class="cnblogs_code">
<pre>window.setTimeout(() =&gt;<span style="color: rgba(0, 0, 0, 1)"> {
  autoplayPlugin.options.delay </span>= 4000; <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 2 秒后修改 delay 从 1 秒变 4 秒</span>
<span style="color: rgba(0, 0, 0, 1)">  slider.reInit();
}, </span>2000);</pre>
</div>
<h3>当 Autoplay 遇上 Navigation</h3>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250406181301328-741681226.gif" alt="" class="medium-zoom-image"></p>
<p>看到吗，Autoplay 和 Navigation 打起来了。</p>
<p>虽然&nbsp;stopOnInteraction: true，但 navigation 操作对 autoplay plugin 来说并不算是 interaction，只有 slider pointerdown 才算是 interaction，所以 navigation 操作不会 stop autoplay。</p>
<p>官方给的例子是这样解决的</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250406181731454-42957772.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>监听 navigation button click，然后调用 reset 或 stop 来控制 autoplay。</p>
<p>这个做法可以达到效果，但有一点点扣管理分。</p>
<p>因为这样做会把 navigation 和 autoplay 的关系绑的很紧，而且倘若哪天再出现一个 pagination (另一种操作 slide 的方式)，我们又得再写一套类似的逻辑给它，这样很繁琐。</p>
<p>我这里有一个 idea，我们可以监听 select change 事件，如果是 select change by not autoplay，那我们就 stop or reset autoplay。</p>
<p>这样就可以 cover navigation 和 pagination 甚至其它更多的 slide 操作。</p>
<p>代码大概是这样</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 监听每一次的 select</span>
slider.on('select', () =&gt;<span style="color: rgba(0, 0, 0, 1)"> {
  </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 判断这一次的 select 是 trigger by autoplay or not</span>
  let isAutoSelect = <span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">;

  </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 因为是先触发 select 后触发 autoplay:select (同步)</span>
  <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 所以我们可以利用这一点来判断 select 是 trigger by autoplay or not</span>
  const callback = () =&gt;<span style="color: rgba(0, 0, 0, 1)"> {
    isAutoSelect </span>= <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">;
    slider.off(</span>'autoplay:select'<span style="color: rgba(0, 0, 0, 1)">, callback);
  };
  slider.on(</span>'autoplay:select'<span style="color: rgba(0, 0, 0, 1)">, callback);

  queueMicrotask(() </span>=&gt;<span style="color: rgba(0, 0, 0, 1)"> {
    slider.off(</span>'autoplay:select'<span style="color: rgba(0, 0, 0, 1)">, callback);
    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 如果是 autoplay 那就 skip</span>
    <span style="color: rgba(0, 0, 255, 1)">if</span> (isAutoSelect) <span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)">;

    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 如果 select trigger by navigation, pagination 或其它的，那我们就 stop or reset autoplay。</span>
    (autoplayPlugin.options.stopOnInteraction ?? <span style="color: rgba(0, 0, 255, 1)">true</span>) ?<span style="color: rgba(0, 0, 0, 1)"> autoplayPlugin.stop() : autoplayPlugin.reset();
  });
});</span></pre>
</div>
<p><a href="https://www.cnblogs.com/keatkeat/p/17297763.html" target="_blank">RxJS</a>&nbsp;的写法是这样</p>
<div class="cnblogs_code">
<pre>fromEvent(slider, 'select'<span style="color: rgba(0, 0, 0, 1)">)
  .pipe(
    switchMap(() </span>=&gt;<span style="color: rgba(0, 0, 0, 1)">
      merge(fromEvent(slider, </span>'autoplay:select').pipe(map(() =&gt; <span style="color: rgba(0, 0, 255, 1)">true</span>)), of(<span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">).pipe(observeOn(asapScheduler))).pipe(
        take(</span>1<span style="color: rgba(0, 0, 0, 1)">),
      ),
    ),
    filter(isAutoplaySelect </span>=&gt; !<span style="color: rgba(0, 0, 0, 1)">isAutoplaySelect),
  )
  .subscribe(() </span>=&gt;<span style="color: rgba(0, 0, 0, 1)">
    (autoplayPlugin.options.stopOnInteraction </span>?? <span style="color: rgba(0, 0, 255, 1)">true</span>) ?<span style="color: rgba(0, 0, 0, 1)"> autoplayPlugin.stop() : autoplayPlugin.reset(),
  );</span></pre>
</div>
<p>&nbsp;</p>
<h2>Slides per view &amp; Slides to scroll</h2>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250407000250277-1600177919.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>红框是 slide，绿框是 view (a.k.a scroll snap)。</p>
<p>slides per view 是指，一个 view 里面有多少个 slide。</p>
<p>我们上面提过的例子，都是一个 view 一个 slide，而这一个则是一个 view 两个 slides。</p>
<p>那要如何实现它呢？</p>
<p>Swiper 的&nbsp;<a href="https://www.cnblogs.com/keatkeat/p/16124065.html#:~:text=Slide%20per%20view%20/%20group" target="_blank">slides per view</a>&nbsp;主要是靠 JavaScript 来完成的 (包括布局)。</p>
<p>而 Embla 的 slides per view 则主要是靠 CSS Styles 来完成的 (交互依然是靠 JavaScript)。</p>
<h3>Styles</h3>
<p>我个人比较习惯用 grid 做 slider 布局</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250407001236860-1642687010.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>所以这里把之前的 flex 改成 grid (注：两种布局方式都可以达到最终效果，所以选哪个看个人喜好就好)。</p>
<p>每一个 column (也就是 slide) width 是 50%，那就代表一个 view 里会有两个 slides。</p>
<p>效果</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250407000311722-1683133523.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<h4>add slide gap</h4>
<p>slide 与 slide 之前没有 gap，不好看，我们加 gap 进去</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(128, 0, 0, 1)">.slide-list </span>{<span style="color: rgba(255, 0, 0, 1)">
  --slides-per-view</span>:<span style="color: rgba(0, 0, 255, 1)"> 2</span>;<span style="color: rgba(255, 0, 0, 1)">
  --slide-gap</span>:<span style="color: rgba(0, 0, 255, 1)"> 16px</span>;<span style="color: rgba(255, 0, 0, 1)">

  display</span>:<span style="color: rgba(0, 0, 255, 1)"> grid</span>;<span style="color: rgba(255, 0, 0, 1)">
  grid-auto-flow</span>:<span style="color: rgba(0, 0, 255, 1)"> column</span>;<span style="color: rgba(255, 0, 0, 1)">
  grid-auto-columns</span>:<span style="color: rgba(0, 0, 255, 1)"> calc((100% - (var(--slide-gap) * (var(--slides-per-view) - 1))) / var(--slides-per-view))</span>;<span style="color: rgba(255, 0, 0, 1)">
  gap</span>:<span style="color: rgba(0, 0, 255, 1)"> var(--slide-gap)</span>;
}</pre>
</div>
<p>直接加 gap 会影响到 slide width，所以我们需要写一些简单的&nbsp;calculation。</p>
<p>效果</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250407002642845-1135189412.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>排版虽然是对的，但交互会有一些体验问题</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250407024712500-570068282.gif" alt="" class="medium-zoom-image"></p>
<p>当鼠标在 gap 局域 swipe 时，它会不小心 select 到 slide。</p>
<p>这是因为 gap 区域是 div.slide-list 的 area，它是 slide 的 parent 了。</p>
<p>我们可以参考官网的实现方式来解决这个问题，它的 gap 是用 slide padding-left 做出来的。</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(128, 0, 0, 1)">.slide-list </span>{<span style="color: rgba(255, 0, 0, 1)">
  --slides-per-view</span>:<span style="color: rgba(0, 0, 255, 1)"> 2</span>;<span style="color: rgba(255, 0, 0, 1)">
  --slide-gap</span>:<span style="color: rgba(0, 0, 255, 1)"> 16px</span>;<span style="color: rgba(255, 0, 0, 1)">

  display</span>:<span style="color: rgba(0, 0, 255, 1)"> grid</span>;<span style="color: rgba(255, 0, 0, 1)">
  grid-auto-flow</span>:<span style="color: rgba(0, 0, 255, 1)"> column</span>;<span style="color: rgba(255, 0, 0, 1)">
  grid-auto-columns</span>:<span style="color: rgba(0, 0, 255, 1)"> calc(100% / var(--slides-per-view))</span>;<span style="color: rgba(255, 0, 0, 1)">
  margin-left</span>:<span style="color: rgba(0, 0, 255, 1)"> calc(-1 * var(--slide-gap))</span>;<span style="color: rgba(255, 0, 0, 1)">

  .slide {
    padding-left</span>:<span style="color: rgba(0, 0, 255, 1)"> var(--slide-gap)</span>;
  }<span style="color: rgba(128, 0, 0, 1)">
}</span></pre>
</div>
<p>首先给每个 slide 一个 padding-left 作为 slide gap。</p>
<p>第二步是给 .slide-list 一个 negative margin-left，目的是把第一个 slide 的 padding-left 吃掉。</p>
<p>如果你觉得上面这种 overriding 的写法不太好理解的话，那可以改成下面这样</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(128, 0, 0, 1)">.slide-list </span>{<span style="color: rgba(255, 0, 0, 1)">
  --slides-per-view</span>:<span style="color: rgba(0, 0, 255, 1)"> 3</span>;<span style="color: rgba(255, 0, 0, 1)">
  --slide-gap</span>:<span style="color: rgba(0, 0, 255, 1)"> 16px</span>;<span style="color: rgba(255, 0, 0, 1)">

  display</span>:<span style="color: rgba(0, 0, 255, 1)"> grid</span>;<span style="color: rgba(255, 0, 0, 1)">
  grid-auto-flow</span>:<span style="color: rgba(0, 0, 255, 1)"> column</span>;<span style="color: rgba(255, 0, 0, 1)">
  grid-template-columns</span>:<span style="color: rgba(0, 0, 255, 1)"> calc((100% / var(--slides-per-view)) - var(--slide-gap))</span>; <span style="color: rgba(0, 128, 0, 1)">/*</span><span style="color: rgba(0, 128, 0, 1)"> for first slide width </span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(255, 0, 0, 1)">
  grid-auto-columns</span>:<span style="color: rgba(0, 0, 255, 1)"> calc(100% / var(--slides-per-view))</span>;<span style="color: rgba(0, 128, 0, 1)">/*</span><span style="color: rgba(0, 128, 0, 1)"> for other slide width </span><span style="color: rgba(0, 128, 0, 1)">*/</span>

  <span style="color: rgba(0, 128, 0, 1)">/*</span><span style="color: rgba(0, 128, 0, 1)"> first slide 没有 padding-left </span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(255, 0, 0, 1)">
  .slide &amp;</span>:<span style="color: rgba(0, 0, 255, 1)">not(:first-child) {
    padding-left: var(--slide-gap)</span>;
  }<span style="color: rgba(128, 0, 0, 1)">
}</span></pre>
</div>
<p>首先 first slide 没有 padding-left。</p>
<p>这会导致 first slide 和其它 slides 的 width 不一致，我们需要另外处理 -- 用 grid-template-columns 来调整 first slide width，让它和其它 slides 保持一致。</p>
<p>最终效果</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250407025650444-967245399.gif" alt="" class="medium-zoom-image"></p>
<h3>slides per group</h3>
<p>设置 slides per view = 2 之后，我们去 swipe 它会发现体验怪怪的。</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250407015636605-162480180.gif" alt="" class="medium-zoom-image"></p>
<p>swipe 一下只移动了半个 slide。原因是 alignment 跑掉了。</p>
<h4>EmblaOptions.align</h4>
<p>slider 默认 align 是 'center'，我们 swipe 多几下就能看出这个 align: 'center' 的含义了</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250407020817931-255649218.gif" alt="" class="medium-zoom-image"></p>
<p>center 会是一个完整的 slide，然后左右 slide 各占 50% width，这就是 align: center 的意思。</p>
<p>我们把 align 换成 'start' 看看效果</p>
<div class="cnblogs_code">
<pre>const slider = emblaCarousel(sliderElement, { align: 'start' });</pre>
</div>
<p>效果</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250407021419344-1035073067.gif" alt="" class="medium-zoom-image"></p>
<p>yes，这是我们比较熟悉的 swipe 体验。</p>
<h4>EmblaOptions.slidesToScroll</h4>
<p>Swiper 有一个感念叫 slides per group，意思是当我们 swipe 的时候，它会移动多少个 slide。</p>
<p>比如说，在一个 view 一个 slide 的情况下，swipe 通常就是一个 slide。</p>
<p>而在一个 view 两个 slides 的情况下，swipe 一次我们可以选择移动一个 slide 或者移动两个 slides。</p>
<p>上面是一个 swipe 一个 slide 的体验，下面我们看看一个 swipe 两个 slides 的体验。</p>
<div class="cnblogs_code">
<pre>const slider = emblaCarousel(sliderElement, { align: 'start', slidesToScroll: 2 });</pre>
</div>
<p>slidesToScroll: 2 表示 scrollNext 会直接跳两个 slides，而不是默认的一个。</p>
<p>效果</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250407022006752-206566684.gif" alt="" class="medium-zoom-image"></p>
<p>另外，slidesToScroll 还支持 'auto'&nbsp; 值。</p>
<div class="cnblogs_code">
<pre>const slider = emblaCarousel(sliderElement, { align: 'start', slidesToScroll: 'auto' });</pre>
</div>
<p>'auto' 的意思就是依据 slides per view。</p>
<p>比如 slides per view 是 3 的话，那 slidesToScroll 也自动会是 3。</p>
<p>&nbsp;</p>
<h2>SlidesInView</h2>
<p>EmblaCarousel.slidesInView 是一个方法，它会返回当前有哪些 slides 在 view 里面 (这个 view 指的是 slider 可见区域)。</p>
<p>我们看一个官方的<a href="https://www.embla-carousel.com/examples/predefined/#default" rel="noopener nofollow" target="_blank">例子</a></p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250408102628379-388110910.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>一个 view 一个 slide，目前显示的是一号 slide，也就是第 0 个，index 0。</p>
<div class="cnblogs_code">
<pre>emblaApi.on('slidesInView', () =&gt; console.log(emblaApi.slidesInView())); <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> [0, 1]</span></pre>
</div>
<p>slidesInView 返回的是 [0, 1]，意思是说，index 0 和 1 slide 目前显示在 view 里。</p>
<p>呃...这不对啊🤔明明显示的只有 index 0 啊...</p>
<p><a href="https://github.com/davidjerleke/embla-carousel/issues/650" rel="noopener nofollow" target="_blank">Github Issue –&nbsp;slidesInView returns one too many slides</a></p>
<p>作者给出了解答</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250408110204795-1476624800.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>slidesInView 是依靠&nbsp;<a href="https://www.cnblogs.com/keatkeat/p/15993834.html" target="_blank">IntersectionObserver</a>&nbsp;来计算的，源码在&nbsp;<a href="https://github.com/davidjerleke/embla-carousel/blob/v8.6.0/packages/embla-carousel/src/components/SlidesInView.ts#L28" rel="noopener nofollow" target="_blank">SlidesInView.ts</a>。</p>
<p>我们自己用 IntersectionObserver 测一下看看</p>
<div class="cnblogs_code">
<pre>window.setTimeout(() =&gt;<span style="color: rgba(0, 0, 0, 1)"> {

  const io </span>= <span style="color: rgba(0, 0, 255, 1)">new</span> IntersectionObserver(entries =&gt;<span style="color: rgba(0, 0, 0, 1)"> {
    console.log(entries.map(e </span>=&gt; e.isIntersecting)); <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> [true, true, false, false, false]</span>
<span style="color: rgba(0, 0, 0, 1)">  });
  const slides </span>= Array.from(viewportNode.querySelectorAll('.embla__slide'<span style="color: rgba(0, 0, 0, 1)">));
  slides.forEach(slide </span>=&gt;<span style="color: rgba(0, 0, 0, 1)"> io.observe(slide));

}, </span>2000); <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> delay 是为了等它 render 完</span></pre>
</div>
<p>可以看到 5 个 slides 里，头两个 (index 0 和 1) isIntersecting 真的是 true。</p>
<p>这种诡异的现象通常是微差或者 "刚刚好动到要不要算" 造成的，作者给的解方是 -- 设置&nbsp;threshold。</p>
<div class="cnblogs_code">
<pre>const emblaApi = EmblaCarousel(viewportNode, { inViewThreshold: 0.01 });</pre>
</div>
<p>不懂原理想明白的读友可以看<a href="https://www.cnblogs.com/keatkeat/p/15993834.html#:~:text=%E5%B0%B1%E6%85%A2%E6%8E%89%E4%BA%86.-,threshold,-%E6%98%AF%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0" target="_blank">这篇</a>。</p>
<p>&nbsp;</p>
<h2>Text Selection</h2>
<p>slide 里面的 text 是很难被 select 的。</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250407100251583-1187816634.gif" alt="" class="medium-zoom-image"></p>
<p>double click select text 可以，但 drag select 就不行。</p>
<p>因为 drag 会移动 slide，这和 select text 交互是打架的。</p>
<p>Swiper 可以透过 class&nbsp;<a href="https://www.cnblogs.com/keatkeat/p/16124065.html#:~:text=slide%2Dactive%20class-,Text%20Selection,-%E5%8F%82%E8%80%83%3A%20stackoverflow" target="_blank">swiper-no-swiping</a>&nbsp;解决这种冲突，很遗憾 Embla 没有支持。</p>
<p>相关 Issue：</p>
<p><a href="https://stackoverflow.com/questions/73858832/embla-carousel-select-inner-text" rel="noopener nofollow" target="_blank">Stack Overflow –&nbsp;Embla Carousel - select inner text</a></p>
<p>三个思路，</p>
<p>第一，给 slider 添加 cursor styles</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(128, 0, 0, 1)">.slider </span>{<span style="color: rgba(255, 0, 0, 1)">
  cursor</span>:<span style="color: rgba(0, 0, 255, 1)"> grab</span>;<span style="color: rgba(255, 0, 0, 1)">
  user-select</span>:<span style="color: rgba(0, 0, 255, 1)"> none</span>;
}</pre>
</div>
<p>告知 user 无法 select text。</p>
<p>第二，配置&nbsp;watchDrag: false</p>
<div class="cnblogs_code">
<pre>const slider = emblaCarousel(sliderElement, { watchDrag: <span style="color: rgba(0, 0, 255, 1)">false</span> });</pre>
</div>
<p>直接 disable 掉 drag 的功能，user 只能透过其它方式移动 slide，比如 navigation 或 pagination。</p>
<p>第三，模拟&nbsp;swiper-no-swiping</p>
<p>添加 'drag-disabled' class 到 slide 里的 heading element</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">h1 </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="drag-disabled"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>Yang Mi<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">h1</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span></pre>
</div>
<p>代表这个 element 不可以 drag。</p>
<p>接着监听 slider mousedown 和 touchstart 事件，然后&nbsp;stopPropagation 阻止 Embla drag。</p>
<div class="cnblogs_code">
<pre>const slider =<span style="color: rgba(0, 0, 0, 1)"> emblaCarousel(sliderElement);
</span><span style="color: rgba(0, 0, 255, 1)">for</span> (const eventName of ['touchstart', 'mousedown'<span style="color: rgba(0, 0, 0, 1)">]) {
  sliderElement.addEventListener(
    eventName,
    e </span>=&gt;<span style="color: rgba(0, 0, 0, 1)"> {
      </span><span style="color: rgba(0, 0, 255, 1)">if</span> ((e.target as HTMLElement).classList.contains('drag-disabled'<span style="color: rgba(0, 0, 0, 1)">)) {
        e.stopPropagation();
      }
    },
    { capture: </span><span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)"> },
  );
}</span></pre>
</div>
<p>我们必须赶在 Embla 的前面，所以需要使用&nbsp;capture: true。</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250407162542664-91920001.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>Embla 会 binding 各种事件到 node (这个 node 就是 slider element) 上，我们赶在它之前&nbsp;stopPropagation 就可以阻止掉它们了。</p>
<p>效果</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250407111230123-1084197524.gif" alt="" class="medium-zoom-image"></p>
<p>Yang Mi 可以 select text 了。</p>
<p>&nbsp;</p>
<h2>Breakpoints</h2>
<p>要在不同的 viewport size 呈现不同的 slide 布局或 options，我们需要配置 breakpoints。</p>
<h3>CSS media query</h3>
<p>slides 布局通常只需要定义 CSS media query 就可以了。</p>
<p>Embla 本身会监听 window resize，然后 getComputedStyle 拿到当前的 Styles 做相应的处理。</p>
<p>比如</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250407183146639-1844187054.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>slides per view 默认是 1，slide gap 默认是 0px。</p>
<p>在 viewport width 1920px 时，slides per view 变成 2，slide gap 变成 16px。</p>
<p>我们只需要 CSS 就够了，JavaScript 不需要写。</p>
<p>效果</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250407183555660-15200390.gif" alt="" class="medium-zoom-image"></p>
<h3>breakpoints options<button class="cnblogs-toc-button" title="显示目录导航"></button></h3>
<p>需求：默认要 looping，大过 1024px 不要 looping，大过 1920 又要 looping。</p>
<div class="cnblogs_code">
<pre>const slider =<span style="color: rgba(0, 0, 0, 1)"> emblaCarousel(sliderElement, {
  align: </span>'start'<span style="color: rgba(0, 0, 0, 1)">,
  slidesToScroll: </span>'auto'<span style="color: rgba(0, 0, 0, 1)">,
  loop: </span><span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">,
  breakpoints: {
    </span>'(min-width: 1024px)'<span style="color: rgba(0, 0, 0, 1)">: {
      loop: </span><span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">,
    },
    </span>'(min-width: 1920px)'<span style="color: rgba(0, 0, 0, 1)">: {
      loop: </span><span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">,
    },
  },
});</span></pre>
</div>
<p>上面有三个 loop options 定义，它的覆盖逻辑 (Object.assign) 是从下到上 (下面盖上面，下面赢)，所以通常我们定义 media query 是从小(上)到大(下)。</p>
<p>效果</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250407190149358-1314121885.gif" alt="" class="medium-zoom-image"></p>
<p>题外话：breakpoint change 导致 options change，Embla 底层会使用 reInit 方法重置，reInit 事件当然也会触发。</p>
<p>Embla 有一点比 Swiper 强，Embla 可以依据 braekpoints 配置 acitve or inactive。(我影响中，Swiper 是无法 inactive 的)。</p>
<div class="cnblogs_code">
<pre>const slider =<span style="color: rgba(0, 0, 0, 1)"> emblaCarousel(sliderElement, {
  align: </span>'start'<span style="color: rgba(0, 0, 0, 1)">,
  slidesToScroll: </span>'auto'<span style="color: rgba(0, 0, 0, 1)">,
  breakpoints: {
    </span>'(min-width: 1024px)'<span style="color: rgba(0, 0, 0, 1)">: {
      active: </span><span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">,
    },
    </span>'(min-width: 1920px)'<span style="color: rgba(0, 0, 0, 1)">: {
      active: </span><span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">,
    },
  },
});</span></pre>
</div>
<p>直接改 active 属性就可以了。</p>
<p>&nbsp;</p>
<h2>Pagination</h2>
<p>Swiper 有 bulit-in 的&nbsp;<a href="https://www.cnblogs.com/keatkeat/p/16124065.html#:~:text=import%20CSS%20%E5%93%A6-,Pagination,-HTML" target="_blank">pagination</a>，也支持&nbsp;<a href="https://www.cnblogs.com/keatkeat/p/16124065.html#:~:text=Fully%20Custom%20Pagination" target="_blank">full custom pagination</a>。</p>
<p>Embla 没有 built-in 的 pagination，我们需要像 navigation 那样，使用 Embla 底层 API，自己写上层实现代码。</p>
<h3>实现要点</h3>
<p>paignation 长这样</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250408202532268-741240510.gif" alt="" class="medium-zoom-image"></p>
<p>下面一粒一粒的叫 bullet。</p>
<p>三个要点：</p>
<ol>
<li>
<p>点击 bullet 会移动 slide</p>
</li>
<li>
<p>active bullet</p>
<p>active bullet 就是那颗比较亮的 bullet，slide 在第几个，active bullet 就要在第几个。</p>
</li>
<li>
<p>bullet 的数量</p>
上面的例子有 6 个 slides (6 张图)，一个 view 显示一个 slide，bullet 有 6 粒。<br>
<p>下面这个例子一样是 6 个 slides，但一个 view 显示了两个 slides，bullet 变成了 3 粒。</p>

<img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250408203222514-1926556897.png" alt="" class="medium-zoom-image" loading="lazy">
<p>所以，bullet 的数量是看有多少个 view 决定的。</p>

</li>

</ol>
<h3>具体实现</h3>
<h4>HTML</h4>
<p>首先是 HTML</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250408204045488-1192846187.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<div class="cnblogs_code"><img src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" id="code_img_closed_357adf86-73a8-4938-a7f3-4c5d8f9223f6" class="code_img_closed"><img src="https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" id="code_img_opened_357adf86-73a8-4938-a7f3-4c5d8f9223f6" class="code_img_opened" style="display: none">
<div id="cnblogs_code_open_357adf86-73a8-4938-a7f3-4c5d8f9223f6" class="cnblogs_code_hide">
<pre><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="pagination"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
  <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">template</span><span style="color: rgba(0, 0, 255, 1)">&gt;&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="bullet"</span><span style="color: rgba(0, 0, 255, 1)">&gt;&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;&lt;/</span><span style="color: rgba(128, 0, 0, 1)">template</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span></pre>
</div>
<span class="cnblogs_code_collapse">View Code</span></div>
<p>bullet 的数量依据 view count，我们用 JavaScript 动态输出会比较容易管理。(用 CSS 只能稿 display: none 会比较乱)</p>
<p>HTML 定义一个 bullet template 就好。</p>
<h4>Styles</h4>
<p>没什么特别的，就是美观一下而已</p>
<div class="cnblogs_code"><img src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" id="code_img_closed_f532341c-b047-43d2-a624-b998ff6c0fde" class="code_img_closed"><img src="https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" id="code_img_opened_f532341c-b047-43d2-a624-b998ff6c0fde" class="code_img_opened" style="display: none">
<div id="cnblogs_code_open_f532341c-b047-43d2-a624-b998ff6c0fde" class="cnblogs_code_hide">
<pre><span style="color: rgba(128, 0, 0, 1)">.pagination </span>{<span style="color: rgba(255, 0, 0, 1)">
  --bullet-size</span>:<span style="color: rgba(0, 0, 255, 1)"> 24px</span>;<span style="color: rgba(255, 0, 0, 1)">

  margin-top</span>:<span style="color: rgba(0, 0, 255, 1)"> 16px</span>;<span style="color: rgba(255, 0, 0, 1)">

  display</span>:<span style="color: rgba(0, 0, 255, 1)"> flex</span>;<span style="color: rgba(255, 0, 0, 1)">
  justify-content</span>:<span style="color: rgba(0, 0, 255, 1)"> center</span>;<span style="color: rgba(255, 0, 0, 1)">
  gap</span>:<span style="color: rgba(0, 0, 255, 1)"> 16px</span>;<span style="color: rgba(255, 0, 0, 1)">

  height</span>:<span style="color: rgba(0, 0, 255, 1)"> var(--bullet-size)</span>; <span style="color: rgba(0, 128, 0, 1)">/*</span><span style="color: rgba(0, 128, 0, 1)"> 提早给空间 </span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(255, 0, 0, 1)">

  .bullet {
    width</span>:<span style="color: rgba(0, 0, 255, 1)"> var(--bullet-size)</span>;<span style="color: rgba(255, 0, 0, 1)">
    height</span>:<span style="color: rgba(0, 0, 255, 1)"> var(--bullet-size)</span>;<span style="color: rgba(255, 0, 0, 1)">
    border-radius</span>:<span style="color: rgba(0, 0, 255, 1)"> 999px</span>;<span style="color: rgba(255, 0, 0, 1)">
    border</span>:<span style="color: rgba(0, 0, 255, 1)"> 1px solid blue</span>;<span style="color: rgba(255, 0, 0, 1)">
    cursor</span>:<span style="color: rgba(0, 0, 255, 1)"> pointer</span>;<span style="color: rgba(255, 0, 0, 1)">

    &amp;.active {
      background-color</span>:<span style="color: rgba(0, 0, 255, 1)"> lightblue</span>;
    }<span style="color: rgba(128, 0, 0, 1)">
  }
}</span></pre>
</div>
<span class="cnblogs_code_collapse">View Code</span></div>
<h4>Scripts</h4>
<div class="cnblogs_code">
<pre>const pagination = document.querySelector&lt;HTMLElement&gt;('.pagination')!<span style="color: rgba(0, 0, 0, 1)">;
const bulletTemplate </span>= pagination.querySelector('template')!<span style="color: rgba(0, 0, 0, 1)">;

</span><span style="color: rgba(0, 0, 255, 1)">function</span><span style="color: rgba(0, 0, 0, 1)"> rebuildPagination() {
  </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 当前在第几个 view</span>
  const currentViewIndex =<span style="color: rgba(0, 0, 0, 1)"> slider.selectedScrollSnap();
  </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 总共有几个 view</span>
  const viewCount =<span style="color: rgba(0, 0, 0, 1)"> slider.scrollSnapList().length;

  const bulletsFrag </span>=<span style="color: rgba(0, 0, 0, 1)"> document.createDocumentFragment();

  </span><span style="color: rgba(0, 0, 255, 1)">for</span> (let index = 0; index &lt; viewCount; index++<span style="color: rgba(0, 0, 0, 1)">) {
    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 创建 bullet element based on view count</span>
    const bulletTemplateFrag = bulletTemplate.content.cloneNode(<span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">) as DocumentFragment;
    const bullet </span>= bulletTemplateFrag.firstElementChild!<span style="color: rgba(0, 0, 0, 1)">;

    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> add click event to bullet</span>
    bullet.addEventListener('click', () =&gt;<span style="color: rgba(0, 0, 0, 1)"> slider.scrollTo(index));

    </span><span style="color: rgba(0, 0, 255, 1)">if</span> (index ===<span style="color: rgba(0, 0, 0, 1)"> currentViewIndex) {
      </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> set active class to bullet</span>
      bullet.classList.add('active'<span style="color: rgba(0, 0, 0, 1)">);
    }

    bulletsFrag.appendChild(bullet);
  }

  </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> clear and re-append bullets</span>
  pagination.innerHTML = ''<span style="color: rgba(0, 0, 0, 1)">;
  pagination.appendChild(bulletsFrag);
}

</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 三种情况有可能导致 bullet 数量或 active 变更，当变更时我们就 rebuild pagination</span>
slider.on('select'<span style="color: rgba(0, 0, 0, 1)">, rebuildPagination);
slider.on(</span>'init'<span style="color: rgba(0, 0, 0, 1)">, rebuildPagination);
slider.on(</span>'reInit', rebuildPagination);</pre>
</div>
<p>使用到了两个 Embla API</p>
<ol>
<li>
<p>EmblaCarousel.selectedScrollSnap 方法</p>
<p>scroll snap 就是 view 的别名 (alias)。</p>
<p>selectedScrollSnap 会返回当前 view index (当前在第几个 view)。</p>
</li>
<li>
<p>EmblaCarousel.scrollSnapList 方法</p>
<p>它会返回一个 array，长这样&nbsp;[-0, 0.2, 0.4, 0.6, 0.8, 1] 或着这样&nbsp;[-0, 0.5, 1]。</p>
<p>里面的号码不重要，array.length 代表 view 的数量，也就是我们要的 bullet 数量。</p>
</li>
</ol>
<p>最终效果</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250408202532268-741240510.gif" alt="" class="medium-zoom-image"></p>
<h3>Dynamic bullets</h3>
<p>当 bullets 太多的时候会不好看，我们可以做成 dynamic bullets 限制它的数量。</p>
<p>长这样</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250409012135281-1480196394.gif" alt="" class="medium-zoom-image"></p>
<p>附上完整代码，就不解释了。</p>
<p>HTML</p>
<div class="cnblogs_code"><img src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" id="code_img_closed_3bb0e46b-7326-4245-ba0b-dc4bd795480d" class="code_img_closed"><img src="https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" id="code_img_opened_3bb0e46b-7326-4245-ba0b-dc4bd795480d" class="code_img_opened" style="display: none">
<div id="cnblogs_code_open_3bb0e46b-7326-4245-ba0b-dc4bd795480d" class="cnblogs_code_hide">
<pre><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slider-container"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
  <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slider"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide-list"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">img </span><span style="color: rgba(255, 0, 0, 1)">src</span><span style="color: rgba(0, 0, 255, 1)">="../images/yangmi1.jpg"</span><span style="color: rgba(255, 0, 0, 1)"> alt</span><span style="color: rgba(0, 0, 255, 1)">="yangmi1"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">img </span><span style="color: rgba(255, 0, 0, 1)">src</span><span style="color: rgba(0, 0, 255, 1)">="../images/tifa.webp"</span><span style="color: rgba(255, 0, 0, 1)"> alt</span><span style="color: rgba(0, 0, 255, 1)">="tifa"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">img </span><span style="color: rgba(255, 0, 0, 1)">src</span><span style="color: rgba(0, 0, 255, 1)">="../images/nana.jpg"</span><span style="color: rgba(255, 0, 0, 1)"> alt</span><span style="color: rgba(0, 0, 255, 1)">="nana"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">img </span><span style="color: rgba(255, 0, 0, 1)">src</span><span style="color: rgba(0, 0, 255, 1)">="../images/yangmi2.jpg"</span><span style="color: rgba(255, 0, 0, 1)"> alt</span><span style="color: rgba(0, 0, 255, 1)">="yangmi2"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">img </span><span style="color: rgba(255, 0, 0, 1)">src</span><span style="color: rgba(0, 0, 255, 1)">="../images/yangmi3.jpg"</span><span style="color: rgba(255, 0, 0, 1)"> alt</span><span style="color: rgba(0, 0, 255, 1)">="yangmi3"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">img </span><span style="color: rgba(255, 0, 0, 1)">src</span><span style="color: rgba(0, 0, 255, 1)">="../images/dilireba.jpg"</span><span style="color: rgba(255, 0, 0, 1)"> alt</span><span style="color: rgba(0, 0, 255, 1)">="dilireba"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">img </span><span style="color: rgba(255, 0, 0, 1)">src</span><span style="color: rgba(0, 0, 255, 1)">="../images/yangmi1.jpg"</span><span style="color: rgba(255, 0, 0, 1)"> alt</span><span style="color: rgba(0, 0, 255, 1)">="yangmi1"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">img </span><span style="color: rgba(255, 0, 0, 1)">src</span><span style="color: rgba(0, 0, 255, 1)">="../images/tifa.webp"</span><span style="color: rgba(255, 0, 0, 1)"> alt</span><span style="color: rgba(0, 0, 255, 1)">="tifa"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">img </span><span style="color: rgba(255, 0, 0, 1)">src</span><span style="color: rgba(0, 0, 255, 1)">="../images/nana.jpg"</span><span style="color: rgba(255, 0, 0, 1)"> alt</span><span style="color: rgba(0, 0, 255, 1)">="nana"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">img </span><span style="color: rgba(255, 0, 0, 1)">src</span><span style="color: rgba(0, 0, 255, 1)">="../images/yangmi2.jpg"</span><span style="color: rgba(255, 0, 0, 1)"> alt</span><span style="color: rgba(0, 0, 255, 1)">="yangmi2"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">img </span><span style="color: rgba(255, 0, 0, 1)">src</span><span style="color: rgba(0, 0, 255, 1)">="../images/yangmi3.jpg"</span><span style="color: rgba(255, 0, 0, 1)"> alt</span><span style="color: rgba(0, 0, 255, 1)">="yangmi3"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">img </span><span style="color: rgba(255, 0, 0, 1)">src</span><span style="color: rgba(0, 0, 255, 1)">="../images/dilireba.jpg"</span><span style="color: rgba(255, 0, 0, 1)"> alt</span><span style="color: rgba(0, 0, 255, 1)">="dilireba"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
  <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
  <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="pagination"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">template</span><span style="color: rgba(0, 0, 255, 1)">&gt;&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="bullet"</span><span style="color: rgba(0, 0, 255, 1)">&gt;&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;&lt;/</span><span style="color: rgba(128, 0, 0, 1)">template</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="bullet-list"</span><span style="color: rgba(0, 0, 255, 1)">&gt;&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
  <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span></pre>
</div>
<span class="cnblogs_code_collapse">View Code</span></div>
<p>Styles</p>
<div class="cnblogs_code"><img src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" id="code_img_closed_a857e854-ffe2-4b4c-8f44-2d22fa3502da" class="code_img_closed"><img src="https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" id="code_img_opened_a857e854-ffe2-4b4c-8f44-2d22fa3502da" class="code_img_opened" style="display: none">
<div id="cnblogs_code_open_a857e854-ffe2-4b4c-8f44-2d22fa3502da" class="cnblogs_code_hide">
<pre><span style="color: rgba(128, 0, 0, 1)">.slider-container </span>{<span style="color: rgba(255, 0, 0, 1)">
  max-width</span>:<span style="color: rgba(0, 0, 255, 1)"> 512px</span>;<span style="color: rgba(255, 0, 0, 1)">
  overflow</span>:<span style="color: rgba(0, 0, 255, 1)"> hidden</span>;<span style="color: rgba(255, 0, 0, 1)">

  .slider {
    width</span>:<span style="color: rgba(0, 0, 255, 1)"> 100%</span>;<span style="color: rgba(255, 0, 0, 1)">

    .slide-list {
      --slides-per-view</span>:<span style="color: rgba(0, 0, 255, 1)"> 1</span>;<span style="color: rgba(255, 0, 0, 1)">
      --slide-gap</span>:<span style="color: rgba(0, 0, 255, 1)"> 0px</span>;<span style="color: rgba(255, 0, 0, 1)">

      display</span>:<span style="color: rgba(0, 0, 255, 1)"> grid</span>;<span style="color: rgba(255, 0, 0, 1)">
      grid-auto-flow</span>:<span style="color: rgba(0, 0, 255, 1)"> column</span>;<span style="color: rgba(255, 0, 0, 1)">
      grid-auto-columns</span>:<span style="color: rgba(0, 0, 255, 1)"> calc(100% / var(--slides-per-view))</span>;<span style="color: rgba(255, 0, 0, 1)">
      margin-left</span>:<span style="color: rgba(0, 0, 255, 1)"> calc(-1 * var(--slide-gap))</span>;<span style="color: rgba(255, 0, 0, 1)">

      .slide {
        padding-left</span>:<span style="color: rgba(0, 0, 255, 1)"> var(--slide-gap)</span>;<span style="color: rgba(255, 0, 0, 1)">

        img {
          display</span>:<span style="color: rgba(0, 0, 255, 1)"> block</span>;<span style="color: rgba(255, 0, 0, 1)">
          width</span>:<span style="color: rgba(0, 0, 255, 1)"> 100%</span>;<span style="color: rgba(255, 0, 0, 1)">
          height</span>:<span style="color: rgba(0, 0, 255, 1)"> auto</span>;<span style="color: rgba(255, 0, 0, 1)">

          aspect-ratio</span>:<span style="color: rgba(0, 0, 255, 1)"> 16 / 9</span>;<span style="color: rgba(255, 0, 0, 1)">
          object-fit</span>:<span style="color: rgba(0, 0, 255, 1)"> cover</span>;
        }<span style="color: rgba(128, 0, 0, 1)">
      }

      @media (width &gt;= 768px) </span>{<span style="color: rgba(255, 0, 0, 1)">
        --slides-per-view</span>:<span style="color: rgba(0, 0, 255, 1)"> 2</span>;<span style="color: rgba(255, 0, 0, 1)">
        --slide-gap</span>:<span style="color: rgba(0, 0, 255, 1)"> 16px</span>;
      }<span style="color: rgba(128, 0, 0, 1)">
    }
  }

  .pagination </span>{<span style="color: rgba(255, 0, 0, 1)">
    margin-top</span>:<span style="color: rgba(0, 0, 255, 1)"> 16px</span>;<span style="color: rgba(255, 0, 0, 1)">

    --max-bullet-count</span>:<span style="color: rgba(0, 0, 255, 1)"> 5</span>;<span style="color: rgba(255, 0, 0, 1)">
    --bullet-size</span>:<span style="color: rgba(0, 0, 255, 1)"> 24px</span>;<span style="color: rgba(255, 0, 0, 1)">
    --bullet-gap</span>:<span style="color: rgba(0, 0, 255, 1)"> 16px</span>;<span style="color: rgba(255, 0, 0, 1)">

    max-width</span>:<span style="color: rgba(0, 0, 255, 1)"> calc(
      (var(--max-bullet-count) * var(--bullet-size)) + ((var(--max-bullet-count) - 1) * var(--bullet-gap))
    )</span>;<span style="color: rgba(255, 0, 0, 1)">
    margin-inline</span>:<span style="color: rgba(0, 0, 255, 1)"> auto</span>;<span style="color: rgba(255, 0, 0, 1)">
    overflow</span>:<span style="color: rgba(0, 0, 255, 1)"> hidden</span>;<span style="color: rgba(255, 0, 0, 1)">

    .bullet-list {
      --active-index</span>:<span style="color: rgba(0, 0, 255, 1)"> 0</span>;<span style="color: rgba(255, 0, 0, 1)"> // JS will fill in

      margin-left</span>:<span style="color: rgba(0, 0, 255, 1)"> calc(50% - (var(--bullet-size) / 2))</span>;<span style="color: rgba(255, 0, 0, 1)">
      transition</span>:<span style="color: rgba(0, 0, 255, 1)"> transform 0.4s</span>;<span style="color: rgba(255, 0, 0, 1)">

      transform</span>:<span style="color: rgba(0, 0, 255, 1)"> translateX(calc(-1 * (var(--active-index) * (var(--bullet-size) + var(--bullet-gap)))))</span>;<span style="color: rgba(255, 0, 0, 1)">

      display</span>:<span style="color: rgba(0, 0, 255, 1)"> flex</span>;<span style="color: rgba(255, 0, 0, 1)">
      gap</span>:<span style="color: rgba(0, 0, 255, 1)"> var(--bullet-gap)</span>;<span style="color: rgba(255, 0, 0, 1)">
      height</span>:<span style="color: rgba(0, 0, 255, 1)"> var(--bullet-size)</span>;<span style="color: rgba(255, 0, 0, 1)">

      .bullet {
        flex-shrink</span>:<span style="color: rgba(0, 0, 255, 1)"> 0</span>;<span style="color: rgba(255, 0, 0, 1)">
        width</span>:<span style="color: rgba(0, 0, 255, 1)"> var(--bullet-size)</span>;<span style="color: rgba(255, 0, 0, 1)">
        height</span>:<span style="color: rgba(0, 0, 255, 1)"> var(--bullet-size)</span>;<span style="color: rgba(255, 0, 0, 1)">
        border-radius</span>:<span style="color: rgba(0, 0, 255, 1)"> 999px</span>;<span style="color: rgba(255, 0, 0, 1)">
        border</span>:<span style="color: rgba(0, 0, 255, 1)"> 1px solid blue</span>;<span style="color: rgba(255, 0, 0, 1)">
        cursor</span>:<span style="color: rgba(0, 0, 255, 1)"> pointer</span>;<span style="color: rgba(255, 0, 0, 1)">

        transition</span>:<span style="color: rgba(0, 0, 255, 1)"> transform 0.4s</span>;<span style="color: rgba(255, 0, 0, 1)">

        &amp;.active {
          background-color</span>:<span style="color: rgba(0, 0, 255, 1)"> lightblue</span>;
        }<span style="color: rgba(128, 0, 0, 1)">

        &amp;:not(.active) </span>{<span style="color: rgba(255, 0, 0, 1)">
          transform</span>:<span style="color: rgba(0, 0, 255, 1)"> scale(0.5)</span>;
        }<span style="color: rgba(128, 0, 0, 1)">

        &amp;:has(+ .active) </span>{<span style="color: rgba(255, 0, 0, 1)">
          transform</span>:<span style="color: rgba(0, 0, 255, 1)"> scale(0.75)</span>;
        }<span style="color: rgba(128, 0, 0, 1)">

        &amp;.active + .bullet </span>{<span style="color: rgba(255, 0, 0, 1)">
          transform</span>:<span style="color: rgba(0, 0, 255, 1)"> scale(0.75)</span>;
        }<span style="color: rgba(128, 0, 0, 1)">
      }
    }
  }
}</span></pre>
</div>
<span class="cnblogs_code_collapse">View Code</span></div>
<p>Scripts</p>
<div class="cnblogs_code"><img src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" id="code_img_closed_06919db9-7720-4ff1-a750-55a604ec7a72" class="code_img_closed"><img src="https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" id="code_img_opened_06919db9-7720-4ff1-a750-55a604ec7a72" class="code_img_opened" style="display: none">
<div id="cnblogs_code_open_06919db9-7720-4ff1-a750-55a604ec7a72" class="cnblogs_code_hide">
<pre>import emblaCarousel from 'embla-carousel'<span style="color: rgba(0, 0, 0, 1)">;

const sliderContainer </span>= document.querySelector&lt;HTMLElement&gt;('.slider-container')!<span style="color: rgba(0, 0, 0, 1)">;
const sliderElement </span>= sliderContainer.querySelector&lt;HTMLElement&gt;('.slider')!<span style="color: rgba(0, 0, 0, 1)">;

const slider </span>=<span style="color: rgba(0, 0, 0, 1)"> emblaCarousel(sliderElement, {
  align: </span>'start'<span style="color: rgba(0, 0, 0, 1)">,
  slidesToScroll: </span>'auto'<span style="color: rgba(0, 0, 0, 1)">,
  inViewThreshold: </span>0.1<span style="color: rgba(0, 0, 0, 1)">,
});

const pagination </span>= document.querySelector&lt;HTMLElement&gt;('.pagination')!<span style="color: rgba(0, 0, 0, 1)">;
const bulletList </span>= pagination.querySelector&lt;HTMLElement&gt;('.bullet-list')!<span style="color: rgba(0, 0, 0, 1)">;
const bulletTemplate </span>= pagination.querySelector('template')!<span style="color: rgba(0, 0, 0, 1)">;
const cachedBullets: HTMLElement[] </span>=<span style="color: rgba(0, 0, 0, 1)"> [];

</span><span style="color: rgba(0, 0, 255, 1)">function</span><span style="color: rgba(0, 0, 0, 1)"> rebuildPagination() {
  const currentViewIndex </span>=<span style="color: rgba(0, 0, 0, 1)"> slider.selectedScrollSnap();
  const viewCount </span>=<span style="color: rgba(0, 0, 0, 1)"> slider.scrollSnapList().length;
  bulletList.style.setProperty(</span>'--active-index'<span style="color: rgba(0, 0, 0, 1)">, currentViewIndex.toString());
  cachedBullets.forEach(bullet </span>=&gt; bullet.classList.remove('active'<span style="color: rgba(0, 0, 0, 1)">));

  </span><span style="color: rgba(0, 0, 255, 1)">if</span> (cachedBullets.length &gt;<span style="color: rgba(0, 0, 0, 1)"> viewCount) {
    const bulletsToRemove </span>=<span style="color: rgba(0, 0, 0, 1)"> cachedBullets.splice(viewCount);
    bulletsToRemove.forEach(bullet </span>=&gt;<span style="color: rgba(0, 0, 0, 1)"> bullet.remove());
  }

  </span><span style="color: rgba(0, 0, 255, 1)">if</span> (cachedBullets.length &lt;<span style="color: rgba(0, 0, 0, 1)"> viewCount) {
    const gap </span>= viewCount -<span style="color: rgba(0, 0, 0, 1)"> cachedBullets.length;
    const bulletsToAdd </span>= <span style="color: rgba(0, 0, 255, 1)">new</span> Array(gap).fill(undefined).map((_, index) =&gt;<span style="color: rgba(0, 0, 0, 1)"> {
      const bulletTemplateFrag </span>= bulletTemplate.content.cloneNode(<span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">) as DocumentFragment;
      const bullet </span>=<span style="color: rgba(0, 0, 0, 1)"> bulletTemplateFrag.firstElementChild as HTMLElement;
      const scrollToIndex </span>= cachedBullets.length +<span style="color: rgba(0, 0, 0, 1)"> index;
      bullet.addEventListener(</span>'click', () =&gt;<span style="color: rgba(0, 0, 0, 1)"> slider.scrollTo(scrollToIndex));
      </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> bullet;
    });
    cachedBullets.push(...bulletsToAdd);
    const frag </span>=<span style="color: rgba(0, 0, 0, 1)"> document.createDocumentFragment();
    bulletsToAdd.forEach(bullet </span>=&gt;<span style="color: rgba(0, 0, 0, 1)"> frag.appendChild(bullet));
    bulletList.appendChild(frag);
  }

  cachedBullets[currentViewIndex].classList.add(</span>'active'<span style="color: rgba(0, 0, 0, 1)">);
}

slider.on(</span>'select'<span style="color: rgba(0, 0, 0, 1)">, rebuildPagination);
slider.on(</span>'init'<span style="color: rgba(0, 0, 0, 1)">, rebuildPagination);
slider.on(</span>'reInit', rebuildPagination);</pre>
</div>
<span class="cnblogs_code_collapse">View Code</span></div>
<p>&nbsp;</p>
<h2>Auto Height</h2>
<p>我们来看一个场景</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250409141627057-276375915.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>粉色是整个 slider，为什么下半段会空空？</p>
<p>因为有隐藏的 slide 内容很多，很高。</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250409140834902-659741754.gif" alt="" class="medium-zoom-image"></p>
<p>后面隐藏的 slide 把整个 slider 撑高了。</p>
<p>显然对用户来说这个体验不 ok，因为这会让用户感到困惑 -- 怎么下面空空的🤔？</p>
<p>我们可以用 Auto Height Plugin 来解决这个问题 (注：<a href="https://www.cnblogs.com/keatkeat/p/16124065.html#:~:text=%E4%B8%8D%E5%90%8C%E7%9A%84%20config-,Auto%20Height,-%E6%AF%8F%E4%B8%AA%20slide" target="_blank">Swiper</a>&nbsp;也有这个功能)。</p>
<p>安装 package</p>
<div class="cnblogs_code">
<pre>yarn add embla-carousel-auto-height</pre>
</div>
<p>import plugin 函数，调用它创建 plugin 实例，再传给 Embla Carousel 就行了。(和 Autoplay Plugin 玩法一样)</p>
<div class="cnblogs_code">
<pre>import autoHeight from 'embla-carousel-auto-height'<span style="color: rgba(0, 0, 0, 1)">;

const slider </span>=<span style="color: rgba(0, 0, 0, 1)"> emblaCarousel(
  sliderElement,
  { align: </span>'start', slidesToScroll: 'auto', inViewThreshold: 0.1<span style="color: rgba(0, 0, 0, 1)"> },
  [autoHeight()],
);</span></pre>
</div>
<p>添加 Styles</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250409142059304-1633576951.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>align-items: flex-start 的目的是让每一个 slide height 变成 hug content (默认是 stretch，会被其它 slide 拉大，这不是我们要的)。</p>
<p>transition 只是为了体验丝滑</p>
<p>效果</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250409143027453-1394687677.gif" alt="" class="medium-zoom-image"></p>
<p>当用户 swipe 到比较高的 slide 时，slider 的 height 才会撑开。</p>
<h3>Auto Height 的计算方式</h3>
<p>上面例子有 6 个 slides (6 张图)，每一个 view 显示两个 slides。</p>
<p>我们删除最后一个 slide，变成 5 个 slides，然后 swipe 到最后一个 view，它长这样</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250409143415801-368104120.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>第 4 个 slide 没有显示所有的内容，这是为什么呢？</p>
<p>我翻了一下源码，发现它使用的是 slideRegistry 来获取当前 view 的 slides，而不是我们上面提过的&nbsp;slidesInView。</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250409143830625-604979339.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>我们测一下</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">function</span><span style="color: rgba(0, 0, 0, 1)"> detect() {
  window.setTimeout(() </span>=&gt;<span style="color: rgba(0, 0, 0, 1)"> {
    console.log(</span>'slidesInView'<span style="color: rgba(0, 0, 0, 1)">, slider.slidesInView());
    console.log(</span>'slideRegistry'<span style="color: rgba(0, 0, 0, 1)">, slider.internalEngine().slideRegistry[slider.selectedScrollSnap()]);
  }, </span>500<span style="color: rgba(0, 0, 0, 1)">);
}
slider.on(</span>'select'<span style="color: rgba(0, 0, 0, 1)">, detect);
slider.on(</span>'init', detect);</pre>
</div>
<p>效果</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250409144256178-675340532.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>可以看到，最后一个 view，slideRegistry 只拿到了 slide index 4 (也就是第 5 个 slide)，所以在计算 auto height 时，它只用了第 5 个 slide 的高度，没有把第 4 个 slide 考量进去。</p>
<p>而第 4 个 slide 比第 5 个高，那最终第 4 个 slide 就被 overflow clip 掉了。</p>
<p>我提了一个&nbsp;<a href="https://github.com/davidjerleke/embla-carousel/discussions/1174" rel="noopener nofollow" target="_blank">Issue</a>，希望有人能解释清楚这是不是他们预想中的体验。</p>
<p>我的猜测是这样，slidesInView 依赖 IntersectionObserver，如果要依靠它的话，需要等到 slide 完全停下来才准，这会导致 auto height 很晚才去 update height，可能这个体验也不 ok。</p>
<p>所以作者在这里做了一个 trade-off。</p>
<p>要达到我预期的效果，唯一的办法就是不要靠&nbsp;IntersectionObserver，而是自己依据 slide 的 boundingClientRect 计算出 slides in view。</p>
<h3>Auto height based on&nbsp;slides in view</h3>
<p>我尝试了一下自己计算 slides in view，果然有点难度，可能就是这个原因 Embla 才不基于&nbsp;slides in view 吧。</p>
<p>这里分享我的尝试</p>
<p>HTML</p>
<div class="cnblogs_code"><img src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" id="code_img_closed_e5e2db8d-b72b-4677-bccc-d706f7d02f03" class="code_img_closed"><img src="https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" id="code_img_opened_e5e2db8d-b72b-4677-bccc-d706f7d02f03" class="code_img_opened" style="display: none">
<div id="cnblogs_code_open_e5e2db8d-b72b-4677-bccc-d706f7d02f03" class="cnblogs_code_hide">
<pre><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slider-container"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
  <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slider"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide-list"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="card"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
          <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">img </span><span style="color: rgba(255, 0, 0, 1)">src</span><span style="color: rgba(0, 0, 255, 1)">="../images/yangmi1.jpg"</span><span style="color: rgba(255, 0, 0, 1)"> alt</span><span style="color: rgba(0, 0, 255, 1)">="yangmi1"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
          <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">p</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>Lorem ipsum dolor sit amet consectetur adipisicing elit. Debitis, quidem!<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">p</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="card"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
          <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">img </span><span style="color: rgba(255, 0, 0, 1)">src</span><span style="color: rgba(0, 0, 255, 1)">="../images/tifa.webp"</span><span style="color: rgba(255, 0, 0, 1)"> alt</span><span style="color: rgba(0, 0, 255, 1)">="tifa"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
          <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">p</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Nemo aliquid consequatur quis quibusdam quam soluta nihil numquam, tempora sit amet?<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">p</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="card"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
          <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">img </span><span style="color: rgba(255, 0, 0, 1)">src</span><span style="color: rgba(0, 0, 255, 1)">="../images/nana.jpg"</span><span style="color: rgba(255, 0, 0, 1)"> alt</span><span style="color: rgba(0, 0, 255, 1)">="nana"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
          <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">p</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Voluptates illo dolore iste rerum eum porro, aperiam assumenda et ad veniam vitae numquam, suscipit, perferendis hic. Ullam voluptatum quos impedit eaque?<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">p</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="card"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
          <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">img </span><span style="color: rgba(255, 0, 0, 1)">src</span><span style="color: rgba(0, 0, 255, 1)">="../images/yangmi2.jpg"</span><span style="color: rgba(255, 0, 0, 1)"> alt</span><span style="color: rgba(0, 0, 255, 1)">="yangmi2"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
          <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">p</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Ducimus eius dignissimos, earum nam architecto molestiae saepe dolore quidem. Placeat, quasi nihil dolor nulla consequatur nam perferendis vero. Fuga consectetur, earum eos, dolore magni consequuntur non officia dolores minus est excepturi.<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">p</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="slide"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">div </span><span style="color: rgba(255, 0, 0, 1)">class</span><span style="color: rgba(0, 0, 255, 1)">="card"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
          <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">img </span><span style="color: rgba(255, 0, 0, 1)">src</span><span style="color: rgba(0, 0, 255, 1)">="../images/yangmi3.jpg"</span><span style="color: rgba(255, 0, 0, 1)"> alt</span><span style="color: rgba(0, 0, 255, 1)">="yangmi3"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
          <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">p</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Illum consequatur laboriosam doloribus tempora atque aperiam?<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">p</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
      <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
  <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">div</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span></pre>
</div>
<span class="cnblogs_code_collapse">View Code</span></div>
<p>Styles</p>
<div class="cnblogs_code"><img src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" id="code_img_closed_d78531d3-7036-4265-9795-efd9de9e7a03" class="code_img_closed"><img src="https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" id="code_img_opened_d78531d3-7036-4265-9795-efd9de9e7a03" class="code_img_opened" style="display: none">
<div id="cnblogs_code_open_d78531d3-7036-4265-9795-efd9de9e7a03" class="cnblogs_code_hide">
<pre><span style="color: rgba(128, 0, 0, 1)">.slider-container </span>{<span style="color: rgba(255, 0, 0, 1)">
  max-width</span>:<span style="color: rgba(0, 0, 255, 1)"> 512px</span>;<span style="color: rgba(255, 0, 0, 1)">
  overflow</span>:<span style="color: rgba(0, 0, 255, 1)"> hidden</span>;<span style="color: rgba(255, 0, 0, 1)">

  .slider {
    width</span>:<span style="color: rgba(0, 0, 255, 1)"> 100%</span>;<span style="color: rgba(255, 0, 0, 1)">
    background-color</span>:<span style="color: rgba(0, 0, 255, 1)"> pink</span>;<span style="color: rgba(255, 0, 0, 1)">

    .slide-list {
      --slides-per-view</span>:<span style="color: rgba(0, 0, 255, 1)"> 1</span>;<span style="color: rgba(255, 0, 0, 1)">
      --slide-gap</span>:<span style="color: rgba(0, 0, 255, 1)"> 0px</span>;<span style="color: rgba(255, 0, 0, 1)">

      display</span>:<span style="color: rgba(0, 0, 255, 1)"> grid</span>;<span style="color: rgba(255, 0, 0, 1)">
      grid-auto-flow</span>:<span style="color: rgba(0, 0, 255, 1)"> column</span>;<span style="color: rgba(255, 0, 0, 1)">
      grid-auto-columns</span>:<span style="color: rgba(0, 0, 255, 1)"> calc(100% / var(--slides-per-view))</span>;<span style="color: rgba(255, 0, 0, 1)">

      align-items</span>:<span style="color: rgba(0, 0, 255, 1)"> flex-start</span>;<span style="color: rgba(255, 0, 0, 1)">
      transition</span>:<span style="color: rgba(0, 0, 255, 1)"> height 0.4s</span>;<span style="color: rgba(255, 0, 0, 1)">

      margin-left</span>:<span style="color: rgba(0, 0, 255, 1)"> calc(-1 * var(--slide-gap))</span>;<span style="color: rgba(255, 0, 0, 1)">

      .slide {
        padding-left</span>:<span style="color: rgba(0, 0, 255, 1)"> var(--slide-gap)</span>;<span style="color: rgba(255, 0, 0, 1)">

        .card {
          img {
            display</span>:<span style="color: rgba(0, 0, 255, 1)"> block</span>;<span style="color: rgba(255, 0, 0, 1)">
            width</span>:<span style="color: rgba(0, 0, 255, 1)"> 100%</span>;<span style="color: rgba(255, 0, 0, 1)">
            height</span>:<span style="color: rgba(0, 0, 255, 1)"> auto</span>;<span style="color: rgba(255, 0, 0, 1)">

            aspect-ratio</span>:<span style="color: rgba(0, 0, 255, 1)"> 16 / 9</span>;<span style="color: rgba(255, 0, 0, 1)">
            object-fit</span>:<span style="color: rgba(0, 0, 255, 1)"> cover</span>;
          }<span style="color: rgba(128, 0, 0, 1)">

          p </span>{<span style="color: rgba(255, 0, 0, 1)">
            padding</span>:<span style="color: rgba(0, 0, 255, 1)"> 16px</span>;<span style="color: rgba(255, 0, 0, 1)">
            line-height</span>:<span style="color: rgba(0, 0, 255, 1)"> 1.5</span>;<span style="color: rgba(255, 0, 0, 1)">
            font-size</span>:<span style="color: rgba(0, 0, 255, 1)"> 18px</span>;
          }<span style="color: rgba(128, 0, 0, 1)">
        }
      }

      @media (width &gt;= 768px) </span>{<span style="color: rgba(255, 0, 0, 1)">
        --slides-per-view</span>:<span style="color: rgba(0, 0, 255, 1)"> 2</span>;<span style="color: rgba(255, 0, 0, 1)">
        --slide-gap</span>:<span style="color: rgba(0, 0, 255, 1)"> 16px</span>;
      }<span style="color: rgba(128, 0, 0, 1)">
    }
  }
}</span></pre>
</div>
<span class="cnblogs_code_collapse">View Code</span></div>
<p>Scripts</p>
<div class="cnblogs_code"><img src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" id="code_img_closed_d2d50777-7366-44f0-a703-5727b9d446d7" class="code_img_closed"><img src="https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" id="code_img_opened_d2d50777-7366-44f0-a703-5727b9d446d7" class="code_img_opened" style="display: none">
<div id="cnblogs_code_open_d2d50777-7366-44f0-a703-5727b9d446d7" class="cnblogs_code_hide">
<pre>const sliderContainer = document.querySelector&lt;HTMLElement&gt;('.slider-container')!<span style="color: rgba(0, 0, 0, 1)">;
const sliderElement </span>= sliderContainer.querySelector&lt;HTMLElement&gt;('.slider')!<span style="color: rgba(0, 0, 0, 1)">;

const sliderOptions: EmblaOptionsType </span>=<span style="color: rgba(0, 0, 0, 1)"> {
  align: </span>'start'<span style="color: rgba(0, 0, 0, 1)">,
  slidesToScroll: </span>'auto'<span style="color: rgba(0, 0, 0, 1)">,
  inViewThreshold: </span>0.1<span style="color: rgba(0, 0, 0, 1)">,
};
const slider </span>=<span style="color: rgba(0, 0, 0, 1)"> emblaCarousel(sliderElement, sliderOptions);

</span><span style="color: rgba(0, 0, 255, 1)">function</span><span style="color: rgba(0, 0, 0, 1)"> updateHeight() {
  const viewIndex </span>=<span style="color: rgba(0, 0, 0, 1)"> slider.selectedScrollSnap();
  const slideList </span>=<span style="color: rgba(0, 0, 0, 1)"> slider.containerNode();
  const slideListElementRect </span>=<span style="color: rgba(0, 0, 0, 1)"> slideList.getBoundingClientRect();
  const slideRects </span>= slider.slideNodes().map(slide =&gt;<span style="color: rgba(0, 0, 0, 1)"> slide.getBoundingClientRect());
  const lastSlideRects </span>= slideRects[slideRects.length - 1<span style="color: rgba(0, 0, 0, 1)">];

  let viewCoordinateXEnd </span>= Math.round((viewIndex + 1) *<span style="color: rgba(0, 0, 0, 1)"> slideListElementRect.width);
  </span><span style="color: rgba(0, 0, 255, 1)">if</span> (sliderOptions.containScroll !== <span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">) {
    const lastSlideCoordinateXEnd </span>= Math.round(lastSlideRects.left - slideListElementRect.left +<span style="color: rgba(0, 0, 0, 1)"> lastSlideRects.width);
    viewCoordinateXEnd </span>=<span style="color: rgba(0, 0, 0, 1)"> Math.min(viewCoordinateXEnd, lastSlideCoordinateXEnd);
  }
  const viewCoordinateX </span>=<span style="color: rgba(0, 0, 0, 1)"> {
    start: viewCoordinateXEnd </span>- slideListElementRect.width + 1<span style="color: rgba(0, 0, 0, 1)">,
    end: viewCoordinateXEnd,
  };

  const intersectingSlides </span>= slideRects.filter(rect =&gt;<span style="color: rgba(0, 0, 0, 1)"> {
    const left </span>= rect.left -<span style="color: rgba(0, 0, 0, 1)"> slideListElementRect.left;
    const slideCoordinateX </span>=<span style="color: rgba(0, 0, 0, 1)"> {
      start: Math.round(left </span>+ 1<span style="color: rgba(0, 0, 0, 1)">),
      end: Math.round(left </span>+<span style="color: rgba(0, 0, 0, 1)"> rect.width),
    };
    const isIntersecting </span>=<span style="color: rgba(0, 0, 0, 1)">
      (slideCoordinateX.start </span>&gt;= viewCoordinateX.start &amp;&amp; slideCoordinateX.start &lt;= viewCoordinateX.end) ||<span style="color: rgba(0, 0, 0, 1)">
      (slideCoordinateX.end </span>&gt;= viewCoordinateX.start &amp;&amp; slideCoordinateX.end &lt;= viewCoordinateX.end) ||<span style="color: rgba(0, 0, 0, 1)">
      (slideCoordinateX.start </span>&lt; viewCoordinateX.start &amp;&amp; slideCoordinateX.end &gt;<span style="color: rgba(0, 0, 0, 1)"> viewCoordinateX.end);
    </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> isIntersecting;
  });

  const height </span>= Math.max(...intersectingSlides.map(rect =&gt;<span style="color: rgba(0, 0, 0, 1)"> rect.height));
  slideList.style.height </span>=<span style="color: rgba(0, 0, 0, 1)"> `${height}px`;
}

slider.on(</span>'init'<span style="color: rgba(0, 0, 0, 1)">, updateHeight);
slider.on(</span>'reInit'<span style="color: rgba(0, 0, 0, 1)">, updateHeight);
slider.on(</span>'select', updateHeight);</pre>
</div>
<span class="cnblogs_code_collapse">View Code</span></div>
<p>效果</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250409202243493-2032989656.gif" alt="" class="medium-zoom-image"></p>
<p>和 Auto Heigh Plugin 的区别是在最后一个 view，它的第 4 个 slide 会被 overflow，我的不会。</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250409202342173-862465446.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>我解释一下实现思路：</p>
<p>首先，拿三个信息</p>
<ol>
<li>slide-list boundingClientRect</li>
<li>slide&nbsp;boundingClientRect</li>
<li>view index</li>
</ol>
<p>然后模拟计算出这个 view index 内会出现哪些 slides，然后拿最高的 slide 就可以了。</p>
<p>里面会出现一个程咬金 --&nbsp;containScroll</p>
<p>它是一个 options</p>
<div class="cnblogs_code">
<pre>const sliderOptions: EmblaOptionsType =<span style="color: rgba(0, 0, 0, 1)"> {
  containScroll: </span>'trimSnaps'<span style="color: rgba(0, 0, 0, 1)">,
};</span></pre>
</div>
<p>有三个值可以放，默认是 'trimSnaps'，另外一个 'keepSnaps'，还有一个是 false。</p>
<p>我不清楚 'keepSnaps' 和 'trimSnaps'&nbsp;有什么区别 (没找到文档，看源码有点昏)，但我知道&nbsp;trimSnaps 和 false 在体验上有区别。</p>
<p>上述例子有 5 个 slides，每一个 view 可以显示两个 slides，一共有三个 views。</p>
<p>关键在第三个 view 长什么样</p>
<p>containScroll: false 长这样</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250409203313240-546398609.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>因为有三个 view，每个 view 显示两个 slides，那最后一个 view 理应显示第 5 和第 6 个 slide。</p>
<p>不过我们只有 5 个 slides，所以第 6 个 slide 的位置就留空了。</p>
<p>containScroll: 'trimSnaps' 长这样</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250409203528607-1018445145.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>它不会留空，第三个 view 会显示第 4 和第 5 个 slide。</p>
<p>题外话：</p>
<p>我在 Swiper 文章里有提到一个问题 --&nbsp;<a href="https://www.cnblogs.com/keatkeat/p/Auto%20Height%20and%20Same%20Height" rel="noopener nofollow" target="_blank">Auto Height and Same Height</a>。</p>
<p>在 Embla 也会遇到相同的问题，我们可以用同样的解决方案，只不过那个方案依赖 slides in view，</p>
<p>放过来 Embla 的话，要嘛我们自己计算 slides in view，要嘛学 Auto Height Plugin 用&nbsp;slideRegistry 就好。</p>
<h2>Handle content resize</h2>
<p>假如我们 slide 里面有动态内容会导致 height 增加，那我们需要特别处理，看例子：</p>
<p>加一个 more content 和 read more button</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250409145130802-108861946.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>点击 button 显示 more content</p>
<div class="cnblogs_code">
<pre>const readMoreBtn = document.querySelector&lt;HTMLElement&gt;('.read-more-btn')!<span style="color: rgba(0, 0, 0, 1)">;

readMoreBtn.addEventListener(</span>'click', () =&gt;<span style="color: rgba(0, 0, 0, 1)"> {
  const moreContent </span>= document.querySelector&lt;HTMLElement&gt;('.more-content')!<span style="color: rgba(0, 0, 0, 1)">;
  moreContent.style.display </span>= 'revert'<span style="color: rgba(0, 0, 0, 1)">;
});</span></pre>
</div>
<p>效果</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250409145329114-2078376240.gif" alt="" class="medium-zoom-image"></p>
<p>完全没有反应，显然&nbsp;Auto Height Plugin 默认是不会监听 resize 的。</p>
<p>相关&nbsp;<a href="https://github.com/davidjerleke/embla-carousel/discussions/1142" rel="noopener nofollow" target="_blank">Issue –&nbsp;Auto Height and slide changing height</a></p>
<p>作者给的解方是透过 EmblaCarousel.reInit 方法</p>
<div class="cnblogs_code">
<pre>readMoreBtn.addEventListener('click', () =&gt;<span style="color: rgba(0, 0, 0, 1)"> {
  const moreContent </span>= document.querySelector&lt;HTMLElement&gt;('.more-content')!<span style="color: rgba(0, 0, 0, 1)">;
  moreContent.style.display </span>= 'revert'<span style="color: rgba(0, 0, 0, 1)">;

  slider.reInit(); </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> resize 后调用 reInit 方法通知 Auto Height Plugin</span>
});</pre>
</div>
<p>这样就行了。(note：感觉有点小题大做，但也没有其它管道了，或许作者是想统一接口，也可能 reInit 内部已经做了很多优化，可以不用担心性能问题)</p>
<p>效果</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250409150023310-1132410405.gif" alt="" class="medium-zoom-image"></p>
<h3>连续 Next 体验问题</h3>
<p>这个问题我在 Swiper&nbsp;<a href="https://www.cnblogs.com/keatkeat/p/16124065.html#:~:text=%E6%98%AF%E6%9C%80%E5%A4%A7%E5%80%BC%E4%BA%86.-,%E8%BF%9E%E7%BB%AD%20Next%20%E4%BD%93%E9%AA%8C%E9%97%AE%E9%A2%98,-auto%20height%20%E6%AF%8F%E6%AC%A1" target="_blank">那篇</a>也有提过。</p>
<p>auto height 每次换 slide 时都会改变 slider 高度，如果 navigation / pagination button 依赖这个高度，那体验就会被影响。</p>
<p><img src="https://img2023.cnblogs.com/blog/641294/202308/641294-20230808173121721-911321289.gif" alt="" class="medium-zoom-image"></p>
<p>上面例子中，我们无法连续按 next button，因为它会跳上跳下。</p>
<p>解决思路有两个方向。</p>
<p>第一，navigation button 不要依赖 slide 的高度，比如我们把它从 slider 下面移到 slider 左边。(但有时候空间太少，真的没有地方可以放)</p>
<p>第二，让这个 auto height 慢一点触发，比如 next 了一秒后才 update height。</p>
<p>for 第二个方向，我们可以这样写</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">function</span><span style="color: rgba(0, 0, 0, 1)"> updateHeight() {
  let slidesInView </span>=<span style="color: rgba(0, 0, 0, 1)"> slider.slidesInView();
  </span><span style="color: rgba(0, 0, 255, 1)">if</span> (slidesInView.length === 0<span style="color: rgba(0, 0, 0, 1)">) {
    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> init or reInit 时 slidesInView 可能是 empty array</span>
    slidesInView =<span style="color: rgba(0, 0, 0, 1)"> slider.internalEngine().slideRegistry[slider.selectedScrollSnap()];
  }
  const slideRects </span>= slider.internalEngine().slideRects.filter((_, index) =&gt;<span style="color: rgba(0, 0, 0, 1)"> slidesInView.includes(index));
  const height </span>= Math.max(...slideRects.map(rect =&gt;<span style="color: rgba(0, 0, 0, 1)"> rect.height));
  slider.containerNode().style.height </span>=<span style="color: rgba(0, 0, 0, 1)"> `${height}px`;
}

slider.on(</span>'init'<span style="color: rgba(0, 0, 0, 1)">, updateHeight);
slider.on(</span>'reInit'<span style="color: rgba(0, 0, 0, 1)">, updateHeight);
slider.on(</span>'settle', updateHeight);</pre>
</div>
<p>不需要使用&nbsp;Auto Height Plugin，单纯 Embla 底层 API 就可以了。(其实 Auto Height Plugin 内部也是调用这几个 API 实现的)</p>
<p>settle 事件会在 slide moving transition 结束后触发，非常非常的晚。</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250409163839748-137626450.gif" alt="" class="medium-zoom-image"></p>
<p>&nbsp;</p>
<h2>Add / Remove / Sort Slides</h2>
<p>没有 add / remove / sort 接口，我们要增加 / 减少 / 改 slide 的位置的话，直接 DOM manipulation 就好。</p>
<p>DOM manipulation 完后调用 EmblaCarousel.reInit() 就可以了。</p>
<p>总之，它就只有一个接口，不管是 change options, change plugin, change size, change elements 都是调用 reInit 就对了。</p>
<p>&nbsp;</p>
<h2>CSS 优化手法</h2>
<p>参考官网的&nbsp;<a href="https://codesandbox.io/p/sandbox/txs9c5?file=%2Fsrc%2Fcss%2Fembla.css%3A43%2C15" rel="noopener nofollow" target="_blank">example</a>，我们会看到几个 CSS 优化手法。</p>
<p>HTML 结构长这样</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250407170900870-939972374.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>CSS</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250407170735358-967878858.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>touch-action 是告诉游览器，它只负责 pan-y (vertical scroll) 和 pinch-zoom (scale 放大) 就好，其它手势交给我们负责。</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250407171024898-491543438.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>transform: translate3d(0, 0, 0); 是让游览器使用 GPU 来渲染每个 slide。</p>
<p>embla__container 肯定会使用 GPU 渲染，因为它负责 transform 嘛，slides 则不会，所以要快就要特别声明。</p>
<p><img src="https://img2024.cnblogs.com/blog/641294/202504/641294-20250407165657225-664343833.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>touch-action: manipulation 是告诉游览器，这个 button 只需要最基本的 tap，不需要其它手势。</p>
<p>Embla Carousel 的其中一个卖点就是快，所以它的 example 尽可能优化到极致。</p>
<p>但我们一般上不需要跟着这么做，性能优化请等到用户有感觉到慢了才做。</p>
<p>&nbsp;</p>
<h2>当 Emble Carousel 遇上 YouTube Iframe</h2>
<p>和 Swiper 一模一样的问题，解决方法也一模一样，在 Swiper&nbsp;<a href="https://www.cnblogs.com/keatkeat/p/16124065.html#:~:text=%E5%BD%93%20Swiper%20%E9%81%87%E4%B8%8A%20YouTube%20Iframe" target="_blank">那篇</a>已经讲解过了，这里就不复述了。</p>
<p>&nbsp;</p>
<h2>总结</h2>
<p>本篇简单的介绍了 Slider Library 的明日之星 – Embal Carousel。</p>
<p>希望它赶快取代 Swiper，不然我写这篇干嘛呢...😊</p>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

		</div>
		<div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.06912059117129629" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-10 00:42">2025-04-10 00:42</span>&nbsp;
<a href="https://www.cnblogs.com/keatkeat">兴杰</a>&nbsp;
阅读(<span id="post_view_count">7</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18817678" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18817678);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18817678', targetLink: 'https://www.cnblogs.com/keatkeat/p/18817678', title: 'JavaScript Library – Embla Carousel' })">举报</a>
</div>
	