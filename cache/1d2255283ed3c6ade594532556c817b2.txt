
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Wanderpurr/p/19012189" title="发布于 2025-07-30 08:28">
    <span role="heading" aria-level="2">搭建imx6ull环境--tftp加载镜像，nfs挂载根文件系统</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        <img src="https://img2024.cnblogs.com/blog/3387724/202507/3387724-20250730082640788-250301026.png" alt="搭建imx6ull环境--tftp加载镜像，nfs挂载根文件系统" class="desc_img">
        使用网线直连开发板和电脑，通过tftp从虚拟机中加载镜像，并通过nfs挂载根文件系统
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h3 id="1环境介绍">1.环境介绍</h3>
<p>开发板：野火imx6ullPro邮票孔EMMC<br>
主机：Win11<br>
虚拟机：virtualbox<br>
虚拟机版本：Ubuntu20.04<br>
Windows远程连接虚拟机</p>
<blockquote>
<p>由于这个板子比较老，野火提供的虚拟机是基于18.04的这个版本不再支持vscode环境，于是就想着开始学习驱动从头到尾先搭建一下环境，中间也是折腾了很久，所以都记录一下</p>
</blockquote>
<p>环境：<br>
准备从SD卡加载uboot,通过tftp从Ubuntu中加载内核镜像，设备树，并通过nfs将根文件系统挂载到Ubuntu上<br>
开发板直连电脑，虚拟机通过NAT连接无线网卡，保证虚拟机可以连接外网，桥接有线网卡，让有线网卡、Windows、开发板在同一局域网内<br>
vscode通过SSH远程连接虚拟机，在Windows环境下开发比较舒服</p>
<h3 id="2虚拟机环境搭建并配置ssh连接">2.虚拟机环境搭建，并配置SSH连接</h3>
<p>可以看我这篇博客<br>
<a href="https://blog.csdn.net/biglonglong551/article/details/146298012?spm=1001.2014.3001.5501" target="_blank" rel="noopener nofollow">创建虚拟机并配置远程环境</a></p>
<h3 id="3uboot编译">3.uboot编译</h3>
<h4 id="31源码下载">3.1源码下载</h4>
<pre><code class="language-bash">#环境下载
sudo apt install make git gcc-arm-none-eabi gcc bison flex libssl-dev dpkg-dev lzop libncurses5-dev
#直接克隆野火提供的仓库
git clone -b ebf_v2020_10_imx https://gitee.com/Embedfire/ebf_linux_uboot --depth 1
</code></pre>
<h4 id="32编译uboot">3.2编译uboot</h4>
<ol>
<li>创建编译内核脚本</li>
</ol>
<pre><code class="language-bash">touch build_uboot.sh
chmod 0777 build_uboot.sh
</code></pre>
<ol start="2">
<li>向文件中写入如下内容</li>
</ol>
<pre><code class="language-bash">make distclean
make ARCH=arm CROSS_COMPILE=arm-none-eabi- mx6ull_fire_mmc_defconfig
</code></pre>
<ol start="3">
<li>查看生成的固件</li>
</ol>
<pre><code class="language-bash">ls u-boot-dtb.imx
</code></pre>
<h4 id="33烧录uboot">3.3烧录uboot</h4>
<ol>
<li>sd卡插到读卡器上，挂载到Ubuntu上<br>
<img src="https://img2024.cnblogs.com/blog/3387724/202507/3387724-20250730082403828-1229573111.png" alt="挂载读卡器" loading="lazy"></li>
</ol>
<p>设备名称可能不一样，可以插拔读卡器看一下变化的是哪个，哪个就是我们的读卡器</p>
<ol start="2">
<li>查看Ubuntu上挂载的分区，输入lsblk<br>
<img src="https://img2024.cnblogs.com/blog/3387724/202507/3387724-20250730082412545-718087776.png" alt="查看分区" loading="lazy"></li>
</ol>
<p>一般不会是sda,根据自己情况确定</p>
<ol start="3">
<li>进入uboot源码目录，执行如下命令</li>
</ol>
<pre><code class="language-bash">sudo dd iflag=dsync oflag=dsync if=u-boot-dtb.imx of=/dev/sdb seek=2
</code></pre>
<ol start="4">
<li>取下设备将SD卡插入开发板就能看到uboot启动了</li>
</ol>
<h3 id="4网络环境搭建">4.网络环境搭建</h3>
<p>开发板，主机和虚拟机可以通过网线通信，需要设置三者有共同的网关和掩码，三者在同一网段的不同ip</p>
<p>操作之前关闭电脑所有电脑管家以及防火墙</p>
<h4 id="41windows网络配置">4.1Windows网络配置</h4>
<ol>
<li>
<p>打开控制面板-&gt;网络和Internet-&gt;网络和共享中心-&gt;更改适配器设置，找到我们的有线网卡<br>
<img src="https://img2024.cnblogs.com/blog/3387724/202507/3387724-20250730082423818-1291225263.png" alt="有线网卡" loading="lazy"></p>
</li>
<li>
<p>右键属性-&gt;Internet协议版本4（TCP/IPV4）<br>
<img src="https://img2024.cnblogs.com/blog/3387724/202507/3387724-20250730082433598-349169591.png" alt="配置主机网络" loading="lazy"></p>
</li>
</ol>
<p>可随意配置网段，只要保证三者在同一网段即可，不懂得可以按照我的配置</p>
<h4 id="42ubuntu网络配置">4.2Ubuntu网络配置</h4>
<ol>
<li>
<p>Ubuntu关机，添加网卡选择桥接模式，桥接的网卡一定是<strong>上边配置的有线网卡名字</strong><br>
<img src="https://img2024.cnblogs.com/blog/3387724/202507/3387724-20250730082442217-1912715043.png" alt="添加虚拟机网络" loading="lazy"></p>
</li>
<li>
<p>进入虚拟机网络配置<br>
<img src="https://img2024.cnblogs.com/blog/3387724/202507/3387724-20250730082450828-1349695219.png" alt="选择网络配置" loading="lazy"></p>
</li>
<li>
<p>配置网络<br>
<img src="https://img2024.cnblogs.com/blog/3387724/202507/3387724-20250730082458369-1403278226.png" alt="配置桥接网络" loading="lazy"></p>
</li>
<li>
<p>验证网络<br>
虚拟机终端输入<em>ifconfig</em>，查看是否有我们配置的网络</p>
</li>
</ol>
<h4 id="43开发板网络配置">4.3开发板网络配置</h4>
<p>开发板进入uboot，输入如下命令</p>
<pre><code class="language-bash">setenv ipaddr 192.168.100.30 
setenv ethaddr 00:04:9f:04:d2:35 
setenv gatewayip 192.168.100.1 
setenv netmask 255.255.255.0 
setenv serverip 192.168.100.30  
saveenv 
</code></pre>
<p>分别是ip地址，mac地址，网关，掩码，虚拟机ip，保存环境变量</p>
<p>验证能与虚拟机跑通</p>
<pre><code class="language-bash">ping 192.168.100.30
</code></pre>
<p>显示如下即可<br>
<img src="https://img2024.cnblogs.com/blog/3387724/202507/3387724-20250730082509441-526086482.png" alt="开发板ping虚拟机" loading="lazy"></p>
<h3 id="5kernel编译">5.kernel编译</h3>
<h4 id="51源码下载">5.1源码下载</h4>
<pre><code class="language-bash">#环境下载
sudo apt install  gcc-arm-linux-gnueabihf
#直接克隆野火提供的内核仓库
git clone -b ebf_4.19.35_imx6ul https://github.com/Embedfire/ebf_linux_kernel.git --depth 1
</code></pre>
<h4 id="52编译内核">5.2编译内核</h4>
<ol>
<li>编译脚本</li>
</ol>
<pre><code class="language-bash">#进入内核后执行
touch build_kernel.sh
chmod 0777 build_kernel.sh
</code></pre>
<ol start="2">
<li>向build_kernel.sh中写入</li>
</ol>
<pre><code class="language-bash">#清除编译
make mrproper
# 编译内核
make ARCH=arm npi_v7_defconfig
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -j3
</code></pre>
<ol start="3">
<li>查看内核和设备树</li>
</ol>
<pre><code class="language-bash">#应该会出现这两个文件，记住这两个文件位置
ls arch/arm/boot/zImage
ls arch/arm/boot/dts/imx6ull-mmc-npi.dtb
</code></pre>
<h3 id="6tftp加载内核和设备树">6.tftp加载内核和设备树</h3>
<ol>
<li>安装环境</li>
</ol>
<pre><code class="language-bash">sudo apt-get install tftp-hpa tftpd-hpa  
sudo apt-get install xinetd
</code></pre>
<ol start="2">
<li>创建目录</li>
</ol>
<pre><code class="language-bash">cd ~
mkdir tftp
chmod 0777 tftp
</code></pre>
<ol start="3">
<li>配置TFTP</li>
</ol>
<pre><code>sudo vim /etc/xinetd.d/tftp

# 输入如下内容,路径根据自己的来，要绝对路径
server tftp 
{ 
    socket_type    = dgram 
    protocol       = udp 
    wait           = yes 
    user           = root 
    server         = /usr/sbin/in.tftpd 
    server_args    = -s /home/wanderpurr/tftp/ 
    disable        = no 
    per_source     = 11 
    cps            = 100 2 
    flags          = IPv4 
}
</code></pre>
<ol start="4">
<li>重启TFTP服务</li>
</ol>
<pre><code class="language-bash">sudo service tftpd-hpa start
</code></pre>
<ol start="5">
<li>重置服务器</li>
</ol>
<pre><code class="language-bash">sudo vim /etc/default/tftpd-hpa

# 修改成如下内容，路径还是按自己的来
TFTP_USERNAME="tftp"
TFTP_DIRECTORY="/home/wanderpurr/tftp"
TFTP_ADDRESS=":69"
TFTP_OPTIONS="-l -c -s"
</code></pre>
<ol start="6">
<li>重启TFTP服务</li>
</ol>
<pre><code class="language-bash">sudo service tftpd-hpa restart
</code></pre>
<ol start="7">
<li>将上边我们编译生成的内核镜像和设备树拷贝到我们的tftp目录</li>
<li>修改内核和设备树权限为777</li>
<li>测试加载镜像,在uboot中输入如下内容重启</li>
</ol>
<pre><code class="language-bash">setenv bootcmd 'tftp 80800000 zImage; tftp 83000000 imx6ull-mmc-npi.dtb; bootz 80800000 - 83000000'
saveenv
</code></pre>
<p>重启后会看到如下<br>
<img src="https://img2024.cnblogs.com/blog/3387724/202507/3387724-20250730082525942-808670387.png" alt="加载内核和设备树" loading="lazy"></p>
<p>后面会启动内核，但缺少根文件系统会启动失败</p>
<h3 id="7根文件系统编译">7.根文件系统编译</h3>
<ol>
<li>下载源码安装环境<br>
源码可以去官网下载即可<a href="https://busybox.net/" target="_blank" rel="noopener nofollow">busybox官网</a>，根文件系统不向内核和uboot有很多板级配置需要向供应商所要指定版本<br>
安装环境</li>
</ol>
<pre><code class="language-bash">sudo apt-get install zlib1g-dev unzip gcc g++ aptitude lib32stdc++6-4.8-dbg build-essential libncurses5 libncurses5-dev u-boot-tools traceroute  gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf -y
</code></pre>
<ol start="2">
<li>配置根文件系统</li>
</ol>
<pre><code class="language-bash">make  ARCH=arm  CROSS_COMPILE=arm-linux-gnueabihf- menuconfig
</code></pre>
<p>配置如下操作</p>
<blockquote>
<ol>
<li>Settings -&gt; Build static binary (no shared libs)   勾选上</li>
<li>Linux System Utilities-&gt;mdev                              勾选上</li>
<li>Settings -&gt; vi-style line editing commands         勾选上</li>
<li>Linux Module Utilities  -&gt; Simplified modutils     取消勾选</li>
</ol>
</blockquote>
<ol start="3">
<li>编译</li>
</ol>
<pre><code class="language-bash">make  ARCH=arm  CROSS_COMPILE=arm-linux-gnueabihf-
#指定安装路径为家目录下rootfs
make  ARCH=arm  CROSS_COMPILE=arm-linux-gnueabihf-  CONFIG_PREFIX=/home/wanderpurr/rootfs  install 
</code></pre>
<ol start="4">
<li>补全缺失文件</li>
</ol>
<pre><code class="language-bash">cd ~/rootfs
mkdir dev etc lib var proc tmp home root mnt sys
cd ./dev
sudo mknod console c 5 1
sudo mknod null c 1 3
cd ../etc
echo console::askfirst:-/bin/sh &gt; inittab
</code></pre>
<h3 id="8nfs挂载根文件系统">8.nfs挂载根文件系统</h3>
<p>上边已经将根文件系统制作好了，下面来通过网线挂载起来</p>
<ol>
<li>安装环境</li>
</ol>
<pre><code class="language-bash">sudo apt-get install nfs-kernel-server rpcbind
</code></pre>
<ol start="2">
<li>添加根文件系统</li>
</ol>
<pre><code class="language-bash">sudo echo "/home/wanderpurr/rootfs *(rw,sync,no_root_squash,no_subtree_check)"  &gt;&gt; /etc/exports
</code></pre>
<ol start="3">
<li>重启nfs</li>
</ol>
<pre><code class="language-bash">sudo /etc/init.d/nfs-kernel-server restart
</code></pre>
<ol start="4">
<li>修改uboot参数</li>
</ol>
<pre><code class="language-bash">#板子IP，虚拟机IP以及根文件系统路径根据自己的配置好
setenv bootargs 'console=ttymxc0,115200 root=/dev/nfs nfsroot=192.168.100.30:/home/wanderpurr/rootfs,proto=tcp,nfsvers=4 rw ip=192.168.100.50:192.168.100.30:192.168.100.1:255.255.255.0::eth0:off'
saveenv
</code></pre>
<ol start="5">
<li>重启开发板<br>
<img src="https://img2024.cnblogs.com/blog/3387724/202507/3387724-20250730082543451-1165801181.png" alt="启动成功" loading="lazy"></li>
</ol>
<p>这里就配置结束了，我们开发板的根目录就是虚拟机的rootfs目录，这样传输文件就非常方便了</p>
<h3 id="结语">结语</h3>
<p>配置过程中可能出现很多问题，我断断续续搞了一周，但每填一个坑都是对自己的一种成长</p>
<p>参考：<br>
这个写的非常全，有需要从头自己配置的可以参考一下这个，但注意他bootargs最后网口挖了坑，让我找了好几天<br>
<a href="https://www.eet-china.com/mp/a68264.html" target="_blank" rel="noopener nofollow">i.MX6ULL开发板uboot/kernel/rootfs移植傻瓜教程【建议收藏】-电子工程专辑</a><br>
以及野火官方文档<br>
<a href="https://doc.embedfire.com/linux/imx8mm/build_and_deploy/zh/latest/index.html" target="_blank" rel="noopener nofollow">[野火]嵌入式Linux镜像构建与部署——基于LubanCat-IMX8MMini开发板 — [野火]嵌入式Linux镜像构建与部署——基于LubanCat-i.MX8MMini开发板 文档</a></p>
<p>有问题欢迎留言</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-30 08:28">2025-07-30 08:28</span>&nbsp;
<a href="https://www.cnblogs.com/Wanderpurr">Wanderpurr</a>&nbsp;
阅读(<span id="post_view_count">15</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19012189);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19012189', targetLink: 'https://www.cnblogs.com/Wanderpurr/p/19012189', title: '搭建imx6ull环境--tftp加载镜像，nfs挂载根文件系统' })">举报</a>
</div>
        