<!----> <meta itemprop="headline" content="大声点回答我：token应该存储在cookie还是localStorage上？"> <meta itemprop="keywords" content="前端,JavaScript,面试"> <meta itemprop="datePublished" content="2024-11-04T02:39:38.000Z"> <meta itemprop="image" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-128.png~tplv-t2oaga2asx-image.image"> <div itemprop="author" itemscope="itemscope" itemtype="http://schema.org/Person"><meta itemprop="name" content="某某某人"> <meta itemprop="url" content="https://juejin.cn/user/3649990025815853"></div> <div itemprop="publisher" itemscope="itemscope" itemtype="http://schema.org/Organization"><meta itemprop="name" content="掘金"> <div itemprop="logo" itemscope="itemscope" itemtype="https://schema.org/ImageObject"><meta itemprop="url" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-white-180.png~tplv-t2oaga2asx-image.image"> <meta itemprop="width" content="180"> <meta itemprop="height" content="180"></div></div> <h1 class="article-title" data-v-7cdd11fb="">
            大声点回答我：token应该存储在cookie还是localStorage上？
            <!----> <!----></h1> <div class="author-info-block block-hidden" data-v-7cdd11fb=""><div class="author-info-box" data-v-7cdd11fb=""><div class="author-name" data-v-7cdd11fb=""><a href="/user/3649990025815853/posts" target="_blank" rel="" class="jj-link username username ellipsis" data-v-65b50b51="" data-v-1800aadb="" data-v-7cdd11fb=""><span class="name" style="max-width:160px;" data-v-65b50b51="" data-v-1800aadb="">
    某某某人
  </span> <!----> <!----> <!----> </a></div> <div class="meta-box" data-v-7cdd11fb=""><time datetime="2024-11-04T02:39:38.000Z" title="Mon Nov 04 2024 02:39:38 GMT+0000 (Coordinated Universal Time)" class="time" data-v-7cdd11fb="">
                    2024-11-04
                  </time> <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="read-icon" data-v-7cdd11fb=""><path d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor" data-v-7cdd11fb=""></path><circle cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor" data-v-7cdd11fb=""></circle></svg> <span class="views-count" data-v-7cdd11fb="">
                    27,115
                  </span> <span class="read-time" data-v-7cdd11fb=""><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" data-v-7cdd11fb=""><rect width="16" height="16" fill="none" data-v-7cdd11fb=""></rect><circle cx="8" cy="8" r="5.65625" stroke="#8A919F" data-v-7cdd11fb=""></circle><path d="M7.69141 5.18652V8.30924H10.8141" stroke="#8A919F" stroke-linecap="round" stroke-linejoin="round" data-v-7cdd11fb=""></path></svg>
                    阅读4分钟
                  </span> <!----></div></div> <div style="flex:1;" data-v-7cdd11fb=""></div> <!----> <!----></div> <!----> <!----> <!----> <div id="article-root" itemprop="articleBody" class="main" data-v-7cdd11fb=""><div class="article-viewer markdown-body cache result"><h2 data-id="heading-0">背景</h2>
<p>前置文章：<a href="https://juejin.cn/post/7360976761838960640" target="_blank" title="https://juejin.cn/post/7360976761838960640">浏览器: cookie机制完全解析</a></p>
<p>在考虑token是否应该存储在cookie或localStorage中时，我们需要综合考虑安全性、便利性、两者的能力边界以及设计目的等因素。
<img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/afd17a5de5d8440ba50f1d468a381f8e~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5p-Q5p-Q5p-Q5Lq6:q75.awebp?rk3s=f64ab15b&amp;x-expires=1737958112&amp;x-signature=oBoPgQytb4h7a%2F2yZwrllklBDoY%3D" alt="截屏2024-10-14 15.59.32.png" loading="lazy"></p>
<h3 data-id="heading-1">安全性：</h3>
<p><strong>Cookies的优势</strong>: <br></p>
<pre><code class="hljs language-javascript" lang="javascript"><span class="hljs-title class_">Set</span>-<span class="hljs-title class_">Cookie</span>: token=abc123; <span class="hljs-title class_">HttpOnly</span>;<span class="hljs-title class_">Secure</span>;<span class="hljs-title class_">SameSite</span>=<span class="hljs-title class_">Strict</span>;<span class="hljs-title class_">Domain</span>=example.<span class="hljs-property">com</span>; <span class="hljs-title class_">Path</span>=/
</code></pre>
<ul>
<li>
<p><strong>HttpOnly</strong>：将&nbsp;HttpOnly&nbsp;属性设置为 true 可以防止 JavaScript 读取 cookie，从而有效防止 XSS（跨站脚本）攻击读取 token。这一特性使得 cookies 在敏感信息存储上更具安全性。</p>
</li>
<li>
<p><strong>Secure</strong>：设置&nbsp;Secure&nbsp;属性后，cookie 只会在 HTTPS 连接时发送，从而防止中间人攻击。这确保了即使有人截获请求，token 也不会被明文传输。</p>
</li>
<li>
<p><strong>SameSite</strong>：SameSite&nbsp;属性减少了 CSRF（跨站请求伪造）攻击的风险，通过指示浏览器在同一站点请求时才发送 cookie。</p>
</li>
<li>
<p><strong>Domain</strong>&nbsp;和&nbsp;<strong>Path</strong>：这些属性限制了 cookie 的作用范围，例如仅在特定子域或者路径下生效，进一步提高安全性。</p>
</li>
</ul>
<p><strong>localStorage的缺点</strong>: <br>
<strong>XSS 风险</strong>：localStorage&nbsp;对 JavaScript 代码完全可见，这意味着如果应用存在 XSS 漏洞，攻击者即可轻易获取存储在&nbsp;localStorage&nbsp;中的 token。</p>
<h3 data-id="heading-2">能力层面</h3>
<p>Cookies可以做到更前置更及时的页面访问控制，服务器可以在接收到页面请求时，立即通过读取 cookie 判断用户身份，返回响应的页面（例如重定向到登录页）。</p>
<pre><code class="hljs language-scss" lang="scss"><span class="hljs-comment">// 示例：后端在接收到请求时可以立即判断 </span>
if (!request.cookies.token) { 
response<span class="hljs-selector-class">.redirect</span>('/login'); 
}
</code></pre>
<p>和cookie相比 <strong>localStorage</strong>具有一定的滞后性，浏览器必须先加载 HTML 和 JavaScript资源，解析执行后 才能通过在localStorage取到数据后 经过ajax网络请求 发送给服务端判断用户身份，这种方式有滞后性，可能导致临时显示不正确的内容。</p>
<h3 data-id="heading-3">管理的便利性</h3>
<p><strong>Cookies是由服务端设置的 由浏览器自动管理生命周期的一种方式</strong> <br>
服务器可以直接通过 HTTP 响应头设置 cookie，浏览器会自动在后续请求中携带，无需在客户端手动添加。减少了开发和维护负担，且降低了人为错误的风险。</p>
<p><strong>localStorage需要客户端手动管理</strong> <br>
使用&nbsp;localStorage&nbsp;需要在客户端代码管理 token，你得确保在每个请求中手动添加和删除token，增加了代码复杂度及出错的可能性。</p>
<h3 data-id="heading-4">设计目的：</h3>
<p>HTTP协议是无状态的 一个用户第二次请求和一个新用户第一次请求 服务端是识别不出来的，cookie是为了让服务端记住客户端而被设计的。 <br>
Cookie 设计的初衷就是帮助服务器标识用户的会话状态（如登录状态），因而有很多内建的安全和管理机制，使其特别适合承载 token 等这些用户状态的信息。</p>
<p>localStorage&nbsp;主要用于存储客户端关心的、较大体积的数据（如用户设置、首选项等），而不是设计来存储需要在每次请求时使用的认证信息。</p>
<h2 data-id="heading-5">总结</h2>
<p>在大多数需要处理用户身份认证的应用中，将 token 存储在设置了合适属性的 cookie 中，不仅更安全，还更符合 cookie 的设计目的。</p>
<p>通过 HTTP 响应头由服务端设置并自动管理，极大简化了客户端代码，并确保在未经身份验证的情况下阻断对敏感页面的访问。</p>
<p>因此 我认为 在大多数情况下，将 token 存储在 cookies 中更为合理和安全。</p>
<h2 data-id="heading-6">补充</h2>
<p>然鹅 现实的业务场景往往是复杂多变的 否则也不会有<code>token应该存储在cookie还是localStorage上？</code>这个问题出现了。</p>
<p><strong><code>localStorage更具灵活性</code></strong>: 不同应用有不同的安全需求，有时&nbsp;localStorage&nbsp;可以提供更加灵活和精细化的控制。 开发者可以在 JavaScript 中手动管理&nbsp;localStorage，包括在每次请求时显式设置认证信息。这种 <strong>灵活性</strong> 对于一些高级用例和性能优化场景可能非常有用。</p>
<p>所以一般推荐使用cookie 但是在合适的场景下使用localStorage完全没问题。</p></div></div>