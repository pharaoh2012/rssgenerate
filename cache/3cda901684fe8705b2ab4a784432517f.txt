
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/SuperBigSaltFish0/p/18809684" title="发布于 2025-04-05 02:10">
    <span role="heading" aria-level="2">verilog利用线性插值实现正弦波生成器(dds)</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="verilog实现线性插值实现正弦波生成器">verilog实现线性插值实现正弦波生成器</h1>
<p>​	最近在项目上遇到一个需要在低资源FPGA上实现FFT逻辑的项目，而且要求实现窗函数。对于窗函数来说，莫非是实现正弦波生成器，正弦波生成器可以利用DDS模块，CORDIC模块，或者查找表的方式实现，以下主要讲解ROM核线性插值相结合的波形生成器，用于生成正弦波。</p>
<h1 id="1线性插值">1.线性插值</h1>
<p>​	线性插值是一种数据估值算法，由于其拟合线是一条直线，所以叫做线性插值。即通过需要估值点的左右两个点的权重以及距离，对估值点的权重进行计算的一种算法。</p>
<div style="text-align: center"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="346px" height="246px" viewBox="-0.5 -0.5 346 246" content="<mxfile host=&quot;Electron&quot; modified=&quot;2025-04-04T13:59:20.495Z&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/21.2.8 Chrome/112.0.5615.165 Electron/24.2.0 Safari/537.36&quot; version=&quot;21.2.8&quot; etag=&quot;QmIVqDFHo6G0mOV8mHs5&quot; type=&quot;device&quot;><diagram name=&quot;第 1 页&quot; id=&quot;tAPsR9HKaSczRB9MNImG&quot;>7VfBjpswEP0a7oATEo4bNtteKlXKoWcXz4JVg5FxFtKvryk2DpjsZiuK1FVPMY+Zsd97Yzt4KCnaTwJX+RdOgHmhT1oPPXphGITRVv10yKVHIuT3QCYo0UEWONGfoEETdqYE6h7TkOScSVrVo+yUlyWkcoRhIXgzDnvmbDxrhTNwgFOKmYt+o0TmPboPdxb/DDTLzcxBFPdvCmyC9bLrHBPeXEHo6KFEcC77UdEmwDrxjC593tONt8PCBJTynoSwT3jB7Ky56XXJiyGbCX6udBgICe2cxPi7CffdJQQDMdURwAuQ4qJCdKFwp1N0MwwlGistMg2SX8kaGhBrO7OhtmWsBpr0vADobQGgJA9d06inlOG6pqmHDrksVMnHQA2VPiWBrp6vnvp0IE4HWT3CeT2u+G5n6BpMAMOSvozLz0mgZ/jKqZrYyjtVreZnkYKOum4Vk9hOPLhVSGKRgXQK/XZgoHmXKZv/prxlyvKib98leslL+CcV1928GTdzEP3hrggnu2Lz1zZF5PpzfPIOibfft4EZJpdhGDv2qbNbjj2rpeA/IOGMC+vpM2VsAmFGs7Lbaso8UPihuwmouhAf9IuCEtJNc2hyKuFU4bSbs1HX/43OmLlK7ugNI7o/cc+9MXYzrbPEfbF7xQXfuuB/ZBeme2YF2fd3HE6Mqf9/sEyHoWjcYNuNQzWYoRosQDVemepwsmiuaD2qpsZqXIPJaR2vyDV45eSwB8dHPjd0Qjz2IHI9WOgUUY/2S6q/ce33KDr+Ag==</diagram></mxfile>" style="background-color: rgba(255, 255, 255, 1)"><defs></defs><g><path d="M 7 237 L 330.63 237" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"></path><path d="M 335.88 237 L 328.88 240.5 L 330.63 237 L 328.88 233.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"></path><path d="M 7 237 L 7 13.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"></path><path d="M 7 8.12 L 10.5 15.12 L 7 13.37 L 3.5 15.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"></path><path d="M 47 167 L 237 47" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"></path><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; width: 68px; height: 1px; padding-top: 32px; margin-left: 208px"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0; text-align: center"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgba(0, 0, 0, 1); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal">（x1，y1）</div></div></div></foreignObject><text x="242" y="36" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">（x1，y1）</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; width: 68px; height: 1px; padding-top: 182px; margin-left: 8px"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0; text-align: center"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgba(0, 0, 0, 1); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal">（x0，y0）</div></div></div></foreignObject><text x="42" y="186" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">（x0，y0）</text></switch></g><ellipse cx="48" cy="166" rx="5" ry="5" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="none"></ellipse><ellipse cx="238" cy="46" rx="5" ry="5" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="none"></ellipse><ellipse cx="142" cy="106" rx="5" ry="5" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="none"></ellipse><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; width: 68px; height: 1px; padding-top: 86px; margin-left: 98px"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0; text-align: center"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgba(0, 0, 0, 1); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal">（x，y）</div></div></div></foreignObject><text x="132" y="90" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">（x，y）</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"></g><a transform="translate(0,-5)" href="https://www.drawio.com/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg></div>
<p>由于估值拟合线是直线那么，已知<code>(x0,y0)</code>和<code>(x1,y1)</code>,以及<code>x</code>到两点的距离，对<code>y</code>进行计算。</p>
<p></p><div class="math display">\[\begin{split}
&amp;\frac{y_1-y_0}{x_1-x_0}  = \frac{y-y_0}{x-x_0} \\ &amp;y = y_0 + \frac{(y_1-y_0)*(x-x_0)}{x_1-x_0}
\end{split}
\]</div><p></p><p>对正弦函数进行估值：</p>
<div style="text-align: center">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="346px" height="246px" viewBox="-0.5 -0.5 346 246" content="<mxfile host=&quot;Electron&quot; modified=&quot;2025-04-04T14:34:47.996Z&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/21.2.8 Chrome/112.0.5615.165 Electron/24.2.0 Safari/537.36&quot; version=&quot;21.2.8&quot; etag=&quot;nSsPJPIQ14RQU2XqmPK7&quot; type=&quot;device&quot;><diagram name=&quot;第 1 页&quot; id=&quot;xPzyXUXjQ0BH70VJjEXh&quot;>7VhLc9sgEP41OrYjQA/7GDtJe+lMZnJoe6QSkZhi4UE4lvrrCwY9kR9xHbdNe/Gwn2Bhv11Wn+yh5ar6IPA6/8RTwjzop5WHbj0IZ1GsfjVQGyBA0ACZoKmBQAc80h/Egr5FNzQlpcEsJDlnkq7LweqEFwVJ5ADDQvDtcNoTZ8Nd1zgjDvCYYOain2kqcxsWjDv8I6FZ3uwMorl5ssLNZHvsMscp3/YgdOehpeBcmtGqWhKmuWt4Mevu9zxtDyZIIU9ZYHl/xmxjY7PnknUTbCb4Zm2nESFJNUUx/tZM990jgDYwVRCEr4gUtZpiHcHYLrHFEM6sve2oRchieY9W2IDYpjNrfXcRq4ENepoAdJwAUqQ3umiUVfBCgYsUlznRDoAycrlidqiYKtLdA19ZxhFJnVrqmIHTzPQiDycCbzBBGJb0eeh+igy7wwOnauOWeIDCAfEOnyXfiITYVf0iOuZo5EdikRHp+Nmlpo36pGwFx7OVbMRzmxs3dXuzpabeU72xtdSZvmjjfRDMG+DrDpgHcQPcVv35t3XfeiCCqtCIeGE5qF6248tA8e+skGB4M0F0ZoFAf+QInFYhKne47k1b6wnlgYoe7TMbND81MA7Prb7wRb0iYbgsafJXdohf7Qhtv97n6HItIfqflGNJuTzpsUv63b23WHqzWQWa4bJuh3MnJ0pHyGEWSin4d7LkjIuuXT+pljyCMKNZoVOp0qGb60KrEqrE2Y19sKJpqrdZbHMqyeMaJ3rPrVKie3I9IWtOyPa+3uaql3iiGC6hXWYHsuB3WfDfchbGr6Yr0D5/Ucc5IhkN381XBHRlSUWl0SFhHFlby5B3/nsfAAt0MkQbdc8Yi5CBrkEjXRO9sq4xjWpQu3+M1HGu8dlaJzxP65zRhRvPByuRMfVVTC7T61A0DC0MnEsHJlI0ZuCcSwfAlWMFIwkzv2Ks8EBj7/r6W27rzQIwfrler82DU/4aeM2Ki9H1Ku6ED+uLxtrqdhsruuLtmviMa28X7K4X/Bfu1+itF7za9VJm96+medd1fw2ju58=</diagram></mxfile>" style="background-color: rgba(255, 255, 255, 1)"><defs></defs><g><path d="M 142 237 L 142 27" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"></path><path d="M 47 167 Q 107 87 238.43 45.41" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"></path><path d="M 7 237 L 330.63 237" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"></path><path d="M 335.88 237 L 328.88 240.5 L 330.63 237 L 328.88 233.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"></path><path d="M 7 237 L 7 13.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"></path><path d="M 7 8.12 L 10.5 15.12 L 7 13.37 L 3.5 15.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"></path><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; width: 68px; height: 1px; padding-top: 32px; margin-left: 208px"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0; text-align: center"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgba(0, 0, 0, 1); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal">（x1，y1）</div></div></div></foreignObject><text x="242" y="36" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">（x1，y1）</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; width: 68px; height: 1px; padding-top: 182px; margin-left: 8px"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0; text-align: center"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgba(0, 0, 0, 1); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal">（x0，y0）</div></div></div></foreignObject><text x="42" y="186" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">（x0，y0）</text></switch></g><path d="M 47.32 166.67 L 238.01 46.01" fill="none" stroke="rgb(0, 0, 0)" stroke-width="2" stroke-miterlimit="10" stroke-dasharray="6 6" pointer-events="none"></path><ellipse cx="48" cy="166" rx="5" ry="5" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="none"></ellipse><ellipse cx="142" cy="106" rx="5" ry="5" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="none"></ellipse><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; width: 68px; height: 1px; padding-top: 122px; margin-left: 118px"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0; text-align: center"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgba(0, 0, 0, 1); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal">（x，y）</div></div></div></foreignObject><text x="152" y="126" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">（x，y）</text></switch></g><ellipse cx="142" cy="85" rx="5" ry="5" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="none"></ellipse><ellipse cx="238" cy="46" rx="5" ry="5" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="none"></ellipse><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; width: 68px; height: 1px; padding-top: 62px; margin-left: 108px"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0; text-align: center"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgba(0, 0, 0, 1); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal">（x2，y2）</div></div></div></foreignObject><text x="142" y="66" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">（x2，y2）</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"></g><a transform="translate(0,-5)" href="https://www.drawio.com/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>
</div>
<p>其中<code>(x,y)</code>表示估算值，<code>(x2,y2)</code>表示真实值，误差为<code>y2-y</code>,即当<code>x1-x0</code>越小，估算值越准确。样本点越多越精确。</p>
<h1 id="2样本生成">2.样本生成</h1>
<p>以下matlab代码用于生成正弦函数样本值，用于进行数据估算。</p>
<pre><code class="language-matlab">clc,clear,close all
%% 生成 rom 数据
Width=16;
Depth=256;
phi=linspace(0,2*pi,Depth+1);
phi=phi(1:end-1)';
cos_sig=cos(phi);
cos_sig=floor(cos_sig*(2^(Width-1)-1));
plot(cos_sig)
%% 生成.coe文件
filename='.\cos_rom.coe';
fid = fopen(filename,'w');
radix = 10;
fprintf(fid,"memory_initialization_radix=%d;\n",radix); %使用的进制
fprintf(fid,"memory_initialization_vector=");
for i=1:size(cos_sig,1)
    fprintf(fid,"\n%d",cos_sig(i));
end
fprintf(fid,";");
fclose(fid);

</code></pre>
<h1 id="3verilog实现线性插值">3.verilog实现线性插值</h1>
<p>以下将使用参数：样本深度256，相位最大值65536进行讲解。</p>
<p>​	对某一个点进行线性估值的时候，我们需要知道当前点在样本中对应相应点的邻近点。样本邻近两点相位差<code>65536/256 = 256</code>,假设插值相位位置为phase,则相邻点为<code>floor(phase/256)</code>和<code>floor(phase/256)+1</code>，<code>floor</code>表示向下取整，rom表示查找表数据。</p>
<p>那么</p>
<p></p><div class="math display">\[\begin{equation}
y = y_0 + \frac{(y_1-y_0)*(x-x_0)}{x_1-x_0} 
= rom(floor(phase/256)) + \frac{(rom(floor(phase/256) + 1)-rom(floor(phase/256)))*(phase-floor(phase/256)*256)}{256}
\end{equation}
\]</div><p></p><p>以下为VERILOG代码实现：</p>
<pre><code class="language-verilog">`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2025/03/29 15:47:50
// Design Name: 
// Module Name: cos_gen_pipeline
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////

module cos_gen_pipeline(
    input			    clk     ,
    input               rst     ,
    input               valid   ,	
    input	    [15:0]	phase   ,	//相位，0~65535对应0~2pi)
    output              rdy     ,   
    output	reg [15:0]	cos_out
    );

    reg  [4:0]  valid_d;

    always @(posedge clk) begin
        if(rst)begin
            valid_d	&lt;= 0;
        end else begin
            valid_d	&lt;= {valid_d[3:0],valid};
        end
    end
    assign rdy = valid_d[4];

    
    wire	    [7:0]	addr1;
    wire	    [7:0]	addr2;
    wire signed	[15:0]	cos_dat1;
    wire signed	[15:0]	cos_dat2;
    wire 	    [15:0]	phase1;
    //-----------线性插值-----------------------------
    assign	addr1	= (phase&gt;&gt;8)    ;
    assign	addr2	= (phase&gt;&gt;8)+1  ;
    assign	phase1	= addr1&lt;&lt;8      ;
    cos_rom cos_rom_inst1(
        .clka	(clk        ),
        .addra	(addr1      ),
        .douta	(cos_dat1   )
    );
    cos_rom cos_rom_inst2(
        .clka	(clk        ),
        .addra	(addr2      ),
        .douta	(cos_dat2   )
    );
    reg		[15:0]	phase_d0    ;
    reg		[15:0]	phase_d1    ;	
    reg		[15:0]	phase1_d0   ;
    reg		[15:0]	phase1_d1   ;

    always @(posedge clk) begin
        if(rst)begin
            phase_d0	&lt;= 0            ;
            phase_d1	&lt;= 0            ;
            phase1_d0	&lt;= 0            ;
            phase1_d1	&lt;= 0            ;
        end else begin
            phase_d0	&lt;= phase        ;
            phase_d1	&lt;= phase_d0     ;
            phase1_d0	&lt;= phase1       ;
            phase1_d1	&lt;= phase1_d0    ;
        end
    end
    reg	[31:0]	multi;
    reg	[15:0]	delta_cos_data  ;
    reg	[15:0]	delta_phase     ;
    always @(posedge clk) begin
        if(rst)begin
            multi	&lt;= 0;
        end else begin
            if(cos_dat2 &gt; cos_dat1)begin
                delta_cos_data      &lt;= (cos_dat2 - cos_dat1)        ;
                delta_phase         &lt;= phase_d1 - phase1_d1         ;
                multi               &lt;= delta_cos_data*delta_phase   ;
            end else begin
                delta_cos_data  &lt;= (cos_dat1 - cos_dat2)            ;
                delta_phase     &lt;= phase_d1 - phase1_d1             ;
                multi           &lt;= delta_cos_data*delta_phase       ;
            end
        end
    end

    reg	signed  [15:0]	cos_dat1_d;
    reg	signed  [15:0]	cos_dat2_d;

    always @(posedge clk) begin
        if(rst)begin
            cos_dat1_d	&lt;= 0;
            cos_dat2_d	&lt;= 0;
        end else begin
            cos_dat1_d	&lt;= cos_dat1;
            cos_dat2_d	&lt;= cos_dat2;
        end
    end
    reg	signed  [15:0]	cos_dat1_d1;
    reg	signed  [15:0]	cos_dat2_d1;

    always @(posedge clk) begin
        if(rst)begin
            cos_dat1_d1	&lt;= 0;
            cos_dat2_d1	&lt;= 0;
        end else begin
            cos_dat1_d1	&lt;= cos_dat1_d;
            cos_dat2_d1	&lt;= cos_dat2_d;
        end
    end
    always @(posedge clk) begin
        if(rst)begin
            cos_out	&lt;= 0;
        end else begin
            if(cos_dat2_d1 &gt; cos_dat1_d1)begin
                cos_out	&lt;= cos_dat1_d1 + (multi &gt;&gt; 8);
            end else begin
                cos_out	&lt;= cos_dat1_d1 - (multi &gt;&gt; 8);
            end
        end
    end
endmodule

</code></pre>
<p>仿真代码：</p>
<pre><code class="language-verilog">`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2025/04/05 00:00:38
// Design Name: 
// Module Name: tb_cos_gen_pipeline
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////

module tb_cos_gen_pipeline();
    reg clk;
    reg rst;

    initial begin
        clk &lt;=0;
        rst &lt;=1;

        #300
        rst &lt;=0;
    end

    always #10 clk &lt;= ~clk;

    reg                 valid   ;
    reg	    [15:0]	    phase   ;

    localparam FREQ_FTW = 6554; // 频率控制字 生成5Mhz的正弦波，采样率50M，round((5/50)*(2^16))

    always @(posedge clk)begin
        if(rst)begin
            valid &lt;= 0;
            phase &lt;= 0;
        end
        else begin
            valid &lt;= 1;
            phase &lt;= phase + FREQ_FTW;
        end
    end

    wire                rdy     ;   
    wire    [15:0]	    cos_out ;

    cos_gen_pipeline    cos_gen_pipeline(
        .clk     (clk    ),
        .rst     (rst    ),
        .valid   (valid  ),	//使能信号  
        .phase   (phase  ),	//相位，0~65535对应[0~2pi)
        .rdy     (rdy    ),   //输出准备好信号
        .cos_out (cos_out)
    );

    integer file = 0;

    initial begin
        file = $fopen("cos_gen_pipeline.txt", "w");
        if (file == 0) begin
            $display("Error opening file");
            $finish;
        end
    end
    reg [15:0]  data_cnt = 0;
    always @(posedge clk)begin
        if(rdy)begin
            data_cnt &lt;= data_cnt + 1;
            $fwrite(file, "%d\n", $signed(cos_out));
            if(data_cnt == 4096*4-1)begin
                $fclose(file);
                $finish;
            end
        end        
    end
endmodule

</code></pre>
<p>仿真结果：</p>
<p><img src="https://s2.loli.net/2025/04/05/bKITdWqgRn3YLyU.png" alt="image-20250405014050218" loading="lazy"></p>
<p><img src="https://s2.loli.net/2025/04/05/KlIBesVZM4ufQn8.png" alt="image-20250405014120196" loading="lazy"></p>
<p>​	这样一个正弦波生成器就完成了，SNR=91db，足以满足大多数的使用情况了，如果需要更高的精度，可以更改样本的点数，为了提升频率精度，需要对相位控制字位宽进行扩展。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.16994432855092592" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-05 02:10">2025-04-05 02:10</span>&nbsp;
<a href="https://www.cnblogs.com/SuperBigSaltFish0">超级大咸鱼</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18809684" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18809684);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18809684', targetLink: 'https://www.cnblogs.com/SuperBigSaltFish0/p/18809684', title: 'verilog利用线性插值实现正弦波生成器(dds)' })">举报</a>
</div>
        