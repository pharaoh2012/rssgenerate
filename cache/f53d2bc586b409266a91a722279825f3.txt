
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/BNTang/p/18984137" title="发布于 2025-07-14 15:41">
    <span role="heading" aria-level="2">AI 为何能查天气、订机票？揭秘大模型背后的“神秘工具箱”</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>你有没有想过，为什么 AI 能回答“今天上海天气怎么样？”这种实时问题，甚至帮你预订机票？明明它的训练数据截止到去年，怎么会对现在的事情了如指掌？</p>
<p>答案就藏在一个核心技术里——<strong>工具调用（Tool Calling）</strong>。</p>
<p>简单说，工具调用就是让大模型在遇到自己搞不定的问题时，能像我们一样，打开一个“工具箱”，借用外部工具来完成任务。</p>
<p>这个“工具箱”里什么都有：网页搜索、计算器、API 调用、数据库查询……任何能帮它完成特定任务的，都可以是它的工具。</p>
<p>目前，工具调用技术已经相当成熟，几乎所有主流的 AI 大模型和开发平台都已支持。</p>
<h2 id="ai-真的会自己调用工具吗">AI 真的会“自己”调用工具吗？</h2>
<p>一听到“工具调用”，很多人会误以为是 AI 服务器自己去执行了某个工具。</p>
<p><strong>大错特错！</strong></p>
<p>真相是：<strong>AI 只负责“提要求”，而真正干活的，是我们自己的应用程序。</strong></p>
<p>整个过程更像是一个分工明确的团队协作。我们以“什么是 MCP？”这个问题为例，看看团队是如何配合的：</p>
<ol>
<li><strong>用户</strong>：提出问题：“什么是 MCP？”</li>
<li><strong>程序（项目经理）</strong>：将问题转达给 <strong>大模型（技术专家）</strong>。</li>
<li><strong>大模型（技术专家）</strong>：分析后发现知识库里没有，判断需要上网搜索，于是向程序提要求：“我需要用「网页抓取工具」查一下，关键词是 MCP”。</li>
<li><strong>程序（项目经理）</strong>：收到请求，立刻安排 <strong>网页抓取工具（实习生）</strong> 去执行。</li>
<li><strong>网页抓取工具（实习生）</strong>：勤勤恳恳地完成抓取，把数据返回给程序。</li>
<li><strong>程序（项目经理）</strong>：将抓取到的信息整理好，再次交给 <strong>大模型（技术专家）</strong>。</li>
<li><strong>大模型（技术专家）</strong>：阅读信息，总结提炼，生成一份通俗易懂的回答。</li>
<li><strong>程序（项目经理）</strong>：最后，将这份完美的答案呈现给用户。</li>
</ol>
<div class="mermaid">sequenceDiagram
    participant 用户
    participant 应用程序 (项目经理)
    participant 大模型 (技术专家)
    participant 网页抓取工具 (实习生)
    
    用户-&gt;&gt;应用程序 (项目经理): 1. 提问: "什么是MCP？"
    应用程序 (项目经理)-&gt;&gt;大模型 (技术专家): 2. 传递用户问题
    大模型 (技术专家)-&gt;&gt;大模型 (技术专家): 3. 分析问题，发现知识盲区
    大模型 (技术专家)-&gt;&gt;应用程序 (项目经理): 4. 请求调用工具&lt;br/&gt;工具: 网页抓取工具&lt;br/&gt;参数: 搜索 "MCP"
    应用程序 (项目经理)-&gt;&gt;网页抓取工具 (实习生): 5. 执行网页抓取
    网页抓取工具 (实习生)-&gt;&gt;应用程序 (项目经理): 6. 返回抓取结果
    应用程序 (项目经理)-&gt;&gt;大模型 (技术专家): 7. 将结果传回
    大模型 (技术专家)-&gt;&gt;大模型 (技术专家): 8. 分析信息，生成回答
    大模型 (技术专家)-&gt;&gt;应用程序 (项目经理): 9. 返回最终答案
    应用程序 (项目经理)-&gt;&gt;用户: 10. 呈现答案
    
    Note over 用户,网页抓取工具: 核心：AI 不直接执行工具，由应用程序协调
    Note over 大模型 (技术专家): AI 只负责思考和决策
    Note over 网页抓取工具 (实习生): 工具在安全可控的环境中执行
</div><p>看明白了吗？AI 只是“大脑”，负责思考和决策，而我们的应用程序才是“手脚”，负责执行和落地。</p>
<h2 id="为什么要设计得这么麻烦">为什么要设计得这么“麻烦”？</h2>
<p>你可能会问：为什么不让 AI 直接调用工具，一步到位？这样来回传递不浪费时间吗？</p>
<p>这背后最重要的考量是——<strong>安全！</strong></p>
<p>这种设计确保了 AI 永远无法直接触碰你系统的核心资源。所有操作都必须经过你程序的“批准”，你拥有绝对的控制权，可以决定 AI 能做什么，不能做什么。</p>
<p>举个极端点的例子：假如你开发了一个“房屋爆破”工具。</p>
<ul>
<li><strong>现在的方式</strong>：用户对 AI 说“帮我把这栋楼炸了”。AI 分析后，会向你的程序申请：“我需要使用「房屋爆破」工具”。这时，你的程序可以立刻拒绝这个危险请求，从而避免灾难。</li>
<li><strong>如果 AI 直接调用</strong>：AI 觉得这个需求很合理，直接就执行了。等你反应过来，房子可能已经没了。</li>
</ul>
<p>把决定权留在我们自己手里，既能利用 AI 的智慧，又能保证系统的安全，还能减轻 AI 服务器的负担，何乐而不为呢？</p>
<h2 id="工具调用-vs-功能调用">工具调用 vs 功能调用</h2>
<p>如果你在看技术文档时遇到 <strong>Function Calling（功能调用）</strong> 这个词，别懵，它和 <strong>Tool Calling（工具调用）</strong> <strong>说的完全是同一件事</strong>！只是不同厂商或开发者习惯的叫法不同。</p>
<p>Spring AI 的官方文档开篇就明确了这一点：</p>
<p><img src="https://img2024.cnblogs.com/blog/2105804/202507/2105804-20250714152545753-361813979.png" alt="" loading="lazy"></p>
<p>我个人更喜欢“工具调用”这个说法，因为它更形象。“Function”一听就像是程序员的黑话，而“工具”则更加通俗易懂，不是吗？</p>
<p><img src="https://img2024.cnblogs.com/blog/2105804/202507/2105804-20250714152722929-116180298.png" alt="" loading="lazy"></p>
<hr>
<p>好了，今天关于“工具调用”的分享就到这里。</p>
<p>希望这篇文章能帮你彻底搞懂 AI 是如何借助外部力量变聪明的。如果你觉得有收获，不妨<strong>点个赞</strong>、<strong>在看</strong>，或者<strong>分享</strong>给更多朋友。</p>
<p>对于工具调用，你还有什么疑问或有趣的想法？欢迎在评论区留言讨论！</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-14 15:41">2025-07-14 15:41</span>&nbsp;
<a href="https://www.cnblogs.com/BNTang">BNTang</a>&nbsp;
阅读(<span id="post_view_count">59</span>)&nbsp;
评论(<span id="post_comment_count">1</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18984137);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18984137', targetLink: 'https://www.cnblogs.com/BNTang/p/18984137', title: 'AI 为何能查天气、订机票？揭秘大模型背后的“神秘工具箱”' })">举报</a>
</div>
        