
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/devilzh/p/18901502" title="发布于 2025-05-28 23:53">
    <span role="heading" aria-level="2">前端EXCEL插件智表ZCELL数据源功能详解</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>一、数据源功能介绍<br>前端EXCEL插件<a href="http://www.zcell.net" target="_blank" rel="noopener nofollow">智表ZCELL</a>提供了强大的数据源管理功能，使开发者能够灵活地在电子表格中集成和管理结构化数据。数据源功能主要分为两种类型：</p>
<p>卡片式数据源：适合展示和编辑单个数据记录</p>
<p>表格式数据源：适合处理表格形式的多行数据</p>
<p>二、核心API详解<br>1. 创建数据源 (CreatDataSource)<br>功能：初始化数据源对象，支持卡片式和表格式两种类型。</p>
<p>参数：</p>
<p>{<br>  name: "数据源名称", //必填<br>  type: 0, //0-卡片式，1-表格式<br>  data: jsondata, //数据集<br>  // 表格式特有参数<br>  startrow: 22, //起始行索引(从0开始)<br>  startcol: "G", //起始列索引(从A开始)<br>  autoBindColumn: true //是否自动绑定列(可选)<br>}<br>示例代码：</p>
<p>// 创建卡片式数据源<br>var jsondata = { name: "哪吒", age: 15, address: "陈塘关" };<br>let option1 = {<br>  name: "motong",<br>  type: 0,<br>  data: jsondata<br>};<br>let ds = sheet.CreatDataSource(option1);<br> <br>// 创建表格式数据源<br>var persons = [];<br>for (let i = 0; i &lt; 3; i++) {<br>  let p = {<br>    cn: (i + 1).toString().padStart(3, "0"),<br>    book: "西游记",<br>    auth: "吴承恩",<br>    name: "徒弟" + (i + 1),<br>    operate: ""<br>  };<br>  persons.push(p);<br>}<br> <br>let option = {<br>  name: "person",<br>  type: 1,<br>  data: persons,<br>  startrow: 22,<br>  startcol: "G"<br>};<br>let ds = sheet.CreatDataSource(option);</p>
<p>2. 设置映射关系 (Mapping)<br>功能：建立数据字段与表格单元格/列的对应关系。</p>
<p>参数：</p>
<p>卡片式：cname(单元格名), field(字段名)</p>
<p>表格式：colname(列名), field(字段名)</p>
<p>示例代码：</p>
<p>// 卡片式映射<br>ds.Mapping("D23", "name"); //单元格名必须大写<br> <br>// 表格式映射<br>ds.Mapping("G", "cn"); //列名必须大写<br>3. 设置列样式 (SetColumnInfo)<br>功能：为表格式数据源的列设置样式，新增行时会自动应用这些样式。</p>
<p>参数：</p>
<p>colname: 列名</p>
<p>coloption: 列样式设置对象</p>
<p>cellType: 单元格类型</p>
<p>cellStyle: 单元格样式</p>
<p>cellBorder: 单元格边框</p>
<p>cellFormat: 单元格数值格式</p>
<p>示例代码：</p>
<p>ds.SetColumnInfo("G", { <br>  cellStyle: colstyle1, <br>  cellBorder: border1 <br>});<br> <br>4. 绑定数据源 (BindDataSource)<br>功能：将数据源对象与表页对象绑定。</p>
<p>示例代码：</p>
<p>sheet.BindDataSource(ds);<br>5. 获取数据源 (GetDataSource)<br>功能：通过名称获取已创建的数据源对象。</p>
<p>示例代码：</p>
<p>let ds1 = sheet.GetDataSource("motong");<br> <br>三、数据操作功能<br>1. 新增数据行 (AddRow)<br>功能：为表格式数据源添加新行。</p>
<p>参数：</p>
<p>count: 新增行数</p>
<p>order: 新增顺序("asc"-尾部增加，"desc"-首行增加)</p>
<p>示例代码：</p>
<p>let ds1 = sheet.GetDataSource("person");<br>if (ds1 != null) {<br>  ds1.AddRow(2, "asc"); //在尾部新增2行<br>}<br>2. 获取变更数据<br>ZCELL提供了多种获取变更数据的方法：</p>
<p>// 获取新增行<br>let drows = ds1.GetInsertRows();<br> <br>// 获取变更行<br>let drows = ds1.GetChangRows();<br> <br>// 获取删除行<br>let drows = ds1.GetDeleteRows();<br> <br>// 获取变更单元格(卡片式)<br>let ccs = ds1.GetChangeCells();<br>3. 清空变更记录 (ClearChange)<br>功能：手工清空变更记录，标记为已提交状态。</p>
<p>示例代码：</p>
<p>let ds = sheet.GetDataSource("person");<br>if (ds != null) {<br>  ds.ClearChange();<br>}<br>四、最佳实践<br>完整工作流程示例<br>// 1. 创建表格式数据源<br>var products = [<br>  { id: "001", name: "笔记本电脑", price: 5999, stock: 100 },<br>  { id: "002", name: "智能手机", price: 3999, stock: 150 }<br>];<br> <br>let option = {<br>  name: "product",<br>  type: 1,<br>  data: products,<br>  startrow: 5,<br>  startcol: "B"<br>};<br>let ds = sheet.CreatDataSource(option);<br> <br>// 2. 设置列映射<br>ds.Mapping("B", "id");<br>ds.Mapping("C", "name");<br>ds.Mapping("D", "price");<br>ds.Mapping("E", "stock");<br> <br>// 3. 设置列样式<br>let priceStyle = { <br>  cellFormat: "¥#,##0.00",<br>  cellStyle: { fontColor: "#FF0000", fontWeight: "bold" }<br>};<br>ds.SetColumnInfo("D", priceStyle);<br> <br>// 4. 绑定数据源<br>sheet.BindDataSource(ds);<br> <br>// 5. 添加新行<br>ds.AddRow(1, "asc");<br> <br>// 6. 获取变更(通常在保存时调用)<br>let newRows = ds.GetInsertRows();<br>let changedRows = ds.GetChangRows();<br> <br>// 7. 清空变更记录<br>ds.ClearChange();</p>
<p>五、注意事项<br>单元格和列名在映射时必须使用大写字母。</p>
<p>表格式数据源必须指定startrow和startcol参数。</p>
<p>新增行时会自动继承列样式设置。</p>
<p>变更记录只在调用ClearChange前有效。</p>
<p>一个表页可以绑定多个数据源。</p>
<p>通过本教程，您应该已经掌握了ZCELL插件数据源功能的核心使用方法。这些功能可以大大简化电子表格中的数据管理任务，特别适合需要将结构化数据与电子表格结合的应用场景。<br><br></p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.016615551347222222" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-28 23:54">2025-05-28 23:53</span>&nbsp;
<a href="https://www.cnblogs.com/devilzh">帆张芳显</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18901502);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18901502', targetLink: 'https://www.cnblogs.com/devilzh/p/18901502', title: '前端EXCEL插件智表ZCELL数据源功能详解' })">举报</a>
</div>
        