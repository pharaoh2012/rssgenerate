
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/JackyGz/p/18636415" title="发布于 2024-12-27 17:52">
    <span role="heading" aria-level="2">ASP.NET Core 标识（Identity）框架系列（四）：闲聊 JWT 的缺点，和一些解决思路</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        没有一种技术是万能的 "银弹"，所谓有矛就有盾，相比 Session、Cookie 等传统的身份验证方式，JWT 在拥有很多优点的同时，也有着不可忽视的缺点
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p><img src="https://img2024.cnblogs.com/blog/3351211/202412/3351211-20241227175044900-1577373931.png" alt="Coding-14" loading="lazy"></p>
<h1 id="前言">前言</h1>
<p>前面的几篇文章讲了很多 JWT 的优点，但作为技术人员都知道，没有一种技术是万能的 "银弹"，所谓有矛就有盾，相比 Session、Cookie 等传统的身份验证方式，JWT 在拥有很多优点的同时，也有着不可忽视的缺点，比如：</p>
<h1 id="jwt-的缺点">JWT 的缺点</h1>
<h4 id="无法撤销">无法撤销</h4>
<p>一旦 JWT 被发放给客户端，在有效期内这个 Token 就一直有效，无法被提前撤回</p>
<h4 id="体积大吃带宽">体积大，吃带宽</h4>
<p>JWT 中包含了一些额外的信息，可能会使得 JWT 体积较大，增加网络传输开销</p>
<h4 id="安全性比较差">安全性比较差</h4>
<p>JWT 中的信息是以明文形式存储的，容易被破解</p>
<h1 id="一些解决的思路">一些解决的思路</h1>
<h4 id="1-无法撤销-的解决思路">1. 无法撤销 的解决思路</h4>
<ol>
<li>在用户表中增加一个整数类型的列 JWTVersion，它代表最后一次发放出去的令牌的版本号；</li>
<li>每次登录、发放令牌的时候，都让 JWTVersion 的值自增，同时将 JWTVersion 的值也放到 JWT 的负载中；</li>
<li>当执行禁用用户、撤回用户的令牌等操作的时候，让这个用户对应的 JWTVersion 的值自增；</li>
<li>当服务器端收到客户端提交的 JWT 后，先把 JWT 中的 JWTVersion 值和数据库中的 JWTVersion 值做比较，如果 JWT 中 JWTVersion 的值小于数据库中 JWTVersion 的值，就说明这个 JWT 过期了，这样就实现了 JWT 的撤回机制。</li>
</ol>
<p><strong>总结：</strong><br>
这个方案在用户表中保存了 JWTVersion  值，因此它本质上仍然是在服务器端保存状态，这是绕不过去的，它算是一种缺点比较少的妥协方案，相类似的方案还有比如维护一个 Token 黑名单的办法，相对步骤比较多</p>
<h4 id="2-体积大吃带宽-的解决思路">2. 体积大，吃带宽 的解决思路</h4>
<ol>
<li>
<p>精简 JWT 中的信息，只存储必要的信息。将一些非敏感且不经常变动的信息存储在服务端，而不是每次都包含在JWT中</p>
</li>
<li>
<p>设置较短的 JWT 过期时间，减少 JWT 的有效期，从减小 JWT 的体积</p>
</li>
<li>
<p>传输时对 JWT 进行压缩，减小 JWT 的大小，常见的压缩算法包括 GZIP 和 DEFLATE</p>
</li>
<li>
<p>在使用对称加密算法时，可以选择较小的密钥长度，减小 JWT 的大小</p>
</li>
<li>
<p>选择更高效的加密算法和签名算法，减小 JWT 的大小</p>
</li>
<li>
<p>定期清理过期的 JWT，避免过多无效 JWT 的存储占用带宽</p>
</li>
</ol>
<h4 id="3-安全性比较差-的解决思路">3. 安全性比较差 的解决思路</h4>
<ol>
<li>不在 JWT 中存储敏感信息，如密码等，降低信息泄露的风险</li>
<li>将 JWT 中的信息放在 Redis 上，Token 只放相应的 key，服务端拿到 token 后，再到 Redis 取具体的信息并反序列化为对象</li>
</ol>
<h1 id="往期精彩">往期精彩</h1>
<ol>
<li><a href="https://mp.weixin.qq.com/s/nnwoBF2mQSs-HUkk7oTXbQ" target="_blank" rel="noopener nofollow">C# 静态类，高手不想让你知道的 15 个真相</a></li>
<li><a href="https://mp.weixin.qq.com/s/lO8ErIzoT24Pl7e8AijWKw" target="_blank" rel="noopener nofollow">封装一个 C# 范围判断函数，从此告别重复编写范围判断代码的烦恼</a></li>
<li><a href="https://mp.weixin.qq.com/s/k_uIcHyyLWDSF8ICrza6Fg" target="_blank" rel="noopener nofollow">用 C# Stopwatch 计时，让代码性能飞起来！</a></li>
<li><a href="https://mp.weixin.qq.com/s/jEkxBQhptJqQA11oCvioDg" target="_blank" rel="noopener nofollow">轻装上阵，Visual Studio LocalDB：.NET 程序员的本地数据库神器</a></li>
<li><a href="https://mp.weixin.qq.com/s/VZheqY0SQwFa0SSBd3uKTQ" target="_blank" rel="noopener nofollow">封装一个C#万能基础数据类型转换器，一招解决所有基础类型转换烦恼</a></li>
<li><a href="https://mp.weixin.qq.com/s/SRj40At94StpKuddWQ0B-g" target="_blank" rel="noopener nofollow">闲话 .NET（7）：.NET Core 能淘汰 .NET FrameWork 吗？</a></li>
<li><a href="https://mp.weixin.qq.com/s/aYyLRGsuGm3XWMJIODN5cg" target="_blank" rel="noopener nofollow">常用的 4 种 ORM 框架（EF Core，SqlSugar，FreeSql，Dapper）对比总结</a></li>
<li><a href="https://mp.weixin.qq.com/s/l4y5dgZuIHQteI_YKhtKUA" target="_blank" rel="noopener nofollow">C# AutoMapper 10个常用方法总结</a></li>
<li><a href="https://mp.weixin.qq.com/s/VPpRmTu1-sKUcx4LrTlh3Q" target="_blank" rel="noopener nofollow">C# 7个方法比较两个对象是否相等</a></li>
<li><a href="https://mp.weixin.qq.com/s/-quzDUUmc5vTR9sWFBLZTA" target="_blank" rel="noopener nofollow">C# 去掉字符串最后一个字符的 4 种方法</a></li>
</ol>
<p><img src="https://img2024.cnblogs.com/blog/3351211/202409/3351211-20240920180709919-918692799.gif" alt="image" loading="lazy"></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.10904529140046296" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2024-12-27 17:53">2024-12-27 17:52</span>&nbsp;
<a href="https://www.cnblogs.com/JackyGz">代码掌控者</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18636415" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18636415);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18636415', targetLink: 'https://www.cnblogs.com/JackyGz/p/18636415', title: 'ASP.NET Core 标识（Identity）框架系列（四）：闲聊 JWT 的缺点，和一些解决思路' })">举报</a>
</div>
        