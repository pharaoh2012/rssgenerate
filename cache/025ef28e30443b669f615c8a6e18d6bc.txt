<!----> <meta itemprop="headline" content="MobVue 中文文档"> <meta itemprop="keywords" content="前端,Vue.js,JavaScript"> <meta itemprop="datePublished" content="2025-02-24T08:03:35.000Z"> <meta itemprop="image" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-128.png~tplv-t2oaga2asx-image.image"> <div itemprop="author" itemscope="itemscope" itemtype="http://schema.org/Person"><meta itemprop="name" content="pany"> <meta itemprop="url" content="https://juejin.cn/user/2041120304148845"></div> <div itemprop="publisher" itemscope="itemscope" itemtype="http://schema.org/Organization"><meta itemprop="name" content="掘金"> <div itemprop="logo" itemscope="itemscope" itemtype="https://schema.org/ImageObject"><meta itemprop="url" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-white-180.png~tplv-t2oaga2asx-image.image"> <meta itemprop="width" content="180"> <meta itemprop="height" content="180"></div></div> <h1 class="article-title" data-v-38a6c62f="">
            MobVue 中文文档
            <!----> <!----></h1> <div class="author-info-block block-hidden" data-v-38a6c62f=""><div class="author-info-box" data-v-38a6c62f=""><div class="author-name" data-v-38a6c62f=""><a href="/user/2041120304148845/posts" target="_blank" rel="" class="jj-link username username ellipsis" data-v-65b50b51="" data-v-1800aadb="" data-v-38a6c62f=""><span class="name" style="max-width:160px;" data-v-65b50b51="" data-v-1800aadb="">
    pany
  </span> <!----> <!----> <!----> </a></div> <div class="meta-box" data-v-38a6c62f=""><time datetime="2025-02-24T08:03:35.000Z" title="Mon Feb 24 2025 08:03:35 GMT+0000 (Coordinated Universal Time)" class="time" data-v-38a6c62f="">
                    2025-02-24
                  </time> <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="read-icon" data-v-38a6c62f=""><path d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor" data-v-38a6c62f=""></path><circle cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor" data-v-38a6c62f=""></circle></svg> <span class="views-count" data-v-38a6c62f="">
                    13,606
                  </span> <span class="read-time" data-v-38a6c62f=""><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" data-v-38a6c62f=""><rect width="16" height="16" fill="none" data-v-38a6c62f=""></rect><circle cx="8" cy="8" r="5.65625" stroke="#8A919F" data-v-38a6c62f=""></circle><path d="M7.69141 5.18652V8.30924H10.8141" stroke="#8A919F" stroke-linecap="round" stroke-linejoin="round" data-v-38a6c62f=""></path></svg>
                    阅读9分钟
                  </span> <!----></div></div> <div style="flex:1;" data-v-38a6c62f=""></div> <!----> <!----></div> <!----> <!----> <!----> <!----> <div id="article-root" itemprop="articleBody" class="main" data-v-38a6c62f=""><div class="article-viewer markdown-body cache result"><div align="center">
  <img alt="logo" width="120" height="120" src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/951ae8cefdc048dfb9e16795e0c603e4~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgcGFueQ==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1745077381&amp;x-signature=UOoCWE2e0vQbNmwCGhvlyOKIRUY%3D" loading="lazy">
  <h2 data-id="heading-0">Mobile + Vue = MobVue</h2>
</div>
<h2 data-id="heading-1">简介</h2>
<p><a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fun-pany%2Fmobvue" target="_blank" title="https://github.com/un-pany/mobvue" ref="nofollow noopener noreferrer">MobVue</a> 是一个精心制作的移动端 H5 模板，基于 Vue3、Vite、TypeScript、Vant 等主流技术</p>
<h2 data-id="heading-2">使用</h2>
<p><em>点击展开</em></p>
<details>
<summary>推荐环境</summary>
<br>
<ul>
<li>新版 <code>Visual Studio Code</code></li>
<li>安装 <code>.vscode/extensions.json</code> 文件中推荐的插件</li>
<li><code>node</code> 20.x 或 22+</li>
<li><code>pnpm</code> 9.x 或 10+</li>
</ul>
</details>
<details>
<summary>本地开发</summary>
<br>
<pre><code class="hljs language-bash" lang="bash"><span class="hljs-comment"># 安装依赖</span>
pnpm i

<span class="hljs-comment"># 启动服务</span>
pnpm dev
</code></pre>
</details>
<details>
<summary>打包构建</summary>
<br>
<pre><code class="hljs language-bash" lang="bash"><span class="hljs-comment"># 打包构建预发布环境</span>
pnpm build:staging

<span class="hljs-comment"># 打包构建生产环境</span>
pnpm build
</code></pre>
</details>
<details>
<summary>本地预览</summary>
<br>
<pre><code class="hljs language-bash" lang="bash"><span class="hljs-comment"># 先执行打包构建命令生成 dist 目录后再执行以下预览命令</span>
pnpm preview
</code></pre>
</details>
<details>
<summary>代码检查</summary>
<br>
<pre><code class="hljs language-bash" lang="bash"><span class="hljs-comment"># 代码校验与格式化</span>
pnpm lint

<span class="hljs-comment"># 单元测试</span>
pnpm <span class="hljs-built_in">test</span>
</code></pre>
</details>
<details>
<summary>代码提交规范</summary>
<br>
<p><code>feat</code> 新功能</p>
<p><code>fix</code> 修复错误</p>
<p><code>perf</code> 性能优化</p>
<p><code>refactor</code> 重构代码</p>
<p><code>docs</code> 文档和注释</p>
<p><code>types</code> 类型相关</p>
<p><code>test</code> 单测相关</p>
<p><code>ci</code> 持续集成、工作流</p>
<p><code>revert</code> 撤销更改</p>
<p><code>chore</code> 琐事（更新依赖、修改配置等）</p>
</details>
<h2 data-id="heading-3">特性</h2>
<p>🔥 最新的 <a href="https://link.juejin.cn?target=https%3A%2F%2Fvuejs.org%2Fapi%2Fsfc-script-setup.html" target="_blank" title="https://vuejs.org/api/sfc-script-setup.html" ref="nofollow noopener noreferrer">语法</a>、<a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fun-pany%2Fmobvue%2Fblob%2Fmain%2Fvite.config.ts" target="_blank" title="https://github.com/un-pany/mobvue/blob/main/vite.config.ts" ref="nofollow noopener noreferrer">配置</a>、<a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fun-pany%2Fmobvue%2Fblob%2Fmain%2Fpackage.json" target="_blank" title="https://github.com/un-pany/mobvue/blob/main/package.json" ref="nofollow noopener noreferrer">依赖</a></p>
<p>📍 <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fun-pany%2Fmobvue%2Fblob%2Fmain%2Fsrc%2Frouter%2Findex.ts" target="_blank" title="https://github.com/un-pany/mobvue/blob/main/src/router/index.ts" ref="nofollow noopener noreferrer">纯一级路由设计</a> - 清晰且缓存友好</p>
<p>📱 移动端适配 <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fun-pany%2Fmobvue%2Fblob%2Fmain%2Fpostcss.config.ts" target="_blank" title="https://github.com/un-pany/mobvue/blob/main/postcss.config.ts" ref="nofollow noopener noreferrer">px2vw</a> - 并且宽屏友好</p>
<p>🌐 浏览器适配 <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fvitejs%2Fvite%2Ftree%2Fmain%2Fpackages%2Fplugin-legacy" target="_blank" title="https://github.com/vitejs/vite/tree/main/packages/plugin-legacy" ref="nofollow noopener noreferrer">@vitejs/plugin-legacy</a> + <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fpostcss%2Fautoprefixer" target="_blank" title="https://github.com/postcss/autoprefixer" ref="nofollow noopener noreferrer">autoprefixer</a> + <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fbrowserslist%2Fbrowserslist" target="_blank" title="https://github.com/browserslist/browserslist" ref="nofollow noopener noreferrer">browserslist</a> - 兼容多种浏览器和低版本浏览器</p>
<p>🧩 <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fun-pany%2Fmobvue%2Fblob%2Fmain%2Fsrc%2Flayout" target="_blank" title="https://github.com/un-pany/mobvue/blob/main/src/layout" ref="nofollow noopener noreferrer">布局系统</a> - 配置化的</p>
<p>🔒 权限控制 <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fun-pany%2Fmobvue%2Fblob%2Fmain%2Fsrc%2Frouter%2Fguard.ts" target="_blank" title="https://github.com/un-pany/mobvue/blob/main/src/router/guard.ts" ref="nofollow noopener noreferrer">页面级</a>、<a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fun-pany%2Fmobvue%2Fblob%2Fmain%2Fsrc%2Fpages%2Fdemo%2Fpermission.vue" target="_blank" title="https://github.com/un-pany/mobvue/blob/main/src/pages/demo/permission.vue" ref="nofollow noopener noreferrer">按钮级</a></p>
<p>🌗 主题模式 <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fun-pany%2Fmobvue%2Fblob%2Fmain%2Fsrc%2Fcommon%2Fassets%2Fstyles%2Fvariables.css" target="_blank" title="https://github.com/un-pany/mobvue/blob/main/src/common/assets/styles/variables.css" ref="nofollow noopener noreferrer">Dark Mode</a></p>
<p>🫧 <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fun-pany%2Fmobvue%2Fblob%2Fmain%2Funo.config.ts" target="_blank" title="https://github.com/un-pany/mobvue/blob/main/uno.config.ts" ref="nofollow noopener noreferrer">拥抱原子化 CSS</a></p>
<p>📲 <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fantfu%2Fvite-plugin-pwa" target="_blank" title="https://github.com/antfu/vite-plugin-pwa" ref="nofollow noopener noreferrer">PWA</a> - 渐进式 Web 应用</p>
<p>🔧 <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Funplugin%2Funplugin-vue-components" target="_blank" title="https://github.com/unplugin/unplugin-vue-components" ref="nofollow noopener noreferrer">组件</a> 和 <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Funplugin%2Funplugin-auto-import" target="_blank" title="https://github.com/unplugin/unplugin-auto-import" ref="nofollow noopener noreferrer">API</a> 自动按需导入</p>
<p>🔎 <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fun-pany%2Fmobvue%2Fblob%2Fmain%2F.husky%2Fpre-commit" target="_blank" title="https://github.com/un-pany/mobvue/blob/main/.husky/pre-commit" ref="nofollow noopener noreferrer">Husky</a> + <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fun-pany%2Fmobvue%2Fblob%2Fmain%2Fpackage.json" target="_blank" title="https://github.com/un-pany/mobvue/blob/main/package.json" ref="nofollow noopener noreferrer">lint-staged</a> + <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fun-pany%2Fmobvue%2Fblob%2Fmain%2Feslint.config.js" target="_blank" title="https://github.com/un-pany/mobvue/blob/main/eslint.config.js" ref="nofollow noopener noreferrer">ESLint</a> - 规范代码</p>
<p>💪🏻 依然 <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fun-pany%2Fmobvue%2Fblob%2Fmain%2Ftsconfig.json" target="_blank" title="https://github.com/un-pany/mobvue/blob/main/tsconfig.json" ref="nofollow noopener noreferrer">TypeScript</a> - 严格模式且无 <code>any</code></p>
<p>👀 更多功能 - <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fun-pany%2Fmobvue%2Fblob%2Fmain%2Fsrc%2Fpinia%2Fstores%2Fkeep-alive.ts" target="_blank" title="https://github.com/un-pany/mobvue/blob/main/src/pinia/stores/keep-alive.ts" ref="nofollow noopener noreferrer">路由缓存</a>、<a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fun-pany%2Fmobvue%2Fblob%2Fmain%2Fsrc%2Fcommon%2Fcomposables%2FuseWatermark.ts" target="_blank" title="https://github.com/un-pany/mobvue/blob/main/src/common/composables/useWatermark.ts" ref="nofollow noopener noreferrer">带防御的水印</a>、<a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fun-pany%2Fmobvue%2Fblob%2Fmain%2Fsrc%2Fcommon%2Fcomposables%2FuseGrayscaleAndColorblind.ts" target="_blank" title="https://github.com/un-pany/mobvue/blob/main/src/common/composables/useGrayscaleAndColorblind.ts" ref="nofollow noopener noreferrer">灰色和色弱模式</a>、<a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fjpkleemans%2Fvite-svg-loader" target="_blank" title="https://github.com/jpkleemans/vite-svg-loader" ref="nofollow noopener noreferrer">SVG Loader</a>、<a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fun-pany%2Fmobvue%2Fblob%2Fmain%2Fsrc%2Fplugins%2Fconsole.ts" target="_blank" title="https://github.com/un-pany/mobvue/blob/main/src/plugins/console.ts" ref="nofollow noopener noreferrer">VConsole</a>、<a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fun-pany%2Fmobvue%2Fblob%2Fmain%2Fpublic%2Fapp-loading.css" target="_blank" title="https://github.com/un-pany/mobvue/blob/main/public/app-loading.css" ref="nofollow noopener noreferrer">白屏加载动画</a>、<a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fun-pany%2Fmobvue%2Fblob%2Fmain%2Ftests" target="_blank" title="https://github.com/un-pany/mobvue/blob/main/tests" ref="nofollow noopener noreferrer">单元测试</a>、<a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fun-pany%2Fmobvue%2Fblob%2Fmain%2Fsrc%2Fplugins%2Fi18n.ts" target="_blank" title="https://github.com/un-pany/mobvue/blob/main/src/plugins/i18n.ts" ref="nofollow noopener noreferrer">国际化</a></p>
<h2 data-id="heading-4">技术栈</h2>
<p><strong>Vue3</strong>：采用 Vue3 + script setup 最新的 Vue3 组合式 API</p>
<p><strong>Vant</strong>：轻量、可定制的移动端 Vue 组件库</p>
<p><strong>Pinia</strong>: 传说中的 Vuex5</p>
<p><strong>Vite</strong>：真的很快</p>
<p><strong>Vue Router</strong>：路由路由</p>
<p><strong>TypeScript</strong>：JavaScript 语言的超集</p>
<p><strong>pnpm</strong>：更快速的，节省磁盘空间的包管理工具</p>
<p><strong>ESLint</strong>：代码校验与格式化</p>
<p><strong>Axios</strong>：发送网络请求（已封装好）</p>
<p><strong>UnoCSS</strong>：具有高性能且极具灵活性的即时原子化 CSS 引擎</p>
<h2 data-id="heading-5">目录结构</h2>
<pre><code class="hljs language-sh" lang="sh"><span class="hljs-comment"># mobvue</span>
├─ .husky                <span class="hljs-comment"># commit 时进行代码校验和格式化</span>
├─ .vscode               <span class="hljs-comment"># vscode 配置和插件</span>
├─ public
│  ├─ favicon.png        <span class="hljs-comment"># 网站头像</span>
│  └─ app-loading.css    <span class="hljs-comment"># 首屏 loading 动画</span>
├─ src
│  ├─ common             <span class="hljs-comment"># 通用目录</span>
│  │  ├─ apis            <span class="hljs-comment"># 通用目录 - 接口</span>
│  │  ├─ assets          <span class="hljs-comment"># 通用目录 - 静态资源</span>
│  │  ├─ components      <span class="hljs-comment"># 通用目录 - 组件</span>
│  │  ├─ composables     <span class="hljs-comment"># 通用目录 - 组合式函数</span>
│  │  ├─ constants       <span class="hljs-comment"># 通用目录 - 常量</span>
│  │  └─ utils           <span class="hljs-comment"># 通用目录 - 工具函数</span>
│  ├─ http               <span class="hljs-comment"># 网络请求</span>
│  ├─ layout             <span class="hljs-comment"># 布局</span>
│  ├─ pages              <span class="hljs-comment"># 页面</span>
│  │  └─ login           <span class="hljs-comment"># 登录模块</span>
│  │     ├─ apis         <span class="hljs-comment"># 登录模块 - 私有接口</span>
│  │     ├─ components   <span class="hljs-comment"># 登录模块 - 私有组件</span>
│  │     ├─ composables  <span class="hljs-comment"># 登录模块 - 私有组合式函数</span>
│  │     ├─ images       <span class="hljs-comment"># 登录模块 - 私有图片</span>
│  │     └─ index.vue    <span class="hljs-comment"># 登录模块 - 页面</span>
│  ├─ pinia              <span class="hljs-comment"># 状态管理</span>
│  ├─ plugins            <span class="hljs-comment"># 插件（全局组件、自定义指令等）</span>
│  ├─ router             <span class="hljs-comment"># 路由</span>
│  ├─ App.vue            <span class="hljs-comment"># 入口页面</span>
│  └─ main.ts            <span class="hljs-comment"># 入口文件</span>
├─ tests                 <span class="hljs-comment"># 单元测试</span>
├─ types                 <span class="hljs-comment"># 类型声明</span>
├─ .editorconfig         <span class="hljs-comment"># 编辑器配置</span>
├─ .<span class="hljs-built_in">env</span>                  <span class="hljs-comment"># 所有环境</span>
├─ .env.development      <span class="hljs-comment"># 开发环境</span>
├─ .env.production       <span class="hljs-comment"># 生产环境</span>
├─ .env.staging          <span class="hljs-comment"># 预发布环境</span>
├─ eslint.config.js      <span class="hljs-comment"># eslint 配置</span>
├─ tsconfig.json         <span class="hljs-comment"># ts 配置</span>
├─ uno.config.ts         <span class="hljs-comment"># unocss 配置</span>
└─ vite.config.ts        <span class="hljs-comment"># vite 配置</span>
</code></pre>
<h2 data-id="heading-6">基础</h2>
<h3 data-id="heading-7">移动端适配</h3>
<p><em><strong>rem or vw? Of course, vw!</strong></em></p>
<p>基于 <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fpostcss%2Fpostcss" target="_blank" title="https://github.com/postcss/postcss" ref="nofollow noopener noreferrer">postcss</a> + <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fwswmsword%2Fpostcss-mobile-forever" target="_blank" title="https://github.com/wswmsword/postcss-mobile-forever" ref="nofollow noopener noreferrer">postcss-mobile-forever</a>，实现 <code>px</code> 到 <code>vw</code> 的自动转化</p>
<p>具体内置的配置如下：</p>
<pre><code class="hljs language-ts" lang="ts">{
  <span class="hljs-comment">// UI 设计稿宽度</span>
  <span class="hljs-attr">viewportWidth</span>: <span class="hljs-function">(<span class="hljs-params">file: <span class="hljs-built_in">string</span></span>) =&gt;</span> file.<span class="hljs-title function_">includes</span>(<span class="hljs-string">"vant"</span>) ? <span class="hljs-number">375</span> : <span class="hljs-number">375</span>,
  <span class="hljs-comment">// 限制视图的最大宽度</span>
  <span class="hljs-attr">maxDisplayWidth</span>: <span class="hljs-number">750</span>,
  <span class="hljs-comment">// 页面最外层选择器</span>
  <span class="hljs-attr">appSelector</span>: <span class="hljs-string">"#app"</span>,
  <span class="hljs-comment">// 是否对「页面最外层选择器」对应的元素进行描边</span>
  <span class="hljs-attr">border</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-comment">// 转换单位后保留的小数点位数</span>
  <span class="hljs-attr">unitPrecision</span>: <span class="hljs-number">3</span>,
  <span class="hljs-comment">// 转换后的单位</span>
  <span class="hljs-attr">mobileUnit</span>: <span class="hljs-string">"vw"</span>,
  <span class="hljs-comment">// 需要转换的属性</span>
  <span class="hljs-attr">propList</span>: [<span class="hljs-string">"*"</span>],
  <span class="hljs-comment">// 忽略的选择器</span>
  <span class="hljs-attr">selectorBlackList</span>: [<span class="hljs-string">".ignore"</span>, <span class="hljs-string">"keep-px"</span>],
  <span class="hljs-comment">// 忽略的属性</span>
  <span class="hljs-attr">propertyBlackList</span>: {
    <span class="hljs-string">".van-icon"</span>: <span class="hljs-string">"font"</span>
  },
  <span class="hljs-comment">// 忽略的属性值</span>
  <span class="hljs-attr">valueBlackList</span>: [<span class="hljs-string">"1px"</span>],
  <span class="hljs-comment">// 忽略的目录或文件</span>
  <span class="hljs-attr">exclude</span>: [],
  <span class="hljs-comment">// 包含块是根元素的选择器列表</span>
  <span class="hljs-attr">rootContainingBlockSelectorList</span>: [<span class="hljs-string">"van-tabbar"</span>, <span class="hljs-string">"van-popup"</span>]
}
</code></pre>
<h3 data-id="heading-8">浏览器适配</h3>
<p>基于 <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fvitejs%2Fvite%2Ftree%2Fmain%2Fpackages%2Fplugin-legacy" target="_blank" title="https://github.com/vitejs/vite/tree/main/packages/plugin-legacy" ref="nofollow noopener noreferrer">@vitejs/plugin-legacy</a> + <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fpostcss%2Fautoprefixer" target="_blank" title="https://github.com/postcss/autoprefixer" ref="nofollow noopener noreferrer">autoprefixer</a> + <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fbrowserslist%2Fbrowserslist" target="_blank" title="https://github.com/browserslist/browserslist" ref="nofollow noopener noreferrer">browserslist</a> 兼容多种浏览器和低版本浏览器</p>
<p>你可以无感的使用这套内置的配置，唯一可能需要你改动的地方，可能是 <code>package.json</code> 文件里面的 <code>browserslist</code> 配置，它默认是这样的：</p>
<pre><code class="hljs language-json" lang="json"><span class="hljs-attr">"browserslist"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>
  <span class="hljs-string">"defaults"</span>
<span class="hljs-punctuation">]</span>
</code></pre>
<p>你可以根据自己想兼容的浏览器来修改这个地方</p>
<h3 data-id="heading-9">路由设计</h3>
<h4 data-id="heading-10">纯一级路由</h4>
<p>📍 <strong>无需设置嵌套路由来实现 Layout 布局，路由配置更加清晰简洁，并且对路由缓存更加友好，告别某些场景下缓存失效的问题！</strong></p>
<p>如果不需要显示 <code>Layout</code> 布局，以<strong>登录页面</strong>为例，你可以这样配置：</p>
<pre><code class="hljs language-ts" lang="ts">  {
    <span class="hljs-attr">path</span>: <span class="hljs-string">"/login"</span>,
    <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">"@/pages/login/index.vue"</span>),
    <span class="hljs-attr">name</span>: <span class="hljs-string">"Login"</span>,
    <span class="hljs-attr">meta</span>: {
      <span class="hljs-attr">title</span>: <span class="hljs-string">"登录"</span>
    }
  }
</code></pre>
<img width="240" src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/5bb411e0ea684f0682ac6aa971a17169~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgcGFueQ==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1745077381&amp;x-signature=mBw7EibyG0fM6xZHsY13FKOC0hc%3D" loading="lazy">
<img width="240" src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/912f25b5b56348a9a862bec4cb1bd342~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgcGFueQ==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1745077381&amp;x-signature=aEpJSNdBBaYififtt2ZJAP2nSVU%3D" loading="lazy">
<p>如果需要 <code>Layout</code> 布局，以<strong>我的页面</strong>为例，你可以这样配置：</p>
<pre><code class="hljs language-ts" lang="ts">  {
    <span class="hljs-attr">path</span>: <span class="hljs-string">"/me"</span>,
    <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">"@/pages/me/index.vue"</span>),
    <span class="hljs-attr">name</span>: <span class="hljs-string">"Me"</span>,
    <span class="hljs-attr">meta</span>: {
      <span class="hljs-attr">title</span>: <span class="hljs-string">"我的"</span>,
      <span class="hljs-attr">layout</span>: {
        <span class="hljs-attr">navBar</span>: {
          <span class="hljs-attr">showNavBar</span>: <span class="hljs-literal">true</span>,
          <span class="hljs-attr">showLeftArrow</span>: <span class="hljs-literal">false</span>
        },
        <span class="hljs-attr">tabbar</span>: {
          <span class="hljs-attr">showTabbar</span>: <span class="hljs-literal">true</span>,
          <span class="hljs-attr">icon</span>: <span class="hljs-string">"user-o"</span>
        },
        <span class="hljs-attr">footer</span>: <span class="hljs-literal">true</span>
      }
    }
  }
</code></pre>
<img width="240" src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/b8a78c0c9fb04e9e81a22d441a3b5f41~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgcGFueQ==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1745077381&amp;x-signature=1neqjGlgRUhgGFKJExmRsvygYrQ%3D" loading="lazy">
<img width="240" src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/779d5f3892ea4c809b64cb05b0d9f080~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgcGFueQ==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1745077381&amp;x-signature=mL8NTtF0GG9ZmX5hxR6Qe0CNLoI%3D" loading="lazy">
<h4 data-id="heading-11">meta 配置项</h4>
<pre><code class="hljs language-ts" lang="ts">  {
    <span class="hljs-comment">/**
     * <span class="hljs-doctag">@description</span> 页面标题
     */</span>
    title?: <span class="hljs-built_in">string</span>
    <span class="hljs-comment">/**
     * <span class="hljs-doctag">@description</span> 设置能进入该路由的角色，支持多个角色叠加，默认不限制角色
     * <span class="hljs-doctag">@default</span> <span class="hljs-variable">undefined</span>
     */</span>
    roles?: <span class="hljs-built_in">string</span>[]
    <span class="hljs-comment">/**
     * <span class="hljs-doctag">@description</span> 是否缓存该路由页面，注意路由和页面都需要设置一致的 Name
     * <span class="hljs-doctag">@default</span> <span class="hljs-variable">false</span>
     */</span>
    keepAlive?: <span class="hljs-built_in">boolean</span>
    <span class="hljs-comment">/**
     * <span class="hljs-doctag">@description</span> 布局配置
     */</span>
    layout?: {
      <span class="hljs-comment">/**
       * <span class="hljs-doctag">@description</span> NavBar 配置
       */</span>
      navBar?: {
        <span class="hljs-comment">/**
         * <span class="hljs-doctag">@description</span> 是否显示 NavBar
         * <span class="hljs-doctag">@default</span> <span class="hljs-variable">false</span>
         */</span>
        showNavBar?: <span class="hljs-built_in">boolean</span>
        <span class="hljs-comment">/**
         * <span class="hljs-doctag">@description</span> 是否显示左侧箭头
         * <span class="hljs-doctag">@default</span> <span class="hljs-variable">false</span>
         */</span>
        showLeftArrow?: <span class="hljs-built_in">boolean</span>
      }
      tabbar?: {
        <span class="hljs-comment">/**
         * <span class="hljs-doctag">@description</span> 是否显示 Tabbar
         * <span class="hljs-doctag">@default</span> <span class="hljs-variable">false</span>
         */</span>
        showTabbar?: <span class="hljs-built_in">boolean</span>
        <span class="hljs-comment">/**
         * <span class="hljs-doctag">@description</span> 图标
         */</span>
        icon?: <span class="hljs-built_in">string</span>
      }
      <span class="hljs-comment">/**
       * <span class="hljs-doctag">@description</span> 是否显示 Footer
       * <span class="hljs-doctag">@default</span> <span class="hljs-variable">false</span>
       */</span>
      footer?: <span class="hljs-built_in">boolean</span>
    }
  }
</code></pre>
<h3 data-id="heading-12">权限控制</h3>
<h4 data-id="heading-13">页面级</h4>
<p>控制代码都在路由守卫 <code>@/router/guard.ts</code> 中，这里可根据具体的业务做相应的修改：</p>
<pre><code class="hljs language-ts" lang="ts"><span class="hljs-title class_">NProgress</span>.<span class="hljs-title function_">configure</span>({ <span class="hljs-attr">showSpinner</span>: <span class="hljs-literal">false</span> })

<span class="hljs-keyword">const</span> { setTitle } = <span class="hljs-title function_">useTitle</span>()

<span class="hljs-keyword">const</span> <span class="hljs-variable constant_">LOGIN_PATH</span> = <span class="hljs-string">"/login"</span>

<span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">registerNavigationGuard</span>(<span class="hljs-params">router: Router</span>) {
  <span class="hljs-comment">// 全局前置守卫</span>
  router.<span class="hljs-title function_">beforeEach</span>(<span class="hljs-function">(<span class="hljs-params">to, _from</span>) =&gt;</span> {
    <span class="hljs-title class_">NProgress</span>.<span class="hljs-title function_">start</span>()
    <span class="hljs-keyword">const</span> userStore = <span class="hljs-title function_">useUserStore</span>()
    <span class="hljs-comment">// 如果没有登录</span>
    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_">getToken</span>()) {
      <span class="hljs-comment">// 如果在免登录的白名单中，则直接进入</span>
      <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isWhiteList</span>(to)) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>
      <span class="hljs-comment">// 其他没有访问权限的页面将被重定向到登录页面</span>
      <span class="hljs-keyword">return</span> <span class="hljs-variable constant_">LOGIN_PATH</span>
    }
    <span class="hljs-comment">// 如果已经登录，并准备进入 Login 页面，则重定向到主页</span>
    <span class="hljs-keyword">if</span> (to.<span class="hljs-property">path</span> === <span class="hljs-variable constant_">LOGIN_PATH</span>) <span class="hljs-keyword">return</span> <span class="hljs-string">"/"</span>
    <span class="hljs-comment">// 判断有无该页面权限</span>
    <span class="hljs-keyword">if</span> (to.<span class="hljs-property">meta</span>.<span class="hljs-property">roles</span> ? userStore.<span class="hljs-property">roles</span>.<span class="hljs-title function_">some</span>(<span class="hljs-function"><span class="hljs-params">role</span> =&gt;</span> to.<span class="hljs-property">meta</span>.<span class="hljs-property">roles</span>!.<span class="hljs-title function_">includes</span>(role)) : <span class="hljs-literal">true</span>) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>
    <span class="hljs-comment">// 无权限则进入 403 页面</span>
    <span class="hljs-keyword">return</span> <span class="hljs-string">"/403"</span>
  })
  <span class="hljs-comment">// 全局后置钩子</span>
  router.<span class="hljs-title function_">afterEach</span>(<span class="hljs-function">(<span class="hljs-params">to</span>) =&gt;</span> {
    <span class="hljs-keyword">const</span> keepAliveStore = <span class="hljs-title function_">useKeepAliveStore</span>()
    <span class="hljs-comment">// 清除所有路由缓存</span>
    <span class="hljs-keyword">if</span> (to.<span class="hljs-property">path</span> === <span class="hljs-variable constant_">LOGIN_PATH</span>) keepAliveStore.<span class="hljs-title function_">delAllCachedRoutes</span>()
    <span class="hljs-comment">// 添加路由缓存</span>
    keepAliveStore.<span class="hljs-title function_">addCachedRoute</span>(to)
    <span class="hljs-comment">// 设置标题</span>
    <span class="hljs-title function_">setTitle</span>(to.<span class="hljs-property">meta</span>.<span class="hljs-property">title</span>)
    <span class="hljs-title class_">NProgress</span>.<span class="hljs-title function_">done</span>()
  })
}
</code></pre>
<h4 data-id="heading-14">按钮级</h4>
<p>基于<strong>权限指令</strong>和<strong>权限函数</strong>两种方式实现按钮级权限控制：</p>
<pre><code class="hljs language-html" lang="html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"权限指令"</span> <span class="hljs-attr">inset</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">v-permission</span>=<span class="hljs-string">"['admin']"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Admin 可见"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"Role admin"</span> /&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">v-permission</span>=<span class="hljs-string">"['admin', 'editor']"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Admin 或 Editor 可见"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"Role admin or editor"</span> /&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"权限函数"</span> <span class="hljs-attr">inset</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">"checkPermission(['admin'])"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Admin 可见"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"Role admin"</span> /&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">"checkPermission(['admin', 'editor'])"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Admin 或 Editor 可见"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"Role admin or editor"</span> /&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>
</code></pre>
<p>其中的关键代码只有两行：</p>
<pre><code class="hljs language-html" lang="html">// 权限指令
v-permission="['admin']"
// 权限函数
v-if="checkPermission(['admin'])"
</code></pre>
<h3 data-id="heading-15">发送 HTTP 请求</h3>
<p>大致的流程如下：</p>
<pre><code class="hljs language-mermaid" lang="mermaid">graph LR
页面/交互 --&gt; api --&gt; axios --&gt; 服务器
</code></pre>
<h4 data-id="heading-16">通用 API 模块</h4>
<p><code>src/common/apis</code> 目录存放通用的接口，而非某个页面固定使用的接口</p>
<h4 data-id="heading-17">私有 API 模块</h4>
<p>某个页面固定使用的接口，应该在当前页面目录下建立一个 <code>apis</code> 文件夹，用来存放私有接口</p>
<p>参考登录页 <code>src/pages/login/apis</code></p>
<h4 data-id="heading-18">封装的 Axios</h4>
<p><code>src/http/axios.ts</code> 是基于 axios 的封装，封装了全局 request 拦截器、response 拦截器、统一的错误处理、统一的超时处理、baseURL 设置等</p>
<h3 data-id="heading-19">多环境</h3>
<h4 data-id="heading-20">打包构建</h4>
<p>项目开发完成，打包构建代码时，内置两种环境：</p>
<pre><code class="hljs language-sh" lang="sh"><span class="hljs-comment"># 打包构建预发布环境</span>
pnpm build:staging

<span class="hljs-comment"># 打包构建生产环境</span>
pnpm build
</code></pre>
<h4 data-id="heading-21">环境变量</h4>
<p>在 <code>.env.production</code> 等形如 <code>.env.xxx</code> 文件中，配置了该环境对应的一些环境变量，例如：</p>
<pre><code class="hljs language-sh" lang="sh"><span class="hljs-comment">## 后端接口地址（如果解决跨域问题采用反向代理就只需写相对路径）</span>
VITE_BASE_URL = /api/v1

<span class="hljs-comment">## 开发环境域名和静态资源公共路径（一般 / 或 ./ 都可以）</span>
VITE_PUBLIC_PATH = /
</code></pre>
<p>使用方式：</p>
<pre><code class="hljs language-ts" lang="ts"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-keyword">import</span>.<span class="hljs-property">meta</span>.<span class="hljs-property">env</span>.<span class="hljs-property">VITE_BASE_API</span>)
</code></pre>
<h2 data-id="heading-22">进阶</h2>
<h3 data-id="heading-23">ESLint</h3>
<p>规范代码很重要！</p>
<ul>
<li>配置项在 <code>eslint.config.js</code> 文件中</li>
<li>推荐安装 VSCode 的 <code>ESLint</code> 插件，它可在写代码时，将不符合规范的代码标红，并且在你保存代码时自动修复一些简单的标红的代码</li>
<li>手动校验和格式化命令 <code>pnpm lint</code>（提交代码前可以执行该命令）</li>
</ul>
<h3 data-id="heading-24">代码提交校验</h3>
<p>项目采用 <code>husky</code> + <code>lint-staged</code> 的方式，在提交代码的时候，进行全局 <code>ts</code> 类型检查和 <code>eslint</code> 校验</p>
<p><code>husky</code> 会自动初始化，如果发现没有正常初始化，也可以通过命令 <code>pnpm prepare</code> 初始化 <code>husky</code></p>
<h3 data-id="heading-25">跨域</h3>
<h4 data-id="heading-26">反向代理</h4>
<p><code>vite.config</code> 里有 <code>proxy</code> 进行反向代理，与之对应的生产环境，则可以使用 <code>nginx</code> 来做反向代理</p>
<pre><code class="hljs language-ts" lang="ts"><span class="hljs-attr">proxy</span>: {
  <span class="hljs-string">"/api/v1"</span>: {
    <span class="hljs-attr">target</span>: <span class="hljs-string">"https://xxxxxx"</span>,
    <span class="hljs-comment">// 是否为 WebSocket</span>
    <span class="hljs-attr">ws</span>: <span class="hljs-literal">false</span>,
    <span class="hljs-comment">// 是否允许跨域</span>
    <span class="hljs-attr">changeOrigin</span>: <span class="hljs-literal">true</span>
  }
}
</code></pre>
<h4 data-id="heading-27">CORS</h4>
<p>这种方案对于前端来说没有什么工作量，和正常发送请求写法上没有任何区别，工作量基本都在后端这里</p>
<p>实现 <a href="https://link.juejin.cn?target=http%3A%2F%2Fwww.ruanyifeng.com%2Fblog%2F2016%2F04%2Fcors.html" target="_blank" title="http://www.ruanyifeng.com/blog/2016/04/cors.html" ref="nofollow noopener noreferrer">CORS</a> 之后，不管是开发环境还是生产环境，都能方便的调用接口</p>
<h3 data-id="heading-28">SVG</h3>
<p><code>vite-svg-loader</code> 插件提供的的能力，可以将 SVG 文件导入为 Vue 组件！</p>
<p>比如 404 页面：</p>
<pre><code class="hljs language-ts" lang="ts">&lt;script lang=<span class="hljs-string">"ts"</span> setup&gt;
<span class="hljs-keyword">import</span> <span class="hljs-title class_">Layout</span> <span class="hljs-keyword">from</span> <span class="hljs-string">"./components/Layout.vue"</span>
<span class="hljs-keyword">import</span> <span class="hljs-title class_">Svg404</span> <span class="hljs-keyword">from</span> <span class="hljs-string">"./images/404.svg?component"</span> <span class="hljs-comment">// vite-svg-loader 插件的功能</span>
&lt;/script&gt;

<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">Layout</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">Svg404</span> /&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">Layout</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span>
</code></pre>
<h3 data-id="heading-29">自动按需导入</h3>
<p>基于 <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Funplugin%2Funplugin-vue-components" target="_blank" title="https://github.com/unplugin/unplugin-vue-components" ref="nofollow noopener noreferrer">unplugin-vue-components</a> 和 <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Funplugin%2Funplugin-auto-import" target="_blank" title="https://github.com/unplugin/unplugin-auto-import" ref="nofollow noopener noreferrer">unplugin-auto-import</a> 实现的组件和 API 自动按需导入</p>
<p>如果我们要使用 <code>Vant</code> 的按钮组件，例如 <code>van-button</code>，不用再手动通过 <code>import</code> 语句导入组件和样式，而是可以直接使用：</p>
<pre><code class="hljs language-html" lang="html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"primary"</span>&gt;</span>主要按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>
</code></pre>
<p>如果我们要使用 Vue 的 <code>ref</code> API，也不用再手动导入，直接使用即可：</p>
<pre><code class="hljs language-ts" lang="ts"><span class="hljs-keyword">const</span> loading = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>)
</code></pre>
<p><em>所有已经内置的自动按需导入：<code>vue</code>、<code>vue-router</code>、<code>pinia</code>、<code>vant</code> 相关的 API 和组件，它们四个会自动按需导入，切记不要手动 <code>import</code></em></p>
<h3 data-id="heading-30">自动生成类型</h3>
<p><code>types/auto</code> 目录下为自动生成的类型，无需手动管理，切记不要手动修改</p>
<h2 data-id="heading-31">常见问题</h2>
<h3 data-id="heading-32">报错</h3>
<ul>
<li>AI 一下可以解决 <code>99%</code> 的报错</li>
<li>尝试删除 <code>node_modules</code> 和 <code>.lock</code> 文件后再次依赖</li>
<li>检查环境是否和作者推荐的一致</li>
<li>重启一下？</li>
</ul>
<h3 data-id="heading-33">依赖超时</h3>
<ul>
<li>国内用户可以设置最新的淘宝源加快依赖速度 <code>https://registry.npmmirror.com</code></li>
</ul>
<h3 data-id="heading-34">热更新失效</h3>
<ul>
<li>检查配置路由时填写的路径是否正确（特别是字母大小写问题）</li>
</ul>
<h3 data-id="heading-35">本地开发时切换路由导致页面重载</h3>
<p><em>只会在开发环境出现，不会影响生成环境</em></p>
<ul>
<li>由 <code>unplugin-vue-components</code> 导致的问题，可等待插件修复</li>
<li>也可以取消自动按需导入样式，改为自己手动全量导入 <code>Vant</code> 样式来解决该问题</li>
</ul>
<h2 data-id="heading-36">预览图</h2>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/712ed39c153e41f4a8adb39154c35151~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgcGFueQ==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1745077381&amp;x-signature=bNlg5xzORF9aTxOlfkydpLRdIeA%3D" alt="image.png" loading="lazy"></p>
<h2 data-id="heading-37">相关链接</h2>
<p><strong>在线预览</strong>：<a href="https://link.juejin.cn?target=https%3A%2F%2Fun-pany.github.io%2Fmobvue" target="_blank" title="https://un-pany.github.io/mobvue" ref="nofollow noopener noreferrer">github-pages</a></p>
<p><strong>GitHub 仓库</strong>：<a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fun-pany%2Fmobvue" target="_blank" title="https://github.com/un-pany/mobvue" ref="nofollow noopener noreferrer">github</a></p>
<p><strong>Gitee 仓库</strong>：<a href="https://link.juejin.cn?target=https%3A%2F%2Fgitee.com%2Fun-pany%2Fmobvue" target="_blank" title="https://gitee.com/un-pany/mobvue" ref="nofollow noopener noreferrer">gitee</a></p>
<p><strong>交流群</strong>：<a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fun-pany%2Fmobvue%2Fissues%2F3" target="_blank" title="https://github.com/un-pany/mobvue/issues/3" ref="nofollow noopener noreferrer">查看进群方式</a></p>
<p><strong>发行版 &amp; 更新日志</strong>：<a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fun-pany%2Fmobvue%2Freleases" target="_blank" title="https://github.com/un-pany/mobvue/releases" ref="nofollow noopener noreferrer">releases</a></p></div></div>