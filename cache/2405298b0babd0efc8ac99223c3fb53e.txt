
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/vipstone/p/18872586" title="发布于 2025-05-12 14:40">
    <span role="heading" aria-level="2">LangChain4j如何自定义文档转换器实现数据清洗？</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>LangChain4j 提供了 3 种 RAG（Retrieval-Augmented Generation，检索增强生成）实现，我们通常在原生或高级的 RAG 实现中，要对数据进行清洗，也就是将外接知识库中的原数据进行噪音去除，留下有价值的信息。</p>
<blockquote>
<p>例如在带有 HTML 标签的文本中，HTML 标签就是噪音，他对于搜索结果是没有任何帮助，甚至会影响查询结果的，因此我们就需要将 HTML 标签进行清除。</p>
</blockquote>
<p>那问题来了，怎么进行数据清洗呢？</p>
<p>这就要使用到文档转换器了，那么在不使用 LangChain4j 内置文档转换器的前提下（因为业务需求是复杂且多变的，因此很多时候我们需要使用自定义文档转换器才能实现预期的效果），那怎么实现呢？接下来一起来看。</p>
<h2 id="自定义文档转换器">自定义文档转换器</h2>
<p>以去除文本中的 HTML 标签为例，LangChain4j 中自定义文档转换器的实现步骤如下：</p>
<ol>
<li>新建类实现 DocumentTransformer 接口。</li>
<li>重写 transform 和 transformAll 方法，前者是对 Document 对象进行文档转换，后者是对 List<document> 进行数据转换。</document></li>
<li>在 transform 和 transformAll 方法中，实现数据清除的具体业务落地。</li>
</ol>
<h2 id="具体实现代码">具体实现代码</h2>
<pre><code class="language-java">import dev.langchain4j.data.document.Document;
import dev.langchain4j.data.document.DocumentTransformer;

import java.util.ArrayList;
import java.util.List;

/**
 * 自定义文档转换器
 */
public class HtmlToTextDocumentTransformer implements DocumentTransformer {
    @Override
    public Document transform(Document document) {
        return Document.from(removeHtmlTags(document.text()));
    }

    // 使用正则表达式清除内容中的 HTML 标签
    public static String removeHtmlTags(String html) {
        if (html == null || html.isEmpty()) {
            return "";
        }
        // 定义正则表达式，匹配所有HTML标签
        String regex = "&lt;[^&gt;]+&gt;";
        // 替换所有匹配的标签为空字符串
        return html.replaceAll(regex, "").trim();
    }

    @Override
    public List&lt;Document&gt; transformAll(List&lt;Document&gt; documents) {
        List&lt;Document&gt; list = new ArrayList&lt;Document&gt;();
        documents.stream().forEach(document -&gt; {
            list.add(this.transform(document));
        });
        return list;
    }
}
</code></pre>
<h2 id="调用文档转换器">调用文档转换器</h2>
<pre><code class="language-java">Document htmlDoc = Document.from(
        "&lt;html&gt;&lt;body&gt;&lt;p&gt;Clean &lt;b&gt;me&lt;/b&gt;!&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
);

// 文档转换器
DocumentTransformer transformer = new HtmlToTextDocumentTransformer();
Document cleanedDoc = transformer.transform(htmlDoc);

System.out.println(cleanedDoc.text());
</code></pre>
<p>最终的执行结果为：</p>
<blockquote>
<p>Clean me!</p>
</blockquote>
<h2 id="小结">小结</h2>
<p>文档转换器只是实现生产级别 RAG 的实现步骤之一，生产级别的 RAG 实现的步骤通常包含：文档加载器、文档解析器、文档转换器、文档分词器、文档向量化、向量持久化、向量检索等过程，而且每个过程可能都要反复调优，才能实现生产级别的准确性要求，所以道阻且长，吾辈尚需努力啊！</p>
<blockquote>
<p>本文已收录到我的技术小站 <a href="https://www.javacn.site" target="_blank" rel="noopener nofollow">www.javacn.site</a>，其中包含的内容有：Spring AI、LangChain4j、Dify、Agent、MCP、Function Call、RAG、向量数据库、Prompt、多模态、向量数据库、嵌入模型等内容。</p>
</blockquote>

</div>
<div id="MySignature" role="contentinfo">
    <div style="text-align: center; color: red">
关注下面二维码，订阅更多精彩内容。
<br>
<img style="margin-left: 0px" src="https://images.cnblogs.com/cnblogs_com/vipstone/848916/o_211225130402_gognzhonghao.jpg">
</div>

<div style="display: none">
    <img src="http://icdn.apigo.cn/gitchat/rabbitmq.png?imageView2/0/w/500/h/400">
</div>
<div style="margin-bottom: 50px; display: none">

<img title="微信打赏" src="http://icdn.apigo.cn/myinfo/wchat-pay.png" alt="微信打赏">
<br>

<div style="display: none">
<span style="display: block; position: absolute; height: 40px; top: 50%; margin-top: -20px">关注公众号（加好友）：</span>

<img style="margin-left: 144px" src="http://icdn.apigo.cn/gongzhonghao2.png?imageView2/0/w/120/h/120">
</div>
<p></p>

<div id="AllanboltSignature">
    <p style="border-top: #e0e0e0 1px dashed; border-right: #e0e0e0 1px dashed; border-bottom: #e0e0e0 1px dashed; border-left: #e0e0e0 1px dashed; padding-top: 10px; padding-right: 10px; padding-bottom: 10px; padding-left: 60px; background: url(&quot;https://images.cnblogs.com/cnblogs_com/lloydsheng/239039/o_copyright.gif&quot;) #e5f1f4 no-repeat 1% 50%; font-family: 微软雅黑; font-size: 11px" id="PSignature">
        <br> 作者：
        <a href="http://vipstone.cnblogs.com/" target="_blank">王磊的博客</a>
        <br> 出处：
        <a href="http://vipstone.cnblogs.com/" target="_blank">http://vipstone.cnblogs.com/</a>
        <br>
    </p>
</div></div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.6498419192708333" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-12 14:40">2025-05-12 14:40</span>&nbsp;
<a href="https://www.cnblogs.com/vipstone">磊哥|www.javacn.site</a>&nbsp;
阅读(<span id="post_view_count">102</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18872586);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18872586', targetLink: 'https://www.cnblogs.com/vipstone/p/18872586', title: 'LangChain4j如何自定义文档转换器实现数据清洗？' })">举报</a>
</div>
        