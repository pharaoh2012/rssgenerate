
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ITnoteforlsy/p/18816049" title="发布于 2025-04-09 12:02">
    <span role="heading" aria-level="2">C++宏定义中可变参数列表__VA_ARGS__ 及 QT 提供的宏 QT_OVERLOADED_MACRO</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p><strong>1. 基本用法</strong></p>
<p><strong>VA_ARGS</strong> 是 C/C++ 中的预定义宏，用于在宏定义中表示可变参数列表（Variadic Arguments），需与省略号 ... 配合使用。其核心作用是将宏调用中的可变参数原样传递给展开后的代码。</p>
<pre><code>#define LOG(format, ...) printf(format, __VA_ARGS__)
LOG("Value: %d", 42);  // 展开为 printf("Value: %d", 42)
</code></pre>
<p>注意: <mark><strong>VA_ARGS</strong> 无法直接访问可变参数列表内的单个参数，也无法直接知道传递了多少个参数。</mark></p>
<p><strong>2. ##的使用</strong></p>
<p>当 <strong>VA_ARGS</strong> 为空时，上面的用法会出现错误，因为format的后面多了一个逗号。为了避免语法错误需要使用 ## 告诉编译器，当可变参数为空时自动去掉前面的逗号。</p>
<pre><code>#define LOG(format, ...) printf(format, ##__VA_ARGS__)
LOG("Value: %d", 42);  // 展开为 printf("Value: %d", 42)
LOG("some message");  // 展开为 printf("some message")
</code></pre>
<p><strong>3. 获取可变参数的个数</strong></p>
<p>常见的方式如下，parameterNum()得出了输入的参数数目。</p>
<pre><code>#define get5th(a1, a2, a3, a4, a5, ...) a5
// ... getnth(a1, a2, a3, ... , an, ...) an
#define parameterNum(...) get5th(__VA_ARGS__, 4, 3, 2, 1)

parameterNum(a)
//get5th(a, 4, 3, 2, 1)
//1

parameterNum(a, b, c)
//get5th(a, b, c, 4, 3, 2, 1)
//3
</code></pre>
<p>但是当__VA_ARGS__参数数目为0时会出现多余的逗号，计算结果还是1，需要进一步处理。</p>
<pre><code>#define __COUNT_ARGS(_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, N, ...) N
#define COUNT_ARGS(...) __COUNT_ARGS(, ##__VA_ARGS__, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0)

COUNT_ARGS(a)
//__COUNT_ARGS(a, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0)
//1

COUNT_ARGS()
//__COUNT_ARGS(, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0)
//0
</code></pre>
<p><strong>4. QT 预置的宏</strong></p>
<p>QT 在文件 qoverload.h 中提供了对可变参数的宏，单可变参数数量小于10个时可以直接使用QT提供的宏 QT_OVERLOADED_MACRO(MACRO, ...)。</p>
<pre><code>#define QT_VA_ARGS_CHOOSE(_1, _2, _3, _4, _5, _6, _7, _8, _9, N, ...) N
#define QT_VA_ARGS_EXPAND(...) __VA_ARGS__ // Needed for MSVC
#define QT_VA_ARGS_COUNT(...) QT_VA_ARGS_EXPAND(QT_VA_ARGS_CHOOSE(__VA_ARGS__, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0))
#define QT_OVERLOADED_MACRO_EXPAND(MACRO, ARGC) MACRO##_##ARGC
#define QT_OVERLOADED_MACRO_IMP(MACRO, ARGC) QT_OVERLOADED_MACRO_EXPAND(MACRO, ARGC)
#define QT_OVERLOADED_MACRO(MACRO, ...) QT_VA_ARGS_EXPAND(QT_OVERLOADED_MACRO_IMP(MACRO, QT_VA_ARGS_COUNT(__VA_ARGS__))(__VA_ARGS__))
</code></pre>
<p>用法示例：</p>
<pre><code>#define sum_1(num1) num1
#define sum_2(num1, num2) num1 + num2
#define sum_3(num1, num2, num3) num1 + num2 + num3
#define sum_4(num1, num2, num3, num4) num1 + num2 + num3 + num4
#define sum_5(num1, num2, num3, num4, num5) num1 + num2 + num3 + num4 + num5

#define sum(...) QT_OVERLOADED_MACRO(sum,  __VA_ARGS__) 

int x = sum(1,2);
//int x = 1+2;
QString s = sum("a", "b");
// QString s = "a" +"b";
</code></pre>
<p>参考：<br>
<a href="https://blog.csdn.net/skyflying2012/article/details/38436711" target="_blank" rel="noopener nofollow">C语言可变参数宏定义方法</a><br>
<a href="https://zhuanlan.zhihu.com/p/61152480" target="_blank" rel="noopener nofollow">【Just For Fun】C - 宏开发 - 选取第 n 项参数、按照参数数目展开不同的宏、缺陷</a><br>
<a href="https://blog.csdn.net/tyustli/article/details/131969837" target="_blank" rel="noopener nofollow">【宏定义】——获取可变参数宏的参数数量</a></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.8782276514479167" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-09 12:03">2025-04-09 12:02</span>&nbsp;
<a href="https://www.cnblogs.com/ITnoteforlsy">永不停转</a>&nbsp;
阅读(<span id="post_view_count">71</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18816049" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18816049);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18816049', targetLink: 'https://www.cnblogs.com/ITnoteforlsy/p/18816049', title: 'C++宏定义中可变参数列表__VA_ARGS__ 及 QT 提供的宏 QT_OVERLOADED_MACRO' })">举报</a>
</div>
        