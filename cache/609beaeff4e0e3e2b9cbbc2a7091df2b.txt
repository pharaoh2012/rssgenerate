
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoxi666/p/18827733" title="发布于 2025-04-15 22:52">
    <span role="heading" aria-level="2">LLM中的Top-K/Top-p/温度都是怎么发挥作用的？</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="写在前面">写在前面</h1>
<p>许多大模型具有推理参数，用于控制输出的“随机性”。常见的几个是 Top-K、Top-p，以及温度。比如我们常用的 Dify 平台就支持 Top-p 和 温度 的设置：</p>
<p><img src="https://rcnmmuq87eqh.feishu.cn/space/api/box/stream/download/asynccode/?code=OWM4Y2Y1ZTZkNDVjMGU5ZDlkMTg3MWU0NzJmYTI0YTBfQUU0R2hueE1xYXNqVnB4dWYxdXJTRUdldGdMc243d2FfVG9rZW46QU9pN2JsV0tUb3NXa0p4R2RSWWNpaUFnbmU5XzE3NDQ3MjY5MjU6MTc0NDczMDUyNV9WNA" alt="" loading="lazy"></p>
<p>鼠标放到问号上面，可以看到各自的解释：</p>
<p><strong>Top-p：</strong></p>
<ul>
<li><strong>含义：</strong>Kernel sampling threshold. Used to determine the randomness of the results. The higher the value, the stronger the randomness. The higher the possibility of getting different answers to the same question.</li>
<li><strong>翻译过来就是：</strong>核采样阈值。用于决定结果的随机性。值越高，随机性越强。对于同一个问题，得到不同答案的可能性越高。</li>
</ul>
<p><strong>温度：</strong></p>
<ul>
<li><strong>含义：</strong>The probability threshold of the nucleus sampling method during the generation process. The larger the value is, the higher the randomness of generation will be. The smaller the value is, the higher the certainty of generation will be.</li>
<li><strong>翻译过来就是：</strong>在生成过程中，核采样方法的概率阈值。值越大，生成的随机性越高。值越小，生成的确定性越高。</li>
</ul>
<p>看起来，他们都可以控制模型输出内容的随机性。那么它们有什么不同呢？以及作用机制又有哪些区别呢？本文将一探究竟。</p>
<h1 id="前置知识llm-输出概率分布">前置知识：LLM 输出概率分布</h1>
<p>LLM 通常对一系列 token 进行操作，这些 token 可以是单词、字母或子词单元。操作后得到的 token 集，称为 LLM 的词汇表。</p>
<p>LLM 接收一个输入的 token 序列，然后尝试预测下一个 token。它通过使用 Softmax 函数作为网络的最后一层，为所有可能的 token 生成离散概率分布来实现此目的。这是 LLM 的原始输出。</p>
<p>例如，如果我们的词汇量为 5，则输出可能如下所示（大多数 LLMs 的词汇量显然要大得多）：</p>
<center>t0→0.4</center>
<center>t1→0.2</center>
<center>t2→0.2</center>
<center>t3→0.15</center>
<center>t4→0.05</center>
<p>由于这是一个概率分布，因此所有值的总和为 1。一旦我们有了这个概率分布，我们就可以决定如何从中采样，这就是 Top-K 和 Top-p 的作用所在。</p>
<p>小记：Top-K 和 Top-p 是两种不同的采样方法。</p>
<h1 id="top-k-采样">Top-K 采样</h1>
<p>Top-K 采样的工作原理如下：</p>
<ol>
<li>按概率的降序排列token。</li>
<li>选择前 K 个 token 来创建新的分布。</li>
<li>从这些 token 中抽取样本。</li>
</ol>
<p>例如，假设使用上述示例中的 Top-3 策略进行采样。排名前 3 的是：</p>
<center>t0→0.4</center>
<center>t1→0.2</center>
<center>t2→0.2</center>
<p>但是，概率加起来不再等于 1 ，所以必须用前 3 个 token 的总和来进行规一化。我们将每个概率除以 0.4+0.2+0.2=0.8，得到前 3 个 token 的新概率分布：</p>
<center>t0→0.5</center>
<center>t1→0.25</center>
<center>t2→0.25</center>
<p>现在可以通过从中采样来选择一个 token。</p>
<p>如果设置 K=1，那么会得到所谓的贪婪策略，因为总是选择最可能的token。</p>
<h1 id="top-p-采样">Top-p 采样</h1>
<p>这种策略（也称为核采样，英文通常为 Nucleus sampling 或 Kernel sampling）与 Top-K 类似，但我们不是选择一定数量的 token，而是选择足够多的 token 来“覆盖”由参数 p 定义的一定概率，方式如下：</p>
<ol>
<li>按概率的降序排列 token。</li>
<li>选择最少数量的顶级 token，使得它们的累积概率至少为 p。</li>
<li>从这些 token 中抽取样本。</li>
</ol>
<p>例如，假设我们使用 p=0.5 和 top-p 策略进行采样，同样取自上述示例。该过程如下：</p>
<ol>
<li>最上面的 token t0 被选中。它的概率是 0.4，我们的累积概率也是 0.4。</li>
<li>累积概率小于 p=0.5 ，因此我们选择下一个token。</li>
<li>下一个token t1 的概率为 0.2，现在我们的累积概率为 0.6。</li>
<li>累积概率至少为 p=0.5 的值，因此我们停止。</li>
</ol>
<p>结果是只有前 2 个 token 被选中：</p>
<center>t0→0.4</center>
<center>t1→0.2</center>
<p>再次，我们必须通过除以总和 0.4+0.2=0.6 来对概率进行归一化，得到：</p>
<center>t0→0.67</center>
<center>t1→0.33</center>
<p>我们现在可以从该分布中采样，就像之前使用 Top-K 所做的那样。</p>
<p><strong>再次理解核采样的定义</strong></p>
<p><strong>核采样</strong>只关注概率分布的核心部分，而忽略了尾部部分。因为它只关注概率分布的核心部分，而忽略了尾部部分。</p>
<p>例如，如果 p=0.9，那么我们只从累积概率达到 0.9 的最小单词集合中选择一个单词，而不考虑其他累积概率小于 0.9 的单词。 这样可以避免采样到一些不合适或不相关的单词，同时也可以保留一些有趣或有创意的单词。</p>
<p>Top-p 值通常设置为比较高的值（如0.75），目的是限制低概率 token 的长尾。</p>
<p>有兴趣的同学可参阅论文“THE CURIOUS CASE OF NEURAL TEXT DeGENERATION”，详细了解核采样。</p>
<h1 id="温度对采样的影响">温度对采样的影响</h1>
<p>温度会影响模型输出的“随机性”，其作用与前两个参数不同。虽然 Top-K 和 Top-p 直接作用于输出概率，但温度会影响 Softmax 函数本身，因此需要简要回顾一下其工作原理。</p>
<p>也即：温度影响的环节，更靠前一些。</p>
<p>Softmax 函数接收一个由 n 个实数组成的向量，然后将其标准化为这 n 个元素的离散概率分布，且概率的总和为 1。标准 Softmax 函数定义如下：</p>
<p></p><div class="math display">\[\sigma(\vec{x})_i = \frac{e^{x_i}}{\sum_{j=1}^{n} e^{x_j}} 
\]</div><p></p><p>该函数应用于输入向量<span class="math inline">\(\vec{x}\)</span>中的每个元素，以生成相应的输出向量。即：</p>
<ol>
<li>指数函数应用于元素<span class="math inline">\(x_i\)</span>。</li>
<li>然后将结果值通过所有元素<span class="math inline">\(x_j\)</span>的指数和进行归一化。这确保了结果值的总和为 1，从而使输出向量成为概率分布。</li>
</ol>
<p>除了将输出转换为概率分布之外，Softmax还会改变每个元素之间的相对差异。Softmax 函数的效果取决于输入元素的范围<span class="math inline">\(x_i\)</span>：</p>
<ul>
<li>如果被比较的两个输入元素都是<span class="math inline">\(x_i\)</span>&lt; 1，那么它们之间的差异就会<strong>缩小</strong>。</li>
<li>如果被比较的元素中至少有一个大于 1，那么它们之间的差异就会被<strong>放大</strong>。这可以使模型对预测更加“确定”。</li>
</ul>
<p>这可以使模型对预测更加“确定”。这句话怎么理解呢？</p>
<p>简单理解就是：不同 token 之间的差异越大，那么模型输出时，总是倾向于选择头部 token，自然就表现得更为“确定”。</p>
<p>我们看看这个标准 Softmax函数的输入和输出值，看看相对差异是如何改变的。当输入值小于 1 时，输出值的相对差异会减小：</p>
<p><img src="https://rcnmmuq87eqh.feishu.cn/space/api/box/stream/download/asynccode/?code=M2Y2NmIxOTQwZWRkMGZkZDZkMzYxYzFiY2Q1NmFiNWRfdnhzaXJzSnZpanJJZG9YVlRJTG41VVJ3TDVEN0FKU1JfVG9rZW46UTV3NmJkRHlDb3Jzd0V4dGJLNmNYN3ZGblhjXzE3NDQ3MjY5MjU6MTc0NDczMDUyNV9WNA" alt="" loading="lazy"></p>
<p>相反，当某些输入值大于 1 时，它们之间的差异在输出值中会被放大：</p>
<p><img src="https://rcnmmuq87eqh.feishu.cn/space/api/box/stream/download/asynccode/?code=ZDI3ZTA5N2JhMGFlZWUxMzQwYzYyNzhlOWQ2NWUyY2NfY3hTcHFtMTREUE5Ea2pQSFl3MEhnTGdyTDNKMWhxajZfVG9rZW46Qlg5c2JoWlJ2b2N0VVJ4d2s2NWN0c3JIbmloXzE3NDQ3MjY5MjU6MTc0NDczMDUyNV9WNA" alt="" loading="lazy"></p>
<p>我们已经知道，输出值的缩小或放大会影响模型预测的“确定性”。那么，如何控制 Softmax 函数输出的概率分布的“确定性”呢？这就是“温度”参数的作用所在。考虑以下形式的“缩放” Softmax 函数：</p>
<p></p><div class="math display">\[\sigma(\vec{x})_i = \frac{e^{\frac{x_i}{T}}}{\sum_{j=1}^{n} e^{\frac{x_j}{T}}}
\]</div><p></p><p>唯一的区别是：指数函数中应用了逆缩放参数 <span class="math inline">\(\frac{1}{T}\)</span> ，其中 T 定义为温度。让我们考虑 T 对输出的影响：</p>
<ul>
<li>如果为 0 &lt; T &lt; 1，则 <span class="math inline">\(x_i\)</span> 输入值与 0 之间的距离会进一步拉大，差异也会被<strong>放大</strong>。</li>
<li>如果为 T &gt; 1 ，则 <span class="math inline">\(x_i\)</span> 输入值将被推向 0，差异就会<strong>减少</strong>。</li>
</ul>
<p>让我们再次绘制 Softmax函数的输出，但这次我们将比较 T 的不同值：</p>
<p><img src="https://rcnmmuq87eqh.feishu.cn/space/api/box/stream/download/asynccode/?code=MDJhYTdjZWRhZDAwMzRlMDI1YTc0ZjVjOGM1Mjk0OTlfR2tXZ0xReUpMTjFwSnpyRHlwTk43eDNxdXZXVEhhSGhfVG9rZW46SkM0bGJEUnNjb2J3UDN4SkxBYmNRNm1xbnljXzE3NDQ3MjY5MjU6MTc0NDczMDUyNV9WNA" alt="" loading="lazy"></p>
<p>可见，温度 T 的值越小，输入值之间的差异就越大。相反，温度 T 的值越大，差异就越小。</p>
<p>还可以考虑极端情况下发生的情况，以更直观地了解温度如何影响输出：</p>
<ul>
<li>如果是 T 趋近于 0，那么我们将处理极大的指数，因此具有最大值的<span class="math inline">\(x_i\)</span>元素将占主导地位，即它的概率将接近 1，而所有其他元素的概率将接近 0。这相当于一种贪婪策略，其中始终选择顶部token，非常“确定”。</li>
<li>如果是 T 趋近无穷大 ∞，则指数全部变为<span class="math inline">\(e^0\)</span>= 1，这会使输出变为均匀分布，即所有概率变为<span class="math inline">\(\frac{1}{n}\)</span> 。也就是说，所有token的概率都相等。当然，这显然不再是一个有用的模型。</li>
</ul>
<p>本质上，温度会改变概率分布的形状。随着温度升高，概率差异会减小，从而导致模型输出更“随机”。这表现为 LLM 输出更具“创造性”。相反，较低的温度会使输出更具确定性。</p>
<p>顺便说一句，该参数之所以被称为“温度”，与热力学中的概念有关：在较高温度下，气体或流体的浓度会比在低温下扩散（扩散）得更快。有兴趣的同学可参阅模拟退火中的温度概念，下图引用了 <a href="https://en.wikipedia.org/wiki/Simulated_annealing" target="_blank" rel="noopener nofollow">Simulated annealing - Wikipedia</a> 的图片（随着温度的降低，跳跃越来越不随机，最优解也越来越稳定）。</p>
<p><img src="https://rcnmmuq87eqh.feishu.cn/space/api/box/stream/download/asynccode/?code=YmEwYTRkZjc2M2IxY2NlYTMxZDE3ZDg0MGRkYWYzMzJfbTRPV0FTVEFSWThzbHVLTU9FNHZZNXU0NVIyM1R5SlVfVG9rZW46QTZlUGJqWHBHb2tkb3R4SEJJVGNBMFIxbm9oXzE3NDQ3MjY5MjU6MTc0NDczMDUyNV9WNA" alt="" loading="lazy"></p>
<h1 id="总结">总结</h1>
<p>Top-K、Top-p 和温度都是影响生成token方式的推理参数，它们都作用于大模型的输出概率分布。</p>
<ul>
<li><strong>Top-K 和 Top-p 均为采样策略</strong>。它们并非特定于 LLMs，甚至根本不特定于神经网络。它们只是从离散概率分布中采样的方法。</li>
<li>Top-K 将我们要考虑的特定token限制为一定数量（K）。</li>
<li>Top-p 将我们限制在特定的累积概率（p）内。</li>
</ul>
<p>相比之下，温度的作用方式不同：</p>
<ul>
<li><strong>温度不是一种采样策略</strong>，而是网络最后一层的 Softmax 函数的一个参数。</li>
<li>温度影响概率分布的形状。</li>
<li>高温使 token 概率彼此接近，这使得输出更加随机、“有创意”。</li>
<li>低温通过放大概率差异，这使得输出更加确定。</li>
</ul>
<h1 id="扩展阅读">扩展阅读</h1>
<ul>
<li>论文：<a href="https://arxiv.org/pdf/1904.09751v1" target="_blank" rel="noopener nofollow">THE CURIOUS CASE OF NEURAL TEXT DeGENERATION</a>，核采样</li>
<li>论文：<a href="https://arxiv.org/pdf/2203.11171" target="_blank" rel="noopener nofollow">Self-Consistency Improves Chain of Thought Reasoning in Language Models</a>，提到了多种采样方法的利用</li>
<li><a href="https://peterchng.com/blog/2023/05/02/token-selection-strategies-top-k-top-p-and-temperature/" target="_blank" rel="noopener nofollow">https://peterchng.com/blog/2023/05/02/token-selection-strategies-top-k-top-p-and-temperature/</a> 本文有部分片段翻译自该文章</li>
<li>各种激活函数：<a href="https://blog.csdn.net/hy592070616/article/details/120618490" target="_blank" rel="noopener nofollow">机器学习中的数学——激活函数（七）：Softmax函数_softmax激活函数的公式-CSDN博客</a></li>
<li>一文详解Softmax函数：<a href="https://zhuanlan.zhihu.com/p/105722023" target="_blank" rel="noopener nofollow">https://zhuanlan.zhihu.com/p/105722023</a></li>
<li>模拟退火解释：<a href="https://www.baeldung.com/cs/simulated-annealing" target="_blank" rel="noopener nofollow">https://www.baeldung.com/cs/simulated-annealing</a></li>
</ul>

</div>
<div id="MySignature" role="contentinfo">
    『注:本文来自博客园“小溪的博客”，若非声明均为原创内容，请勿用于商业用途，转载请注明出处http://www.cnblogs.com/xiaoxi666/』
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="1.4248697793530092" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-15 22:57">2025-04-15 22:52</span>&nbsp;
<a href="https://www.cnblogs.com/xiaoxi666">xiaoxi666</a>&nbsp;
阅读(<span id="post_view_count">169</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18827733);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18827733', targetLink: 'https://www.cnblogs.com/xiaoxi666/p/18827733', title: 'LLM中的Top-K/Top-p/温度都是怎么发挥作用的？' })">举报</a>
</div>
        