
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiao987334176/p/18849826" title="发布于 2025-04-28 16:06">
    <span role="heading" aria-level="2">ragflow k8s部署详细过程</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h1>一、概述</h1>
<p>ragflow官方提供的安装方式是docker-compose方式部署的，单机运行。</p>
<p>k8s部署方式，暂未提供。</p>
<p>不过我们可以通过工具，结合docker-compose.yaml，来推演出对应服务的yaml进行部署。</p>
<p>过程有点曲折，结果很美好。</p>
<p>&nbsp;</p>
<p>接下来，本文将使用ragflow-0.18.0，来进行演示详细部署过程。</p>
<h1>二、准备工作</h1>
<h2>前提条件</h2>
<h3>硬件</h3>
<p>CPU ：至少 4 核。</p>
<p>内存 ：至少 16GB。</p>
<p>磁盘 ：至少 50GB。</p>
<p>操作系统：推荐 Ubuntu 22.04+&nbsp;</p>
<h3>软件</h3>
<p>k8s，自行搭建，或者使用云厂商提供的k8s，都可以。</p>
<div>Harbor，参考文章：<a href="https://www.cnblogs.com/xiao987334176/p/18809269">https://www.cnblogs.com/xiao987334176/p/18809269</a></div>
<div>如果有现成的私有仓库，可以忽略</div>
<div>NFS，参考文章：<a href="https://www.cnblogs.com/xiao987334176/p/18809415">https://www.cnblogs.com/xiao987334176/p/18809415</a></div>
<div>如果有现成的NFS，可以忽略</div>
<p>&nbsp;</p>
<p>符合以上条件，就可以部署了</p>
<h2>镜像推送</h2>
<h3>下载镜像</h3>
<div class="cnblogs_code">
<pre>docker pull elasticsearch:<span style="color: rgba(128, 0, 128, 1)">8.11</span>.<span style="color: rgba(128, 0, 128, 1)">3</span><span style="color: rgba(0, 0, 0, 1)">
docker pull quay.io</span>/minio/minio:RELEASE.<span style="color: rgba(128, 0, 128, 1)">2023</span>-<span style="color: rgba(128, 0, 128, 1)">12</span>-20T01-<span style="color: rgba(128, 0, 128, 1)">00</span>-<span style="color: rgba(0, 0, 0, 1)">02Z
docker pull mysql:</span><span style="color: rgba(128, 0, 128, 1)">8.0</span>.<span style="color: rgba(128, 0, 128, 1)">39</span><span style="color: rgba(0, 0, 0, 1)">
docker pull valkey</span>/valkey:<span style="color: rgba(128, 0, 128, 1)">8</span><span style="color: rgba(0, 0, 0, 1)">
docker pull infiniflow</span>/ragflow:v0.<span style="color: rgba(128, 0, 128, 1)">18.0</span>-slim</pre>
</div>
<p>&nbsp;</p>
<p>推送镜像</p>
<p>这里使用shell脚本完成</p>
<div class="cnblogs_code">
<pre>#!/bin/<span style="color: rgba(0, 0, 0, 1)">bash

images</span>=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">elasticsearch:8.11.3</span>
quay.io/minio/minio:RELEASE.<span style="color: rgba(128, 0, 128, 1)">2023</span>-<span style="color: rgba(128, 0, 128, 1)">12</span>-20T01-<span style="color: rgba(128, 0, 128, 1)">00</span>-<span style="color: rgba(0, 0, 0, 1)">02Z
mysql:</span><span style="color: rgba(128, 0, 128, 1)">8.0</span>.<span style="color: rgba(128, 0, 128, 1)">39</span><span style="color: rgba(0, 0, 0, 1)">
valkey</span>/valkey:<span style="color: rgba(128, 0, 128, 1)">8</span><span style="color: rgba(0, 0, 0, 1)">
infiniflow</span>/ragflow:v0.<span style="color: rgba(128, 0, 128, 1)">18.0</span>-slim<span style="color: rgba(128, 0, 0, 1)">"
</span><span style="color: rgba(0, 0, 0, 1)">
# 遍历镜像列表，并推送到harbor
</span><span style="color: rgba(0, 0, 255, 1)">for</span> line <span style="color: rgba(0, 0, 255, 1)">in</span> $images; <span style="color: rgba(0, 0, 255, 1)">do</span><span style="color: rgba(0, 0, 0, 1)">
    #</span><span style="color: rgba(0, 0, 255, 1)">echo</span> <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">$line</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
    docker tag $line harbor.qq.cn:</span><span style="color: rgba(128, 0, 128, 1)">8083</span>/ragflow/<span style="color: rgba(0, 0, 0, 1)">$line
    docker push harbor.qq.cn:</span><span style="color: rgba(128, 0, 128, 1)">8083</span>/ragflow/<span style="color: rgba(0, 0, 0, 1)">$line
</span><span style="color: rgba(0, 0, 255, 1)">done</span></pre>
</div>
<div data-theme="default" data-language="shell">
<p><span style="color: rgba(255, 0, 0, 1)"><strong>注意修改harbor的的地址为实际访问地址</strong></span></p>
</div>
<p>&nbsp;</p>
<p>登录到harbor，查看镜像</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202504/1341090-20250427164919308-243989212.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<h2>创建命名空间以及密钥</h2>
<p>创建命名空间ragflow</p>
<div class="cnblogs_code">
<pre>kubectl create namespace  ragflow</pre>
</div>
<p>&nbsp;</p>
<p>创建拉取镜像需要的密钥</p>
<div class="cnblogs_code">
<pre>kubectl create secret docker-registry harbor-key --docker-server=harbor.qq.com:<span style="color: rgba(128, 0, 128, 1)">8083</span> --docker-username=devops --docker-password=1sB5r9UShgK5 --namespace=ragflow</pre>
</div>
<p><span style="color: rgba(255, 0, 0, 1)"><strong>注意：修改harbor地址，用户名，密码。</strong></span></p>
<p>&nbsp;</p>
<h2>下载部署yaml</h2>
<p>yaml已经写好了，推送到我个人的github，地址：<a href="https://github.com/987334176/ragflow-k8s" target="_blank" rel="noopener nofollow">https://github.com/987334176/ragflow-k8s</a></p>
<p>下载项目后，进入文件夹0.18.0</p>
<p>&nbsp;</p>
<p>目录结构</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">env</span> --&gt;<span style="color: rgba(0, 0, 0, 1)"> 全局环境变量
pvc </span>--&gt;<span style="color: rgba(0, 0, 0, 1)"> 所有组件，统一使用一个pvc来进行持久化存储
databases </span>--&gt;<span style="color: rgba(0, 0, 0, 1)"> 数据库相关：mysql，redis
middleware </span>--&gt;<span style="color: rgba(0, 0, 0, 1)"> 中间件相关：elasticsearch，minio
services </span>--&gt; 服务相关：ragflow</pre>
</div>
<p>&nbsp;</p>
<h1>三、创建全局环境变量</h1>
<p>这里有30个多个变量，直接一键运行</p>
<div class="cnblogs_code">
<pre>kubectl apply -f <span style="color: rgba(0, 0, 255, 1)">env</span>/<span style="color: rgba(0, 0, 255, 1)">env</span>.yaml</pre>
</div>
<p>&nbsp;</p>
<h1>四、创建pv和pvc</h1>
<p>创建storageClass，因为pv和pvc必须是同一个storageClass才能绑定成功</p>
<div class="cnblogs_code">
<pre>kubectl apply -f pvc/storageClass.yaml</pre>
</div>
<p>&nbsp;</p>
<p><strong><span style="color: rgba(255, 0, 0, 1)">注意：修改NFS 服务端的共享路径，provisioner必须指定为nfs-client</span></strong></p>
<p>nfs-client是一个外部的动态存储供给器（Provisioner），用于在 Kubernetes 集群中动态创建和管理基于 NFS（Network File System）的 PersistentVolumes（PV）。它是 Kubernetes 社区提供的一个解决方案，用于支持 NFS 存储的动态供给。</p>
<p>&nbsp;</p>
<p>创建pv，pvc。<span style="color: rgba(255, 0, 0, 1)"><strong>注意：这里的pv是自建的NFS，请根据实际情况修改</strong></span></p>
<div class="cnblogs_code">
<pre>kubectl apply -f pvc/<span style="color: rgba(0, 0, 0, 1)">pv.yaml
kubectl apply </span>-f pvc/pvc.yaml</pre>
</div>
<p>&nbsp;</p>
<p>查看pvc状态，<strong>注意：请确保pvc状态为Bound</strong></p>
<div class="cnblogs_code">
<pre># <span style="color: rgba(255, 0, 0, 1)">kubectl -</span><span style="color: rgba(0, 0, 0, 1)"><span style="color: rgba(255, 0, 0, 1)">n ragflow get pvc</span>
NAME       STATUS   VOLUME   CAPACITY   ACCESS MODES   STORAGECLASS   VOLUMEATTRIBUTESCLASS   AGE
ragflow</span>-pvc   Bound    ragflow     10Gi       RWX            nfs-storage    &lt;unset&gt;                 12m</pre>
</div>
<p>&nbsp;</p>
<p>服务器已经挂载好了NFS，进入到NFS根目录</p>
<div class="cnblogs_code">
<pre>cd /mnt/nfs_share</pre>
</div>
<p>&nbsp;</p>
<p>创建ragflow相关持久化文件，并设置权限</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">mkdir</span> -p ragflow/volumes/elasticsearch/<span style="color: rgba(0, 0, 0, 1)">data
</span><span style="color: rgba(0, 0, 255, 1)">mkdir</span> -p ragflow/volumes/minio/<span style="color: rgba(0, 0, 0, 1)">data
</span><span style="color: rgba(0, 0, 255, 1)">mkdir</span> -p ragflow/volumes/mysql/<span style="color: rgba(0, 0, 0, 1)">data
</span><span style="color: rgba(0, 0, 255, 1)">mkdir</span> -p ragflow/volumes/redis/<span style="color: rgba(0, 0, 0, 1)">data
</span><span style="color: rgba(0, 0, 255, 1)">mkdir</span> -p ragflow/volumes/ragflow/<span style="color: rgba(0, 0, 0, 1)">logs
</span><span style="color: rgba(0, 0, 255, 1)">chmod</span> <span style="color: rgba(128, 0, 128, 1)">777</span> -R ragflow</pre>
</div>
<p>&nbsp;</p>
<h1>五、数据库相关</h1>
<h2>MySQL</h2>
<p>MySQL 是一个广泛使用的开源关系型数据库管理系统（RDBMS），它使用 SQL（结构化查询语言）作为与数据库交互的标准语言。</p>
<p>&nbsp;</p>
<p>修改文件mysql-StatefulSet.yaml</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">vi</span> databases/mysql/mysql-StatefulSet.yaml</pre>
</div>
<p>&nbsp;</p>
<p>修改红色部分，增加了密钥，改了镜像地址</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">    spec:
      <span style="color: rgba(255, 0, 0, 1)">imagePullSecrets:
        </span></span><span style="color: rgba(255, 0, 0, 1)">- name: harbor-</span><span style="color: rgba(0, 0, 0, 1)"><span style="color: rgba(255, 0, 0, 1)">key</span>
...
          image: <span style="color: rgba(255, 0, 0, 1)">harbor.qq.com:</span></span><span style="color: rgba(255, 0, 0, 1)">8083/ragflow/mysql:8.0.39</span></pre>
</div>
<p>&nbsp;</p>
<p>发布应用，注意执行顺序，先执行configMap，再执行下面的。</p>
<div class="cnblogs_code">
<pre>kubectl apply -f databases/mysql/mysql-cm1-<span style="color: rgba(0, 0, 0, 1)">configmap.yaml
kubectl apply </span>-f databases/mysql/mysql-<span style="color: rgba(0, 0, 0, 1)">StatefulSet.yaml
kubectl apply </span>-f databases/mysql/mysql-Service.yaml</pre>
</div>
<p>&nbsp;</p>
<p>等待1分钟，查看pod，确保是Running状态</p>
<div class="cnblogs_code">
<pre># <span style="color: rgba(255, 0, 0, 1)">kubectl -n ragflow get pods|grep</span><span style="color: rgba(0, 0, 0, 1)"><span style="color: rgba(255, 0, 0, 1)"> mysql</span>
mysql</span>-<span style="color: rgba(128, 0, 128, 1)">0</span>   <span style="color: rgba(128, 0, 128, 1)">1</span>/<span style="color: rgba(128, 0, 128, 1)">1</span>     Running   <span style="color: rgba(128, 0, 128, 1)">1</span> (13m ago)   14m</pre>
</div>
<p>&nbsp;</p>
<p>查看mysql日志</p>
<div class="cnblogs_code">
<pre># <span style="color: rgba(255, 0, 0, 1)">kubectl -n ragflow logs -f mysql-0</span><span style="color: rgba(0, 0, 0, 1)">

...
</span><span style="color: rgba(128, 0, 128, 1)">2025</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-28T02:<span style="color: rgba(128, 0, 128, 1)">32</span>:<span style="color: rgba(128, 0, 128, 1)">18</span>.925930Z <span style="color: rgba(128, 0, 128, 1)">0</span> [System] [MY-<span style="color: rgba(128, 0, 128, 1)">010931</span>] [Server] /usr/sbin/mysqld: ready <span style="color: rgba(0, 0, 255, 1)">for</span> connections. Version: <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">8.0.39</span><span style="color: rgba(128, 0, 0, 1)">'</span>  socket: <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">/var/run/mysqld/mysqld.sock</span><span style="color: rgba(128, 0, 0, 1)">'</span>  port: <span style="color: rgba(128, 0, 128, 1)">3306</span>  MySQL Community Server -<span style="color: rgba(0, 0, 0, 1)"> GPL.
...</span></pre>
</div>
<p>出现3306表示mysql启动正常。</p>
<p>&nbsp;</p>
<p>测试mysql登录</p>
<div class="cnblogs_code">
<pre># <span style="color: rgba(255, 0, 0, 1)">kubectl -n ragflow exec -it mysql-0 -- /bin/</span><span style="color: rgba(0, 0, 0, 1)"><span style="color: rgba(255, 0, 0, 1)">bash</span>
bash</span>-<span style="color: rgba(128, 0, 128, 1)">5.1</span># <span style="color: rgba(255, 0, 0, 1)">mysql -h localhost -u root -</span><span style="color: rgba(0, 0, 0, 1)"><span style="color: rgba(255, 0, 0, 1)">pinfini1#raGflow</span>
mysql: [Warning] Using a password on the command line interface can be insecure.
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection </span><span style="color: rgba(0, 0, 255, 1)">id</span> is <span style="color: rgba(128, 0, 128, 1)">8</span><span style="color: rgba(0, 0, 0, 1)">
Server version: </span><span style="color: rgba(128, 0, 128, 1)">8.0</span>.<span style="color: rgba(128, 0, 128, 1)">39</span> MySQL Community Server -<span style="color: rgba(0, 0, 0, 1)"> GPL

Copyright (c) </span><span style="color: rgba(128, 0, 128, 1)">2000</span>, <span style="color: rgba(128, 0, 128, 1)">2024</span>, Oracle and/<span style="color: rgba(0, 0, 0, 1)">or its affiliates.

Oracle is a registered trademark of Oracle Corporation and</span>/<span style="color: rgba(0, 0, 0, 1)">or its
affiliates. Other names may be trademarks of their respective
owners.

Type </span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">help;</span><span style="color: rgba(128, 0, 0, 1)">'</span> or <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">\h</span><span style="color: rgba(128, 0, 0, 1)">'</span> <span style="color: rgba(0, 0, 255, 1)">for</span> help. Type <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">\c</span><span style="color: rgba(128, 0, 0, 1)">'</span> to <span style="color: rgba(0, 0, 255, 1)">clear</span><span style="color: rgba(0, 0, 0, 1)"> the current input statement.

mysql</span>&gt;<span style="color: rgba(255, 0, 0, 1)"> show databases;
</span>+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| rag_flow           |
| sys                |
+--------------------+
<span style="color: rgba(128, 0, 128, 1)">5</span> rows <span style="color: rgba(0, 0, 255, 1)">in</span> set (<span style="color: rgba(128, 0, 128, 1)">0.00</span><span style="color: rgba(0, 0, 0, 1)"> sec)

mysql</span>&gt; </pre>
</div>
<p>能正常显示数据库列表，就说明用户登录正常。</p>
<p><strong><span style="color: rgba(255, 0, 0, 1)">注意：mysql8默认是启动了密码复杂性校验的，因为官方给的密码，太简单了。所以在全局变量中修改了root密码，否则mysql启动会失败。</span></strong></p>
<p>因为这个问题，搞了半天，一直启动失败，要崩溃了。所以后来没办法，直接改了root密码，就正常了。</p>
<p>&nbsp;</p>
<h2>Valkey</h2>
<p>Valkey 是 Redis 的开源替代方案，由 Linux 基金会推出，得到了 AWS、Google Cloud 等公司的支持。</p>
<p>Valkey 是根据 BSD 许可发布的，是一款高性能键 / 值数据存储，支持各种负载，包括缓存、消息队列，也可用作主数据库。Valkey 可以作为独立守护进程或在集群内运行，有复制和高可用性选项。</p>
<p>&nbsp;</p>
<p>修改文件redis-StatefulSet.yaml</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">vi</span> databases/redis/redis-StatefulSet.yaml</pre>
</div>
<p>修改红色部分，增加了密钥，改了镜像地址</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">    spec:
      <span style="color: rgba(255, 0, 0, 1)">imagePullSecrets:
        </span></span><span style="color: rgba(255, 0, 0, 1)">- name: harbor-</span><span style="color: rgba(0, 0, 0, 1)"><span style="color: rgba(255, 0, 0, 1)">key</span>
...
          image: <span style="color: rgba(255, 0, 0, 1)">harbor.qq.com:</span></span><span style="color: rgba(255, 0, 0, 1)">8083/ragflow/valkey/valkey:8</span></pre>
</div>
<p>&nbsp;</p>
<p>发布应用</p>
<div class="cnblogs_code">
<pre>kubectl apply -f databases/redis/redis-<span style="color: rgba(0, 0, 0, 1)">StatefulSet.yaml
kubectl apply </span>-f databases/redis/redis-Service.yaml</pre>
</div>
<p>&nbsp;</p>
<p>等待1分钟，查看pod，确保是Running状态</p>
<div class="cnblogs_code">
<pre># <span style="color: rgba(255, 0, 0, 1)">kubectl -n ragflow get pods|grep</span><span style="color: rgba(0, 0, 0, 1)"><span style="color: rgba(255, 0, 0, 1)"> redis</span>
redis</span>-<span style="color: rgba(128, 0, 128, 1)">0</span>   <span style="color: rgba(128, 0, 128, 1)">1</span>/<span style="color: rgba(128, 0, 128, 1)">1</span>     Running   <span style="color: rgba(128, 0, 128, 1)">0</span>             2m53s</pre>
</div>
<p>&nbsp;</p>
<p>查看redis日志</p>
<div class="cnblogs_code">
<pre># <span style="color: rgba(255, 0, 0, 1)">kubectl -n ragflow logs -f redis-0</span>
<span style="color: rgba(128, 0, 128, 1)">1</span>:C <span style="color: rgba(128, 0, 128, 1)">28</span> Apr <span style="color: rgba(128, 0, 128, 1)">2025</span> <span style="color: rgba(128, 0, 128, 1)">10</span>:<span style="color: rgba(128, 0, 128, 1)">43</span>:<span style="color: rgba(128, 0, 128, 1)">41.677</span> *<span style="color: rgba(0, 0, 0, 1)"> oO0OoO0OoO0Oo Valkey is starting oO0OoO0OoO0Oo
</span><span style="color: rgba(128, 0, 128, 1)">1</span>:C <span style="color: rgba(128, 0, 128, 1)">28</span> Apr <span style="color: rgba(128, 0, 128, 1)">2025</span> <span style="color: rgba(128, 0, 128, 1)">10</span>:<span style="color: rgba(128, 0, 128, 1)">43</span>:<span style="color: rgba(128, 0, 128, 1)">41.677</span> * Valkey version=<span style="color: rgba(128, 0, 128, 1)">8.0</span>.<span style="color: rgba(128, 0, 128, 1)">2</span>, bits=<span style="color: rgba(128, 0, 128, 1)">64</span>, commit=<span style="color: rgba(128, 0, 128, 1)">00000000</span>, modified=<span style="color: rgba(128, 0, 128, 1)">0</span>, pid=<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">, just started
</span><span style="color: rgba(128, 0, 128, 1)">1</span>:C <span style="color: rgba(128, 0, 128, 1)">28</span> Apr <span style="color: rgba(128, 0, 128, 1)">2025</span> <span style="color: rgba(128, 0, 128, 1)">10</span>:<span style="color: rgba(128, 0, 128, 1)">43</span>:<span style="color: rgba(128, 0, 128, 1)">41.677</span> *<span style="color: rgba(0, 0, 0, 1)"> Configuration loaded
</span><span style="color: rgba(128, 0, 128, 1)">1</span>:M <span style="color: rgba(128, 0, 128, 1)">28</span> Apr <span style="color: rgba(128, 0, 128, 1)">2025</span> <span style="color: rgba(128, 0, 128, 1)">10</span>:<span style="color: rgba(128, 0, 128, 1)">43</span>:<span style="color: rgba(128, 0, 128, 1)">41.678</span> *<span style="color: rgba(0, 0, 0, 1)"> monotonic clock: POSIX clock_gettime
</span><span style="color: rgba(128, 0, 128, 1)">1</span>:M <span style="color: rgba(128, 0, 128, 1)">28</span> Apr <span style="color: rgba(128, 0, 128, 1)">2025</span> <span style="color: rgba(128, 0, 128, 1)">10</span>:<span style="color: rgba(128, 0, 128, 1)">43</span>:<span style="color: rgba(128, 0, 128, 1)">41.678</span> * Running mode=standalone, port=<span style="color: rgba(128, 0, 128, 1)">6379</span><span style="color: rgba(0, 0, 0, 1)">.
</span><span style="color: rgba(128, 0, 128, 1)">1</span>:M <span style="color: rgba(128, 0, 128, 1)">28</span> Apr <span style="color: rgba(128, 0, 128, 1)">2025</span> <span style="color: rgba(128, 0, 128, 1)">10</span>:<span style="color: rgba(128, 0, 128, 1)">43</span>:<span style="color: rgba(128, 0, 128, 1)">41.765</span> *<span style="color: rgba(0, 0, 0, 1)"> Server initialized
</span><span style="color: rgba(128, 0, 128, 1)">1</span>:M <span style="color: rgba(128, 0, 128, 1)">28</span> Apr <span style="color: rgba(128, 0, 128, 1)">2025</span> <span style="color: rgba(128, 0, 128, 1)">10</span>:<span style="color: rgba(128, 0, 128, 1)">43</span>:<span style="color: rgba(128, 0, 128, 1)">41.767</span> * Ready to accept connections tcp</pre>
</div>
<p>出现6379表示redis启动正常。</p>
<p>&nbsp;</p>
<h1>六、中间件相关&nbsp;</h1>
<h2>Elasticsearch</h2>
<p>Elasticsearch 是一个开源的、基于 Lucene 的分布式全文搜索引擎，提供了强大的搜索和数据分析能力。它采用倒排索引技术，能够快速高效地处理大规模数据的搜索和分析，广泛应用于日志分析、推荐系统、企业级搜索等场景。</p>
<p>&nbsp;</p>
<p>修改文件elasticsearch-StatefulSet.yaml</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">vi</span> middleware/elasticsearch/elasticsearch-StatefulSet.yaml </pre>
</div>
<p>&nbsp;</p>
<p>修改红色部分，增加了密钥，改了镜像地址</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">    spec:
      <span style="color: rgba(255, 0, 0, 1)">imagePullSecrets:
        </span></span><span style="color: rgba(255, 0, 0, 1)">- name: harbor-</span><span style="color: rgba(0, 0, 0, 1)"><span style="color: rgba(255, 0, 0, 1)">key</span>
...
          image: <span style="color: rgba(255, 0, 0, 1)">harbor.qq.com:</span></span><span style="color: rgba(255, 0, 0, 1)">8083/ragflow/elasticsearch:8.11.3</span></pre>
</div>
<p>&nbsp;</p>
<p>发布应用</p>
<div class="cnblogs_code">
<pre>kubectl apply -f middleware/elasticsearch/elasticsearch-<span style="color: rgba(0, 0, 0, 1)">StatefulSet.yaml
kubectl apply </span>-f middleware/elasticsearch/elasticsearch-Service.yaml</pre>
</div>
<p>&nbsp;</p>
<p>等待2分钟，查看pod，确保是Running状态</p>
<div class="cnblogs_code">
<pre># <span style="color: rgba(255, 0, 0, 1)">kubectl -n ragflow get pods|grep</span><span style="color: rgba(0, 0, 0, 1)"><span style="color: rgba(255, 0, 0, 1)"> es</span>
es01</span>-<span style="color: rgba(128, 0, 128, 1)">0</span>    <span style="color: rgba(128, 0, 128, 1)">1</span>/<span style="color: rgba(128, 0, 128, 1)">1</span>     Running   <span style="color: rgba(128, 0, 128, 1)">0</span>             112s</pre>
</div>
<p>&nbsp;</p>
<p>查看es日志</p>
<div class="cnblogs_code">
<pre># <span style="color: rgba(255, 0, 0, 1)">kubectl -n ragflow logs -f es01-0</span><span style="color: rgba(0, 0, 0, 1)">
...
{</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">@timestamp</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">2025-04-28T02:49:28.858Z</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">log.level</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">INFO</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">message</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">publish_address {172.16.0.220:9200}, bound_addresses {[::]:9200}</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">ecs.version</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">1.2.0</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">service.name</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">ES_ECS</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">event.dataset</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">elasticsearch.server</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">process.thread.name</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">main</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">log.logger</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">org.elasticsearch.http.AbstractHttpServerTransport</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">elasticsearch.cluster.uuid</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">xBJZ-YKRSTSyRMdPZiwltg</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">elasticsearch.node.id</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">mLrauOXtQdWBGROGXIfd2Q</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">elasticsearch.node.name</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">es01</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">elasticsearch.cluster.name</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">docker-cluster</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">}
...</span></pre>
</div>
<p>出现9200表示mysql启动正常。</p>
<p>只要没有明显的错误就行</p>
<p>&nbsp;</p>
<h2>MinIO</h2>
<p>MinIO 是一个高性能、开源的对象存储服务，兼容亚马逊 S3 云存储服务接口，常用于存储非结构化数据，如图片、视频、日志文件、备份数据等。</p>
<p>&nbsp;</p>
<p>修改文件minio-StatefulSet.yaml</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">vi</span> middleware/minio/minio-StatefulSet.yaml</pre>
</div>
<p>&nbsp;</p>
<p>修改红色部分，增加了密钥，改了镜像地址</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">    spec:
      <span style="color: rgba(255, 0, 0, 1)">imagePullSecrets:
        </span></span><span style="color: rgba(255, 0, 0, 1)">- name: harbor-</span><span style="color: rgba(0, 0, 0, 1)"><span style="color: rgba(255, 0, 0, 1)">key</span>
...
          image: <span style="color: rgba(255, 0, 0, 1)">harbor.bzmaster.cn:</span></span><span style="color: rgba(255, 0, 0, 1)">8083/ragflow/quay.io/minio/minio:RELEASE.2023-12-20T01-00-02Z</span></pre>
</div>
<p>&nbsp;</p>
<p>发布应用</p>
<div class="cnblogs_code">
<pre>kubectl apply -f middleware/minio/minio-<span style="color: rgba(0, 0, 0, 1)">StatefulSet.yaml
kubectl apply </span>-f middleware/minio/minio-Service.yaml</pre>
</div>
<p>&nbsp;</p>
<p>等待1分钟，查看pod，确保是Running状态</p>
<div class="cnblogs_code">
<pre># <span style="color: rgba(255, 0, 0, 1)">kubectl -n ragflow get pods|grep</span><span style="color: rgba(0, 0, 0, 1)"><span style="color: rgba(255, 0, 0, 1)"> minio</span>
minio</span>-<span style="color: rgba(128, 0, 128, 1)">0</span>   <span style="color: rgba(128, 0, 128, 1)">1</span>/<span style="color: rgba(128, 0, 128, 1)">1</span>     Running   <span style="color: rgba(128, 0, 128, 1)">0</span>             106s</pre>
</div>
<p>&nbsp;</p>
<p>查看minio日志</p>
<div class="cnblogs_code">
<pre># <span style="color: rgba(255, 0, 0, 1)">kubectl -n ragflow logs -f minio-0</span><span style="color: rgba(0, 0, 0, 1)">
Formatting 1st pool, </span><span style="color: rgba(128, 0, 128, 1)">1</span> set(s), <span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)"> drives per set.
WARNING: Host local has </span><span style="color: rgba(0, 0, 255, 1)">more</span> than <span style="color: rgba(128, 0, 128, 1)">0</span> drives of set. A host failure will result <span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)"> data becoming unavailable.

 You are running an older version of MinIO released </span><span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)"> year before the latest release 
 Update: Run `mc admin update` 


MinIO Object Storage Server
Copyright: </span><span style="color: rgba(128, 0, 128, 1)">2015</span>-<span style="color: rgba(128, 0, 128, 1)">2023</span><span style="color: rgba(0, 0, 0, 1)"> MinIO, Inc.
License: GNU AGPLv3 </span>&lt;https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">www.gnu.org/licenses/agpl-3.0.html&gt;</span>
Version: RELEASE.<span style="color: rgba(128, 0, 128, 1)">2023</span>-<span style="color: rgba(128, 0, 128, 1)">12</span>-20T01-<span style="color: rgba(128, 0, 128, 1)">00</span>-02Z (go1.<span style="color: rgba(128, 0, 128, 1)">21.5</span> linux/<span style="color: rgba(0, 0, 0, 1)">amd64)

Status:         </span><span style="color: rgba(128, 0, 128, 1)">1</span> Online, <span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)"> Offline. 
S3</span>-API: http:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">172.16.0.221:9000  </span><span style="color: rgba(0, 128, 0, 1); text-decoration: underline">http://127.0.0.1</span><span style="color: rgba(0, 128, 0, 1)">:9000     </span>
Console: http:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">172.16.0.221:9001 </span><span style="color: rgba(0, 128, 0, 1); text-decoration: underline">http://127.0.0.1</span><span style="color: rgba(0, 128, 0, 1)">:9001   </span>
<span style="color: rgba(0, 0, 0, 1)">
Documentation: https:</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">min.io/docs/minio/linux/index.html</span>
Warning: The standard parity is set to <span style="color: rgba(128, 0, 128, 1)">0</span>. This can lead to data loss.</pre>
</div>
<p>&nbsp;</p>
<h1>七、服务相关</h1>
<h2>Ragflow</h2>
<p>Ragflow 是一款基于深度文档理解构建的开源 RAG（Retrieval-Augmented Generation）引擎。它旨在为各种规模的企业及个人提供一套精简的 RAG 工作流程，结合大语言模型（LLM）针对用户各类不同的复杂格式数据提供可靠的问答以及有理有据的引用。</p>
<p>&nbsp;</p>
<p>修改文件ragflow-Deployment.yaml</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">vi</span> services/ragflow/ragflow-Deployment.yaml</pre>
</div>
<p>&nbsp;</p>
<p>修改红色部分，增加了密钥，改了镜像地址</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">    spec:
      <span style="color: rgba(255, 0, 0, 1)">imagePullSecrets:
        </span></span><span style="color: rgba(255, 0, 0, 1)">- name: harbor-</span><span style="color: rgba(0, 0, 0, 1)"><span style="color: rgba(255, 0, 0, 1)">key</span>
...
          image: <span style="color: rgba(255, 0, 0, 1)">harbor.bzmaster.cn:</span></span><span style="color: rgba(255, 0, 0, 1)">8083/ragflow/infiniflow/ragflow:v0.18.0-slim</span></pre>
</div>
<p>&nbsp;</p>
<p>发布应用，注意执行顺序，先执行configMap，再执行下面的。</p>
<div class="cnblogs_code">
<pre>kubectl apply -f services/ragflow/ragflow-cm1-<span style="color: rgba(0, 0, 0, 1)">configmap.yaml
kubectl apply </span>-f services/ragflow/ragflow-cm2-<span style="color: rgba(0, 0, 0, 1)">configmap.yaml
kubectl apply </span>-f services/ragflow/ragflow-cm3-<span style="color: rgba(0, 0, 0, 1)">configmap.yaml
kubectl apply </span>-f services/ragflow/ragflow-cm5-<span style="color: rgba(0, 0, 0, 1)">configmap.yaml
kubectl apply </span>-f services/ragflow/ragflow-<span style="color: rgba(0, 0, 0, 1)">Deployment.yaml
kubectl apply </span>-f services/ragflow/ragflow-Service.yaml</pre>
</div>
<p>&nbsp;</p>
<p><span style="color: rgba(255, 0, 0, 1)"><strong>等待6分钟，这个镜像特别大，请耐心等待！</strong></span></p>
<p>查看pod，确保是Running状态</p>
<div class="cnblogs_code">
<pre># kubectl -n ragflow get pods|<span style="color: rgba(0, 0, 255, 1)">grep</span><span style="color: rgba(0, 0, 0, 1)"> ragflow
ragflow</span>-6bddc85f97-6xpkd   <span style="color: rgba(128, 0, 128, 1)">1</span>/<span style="color: rgba(128, 0, 128, 1)">1</span>     Running   <span style="color: rgba(128, 0, 128, 1)">0</span>             6m48s</pre>
</div>
<p>&nbsp;</p>
<p>查看ragflow日志</p>
<div class="cnblogs_code">
<pre># <span style="color: rgba(255, 0, 0, 1)">kubectl -n ragflow logs -f ragflow-6bddc85f97-</span><span style="color: rgba(0, 0, 0, 1)"><span style="color: rgba(255, 0, 0, 1)">6xpkd</span><br>...
</span><span style="color: rgba(128, 0, 128, 1)">2025</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">28</span> <span style="color: rgba(128, 0, 128, 1)">15</span>:<span style="color: rgba(128, 0, 128, 1)">06</span>:<span style="color: rgba(128, 0, 128, 1)">23</span>,<span style="color: rgba(128, 0, 128, 1)">972</span> INFO     <span style="color: rgba(128, 0, 128, 1)">15</span><span style="color: rgba(0, 0, 0, 1)"> 
        ____   ___    ______ ______ __               
       </span>/ __ \ /   |  / ____<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> ____</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> /____  _      __</span>
      / /_/ <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> /| | / / __ / /_   / </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> __ \| | /| / /</span>
     / _, _<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> ___ |/ /_/ </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> __/  / </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> /_/ /| |/ |/ / </span>
    /_/ |_|/_/  |_|\____<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">_/    /_/ \____/ |__/|__/                             </span>

    
<span style="color: rgba(128, 0, 128, 1)">2025</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">28</span> <span style="color: rgba(128, 0, 128, 1)">15</span>:<span style="color: rgba(128, 0, 128, 1)">06</span>:<span style="color: rgba(128, 0, 128, 1)">24</span>,<span style="color: rgba(128, 0, 128, 1)">063</span> INFO     <span style="color: rgba(128, 0, 128, 1)">15</span> RAGFlow version: v0.<span style="color: rgba(128, 0, 128, 1)">18.0</span><span style="color: rgba(0, 0, 0, 1)"> slim
</span><span style="color: rgba(128, 0, 128, 1)">2025</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">28</span> <span style="color: rgba(128, 0, 128, 1)">15</span>:<span style="color: rgba(128, 0, 128, 1)">06</span>:<span style="color: rgba(128, 0, 128, 1)">24</span>,<span style="color: rgba(128, 0, 128, 1)">068</span> INFO     <span style="color: rgba(128, 0, 128, 1)">15</span> project base: /<span style="color: rgba(0, 0, 0, 1)">ragflow
</span><span style="color: rgba(128, 0, 128, 1)">2025</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">28</span> <span style="color: rgba(128, 0, 128, 1)">15</span>:<span style="color: rgba(128, 0, 128, 1)">06</span>:<span style="color: rgba(128, 0, 128, 1)">24</span>,<span style="color: rgba(128, 0, 128, 1)">085</span> INFO     <span style="color: rgba(128, 0, 128, 1)">15</span> Current configs, from /ragflow/conf/<span style="color: rgba(0, 0, 0, 1)">service_conf.yaml:
    ragflow: {</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">host</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">0.0.0.0</span><span style="color: rgba(128, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">http_port</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 128, 1)">9380</span><span style="color: rgba(0, 0, 0, 1)">}
    mysql: {</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">name</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">rag_flow</span><span style="color: rgba(128, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">user</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">root</span><span style="color: rgba(128, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">password</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">********</span><span style="color: rgba(128, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">host</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">mysql</span><span style="color: rgba(128, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">port</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 128, 1)">3306</span>, <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">max_connections</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 128, 1)">100</span>, <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">stale_timeout</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 128, 1)">30</span><span style="color: rgba(0, 0, 0, 1)">}
    minio: {</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">user</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">rag_flow</span><span style="color: rgba(128, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">password</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">********</span><span style="color: rgba(128, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">host</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">minio:9000</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">}
    es: {</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">hosts</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">http://es01:9200</span><span style="color: rgba(128, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">username</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">elastic</span><span style="color: rgba(128, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">password</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">********</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">}
    infinity: {</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">uri</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">infinity:23817</span><span style="color: rgba(128, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">db_name</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">default_db</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">}
    redis: {</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">db</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 128, 1)">1</span>, <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">password</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">********</span><span style="color: rgba(128, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">host</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">redis:6379</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">}
</span><span style="color: rgba(128, 0, 128, 1)">2025</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">28</span> <span style="color: rgba(128, 0, 128, 1)">15</span>:<span style="color: rgba(128, 0, 128, 1)">06</span>:<span style="color: rgba(128, 0, 128, 1)">24</span>,<span style="color: rgba(128, 0, 128, 1)">164</span> INFO     <span style="color: rgba(128, 0, 128, 1)">15</span> Use Elasticsearch http:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">es01:9200 as the doc engine.</span>
<span style="color: rgba(128, 0, 128, 1)">2025</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">28</span> <span style="color: rgba(128, 0, 128, 1)">15</span>:<span style="color: rgba(128, 0, 128, 1)">06</span>:<span style="color: rgba(128, 0, 128, 1)">24</span>,<span style="color: rgba(128, 0, 128, 1)">364</span> INFO     <span style="color: rgba(128, 0, 128, 1)">15</span> GET http:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">es01:9200/ [status:200 duration:0.195s]</span>
<span style="color: rgba(128, 0, 128, 1)">2025</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">28</span> <span style="color: rgba(128, 0, 128, 1)">15</span>:<span style="color: rgba(128, 0, 128, 1)">06</span>:<span style="color: rgba(128, 0, 128, 1)">24</span>,<span style="color: rgba(128, 0, 128, 1)">453</span> INFO     <span style="color: rgba(128, 0, 128, 1)">15</span> HEAD http:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">es01:9200/ [status:200 duration:0.076s]</span>
<span style="color: rgba(128, 0, 128, 1)">2025</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">28</span> <span style="color: rgba(128, 0, 128, 1)">15</span>:<span style="color: rgba(128, 0, 128, 1)">06</span>:<span style="color: rgba(128, 0, 128, 1)">24</span>,<span style="color: rgba(128, 0, 128, 1)">478</span> INFO     <span style="color: rgba(128, 0, 128, 1)">15</span> Elasticsearch http:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">es01:9200 is healthy.</span>
<span style="color: rgba(128, 0, 128, 1)">2025</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">28</span> <span style="color: rgba(128, 0, 128, 1)">15</span>:<span style="color: rgba(128, 0, 128, 1)">06</span>:<span style="color: rgba(128, 0, 128, 1)">24</span>,<span style="color: rgba(128, 0, 128, 1)">557</span> WARNING  <span style="color: rgba(128, 0, 128, 1)">15</span> Load term.freq FAIL!
<span style="color: rgba(128, 0, 128, 1)">2025</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">28</span> <span style="color: rgba(128, 0, 128, 1)">15</span>:<span style="color: rgba(128, 0, 128, 1)">06</span>:<span style="color: rgba(128, 0, 128, 1)">24</span>,<span style="color: rgba(128, 0, 128, 1)">656</span> WARNING  <span style="color: rgba(128, 0, 128, 1)">15</span><span style="color: rgba(0, 0, 0, 1)"> Realtime synonym is disabled, since no redis connection.
</span><span style="color: rgba(128, 0, 128, 1)">2025</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">28</span> <span style="color: rgba(128, 0, 128, 1)">15</span>:<span style="color: rgba(128, 0, 128, 1)">06</span>:<span style="color: rgba(128, 0, 128, 1)">24</span>,<span style="color: rgba(128, 0, 128, 1)">678</span> WARNING  <span style="color: rgba(128, 0, 128, 1)">15</span> Load term.freq FAIL!
<span style="color: rgba(128, 0, 128, 1)">2025</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">28</span> <span style="color: rgba(128, 0, 128, 1)">15</span>:<span style="color: rgba(128, 0, 128, 1)">06</span>:<span style="color: rgba(128, 0, 128, 1)">24</span>,<span style="color: rgba(128, 0, 128, 1)">757</span> WARNING  <span style="color: rgba(128, 0, 128, 1)">15</span><span style="color: rgba(0, 0, 0, 1)"> Realtime synonym is disabled, since no redis connection.
</span><span style="color: rgba(128, 0, 128, 1)">2025</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">28</span> <span style="color: rgba(128, 0, 128, 1)">15</span>:<span style="color: rgba(128, 0, 128, 1)">06</span>:<span style="color: rgba(128, 0, 128, 1)">24</span>,<span style="color: rgba(128, 0, 128, 1)">769</span> INFO     <span style="color: rgba(128, 0, 128, 1)">15</span> MAX_CONTENT_LENGTH: <span style="color: rgba(128, 0, 128, 1)">134217728</span>
<span style="color: rgba(128, 0, 128, 1)">2025</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">28</span> <span style="color: rgba(128, 0, 128, 1)">15</span>:<span style="color: rgba(128, 0, 128, 1)">06</span>:<span style="color: rgba(128, 0, 128, 1)">24</span>,<span style="color: rgba(128, 0, 128, 1)">853</span> INFO     <span style="color: rgba(128, 0, 128, 1)">15</span> MAX_FILE_COUNT_PER_USER: <span style="color: rgba(128, 0, 128, 1)">0</span>
<span style="color: rgba(128, 0, 128, 1)">2025</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">28</span> <span style="color: rgba(128, 0, 128, 1)">15</span>:<span style="color: rgba(128, 0, 128, 1)">07</span>:<span style="color: rgba(128, 0, 128, 1)">23</span>,<span style="color: rgba(128, 0, 128, 1)">080</span> INFO     <span style="color: rgba(128, 0, 128, 1)">15</span> init web data success:<span style="color: rgba(128, 0, 128, 1)">33.099204301834106</span>
<span style="color: rgba(128, 0, 128, 1)">2025</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">28</span> <span style="color: rgba(128, 0, 128, 1)">15</span>:<span style="color: rgba(128, 0, 128, 1)">07</span>:<span style="color: rgba(128, 0, 128, 1)">23</span>,<span style="color: rgba(128, 0, 128, 1)">163</span> INFO     <span style="color: rgba(128, 0, 128, 1)">15</span> update_progress lock_value: 054d89b4-835e-415a-b2e3-<span style="color: rgba(0, 0, 0, 1)">aa6bd0d64e95
</span><span style="color: rgba(128, 0, 128, 1)">2025</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">28</span> <span style="color: rgba(128, 0, 128, 1)">15</span>:<span style="color: rgba(128, 0, 128, 1)">07</span>:<span style="color: rgba(128, 0, 128, 1)">23</span>,<span style="color: rgba(128, 0, 128, 1)">163</span> INFO     <span style="color: rgba(128, 0, 128, 1)">15</span><span style="color: rgba(0, 0, 0, 1)"> RAGFlow HTTP server start...
</span><span style="color: rgba(128, 0, 128, 1)">2025</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">28</span> <span style="color: rgba(128, 0, 128, 1)">15</span>:<span style="color: rgba(128, 0, 128, 1)">07</span>:<span style="color: rgba(128, 0, 128, 1)">23</span>,<span style="color: rgba(128, 0, 128, 1)">265</span> INFO     <span style="color: rgba(128, 0, 128, 1)">15</span> WARNING: This is a development server. Do not use it <span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)"> a production deployment. Use a production WSGI server instead.
 </span>* Running on all addresses (<span style="color: rgba(128, 0, 128, 1)">0.0</span>.<span style="color: rgba(128, 0, 128, 1)">0.0</span><span style="color: rgba(0, 0, 0, 1)">)
 </span>* Running on http:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">127.0.0.1:9380</span>
 * Running on http:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">172.16.0.227:9380</span>
...</pre>
</div>
<p>没有明显报错就可以了</p>
<p>之后日志会一直出现RedisDB.queue_info相关信息，日志会刷屏，这个不用管，应该是定时任务。</p>
<p>&nbsp;</p>
<h1>八、访问ragflow</h1>
<p dir="auto">如果是生产环境，最好是域名访问，则需要添加一条ingress规则，指向到ragflow的svc，端口是80，并做DNS解析，指向到ingress的公网ip。</p>
<p dir="auto">这里直接使用ragflow的nodeport端口访问</p>
<div class="cnblogs_code">
<pre># <span style="color: rgba(255, 0, 0, 1)">kubectl -n ragflow get svc|grep</span><span style="color: rgba(0, 0, 0, 1)"><span style="color: rgba(255, 0, 0, 1)"> ragflow</span>
ragflow   NodePort    </span><span style="color: rgba(128, 0, 128, 1)">192.168</span>.<span style="color: rgba(128, 0, 128, 1)">34.159</span>   &lt;none&gt;        <span style="color: rgba(128, 0, 128, 1)">9380</span>:<span style="color: rgba(128, 0, 128, 1)">31078</span>/TCP,<span style="color: rgba(128, 0, 128, 1)">80</span>:<span style="color: rgba(128, 0, 128, 1)">31930</span>/TCP,<span style="color: rgba(128, 0, 128, 1)">443</span>:<span style="color: rgba(128, 0, 128, 1)">31213</span>/TCP,<span style="color: rgba(128, 0, 128, 1)">5678</span>:<span style="color: rgba(128, 0, 128, 1)">31082</span>/TCP,<span style="color: rgba(128, 0, 128, 1)">5679</span>:<span style="color: rgba(128, 0, 128, 1)">32741</span>/TCP,<span style="color: rgba(128, 0, 128, 1)">9382</span>:<span style="color: rgba(128, 0, 128, 1)">30421</span>/TCP   23m</pre>
</div>
<p>可以看到nodeport对应的端口是31930</p>
<p dir="auto">&nbsp;</p>
<p dir="auto">查看node节点</p>
<div class="cnblogs_code">
<pre># <span style="color: rgba(255, 0, 0, 1)">kubectl get node -</span><span style="color: rgba(0, 0, 0, 1)"><span style="color: rgba(255, 0, 0, 1)">o wide</span>
NAME       STATUS   ROLES                  AGE   VERSION        INTERNAL</span>-IP   EXTERNAL-IP   OS-IMAGE           KERNEL-VERSION       CONTAINER-<span style="color: rgba(0, 0, 0, 1)">RUNTIME
ubuntu</span>-<span style="color: rgba(128, 0, 128, 1)">1</span>   Ready    control-plane,master   17h   v1.<span style="color: rgba(128, 0, 128, 1)">32.3</span>+k3s1   <span style="color: rgba(128, 0, 128, 1)">10.0</span>.<span style="color: rgba(128, 0, 128, 1)">2.15</span>     &lt;none&gt;        Ubuntu <span style="color: rgba(128, 0, 128, 1)">22.04</span> LTS   <span style="color: rgba(128, 0, 128, 1)">5.15</span>.<span style="color: rgba(128, 0, 128, 1)">0</span>-<span style="color: rgba(128, 0, 128, 1)">136</span>-generic   docker:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">28.0.4</span></pre>
</div>
<p>可以看到node节点ip是，10.0.2.15</p>
<p dir="auto">&nbsp;</p>
<p>访问页面：</p>
<p>http://10.0.2.15:31930</p>
<p dir="auto">点击注册</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202504/1341090-20250428113228349-824898940.png" alt="" loading="lazy"></p>
<p>输入邮箱地址，名称，密码</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202504/1341090-20250428113353209-419440425.png" alt="" loading="lazy"></p>
<p>创建账号成功之后，重新登录</p>
<p>&nbsp;</p>
<p>登录成功之后，切换到中文，效果如下：</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202504/1341090-20250428151024830-1687546497.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<h1>九、测试ragflow</h1>
<p>点击右上角头像--&gt;模型提供商，设置通义千问</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202504/1341090-20250428151201237-2127647080.png" alt="" loading="lazy"></p>
<p>&nbsp;添加成功后，设置系统默认模型</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202504/1341090-20250428151358508-572826911.png" alt="" loading="lazy"></p>
<p>创建知识库</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202504/1341090-20250428151511358-792316391.png" alt="" loading="lazy"></p>
<p>&nbsp;上传excel文件，设置切片方法</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202504/1341090-20250428151608454-509419601.png" alt="" loading="lazy"></p>
<p>&nbsp;勾选表格转HTML</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202504/1341090-20250428151638496-471537834.png" alt="" loading="lazy"></p>
<p>&nbsp;点击解析</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202504/1341090-20250428151709819-8550876.png" alt="" loading="lazy"></p>
<p>解析成功后，点击文件</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202504/1341090-20250428151735361-825796965.png" alt="" loading="lazy"></p>
<p>&nbsp;就可以看到数据了</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202504/1341090-20250428151754616-835161686.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p dir="auto">&nbsp;文件上传是保存在minio里面的，登录minio后台就可以看到了。</p>
<p dir="auto">&nbsp;</p>
<p dir="auto">查看nodeport端口</p>
<div class="cnblogs_code">
<pre># <span style="color: rgba(255, 0, 0, 1)">kubectl -n ragflow get svc|grep</span><span style="color: rgba(0, 0, 0, 1)"><span style="color: rgba(255, 0, 0, 1)"> minio</span>
minio     NodePort    </span><span style="color: rgba(128, 0, 128, 1)">192.168</span>.<span style="color: rgba(128, 0, 128, 1)">90.129</span>   &lt;none&gt;        <span style="color: rgba(128, 0, 128, 1)">9000</span>:<span style="color: rgba(128, 0, 128, 1)">31911</span>/TCP,<span style="color: rgba(128, 0, 128, 1)">9001</span>:<span style="color: rgba(128, 0, 128, 1)">30355</span>/TCP                                                            4h23m</pre>
</div>
<p>可以看到端口是31911</p>
<p>&nbsp;</p>
<p>访问页面：</p>
<p>http://10.0.2.15:31911</p>
<p>&nbsp;</p>
<p>输入登录信息</p>
<p>用户名：rag_flow</p>
<p>密码：infini_rag_flow</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202504/1341090-20250428152328520-1368471838.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>登录之后，点击最大的</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202504/1341090-20250428152422903-417634348.png" alt="" loading="lazy"></p>
<p>这里就可以看到上传的文件了</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202504/1341090-20250428152500753-788558085.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p dir="auto">ragflow k8s搭建过程，到此结束！</p>
<p dir="auto">&nbsp;</p>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.18291591008564814" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-28 16:07">2025-04-28 16:06</span>&nbsp;
<a href="https://www.cnblogs.com/xiao987334176">肖祥</a>&nbsp;
阅读(<span id="post_view_count">20</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18849826);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18849826', targetLink: 'https://www.cnblogs.com/xiao987334176/p/18849826', title: 'ragflow k8s部署详细过程' })">举报</a>
</div>
        