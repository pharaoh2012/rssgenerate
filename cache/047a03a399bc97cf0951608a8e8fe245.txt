
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/liulun/p/18881931" title="发布于 2025-05-18 08:23">
    <span role="heading" aria-level="2">自荐：开源截图工具ScreenCapture：超多控制指令，支持截长图</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p><img src="https://img2024.cnblogs.com/blog/28932/202505/28932-20250518081434321-48631835.png" alt="image" loading="lazy"></p>
<h2 id="特性">特性</h2>
<ul>
<li>跨屏幕截图、滚动截图（截长图）、高分屏支持、窗口区域高亮。</li>
<li>取景框，快捷键复制 RGB 颜色（<code>Ctrl+R</code>）、 HEX 颜色（<code>Ctrl+H</code>）与 CMYK 颜色（<code>Ctrl+K</code>）。</li>
<li>绘制填充、非填充的椭圆、正圆（按住<code>Shift</code>）、矩形、正方形（按住<code>Shift</code>）、箭头、排序标号。</li>
<li>绘制曲线、直线（按住<code>Shift</code>）、半透明直线、马赛克、橡皮擦、文本。</li>
<li>可以随时修改、删除已绘制的元素（鼠标移到元素上）。</li>
<li>撤销（<code>Ctrl+Z</code>）、重做（<code>Ctrl+Y</code>）。</li>
<li>在新窗口中钉住截图区域，使用鼠标滚轮放大、缩小钉图窗口大小。</li>
<li>保存为文件（<code>Ctrl+S</code>）、保存到剪贴板（<code>Ctrl+C</code>或双击鼠标左键）。</li>
<li>运行速度快、内存占用低、CPU 使用率低。</li>
<li>体积小、仅一个可执行文件，无需安装，不依赖任何动态链接库。</li>
<li>丰富的命令行控制参数。可以非常容易地集成到其他应用中。</li>
</ul>
<h2 id="下载">下载</h2>
<p><a href="https://github.com/xland/ScreenCapture/releases/" target="_blank" rel="noopener nofollow">Release</a> （8M左右）</p>
<h2 id="命令控制">命令控制</h2>
<pre><code class="language-powershell">//设置本次截图的文件保存路径。
//如果路径是目录，则保存文件时会自动生成文件名。
//如果路径包含文件名，则按此文件名保存文件（文件存在则覆盖）。
//目前只支持png格式文件
ScreenCapture.exe --path:"D:/doc/test.png"
ScreenCapture.exe --path:"D:/doc"

//截取屏幕某个区域的图像，10,10是坐标，500,600是宽高
//截取完成后图像写入剪切板
ScreenCapture.exe --cap:area,10,10,500,600,clipboard

//截取屏幕某个区域的图像，截取完成后图像写入指定路径
ScreenCapture.exe --cap:area,10,10,500,600 --path:"D:/doc"

//截取整个屏幕并写入剪切板
ScreenCapture.exe --cap:fullscreen,clipboard

//截取整个屏幕并把图像写入指定路径
ScreenCapture.exe --cap:fullscreen --path:"D:/doc"

//用户拖拽鼠标确定截图区域后，马上把截图区域内的图像写入剪切板
ScreenCapture.exe --cap:custom,clipboard

//用户拖拽鼠标确定截图区域后，马上把截图区域内的图像写入指定路径
ScreenCapture.exe --cap:custom --path:"D:/doc"

//钉住剪切板内的图像，100,100是钉住窗口的坐标
//如忽略窗口坐标，则窗口默认坐标为100,100
ScreenCapture.exe --pin:clipboard,100,100

//钉住指定的图像文件，100,100是钉住窗口的坐标
ScreenCapture.exe --pin:file,"D:/test.png",100,100

//钉住桌面某个区域的图像，(100,100,500,600)是区域矩形，(800,10)是钉住窗口的坐标
ScreenCapture.exe --pin:area,100,100,500,600,800,10

//设置应用程序的语言，目前只支持简体中文(zhcn)和英文(en)，默认中文
ScreenCapture.exe --lang:en

//保存图像时，对图像进行压缩。
//第一个参数6为图像质量，第二个参数60为缩放百分比
//图像质量取值范围为 -1到9的整数
//0：最小压缩级别，文件最大
//9：最大压缩，文件最小
//-1：默认压缩级别，中等压缩
//缩放百分比取值范围为 1到100的整数
//图像存入剪切板时，图像质量参数无效
ScreenCapture.exe --comp:6,60

//控制主工具栏按钮（及分割线）的顺序，位置及显隐情况。
ScreenCapture.exe --tool:"rect,ellipse,arrow,number,line,text,mosaic,eraser,|,undo,redo,|,pin,clipboard,save,close"

//截长图
//截长图窗口只有四个控制按钮`pin,clipboard,save,close`，也是支持通过`--tool`指令控制的
ScreenCapture.exe --cap:long
</code></pre>
<ul>
<li><code>--cap</code>与<code>--pin</code>参数互斥，其他参数可组合使用。</li>
<li>一个独立的参数以 <code>--</code> 开头，参数内不能出现空格，参数和参数之间以空格分割。</li>
<li>在参数里使用文件路径则需根据你的终端来决定使用怎样的路径分隔符：<code>\\</code>或<code>/</code>。</li>
</ul>
<h2 id="集成">集成</h2>
<p>示例为 Node.js 或 Electron，Python类似。</p>
<pre><code class="language-js">let spawn = require("child_process").spawn;
let child = spawn("./path/to/ScreenCapture.exe");
child.on("close", (code) =&gt; {
    /// when code is:
    /// 0 undefined
    /// 1 quit by press close btn;
    /// 2 quit by press right mouse btn;
    /// 3 quit by press esc key;
    /// 4 quit when copy rgb color;
    /// 5 quit when copy hex color;
    /// 6 quit when copy cmyk color;
    /// 7 quit when copy mouse position;
    /// 8 quit when save to file;
    /// 9 quit when save to clipboard;
    console.log("the quit code is:",code)
});
</code></pre>
<h2 id="截长图">截长图</h2>
<p><img src="https://img2024.cnblogs.com/blog/28932/202505/28932-20250518081659605-1964752878.png" alt="image" loading="lazy"></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.8286502562210648" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-18 08:23">2025-05-18 08:23</span>&nbsp;
<a href="https://www.cnblogs.com/liulun">liulun</a>&nbsp;
阅读(<span id="post_view_count">214</span>)&nbsp;
评论(<span id="post_comment_count">5</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18881931);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18881931', targetLink: 'https://www.cnblogs.com/liulun/p/18881931', title: '自荐：开源截图工具ScreenCapture：超多控制指令，支持截长图' })">举报</a>
</div>
        