
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ofnoname/p/18729619" title="发布于 2025-02-21 17:41">
    <span role="heading" aria-level="2">丘比特之箭与数学匹配的魔法：婚姻配对问题</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="男女稳定婚姻问题">男女稳定婚姻问题</h2>
<p><strong>现实篇：相亲修罗场里的蝴蝶效应</strong></p>
<p>霓虹闪烁的都市里，婚介所的王阿姨正对着满墙的会员资料发愁。985硕士张先生执着于温柔贤惠的文科女生，创业女强人李小姐却将幽默感列为择偶第一要素。看似简单的牵线搭桥，实则暗藏玄机——若强行配对"条件相当"但偏好错位的两人，很可能上演现实版《前任攻略》：小王和小芳虽在婚介所登记结婚，私下却与彼此的真爱暗度陈仓。</p>
<p>这正是数学家Gale和Shapley在1962年精准捕捉的<strong>婚姻配对问题</strong>：当 <span class="math inline">\(n\)</span> 位男士与 <span class="math inline">\(n\)</span> 位女士各自手握一份心动排序表，如何设计一个"拆不散"的终极配对方案？这里的"拆不散"不是月老的红线，而是一种精妙的数学稳态——<strong>稳定匹配</strong>。</p>
<p><strong>定义：稳定婚姻问题</strong><br>
设男士集合 <span class="math inline">\(M = \{m_1, m_2, ..., m_n\}\)</span>，女士集合 <span class="math inline">\(F = \{f_1, f_2, ..., f_n\}\)</span>，每个人心中都有一杆秤：</p>
<ul>
<li>每位男士 <span class="math inline">\(m_i\)</span> 对女士的偏好可表示为全序关系 <span class="math inline">\(&gt;_{m_i}\)</span></li>
<li>每位女士 <span class="math inline">\(f_j\)</span> 对男士的偏好同理为 <span class="math inline">\(&gt;_{f_j}\)</span></li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/1545207/202502/1545207-20250221172435970-685002421.png" alt="image" loading="lazy"></p>
<p>一个<strong>匹配</strong> μ 是将男士与女士一一对应的双射。匹配的方案有很多种，但这个匹配要成为<strong>稳定匹配</strong>，必须消灭所有"私奔因子"——即不存在 <span class="math inline">\((m, f)\)</span> 使得：</p>
<ol>
<li><span class="math inline">\(m\)</span> 比起其现任 <span class="math inline">\(μ(m)\)</span> ，更爱 <span class="math inline">\(f\)</span>（即<span class="math inline">\(f &gt;_{m} μ(m)\)</span>）</li>
<li>同时 <span class="math inline">\(f\)</span> 比起其现任 <span class="math inline">\(μ(f)\)</span> ，更爱 <span class="math inline">\(m\)</span>（即<span class="math inline">\(m &gt;_{f} μ(f)\)</span>）</li>
</ol>
<p>这样的危险组合 <span class="math inline">\((m, f)\)</span> 被称为<strong>阻塞对</strong>(blocking pair)，就像婚恋市场里的不定时炸弹。他们更喜欢彼此，却都委屈的和不太喜欢的现任在一起。而我们的任务，就是构建一个让所有炸弹自动失效的匹配方案。</p>
<h2 id="gale-shapley算法相亲会">Gale-Shapley算法：相亲会</h2>
<p>此刻，数学家们已经挥舞着算法之杖悄然降临。用递玫瑰的智慧破解爱情密码。想象所有男女来到相亲会配对。Gale和Shapley设计的算法，作为主持人，指挥着这场求偶仪式：</p>
<ol>
<li><strong>初始化</strong>：每位男士和女士都处于自由状态，手中空空如也。</li>
<li><strong>求婚阶段</strong>：每位自由男士 <span class="math inline">\(m\)</span> 按照自己的偏好列表，向尚未拒绝过他的最高位女士 <span class="math inline">\(f\)</span> 献上玫瑰。</li>
<li><strong>抉择时刻</strong>：每位女士 <span class="math inline">\(f\)</span> 收到若干玫瑰后，暂时保留最心仪的那一支（即偏好列表中排名最高的男士），其余男士惨遭拒绝。已经拥有配偶的女士会将当前配偶也加入和新的请求比较，选择最心爱的那一个。这意味着已配对的男性可能重新单身，他需要向偏好位下一位的女性继续求婚。</li>
<li><strong>循环往复</strong>：被拒绝的男士们重获自由身，继续向下一位心仪女士发起攻势，直到所有女士都手握一支玫瑰。</li>
</ol>
<p>用伪代码描述这场玫瑰盛宴：</p>
<pre><code>初始化所有男士和女士为自由状态
while 存在自由男士 do
    选择一位自由男士m
    f = m的偏好列表中尚未被自己求婚的最高位女士
    if f处于自由状态 then
        m和f暂时配对
    else
        if f更偏爱m而非当前配对对象m' then
            解除f与m'的配对
            m和f暂时配对
            将m'设为自由状态
        else
            m继续保持自由状态
        end if
    end if
end while
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/1545207/202502/1545207-20250221173118053-723241591.png" alt="image" loading="lazy"></p>
<h2 id="正确性与复杂度">正确性与复杂度</h2>
<p>Gale-Shapley算法最令人惊叹之处，在于它总能找到一个稳定匹配。：</p>
<ol>
<li>
<p><strong>终止性</strong>：算法必然在有限步内结束。因为每位男士最多向 <span class="math inline">\(n\)</span> 位女士求婚，且每次求婚至少有一位男士被拒绝或配对，总步数不超过 <span class="math inline">\(n^2\)</span>，时间复杂度为<span class="math inline">\(O(n^2)\)</span></p>
</li>
<li>
<p><strong>完美匹配</strong>：算法总是所有男士和女士都配对成功时才结束。若有男士 <span class="math inline">\(m\)</span> 未配对，必有女士 <span class="math inline">\(f\)</span> 也未配对，而 <span class="math inline">\(m\)</span> 会继续向 <span class="math inline">\(f\)</span> 求婚。</p>
</li>
<li>
<p><strong>稳定性</strong>：假设存在阻塞对 <span class="math inline">\((m, f)\)</span>，即非夫妻但 <span class="math inline">\(m\)</span> 更爱 <span class="math inline">\(f\)</span>，<span class="math inline">\(f\)</span> 更爱 <span class="math inline">\(m\)</span>。根据算法，<span class="math inline">\(m\)</span> 必然曾向 <span class="math inline">\(f\)</span> 求过婚，而 <span class="math inline">\(f\)</span> 要么拒绝了<span class="math inline">\(m\)</span>（与 <span class="math inline">\(f\)</span> 更爱 <span class="math inline">\(m\)</span> 矛盾），要么接受了 <span class="math inline">\(m\)</span>（与 <span class="math inline">\(m\)</span> 未配对矛盾）。因此，阻塞对不存在。</p>
</li>
</ol>
<h2 id="谁才是真正的赢家">谁才是真正的赢家？</h2>
<p>Gale-Shapley算法有一个有趣的性质：<strong>男士最优</strong>或<strong>女士最优</strong>。即算法找到的稳定匹配，对主动求婚的一方（通常是男士）最有利，对被动接受的一方（通常是女士）最不利。</p>
<ul>
<li><strong>男士最优</strong>：在所有可能的稳定匹配中，算法结果使每位男士获得尽可能高的偏好对象。</li>
<li><strong>女士最劣</strong>：在所有可能的稳定匹配中，算法结果使每位女士获得尽可能低的偏好对象。</li>
</ul>
<p>这一性质揭示了算法的不对称性：主动出击者往往能获得更优的结果。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.023066768712962964" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-21 17:43">2025-02-21 17:41</span>&nbsp;
<a href="https://www.cnblogs.com/ofnoname">Ofnoname</a>&nbsp;
阅读(<span id="post_view_count">22</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18729619" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18729619);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18729619', targetLink: 'https://www.cnblogs.com/ofnoname/p/18729619', title: '丘比特之箭与数学匹配的魔法：婚姻配对问题' })">举报</a>
</div>
        