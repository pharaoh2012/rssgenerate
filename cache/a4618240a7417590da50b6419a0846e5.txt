
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/du-hong/p/18382138" title="发布于 2025-02-12 16:15">
    <span role="heading" aria-level="2">《刚刚问世》系列初窥篇-Java+Playwright自动化测试-13- iframe操作-中篇（详细教程）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h3 id="autoid-0-0-0">1.简介</h3>
<p>按照计划今天就要用实际的例子进行iframe自动化测试。宏哥还是用之前找到的一个含有iframe的网页（QQ邮箱和163邮箱），别的邮箱宏哥就没有细看了，可能后期这两个邮箱页面优化升级，也就不能用了，但是现在还可以用。所以今天这一篇的主要内容就是用这两个网页的iframe结合上一篇的理论知识，宏哥给小伙伴或者童鞋们演示一下。</p>
<h3 id="autoid-0-1-0">2.QQ邮箱</h3>
<h4 id="autoid-0-2-0">2.1iframe</h4>
<p>F12查看HTML元素可以发现iframe，如下图所示：</p>
<p><img src="https://img2023.cnblogs.com/blog/1232840/202307/1232840-20230719153458158-1297292109.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<h4 id="autoid-0-2-1">2.2代码设计</h4>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202408/1232840-20240827101008498-788354624.png" alt="" loading="lazy"></p>
<div>
<h4>2.3参考代码</h4>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">package</span><span style="color: rgba(0, 0, 0, 1)"> com.bjhg.playwright;

</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Browser;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.BrowserContext;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.BrowserType;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.FrameLocator;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Locator;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Page;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Playwright;

</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">
 * </span><span style="color: rgba(128, 128, 128, 1)">@author</span><span style="color: rgba(0, 128, 0, 1)"> 北京-宏哥
 * 
 * @公众号:北京宏哥（微信搜索，关注宏哥，提前解锁更多测试干货）
 * 
 * 《刚刚问世》系列初窥篇-Java+Playwright自动化测试-12- iframe操作-上篇（详细教程）
 *
 * 2024年8月31日
 </span><span style="color: rgba(0, 128, 0, 1)">*/</span>
<span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Test_frame {
    
    </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> main(String[] args) {
        </span><span style="color: rgba(0, 0, 255, 1)">try</span> (Playwright playwright =<span style="color: rgba(0, 0, 0, 1)"> Playwright.create()) {
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">1.使用chromium浏览器，# 浏览器配置，设置以GUI模式启动Chrome浏览器（要查看浏览器UI，在启动浏览器时传递 headless=false 标志。您还可以使用 slowMo 来减慢执行速度。</span>
          Browser browser = playwright.chromium().launch(<span style="color: rgba(0, 0, 255, 1)">new</span> BrowserType.LaunchOptions().setHeadless(<span style="color: rgba(0, 0, 255, 1)">false</span>).setSlowMo(3000<span style="color: rgba(0, 0, 0, 1)">));
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">2.创建context</span>
          BrowserContext context =<span style="color: rgba(0, 0, 0, 1)"> browser.newContext();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">创建page</span>
          Page page =<span style="color: rgba(0, 0, 0, 1)"> context.newPage();
          
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">3.浏览器打开网站</span>
          page.navigate("https://mail.qq.com/"<span style="color: rgba(0, 0, 0, 1)">);
          System.out.println(page.title());
        
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 点击QQ登录</span>
          page.locator("#QQMailSdkTool_login_loginBox_tab_item_qq"<span style="color: rgba(0, 0, 0, 1)">).click();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 定位 frame 上的元素</span>
          FrameLocator  locator  = page.frameLocator("[class='QQMailSdkTool_login_loginBox_qq_iframe']").frameLocator("#ptlogin_iframe"<span style="color: rgba(0, 0, 0, 1)">);
          locator.locator(</span>"#switcher_plogin"<span style="color: rgba(0, 0, 0, 1)">).click();
          locator.locator(</span>"#u").fill("北京-宏哥"<span style="color: rgba(0, 0, 0, 1)">);
          locator.locator(</span>"#p").fill("123456"<span style="color: rgba(0, 0, 0, 1)">);
          locator.locator(</span>"#login_button"<span style="color: rgba(0, 0, 0, 1)">).click();
         
          System.out.println(</span>"Test Pass"<span style="color: rgba(0, 0, 0, 1)">);
          
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">关闭page</span>
<span style="color: rgba(0, 0, 0, 1)">          page.close();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">关闭browser</span>
<span style="color: rgba(0, 0, 0, 1)">          browser.close();
        }
      }
}</span></pre>
</div>
<h4>2.4运行代码</h4>
<p>1.运行代码，右键Run As-&gt;Java Application，就可以看到控制台输出，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202408/1232840-20240827100827765-2117100679.png" alt="" loading="lazy"></p>
<p>2.运行代码后电脑端的浏览器的动作（为了演示宏哥这里输入了错误的，如果正确，就直接登录邮箱成功）。如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202408/1232840-20240827100538293-2013605773.gif" alt="" loading="lazy"></p>
<h3 id="autoid-0-2-4">3.163邮箱</h3>
<h4 id="autoid-0-3-0">3.1iframe</h4>
<p>同理F12查看HTML元素可以发现iframe，如下图所示：</p>
<p><img src="https://img2023.cnblogs.com/blog/1232840/202307/1232840-20230719151031607-1495954286.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<h4 id="autoid-0-3-1">3.2代码设计</h4>
<p>由于iframe 元素 id 属性是动态可变的<code>id="x-URS-iframe1676960382133.3657"</code>&nbsp;可以使用xpath的contains 模糊匹配，或者css的正则匹配来对其进行定位。</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202408/1232840-20240827103345048-1817448188.png" alt="" loading="lazy"></p>
<h4>3.3参考代码</h4>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">package</span><span style="color: rgba(0, 0, 0, 1)"> com.bjhg.playwright;

</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Browser;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.BrowserContext;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.BrowserType;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.FrameLocator;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Page;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Playwright;

</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">
 * </span><span style="color: rgba(128, 128, 128, 1)">@author</span><span style="color: rgba(0, 128, 0, 1)"> 北京-宏哥
 * 
 * @公众号:北京宏哥（微信搜索，关注宏哥，提前解锁更多测试干货）
 * 
 * 《刚刚问世》系列初窥篇-Java+Playwright自动化测试-12- iframe操作-中篇（详细教程）
 *
 * 2024年8月31日
 </span><span style="color: rgba(0, 128, 0, 1)">*/</span>
<span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Test_frame {
    
    </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> main(String[] args) {
        </span><span style="color: rgba(0, 0, 255, 1)">try</span> (Playwright playwright =<span style="color: rgba(0, 0, 0, 1)"> Playwright.create()) {
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">1.使用chromium浏览器，# 浏览器配置，设置以GUI模式启动Chrome浏览器（要查看浏览器UI，在启动浏览器时传递 headless=false 标志。您还可以使用 slowMo 来减慢执行速度。</span>
          Browser browser = playwright.chromium().launch(<span style="color: rgba(0, 0, 255, 1)">new</span> BrowserType.LaunchOptions().setHeadless(<span style="color: rgba(0, 0, 255, 1)">false</span>).setSlowMo(3000<span style="color: rgba(0, 0, 0, 1)">));
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">2.创建context</span>
          BrowserContext context =<span style="color: rgba(0, 0, 0, 1)"> browser.newContext();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">创建page</span>
          Page page =<span style="color: rgba(0, 0, 0, 1)"> context.newPage();
          
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">3.浏览器打开网站</span>
          page.navigate("https://mail.163.com"<span style="color: rgba(0, 0, 0, 1)">);
          System.out.println(page.title());
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">xpath 模糊匹配</span>
          FrameLocator  frame = page.frameLocator("//iframe[contains(@id, 'x-URS-iframe')]"<span style="color: rgba(0, 0, 0, 1)">);
          frame.locator(</span>"[name='email']").fill("北京-宏哥"<span style="color: rgba(0, 0, 0, 1)">);
          frame.locator(</span>"[name='password']").fill("123456"<span style="color: rgba(0, 0, 0, 1)">);
          frame.locator(</span>"#dologin"<span style="color: rgba(0, 0, 0, 1)">).click();
          System.out.println(</span>"Test Pass"<span style="color: rgba(0, 0, 0, 1)">);
          
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">关闭page</span>
<span style="color: rgba(0, 0, 0, 1)">          page.close();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">关闭browser</span>
<span style="color: rgba(0, 0, 0, 1)">          browser.close();
        }
      }
}</span></pre>
</div>
<h4>3.4运行代码</h4>
<p>1.运行代码，右键Run As-&gt;Java Application，就可以看到控制台输出，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202408/1232840-20240827103313661-835818783.png" alt="" loading="lazy"></p>
<p>2.运行代码后电脑端的浏览器的动作（为了演示宏哥这里输入了错误的，如果正确，就直接登录邮箱成功）。如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202408/1232840-20240827103606951-1231378110.gif" alt="" loading="lazy"></p>
<h3 id="autoid-0-3-4">4.小结</h3>
<p>1.在Web UI自动化的测试中，如果一个元素定位不到，那么最大的可能定位的元素属性是在 iframe 框架中，iframe 是 html 中的框架，在 html 中，所谓框架就是可以在同一个浏览器窗口中显示不止一个页面,对不同页面进行嵌套。顺着定位元素往上找，查看是否有&lt;iframe&gt;标签，找到说明要定位此元素，需先定位到元素所在的iframe，然后再定位元素。</p>
<p>2.frame标签有frameset、frame、iframe三种，frameset跟其他普通标签没有区别，不会影响到正常的定位，而frame与iframe对Playwright定位而言是一样的，Playwright有一组方法对frame进行操作。</p>
<p>3.通常采用id和name就能够解决绝大多数问题。但有时候frame并无这两项属性，则可以用index和WebElement来定位：</p>
<p>　　index从0开始，传入整型参数即判定为用index定位，传入str参数则判定为用id/name定位</p>
<p>　　WebElement对象，即用frame_locator系列方法所取得的对象，我们可以用tag_name、xpath等来定位frame对象</p>
<p>好了，时间不早了，今天就分享和讲解到这里，感谢大家耐心的阅读，喜欢宏哥的，别忘记在文章末尾支持一下。</p>
</div>
</div>
<div id="MySignature" role="contentinfo">
    <div id="MySignature" style="display: block">
<div style="font-size: 13px; border: 1px dashed rgb(45, 161, 45); padding: 10px 15px; background-color: rgb(248, 248, 248)">
<label style="font-weight: bold">
&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家在移动端也能看到我分享的博文，现已注册个人微信公众号，扫描左下方二维码即可，欢迎大家关注，有时间会及时分享相关技术博文。</label><br>
<label style="font-weight: bold">
&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家互动讨论相关技术问题，现已组建专门的微信群，由于微信群满100，请您扫描右下方宏哥个人微信二维码拉你进群<label style="font-weight: bold; color: red; font-size: 15px">（请务必备注：已关注公众号进群）平时上班忙（和你一样），所以加好友不及时，请稍安勿躁~</label>，欢迎大家加入这个大家庭，我们一起畅游知识的海洋。</label><br>
&nbsp;&nbsp;&nbsp;&nbsp;感谢您花时间阅读此篇文章,如果您觉得这篇文章你学到了东西也是为了犒劳下博主的码字不易不妨打赏一下吧，让博主能喝上一杯咖啡，在此谢过了！<br>
&nbsp;&nbsp;&nbsp;&nbsp;如果您觉得阅读本文对您有帮助，请点一下左下角<a id="recommend" style="font-weight: bold; color: red; font-size: 15px; text-decoration: underline">“推荐”</a>按钮，您的<label style="font-weight: bold; color: red; font-size: 15px">“推荐”</label>将是我最大的写作动力！另外您也可以选择<a id="follow_me_btn" style="cursor: pointer; color: blue; text-decoration: underline">【<strong>关注我</strong>】</a>，可以很方便找到我！<br>
&nbsp;&nbsp;&nbsp;&nbsp;本文版权归作者和博客园共有，来源网址：<a href="https://www.cnblogs.com/du-hong" style="color: red; text-decoration: underline" target="_blank">https://www.cnblogs.com/du-hong</a> 欢迎各位转载，但是未经作者本人同意，转载文章之后必须在文章页面明显位置给出作者和原文连接，否则保留追究法律责任的权利！
</div>
<div style="text-align: center; margin-top: 10px">
   <p style="
    font-weight: bolder;
    color: red;
">公众号(关注宏哥)&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;客服微信</p><img style="width: 200px; padding-right: 20%" alt="个人微信公众号" src="https://img2018.cnblogs.com/common/1741949/201911/1741949-20191119095948011-608816619.png">
   <img style="width: 200px" alt="个人微信" src="https://img2018.cnblogs.com/common/1741949/201911/1741949-20191106101257091-849954564.png">
</div>
</div>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.0028875295289351854" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-12 16:15">2025-02-12 16:15</span>&nbsp;
<a href="https://www.cnblogs.com/du-hong">北京-宏哥</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18382138" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18382138);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18382138', targetLink: 'https://www.cnblogs.com/du-hong/p/18382138', title: '《刚刚问世》系列初窥篇-Java+Playwright自动化测试-13- iframe操作-中篇（详细教程）' })">举报</a>
</div>
        