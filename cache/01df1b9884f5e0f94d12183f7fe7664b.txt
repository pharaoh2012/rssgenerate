
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/dawnkylin/p/18749466" title="发布于 2025-03-03 21:56">
    <span role="heading" aria-level="2">CSS 浮动布局</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="浮动的设计初衷">浮动的设计初衷</h2>
<pre><code>float: left/right/both;
</code></pre>
<p>浮动是网页布局最古老的方式。</p>
<p>浮动一开始并不是为了网页布局而设计，它的初衷是<strong>将一个元素拉到一侧，这样文档流就能够包围它</strong>。</p>
<p>常见的用途是文本环绕图片：</p>
<p><img src="https://img2024.cnblogs.com/blog/3396972/202503/3396972-20250303215121140-75650563.png" alt="" loading="lazy"></p>
<p><strong>浮动元素会被移出正常文档流，并被拉到容器边缘</strong>。</p>
<h2 id="清除浮动的原因及方法">清除浮动的原因及方法</h2>
<p><strong>浮动元素的高度不会追加到父元素上</strong>。</p>
<p>如果浮动的元素比容器高，那么就可能发生<strong>容器折叠</strong>现象：</p>
<p><img src="https://img2024.cnblogs.com/blog/3396972/202503/3396972-20250303215145472-918798922.png" alt="" loading="lazy"></p>
<p>这时，我们就需要清除浮动。</p>
<p>清除浮动不太优雅的方式：在容器末尾添加一个空 div，设置 <code>clear: both</code>，清除两边浮动，使得容器会向下扩展包含它。</p>
<pre><code class="language-html">&lt;div style="clear: both;"&gt;&lt;/div&gt;
</code></pre>
<p>既然是添加一个 div 元素，不如使用伪元素 <code>::after</code> 来实现。</p>
<pre><code class="language-css">.clearfix::after{
	display: block;
	content: " ";
	clear: both;
}
</code></pre>
<p><strong>这个 <code>clearfix</code> 类是添加到包含浮动元素的元素上，而不是浮动元素本身。</strong></p>
<p>使用 <code>display: block</code> 的原因：默认情况下，伪元素是内联元素，而不是块级元素。为了确保伪元素占据一整行并且在浮动元素之后换行，我们需要将其设置为块级元素。更重要的是，<code>clear</code> 属性只对块级元素生效。</p>
<p>设置 <code>content: " "</code> 的原因：解决一些旧版浏览器的 Bug。</p>
<hr>
<p>清除浮动后的另一个问题：<strong>浮动元素的外边距不会折叠到清除浮动后的容器外部，但是非浮动元素会</strong>。</p>
<p>对此，解决该问题的<code>clearfix</code>的修改版如下：</p>
<pre><code class="language-css">.clearfix::after,
.clearfix::before{
    display: table;
    content: " ";
}

.clearfix::after{
    clear: both;
}
</code></pre>
<p>为什么使用 <code>display:table</code> 而不是 <code>display: block</code> ：外边距无法通过单元格元素折叠。</p>
<hr>
<p>浮动陷阱：<strong>浏览器会将浮动元素尽可能地放在靠上的地方</strong>。</p>
<p>如果众多的浮动元素高度不一致，最后导致布局会千变万化。哪怕是 <code>1px</code> 的高度差距也会导致浮动陷阱。</p>
<p>解决方法：<strong>给每一行的第一个元素清除左浮动</strong>。</p>
<p>假设每行有 m 个元素：</p>
<pre><code class="language-css">.floatElement::nth-child(mn+1){
	clear: left
}
</code></pre>
<h2 id="浮动布局示例解析古诗欣赏">浮动布局示例解析：古诗欣赏</h2>
<p>初始源代码如下：</p>
<p>index.html</p>
<pre><code class="language-html">&lt;div class="container"&gt;
	&lt;header&gt;
		&lt;h1&gt;古诗欣赏&lt;/h1&gt;
	&lt;/header&gt;
	&lt;main class="main clearfix"&gt;
		&lt;h3&gt;五言绝句&lt;/h3&gt;
		&lt;div&gt;
			&lt;div class="media"&gt;
				&lt;img class="media-image" src="相思.png"&gt;
				&lt;div class="media-body"&gt;
					&lt;h4&gt;相思·王维&lt;/h4&gt;
					&lt;p&gt;
						红豆生南国，春来发几枝。
						愿君多采撷，此物最相思。
					&lt;/p&gt;
				&lt;/div&gt;
			&lt;/div&gt;
			&lt;div class="media"&gt;
				&lt;img class="media-image" src="听筝.png"&gt;
				&lt;div class="media-body"&gt;
					&lt;h4&gt;听筝·李端&lt;/h4&gt;
					&lt;p&gt;
						鸣筝金粟柱，素手玉房前。
						欲得周郎顾，时时误拂弦。
					&lt;/p&gt;
				&lt;/div&gt;
			&lt;/div&gt;
			&lt;div class="media"&gt;
				&lt;img class="media-image" src="江雪.png"&gt;
				&lt;div class="media-body"&gt;
					&lt;h4&gt;江雪·柳宗元&lt;/h4&gt;
					&lt;p&gt;
						千山鸟飞绝，万径人踪灭。
						孤舟蓑笠翁，独钓寒江雪。
					&lt;/p&gt;
				&lt;/div&gt;
			&lt;/div&gt;
			&lt;div class="media"&gt;
				&lt;img class="media-image" src="春晓.png"&gt;
				&lt;div class="media-body"&gt;
					&lt;h4&gt;春晓·孟浩然&lt;/h4&gt;
					&lt;p&gt;
						春眠不觉晓，处处闻啼鸟。
						夜来风雨声，花落知多少。
					&lt;/p&gt;
				&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
	&lt;/main&gt;
&lt;/div&gt;
</code></pre>
<p>style.css</p>
<pre><code class="language-css">:root {
    box-sizing: border-box; /* 修改盒模型 */
}

*,
::before,
::after {
    box-sizing: inherit; /* 继承 box-sizing */
}

body {
    background-color: aliceblue;
    font-family: Arial, Helvetica, sans-serif;
}

/* 猫头鹰选择器 */

body * + *{
    margin-top: 1.5em;
}

header{
    padding: 1em 2em;
    background-color: antiquewhite;
    border-radius: .5em;
    margin-bottom: 2em;
}

.main{
    padding: 0 1.5em;
    background-color: white;
    border-radius: .5em;
}

.container{
    max-width: 800px; /* 自动适配宽度 */
    margin: 0 auto; /* 双容器模式 水平居中 */
}

.media{
    float: left;
    margin: 0 1.5em 1.5em 0; /* 重置 margin */
    width: calc(50% - 1.5em); /* 从宽度里减去 1.5em */
    padding: 1.5em;
    background-color:rgb(238, 245, 247);
    border-radius: .5em;
}

.media-image{
    width: 60px;
    height: 60px;
}

/* 清除浮动 */

/* .clearfix::after{
	display: block;
	content: " ";
	clear: both;
} */

/* 清除浮动修改版 */

.clearfix::after,
.clearfix::before{
    display: table;
    content: " ";
}

.clearfix::after{
    clear: both;
}

/* 解决浮动陷阱 */

.media:nth-child(odd){
    clear: left;
}
</code></pre>
<p>效果图：</p>
<p><img src="https://img2024.cnblogs.com/blog/3396972/202503/3396972-20250303215221772-284150627.png" alt="" loading="lazy"></p>
<h3 id="实现图片被文字环绕">实现图片被文字环绕</h3>
<pre><code class="language-css">.media-image{
    width: 100px;
    height: 100px;
    float: left; /* 左浮动 */
}

.media-body{
    margin-top: 0; /* 覆盖猫头鹰选择器 */
}

.media-body h4{
    margin-top: 0; /* 覆盖用户代理样式表 */
}
</code></pre>
<p>效果：</p>
<p><img src="https://img2024.cnblogs.com/blog/3396972/202503/3396972-20250303215231031-1954526176.png" alt="" loading="lazy"></p>
<h3 id="实现图片在左文字在右">实现图片在左文字在右</h3>
<p><img src="https://img2024.cnblogs.com/blog/3396972/202503/3396972-20250303215300549-1800220936.png" alt="" loading="lazy"></p>
<p>如上，图片被包含在了相邻的同级元素 <code>media-body</code> 中。</p>
<p>如果想实现图片在左文字在右，可以为文字创建一个<strong>块级格式上下文</strong>（block formatting context，BFC）。</p>
<p>BFC 将内部与外部隔绝开，内外互不影响。</p>
<p>创建 BFC 的方式：</p>
<ol>
<li>float 不为 none。</li>
<li>overflow 不为 visible。</li>
<li>display 为 inline-block、table-cell、table-caption、flex、inline-flex、grid、inline-grid。</li>
<li>position 为 absolute 或 fixed。</li>
</ol>
<p>网页的根元素就是一个顶级的 BFC。</p>
<p>CSS 修改如下：</p>
<pre><code class="language-css">.media-image{
    width: 60px;
    height: 60px;
    float: left;
    margin-right: 1.5em; /* 图片与文字间增加一定间距 */
}

.media-body{
    margin-top: 0; /* 覆盖猫头鹰选择器 */
    overflow: auto; /* 创建 BFC */
}
</code></pre>
<p>效果图：</p>
<p><img src="https://img2024.cnblogs.com/blog/3396972/202503/3396972-20250303215310476-348990390.png" alt="" loading="lazy"></p>
<p>注意：使用浮动或 <code>display: inline-block</code>创建BFC的元素的宽度会变为 <code>100%</code> 。</p>
<h2 id="基于浮动实现网格系统">基于浮动实现网格系统</h2>
<p><img src="https://img2024.cnblogs.com/blog/3396972/202503/3396972-20250303215324191-364442081.png" alt="" loading="lazy"></p>
<p>大部分的 CSS 框架都实现了自己的网格系统：<strong>在一个行容器内放置若干列容器，列的宽度由列容器的类决定</strong>。</p>
<pre><code class="language-html">&lt;div class="row"&gt;
	&lt;div class="column-1"&gt;&lt;/div&gt;
	&lt;div class="column-1"&gt;&lt;/div&gt;
	&lt;div class="column-1"&gt;&lt;/div&gt;
	&lt;div class="column-1"&gt;&lt;/div&gt;
	&lt;div class="column-1"&gt;&lt;/div&gt;
	&lt;div class="column-1"&gt;&lt;/div&gt;
	&lt;div class="column-3"&gt;&lt;/div&gt;
	&lt;div class="column-3"&gt;&lt;/div&gt;
&lt;/div&gt;
</code></pre>
<p>使用网格系统可以提高代码的可复用性。</p>
<p>网格系统不参与行列元素的视觉样式，只负责设置宽度和定位。在行列内的元素就不必再考虑宽度和定位了。</p>
<pre><code class="language-css">/* 网格系统 */

.row::after{
    display: block;
    content: " ";
    clear: both;
}

[class*="column-"]{
    float: left;
    padding: 0 0.75em; /* 左右设置内边距 */
    margin-top: 0; /* 去掉顶部外边距 */
}

.column-1{
    width: 8.333%;
}
.column-2{
    width: 16.6667%;
}
.column-3{
    width: 25%;
}
.column-4{
    width: 33.3333%;
}
.column-5{
    width: 41.6667%;
}
.column-6{
    width: 50%;
}
.column-7{
    width: 58.333%;
}
.column-8{
    width: 66.6667%;
}
.column-9{
    width: 75%;
}
.column-10{
    width: 83.333%;
}
.column-11{
    width: 91.6667%;
}
.column-12{
    width:100%;
}
</code></pre>
<p>完整 CSS：</p>
<pre><code class="language-css">:root {
    box-sizing: border-box; /* 修改盒模型 */
}

*,
::before,
::after {
    box-sizing: inherit; /* 继承 box-sizing */
}

body {
    background-color: aliceblue;
    font-family: Arial, Helvetica, sans-serif;
}

/* 猫头鹰选择器 */

body * + *{
    margin-top: 1.5em;
}

header{
    padding: 1em 2em;
    background-color: antiquewhite;
    border-radius: .5em;
    margin-bottom: 2em;
}

.main{
    padding: 0 1.5em 1.5em;
    background-color: white;
    border-radius: .5em;
}

.container{
    max-width: 800px; /* 自动适配宽度 */
    margin: 0 auto; /* 双容器模式 水平居中 */
}

/* 媒体对象的样式 */

.media{
    padding: 1.5em;
    background-color:rgb(238, 245, 247);
    border-radius: .5em;
}

.media-image{
    width: 60px;
    height: 60px;
    float: left;
    margin-right: 1.5em;
}

.media-body{
    margin-top: 0; /* 覆盖猫头鹰选择器 */
    overflow: auto; /* 创建 BFC */
}

.media-body h4{
    margin-top: 0; /* 覆盖用户代理样式表 */
}

/* 清除浮动 */

/* .clearfix::after{
	display: block;
	content: " ";
	clear: both;
} */

/* 清除浮动修改版 */

.clearfix::after,
.clearfix::before{
    display: table;
    content: " ";
}

.clearfix::after{
    clear: both;
}

/* 网格系统 */

.row::after{
    display: block;
    content: " ";
    clear: both;
}

[class*="column-"]{
    float: left;
    padding: 0 0.75em; /* 左右设置内边距 */
    margin-top: 0; /* 去掉顶部外边距 */
}

.column-1{
    width: 8.333%;
}
.column-2{
    width: 16.6667%;
}
.column-3{
    width: 25%;
}
.column-4{
    width: 33.3333%;
}
.column-5{
    width: 41.6667%;
}
.column-6{
    width: 50%;
}
.column-7{
    width: 58.333%;
}
.column-8{
    width: 66.6667%;
}
.column-9{
    width: 75%;
}
.column-10{
    width: 83.333%;
}
.column-11{
    width: 91.6667%;
}
.column-12{
    width:100%;
}
</code></pre>
<p>效果图如下：</p>
<p><img src="https://img2024.cnblogs.com/blog/3396972/202503/3396972-20250303215342321-1630503110.png" alt="" loading="lazy"></p>
<p>与前面的相比，这个导致了内容出现了错位，没有对齐标题。</p>
<p>使用负 margin 拉伸行元素解决该问题：</p>
<pre><code class="language-css">/* 网格系统 */

.row{
    margin-left: -0.75em;
    margin-right: -0.75em;
}

...
...
</code></pre>
<p>效果图：</p>
<p><img src="https://img2024.cnblogs.com/blog/3396972/202503/3396972-20250303215350132-1762957609.png" alt="" loading="lazy"></p>

</div>
<div id="MySignature" role="contentinfo">
    <b>如有错误和建议，欢迎在评论区告知！</b>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.09457065564699074" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-03 22:03">2025-03-03 21:56</span>&nbsp;
<a href="https://www.cnblogs.com/dawnkylin">dawnkylin</a>&nbsp;
阅读(<span id="post_view_count">4</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18749466" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18749466);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18749466', targetLink: 'https://www.cnblogs.com/dawnkylin/p/18749466', title: 'CSS 浮动布局' })">举报</a>
</div>
        