
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wang_yb/p/18844119" title="发布于 2025-04-24 10:33">
    <span role="heading" aria-level="2">『Plotly实战指南』--样式定制基础篇</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>在数据可视化的世界中，一个精心设计的图表不仅能准确传达信息，还能提升整体的专业性和吸引力。</p>
<p>而<code>Plotly</code>作为<code>Python</code>中强大的可视化库，提供了丰富的样式定制功能，帮助我们轻松实现这一目标。</p>
<p>本文从快速换肤到精细调整，深入探索<code>Plotly</code>的样式定制基础，让你的图表在视觉上脱颖而出。</p>
<h1 id="1-内置模板">1. 内置模板</h1>
<p><code>Plotly</code>内置了<code>10+</code>专业模板，相当于给图表穿上了不同风格的<strong>"皮肤"</strong>。</p>
<p>选择合适的模板，就像给PPT选择主题模板一样，能瞬间提升专业度。</p>
<h2 id="11-经典模板">1.1. 经典模板</h2>
<table>
<thead>
<tr>
<th>模板名称</th>
<th>视觉特征</th>
<th>适用场景</th>
</tr>
</thead>
<tbody>
<tr>
<td>ggplot2</td>
<td>灰色网格线+实心色块</td>
<td>学术论文、统计报告</td>
</tr>
<tr>
<td>seaborn</td>
<td>柔和色阶+细网格线</td>
<td>数据分析演示、教学课件</td>
</tr>
<tr>
<td>plotly_dark</td>
<td>深蓝背景+荧光色强调</td>
<td>大屏数据看板、夜间分析</td>
</tr>
</tbody>
</table>
<h2 id="12-专业模板">1.2. 专业模板</h2>
<table>
<thead>
<tr>
<th>模板名称</th>
<th>视觉特征</th>
<th>适用场景</th>
</tr>
</thead>
<tbody>
<tr>
<td>simple_white</td>
<td>医疗/生物领域专用</td>
<td>符合无菌视觉规范</td>
</tr>
<tr>
<td>xgridoff</td>
<td>移除网格线突出数据点</td>
<td>适合展示精确数值</td>
</tr>
<tr>
<td>presentation</td>
<td>宽边距+大字体设计</td>
<td>适配投影设备显示</td>
</tr>
</tbody>
</table>
<h2 id="13-模版使用示例">1.3. 模版使用示例</h2>
<p>使用<code>Plotly</code>内置模板非常简单，</p>
<p>可以在创建图表时直接通过<code>template</code>参数指定所需的模板。</p>
<p>比如：</p>
<pre><code class="language-python">import plotly.express as px

df = px.data.iris()
fig = px.scatter(df, x="sepal_width", y="sepal_length", template="ggplot2")

fig.show()
</code></pre>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2235414/1744977425042-2df86df1-d142-422a-8806-374d3f52d962.png" alt="" loading="lazy"></p>
<pre><code class="language-python">fig = px.scatter(df, x="sepal_width", y="sepal_length", template="seaborn")
</code></pre>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2235414/1744977454127-3bcf9adb-aae8-417d-ab43-1717c376b836.png" alt="" loading="lazy"></p>
<pre><code class="language-python">fig = px.scatter(df, x="sepal_width", y="sepal_length", template="plotly_dark")
</code></pre>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2235414/1744977473509-aba08c3d-5ab0-4257-9234-15ddfb286e32.png" alt="" loading="lazy"></p>
<p>也可以通过<code>update_layout</code>方法更新模板，比如：</p>
<pre><code class="language-python">import plotly.express as px
df = px.data.iris()
fig = px.scatter(df, x="sepal_width", y="sepal_length")

# 更新主题模版
fig.update_layout(template="simple_white")
fig.show()
</code></pre>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2235414/1744977634415-4350387c-ba8b-49cc-a15f-29e795b6e112.png" alt="" loading="lazy"></p>
<pre><code class="language-python">fig.update_layout(template="xgridoff")
</code></pre>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2235414/1744977680953-e43458ef-0c2e-4756-bffe-0e9c5687d1c8.png" alt="" loading="lazy"></p>
<pre><code class="language-python">fig.update_layout(template="presentation")
</code></pre>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2235414/1744977743451-eec5728e-9080-4e43-94ed-a3368ea4a3d3.png" alt="" loading="lazy"></p>
<h1 id="2-颜色与字体">2. 颜色与字体</h1>
<p>除了模板的快速切换，<strong>颜色</strong>和<strong>字体</strong>的精细调整也是提升图表专业性的重要环节。</p>
<h2 id="21-颜色设置">2.1. 颜色设置</h2>
<p><code>Plotly</code>提供了多种内置颜色主题，通过<code>color_discrete_sequence</code>参数可以轻松调用预设主题。</p>
<p>这些主题会根据数据类型自动匹配离散或连续的色序，确保颜色的合理分布。</p>
<pre><code class="language-python">import plotly.express as px

# 准备数据
df = px.data.iris()  # 使用Plotly自带的鸢尾花数据集

# 创建一个散点图
fig = px.scatter(
    df,
    x="sepal_width",
    y="sepal_length",
    color="species",  # 根据种类着色
    color_discrete_sequence=px.colors.qualitative.Dark24,
    title="鸢尾花数据集散点图",
)

# 显示图形
fig.show()
</code></pre>
<p>上面的代码中，通过<code>color</code>参数指定根据不同的<code>species</code>值使用不同的颜色，</p>
<p><code>color_discrete_sequence</code>参数则指定使用的内置颜色序列。</p>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2235414/1745025450637-053f7bd6-db0d-4625-a9c5-a021a9810428.png" alt="" loading="lazy"></p>
<h2 id="22-字体设置">2.2. 字体设置</h2>
<p>字体的设置同样重要，它直接影响到图表的可读性和专业性。</p>
<p>通过<code>update_layout</code>方法可以设置图表中各个部分的字体样式。</p>
<p>比如，下面的代码设置了标题的字体和颜色：</p>
<pre><code class="language-python">fig.update_layout(
    font_family="Arial",
    title_font_size=24,
    title_font_color="#2B2B2B"
)
</code></pre>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2235414/1745027139960-0b67d72d-86b6-407d-bbb3-f4e7a464123b.png" alt="" loading="lazy"></p>
<p>也可以设置其他部分的字体和颜色，比如下面的代码设置了<code>legend</code>和<strong>X轴刻度</strong>的颜色和字体：</p>
<pre><code class="language-python">fig.update_layout(
    xaxis_tickfont=dict(family="Courier New", size=15, color="blue"),
    legend_title_font=dict(family="Arial", size=20, color="red")
)
</code></pre>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2235414/1745027252617-f66a7af4-0aec-469b-a5a6-9a5a43a47370.png" alt="" loading="lazy"></p>
<p><strong>X轴刻度</strong>设置了蓝色并调大了字体（比<strong>Y轴刻度</strong>字体大），<code>legend</code>部分设置了红色和较大的字体。</p>
<h1 id="3-总结">3. 总结</h1>
<p>通过本文的介绍，我们了解了<code>Plotly</code>样式定制的三阶策略：</p>
<p>首先通过内置模板快速定型，为图表奠定基础风格；</p>
<p>接着通过颜色主题强化表达，突出数据的关键信息；</p>
<p>最后通过字体设置保障可读性，确保信息传达的清晰准确。</p>
<p>在实际应用中，可以根据不同的场景选择合适的模板。</p>
<p>例如，学术图表优先选择<code>ggplot2</code>或<code>seaborn</code>模板，而大屏展示则更适合<code>plotly_dark</code>深色模式。</p>
<p>在颜色选择上，要保证前景与背景的对比度达到<code>WCAG 4.5:1</code>以上，避免因对比度过低而导致信息难以辨认。</p>
<p>字体搭配方面，遵循<strong>“标题不超过3种字体，正文统一字体”</strong>的原则，能够有效提升图表的整体美观度和专业性。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.4150608843599537" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-24 10:34">2025-04-24 10:33</span>&nbsp;
<a href="https://www.cnblogs.com/wang_yb">wang_yb</a>&nbsp;
阅读(<span id="post_view_count">10</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18844119);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18844119', targetLink: 'https://www.cnblogs.com/wang_yb/p/18844119', title: '『Plotly实战指南』--样式定制基础篇' })">举报</a>
</div>
        