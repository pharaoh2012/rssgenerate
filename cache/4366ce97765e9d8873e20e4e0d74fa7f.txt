
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/LaughingZhu/p/18628922" title="发布于 2024-12-24 23:50">
    <span role="heading" aria-level="2">DevNow x Notion</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        <img src="https://img2024.cnblogs.com/blog/1182220/202412/1182220-20241224234957555-383210777.png" alt="DevNow x Notion" class="desc_img">
        DevNow x Notion: DevNow 支持了 Notion 作为其文档系统，可以帮助用户在 Notion 更高效地管理文档，实现文档的集中管理和协作。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="前言">前言</h2>
<p><a href="https://www.notion.com/zh-cn" target="_blank" rel="noopener nofollow">Notion</a> 应该是目前用户量比较大的一个在线笔记软件，它的文档系统也非常完善，支持多种文档格式，如 Markdown、富文本、表格、公式等。</p>
<p>早期我也用过一段时间，后来有点不习惯，就换到了 <code>Obsidian</code> ，但是身边人用的还是很多的，随着 Astro 5.0 的发布，在内容集成上也提供了更多的方向，这期就来聊聊 <a href="https://github.com/" target="_blank" rel="noopener nofollow">DevNow</a> 对 <code>Notion</code> 的支持。</p>
<h2 id="1notion-设置">1.Notion 设置</h2>
<h3 id="11-创建-notion-集成">1.1 创建 Notion 集成</h3>
<h4 id="111-什么是内部集成">1.1.1 <a href="https://developers.notion.com/docs/authorization#internal-integration-auth-flow-set-up" target="_blank" rel="noopener nofollow">什么是内部集成？</a></h4>
<p>内部集成允许 Notion 工作区成员通过 Notion REST API 与工作区交互。每个内部集成都与单个特定工作区绑定，并且只有工作区内的成员可以使用该集成。将内部集成添加到工作区后，成员必须手动授予集成访问他们希望其使用的特定页面或数据库的权限。</p>
<p>在 <a href="https://www.notion.so/profile/integrations" target="_blank" rel="noopener nofollow">集成管理</a> 中添加新的机集成，用来获取 <code>token</code> 。</p>
<p><img src="https://r2.laughingzhu.cn/bde7e732ea4cadc1ea8ac218c8101153-283d00.webp" alt="" loading="lazy"></p>
<p>成功创建后入下图，我们可以在 <strong>功能</strong> 模块中管理集成的权限，这里我们主要是读取内容，然后可以获取到 <strong>内部集成密钥</strong> 即 <code>PUBLIC_NOTION_TOKEN</code>。</p>
<p><img src="https://r2.laughingzhu.cn/991ab33ccea8c48509dd2cda40847bdc-cf7c0b.webp" alt="" loading="lazy"></p>
<h3 id="12-创建-notion-数据源">1.2 创建 Notion 数据源</h3>
<p>目前我们集成只能同步 Database 中的内容，所以我们需要先创建一个 Database。</p>
<p><img src="https://r2.laughingzhu.cn/5f996de185649ecde0405ea08829fc3e-b40ee4.webp" alt="" loading="lazy"></p>
<p>顶部选中的字符串是 <code>PUBLIC_NOTION_DATABASE_ID</code> ，我们需要将其复制下来，后面会用到。</p>
<p>如图，我们创建一个工作站，然后创建一个 <code>Database</code> 数据源，用来管理我们需要在 <code>DevNow</code> 中展示的文章，为了统一文章的结构，我们在 <code>Database</code> 中添加以下属性：</p>
<ul>
<li>title: 文本</li>
<li>desc: 文本</li>
<li>publishDate: 创建时间</li>
<li>image: 图片</li>
<li>category: 单选</li>
<li>tags: 文本, 如果有多个，请通过 <code>,</code> 分割</li>
<li>author: 文本</li>
</ul>
<p>:::tip[提示]<br>
关于 category 字段，建议大家参考 <code>src/data/category.ts</code> 中的分类，将其添加到 Notion 对应的详细那个中，如下：</p>
<p>这样方便大家在 <code>DevNow</code> 中查看文章时，能够快速找到对应的分类。如果有新增，请同时更新，否则会报错。</p>
<p><img src="https://r2.laughingzhu.cn/3becb9f9b63878fe0cc1a1d7ae3987f7-6fce87.webp" alt="" loading="lazy"><br>
:::</p>
<h3 id="13-关联集成">1.3 关联集成</h3>
<p>我们在对应的工作站中关联相关的集成，这样我们就可以在 <code>DevNow</code> 中通过 Loader 获取相关的内容了。</p>
<p><img src="https://r2.laughingzhu.cn/4e881c59f25ced9cc4d86a7d55f6a247-2f6b09.webp" alt="" loading="lazy"></p>
<p>如图，将我们之前添加的集成关联进来。</p>
<h3 id="14-创建新文章">1.4 创建新文章</h3>
<p>如图，我们需要完善所有的属性:</p>
<p><img src="https://r2.laughingzhu.cn/80fe5983763474df428f54963e2585a8-a252ab.webp" alt="" loading="lazy"></p>
<p>到这里我们 <code>Notion</code> 相关的配置就完事了。</p>
<h2 id="2-环境变量配置">2. 环境变量配置</h2>
<p>如果是通过 <code>Vercel</code> 部署的，可以对应的项目中添加环境变量：</p>
<ul>
<li>PUBLIC_NOTION_DATABASE_ID</li>
<li>PUBLIC_NOTION_TOKEN</li>
</ul>
<p>对应的值就是我们之前创建的 <code>Database</code> 的 <code>ID</code> 和 <code>token</code>。</p>
<p>如果是私有项目部署的话，可以在 <code>.env</code> 文件中添加相关内容。</p>
<h2 id="3-devnow-配置">3. DevNow 配置</h2>
<p>在 <code>DevNow</code> 中，我们需要配置相关的 <code>loader</code> 来获取我们的内容，由于数据的不同，我们在数据层也要做一下兼容，我们统一将数据格式化成 <code>src/content/config.ts</code> 中的 <code>SCHEMA</code> 格式。</p>
<h3 id="31-配置相关的-loader">3.1 配置相关的 loader</h3>
<p>Notion 的相关 <code>loader</code> 我们通过库 <code>notion-astro-loader</code> 库来实现。<br>
如要接入，请将一下注释打开即可。</p>
<pre class="language-ts title=&quot;src/content/config.ts&quot; ins=" data-lines-highlight="[2,5,6,7,8,9,10,14]"><code class="language-ts title=&quot;src/content/config.ts&quot; ins=" data-lines-highlight="[2,5,6,7,8,9,10,14]">...
// import { notionLoader } from 'notion-astro-loader';

...
// export const NotionDocs = defineCollection({
//  loader: notionLoader({
//    auth: import.meta.env.NOTION_TOKEN,
//    database_id: import.meta.env.NOTION_DATABASE_ID
//  })
//});

export const collections = {
  doc: Docs,
//  notion: NotionDocs
};</code></pre><h3 id="32-数据源格式化">3.2 数据源格式化</h3>
<blockquote>
<p>相关文件已经在 DevNow 中添加，如果需要计入 Notion 数据源，同上把注释打开即可。</p>
</blockquote>
<pre class="language-ts title=&quot;src/utils/content.ts&quot; ins=" data-lines-highlight="[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,29]"><code class="language-ts title=&quot;src/utils/content.ts&quot; ins=" data-lines-highlight="[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,29]">// import { richTextToPlainText } from 'notion-astro-loader';
// import { formatDate } from './utils';

// export const getNotionDocs = (await getCollection('notion')).map((item) =&gt; {
//   return {
//     id: item.id,
//     body: item.rendered?.html ?? '',
//     data: {
//       title: richTextToPlainText(item.data.properties.title.rich_text),
//       desc: richTextToPlainText(item.data.properties.desc.rich_text),
//       category: item.data.properties.category.select?.name || '',
//       author: richTextToPlainText(item.data.properties.author.rich_text),
//       tags: item.data.properties.tags.rich_text[0].plain_text.split(','),
//       image: item.data.properties.image.url,
//       publishDate: item.data.properties.publishDate.created_time,
//       pin: false
//     },
//     rendered: item.rendered,
//     filePath: item.id,
//     collection: item.collection,
//   };
// });

export const latestPosts = [
  ...(await getCollection('doc', ({ data }) =&gt; {
    return import.meta.env.PROD ? data.draft !== true : true;
  }))
  // 如果需要接入 Notion 数据源，需要将下面的注释去掉
  // ...getNotionDocs
].sort((a, b) =&gt; new Date(b.data.publishDate).valueOf() - new Date(a.data.publishDate).valueOf());</code></pre><h3 id="33-遗留问题">3.3 遗留问题</h3>
<p>由于数据的问题，目前暂时无法实现 <code>Notion</code> 数据源 <code>readTime</code> 计算，所以 Notion 相关文章，暂时不展示。</p>
<p>已经兼容了 <code>Notion</code> 的 <code>headings</code> 和 其他的相关数据。</p>
<h2 id="结果展示">结果展示</h2>
<p>列表页：</p>
<p><img src="https://r2.laughingzhu.cn/934d57681eeecfe80897a9d004b18d23-19ce1e.webp" alt="" loading="lazy"></p>
<p>详情页：</p>
<p><img src="https://r2.laughingzhu.cn/640f0ad0258ea78abd5b49f304ccddae-559166.webp" alt="" loading="lazy"></p>
<h2 id="总结">总结</h2>
<p>到这基本就完事了，可以通过这个方式，将 <code>Notion</code> 作为 <code>DevNow</code> 的数据源，来管理我们的文章。<br>
这样可以更方便我们的数据管理，也可以更好的与 <code>Notion</code> 进行集成，让我们的文章更加的丰富。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.018163345793981482" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2024-12-24 23:50">2024-12-24 23:50</span>&nbsp;
<a href="https://www.cnblogs.com/LaughingZhu">LaughingZhu</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18628922" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18628922);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18628922', targetLink: 'https://www.cnblogs.com/LaughingZhu/p/18628922', title: 'DevNow x Notion' })">举报</a>
</div>
        