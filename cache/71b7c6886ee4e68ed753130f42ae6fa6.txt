
<table cellspacing="0" cellpadding="0"><tbody><tr><td class="t_f" id="postmessage_52544209">
通过网盘分享的文件：cursor-fake-machine-0.0.1.vsix<br>
链接: https://pan.baidu.com/s/1TH9k7FkatU5-s0n4pAmDKQ?pwd=nbj9 提取码: nbj9<br>
<br>
一、安装Cursor v0.44.11<br>
如果你是 Cursor v0.44.11 及以下版本，可以跳过步骤一，否则请重新安装旧版本！<br>
<br>
1.1 卸载0.45及以上版本cursor<br>
1.1.1 卸载程序<br>
打开 Windows设置 -&gt; 应用 -&gt; 安装的应用 -&gt; 搜索cursor -&gt; 卸载<br>
<br>
<br>
<br>
1.1.2 删除用户设置和缓存<br>
删除Windows以下位置的文件夹：<br>
<br>
C:\Users\{你的用户名}\AppData\Roaming\Cursor<br>
1<br>
1.2 重新下载cursor<br>
点击下载 v0.44.11 (2025-01-03) - 最稳定版本：WINDOWS安装包<br>
<br>
二、重置免费试用期和使用次数<br>
2.1 删除账户<br>
打开Cursor设置 -&gt; General -&gt; Account -&gt; 点击Manage<br>
<br>
<br>
<br>
在Settings中Account -&gt; Advanced -&gt; Delete Account，点击删除账户<br>
<br>
<br>
<br>
2.2 打开PowerShell<br>
Windows底栏 开始 -&gt; 搜索 -&gt; 输入power shell -&gt; 以管理员身份运行<br>
<br>
<br>
<br>
2.3 输入重置脚本<br>
在打开的终端中输入以下指令：<br>
<br>
irm https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_win_id_modifier.ps1 | iex<br>
1<br>
来源：GitHub yuaotian大佬开源 yuaotian/go-cursor-help<br>
<br>
2.4 禁用Cursor自动更新<br>
运行重置脚本时，最后会询问是否禁用自动更新，输入1<br>
<br>
<br>
<br>
upd：增加了2.1“运行脚本前要先删除账户”，执行完脚本我的试用期和使用次数都重置了，如果你没有成功可以继续执行步骤三<br>
<br>
三、重置模型使用次数<br>
Cursor Pro版试用期间每天仅限试用50次高级请求（claude-3.5-sonnet, gpt-4o等）<br>
<br>
3.1 下载扩展插件<br>
点击下载：cursor-fake-machine<br>
<br>
来源：GitHub bestK大佬开源 bestK/cursor-fake-machine<br>
<br>
3.2 将插件复制进扩展<br>
复制下载的文件，打开Cursor的扩展并粘贴<br>
<br>
<br>
<br>
或者直接将文件拖入扩展<br>
<br>
<br>
<br>
3.3 删除账户<br>
打开Cursor设置 -&gt; General -&gt; Account -&gt; 点击Manage<br>
<br>
<br>
<br>
在Settings中Account -&gt; Advanced -&gt; Delete Account，点击删除账户<br>
<br>
<br>
<br>
3.4 运行 Fake Cursor: Fake Machine<br>
返回Cursor，Ctrl + shift + P打开输入框 -&gt; 输入fake，点击运行Fake Cursor: Fake Machine<br>
<br>
<br>
接着提示修改成功！<br>
<br>
3.5 如法炮制<br>
如果一天使用premium模型50次达到上限了，可以重复 步骤3.3~3.4 重置模型使用次数<br>
<br>
四、查看结果<br>
打开步骤3.3的Manage，或者直接点击 https://www.cursor.com/cn/settings<br>
&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; <br>
原文链接：https://blog.csdn.net/m0_74810483/article/details/145766837<br>
<br>
前言<br>
在前面这篇文章无限使用Cursor指南中，我提到使用 无限邮箱 或者 删除账号并重新注册 的方法，来无限使用Cursor免费版。但是当在本机登录过3个账号后，就会报这个“Too many free trial accounts used on this machine.”提示，就算有免费体验额度也无法继续体验。<br>
<br>
问题原因<br>
Cursor 会通过机器码（machineId）来限制每台机器只能绑定 3 次账号，超出次数后，删除账号、使用新邮箱、重装cursor等方法都无法恢复免费试用期，原因在于这个机器ID依然存在，导致我们无法使用。<br>
<br>
其实这就很简单了，我们只要把这个机器ID改掉，从而来“欺骗”Cursor，让他认为我们是一个全新的设备，就可以解决了！！！<br>
<br>
解决方法<br>
1. 找到storage.json配置文件<br>
C:\Users\Administrator\AppData\Roaming\Cursor\User\globalStorage<br>
<br>
注意：这里的Administrator为管理员用户目录，可能不一样，需要改成你自己的<br>
<br>
<br>
<br>
2. 关闭Cursor程序<br>
这一点很重要，一定要关掉 Cursor !!!<br>
<br>
3. 运行Pythone脚本<br>
这里我们可以写一个python脚本 change_machine_id.py 来给我们自动生成一个新的machineId，并写入storage.json<br>
<br>
import os<br>
import json<br>
import uuid<br>
from datetime import datetime<br>
import shutil<br>
 <br>
 <br>
# 配置文件路径，适配 Windows 的路径格式<br>
# storage_file = os.path.expanduser(r"~\AppData\Local\Cursor\User\globalStorage\storage.json")<br>
# win11 专用<br>
storage_file = os.path.expanduser(r"C:\Users\Administrator\AppData\Roaming\Cursor\User\globalStorage\storage.json")<br>
 <br>
# 生成随机 ID<br>
def generate_random_id():<br>
&nbsp; &nbsp; return uuid.uuid4().hex<br>
 <br>
# 获取新的 ID（从命令行参数或自动生成）<br>
def get_new_id():<br>
&nbsp; &nbsp; import sys<br>
&nbsp; &nbsp; return sys.argv[1] if len(sys.argv) &gt; 1 else generate_random_id()<br>
 <br>
# 创建备份<br>
def backup_file(file_path):<br>
&nbsp; &nbsp; if os.path.exists(file_path):<br>
&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;backup_path = f"{file_path}.backup_{datetime.now().strftime('%Y%m%d_%H%M%S')}"<br>
&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;shutil.copy(file_path, backup_path)<br>
&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;print(f"已创建备份文件: {backup_path}")<br>
&nbsp; &nbsp; else:<br>
&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;print("未找到需要备份的文件，跳过备份步骤。")<br>
 <br>
# 更新或创建 JSON 文件<br>
def update_machine_id(file_path, new_id):<br>
&nbsp; &nbsp; # 确保目录存在<br>
&nbsp; &nbsp; os.makedirs(os.path.dirname(file_path), exist_ok=True)<br>
 <br>
&nbsp; &nbsp; # 如果文件不存在，创建一个空的 JSON 文件<br>
&nbsp; &nbsp; if not os.path.exists(file_path):<br>
&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;with open(file_path, "w", encoding="utf-8") as f:<br>
&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;json.dump({}, f)<br>
 <br>
&nbsp; &nbsp; # 读取 JSON 数据<br>
&nbsp; &nbsp; with open(file_path, "r", encoding="utf-8") as f:<br>
&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;try:<br>
&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;data = json.load(f)<br>
&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;except json.JSONDecodeError:<br>
&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;data = {}<br>
 <br>
&nbsp; &nbsp; # 更新或添加 machineId<br>
&nbsp; &nbsp; data["telemetry.machineId"] = new_id<br>
 <br>
&nbsp; &nbsp; # 写回更新后的 JSON 文件<br>
&nbsp; &nbsp; with open(file_path, "w", encoding="utf-8") as f:<br>
&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;json.dump(data, f, indent=4, ensure_ascii=False)<br>
 <br>
&nbsp; &nbsp; print(f"已成功修改 machineId 为: {new_id}")<br>
 <br>
# 主函数<br>
if __name__ == "__main__":<br>
&nbsp; &nbsp; new_id = get_new_id()<br>
 <br>
&nbsp; &nbsp; # 创建备份<br>
&nbsp; &nbsp; backup_file(storage_file)<br>
 <br>
&nbsp; &nbsp; # 更新 JSON 文件<br>
&nbsp; &nbsp; update_machine_id(storage_file, new_id)<br>
<br>
右键 Run<br>
<br>
<br>
 我们再次打开Cursor，重新开一个会话，可以看到已经可以再次使用了！<br>
</td></tr></tbody></table>


