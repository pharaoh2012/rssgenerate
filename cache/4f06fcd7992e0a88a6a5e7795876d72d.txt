
	<h1 class="postTitle"><a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/bbqzsl/p/18857270" title="发布于 2025-05-10 11:07">
    <span role="heading" aria-level="2">Qml Console</span>
    

</a>
</h1>
	    <div id="cnblogs_post_description" style="display: none">
        
        动机：qmlconsole类似于chrome浏览器的devtool。用于运行时调试qml代码。用javascript控制台，执行指令。包括本控制台提供的内置函数。
    </div>
<div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>动机：qmlconsole类似于chrome浏览器的devtool。用于运行时调试qml代码。用javascript控制台，执行指令。包括本软件提供的内置函数。</p>
<p><img src="https://img2024.cnblogs.com/blog/665551/202505/665551-20250502120357359-1442516496.png" alt="" width="868" height="583" loading="lazy"></p>
<p>本项目整合到KTL项目上。但是KTL使用的QT版本为5.14。而qt6兼容的qt5，是特指5.15。5.15是专门兼容6.3的。所以KTL工具不支持。但是qmlconsole在基于&gt;5.15的平台下使用，可以支持。</p>
<p><strong>内置函数。封装在一个QtCpp类</strong>。提供<strong>exec</strong>，同步执行的函数，让<strong>qml</strong>去执行<strong>c++</strong>代码。exec函数使用sendMessage函数原型。所有新函数通过message来扩展。无须moc。exec函数位于最外层组件，所以提供一个<strong>expr</strong>函数，可以指定一个对象，在内层组件去执行表达式。</p>
<p><strong>内置消息</strong>有几大类。</p>
<p>"object."，对应QObject，相关的c++调用。</p>
<p>“context."，对应QQmlContext相关的c++调用。</p>
<p>”engine."，对应QQmlEngine相关的c++调用。</p>
<p>“whatis"，一个指令查看一个QObject对象的继承关系，</p>
<p>"parents"，一个指令查看一个对象的所有parent。</p>
<p>”context"，查看一个QQuickItem相关的QQmlContext。</p>
<p>“contexts"，查看一个QQuickItem相关的QQmlContext，并且所有父级的QQmlContext。</p>
<p>&nbsp;</p>
<p><strong>控制台函数</strong>。</p>
<p>pprint()，将一个数组或对象的属性，按行打印。</p>
<p>findId()，&nbsp;可以对一个内层组件通过id查找对象，&nbsp;并且可以通过类名获取singleton对象。</p>
<p>hire()，查看Item的组织结构。</p>
<p>hire(a) ，第一层，hire(a, 0, 0, 0) ，相当于 a[0][0][0]。结尾参数为-1，返回Item，而不是打印children。当结尾参数为-2时，另外还会对返回的Item，显示区域mask。</p>
<p>baseUrls()，可以查看一个Item所在的qml文件。</p>
<p>deepChildren()，这是一个帮助在c++层，查看children。因为在qml，并非所有对象都有children属性。而且有些框架的实现，视图树结构不根于RootItem。</p>
<p>deepItemChildren()，是将deepChildren()过滤掉非QQuickItem，只留QQuickItem。</p>
<p>maskItem()，将一个Item，用一个mask层显示出来。如果新建了一个窗口，需要将overlayMask.parent指向这个窗口的RootItem。</p>
<p>loadQml()，加载一个qml文件进行调试，效果同"加载..."按钮。加载后在qmlLoader.item。通过qmlContainer.setPreferredWidth()调整加载区的宽度。</p>
<p>&nbsp;</p>
<p><strong>控制台输入</strong>。</p>
<p>提供两种方式，单行命令，多行文本输入。</p>
<p>单行命令，支持自动完成提示。只可以执行javascript。</p>
<p>多行文本输入，既支持javascript执行，也支持创建Item。可以利用创建Item，潜入内层组件从而再执行javascript。</p>
<p>&nbsp;</p>
<p><strong>下面介绍调试</strong>，TaoQuick, Industrial，MaterialUI，FluentUI组件库。</p>
<p>这几个组件库的例子都需要编译程序。下面的例子是直接去调试qml源文件，在缺少必要exe设置的环境的情况下，如何用qmlconsole将环境设置弄好。例如qmlconsole提供UrlInterpreter，将qrc资源路径直接拦截重定向到本地源文件。经过一番努力后，终于将FluentUI在5.14的环境下编译完成。</p>
<p>如果要调试组件库的例子，请在控制台的加载按钮：</p>
<p>TaoQuick，请加载samples/TaoQuickShow/Qml/main.qml</p>
<div class="cnblogs_code"><img src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" id="code_img_closed_1ecae275-21e1-42d7-b843-0aa7e7ba726c" class="code_img_closed"><img src="https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" id="code_img_opened_1ecae275-21e1-42d7-b843-0aa7e7ba726c" class="code_img_opened" style="display: none">
<div id="cnblogs_code_open_1ecae275-21e1-42d7-b843-0aa7e7ba726c" class="cnblogs_code_hide">
<pre><span style="color: rgba(0, 128, 128, 1)"> 1</span> import QtQuick <span style="color: rgba(128, 0, 128, 1)">2.14</span>
<span style="color: rgba(0, 128, 128, 1)"> 2</span> import TaoQuick <span style="color: rgba(128, 0, 128, 1)">1.0</span>
<span style="color: rgba(0, 128, 128, 1)"> 3</span> 
<span style="color: rgba(0, 128, 128, 1)"> 4</span> <span style="color: rgba(0, 0, 0, 1)">Item{
</span><span style="color: rgba(0, 128, 128, 1)"> 5</span> <span style="color: rgba(0, 0, 0, 1)">id:trans
</span><span style="color: rgba(0, 128, 128, 1)"> 6</span> property <span style="color: rgba(0, 0, 255, 1)">string</span> transString: <span style="color: rgba(128, 0, 0, 1)">""</span>
<span style="color: rgba(0, 128, 128, 1)"> 7</span> <span style="color: rgba(0, 0, 0, 1)">    Component.onCompleted: {
</span><span style="color: rgba(0, 128, 128, 1)"> 8</span>         <span style="color: rgba(0, 0, 255, 1)">var</span> _ = expr(qmlLoader.item, <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Qt.resolvedUrl(".")</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">);
</span><span style="color: rgba(0, 128, 128, 1)"> 9</span> 
<span style="color: rgba(0, 128, 128, 1)">10</span>         exec(<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">context.setProperty</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">, context, 
</span><span style="color: rgba(0, 128, 128, 1)">11</span> <span style="color: rgba(0, 0, 0, 1)">        {trans:trans, 
</span><span style="color: rgba(0, 128, 128, 1)">12</span>         imgPath:_ + <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">../Image/</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">, 
</span><span style="color: rgba(0, 128, 128, 1)">13</span>         contentsPath:_ + <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">../Contents/</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">,
</span><span style="color: rgba(0, 128, 128, 1)">14</span>         hasShape:<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">})
</span><span style="color: rgba(0, 128, 128, 1)">15</span> <span style="color: rgba(0, 0, 0, 1)">    }
</span><span style="color: rgba(0, 128, 128, 1)">16</span>    
<span style="color: rgba(0, 128, 128, 1)">17</span> <span style="color: rgba(0, 0, 0, 1)">    CusButton {
</span><span style="color: rgba(0, 128, 128, 1)">18</span> <span style="color: rgba(0, 0, 0, 1)">      Component.onCompleted: {
</span><span style="color: rgba(0, 128, 128, 1)">19</span>          <span style="color: rgba(0, 0, 255, 1)">var</span> innerObj = hire(<span style="color: rgba(0, 0, 255, 1)">this</span>, <span style="color: rgba(128, 0, 128, 1)">2</span>); <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> BasicText</span>
<span style="color: rgba(0, 128, 128, 1)">20</span>          CusConfig.imagePathPrefix = exec(<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">context.resolvedUrl</span><span style="color: rgba(128, 0, 0, 1)">'</span>, innerObj, <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">.</span><span style="color: rgba(128, 0, 0, 1)">'</span>) + <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">../../Images/</span><span style="color: rgba(128, 0, 0, 1)">'</span>
<span style="color: rgba(0, 128, 128, 1)">21</span> <span style="color: rgba(0, 0, 0, 1)">      }
</span><span style="color: rgba(0, 128, 128, 1)">22</span> <span style="color: rgba(0, 0, 0, 1)">    }
</span><span style="color: rgba(0, 128, 128, 1)">23</span> }</pre>
</div>
<span class="cnblogs_code_collapse">并且执行</span></div>
<p>Industrial，请加载samples/Industrial/Main.qml</p>
<div class="cnblogs_code"><img src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" id="code_img_closed_2a08774d-ad51-4e02-9052-6da19fd77587" class="code_img_closed"><img src="https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" id="code_img_opened_2a08774d-ad51-4e02-9052-6da19fd77587" class="code_img_opened" style="display: none">
<div id="cnblogs_code_open_2a08774d-ad51-4e02-9052-6da19fd77587" class="cnblogs_code_hide">
<pre><span style="color: rgba(0, 128, 128, 1)"> 1</span> import QtQuick <span style="color: rgba(128, 0, 128, 1)">2.14</span>
<span style="color: rgba(0, 128, 128, 1)"> 2</span>  import Industrial.Controls <span style="color: rgba(128, 0, 128, 1)">1.0</span>
<span style="color: rgba(0, 128, 128, 1)"> 3</span> <span style="color: rgba(0, 0, 0, 1)">Button {
</span><span style="color: rgba(0, 128, 128, 1)"> 4</span> <span style="color: rgba(0, 0, 0, 1)">    Component.onCompleted: {
</span><span style="color: rgba(0, 128, 128, 1)"> 5</span>       <span style="color: rgba(0, 0, 255, 1)">var</span> _ = exec(<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">context.resolvedUrl</span><span style="color: rgba(128, 0, 0, 1)">'</span>, hire(<span style="color: rgba(0, 0, 255, 1)">this</span>, <span style="color: rgba(128, 0, 128, 1)">0</span>, -<span style="color: rgba(128, 0, 128, 1)">1</span>), <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">.</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">);
</span><span style="color: rgba(0, 128, 128, 1)"> 6</span>       <span style="color: rgba(0, 0, 255, 1)">var</span> ret = exec(<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">engine.addUrlInterceptor</span><span style="color: rgba(128, 0, 0, 1)">'</span>, <span style="color: rgba(0, 0, 255, 1)">this</span>, [<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">qrc:/icons/</span><span style="color: rgba(128, 0, 0, 1)">'</span>, _ + <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">../icons/</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">]);
</span><span style="color: rgba(0, 128, 128, 1)"> 7</span>       console.log(_ + <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">../icons/</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">);
</span><span style="color: rgba(0, 128, 128, 1)"> 8</span> <span style="color: rgba(0, 0, 0, 1)">      console.log(ret);
</span><span style="color: rgba(0, 128, 128, 1)"> 9</span> <span style="color: rgba(0, 0, 0, 1)">    }
</span><span style="color: rgba(0, 128, 128, 1)">10</span> }</pre>
</div>
<span class="cnblogs_code_collapse">并且执行</span></div>
<p>FluentUI，请加载samples/FluentUI/qml/winodw/MainWinodw.qml</p>
<div class="cnblogs_code"><img src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" id="code_img_closed_2d1196ea-37d5-43d5-9836-941348e64af0" class="code_img_closed"><img src="https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" id="code_img_opened_2d1196ea-37d5-43d5-9836-941348e64af0" class="code_img_opened" style="display: none">
<div id="cnblogs_code_open_2d1196ea-37d5-43d5-9836-941348e64af0" class="cnblogs_code_hide">
<pre><span style="color: rgba(0, 0, 0, 1)"> QtObject {
    Component.onCompleted: {
        </span><span style="color: rgba(0, 0, 255, 1)">var</span> a =<span style="color: rgba(0, 0, 0, 1)"> qmlLoader.item.contentItem;
        </span><span style="color: rgba(0, 0, 255, 1)">var</span> c = exec(<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">contexts</span><span style="color: rgba(128, 0, 0, 1)">'</span>, hire(a, <span style="color: rgba(128, 0, 128, 1)">0</span>, -<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">))
        </span><span style="color: rgba(0, 0, 255, 1)">var</span> _ = exec(<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">context.resolvedUrl</span><span style="color: rgba(128, 0, 0, 1)">'</span>, c[<span style="color: rgba(128, 0, 128, 1)">1</span>], <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">.</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">);
        </span><span style="color: rgba(0, 0, 255, 1)">var</span> ret = exec(<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">engine.addUrlInterceptor</span><span style="color: rgba(128, 0, 0, 1)">'</span>, <span style="color: rgba(0, 0, 255, 1)">this</span>, [<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">qrc:/example/</span><span style="color: rgba(128, 0, 0, 1)">'</span>, _ + <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">../../</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">]);
        console.log(_ </span>+ <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">../../</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">);
        console.log(ret);
    }
 }</span></pre>
</div>
<span class="cnblogs_code_collapse">并且执行</span></div>
<p>如果使用的组件库的话：</p>
<p>import TaoQuick 1.0</p>
<p>import Industrial 1.0</p>
<p>import FluentUI 1.0</p>
<p>&nbsp;</p>
<p><img src="https://img2024.cnblogs.com/blog/665551/202505/665551-20250508213143818-312617332.gif" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>用qmlconsole分析组织结构</p>
<p><img src="https://img2024.cnblogs.com/blog/665551/202505/665551-20250508213218593-1734164439.gif" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><img src="https://img2024.cnblogs.com/blog/665551/202505/665551-20250508213240922-1339715864.gif" alt="" loading="lazy"></p>
<p>用findElementByType，找出目标。hire查看组织结构，并mask显示目标。使用traceCursor，追踪鼠标点击的Item。用baseUrls查看，目标Item的源文件路径。等。</p>
<p>鼠标追踪traceCursor的使用。跟踪鼠标点击事件，当anime属性为1时，有动画效果。当配合ctrl点击时，测试target属性的满足点击位置的子Item，并打印在控制台。</p>
<p><img src="https://img2024.cnblogs.com/blog/665551/202505/665551-20250508213259000-1420246387.gif" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>动态创建Item</p>
<p><img src="https://img2024.cnblogs.com/blog/665551/202505/665551-20250510110040979-269416912.gif" alt="" width="776" height="506" loading="lazy"></p>
<p>&nbsp;动态创建3D&nbsp;shader。</p>
<p><img src="https://img2024.cnblogs.com/blog/665551/202505/665551-20250510110126989-1945212726.gif" alt="" width="795" height="518" loading="lazy"></p>
<p>&nbsp;</p>
<p>整合在KTL工具&nbsp;</p>
<p><a href="https://github.com/bbqz007/KTL/releases" target="_blank" rel="noopener nofollow">https://github.com/bbqz007/KTL/releases</a>。需要下载 KTL-v0.9.3&nbsp;以及 patch.qml.7z。</p>
</div>
<div id="MySignature" role="contentinfo">
    逆向深入objc,c++
windows下仿objc动画层UI引擎
</div>
<div class="clear"></div>

	<div class="postDesc">posted on 
<span id="post-date" data-last-update-days="0.04914844028472222" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-10 11:08">2025-05-10 11:07</span>&nbsp;
<a href="https://www.cnblogs.com/bbqzsl">bbqz007</a>&nbsp;
阅读(<span id="post_view_count">3</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18857270);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18857270', targetLink: 'https://www.cnblogs.com/bbqzsl/p/18857270', title: 'Qml Console' })">举报</a>
</div>
