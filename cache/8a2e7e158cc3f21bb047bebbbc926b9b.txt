<!----> <meta itemprop="headline" content="都2025年了，你还在提交按钮上面用防抖函数？"> <meta itemprop="keywords" content="Vue.js,前端,面试"> <meta itemprop="datePublished" content="2025-04-21T08:55:23.000Z"> <meta itemprop="image" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-128.png~tplv-t2oaga2asx-image.image"> <div itemprop="author" itemscope="itemscope" itemtype="http://schema.org/Person"><meta itemprop="name" content="阳火锅"> <meta itemprop="url" content="https://juejin.cn/user/871267922357485"></div> <div itemprop="publisher" itemscope="itemscope" itemtype="http://schema.org/Organization"><meta itemprop="name" content="掘金"> <div itemprop="logo" itemscope="itemscope" itemtype="https://schema.org/ImageObject"><meta itemprop="url" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-white-180.png~tplv-t2oaga2asx-image.image"> <meta itemprop="width" content="180"> <meta itemprop="height" content="180"></div></div> <h1 class="article-title" data-v-799d3073="">
            都2025年了，你还在提交按钮上面用防抖函数？
            <!----> <!----></h1> <div class="author-info-block block-hidden" data-v-799d3073=""><div class="author-info-box" data-v-799d3073=""><div class="author-name" data-v-799d3073=""><a href="/user/871267922357485/posts" target="_blank" rel="" class="jj-link username username ellipsis" data-v-65b50b51="" data-v-6a576a98="" data-v-799d3073=""><span class="name" style="max-width:160px;" data-v-65b50b51="" data-v-6a576a98="">
    阳火锅
  </span> <!----> <!----> <!----> </a></div> <div class="meta-box" data-v-799d3073=""><time datetime="2025-04-21T08:55:23.000Z" title="Mon Apr 21 2025 08:55:23 GMT+0000 (Coordinated Universal Time)" class="time" data-v-799d3073="">
                    2025-04-21
                  </time> <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="read-icon" data-v-799d3073=""><path d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor" data-v-799d3073=""></path><circle cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor" data-v-799d3073=""></circle></svg> <span class="views-count" data-v-799d3073="">
                    21,036
                  </span> <span class="read-time" data-v-799d3073=""><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" data-v-799d3073=""><rect width="16" height="16" fill="none" data-v-799d3073=""></rect><circle cx="8" cy="8" r="5.65625" stroke="#8A919F" data-v-799d3073=""></circle><path d="M7.69141 5.18652V8.30924H10.8141" stroke="#8A919F" stroke-linecap="round" stroke-linejoin="round" data-v-799d3073=""></path></svg>
                    阅读3分钟
                  </span> <!----></div></div> <div style="flex:1;" data-v-799d3073=""></div> <!----> <!----></div> <!----> <!----> <!----> <!----> <div id="article-root" itemprop="articleBody" class="main" data-v-799d3073=""><div class="article-viewer markdown-body cache result"><h2 data-id="heading-0">前言</h2>
<p>在日常开发中会涉及到各种按钮请求，测试人员经常怼着一个按钮狂点不止。这样导致很多数据重复提交！</p>
<p><strong>前端人员经常怼着测试说</strong>：你能不能不要点那么快啊！</p>
<p>（由于有时候接口返回比较慢）</p>
<p><strong>测试回怼</strong>：我不知道点击有没有成功呀！所以多点几次咯~</p>
<p><strong>项目经理</strong>：这是个BUG，你们前后端开发商量一下看怎么修复吧！</p>
<p><strong>后端人员</strong>：这不是我的问题，请求慢我没办法。。前端发生的事，找前端吧！</p>
<h2 data-id="heading-1">防抖</h2>
<p>那既然这么喜欢围着按钮狂点，那就加防抖呗！</p>
<pre><code class="hljs language-js" lang="js">   <span class="hljs-comment">//伪代码</span>
    &lt;el-button @click=<span class="hljs-string">'handleSubmit'</span>&gt;有本事再狂点击&lt;/el-button&gt;
    <span class="hljs-comment">//省略...debounce的实现</span>
    <span class="hljs-keyword">const</span> handleSubmit = <span class="hljs-title function_">debounce</span>(submit,<span class="hljs-number">1000</span>)

</code></pre>
<p>加防抖看似解决了问题了。。没想到过了几天！测试又在提BUG...</p>
<p><strong>测试</strong>: 兄弟，我咋还是重复提交了2条数据啊！</p>
<p><strong>前端</strong>：你又搞了什么骚操作？点了几下啊！</p>
<p><strong>测试</strong>：跟上次一样啊，我作死的在点。。</p>
<p><strong>前端</strong>：把游览器F12打开，我过来看一下吧！哎~</p>
<p>经过两人抓头排查，问题出现了：由于防抖函数设置的时间是1秒，后端接口返回的时间是5秒。。测试兄弟在这5秒内狂点了100多下。。（真是5秒真男人啊）</p>
<h4 data-id="heading-2">还是加按钮Loading吧</h4>
<p>最后没办法了，只能通过请求之前给按钮加一个loading禁用状态，等接口返回200再清除loading了！</p>
<pre><code class="hljs language-js" lang="js">
    <span class="hljs-comment">//伪代码</span>
    &lt;el-button @click=<span class="hljs-string">'handleSubmit'</span> :loading=<span class="hljs-string">'loading'</span>&gt;有本事再狂点击&lt;/el-button&gt;
    
    <span class="hljs-keyword">let</span> loading = <span class="hljs-literal">false</span>
    
    <span class="hljs-keyword">function</span> <span class="hljs-title function_">handleSubmit</span>(<span class="hljs-params"></span>){
      loading = <span class="hljs-literal">true</span> <span class="hljs-comment">//开启loading</span>
      <span class="hljs-title function_">ajax</span>(<span class="hljs-string">'xxx/xxx/xxx'</span>).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span>=&gt;</span>{
           <span class="hljs-keyword">if</span>(res.<span class="hljs-property">code</span> == <span class="hljs-number">200</span>){
            loading = <span class="hljs-literal">false</span> <span class="hljs-comment">//关闭loading</span>
           }
      })
    }
    

</code></pre>
<p>这下就完美解决了测试兄弟的BUG！可是又面临一个开发问题，就是如果很多地方要用到提交，是不是每个页面都去写一个loading变量啊！</p>
<p>接下来就是重头戏了，咱们把它封装成一个vue指令吧！</p>
<h2 data-id="heading-3">指令封装（vue3）</h2>
<pre><code class="hljs language-js" lang="js"><span class="hljs-comment">//入口文件main.js</span>
<span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">'vue'</span>
<span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">'./App.vue'</span>


<span class="hljs-keyword">import</span> { bLoading } <span class="hljs-keyword">from</span> <span class="hljs-string">'./permission/loading'</span>

<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>(<span class="hljs-title class_">App</span>)

<span class="hljs-title function_">bLoading</span>(app) <span class="hljs-comment">//全局注册</span>
</code></pre>
<pre><code class="hljs language-js" lang="js"><span class="hljs-comment">//bLoading.js</span>
<span class="hljs-keyword">import</span> type { <span class="hljs-title class_">App</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">'vue'</span>

<span class="hljs-keyword">let</span> tag = <span class="hljs-literal">null</span> 

<span class="hljs-keyword">const</span> className = <span class="hljs-string">`  //loading图标的样式
    el-icon {
      --color: inherit;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
      display: -webkit-inline-box;
      display: -ms-inline-flexbox;
      display: inline-flex;
      height: 1em;
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      justify-content: center;
      line-height: 1em;
      position: relative;
      width: 1em;
      fill: currentColor;
      color: var(--color);
      font-size: inherit;
    }
`</span>

<span class="hljs-comment">//loading图标，可以去阿里图库上面复制一个svg</span>
<span class="hljs-keyword">const</span> i = <span class="hljs-string">`&lt;i class=<span class="hljs-subst">${className}</span> id='loading'&gt; 
    &lt;svg t="1745215287730" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2663" width="200" height="200"&gt;&lt;path d="M834.7648 736.3584a5.632 5.632 0 1 0 11.264 0 5.632 5.632 0 0 0-11.264 0z m-124.16 128.1024a11.1616 11.1616 0 1 0 22.3744 0 11.1616 11.1616 0 0 0-22.3744 0z m-167.3216 65.8944a16.7936 16.7936 0 1 0 33.6384 0 16.7936 16.7936 0 0 0-33.6384 0zM363.1616 921.6a22.3744 22.3744 0 1 0 44.7488 0 22.3744 22.3744 0 0 0-44.7488 0z m-159.744-82.0224a28.0064 28.0064 0 1 0 55.9616 0 28.0064 28.0064 0 0 0-56.0128 0zM92.672 700.16a33.6384 33.6384 0 1 0 67.2256 0 33.6384 33.6384 0 0 0-67.2256 0zM51.2 528.9984a39.168 39.168 0 1 0 78.336 0 39.168 39.168 0 0 0-78.336 0z m34.1504-170.0864a44.8 44.8 0 1 0 89.6 0 44.8 44.8 0 0 0-89.6 0zM187.904 221.7984a50.432 50.432 0 1 0 100.864 0 50.432 50.432 0 0 0-100.864 0zM338.432 143.36a55.9616 55.9616 0 1 0 111.9232 0 55.9616 55.9616 0 0 0-111.9744 0z m169.0112-4.9152a61.5936 61.5936 0 1 0 123.2384 0 61.5936 61.5936 0 0 0-123.2384 0z m154.7776 69.632a67.1744 67.1744 0 1 0 134.3488 0 67.1744 67.1744 0 0 0-134.3488 0z m110.0288 130.816a72.8064 72.8064 0 1 0 145.5616 0 72.8064 72.8064 0 0 0-145.5616 0z m43.7248 169.472a78.3872 78.3872 0 1 0 156.8256 0 78.3872 78.3872 0 0 0-156.8256 0z" fill="" p-id="2664"&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/i&gt;`</span>
    
    
<span class="hljs-comment">//核心代码</span>
<span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">bLoading</span>(<span class="hljs-params">app: App&lt;Element&gt;</span>) {
  app.<span class="hljs-title function_">directive</span>(<span class="hljs-string">'bLoading'</span>, <span class="hljs-function">(<span class="hljs-params">el, binding</span>) =&gt;</span> {
    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> binding.<span class="hljs-property">value</span> !== <span class="hljs-string">'function'</span>) {
      <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">'Directive value must be a function'</span>)
    }
    el.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">'click'</span>, <span class="hljs-function">() =&gt;</span> {
      <span class="hljs-title function_">addNode</span>(el) <span class="hljs-comment">//添加loading图标</span>
      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span>{
          <span class="hljs-comment">//执行异步函数</span>
          binding.<span class="hljs-title function_">value</span>(<span class="hljs-function">() =&gt;</span> { 
              <span class="hljs-title function_">cleanNode</span>(el) <span class="hljs-comment">//清除loading</span>
          })
      }) <span class="hljs-comment">//延迟执行异步函数</span>
    })
  })
}


<span class="hljs-comment">//新增loading图标</span>
<span class="hljs-keyword">function</span> <span class="hljs-title function_">addNode</span>(<span class="hljs-params">el</span>) {
  <span class="hljs-keyword">if</span> (el.<span class="hljs-property">firstElementChild</span>.<span class="hljs-property">tagName</span> === <span class="hljs-string">'I'</span>) { <span class="hljs-comment">//如果按钮上面自带图标，就先移除</span>
    tag = el.<span class="hljs-property">firstElementChild</span>;
    el.<span class="hljs-title function_">removeChild</span>(el.<span class="hljs-property">firstElementChild</span>)
    el.<span class="hljs-title function_">insertAdjacentHTML</span>(<span class="hljs-string">'afterbegin'</span>, i)
  } <span class="hljs-keyword">else</span> {
    el.<span class="hljs-title function_">insertAdjacentHTML</span>(<span class="hljs-string">'afterbegin'</span>, i)
  }
  el.<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">'disabled'</span>, <span class="hljs-literal">true</span>)
  <span class="hljs-title function_">rotate</span>(<span class="hljs-string">'loading'</span>)
}

<span class="hljs-comment">//清除loading图标</span>
<span class="hljs-keyword">function</span> <span class="hljs-title function_">cleanNode</span>(<span class="hljs-params">el</span>) {
  el.<span class="hljs-title function_">removeAttribute</span>(<span class="hljs-string">'disabled'</span>)
  <span class="hljs-keyword">if</span> (el.<span class="hljs-property">firstElementChild</span>) {
    el.<span class="hljs-title function_">removeChild</span>(el.<span class="hljs-property">firstElementChild</span>);
    <span class="hljs-keyword">if</span> (tag) {
      el.<span class="hljs-title function_">prepend</span>(tag)
    }
  }
}

<span class="hljs-comment">//图标旋转动画</span>
<span class="hljs-keyword">function</span> <span class="hljs-title function_">rotate</span>(<span class="hljs-params">id</span>) {
  <span class="hljs-keyword">const</span> element = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(id);
  <span class="hljs-keyword">let</span> angle = <span class="hljs-number">0</span>; <span class="hljs-comment">// 初始角度为0度</span>
  <span class="hljs-keyword">const</span> speed = <span class="hljs-number">2</span>; <span class="hljs-comment">// 旋转速度，单位为度/帧（例如，每帧旋转2度）</span>
  <span class="hljs-keyword">function</span> <span class="hljs-title function_">rotate</span>(<span class="hljs-params"></span>) {
    angle = (angle + speed) % <span class="hljs-number">360</span>; <span class="hljs-comment">// 确保角度在0到360之间循环</span>
    element.<span class="hljs-property">style</span>.<span class="hljs-property">transform</span> = <span class="hljs-string">`rotate(<span class="hljs-subst">${angle}</span>deg)`</span>; <span class="hljs-comment">// 应用旋转变换</span>
    <span class="hljs-title function_">requestAnimationFrame</span>(rotate); <span class="hljs-comment">// 请求下一帧的动画回调</span>
  }
  <span class="hljs-title function_">rotate</span>(); <span class="hljs-comment">// 开始动画循环</span>
}


</code></pre>
<h5 data-id="heading-4">页面使用</h5>
<pre><code class="hljs language-js" lang="js">
&lt;el-button type=<span class="hljs-string">"primary"</span> v-bLoading=<span class="hljs-string">"(next) =&gt; handleSubmit(next)"</span> :icon=<span class="hljs-string">"Plus"</span>&gt;有本事再狂点击&lt;/el-button&gt;

<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Plus</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">'@element-plus/icons-vue'</span>
<span class="hljs-keyword">function</span> <span class="hljs-title function_">handleSubmit</span>(<span class="hljs-params">next</span>){
    <span class="hljs-comment">//模拟异步请求</span>
    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">()=&gt;</span>{
        <span class="hljs-comment">//请求返回200</span>
        <span class="hljs-title function_">next</span>() <span class="hljs-comment">//执行next函数，清除loading状态即可！</span>
    },<span class="hljs-number">3000</span>)
}

</code></pre>
<h5 data-id="heading-5">效果</h5>
<p><img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/a38ae0000e8b4662b8cba5078c4f48a6~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg6Ziz54Gr6ZSF:q75.awebp?rk3s=f64ab15b&amp;x-expires=1748249160&amp;x-signature=nkdakfTTtQELLCz2Z2uQKdHLPms%3D" alt="c93c767ce750d937762389ffca0b6d02_88911_1_ts.gif" loading="lazy"></p>
<h3 data-id="heading-6">总结：</h3>
<p>通过指令的形式，解决了重复提交的问题。遏止了代码臃于！方便复用！怎么样兄弟们，如果觉得这篇文章对你有帮助，就点赞+收藏吧！有问题欢迎留言~</p></div></div>