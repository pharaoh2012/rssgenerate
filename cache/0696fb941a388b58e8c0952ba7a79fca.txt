
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/yuziyue/p/19022356" title="发布于 2025-08-04 22:27">
    <span role="heading" aria-level="2">Python 使用 Dict 和 Set：从入门到进阶</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>Python 里的 <code>dict</code>（字典）和 <code>set</code>（集合）是非常常用的数据结构。它们不仅高效，而且语法也不复杂，是你写出优雅 Python 代码的必经之路。<br>
它们是 Python 的王牌数据结构之一，掌握它们，你的代码会更简洁更高效。<br>
<br></p>
<p>参考文章： <a href="https://easyeasy.me/770f069/" target="_blank" rel="noopener nofollow">Python 使用 Dict 和 Set | 简单一点学习</a></p>
<br>
<hr>
<h2 id="一基础入门搞懂-dict-和-set-是啥">一、基础入门：搞懂 dict 和 set 是啥</h2>
<h3 id="11-什么是-dict字典">1.1 什么是 dict（字典）？</h3>
<p>字典是“键-值”对的集合，键是唯一的，值可以是任意对象。</p>
<pre><code class="language-python">person = {
    "name": "小明",
    "age": 18,
    "city": "北京"
}
</code></pre>
<p>字典的特点：</p>
<ul>
<li>键必须是不可变类型（通常是字符串、数字、元组）</li>
<li>查找速度快，效率高</li>
<li>无序（从 Python 3.7 开始，插入顺序会被保留）</li>
</ul>
<h3 id="12-什么是-set集合">1.2 什么是 set（集合）？</h3>
<p>集合是一个无序、无重复元素的集合体。</p>
<pre><code class="language-python">fruits = {"apple", "banana", "orange"}
</code></pre>
<p>集合的特点：</p>
<ul>
<li>元素唯一，自动去重</li>
<li>可用于集合运算（交集、并集、差集等）</li>
<li>也是无序的，不能通过索引访问</li>
</ul>
<hr>
<h2 id="二常见操作增删改查那点事">二、常见操作：增删改查那点事</h2>
<h3 id="21-字典-dict-的基本操作">2.1 字典 dict 的基本操作</h3>
<pre><code class="language-python">person = {"name": "小明", "age": 18}

# 查
print(person["name"])         # 小明
print(person.get("gender"))   # None，不会报错

# 增
person["gender"] = "male"

# 改
person["age"] = 20

# 删
del person["gender"]
person.pop("age")  # 返回值是被删掉的值

# 遍历
for key, value in person.items():
    print(key, value)
</code></pre>
<h3 id="22-集合-set-的基本操作">2.2 集合 set 的基本操作</h3>
<pre><code class="language-python">fruits = {"apple", "banana"}

# 查（不能用索引，只能遍历）
for fruit in fruits:
    print(fruit)

# 增
fruits.add("orange")

# 删
fruits.remove("banana")  # 如果没有这个元素会报错
fruits.discard("peach")  # 不报错

# 清空
fruits.clear()
</code></pre>
<hr>
<h2 id="三进阶用法操作集合和字典的骚技巧">三、进阶用法：操作集合和字典的骚技巧</h2>
<h3 id="31-字典推导式">3.1 字典推导式</h3>
<p>快速构建字典的方式：</p>
<pre><code class="language-python">squares = {x: x * x for x in range(5)}
# {0: 0, 1: 1, 2: 4, 3: 9, 4: 16}
</code></pre>
<h3 id="32-集合推导式">3.2 集合推导式</h3>
<pre><code class="language-python">unique_even = {x for x in range(10) if x % 2 == 0}
# {0, 2, 4, 6, 8}
</code></pre>
<h3 id="33-字典常用方法">3.3 字典常用方法</h3>
<pre><code class="language-python">person.keys()       # 所有键
person.values()     # 所有值
person.items()      # 所有键值对
person.update({"job": "engineer"})  # 批量更新
</code></pre>
<h3 id="34-集合运算">3.4 集合运算</h3>
<pre><code class="language-python">a = {1, 2, 3}
b = {2, 3, 4}

print(a | b)   # 并集 {1, 2, 3, 4}
print(a &amp; b)   # 交集 {2, 3}
print(a - b)   # 差集 {1}
print(a ^ b)   # 对称差集 {1, 4}
</code></pre>
<hr>
<h2 id="四高级进阶骚操作和性能优化">四、高级进阶：骚操作和性能优化</h2>
<h3 id="41-用-set-做去重">4.1 用 set 做去重</h3>
<pre><code class="language-python">nums = [1, 2, 2, 3, 4, 4]
unique = list(set(nums))  # 去重后转回列表
</code></pre>
<h3 id="42-用-dict-做计数器不推荐手写推荐用-counter">4.2 用 dict 做计数器（不推荐手写，推荐用 Counter）</h3>
<pre><code class="language-python">words = ["apple", "banana", "apple"]
counter = {}

for word in words:
    counter[word] = counter.get(word, 0) + 1
</code></pre>
<p>或者用标准库里的：</p>
<pre><code class="language-python">from collections import Counter
counter = Counter(words)
</code></pre>
<h3 id="43-用-dict-模拟-switch-case-语句">4.3 用 dict 模拟 switch-case 语句</h3>
<pre><code class="language-python">def add(): print("加法")
def sub(): print("减法")

func_map = {
    "add": add,
    "sub": sub
}

func_map.get("add", lambda: print("无操作"))()
</code></pre>
<h3 id="44-用-frozenset-当字典键">4.4 用 frozenset 当字典键</h3>
<p>因为普通 set 不可哈希，不能作为字典键，但 frozenset 可以：</p>
<pre><code class="language-python">d = {}
key = frozenset([1, 2, 3])
d[key] = "这是一个键"
</code></pre>
<hr>
<h2 id="五总结一下">五、总结一下</h2>
<table>
<thead>
<tr>
<th>对象</th>
<th>特性</th>
<th>主要应用场景</th>
</tr>
</thead>
<tbody>
<tr>
<td>dict</td>
<td>键值对存储，查找快</td>
<td>结构化数据，映射、缓存</td>
</tr>
<tr>
<td>set</td>
<td>无重复元素，集合运算</td>
<td>去重、成员判断、数学集合</td>
</tr>
</tbody>
</table>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.001388888888888889" data-date-updated="2025-08-04 22:29">2025-08-04 22:27</span>&nbsp;
<a href="https://www.cnblogs.com/yuziyue">余子越的博客</a>&nbsp;
阅读(<span id="post_view_count">8</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19022356);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19022356', targetLink: 'https://www.cnblogs.com/yuziyue/p/19022356', title: 'Python 使用 Dict 和 Set：从入门到进阶' })">举报</a>
</div>
        