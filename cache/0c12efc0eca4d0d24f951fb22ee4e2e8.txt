
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/qizhou/p/18916604" title="发布于 2025-06-08 13:46">
    <span role="heading" aria-level="2">论文解读：Knowledge Neurons in Pretrained Transformers</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p data-pm-slice="0 0 []">  论文发表于自然语言处理顶会ACL-2022（<a href="https://aclanthology.org/2022.acl-long.581/" target="_blank" rel="noopener nofollow">原文链接</a>）。本文引入知识神经元 (Knowledge Neuron) 的概念，初步研究了预训练Transformer中是如何存储事实知识的：</p>
<p>  1、通过研究预训练的BERT，本文发现预训练语言模型的知识是独立存在于中间神经元激活中的</p>
<p>  2、可以通过编辑FFN层权重来修改模型对相应知识的记忆，而不用进行微调。</p>
<p data-pm-slice="0 0 []">  阅读本文请同时参考原始论文图表。</p>
<h1>思想</h1>
<p>  本文发现Transformer的知识在模型内部被其中的FFN模块的知识神经元所表示，所谓的知识神经元 (Knowledge Neurons) 即为输入通过第一个权重<span class="math">$W_1$</span>再激活后的向量，如图1和图2所示。</p>
<p>  因此提出一种特征归因方法来定位能表示某个知识的知识神经元，知识通过一个事实三元组来表示<span class="math">$(h,r,t)$</span>。本文使用某个包含 <span class="math">$h,r$</span> 的prompt让模型来预测 <span class="math">$t$</span> ，搞成一个完形填空任务的形式。</p>
<h2>知识归因</h2>
<p>  对于某个神经元<span class="math">$w_i^{(l)}$</span>，当其为某个值<span class="math">$\hat{w}_i^{(l)}$</span>时，根据某个待完形填空的prompt <span class="math">$x$</span>，模型预测正确答案<span class="math">$y^*$</span>的概率定义为文中式(4)。则这个神经元<span class="math">$w_i^{(l)}$</span>的归因分数定义为文中式(5)，也就是一个集成梯度 (Integrated Gradients)。可以理解为这个神经元从无到有对模型输出正确答案的平均影响程度。这个积分文中实现为求和的形式，把求和区间定义为20.</p>
<h2>知识神经元精炼</h2>
<p>  选择归因分数大于阈值<span class="math">$t$</span>的神经元，得到神经元粗糙集作为某个prompt的答案的知识归因集合。一个prompt可能有多个归因分数大于阈值<span class="math">$t$</span>的神经元被定位，但它们并不一定都是正确答案的知识神经元，也可能是其它信息。为了正确定位正确答案的知识神经元，文章使用多个有相同正确答案的prompt来得到多个知识神经元粗糙集，然后选择这些粗糙集中共享比例大于<span class="math">$p$</span>的神经元作为正确答案的知识神经元，即3.3所谓的知识神经元精炼。</p>
<h1>实验</h1>
<h2>实验设置</h2>
<p>  实验在BERT模型上进行，每个注意力模块隐藏层元素为768，FFN隐藏层元素为3072。</p>
<p>  将归因分数阈值<span class="math">$t$</span>设为最大归因分数的0.2倍，神经元共享比例阈值 <span class="math">$p$</span> 初始化为0.7，然后在实验过程中逐步增加或减小这个值，直到知识神经元数量在[2,5]以内。</p>
<p>  实验基于PARAREL数据集，PARAREL数据集由专家策划，包含来自T-REx数据集（ElSahar et al., 2018）的38个关系的各种提示模板。关系事实模板如表1所示。</p>
<h2>实验结果</h2>
<h3>知识神经元识别结果</h3>
<p>  图3：发现大部分与事实相关的知识神经元分布在模型的顶层，也就是最后几层。</p>
<p>  表2：关系事实识别出来的平均知识神经元数量，baseline是直接使用知识神经元本身<span class="math">$\overline{w}_i^{(l)}$</span>作为归因结果。其中inrta-rel和inter-rel分别表示有相同关系的事实对和有不同关系的事实对，可以看出本文的归因方法能有效识别出相同关系事实对共享的知识神经元，并且不同关系的事实对没有贡献的知识神经元。</p>
<p>  图4：通过抑制定位的知识神经元，即直接设置为0，发现本文归因方法有效使正确答案的预测概率降低，平均降低29.03%。而beseline几乎无效。</p>
<p>  图5：通过增强定位的知识神经元，即将激活值加倍，发现本文归因方法有效使正确答案的预测概率提升，平均提升31.17%。而baseline几乎无效。</p>
<h3>研究什么样的prompt能激活知识神经元</h3>
<p>  通过在Bing上爬取，构建了一个新的更广泛的数据集BINGREL，抓取数据如下：</p>
<p>  1、限制特定头尾实体对的句子，每个对最多抓取10句。共抓取210217句。</p>
<p>  2、仅限制头实体的句子，每个头实体最多抓取10句。共抓取266020句。</p>
<p>  根据远程监督假设，第一类文本通常包含完整的关系事实，而第二类不一定包含。实验分为三组：</p>
<p><span class="math">  $\mathcal{T}_1$</span>：mask第一类文本的尾实体获得表达知识的prompt。</p>
<p><span class="math">  $\mathcal{T}_2$</span>：随机mask第二类文本部分单词，作为对照组。</p>
<p><span class="math">  $\mathcal{T}_3$</span>：使用随机采样的prompt，作为另一个对照组。</p>
<p>  表4：展示了三个组的知识神经元定位结果，发现知识神经元更容易被表达知识的prompt即<span class="math">$\mathcal{T}_1$</span>激活。此外，由于知识神经元是通过PARAREL数据集提取的，而没见过BINGREL，所以展现了提取的知识神经元的泛化能力，它的确表达了某种知识。</p>
<p>  表3：展示了在相应知识神经元上平均激活值（注意不是归因值）最大和最小的prompt，发现表达相应知识的prompt能使相应的知识神经元激活值更大。</p>
<h3>事实更新与关系擦除</h3>
<p>  表6：将<span class="math">$&lt;h,r,t&gt;$</span>对应的知识神经元选定的FFN的第二个线性权重的slots，修改为<span class="math">$&lt;h,r,t'&gt;$</span>对应的slots时的结果：将原始预测的<span class="math">$t$</span>修改为<span class="math">$t'$</span>的比例 (Change rate)、使<span class="math">$t'$</span>的预测概率最大的成功率 (Success rate)、有相同关系<span class="math">$r$</span>的其它prompt的PPL的提升(Delta Intra-rel. PPL)、不同关系的其它prompt的PPL的提升 (Delta Inter-rel. PPL)。后面两个表示了这样的修改操作对无关事实的影响程度，越小越好。其中修改操作就是5.1的Methods，但是为什么要用词嵌入来修改，还不太清楚。PPL (Perplexity)就是模型正确预测一个句子的概率的倒数的表征，越小越好。</p>
<p>  表5：展示了将某个关系的知识神经元对应的<span class="math">$FFN^{(val)}$</span>擦除（直接设置为0向量）后，模型对有该关系的知识的预测的PPL大幅增加，而没有该关系的知识的预测的PPL增加不大。说明定位到的知识神经元的确能独立地表征相应的关系概念，并且删除后不会影响其它概念。定位方法如5.2 Methods所示。</p>
<h1>未来工作</h1>
<p>  1、弄清楚知识神经元在多语言预训练模型中的工作机制。感觉可以用有相同事实的不同语言prompt来归因。（本文指出）</p>
<p>  2、归因方法还可以进一步改进，毕竟文中的结果指标并不高。</p>
<p>  3、大模型中的知识神经元机制研究。</p>
<p>  4、知识神经元仅仅出现在FFN中吗？自注意力层是否也存在？两者是否有某种交互作用？</p>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.023793353166666666" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-06-08 13:47">2025-06-08 13:46</span>&nbsp;
<a href="https://www.cnblogs.com/qizhou">颀周</a>&nbsp;
阅读(<span id="post_view_count">9</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18916604);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18916604', targetLink: 'https://www.cnblogs.com/qizhou/p/18916604', title: '论文解读：Knowledge Neurons in Pretrained Transformers' })">举报</a>
</div>
        