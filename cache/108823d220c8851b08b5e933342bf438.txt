
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/jinjiangongzuoshi/p/18737660" title="发布于 2025-02-26 08:26">
    <span role="heading" aria-level="2">推荐一款最新开源，基于AI人工智能UI自动化测试工具！支持自然语言编写脚本！</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>随着互联网技术的飞速发展，Web应用越来越普及，前端页面也越来越复杂。为了确保产品质量，UI自动化测试成为了开发过程中不可或缺的一环。然而，传统的UI自动化测试工具往往存在学习成本高、维护困难等问题。特别是UI 自动化脚本里往往到处都是选择器，比如 #ids、data-test、.selectors。在需要重构的时候，这可能会让人感到非常头疼。</p>
<p>今天，我们将为您推荐一款基于AI人工智能的开源UI自动化测试工具——<strong>Midscene</strong>，让您轻松应对UI自动化测试挑战。</p>
<h2 id="1midscene介绍">1、Midscene介绍</h2>
<p><code>Midscene.js</code> 是一款由 <code>web-infra-dev</code>开发的开源 AI 驱动的自动化 SDK。其核心功能是能够让测试人员使用自然语言来控制页面、执行断言以及提取 JSON 格式的数据。这种以自然语言为交互方式的设计，极大地降低了自动化测试的门槛，即使是非专业编程人员也能够较为轻松地开展 UI 自动化测试工作。</p>
<p><img src="https://files.mdnice.com/user/3808/a93baf65-66c4-40ec-a8bf-789f775b98e5.png" alt="" loading="lazy"></p>
<p><code>Midscene.js</code> 采用了多模态大语言模型（LLM），能够直观地“理解”你的用户界面并执行必要的操作。你只需描述交互步骤或期望的数据格式，AI 就能为你完成任务。</p>
<p>默认选择的是 <code>OpenAI GPT-4o</code> 作为模型，你也可以自定义为其他多模态模型。</p>
<h2 id="2核心特性">2、核心特性</h2>
<p><strong>1、自然语言交互：</strong></p>
<ul>
<li><code>Midscene.js</code>允许用户通过自然语言描述测试步骤，工具将自动规划并控制用户界面。这种交互方式大大降低了编写测试脚本的难度，提高了测试脚本的可读性和可维护性。</li>
</ul>
<p><strong>2、理解UI，JSON格式回答：</strong></p>
<ul>
<li>用户只需提供所需数据的格式提示，<code>Midscene.js</code>即可返回以JSON格式组织的预期响应。这使得数据提取和验证过程更加直观和高效。</li>
</ul>
<p><strong>3、直观断言：</strong></p>
<ul>
<li>用户可以用自然语言进行断言，Midscene.js将基于AI理解执行这些断言。这减少了编写复杂断言逻辑的需求，提高了测试的准确性和可靠性。</li>
</ul>
<p><strong>4、无需定制训练的LLM：</strong></p>
<ul>
<li><code>Midscene.js</code>支持使用公共的多模态LLM（如GPT-4等），无需进行任何定制训练。这降低了使用门槛，使得更多开发者能够轻松上手这款工具。</li>
</ul>
<p><strong>5、可视化报告：</strong></p>
<ul>
<li><code>Midscene.js</code>提供了可视化报告文件，用户可以轻松理解和调试整个测试过程。这有助于快速定位问题，提高测试效率。</li>
</ul>
<h2 id="3技术实现与架构">3、技术实现与架构</h2>
<p><strong>1、语言构成</strong></p>
<p>Midscene 的代码主要由 HTML、TypeScript、MDX、Less和 JavaScript等语言编写。这种多语言的组合构建了一个功能丰富且灵活的测试工具框架。其中，TypeScript 的使用为代码提供了强类型检查，有助于提高代码的质量和可维护性；HTML 用于构建相关的页面结构（可能用于测试页面的模拟或展示测试结果等方面）；MDX 和 Less 则在文档编写、样式处理等方面发挥作用；JavaScript 作为前端开发的重要语言，也在一些交互逻辑处理等环节起到补充作用。</p>
<p><img src="https://files.mdnice.com/user/3808/ccd4f75f-5256-4082-b886-45848a971c14.png" alt="" loading="lazy"></p>
<p><strong>2、AI 驱动机制</strong></p>
<p><code>Midscene.js</code>基于多模态AI技术构建，通过<code>AI agent</code>实现自然语言控制页面、页面信息提取和断言页面状态等功能。它采用了多种工程手段，如AI结果缓存、AI任务报告等，以提升执行速度和中间透明化。</p>
<p>此外，<code>Midscene.js</code>还支持丰富的API接口，方便开发者进行自定义扩展和集成。</p>
<p>其内部采用了先进的 AI 技术来理解自然语言指令并转化为实际的自动化测试操作。它可能基于自然语言处理（NLP）模型来解析测试人员输入的自然语言文本，识别其中的操作意图和目标元素等关键信息。然后，通过与底层的自动化测试框架进行交互，将这些解析后的指令映射为具体的页面操作代码，如使用 <code>Playwright</code> 或 <code>Puppeteer</code> 等常见的自动化测试库来实现对浏览器页面的控制和交互。</p>
<h2 id="4安装与使用">4、安装与使用</h2>
<p>如果你想要使用<code>Midscene</code>中的核心能力，有多种方式，可以安装<strong>浏览器插件</strong> 开始快速体验。插件里可以用自然语言与任意网页联动，调用交互、提取、断言三种接口，无需搭建代码项目。</p>
<p>此外，还有几种形式支持将 Midscene 集成到代码：</p>
<ul>
<li>使用 YAML 格式的自动化脚本</li>
<li>集成到 Puppeteer</li>
<li>集成到 Playwright</li>
</ul>
<p><code>Midscene</code>一共有三种关键方法：交互（.ai, .aiAction）, 提取 (.aiQuery), 断言 (.aiAssert)。</p>
<ul>
<li>用 .ai方法描述步骤并执行交互</li>
<li>用 .aiQuery 从 UI 中“理解”并提取数据，返回值是 JSON 格式，你可以尽情描述想要的数据结构</li>
<li>用 .aiAssert 来执行断言</li>
</ul>
<p><strong>举例：</strong></p>
<pre><code>// 👀 输入关键字，执行搜索
// 注：尽管这是一个英文页面，你也可以用中文指令控制它
await ai('在搜索框输入 "Headphones" ，敲回车');

// 👀 找到列表里耳机相关的信息
const items = await aiQuery(
  '{itemTitle: string, price: Number}[], 找到列表里的商品标题和价格'
);

console.log("headphones in stock", items);
</code></pre>
<h3 id="41-通过-chrome-插件快速体验">4.1 通过 Chrome 插件快速体验</h3>
<p>前往 Chrome 扩展商店安装 Midscene 扩展：<code>Midscene</code><br>
启动扩展（可能默认是折叠的），通过粘贴 Key=Value 格式配置插件环境：</p>
<pre><code>OPENAI_API_KEY="sk-replace-by-your-own"
</code></pre>
<p>通过使用 <code>Midscene.js Chrome</code> 插件，你可以快速在任意网页上体验 Midscene 的主要功能，而无需编写任何代码。<br>
<img src="https://files.mdnice.com/user/3808/11a878f4-665a-4e1e-9a67-326873d078be.jpg" alt="" loading="lazy"></p>
<h3 id="42-使用-yaml-格式的自动化脚本">4.2 使用 YAML 格式的自动化脚本</h3>
<p>在大多数情况下，开发者编写自动化脚本只是为了执行一些冒烟测试，比如检查某些内容是否出现，或者验证某个关键用户路径是否可用。在这种情况下，维护一个大型测试项目会显得毫无必要。</p>
<p>⁠Midscene 提供了一种基于 .yaml 文件的自动化测试方法，这有助于你专注于脚本本身，而不是测试框架。以此，任何团队内的成员都可以编写自动化脚本，而无需学习任何 API。</p>
<p><strong>1、编写一个名为 bing-search.yaml 的文件。</strong></p>
<pre><code>target:
  url: https://www.bing.com

tasks:
  - name: 搜索天气
    flow:
      - ai: 搜索 "今日天气"
      - sleep: 3000

  - name: 检查结果
    flow:
      - aiAssert: 结果中展示了天气信息
</code></pre>
<p><strong>2、配置 OpenAI API Key</strong></p>
<pre><code># 更新为你自己的 Key

export OPENAI_API_KEY="sk-abcdefghijklmnopqrstuvwxyz"
</code></pre>
<p>或使用 .env 文件存储配置</p>
<pre><code>.env
OPENAI_API_KEY="sk-abcdefghijklmnopqrstuvwxyz"
</code></pre>
<p><strong>3、全局安装 @midscene/cli</strong></p>
<pre><code>npm i -g @midscene/cli
# 或在项目中安装
npm i @midscene/cli --save-dev
</code></pre>
<p><strong>4、运行脚本</strong></p>
<pre><code>midscene ./bing-search.yaml
# 或者如果你在项目中安装了 midscene
npx midscene ./bing-search.yaml
</code></pre>
<p>你应该会看到脚本的执行进度和可视化运行报告文件。</p>
<p><img src="https://files.mdnice.com/user/3808/8110db6a-aafe-4ddd-b17a-89941aff3706.png" alt="" loading="lazy"></p>
<h2 id="43-集成到-playwright">4.3 集成到 Playwright</h2>
<p><code>Playwright</code> 是由微软开发的一个开源自动化库，主要用于对网络应用程序进行端到端测试（end-to-end test）和网页抓取。</p>
<p>这里我们假设你已经拥有一个集成了 Playwright 的仓库。</p>
<p>1、配置 OpenAI API Key</p>
<pre><code># 更新为你自己的 Key
export OPENAI_API_KEY="sk-abcdefghijklmnopqrstuvwxyz"
</code></pre>
<p>2、新增依赖</p>
<pre><code>npm install @midscene/web --save-dev
</code></pre>
<p>3、更新配置文件，把下方代码保存为 ./e2e/fixture.ts;</p>
<pre><code>import { test as base } from '@playwright/test';
import type { PlayWrightAiFixtureType } from '@midscene/web/playwright';
import { PlaywrightAiFixture } from '@midscene/web/playwright';

export const test = base.extend&lt;PlayWrightAiFixtureType&gt;(PlaywrightAiFixture());
</code></pre>
<p>4、编写测试用例，例如下方代码，保存为 ./e2e/ebay-search.spec.ts</p>
<pre><code>import { expect } from "@playwright/test";
import { test } from "./fixture";

test.beforeEach(async ({ page }) =&gt; {
  page.setViewportSize({ width: 400, height: 905 });
  await page.goto("https://www.ebay.com");
  await page.waitForLoadState("networkidle");
});

test("search headphone on ebay", async ({ ai, aiQuery, aiAssert }) =&gt; {
  // 👀 输入关键字，执行搜索
  // 注：尽管这是一个英文页面，你也可以用中文指令控制它
  await ai('在搜索框输入 "Headphones" ，敲回车');

  // 👀 找到列表里耳机相关的信息
  const items = await aiQuery(
    '{itemTitle: string, price: Number}[], 找到列表里的商品标题和价格'
  );

  console.log("headphones in stock", items);
  expect(items?.length).toBeGreaterThan(0);

  // 👀 用 AI 断言
  await aiAssert("界面左侧有类目筛选功能");
});
</code></pre>
<p>5、运行测试用例</p>
<pre><code>npx playwright test ./e2e/ebay-search.spec.ts
</code></pre>
<p>6、查看测试报告<br>
当上面的命令执行成功后，会在控制台输出：<code>Midscene - report file updated: ./current_cwd/midscene_run/report/some_id.html</code>，通过浏览器打开该文件即可看到报告。</p>
<p><img src="https://files.mdnice.com/user/3808/bde56076-ffb6-424f-9650-3b5cc1b931c0.jpg" alt="" loading="lazy"></p>
<h2 id="5小结">5、小结</h2>
<p><code>Midscene</code>作为一款开源的基于 AI 人工智能的 UI 自动化测试工具，在简化测试流程、提高测试效率和降低测试门槛等方面有着显著的优势。它为软件测试人员提供了一种全新的测试手段，尤其适用于快速迭代开发的项目和团队中测试资源相对有限的情况。然而，如同任何工具一样，它也有其自身的局限性，在实际使用过程中需要测试人员根据具体的项目需求和场景进行合理的评估和应用。</p>
<p>但总体而言，Midscene 无疑是 UI 自动化测试领域中一颗极具潜力的新星，值得广大测试人员和开发团队关注与尝试。</p>
<p>项目地址：<code>https://github.com/web-infra-dev/midscene</code></p>
<p>使用文档：<code>https://midscenejs.com/zh/</code></p>

</div>
<div id="MySignature" role="contentinfo">
    技术改变世界！
         --狂诗绝剑
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.02580858013078704" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-26 08:26">2025-02-26 08:26</span>&nbsp;
<a href="https://www.cnblogs.com/jinjiangongzuoshi">狂师</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18737660" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18737660);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18737660', targetLink: 'https://www.cnblogs.com/jinjiangongzuoshi/p/18737660', title: '推荐一款最新开源，基于AI人工智能UI自动化测试工具！支持自然语言编写脚本！' })">举报</a>
</div>
        