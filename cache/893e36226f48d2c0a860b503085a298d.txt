
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/pencilstart/p/18613985" title="发布于 2024-12-18 09:46">
    <span role="heading" aria-level="2">C# Graphics 中如何快速反转Y轴坐标系，方便后续绘图</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>这段时间搞东西发现 C# Windows库里 没有了以前 C++ 中 修改坐标系 的一些 API，比如&nbsp;&nbsp;SetViewportExtEx，&nbsp;SetWindowExtEx 这些东西。</p>
<p>众所周知，在 Windows 系统中，坐标系的原点是从左上角开始为（0，0）的，Y轴越下值越大。这与现实生活中场景，低的Y才是0，向上Y值会越来越大，正好相反。</p>
<p><img src="https://img2024.cnblogs.com/blog/2127123/202412/2127123-20241218092905237-1370532863.png" alt=""></p>
<p>&nbsp;</p>
<p>如果顺从于Windows这样的坐标系，那么，我们在向Windows上画很多“现实”坐标内容时，不得不逐个修改”现实“坐标Y去”重计算“。这样会造成代码很难看，太耦合，或者有可能降低了绘制效率。</p>
<p>所以，在使用 Graphics 前这样两步设置后，就会很省事了。</p>
<p>代码如下：</p>
<div class="cnblogs_Highlighter">
<pre class="brush:csharp;gutter:true;">private void testFlipY(Graphics g)
{
	g.ScaleTransform(1, -1);
	g.TranslateTransform(0, -this.ClientSize.Height+1);

	g.DrawLine(Pens.Black, 0, 0, 300, 200);

	//g.ResetTransform();
}

private void Form1_Paint(object sender, PaintEventArgs e)
{
	testFlipY(e.Graphics);
}
</pre>
</div>
<p>ScaleTransform(1,-1)，让Y轴坐标值相反。如果没有下面那一句 TranslateTransform(0, -this.ClientSize.Height+1)，同样 DrawLine 时，Y轴就会从屏幕左上角往上画到窗口外去了，所以就看不到线。</p>
<p>TranslateTransform(0, -this.ClientSize.Height+1)，重新定位后续的原点坐标，因为前面ScaleTransform(1,-1)后，左上角为(0,0)开始，Y轴向下为负值，向上为正值，现实生活中，我们通常认为从左下角开始为原点，因此没有调用这句前，左下角的Y值是窗口客户端的负高度值【-this.ClientSize.Height+1】，这句调用后，左下角的坐标就是新的原点(0,0)。此时，再调画线函数，Y值200就是向上方向，就可以画在窗口中了。</p>
<p><img src="https://img2024.cnblogs.com/blog/2127123/202412/2127123-20241218095248327-1521341664.png" alt=""></p>
<p>&nbsp;</p>
<p>&nbsp;至于为啥要 -this.ClientSize.Height+1，因为这里是坐标值，系统是从0值开始的，若窗口高度有100时，最高的地方值应是99，反之。<span style="color: rgba(255, 0, 0, 1)"><br></span></p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="5.212755130922454" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2024-12-18 09:53">2024-12-18 09:46</span>&nbsp;
<a href="https://www.cnblogs.com/pencilstart">PencilStart</a>&nbsp;
阅读(<span id="post_view_count">61</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18613985" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18613985);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18613985', targetLink: 'https://www.cnblogs.com/pencilstart/p/18613985', title: 'C# Graphics 中如何快速反转Y轴坐标系，方便后续绘图' })">举报</a>
</div>
        