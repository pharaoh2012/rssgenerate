
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ishoulgodo/p/18691969" title="发布于 2025-01-26 16:54">
    <span role="heading" aria-level="2">java中的集合ArrayList</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h4 id="创建集合对象有3种形式">创建集合对象有3种形式</h4>
<p>1,不需要传递构造参数，直接new就可以,此时底层数组为空数组。<br>
2,构造参数需要传递一个int类型的值， 用于设置底层数组的长度<br>
3,构造参数需要传递一个Collection集合类型的值,用于将集合中的数据放置在当前的集合中。</p>
<h4 id="第1种方式创建数组">第1种方式创建数组</h4>
<pre><code>package goodStudy;
import java.util.ArrayList;

public class goodStudy{
	public static void main(String[] args) {
	 ArrayList arrList = new ArrayList();
	 // 输出的是一个空数组
	 System.out.print(arrList);
	}
}
</code></pre>
<h4 id="往集合中添加数据-add">往集合中添加数据 add</h4>
<pre><code>package goodStudy;
// ArrayList在java--&gt;util包中
import java.util.ArrayList;

public class goodStudy{
	public static void main(String[] args) {
	 ArrayList arrList = new ArrayList();
	 arrList.add("添加一个数据");
	 // 输出的是一个空数组
	 System.out.print(arrList);
	}
}
</code></pre>
<h4 id="往集合中添加数据-add添加到哪一个位置-添加的值">往集合中添加数据 add('添加到哪一个位置', '添加的值')</h4>
<pre><code>ArrayList arrList = new ArrayList();
arrList.add("嘿嘿01");
arrList.add("嘻嘻02");
arrList.add("哈哈03");
arrList.add(0, "第1项");
// 输出的是： arrList:[第1项, 嘿嘿01, 嘻嘻02, 哈哈03]
System.out.println("arrList:" + arrList);
</code></pre>
<h4 id="添加另外一个集合addall">添加另外一个集合addAll</h4>
<pre><code>ArrayList arrList = new ArrayList();
arrList.add("嘿嘿01");
	 
ArrayList otherArr = new ArrayList();
otherArr.add("otner_01");
otherArr.addAll(arrList);

// 输出的是：otherArr:[otner_01, 嘿嘿01]
System.out.println("otherArr:" + otherArr);
</code></pre>
<h4 id="集合默认时长度10">集合默认时长度10</h4>
<p>在添加数据时，如果集合中没有任何数据,那么底层会创建长度为10的数组</p>
<h4 id="集合添加的个数大于集合的长度会报错嘛">集合添加的个数大于集合的长度，会报错嘛？</h4>
<pre><code>package goodStudy;
//ArrayList在java--&gt; util包中
import java.util.ArrayList;

public class goodStudy{
	public static void main(String[] args) {
	 ArrayList arrList = new ArrayList(3);
	 arrList.add("嘿嘿01");
	 arrList.add("嘻嘻02");
	 arrList.add("哈哈03");
	 arrList.add("呲呲04");
   // 会报错嘛?
	 System.out.println(arrList);
	}
}
</code></pre>
<p>不会报错的。为啥？<br>
因为：在底层创建了一个更大的数组</p>
<h4 id="获取集合的长度-size">获取集合的长度 size</h4>
<pre><code>ArrayList arrList = new ArrayList();
arrList.add("嘿嘿01");
arrList.add("嘻嘻02");
arrList.add("哈哈03");
arrList.add("呲呲04");
System.out.println(arrList.size()); 
// 输出 4
</code></pre>
<h4 id="获取集合中指定位置的数据-get">获取集合中指定位置的数据 get</h4>
<pre><code>ArrayList arrList = new ArrayList();
arrList.add("嘿嘿01");
arrList.add("嘻嘻02");
arrList.add("哈哈03");
arrList.add("呲呲04");
System.out.print(arrList.get(2));
// 输出的时： 哈哈03
</code></pre>
<h4 id="遍历集合中的数据-for循环">遍历集合中的数据 for循环</h4>
<pre><code>public class goodStudy{
	public static void main(String[] args) {
	 ArrayList arrList = new ArrayList();
	 arrList.add("嘿嘿01");
	 arrList.add("嘻嘻02");
	 arrList.add("哈哈03");
	 arrList.add("呲呲04");
	 for(int i =0;i&lt;arrList.size();i++){
		System.out.print("当前的值时"+ arrList.get(i));
	 }
	}
}
</code></pre>
<h4 id="遍历集合中的数据-for循环-不考虑集合的顺序-特殊的for循环">遍历集合中的数据 for循环 [不考虑集合的顺序] 特殊的for循环</h4>
<pre><code>当我们遍历集合时，如果不考虑集合的顺序，可以使用下面的 for Object循环
</code></pre>
<pre><code>ArrayList arrList = new ArrayList();
arrList.add("嘿嘿01");
arrList.add("嘻嘻02");
arrList.add("哈哈03");
arrList.add("呲呲04");
for(Object obj:arrList ){
  System.out.println("当前的值时"+ obj);
}
</code></pre>
<h4 id="更新数据-set">更新数据 set</h4>
<pre><code>ArrayList.set('跟新数据的位置', '更新的值')
set的返回值表示的是：当前这一项更新前的数据
</code></pre>
<pre><code>ArrayList arrList = new ArrayList();
arrList.add("嘿嘿01");
arrList.add("嘻嘻02");
arrList.add("哈哈03");
arrList.add("呲呲04");
// set的返回值表示的是：当前这一项更新前的数据
Object oldValue = arrList.set(0, "第1项");
//输出的是 嘿嘿01
System.out.println(oldValue);
System.out.println(arrList);
</code></pre>
<h4 id="删除数据-remove">删除数据 remove</h4>
<pre><code>ArrayList.remove(需要删除的数据的位置)
remove的返回值表示的是：被删除的数据
</code></pre>
<pre><code>ArrayList arrList = new ArrayList();
arrList.add("嘿嘿01");
arrList.add("嘻嘻02");
arrList.add("哈哈03");
arrList.add("呲呲04");
Object oldValue = arrList.remove(0);
// 删除前这一项的值:嘿嘿01
System.out.println("删除前这一项的值:" + oldValue);
// arrList:[嘻嘻02, 哈哈03, 呲呲04]
System.out.println("arrList:" + arrList);
</code></pre>
<h4 id="清空集合和判断集合是否是空">清空集合和判断集合是否是空</h4>
<pre><code>ArrayList arrList = new ArrayList();
arrList.add("嘿嘿01");
// 清空这个集合
arrList.clear();
// 判断集合是否是空
System.out.println("集合是否是空:" + arrList.isEmpty());
</code></pre>
<h4 id="removeall-方法从一个集合中移除所有在另一个集合中存在的元素">removeAll() 方法从一个集合中移除所有在另一个集合中存在的元素。</h4>
<pre><code>ArrayList arrList = new ArrayList();
arrList.add("嘿嘿01");
arrList.add("哈哈02");

ArrayList list = new ArrayList();
list.add("哈哈02");
// 从arrList集合中删除list集合中存在的元素
arrList.removeAll(list);
// 输出 ["嘿嘿01"]
System.out.println("arrList: "+ arrList);
</code></pre>
<h4 id="是否包含某个元素contains-返回布尔类型的值">是否包含某个元素contains, 返回布尔类型的值</h4>
<pre><code>ArrayList arrList = new ArrayList();
arrList.add("嘿嘿01");
// 判断 arrList 这个数组是否包含 嘿嘿01 这个元素
Boolean flag = arrList.contains("嘿嘿01");
// 输出的是true
System.out.println("flag：" + flag);
</code></pre>
<h4 id="某个元素在集合中首次出现的位置-indexof">某个元素在集合中首次出现的位置 indexOf</h4>
<pre><code>indexOf: 元素在集合中首次出现位置(索引),如果元素不存在返回的值是 -1 
</code></pre>
<pre><code>ArrayList arrList = new ArrayList();
arrList.add("嘿嘿01");
arrList.add("哈哈02");
// 寻找 某个元素是在集合中的哪一个位置
int index = arrList.indexOf("哈哈02");
// 输出的是 1 
System.out.println(index);

int notIndex = arrList.indexOf("哈哈");
// 输出的是 -1
System.out.println(notIndex);
</code></pre>
<h4 id="某个元素在集合中最后一次出现的位置-lastindexof">某个元素在集合中最后一次出现的位置 lastIndexOf</h4>
<pre><code>它用于查找指定元素在列表中最后一次出现的位置(索引)
与indexOf方法类似,
如果找到了该元素,lastIndexOf 方法会返回其索引(从0开始),如果未找到，则返回-1。
</code></pre>
<h4 id="toarray-将集合转化为数组">toArray 将集合转化为数组</h4>
<pre><code>ArrayList arrList = new ArrayList();
arrList.add("嘿嘿01");
arrList.add("哈哈02");
Object[] arr = arrList.toArray();
System.out.println(arr);
</code></pre>
<h4 id="克隆一个集合创建集合对象有3种形式">克隆一个集合[创建集合对象有3种形式]</h4>
<pre><code>public class goodStudy{
	public static void main(String[] args) {
	 ArrayList arrList = new ArrayList();
	 arrList.add("嘿嘿01");
	 arrList.add("哈哈02");
	 
	 // 克隆一项
	 ArrayList otherList = new ArrayList(arrList);
	 System.out.println(otherList);
	 
	 otherList.set(0, "第一哈哈哈");
	 // 输出的是： otherList[第一哈哈哈, 哈哈02]
	 System.out.println("otherList" +otherList);
    // 输出的是： arrList[嘿嘿01, 哈哈02]
	 System.out.println("arrList"+ arrList);
	}
}
</code></pre>

</div>
<div id="MySignature" role="contentinfo">
    <div style="width:818px;background:#f5f5f5; padding: 10px 10px 10px 10px; border: 1px dashed rgb(224, 224, 224); font-family: 微软雅黑; font-size: 13px;">
		    <div style="padding:10px">
		        作者：<a href="https://www.cnblogs.com/ishoulgodo/" target="_blank">流年少年</a> <br>
		        出处：<a href="https://www.cnblogs.com/ishoulgodo/">https://www.cnblogs.com/ishoulgodo/</a> <br>
                        <p> 想问问题，打赏了卑微的博主，求求你备注一下的扣扣或者微信；这样我好联系你；(っ•̀ω•́)っ✎⁾⁾！</p>
		        <p>如果觉得这篇文章对你有小小的帮助的话，记得在右下角点个“推荐”哦，或者关注博主，在此感谢！</p>
		        <p> 万水千山总是情，打赏5毛买辣条行不行，所以如果你心情还比较高兴，也是可以扫码打赏博主(っ•̀ω•́)っ✎⁾⁾！</p>
                        <p> 想问问题，打赏了卑微的博主，求求你备注一下的扣扣或者微信；这样我好联系你；(っ•̀ω•́)っ✎⁾⁾！</p>
				<div style="display: flex;">
					<div style="margin-right: 100px;text-align: center;">
						<img src="//images.cnblogs.com/cnblogs_com/IwishIcould/1900124/t_201214043958支付宝收款码.jpg?a=1607924145179">
						<div>
							支付宝
						</div>
					</div>
					<div style="text-align: center;">
						<img src="//images.cnblogs.com/cnblogs_com/IwishIcould/1900124/t_20121604194271E6E296CCB71A007F4E22073D5EB64A.jpg">
						<div>微信</div>
					</div>
				</div>
		        本文版权归作者所有，欢迎转载，未经作者同意须保留此段声明，在文章页面明显位置给出原文连接 <br>
		        如果文中有什么错误，欢迎指出。以免更多的人被误导。 <br>
		    </div>
		</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="1.2225676211273149" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-26 16:54">2025-01-26 16:54</span>&nbsp;
<a href="https://www.cnblogs.com/ishoulgodo">何人陪我共长生</a>&nbsp;
阅读(<span id="post_view_count">58</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18691969" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18691969);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18691969', targetLink: 'https://www.cnblogs.com/ishoulgodo/p/18691969', title: 'java中的集合ArrayList' })">举报</a>
</div>
        