
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/vipsoft/p/18660378" title="发布于 2025-01-08 19:07">
    <span role="heading" aria-level="2">Java Bluetooth 蓝牙通讯 BlueCove 扫描附近的蓝牙设备</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p></p><div class="toc"><div class="toc-container-header">目录</div><ul><li><a href="#bluecove项目概述" rel="noopener nofollow">BlueCove项目概述</a><ul><li><a href="#bluecove-api架构" rel="noopener nofollow">BlueCove API架构</a><ul><li><a href="#api的设计原则和实现方式" rel="noopener nofollow">API的设计原则和实现方式</a></li><li><a href="#关键类和方法的功能描述" rel="noopener nofollow">关键类和方法的功能描述</a></li></ul></li></ul></li><li><a href="#测试代码" rel="noopener nofollow">测试代码</a><ul><li><a href="#获取本机pc蓝牙" rel="noopener nofollow">获取本机(PC)蓝牙</a></li><li><a href="#扫描蓝牙" rel="noopener nofollow">扫描蓝牙</a></li></ul></li></ul></div><p></p>
<h2 id="bluecove项目概述">BlueCove项目概述</h2>
<p>BlueCove是一个开源的蓝牙协议栈实现，旨在为Java开发者提供一个全面的、易于使用的API，从而在应用程序中实现蓝牙功能。该项目支持多种操作系统，包括Windows、Linux和Mac OS X，并且能够与多种蓝牙硬件设备兼容。<br>
BlueCove项目对这些协议的广泛支持，使得开发人员能够为不同类型的蓝牙设备开发应用程序，而不必担心兼容性问题。</p>
<h3 id="bluecove-api架构">BlueCove API架构</h3>
<h4 id="api的设计原则和实现方式">API的设计原则和实现方式</h4>
<p>BlueCove API是一套Java语言的开源蓝牙API实现，它为Java应用提供了访问蓝牙设备和进行蓝牙通信的能力。API的设计遵循了Java的设备无关性原则，提供了一套统一的编程接口，使得开发者可以在不关心具体蓝牙硬件实现的情况下，编写跨平台的蓝牙应用。</p>
<p>API的实现主要依赖于底层的蓝牙硬件抽象层（HAL）来与蓝牙硬件进行交互。BlueCove使用Java本地接口（JNI）技术与底层操作系统以及蓝牙硬件进行通信。通过这种方式，BlueCove能够运行在支持JNI的多种平台上。</p>
<h4 id="关键类和方法的功能描述">关键类和方法的功能描述</h4>
<p>在BlueCove API中，有一些关键的类和方法需要特别注意。例如， BluetoothAdapter 类提供了访问蓝牙适配器（即蓝牙硬件）的方法。通过这个类，可以进行设备发现、获取已配对的设备列表、管理设备配对等操作。</p>
<p>另一个重要的类是 BluetoothDevice ，它代表一个远程蓝牙设备。这个类允许应用程序查询设备信息、发起连接、以及与远程设备进行数据通信。</p>
<p>此外， BluetoothSocket 类则是用于建立数据连接的。它使得通过蓝牙网络套接字进行数据传输成为可能。开发者可以通过这个类的实例来进行数据发送和接收，实现应用程序之间的数据交换。</p>
<h2 id="测试代码">测试代码</h2>
<h3 id="获取本机pc蓝牙">获取本机(PC)蓝牙</h3>
<p>添加引用</p>
<pre><code class="language-java">&lt;dependency&gt;
    &lt;groupId&gt;io.ultreia&lt;/groupId&gt;
    &lt;artifactId&gt;bluecove&lt;/artifactId&gt;
    &lt;version&gt;2.1.1&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>
<p>打印PC蓝牙名称</p>
<pre><code class="language-java">import javax.bluetooth.*;
 
public class BlueCoveTest {
    public static void main(String[] args) {
        LocalDevice localDevice = LocalDevice.getLocalDevice();
        System.out.println("Local Device Name: " + localDevice.getFriendlyName());
    }
}
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/80824/202501/80824-20250108142950354-2096489286.png" alt="image" loading="lazy"></p>
<h3 id="扫描蓝牙">扫描蓝牙</h3>
<ul>
<li>DiscoveryAgent.GIAC：一般的不受限的发现模式；</li>
<li>DiscoveryAgent.LIAC：受限的发现模式，具体情况取决于API的具体实现；</li>
<li>DiscoveryAgent.NOT_DISCOVERABLE：不可被发现。</li>
</ul>
<pre><code class="language-java">package com.vipsoft.boot;

import javax.bluetooth.*;
import java.io.IOException;

public class BleDiscoverDevices {

    final static Object inquiryCompletedEvent = new Object();

    public static void main(String[] args) {
        try {
            synchronized (inquiryCompletedEvent) {
                // 获取本地蓝牙设备
                LocalDevice localDevice = LocalDevice.getLocalDevice();
                // 获取蓝牙设备管理器
                DiscoveryAgent agent = localDevice.getDiscoveryAgent();
                // 设置设备发现监听器
                DeviceDiscoveryListener listener = new DeviceDiscoveryListener();
                // 开始发现附近的蓝牙设备
                boolean started = agent.startInquiry(DiscoveryAgent.GIAC, listener);
                if (started) {
                    System.out.println("开始搜索...");
                    inquiryCompletedEvent.wait();
                    agent.cancelInquiry(listener);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static class DeviceDiscoveryListener implements DiscoveryListener {
        @Override
        public void deviceDiscovered(RemoteDevice remoteDevice, DeviceClass deviceClass) {
            try {
                String deviceName = remoteDevice.getFriendlyName(false);
                String address = remoteDevice.getBluetoothAddress();
                System.out.println("发现蓝牙设备 Address: " + address + " Device: " + deviceName);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

        @Override
        public void servicesDiscovered(int i, ServiceRecord[] serviceRecords) {
            for (ServiceRecord record : serviceRecords) {
                System.out.println("Service discovered: " + record.getConnectionURL(ServiceRecord.NOAUTHENTICATE_NOENCRYPT, false));
            }
        }

        @Override
        public void serviceSearchCompleted(int i, int i1) {
            System.out.println("Service search completed");
        }

        @Override
        public void inquiryCompleted(int i) {
            System.out.println("搜索完成");
            synchronized (inquiryCompletedEvent) {
                inquiryCompletedEvent.notifyAll();
            }
        }
    }
}

</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/80824/202501/80824-20250108173019096-1232140838.png" alt="image" loading="lazy"></p>
<p>源码：<a href="https://gitee.com/VipSoft/VipBoot/tree/develop/vipsoft-bluetooth" target="_blank" rel="noopener nofollow">https://gitee.com/VipSoft/VipBoot/tree/develop/vipsoft-bluetooth</a></p>

</div>
<div id="MySignature" role="contentinfo">
    <p>本文来自博客园，作者：<a href="https://www.cnblogs.com/vipsoft/" target="_blank">VipSoft</a>  转载请注明原文链接：<a href="https://www.cnblogs.com/vipsoft/p/18660378" target="_blank">https://www.cnblogs.com/vipsoft/p/18660378</a></p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.21604155497222222" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-08 19:07">2025-01-08 19:07</span>&nbsp;
<a href="https://www.cnblogs.com/vipsoft">VipSoft</a>&nbsp;
阅读(<span id="post_view_count">8</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18660378" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18660378);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18660378', targetLink: 'https://www.cnblogs.com/vipsoft/p/18660378', title: 'Java Bluetooth 蓝牙通讯 BlueCove 扫描附近的蓝牙设备' })">举报</a>
</div>
        