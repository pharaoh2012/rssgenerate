
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/dabig/p/18834544" title="发布于 2025-04-18 20:34">
    <span role="heading" aria-level="2">Python requests代理(Proxy)使用教程</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        <img src="https://img2024.cnblogs.com/blog/3130222/202504/3130222-20250418203357959-475738911.png" alt="Python requests代理(Proxy)使用教程" class="desc_img">
        在 Python 的 requests 库中，使用代理服务器可以让你通过不同的网络路由发送 HTTP 请求。代理服务器可以帮助隐藏真实 IP 地址、绕过地理限制或进行负载均衡等操作。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="python-requests代理proxy使用教程">Python requests代理(Proxy)使用教程</h1>
<p>在 Python 的 requests 库中，使用代理服务器可以让你通过不同的网络路由发送 HTTP 请求。代理服务器可以帮助隐藏真实 IP 地址、绕过地理限制或进行负载均衡等操作。</p>
<blockquote>
<p>什么是代理？<br>
代理服务器是一种中间服务器，它位于客户端（你的代码）和目标服务器（你要请求的服务器）之间。使用代理服务器，你的请求会首先发送到代理，然后代理再将请求转发给目标服务器，目标服务器的响应也会通过代理返回给你。</p>
<p>代理的使用在数据抓取、访问受限网站、提高隐私保护等场景中非常有用。</p>
</blockquote>
<h2 id="在-requests-中使用代理"><strong>在 requests 中使用代理</strong></h2>
<p>requests 支持HTTP、HTTPS、SOCKS等代理请求；</p>
<h3 id="使用httphttps代理"><strong>使用HTTP、HTTPS代理</strong></h3>
<p>如果要使用 HTTP 代理或 HTTPS 代理，你可以在任意请求方法中传入<code>proxies</code>参数来配置单个请求：</p>
<pre><code class="language-python">import requests

proxies = {
  "http": "http://proxy1:8080",
  "https": "https://proxy2.com:8080",
}

#带身份验证的格式
proxies2 = {
    'http': 'http://user:password@proxy.example.com:8080',
    'https': 'https://user:password@proxy.example.com:8080',
}

response = requests.get("http://example.org", proxies=proxies)
</code></pre>
<p>在这个例子中，http 请求将通过<code>http://proxy1:8080</code>发送，https 请求将通过<code>https://proxy2.com:8080</code>发送；</p>
<h3 id="通过环境变量设置代理"><strong>通过环境变量设置代理</strong></h3>
<p>除了在代码中明确传递<code>proxies</code>参数，还可以通过环境变量配置代理，requests 库会自动读取这些环境变量并应用代理设置。</p>
<p><strong>Windows 环境变量设置命令</strong></p>
<pre><code class="language-shell">set HTTP_PROXY=http://proxy.example.com:8080
set HTTPS_PROXY=https://proxy.example.com:8080
</code></pre>
<p><strong>Linux、macOS 环境变量设置命令</strong></p>
<pre><code class="language-shell">export http_proxy=http://proxy.example.com:8080
export https_proxy=https://proxy.example.com:8080
</code></pre>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.001538410519675926" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-18 20:35">2025-04-18 20:34</span>&nbsp;
<a href="https://www.cnblogs.com/dabig">JiGuang2048</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18834544);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18834544', targetLink: 'https://www.cnblogs.com/dabig/p/18834544', title: 'Python requests代理(Proxy)使用教程' })">举报</a>
</div>
        