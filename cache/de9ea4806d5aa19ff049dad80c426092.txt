
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/deali/p/19060710" title="发布于 2025-08-27 12:01">
    <span role="heading" aria-level="2">主流 nodejs 包管理器 pnpm vs bun vs npm vs yarn 简单横评</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="前端">前端</h2>
<p>我最近一直在写前端项目，使用的环境也从原本的 Node.js 切换到 bun，感受到了飞一般的体验。</p>
<p>今天要维护一下 <a href="https://github.com/Deali-Axy/StarBlog-Admin" target="_blank" rel="noopener nofollow">StarBlog Vue Admin</a> 项目时，又得安装一次依赖，于是突发奇想，想要看看不同包管理器的空间占用如何，所以有了这篇文章的测试。</p>
<p>本文着重测试 <code>node_modules</code> 的空间占用情况</p>
<h2 id="测试环境">测试环境</h2>
<ul>
<li>
<p>操作系统: Windows10 22H2 10.0.19045</p>
</li>
<li>
<p>测试项目: <a href="https://github.com/Deali-Axy/StarBlog-Admin" target="_blank" rel="noopener nofollow">StarBlog Vue Admin</a></p>
</li>
<li>
<p>Node.js环境: v20.18.1</p>
</li>
</ul>
<p>这是一个 Vue2 的管理后台项目，可以很好代表一些旧前端项目。</p>
<p>使用的分析空间命令是：</p>
<pre><code class="language-powershell">"{0:N2} MB" -f ((Get-ChildItem -Recurse -Force .\node_modules | Measure-Object -Property Length -Sum).Sum / 1MB)
</code></pre>
<h2 id="测试结果">测试结果</h2>
<table>
<thead>
<tr>
<th>包管理器</th>
<th><code>node_modules</code> 占用空间</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>pnpm</strong></td>
<td>🏆 205.36 MB （最省）</td>
</tr>
<tr>
<td><strong>npm</strong></td>
<td>209.02 MB</td>
</tr>
<tr>
<td><strong>yarn</strong></td>
<td>213.42 MB</td>
</tr>
<tr>
<td><strong>bun</strong></td>
<td>234.13 MB （最占）</td>
</tr>
</tbody>
</table>
<p>测试下来，令我比较惊讶的是，曾几何时还是人人嫌弃的 npm 现在已经这么好了，无论是速度还是空间占用，都有不错的竞争力👍，看来我真的太久没用 npm 了😂（大人，时代变了😄</p>
<blockquote>
<p>PS: 对了，这里面 <code>pnpm dev</code> 无法正常启动项目，有一堆报错，推测是版本不兼容，降级 node 版本或许能解决了，但我懒得折腾了。🥱</p>
</blockquote>
<h3 id="小结">小结</h3>
<ul>
<li><strong>pnpm</strong> 的“硬链接 + 全局 store”机制果然在空间占用上最强，符合预期。</li>
<li><strong>npm / yarn</strong> 在单项目下差异不大，空间表现接近。</li>
<li><strong>bun</strong> 虽然在速度上通常领先，但在这个测试里，反而是最占磁盘的 —— 这也说明了它目前在“去重/节省空间”上的优化还不如 pnpm，甚至不如 npm。</li>
</ul>
<h2 id="分析">分析</h2>
<h3 id="项目依赖结构的影响">项目依赖结构的影响</h3>
<ul>
<li>Vue2 项目依赖相对固定，包体量不会像 Vue3 + Vite 那种动辄几百上千小包的组合。</li>
<li>在这种情况下，<strong>npm 的冗余问题不明显</strong>，所以它和 yarn / pnpm / bun 在空间占用上差距很小（200 MB 左右，都在同一量级）。</li>
<li>pnpm 的硬链接优化，在“依赖重复多的场景”才能拉开更大差距（比如 monorepo、多项目复用依赖时）。单一项目时，优势就被“压缩”了。</li>
</ul>
<h3 id="nodejs-20-的改进">Node.js 20 的改进</h3>
<ul>
<li>从 Node.js 16 开始，npm 默认版本已经是 <strong>npm 8+ / 9+</strong>，它的性能和磁盘效率都提升了不少。</li>
<li>以前大家吐槽 npm 慢、空间大，是 <strong>npm 6/7 时代</strong>的体验。现在 npm 在单项目场景下其实完全不“拉胯”。</li>
<li>这就是为什么我会觉得：“npm 并没有传说中那么慢，占用空间也不算大”。</li>
</ul>
<h3 id="安装速度-vs-空间占用">安装速度 vs 空间占用</h3>
<ul>
<li><strong>bun</strong>：安装速度快是它的绝对优势，但空间优化机制不如 pnpm，所以磁盘占用最高。</li>
<li><strong>pnpm</strong>：安装速度快，空间省，但在“单项目”里领先不大，要多个项目共享依赖时才能完全发挥。</li>
<li><strong>npm</strong>：在 Node.js 20 的优化下，速度已经不算慢，空间占用也优化过，和 yarn 处于一个水平。</li>
<li><strong>yarn (classic)</strong>：相比 npm 没太大优势了，现在更多人转向 yarn berry（v2+），但那一套对 Vue2 老项目可能兼容性堪忧。</li>
</ul>
<h2 id="结论">结论</h2>
<ul>
<li><strong>单项目场景</strong>：npm/yarn/pnpm/bun 差异其实很小，选谁都够用。</li>
<li><strong>多项目 / monorepo 场景</strong>：pnpm 的空间优势会爆炸性放大，npm/yarn/bun 会逐渐膨胀。</li>
<li><strong>极限速度需求</strong>：bun 是最快的，但代价是占用更大。</li>
</ul>

</div>
<div id="MySignature" role="contentinfo">
    微信公众号：「程序设计实验室」
专注于互联网热门新技术探索与团队敏捷开发实践，包括架构设计、机器学习与数据分析算法、移动端开发、Linux、Web前后端开发等，欢迎一起探讨技术，分享学习实践经验。
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-08-27 12:01">2025-08-27 12:01</span>&nbsp;
<a href="https://www.cnblogs.com/deali">程序设计实验室</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19060710);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19060710', targetLink: 'https://www.cnblogs.com/deali/p/19060710', title: '主流 nodejs 包管理器 pnpm vs bun vs npm vs yarn 简单横评' })">举报</a>
</div>
        