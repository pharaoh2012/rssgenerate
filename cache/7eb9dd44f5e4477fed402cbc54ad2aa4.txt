
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/MrVolleyball/p/18658026" title="发布于 2025-01-08 10:11">
    <span role="heading" aria-level="2">循序渐进--从零开始建设k8s监控之alertmanager+发送飞书（三）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="前言">前言</h2>
<p>书接上文，prometheus已经安装好了，监控数据是有了，我们需要对其进行告警，并且可以发送到对应的平台，比如飞书、钉钉等，这里选择用飞书来测试</p>
<h2 id="环境准备">环境准备</h2>
<table>
<thead>
<tr>
<th>组件</th>
<th>版本</th>
</tr>
</thead>
<tbody>
<tr>
<td>操作系统</td>
<td>Ubuntu 22.04.4 LTS</td>
</tr>
<tr>
<td>docker</td>
<td>24.0.7</td>
</tr>
<tr>
<td>alertmanager</td>
<td>v0.27.0</td>
</tr>
</tbody>
</table>
<h2 id="下载编排文件">下载编排文件</h2>
<p>本文所有的编排文件，<a href="https://github.com/wilsonchai8/installations/tree/main/prometheus" target="_blank" rel="noopener nofollow">都在这里</a></p>
<pre><code>▶ cd /tmp &amp;&amp; git clone git@github.com:wilsonchai8/installations.git &amp;&amp; cd installations/prometheus
</code></pre>
<h2 id="安装alertmanager">安装alertmanager</h2>
<p>alertmanager主要用作对prometheus发来的告警进行响应，包括发送、抑制等</p>
<pre><code>▶ cd installations/prometheus
▶ kubectl apply -f alertmanager.yaml
</code></pre>
<p>检查是否启动</p>
<pre><code>▶ kubectl -n prometheus get pod -owide | grep alertmanager
alertmanager-5b6d594f6c-2swpw        1/1     Running   0          69s   10.244.0.17    minikube       &lt;none&gt;           &lt;none&gt;

</code></pre>
<p>访问页面</p>
<pre><code>▶ kubectl get node -owide
NAME       STATUS   ROLES           AGE    VERSION   INTERNAL-IP    EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION     CONTAINER-RUNTIME
minikube   Ready    control-plane   6d2h   v1.26.3   192.168.49.2   &lt;none&gt;        Ubuntu 20.04.5 LTS   6.8.0-45-generic   docker://23.0.2

▶ kubectl -n prometheus get svc | grep alertmanager
alertmanager         NodePort   10.110.182.95    &lt;none&gt;        9093:30297/TCP   70s
</code></pre>
<p><a href="http://192.168.49.2:30297" target="_blank" rel="noopener nofollow">http://192.168.49.2:30297</a></p>
<p><img src="https://img2024.cnblogs.com/blog/1416773/202501/1416773-20250107172711223-1772575954.png" alt="" loading="lazy"></p>
<h2 id="测试alertmanager">测试alertmanager</h2>
<h3 id="1-定义一个测试的deployment">1. 定义一个测试的deployment</h3>
<pre><code>▶ kubectl create deployment busybox-test --image=registry.cn-beijing.aliyuncs.com/wilsonchai/busybox:latest -- sleep 33333
deployment.apps/busybox-test created

▶ kubectl get pod
NAME                           READY   STATUS    RESTARTS   AGE
busybox-test-fcb69d5f9-tn8vx   1/1     Running   0          6s
</code></pre>
<h3 id="2-定义告警规则">2. 定义告警规则</h3>
<p>我们定义当deployment的副本是为0就告警，修改prometheus configmap</p>
<p>在最底部追加，相当于新增一个配置文件，里面专门定义告警规则</p>
<pre><code>apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-cm
  labels:
    name: prometheus-cm
  namespace: prometheus
data:
  prometheus.yml: |-
    global:
      scrape_interval: 5s
      evaluation_interval: 5s

    alerting:
      alertmanagers:
        - static_configs:
            - targets: ['alertmanager:9093']

    rule_files:
      - /etc/prometheus/*.rules

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
        - targets: ['localhost:9090']

      - job_name: "prometheus-kube-state-metrics"
        static_configs:
          - targets: ["kube-state-metrics.kube-system:8080"]

      - job_name: 'kubernetes-nodes'
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
        - role: node
        relabel_configs:
        - source_labels: [__address__]
          regex: '(.*):10250'
          replacement: '${1}:9100'
          target_label: __address__
          action: replace
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)

# 从这里是新加的
  prometheus.rules: |-
    groups:
    - name: test alert
      rules:
      - alert: deployment replicas is 0
        expr: kube_deployment_spec_replicas == 0
        for: 30s
        labels:
          severity: slack
        annotations:
          summary: deployment replicas is 0
</code></pre>
<p>然后重启prometheus，查看告警是否生效</p>
<p><img src="https://img2024.cnblogs.com/blog/1416773/202501/1416773-20250107172725871-588345538.png" alt="" loading="lazy"></p>
<h3 id="3-触发告警">3. 触发告警</h3>
<pre><code>▶ kubectl scale --replicas=0 deploy busybox-test
</code></pre>
<p>等待些许片刻，查看alertmanager页面</p>
<p><img src="https://img2024.cnblogs.com/blog/1416773/202501/1416773-20250107172733038-1295508757.png" alt="" loading="lazy"></p>
<p>已经有告警触发了</p>
<h2 id="发送到飞书">发送到飞书</h2>
<p>我们已经有一个告警了，但是目前没法通知出来，需要给他告警到飞书去</p>
<h3 id="1-创建飞书的告警群组并创建机器人拿到机器人的webhook">1. 创建飞书的告警群组，并创建机器人拿到机器人的webhook</h3>
<p>webhook:</p>
<pre><code>https://open.feishu.cn/open-apis/bot/v2/hook/*******************
</code></pre>
<h3 id="2-创建发送消息的服务">2. 创建发送消息的服务</h3>
<p>这里我们选用python tornado web服务来接收从alertmanager发送的告警信息</p>
<pre><code>from tornado.ioloop import IOLoop
import tornado.httpserver as httpserver
import tornado.web
import requests
import json

WEBHOOK_URL = 'https://open.feishu.cn/open-apis/bot/v2/hook/********'

def send_to_feishu(msg_raw):
    headers = { 'Content-Type': 'application/json' }
    for alert in msg_raw['alerts']:
        msg = '## 告警发生 ##\n'
        msg += '\n'
        msg += '告警：{}\n'.format(alert['labels']['alertname'])
        msg += '时间：{}\n'.format(alert['startsAt'])
        msg += '级别：{}\n'.format(alert['labels']['severity'])
        msg += '详情：\n'
        msg += '    deploy：{}\n'.format(alert['labels']['deployment'])
        msg += '    namespace：{}\n'.format(alert['labels']['namespace'])
        msg += '    content：{}\n'.format(alert['annotations']['summary'])
        data = {
            'msg_type': 'text',
            'content': {
                'text': msg
            }
        }
        res = requests.Session().post(url=WEBHOOK_URL, headers=headers, json=data)
        print(res.json())

class SendmsgFlow(tornado.web.RequestHandler):
    def post(self, *args, **kwargs):
        send_to_feishu(json.loads(self.request.body.decode('utf-8')))

def applications():
    urls = []
    urls.append([r'/sendmsg', SendmsgFlow])
    return tornado.web.Application(urls)

def main():
    app = applications()
    server = httpserver.HTTPServer(app)
    server.bind(10000, '0.0.0.0')
    server.start(1)
    IOLoop.current().start()

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt as e:
        IOLoop.current().stop()
    finally:
        IOLoop.current().close()

</code></pre>
<p>本脚本已上传至仓库</p>
<h3 id="3-修改alertmanager-configmap">3. 修改alertmanager configmap</h3>
<p>修改alertmanager的configmap，把webhook_configs改为sendmsg的api地址</p>
<pre><code>apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: prometheus
data:
  alertmanager.yml: |-
    global:
      resolve_timeout: 5m
    route:
      group_by: ['alertname', 'cluster']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 5m
      receiver: default
    receivers:
    - name: 'default'
      webhook_configs:
        - url: 'http://127.0.0.1:10000/sendmsg'
</code></pre>
<p>重启alertmanager</p>
<h3 id="4-检查飞书">4. 检查飞书</h3>
<p><img src="https://img2024.cnblogs.com/blog/1416773/202501/1416773-20250107172745886-1159010159.png" alt="" loading="lazy"></p>
<p>至此，一个简单告警流程制作完成</p>
<h2 id="联系我">联系我</h2>
<ul>
<li>联系我，做深入的交流</li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/1416773/202411/1416773-20241121135740959-1907948957.png#" alt="" width="500" height="200" loading="lazy"></p>
<hr>
<p>至此，本文结束<br>
在下才疏学浅，有撒汤漏水的，请各位不吝赐教...</p>

</div>
<div id="MySignature" role="contentinfo">
    <p>本文来自博客园，作者：<a href="https://www.cnblogs.com/MrVolleyball/" target="_blank">it排球君</a>，转载请注明原文链接：<a href="https://www.cnblogs.com/MrVolleyball/p/18658026" target="_blank">https://www.cnblogs.com/MrVolleyball/p/18658026</a></p>
<div>本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须在文章页面给出原文连接，否则保留追究法律责任的权利。 </div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.17278900083449075" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-08 10:12">2025-01-08 10:11</span>&nbsp;
<a href="https://www.cnblogs.com/MrVolleyball">it排球君</a>&nbsp;
阅读(<span id="post_view_count">21</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18658026" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18658026);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18658026', targetLink: 'https://www.cnblogs.com/MrVolleyball/p/18658026', title: '循序渐进--从零开始建设k8s监控之alertmanager+发送飞书（三）' })">举报</a>
</div>
        