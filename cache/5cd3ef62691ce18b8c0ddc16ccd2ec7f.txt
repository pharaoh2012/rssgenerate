
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/qiuzhendezhen/p/18798539" title="发布于 2025-03-28 17:55">
    <span role="heading" aria-level="2">DTMF从2833到inband的方案</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<div class="lake-content">
<h1 id="eMYA2"><span class="ne-text">概述</span></h1>
<p id="uf3505837" class="ne-p"><span class="ne-text">freeswitch是一款简单好用的VOIP开源软交换平台。</span></p>
<p id="u111dd4bc" class="ne-p"><span class="ne-text">之前的文章中介绍过通过dialplan拨号计划配置的方法，实现2833到inband的转换，但是实际生产环境中的场景会更复杂，无法预先在dialplan中设置好相关参数和函数。</span></p>
<h1 id="RZhOf"><span class="ne-text">环境</span></h1>
<p id="u772b5a9f" class="ne-p"><span class="ne-text">CentOS 7.9</span></p>
<p id="u711eec0c" class="ne-p"><span class="ne-text">freeswitch 1.10.7</span></p>
<h1 id="YiQHE"><span class="ne-text">问题描述</span></h1>
<p id="u6fb89368" class="ne-p"><span class="ne-text">在与运营商的对接过程中，因为对传统PSTN线路的兼容，被叫侧并不是所有的号码都支持2833，B路响应的SDP中会没有rfc2833的媒体描述，也可能183SDP中支持2833，但是200SDP中不支持2833。</span></p>
<p id="ud4457cf7" class="ne-p"><span class="ne-text">fs对于该场景并没有简单的配置方案，默认的处理逻辑会使用INFO消息来转发DTMF，但是运营商并不支持该方式。</span></p>
<p id="u79683d55" class="ne-p"><span class="ne-text">所以，我们需要一种简单的配置即可实现的rfc2833到inband的DTMF转发模式。</span></p>
<h1 id="CEDgv"><span class="ne-text">默认流程</span></h1>
<p id="ub2a725df" class="ne-p"><span class="ne-text">从SDP媒体协商的日志中看到，协商过程都是在“switch_core_media_negotiate_sdp”函数实现的。</span></p>
<p id="u792951ed" class="ne-p"><span class="ne-text">fs默认的dtmf匹配流程如下，略过了正常的rfc2833过程。</span></p>
<p id="ucb4a9ea0" class="ne-p"><span class="ne-text">1，检查B路响应SDP中的“telephone-event”并根据rate匹配一个最佳te。switch_core_media.c:5964。</span></p>
<p id="ub8b210e8" class="ne-p"><span class="ne-text">2，如果没有匹配到最佳te，检查vars.xml中的“rtp_liberal_dtmf”配置为true，则直接使用本地te作为最佳te。switch_core_media.c:6003。</span></p>
<p id="ue47e6320" class="ne-p"><span class="ne-text">3，如果仍然没有最佳te，检查通道变量“rtp_info_when_no_2833”不是false，则使用INFO模式转发DTMF，否则设置B路的“dtmf_type”为none。</span></p>
<h1 id="jlkSH"><span class="ne-text">修改方案</span></h1>
<p id="u9bea19dc" class="ne-p"><span class="ne-text">修改后的dtmf匹配流程。</span></p>
<p id="u9c547bcb" class="ne-p"><span class="ne-text">1，检查B路响应SDP中的“telephone-event”并根据rate匹配一个最佳te。switch_core_media.c:5964。</span></p>
<p id="u8674262d" class="ne-p"><span class="ne-text">2，如果没有匹配到最佳te，检查vars.xml中的“rtp_liberal_dtmf”配置为true，则直接使用本地te作为最佳te。switch_core_media.c:6003。</span></p>
<p id="ub9356da2" class="ne-p"><span class="ne-text">3，如果有最佳te，走第4步，没有最佳te，走第5步。</span></p>
<p id="u5fc5845d" class="ne-p"><span class="ne-text">4，在设置协商好的te payload之后，增加逻辑，如果在183的协商中已经设置了inband模式，后续的update协商中需要取消inband模式的函数设置。</span></p>
<p id="u5d73f8c2" class="ne-p"><span class="ne-text">5，检查通道变量“rtp_info_when_no_2833”不是false，则使用INFO模式转发DTMF。通道变量“rtp_info_when_no_2833”不是false，设置B路的“dtmf_type”为inband，设置B路通道变量“spandsp_dtmf_rx_filter_dialtone”为true，设置B路在answer后调用app函数“deduplicate_dtmf”和“spandsp_start_dtmf”，设置A路在answer后调用app函数“start_dtmf_generate”。</span></p>
<p id="u86b05206" class="ne-p">&nbsp;</p>
<p id="u44a7184c" class="ne-p"><span class="ne-text">代码如下，switch_core_media.c:6009行开始，红色部分为修改代码。</span></p>
<pre class="ne-codeblock language-cpp" data-language="cpp"><code>if (best_te) {
    smh-&gt;mparams-&gt;te_rate = best_te_rate;

    if (smh-&gt;mparams-&gt;dtmf_type == DTMF_AUTO || smh-&gt;mparams-&gt;dtmf_type == DTMF_2833 ||
        switch_channel_test_flag(session-&gt;channel, CF_LIBERAL_DTMF)) {
        if (sdp_type == SDP_TYPE_REQUEST) {
            smh-&gt;mparams-&gt;te = smh-&gt;mparams-&gt;recv_te = (switch_payload_t) best_te;
            switch_channel_set_variable(session-&gt;channel, "dtmf_type", "rfc2833");
            smh-&gt;mparams-&gt;dtmf_type = DTMF_2833;
        } else {
            smh-&gt;mparams-&gt;te = (switch_payload_t) best_te;
            switch_channel_set_variable(session-&gt;channel, "dtmf_type", "rfc2833");
            smh-&gt;mparams-&gt;dtmf_type = DTMF_2833;
        }
    }

    if (a_engine-&gt;rtp_session) {
        switch_rtp_set_telephony_event(a_engine-&gt;rtp_session, smh-&gt;mparams-&gt;te);
        switch_channel_set_variable_printf(session-&gt;channel, "rtp_2833_send_payload", "%d", smh-&gt;mparams-&gt;te);
        switch_rtp_set_telephony_recv_event(a_engine-&gt;rtp_session, smh-&gt;mparams-&gt;recv_te);
        switch_channel_set_variable_printf(session-&gt;channel, "rtp_2833_recv_payload", "%d", smh-&gt;mparams-&gt;recv_te);
    }

    switch_log_printf(SWITCH_CHANNEL_SESSION_LOG(session), SWITCH_LOG_DEBUG, "%s Set 2833 dtmf send payload to %u recv payload to %u\n",
        switch_channel_get_name(session-&gt;channel), smh-&gt;mparams-&gt;te, smh-&gt;mparams-&gt;recv_te);

    //add by zr 20241018, for 2833 to inband, update method
    //如果在183的协商中已经设置了inband模式，后续的update协商中需要取消inband模式的函数设置
    if (switch_true(switch_channel_get_variable(session-&gt;channel, "inband_flag"))) 
    {
        switch_log_printf(SWITCH_CHANNEL_SESSION_LOG(session), SWITCH_LOG_DEBUG, "reset inband_flag and channel variables.\n");
        //B路
        switch_channel_set_variable(session-&gt;channel, "inband_flag", NULL);
        switch_channel_set_variable(session-&gt;channel, "spandsp_dtmf_rx_filter_dialtone", NULL);
        switch_channel_set_variable(session-&gt;channel, "execute_on_answer_101", NULL);
        switch_channel_set_variable(session-&gt;channel, "execute_on_answer_102", NULL);

        //A路，2833 to inband
        if( switch_core_session_get_partner(session, &amp;other_session) == SWITCH_STATUS_SUCCESS )
        {
            switch_channel_set_variable(other_session-&gt;channel, "execute_on_answer_101", NULL);
            switch_core_session_rwunlock(other_session);
        }
    }
} else {
    /* by default, use SIP INFO if 2833 is not in the SDP */
    if (!switch_false(switch_channel_get_variable(channel, "rtp_info_when_no_2833"))) {
        switch_log_printf(SWITCH_CHANNEL_SESSION_LOG(session), SWITCH_LOG_DEBUG, "No 2833 in SDP.  Disable 2833 dtmf and switch to INFO\n");
        switch_channel_set_variable(session-&gt;channel, "dtmf_type", "info");
        smh-&gt;mparams-&gt;dtmf_type = DTMF_INFO;
        smh-&gt;mparams-&gt;recv_te = smh-&gt;mparams-&gt;te = 0;
    } else {
        // switch_channel_set_variable(session-&gt;channel, "dtmf_type", "none");
        // smh-&gt;mparams-&gt;dtmf_type = DTMF_NONE;
        // smh-&gt;mparams-&gt;recv_te = smh-&gt;mparams-&gt;te = 0;
        //add by zr 20241018, for 2833 to inband, update method
        switch_channel_set_variable(session-&gt;channel, "dtmf_type", "inband");
        smh-&gt;mparams-&gt;dtmf_type = DTMF_AUTO;
        smh-&gt;mparams-&gt;recv_te = smh-&gt;mparams-&gt;te = 0;
        switch_log_printf(SWITCH_CHANNEL_SESSION_LOG(session), SWITCH_LOG_DEBUG, "set inband_flag, No 2833 in SDP. Disable 2833 dtmf and switch to INBAND.\n");
        
        //TODO: add inband dtmf
        //A路，2833 to inband
        if( switch_core_session_get_partner(session, &amp;other_session) == SWITCH_STATUS_SUCCESS )
        {
            switch_channel_set_variable(other_session-&gt;channel, "execute_on_answer_101", "start_dtmf_generate");
            switch_core_session_rwunlock(other_session);
        }

        //B路，inband to 2833
        switch_channel_set_variable(session-&gt;channel, "inband_flag", "true");
        switch_channel_set_variable(session-&gt;channel, "spandsp_dtmf_rx_filter_dialtone", "true");
        switch_channel_set_variable(session-&gt;channel, "execute_on_answer_101", "deduplicate_dtmf");
        switch_channel_set_variable(session-&gt;channel, "execute_on_answer_102", "spandsp_start_dtmf");
    }
}</code></pre>
<p id="ub6d0e266" class="ne-p"><span class="ne-text">代码编译安装后，修改fs配置，B路使用inband模式。</span></p>
<p id="u6b81e568" class="ne-p"><span class="ne-text">vars.xml</span></p>
<p id="ua09ace8f" class="ne-p"><span class="ne-text">&lt;X-PRE-PROCESS cmd="set" data="rtp_liberal_dtmf=false"/&gt;</span></p>
<p id="uff738c9b" class="ne-p"><span class="ne-text">dialplan</span></p>
<p id="u8f1e6f19" class="ne-p"><span class="ne-text">&lt;action application="export" data="rtp_info_when_no_2833=false" /&gt;</span></p>
<p id="u3144c2c3" class="ne-p">&nbsp;</p>
<p id="u8f7b5f0f" class="ne-p"><span class="ne-text">上面的配置可以适配各种情况，当A路支持rfc2833，B路不支持2833的时候。</span></p>
<p id="u34ec6a9d" class="ne-p"><span class="ne-text">B路如果仍然希望使用2833则设置“rtp_liberal_dtmf”为true。</span></p>
<p id="u030a049f" class="ne-p"><span class="ne-text">B路如果希望使用INFO模式则设置“rtp_liberal_dtmf”为fase，“rtp_info_when_no_2833”为true。</span></p>
<p id="u9fb1d5a8" class="ne-p"><span class="ne-text">B路如果希望使用inband模式则设置“rtp_liberal_dtmf”为fase，“rtp_info_when_no_2833”为false。</span></p>
<h1 id="yPN7U"><span class="ne-text">测试</span></h1>
<p id="u93e20839" class="ne-p"><span class="ne-text">sip媒体的协商过程比较复杂，场景较多，下面列出了各种协商过程和预期结果。</span></p>
<p id="u0a22ec8d" class="ne-p"><span class="ne-text">1，200sdp带2833。2833双向正常</span></p>
<p id="ufec65806" class="ne-p"><span class="ne-text">2，200sdp不带2833。2833 to inband双向正常</span></p>
<p id="u3c45f832" class="ne-p"><span class="ne-text">3，183sdp带2833，200不带sdp。2833双向正常</span></p>
<p id="u65e8f77a" class="ne-p"><span class="ne-text">4，183sdp不带2833，200不带sdp。2833 to inband双向正常</span></p>
<p id="u4f59b0d9" class="ne-p"><span class="ne-text">5，183sdp不带2833，200sdp不带2833。2833 to inband双向正常</span></p>
<p id="ub6ab0b2c" class="ne-p"><span class="ne-text">6，183sdp带2833，200sdp不带2833。2833双向正常</span></p>
<p id="ubd5c8ba1" class="ne-p"><span class="ne-text">7，183sdp不带2833，200sdp带2833。2833 to inband双向正常</span></p>
<p id="u0b05ba45" class="ne-p"><span class="ne-text">8，183sdp带2833，200sdp带2833。2833双向正常</span></p>
<p id="u2c3fef4f" class="ne-p"><span class="ne-text">9，183sdp带2833，update sdp带2833，200sdp带2833。2833双向正常</span></p>
<p id="ua44559f4" class="ne-p"><span class="ne-text">10，183sdp不带2833，update sdp带2833，200sdp带2833。2833双向正常</span></p>
<p id="u128a0124" class="ne-p"><span class="ne-text">11，183sdp带2833，update sdp不带2833，200sdp带2833。2833 to inband双向正常</span></p>
<p id="ub742424c" class="ne-p"><span class="ne-text">12，183sdp带2833，update sdp带2833，200sdp不带2833。2833双向正常</span></p>
<p id="u9b73b068" class="ne-p"><span class="ne-text">13，183sdp不带2833，update sdp不带2833，200sdp带2833。2833 to inband双向正常</span></p>
<p id="uf1baa063" class="ne-p"><span class="ne-text">14，183sdp不带2833，update sdp带2833，200sdp不带2833。2833双向正常</span></p>
<p id="uee926386" class="ne-p"><span class="ne-text">15，183sdp带2833，update sdp不带2833，200sdp不带2833。2833 to inband双向正常</span></p>
<p id="ud81c6f2e" class="ne-p"><span class="ne-text">16，183sdp不带2833，update sdp不带2833，200sdp不带2833。2833 to inband双向正常</span></p>
<p id="u577f04b9" class="ne-p"><span class="ne-text">17，183sdp带2833，update sdp带2833，200不带sdp。2833双向正常</span></p>
<p id="ue7684818" class="ne-p"><span class="ne-text">18，183sdp不带2833，update sdp带2833，200不带sdp。2833双向正常</span></p>
<p id="uf8d50bcf" class="ne-p"><span class="ne-text">19，183sdp带2833，update sdp不带2833，200不带sdp。2833 to inband双向正常</span></p>
<p id="u58743428" class="ne-p"><span class="ne-text">20，183sdp不带2833，update sdp不带2833，200不带sdp。2833 to inband双向正常</span></p>
<p id="u5610e5eb" class="ne-p"><span class="ne-text">21，A路不带2833的以上20种场景。</span></p>
<p id="u87b42806" class="ne-p">&nbsp;</p>
<p id="uff8ee0ca" class="ne-p"><span class="ne-text">经过测试，上诉各场景的预期结果基本满足。从媒体抓包中，可以分别对A路的rtpevent和B路的inband媒体流一一对应起来。</span></p>
<p><img src="https://img2024.cnblogs.com/blog/2500940/202503/2500940-20250328175500767-121928299.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<h1 id="jMPFU"><span class="ne-text">总结</span></h1>
<p id="u2720134c" class="ne-p"><span class="ne-text">根据sip协议的规范，在媒体协商的过程中，如果已经有183SDP或update的SDP了，则200SDP会被忽略。</span></p>
<p id="uc15c95ca" class="ne-p"><span class="ne-text">上述流程中，对于AB路的其中一路固定为rfc2833的媒体协商是满足的，但是对于AB两路的DTMF模式都不固定的场景仍然有遗留问题，因为场景限制关系，暂不讨论。</span></p>
<p id="uc16ea16b" class="ne-p"><span class="ne-text">上述流程中，对于B路的inband使用了“spandsp_start_dtmf”转换为rfc2833，但是该函数有一定缺陷，转换后的A路媒体流中既有rfc2833，又有少量遗留的inband（擦除不完全，遗留40ms，仍然可以被检测出DTMF），该缺陷会在后续的文章中解决。</span></p>
<p id="u2bb1543b" class="ne-p">&nbsp;</p>
<p id="u79e0eda0" class="ne-p"><span class="ne-text">空空如常</span></p>
<p id="uc6e3328c" class="ne-p"><span class="ne-text">求真得真</span></p>
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.018281315087962963" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-28 17:55">2025-03-28 17:55</span>&nbsp;
<a href="https://www.cnblogs.com/qiuzhendezhen">求真得真</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18798539" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18798539);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18798539', targetLink: 'https://www.cnblogs.com/qiuzhendezhen/p/18798539', title: 'DTMF从2833到inband的方案' })">举报</a>
</div>
        