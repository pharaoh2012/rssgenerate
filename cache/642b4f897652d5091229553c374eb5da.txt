
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/mingupupu/p/18878401" title="发布于 2025-05-15 15:20">
    <span role="heading" aria-level="2">手把手教你使用C#创建一个WebSearchAgent</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="pocketflowsharp介绍">PocketFlowSharp介绍</h2>
<p>最近我对PocketFlow比较感兴趣，不仅是因为它是一个极简的LLM框架，更加让我觉得很不错的地方在于作者提供了很多方便学习的例子，就算没有LLM应用开发经验，也可以快速上手。</p>
<p>我比较喜欢C#，也想为C#生态做一点小小的贡献，因此创建了PocketFlowSharp项目。</p>
<p>PocketFlowSharp项目的愿景是助力.NET开发者开发LLM应用。</p>
<p>在我个人在学习实践的过程中，我发现很多项目不是那么“新手友好的”，这也没有办法，开发者更关注的是代码实现，文档写起来确实也很费劲。</p>
<p>在PocketFlowSharp项目中，我希望可以做到足够的新手友好，提供一些只要简单配置即可跑起来的示例，并且每个示例是独立的。</p>
<p>PocketFlowSharp项目地址：<a href="https://github.com/Ming-jiayou/PocketFlowSharp" target="_blank" rel="noopener nofollow">https://github.com/Ming-jiayou/PocketFlowSharp</a></p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202505/3288240-20250515152005419-163890931.png" alt="image-20250515135028833" loading="lazy"></p>
<h2 id="构建web_search_agent">构建Web_Search_Agent</h2>
<p>今天介绍的是Web_Search_Agent。</p>
<p>代码在：<a href="https://github.com/Ming-jiayou/PocketFlowSharp/tree/main/PocketFlowSharpSamples.Console/Web_Search_Agent" target="_blank" rel="noopener nofollow">https://github.com/Ming-jiayou/PocketFlowSharp/tree/main/PocketFlowSharpSamples.Console/Web_Search_Agent</a></p>
<h3 id="效果">效果</h3>
<p>先来看下效果：</p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202505/3288240-20250515152005568-2128457554.gif" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202505/3288240-20250515152005437-1442898624.png" alt="image-20250515135915401" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202505/3288240-20250515152005470-1662439820.png" alt="image-20250515135951723" loading="lazy"></p>
<h3 id="配置">配置</h3>
<p>运行这个示例非常简单，我提供了.env.example，如下所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202505/3288240-20250515152005390-193617643.png" alt="image-20250515140146258" loading="lazy"></p>
<p>用于配置LLM与BraveSearchApi，目前BraveSearchApi的免费额度是一个月2000次。</p>
<p>将其重命名为.env，注意需要将其设置为嵌入的资源，如下所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202505/3288240-20250515152005443-1024413374.png" alt="image-20250515140351370" loading="lazy"></p>
<h3 id="实现">实现</h3>
<p>在经过简单的配置之后，应该已经能够跑通了，为了让感兴趣的人更好的学习，我这里来介绍一下具体的实现。</p>
<p>Web_Search_Agent说是Agent其实我觉得更像是个工作流。PocketFlowSharp相当于一个简单的流程框架，将节点根据一个string类型的action进行连接。</p>
<p>Web_Search_Agent的整体流程如下所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202505/3288240-20250515152005475-516688050.png" alt="image-20250513150525245" loading="lazy"></p>
<p>首先创建一个Flow：</p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202505/3288240-20250515152005333-1371181505.png" alt="image-20250515141310082" loading="lazy"></p>
<p>将节点进行连接有两种方式。</p>
<p>一种是：</p>
<pre><code class="language-csharp">decide.Next(search, "search");
</code></pre>
<p>另一种是：</p>
<pre><code class="language-csharp">_ = search - "decide" - decide;
</code></pre>
<p>这是因为实现了运算符重载，具体可看此处：</p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202505/3288240-20250515152005340-117927195.png" alt="image-20250515141513915" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202505/3288240-20250515152005340-129366063.png" alt="image-20250515141545436" loading="lazy"></p>
<p>运行Flow的时候，节点之间的编排在这里：</p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202505/3288240-20250515152005336-951161613.png" alt="image-20250515141752718" loading="lazy"></p>
<p>每一个节点的运行流程在这里：</p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202505/3288240-20250515152005441-815092614.png" alt="image-20250515141848013" loading="lazy"></p>
<p>首先会运行决定节点的prep：</p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202505/3288240-20250515152005421-1291338694.png" alt="image-20250515142005794" loading="lazy"></p>
<p>获取上下文（当前还没有上下文）与问题。</p>
<p>决定节点的exec：</p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202505/3288240-20250515152005357-1736755393.png" alt="image-20250515142134681" loading="lazy"></p>
<p>获取prep的问题与上下文，判断是搜索还是回答。</p>
<p>决定节点的post：</p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202505/3288240-20250515152005393-95079968.png" alt="image-20250515142256186" loading="lazy"></p>
<p>根据LLM做出的决定选择行动。</p>
<p>这里LLM选择的是search。</p>
<p>根据返回的search寻找下一个节点也就是搜索节点，然后同样执行prep、exec与post。</p>
<p>Search节点的prep：</p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202505/3288240-20250515152005442-1534008265.png" alt="image-20250515142827316" loading="lazy"></p>
<p>从共享存储中获取要搜索的内容。</p>
<p>Search节点的exec：</p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202505/3288240-20250515152005466-324944376.png" alt="image-20250515142901028" loading="lazy"></p>
<p>返回网络搜索结果：</p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202505/3288240-20250515152005456-411960201.png" alt="image-20250515142957989" loading="lazy"></p>
<p>Search节点的post：</p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202505/3288240-20250515152005430-1956321651.png" alt="image-20250515143035822" loading="lazy"></p>
<p>将网络搜索的结果放到共享存储的context中。</p>
<p>然后返回"decide"又会回到决定节点。</p>
<p>决定节点这次选择的是answer：</p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202505/3288240-20250515152005433-553387681.png" alt="image-20250515143237521" loading="lazy"></p>
<p>就会转到回答节点。</p>
<p>回答节点的prep：</p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202505/3288240-20250515152005449-1850060507.png" alt="image-20250515143339979" loading="lazy"></p>
<p>从共享存储中获取问题与上下文。</p>
<p>回答节点的exec：</p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202505/3288240-20250515152005378-431388904.png" alt="image-20250515143411477" loading="lazy"></p>
<p>根据问题与上下文进行回答。</p>
<p>回答节点的post：</p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202505/3288240-20250515152005371-1837253600.png" alt="image-20250515143536617" loading="lazy"></p>
<p>将答案存入共享存储中。</p>
<p>最后从共享存储中提取出答案：</p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202505/3288240-20250515152005444-1443721518.png" alt="image-20250515143702208" loading="lazy"></p>
<p>以上就是整个流程，希望能够让感兴趣的朋友快速理解。</p>
<h2 id="最后">最后</h2>
<p>如果你还有什么不理解的地方，欢迎给我提issue。</p>
<p>如果对你有所帮助，点颗star⭐就是最大的鼓励。</p>
<p>欢迎感兴趣的朋友一起为爱发电。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.5393556502685185" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-15 15:20">2025-05-15 15:20</span>&nbsp;
<a href="https://www.cnblogs.com/mingupupu">mingupupup</a>&nbsp;
阅读(<span id="post_view_count">113</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18878401);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18878401', targetLink: 'https://www.cnblogs.com/mingupupu/p/18878401', title: '手把手教你使用C#创建一个WebSearchAgent' })">举报</a>
</div>
        