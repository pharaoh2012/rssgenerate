
    <a name="top"></a>
    <h2><a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/zwwhnly/p/18795523" title="发布于 2025-03-27 10:57">
    <span role="heading" aria-level="2">【踩坑系列】使用httpclient调用第三方接口返回javax.net.ssl.SSLHandshakeException异常</span>
    

</a>
</h2>
    <small>
<span id="post-date" data-last-update-days="0.47178499897800924" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-27 10:57">2025-03-27 10:57</span>&nbsp;
<a href="https://www.cnblogs.com/zwwhnly">申城异乡人</a>&nbsp;
阅读(<span id="post_view_count">108</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18795523" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18795523);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18795523', targetLink: 'https://www.cnblogs.com/zwwhnly/p/18795523', title: '【踩坑系列】使用httpclient调用第三方接口返回javax.net.ssl.SSLHandshakeException异常' })">举报</a>
</small>
    <div class="entry">
            <div id="cnblogs_post_description" style="display: none">
        
        使用httpclient调用第三方接口返回javax.net.ssl.SSLHandshakeException异常解决方案。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="1-踩坑经历">1. 踩坑经历</h2>
<p>最近做了个需求，需要调用第三方接口获取数据，在联调时一直失败，代码抛出<code>javax.net.ssl.SSLHandshakeException</code>异常，</p>
<p>具体错误信息如下所示：</p>
<blockquote>
<p>javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target</p>
</blockquote>
<h2 id="2原因分析">2.原因分析</h2>
<p>因为调用第三方接口的代码是复用项目中原有的工具类（基于httpclient封装），所以在确认完传参没问题后，第一时间排除了编码问题。</p>
<p>然后开始怀疑第三方提供的接口地址（因为竟然是IP+端口访问），在和第三方确认没有域名访问后，在浏览器里输入第三方的接口地址，发现证书有问题：</p>
<p><img src="https://images.zwwhnly.com/picture/2025/snipaste_20250326_094515.png" alt="" loading="lazy"></p>
<p>又使用Postman调用第三方接口，也是失败，提示自签名证书：</p>
<p><img src="https://images.zwwhnly.com/picture/2025/snipaste_20250325_175547.png" alt="" loading="lazy"></p>
<p>通过以上分析，可以发现出现该问题的根本原因是Java客户端不信任目标服务器的SSL证书，比如这个第三方使用的自签名证书。</p>
<h2 id="3解决方案">3.解决方案</h2>
<p>解决方案一般有2种，第1种方案是将服务器证书导入Java信任库，第2种方案是绕过SSL验证，这里采用第2种方案。</p>
<p>首先，新建HttpClient工具类：</p>
<pre><code class="language-java">import org.apache.http.conn.ssl.NoopHostnameVerifier;
import org.apache.http.conn.ssl.SSLConnectionSocketFactory;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;

import javax.net.ssl.SSLContext;
import javax.net.ssl.TrustManager;
import javax.net.ssl.X509TrustManager;
import java.security.KeyManagementException;
import java.security.NoSuchAlgorithmException;
import java.security.cert.X509Certificate;

public class HttpClientUtils {
    public static CloseableHttpClient createIgnoreCertClient() throws NoSuchAlgorithmException, KeyManagementException {
        SSLContext sslContext = SSLContext.getInstance("SSL");
        sslContext.init(null, new TrustManager[]{new X509TrustManager() {
            @Override
            public X509Certificate[] getAcceptedIssuers() {
                return null;
            }

            @Override
            public void checkClientTrusted(X509Certificate[] certs, String authType) {
            }

            @Override
            public void checkServerTrusted(X509Certificate[] certs, String authType) {
            }
        }}, new java.security.SecureRandom());
        SSLConnectionSocketFactory sslConnectionSocketFactory = new SSLConnectionSocketFactory(sslContext, NoopHostnameVerifier.INSTANCE);
        return HttpClients.custom().setSSLSocketFactory(sslConnectionSocketFactory).build();
    }
}
</code></pre>
<p>然后将原来声明httpClient的代码改为如下所示：</p>
<pre><code class="language-java">CloseableHttpClient httpClient = HttpClientUtils.createIgnoreCertClient();
</code></pre>
<p><strong>注意事项：</strong></p>
<p>确保项目中引入了httpclient依赖：</p>
<pre><code class="language-xml">&lt;dependency&gt;
    &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;
    &lt;artifactId&gt;httpclient&lt;/artifactId&gt;
    &lt;version&gt;4.5.13&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>

</div>
<div class="clear"></div>

        <div class="clear"></div>
        
</div>
    <ul class="postmetadata">
        <vc:categories-tags blog-app="zwwhnly" blog-id="121761" post-id="18795523"></vc:categories-tags>
    </ul>
