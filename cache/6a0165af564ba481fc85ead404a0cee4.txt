
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/gtyan/p/18637336" title="发布于 2024-12-28 11:45">
    <span role="heading" aria-level="2">UML之集合类型</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>无论何时当我们要使用一个多值对象时，我们必须要清楚两个问题，一是这些值的顺序重要吗？二是允许重复值的存在吗？在编程语言中还会有其他的明确的信息，在UML中，只需明确这两个问题的答案即可确定对应的集合类型。</p>
<h5 id="1set">1.Set</h5>
<p>Set是一个不允许存在重复值且未排序的集合。<br>
例如一个骑行活动中，有许多骑手参加。每个骑手在一个骑行活动中只可能出现一次，即任一个特定的骑手在骑行活动中不可能重复出现；每个参与骑行活动的骑手之间没有什么特定或要求的顺序，他们是平等的。所以参与一个骑行活动的骑手不重复且无序，这些骑手就构成了一个Set。在类图中可表示如下：<br>
<img src="https://img2024.cnblogs.com/blog/3579674/202412/3579674-20241228103651669-1861632109.png" alt="" loading="lazy"><br>
在UML中，Set并没有专有的表示符号，它通过在多重性后添加表示不允许重复只能唯一的约束“{unique}”来表达。“unique”用于对集合中元素的唯一性进行约束，“{unique}”还有等价形式“{isunique=true}”。</p>
<h5 id="2ordered-set">2.Ordered Set</h5>
<p>Ordered Set是一个不允许存在重复值且排序的集合。<br>
例如一本书的作者可能有多人，而每位作者对一本书的贡献是不同的，所以书籍在出版时，一方面不会将一个作者列出来两次，另一方面作者的排序是非常重要的，即一本书的作者是不重复且有序的集合，他们构成了一个Ordered Set。以下类图中的属性author表达了这种特性。<br>
<img src="https://img2024.cnblogs.com/blog/3579674/202412/3579674-20241228103705112-1050437878.png" alt="" loading="lazy"><br>
在UML中，Ordered Set没有专有的表示符号，它通过在多重性后添加表示不允许重复并排序的的约束“{ordered, unique}”来表达。其中“ordered”表示集合是有序的，“{order}”也有一个等价形式“{isorder=true}”。</p>
<h5 id="3bag">3.Bag</h5>
<p>Bag是一个允许存在重复值且未排序的集合。<br>
例如一个购物车中的商品，同一件商品可能会有多个，并且这些商品之间没有顺序可言，这些商品构成了一个Bag。<br>
在UML中，Bag也没有专有的表示符号，它通过在多重性后添加表示允许重复（不唯一）、无序（不排序）的约束“{nonUnique, unordered}”来表达。在一些UML工具中，通常只支持添加“{unique}”和“{order}”约束，而缺省情况下，即未添加相关约束则表示相反的情况。故对于一个多重性条目，如果它是Bag，则不添加“{unique}”和“{order}”约束即可。<br>
以下类图中属性items体现了它是一个Bag。<br>
<img src="https://img2024.cnblogs.com/blog/3579674/202412/3579674-20241228103723687-1502956317.png" alt="" loading="lazy"></p>
<h5 id="4sequence">4.Sequence</h5>
<p>Sequence是一个允许存在重复值且排序的集合，又称为Ordered Bag。<br>
例如一个骑行活动的线路规划由多个点构成，而线路并不排斥两次甚至多次经过同一地点，但在线路上这些地点是有严格顺序的，所以骑行线路上的这些点构成了一个Sequence。在以下类图中属性itinerary描述了骑行线路。<br>
<img src="https://img2024.cnblogs.com/blog/3579674/202412/3579674-20241228103741731-1375419466.png" alt="" loading="lazy"><br>
在UML中，Sequence也没有专有的表示符号，它通过在多重性后添加表示不唯一且有序的约束来表达，如前所述，不标明唯一约束则表示不唯一，故仅使用约束“{ordered}”即可。或者，也可直接使用约束“{sequence}”或“{seq}”，在某些情况下，“{stream}”表达了相似的含义。<br>
可以看到，在UML中集合类型的两个关键特性就是唯一性与有序性，这两个特性的不同组合对应了不同的集合类型。我们可以归纳如下表：<br>
<img src="https://img2024.cnblogs.com/blog/3579674/202412/3579674-20241228114448144-1543934307.png" alt="image" loading="lazy"></p>

</div>
<div id="MySignature" role="contentinfo">
    <p>更多文章访问<a href="https://gtyan.com" target="_blank">https://gtyan.com</a></p><p>
</p><p>本文来自博客园，作者：<a href="https://www.cnblogs.com/gtyan/" target="_blank">光头颜</a>，转载请注明原文链接：<a href="https://www.cnblogs.com/gtyan/p/18637336" target="_blank">https://www.cnblogs.com/gtyan/p/18637336</a></p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.5217483383935185" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2024-12-28 11:45">2024-12-28 11:45</span>&nbsp;
<a href="https://www.cnblogs.com/gtyan">光头颜</a>&nbsp;
阅读(<span id="post_view_count">69</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18637336" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18637336);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18637336', targetLink: 'https://www.cnblogs.com/gtyan/p/18637336', title: 'UML之集合类型' })">举报</a>
</div>
        