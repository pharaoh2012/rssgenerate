
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/henjay724/p/19002951" title="发布于 2025-07-24 15:42">
    <span role="heading" aria-level="2">痞子衡嵌入式：从i.MXRT600用户手册UM里一个关于FlexSPI LUT长度的勘误说起</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<hr>
<p>　　大家好，我是痞子衡，是正经搞技术的痞子。今天痞子衡给大家分享的是<strong>i.MXRT全系列FlexSPI外设的LUT长度</strong>。</p>
<p>　　事情起源于一个 RT600 客户, 他们读芯片用户手册发现 FlexSPI 外设 LUT 长度为 128 words（这是 RT500/RT10xx/RT1170 上的两倍），他们想尝试用起来，发现后 64 words 不起作用。说实话，痞子衡用了这么久的 FlexSPI 外设，还真没注意到这个细节，原因是 64 words 的 LUT 已经能够支持实现 16 条时序，这对于大部分应用场景都绰绰有余。于是痞子衡找了一块 RT600 开发板测试了一下，发现确实有问题，这应该是 RT600 用户手册上的美丽勘误。借此机会痞子衡就和大家梳理一下 i.MXRT 全系列 LUT 长度与设计：</p>
<blockquote>
<ul>
<li>Note: 该勘误存在于 RT600 UM Rev 1.8 以及 SDK v25.06 版本及之前</li>
</ul>
</blockquote>
<h3 id="一lut设计差异">一、LUT设计差异</h3>
<p>　　LUT 组件可以说是 FlexSPI 外设最核心的部分，关于其工作原理，详见痞子衡旧文 <a href="https://www.cnblogs.com/henjay724/p/14639057.html" target="_blank">《从头开始认识i.MXRT启动头FDCB里的lookupTable》</a>。客户在 RT600 手册以及 SDK 里发现的勘误主要是 FlexSPI 结构体原型定义里 LUT 长度 FLEXSPI_LUT_COUNT 被设为了 128，而实际上应该是 64（头文件一般是根据手册内容自动生成的)。</p>
<p><img src="https://raw.githubusercontent.com/JayHeng/pzhmcu-picture/master/cnblogs/iMXRT_LUT_size_RT600_err.jpg" alt="" loading="lazy"></p>
<p>　　LUT 指标除了总长度之外，还有一个重要指标，即单条时序最大长度（也可认为子时序数量），大部分 i.MXRT 上 FlexSPI 单条时序支持的最多子时序为 8 条（每条子时序长度固定 2Bytes），即如下图。</p>
<blockquote>
<ul>
<li>Note：这里需要注意，当某条时序中子时序不满 8 条时，剩余空间也不可另作它用，因为 FlexSPI-&gt;IPCR1[ISEQID] 里所标示的时序 index 对应得 LUT 里步长单位是时序最大长度。</li>
</ul>
</blockquote>
<p><img src="https://raw.githubusercontent.com/JayHeng/pzhmcu-picture/master/cnblogs/iMXRT_LUT_size_RTcom.jpg" alt="" loading="lazy"></p>
<p>　　RT700 上外设升级到了 XSPI，其单条时序支持的最多子时序为 10 条，即如下图所示，其余 LUT 用法和 FlexSPI 类似。</p>
<p><img src="https://raw.githubusercontent.com/JayHeng/pzhmcu-picture/master/cnblogs/iMXRT_LUT_size_RT700.jpg" alt="" loading="lazy"></p>
<p>　　这里用一个表格做个总结，目前来看 RT1180 最强，支持的时序数量最多，不过对于其它 i.MXRT 也不用慌。如果工程里实际需要的时序大于 16，可以动态更新 LUT 表以分时复用空间，这样实际能实现的时序数量是不限的。</p>
<table><tbody>
    <tr>
        <th>芯片</th>
        <th>外设</th>
        <th>LUT长度</th>
        <th>单Sequence长度</th>
        <th>Sequence总数</th>
    </tr>
    <tr>
        <td>i.MXRT10xx<br>
            i.MXRT1160/1170<br>
            i.MXRT500/600<br>
            RW612</td>
        <td rowspan="2">FlexSPI</td>
        <td>64 words</td>
        <td rowspan="2">4 words</td>
        <td>16</td>
    </tr>
    <tr>
        <td>i.MXRT1180</td>
        <td>128 words</td>
        <td>32</td>
    </tr>
    <tr>
        <td>i.MXRT700</td>
        <td>XSPI</td>
        <td>80 words</td>
        <td>5 words</td>
        <td>16</td>
    </tr>
</tbody></table>
<h3 id="二lut长度对驱动影响">二、LUT长度对驱动影响</h3>
<p>　　当前 SDK 包里的 flexspi 驱动和例程是以 16 条时序来设计的，这对于除了 RT1180 之外的其它 i.MXRT 型号是合适的。而在 RT1180 上，例程里我们只需把 CUSTOM_LUT_LENGTH 改为 128，然后在 customLUT 里添加更多时序实现即可。</p>
<blockquote>
<ul>
<li>例程路径： \SDK\boards\evkmimxrt1180\driver_examples\flexspi\nor</li>
</ul>
</blockquote>
<pre><code class="language-C">#define CUSTOM_LUT_LENGTH        128
const uint32_t customLUT[CUSTOM_LUT_LENGTH] = {
        // 时序...
};
</code></pre>
<p>　　而至于 fsl_flexspi.c 驱动（V2.7.0及之前），里面和 LUT 相关的就一个如下函数 FLEXSPI_UpdateLUT()，这个函数用于更新 LUT 表，在例程里我们是一次性更新进去，所以参数里的 index 检查没有问题；如果是动态单条更新 LUT，那么函数里面的第一句 assert() 检查就需要为 RT1180 做相应改动。</p>
<p><img src="https://raw.githubusercontent.com/JayHeng/pzhmcu-picture/master/cnblogs/iMXRT_LUT_size_drv.jpg" alt="" loading="lazy"></p>
<p>　　最后还要提一嘴 RT1180 启动头 FCB 结构体定义，flexspi_mem_config_t 里 lookupTable 长度是 64 words，这个不需要更新，虽然 FlexSPI 的能力不止于此，但是 RT1180 BootROM 里就仅支持前 16 条时序用于用户配置。</p>
<p>　　至此，i.MXRT全系列FlexSPI外设的LUT长度痞子衡便介绍完毕了，掌声在哪里~~~</p>
<h3 id="欢迎订阅">欢迎订阅</h3>
<p>文章会同时发布到我的 <a href="https://www.cnblogs.com/henjay724/" target="_blank">博客园</a>、<a href="https://blog.csdn.net/henjay724" target="_blank" rel="noopener nofollow">CSDN</a>、<a href="http://weixin.sogou.com/weixin?type=1&amp;query=%E7%97%9E%E5%AD%90%E8%A1%A1%E5%B5%8C%E5%85%A5%E5%BC%8F" target="_blank" rel="noopener nofollow">微信公众号</a>、<a href="https://www.zhihu.com/people/henjay724" target="_blank" rel="noopener nofollow">知乎</a>、<a href="https://www.eefocus.com/user/3876937/article/" target="_blank" rel="noopener nofollow">与非网</a>、<a href="https://blog.chinaaet.com/henjay724" target="_blank" rel="noopener nofollow">电子技术应用AET</a>、<a href="https://www.dianyuan.com/people/912268" target="_blank" rel="noopener nofollow">电子星球</a>、<a href="https://blog.51cto.com/henjay724" target="_blank" rel="noopener nofollow">51CTO</a> 平台上。</p>
<p>微信搜索"<strong>痞子衡嵌入式</strong>"或者扫描下面二维码，就可以在手机上第一时间看了哦。</p>
<p><img src="https://raw.githubusercontent.com/JayHeng/pzhmcu-picture/master/github/pzhMcu_qrcode_258x258.jpg" alt="" loading="lazy"></p>

</div>
<div id="MySignature" role="contentinfo">
    <div class="autograph"> 
  <p style="font-family: 楷体; font-size: 15px">&nbsp;&nbsp;最后欢迎关注痞子衡个人微信公众号【痞子衡嵌入式】，一个专注嵌入式技术的公众号，跟着痞子衡一起玩转嵌入式。</p>

  <img style="float: left" src="https://img2022.cnblogs.com/blog/623659/202211/623659-20221116165755872-427238307.jpg" alt="痞子衡嵌入式-微信二维码" class="img_avatar">

  <img style="float: right" src="http://henjay724.com/image/cnblogs/baogeMcu_payment_wechat_150x150.png" alt="痞子衡嵌入式-微信收款二维码" class="img_avatar">

  <img style="float: right" src="http://henjay724.com/image/cnblogs/baogeMcu_payment_alipay_150x150.jpg" alt="痞子衡嵌入式-支付宝收款二维码" class="img_avatar">

<br>
  <p>&nbsp;&nbsp;衡杰(痞子衡)，目前就职于某全球顶级半导体原厂MCU系统部门，担任高级嵌入式系统应用工程师。</p>

  <p>&nbsp;&nbsp;专栏内所有文章的转载请注明出处：<a href="http://www.cnblogs.com/henjay724/" target="_blank">http://www.cnblogs.com/henjay724/</a></p>

  <p>&nbsp;&nbsp;与痞子衡进一步交流或咨询业务合作请发邮件至 <a href="hengjie1989@foxmail.com" target="_blank">hengjie1989@foxmail.com</a></p>

  <p>&nbsp;&nbsp;可以关注痞子衡的Github主页 <a href="https://github.com/JayHeng" target="_blank">https://github.com/JayHeng</a>，有很多好玩的嵌入式项目。</p>

  <p><font color="yellow">&nbsp;&nbsp;关于专栏文章有任何疑问请直接在博客下面留言，痞子衡会及时回复免费(划重点)答疑。</font></p>

  <p><font color="red">&nbsp;&nbsp;痞子衡邮箱已被私信挤爆，技术问题不推荐私信，坚持私信请先扫码付款(5元起步)再发。</font></p>
<br>
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.008333333333333333" data-date-updated="2025-07-24 15:54">2025-07-24 15:42</span>&nbsp;
<a href="https://www.cnblogs.com/henjay724">痞子衡</a>&nbsp;
阅读(<span id="post_view_count">133</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19002951);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19002951', targetLink: 'https://www.cnblogs.com/henjay724/p/19002951', title: '痞子衡嵌入式：从i.MXRT600用户手册UM里一个关于FlexSPI LUT长度的勘误说起' })">举报</a>
</div>
        