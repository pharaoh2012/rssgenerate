
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/pam-sh/p/18929904" title="发布于 2025-06-15 19:44">
    <span role="heading" aria-level="2">基于混合检索重排序策略的大模型增强方法</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<blockquote>
<p>学习论文：<a href="http://jcip.cipsc.org.cn/CN/Y2025/V39/I4/42" title="基于混合检索重排序策略的大模型增强方法" target="_blank" rel="noopener nofollow">基于混合检索重排序策略的大模型增强方法</a></p>
</blockquote>
<h2 id="核心研究问题">核心研究问题</h2>
<p>如何优化检索增强生成（RAG）技术，特别是在<strong>知识库存储方式</strong>和<strong>检索结果重排序策略</strong>上，以<strong>显著提升大语言模型（LLM）在事实性问答任务中的准确率</strong>。</p>
<h2 id="主要发现与贡献">主要发现与贡献</h2>
<ol>
<li>
<p><strong>知识库存储方式至关重要：段落切分优于固定长度切分</strong></p>
<ul>
<li><strong>问题：</strong> 传统RAG系统常将知识库切分为固定长度（如256、512、1024字符）的文本块进行向量存储和检索。这种方式虽然处理效率高，但破坏了文本的<strong>自然段落结构信息</strong>。</li>
</ul>
<img src="https://img2024.cnblogs.com/blog/1928790/202506/1928790-20250615194407968-1861261717.png" alt="image-20250615192104864" style="zoom: 50%">
<ul>
<li><strong>发现：</strong> 实验证明，将知识库按<strong>自然段落结构切分存储</strong>，相比固定长度切分，能<strong>大幅提升LLM依据检索知识回答问题的准确率</strong>（在多个模型上提升幅度可达10%-17%）。</li>
</ul>
<img src="https://img2024.cnblogs.com/blog/1928790/202506/1928790-20250615194407989-1942323379.png" alt="image-20250615192121858" style="zoom: 50%">
<ul>
<li><strong>原因：</strong> 段落作为语义完整的单元，保留了上下文信息和逻辑结构，更利于LLM理解和利用知识。</li>
</ul>
</li>
<li>
<p><strong>重排序策略影响显著：逆序重排序在特定条件下效果更佳</strong></p>
<ul>
<li>
<p><strong>背景：</strong> LLM对输入中关键知识的位置敏感（位置偏见）。随着LLM上下文窗口增长，研究重排序策略的影响变得有意义。</p>
</li>
<li>
<p>关键发现：</p>
<ul>
<li>
<p>当<strong>检索到的知识段落被放置在用户问题之前</strong>（即Prompt设计为 <code>Context + Question</code>）时：</p>
<img src="https://img2024.cnblogs.com/blog/1928790/202506/1928790-20250615194408002-767583145.png" alt="image-20250615192247588" style="zoom: 50%">
<ul>
<li>将<strong>最相关的知识段落（包含正确答案的段落）放置在检索结果列表的末尾（逆序）</strong>，比将其放在开头（正序）或中间，更能<strong>提高LLM的准确率</strong>。</li>
<li>这种<strong>逆序优势随着提供给LLM的检索段落数量（k）的增加而变得更加明显</strong>（尤其在k=20, 30, 50时）。</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>解释：</strong> 在这种Prompt结构下，LLM似乎更倾向于关注和利用靠近问题（即输入末尾）的知识片段。将最相关知识放在末尾，使其处于LLM注意力更集中的区域。</p>
</li>
</ul>
</li>
<li>
<p><strong>提出并验证：基于混合检索的逆序重排序方法</strong></p>
<ul>
<li>
<p><strong>动机：</strong> 传统的基于语义相似性（向量检索）的逆序虽然有效，但提升幅度有限（约1%）。需要一种更鲁棒的重排序方法。</p>
</li>
<li>
<p>方法：</p>
<ul>
<li>
<p>混合检索：</p>
<p>结合两种检索方式的结果：</p>
<ul>
<li><strong>语义相似性检索（Semantic）：</strong> 基于向量相似度，召回率高。</li>
<li><strong>关键词匹配检索（Keyword）：</strong> 基于词汇匹配，准确率高。</li>
</ul>
</li>
<li>
<p>重排序：</p>
<p>采用倒数融合排序（Reciprocal Rank Fusion, RRF）的思想，但不直接加权分数，而是利用排名：</p>
</li>
</ul>
</li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/1928790/202506/1928790-20250615194408011-827737113.png" alt="image-20250615191710043" loading="lazy"></p>
<blockquote>
<p><strong>注意：这里是根据段落去切分的，也是根据段落是否相同来相加的。</strong></p>
<p><strong>举个例子：</strong></p>
<p>假设用户查询问题为：“苹果手机的最新功能”，需从知识库中检索相关段落。<br>
通过两种独立检索方式得到结果：</p>
<ul>
<li>语义相似性检索的 Top-3 结果：
<ol>
<li>段落A（介绍苹果公司发展史，排名得分最高）</li>
<li><strong>段落B</strong>（详细描述iPhone 15的摄像头功能）</li>
<li>段落C（讨论智能手机市场趋势）</li>
</ol>
</li>
<li>关键词匹配检索的 Top-3 结果：
<ol>
<li>段落D（解释“苹果”水果的营养价值）</li>
<li><strong>段落B</strong>（iPhone 15的摄像头功能）</li>
<li>段落E（iOS系统更新日志）</li>
</ol>
</li>
</ul>
<p><strong>RRF 融合步骤</strong></p>
<ol>
<li>
<p><strong>计算排名倒数得分</strong>（公式：<span class="math inline">\(S = 1/\text{排名}\)</span>）：</p>
<ul>
<li>语义检索组：
<ul>
<li>段落A：<span class="math inline">\(S_1^1 = 1/1 = 1.0\)</span></li>
<li>段落B：<span class="math inline">\(S_1^2 = 1/2 = 0.5\)</span></li>
<li>段落C：<span class="math inline">\(S_1^3 = 1/3 ≈ 0.33\)</span></li>
</ul>
</li>
<li>关键词组：
<ul>
<li>段落D：<span class="math inline">\(S_2^1 = 1/1 = 1.0\)</span></li>
<li>段落B：<span class="math inline">\(S_2^2 = 1/2 = 0.5\)</span></li>
<li>段落E：<span class="math inline">\(S_2^3 = 1/3 ≈ 0.33\)</span></li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>合并相同段落的得分</strong>（公式：<span class="math inline">\(S_{\text{新}} = S_1 + S_2\)</span>）：</p>
<ul>
<li>段落B同时出现在两组：<br>
<span class="math inline">\(S_{\text{B-新}} = S_1^2 + S_2^2 = 0.5 + 0.5 = 1.0\)</span></li>
<li>其他段落仅出现在单组，得分不变（如段落A保持 <span class="math inline">\(1.0\)</span>）。</li>
</ul>
</li>
<li>
<p><strong>按总分逆序重排</strong>：</p>
<table>
<thead>
<tr>
<th>段落</th>
<th>总分</th>
<th>新排名（逆序）</th>
</tr>
</thead>
<tbody>
<tr>
<td>B</td>
<td>1.0</td>
<td><strong>最后一位</strong>（最靠近问题）</td>
</tr>
<tr>
<td>A</td>
<td>1.0</td>
<td>倒数第二位</td>
</tr>
<tr>
<td>D</td>
<td>1.0</td>
<td>倒数第三位</td>
</tr>
<tr>
<td>C</td>
<td>0.33</td>
<td>靠前位置</td>
</tr>
<tr>
<td>E</td>
<td>0.33</td>
<td>靠前位置</td>
</tr>
</tbody>
</table>
</li>
</ol>
</blockquote>
<ul>
<li>
<p>效果：</p>
<ul>
<li>在检索召回率上：混合方法在Top-1和Top-10召回率上优于纯语义检索（尤其当k增大时）。</li>
<li>在LLM准确率上：
<ul>
<li>相比<strong>传统语义相似性检索（正序）</strong>，该方法最高实现了<strong>4%</strong> 的准确率提升（在k=50时）。</li>
<li>相比<strong>传统语义相似性检索的逆序</strong>，最高实现了<strong>5%</strong> 的提升（在k=50时）。</li>
<li>相比<strong>混合检索的正序重排序</strong>，也能实现最高<strong>2%</strong> 的提升（在k=50时）。</li>
</ul>
</li>
<li><strong>优势在输入文本较长（k较大）时尤为显著。</strong></li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>其他重要发现与讨论（消融实验）：</strong></p>
<ul>
<li>Prompt结构影响位置偏好：
<ul>
<li><code>Context + Question</code>：LLM偏好利用末尾（靠近Question）的知识。<strong>逆序有效。</strong></li>
<li><code>Question + Context</code>：LLM偏好利用开头（靠近Question）的知识。此时正序可能更有效。</li>
<li><code>Question + Context + Question</code>：位置偏好减弱，开头和末尾差异不大。</li>
<li>总体而言，<code>Context + Question</code>结构配合逆序重排序在该研究中表现最佳。</li>
</ul>
</li>
<li>模型规模与位置偏见：
<ul>
<li>在测试的较小模型（6B, 13B）上，位置偏见（末尾优势）明显。</li>
<li>在超大模型（如GLM-3-Turbo）上初步实验也显示出末尾知识可能更受关注，但因模型常拒绝回答，结论需谨慎。</li>
</ul>
</li>
<li>上下文失焦问题改进模型：
<ul>
<li>在声称解决“大海捞针”问题的模型（如GLM-4-9B-Chat-1M, Qwen2-7B-Instruct）上，位置偏见（开头vs末尾准确率差异）<strong>减弱</strong>（约1%），但<strong>依然存在</strong>。</li>
<li>中间位置的知识在这些模型上表现仍然最差，<strong>证明重排序仍有必要</strong>。</li>
</ul>
</li>
</ul>
</li>
</ol>
<h2 id="实验基础">实验基础</h2>
<ul>
<li><strong>数据集：</strong> 自建大规模中文段落级数据集（&gt;85万段落），包含1000个经过筛选和修改的事实性问题（答案唯一且在特定段落中）。</li>
<li><strong>系统架构：</strong> 构建了包含存储（Elasticsearch）、检索（语义/关键词/混合）、重排序（正序/逆序/混合逆序）、生成（LLM）的完整RAG流程。</li>
<li><strong>评价指标：</strong> 主要使用准确率（Accuracy）评估LLM回答正确率，使用召回率（Recall@k）评估检索效果。</li>
<li><strong>模型：</strong> 使用了多个开源中文LLM进行实验，包括ChatGLM3-6B-128k, XVERSE-13B-256K, Yi-6B-200K, GLM-4-9B-Chat-1M, Qwen2-7B-Instruct，并测试了GLM-3-Turbo API。</li>
</ul>
<h2 id="方案示例">方案示例</h2>
<p><strong>用户问题</strong>：<br>
“量子计算机的工作原理是什么？”</p>
<p><strong>知识库段落</strong>（部分示例）：</p>
<ul>
<li><strong>段落A</strong>：量子计算的基本概念（语义匹配度高，关键词匹配弱）<br>
<em>“量子计算机利用量子比特（qubit）存储信息，与传统二进制比特不同…”</em></li>
<li><strong>段落B</strong>：量子纠缠与并行计算（语义+关键词均强）<br>
<em>“通过量子纠缠实现并行计算，例如Shor算法可高效分解大整数…”</em></li>
<li><strong>段落C</strong>：量子退相干问题（语义相关，但非核心原理）<br>
<em>“量子退相干是量子计算的主要挑战，需通过纠错码缓解…”</em></li>
<li><strong>段落D</strong>：量子比特物理实现（关键词匹配强，语义弱）<br>
<em>“超导电路、离子阱是实现量子比特的两种物理方案…”</em></li>
</ul>
<blockquote>
<p><strong>混合检索逆序重排序流程</strong></p>
</blockquote>
<p><strong>步骤1：混合检索</strong></p>
<ul>
<li>语义相似性检索（Top-3）：
<ol>
<li>段落A（得分0.92）</li>
<li>段落B（得分0.85）</li>
<li>段落C（得分0.78）</li>
</ol>
</li>
<li>关键词匹配检索（Top-3）：
<ol>
<li>段落D（匹配“量子比特”“工作原理”）</li>
<li>段落B（匹配“并行计算”）</li>
<li>段落A（匹配“量子计算机”）</li>
</ol>
</li>
</ul>
<p><strong>步骤2：RRF融合排序</strong></p>
<ul>
<li>计算排名倒数得分（公式：<span class="math inline">\(S=1/\text{排名}\)</span>）：
<ul>
<li>语义组：
<ul>
<li>A：<span class="math inline">\(S_1^1 = 1/1 = 1.0\)</span></li>
<li>B：<span class="math inline">\(S_1^2 = 1/2 = 0.5\)</span></li>
<li>C：<span class="math inline">\(S_1^3 = 1/3 ≈ 0.33\)</span></li>
</ul>
</li>
<li>关键词组：
<ul>
<li>D：<span class="math inline">\(S_2^1 = 1/1 = 1.0\)</span></li>
<li>B：<span class="math inline">\(S_2^2 = 1/2 = 0.5\)</span></li>
<li>A：<span class="math inline">\(S_2^3 = 1/3 ≈ 0.33\)</span></li>
</ul>
</li>
</ul>
</li>
<li>合并相同段落得分（<span class="math inline">\(S_{\text{新}} = S_1 + S_2\)</span>）：
<ul>
<li>B：<span class="math inline">\(0.5 + 0.5 = 1.0\)</span></li>
<li>A：<span class="math inline">\(1.0 + 0.33 = 1.33\)</span></li>
<li>D：<span class="math inline">\(1.0\)</span>（仅关键词组）</li>
<li>C：<span class="math inline">\(0.33\)</span>（仅语义组）</li>
</ul>
</li>
</ul>
<p><strong>步骤3：逆序重排</strong></p>
<table>
<thead>
<tr>
<th>段落</th>
<th>总分</th>
<th>新顺序（逆序）</th>
</tr>
</thead>
<tbody>
<tr>
<td>A</td>
<td>1.33</td>
<td><strong>倒数第2位</strong></td>
</tr>
<tr>
<td>B</td>
<td>1.0</td>
<td><strong>倒数第1位</strong>（最靠近问题）</td>
</tr>
<tr>
<td>D</td>
<td>1.0</td>
<td>倒数第3位</td>
</tr>
<tr>
<td>C</td>
<td>0.33</td>
<td>正序第1位</td>
</tr>
</tbody>
</table>
<p><strong>步骤4：输入LLM生成答案</strong></p>
<ul>
<li>
<p>Prompt结构</p>
<p>（Context前置）：</p>
<pre><code>[段落C] [段落D] [段落A] [段落B]  
根据以上信息，直接告诉我：量子计算机的工作原理是什么？
</code></pre>
</li>
<li>
<p><strong>效果</strong>：<br>
核心段落B被置于最末位（紧邻问题），利用LLM对末尾信息敏感的特性（论文2.2节结论），提升答案准确性。</p>
</li>
<li>
<p><strong>疑问：为什么A总分最高，而不是最靠近问题的？</strong></p>
<ul>
<li><strong>逆序重排序的规则并非仅通过总分机械排序，而是结合了总分排序与相关性双重验证的优先级逻辑</strong>，具体来说：
<ul>
<li><strong>段落B在两组检索中均被命中</strong>（语义+关键词），表明其相关性更全面（论文3.3.3节指出：混合检索可同时提高召回率与准确率）。</li>
<li>段落A仅在语义检索中排名靠前，关键词匹配较弱（排名第3），可能存在语义相关但关键词匹配不足的问题。</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><strong>与传统方法对比</strong></p>
<table>
<thead>
<tr>
<th>方法</th>
<th>输入顺序</th>
</tr>
</thead>
<tbody>
<tr>
<td>语义相似性正序</td>
<td>A→B→C→D</td>
</tr>
<tr>
<td>语义相似性逆序</td>
<td>D→C→B→A</td>
</tr>
<tr>
<td><strong>混合检索逆序（本文）</strong></td>
<td><strong>C→D→A→B</strong></td>
</tr>
</tbody>
</table>
<h2 id="总结与展望"><strong>总结与展望</strong></h2>
<p>该研究通过严谨的实验验证了知识库按段落存储以及采用基于混合检索的逆序重排序策略（尤其在知识前置、输入较长时）能显著提升LLM在RAG任务中的准确率。提出的混合逆序方法简单有效，无需训练。未来研究方向包括：探索更适用于超大模型的重排序策略、设计更有效的Prompt模板、以及进一步优化检索增强生成的整体流程。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.0006944444444444445" data-date-updated="2025-06-15 19:45">2025-06-15 19:44</span>&nbsp;
<a href="https://www.cnblogs.com/pam-sh">PamShao</a>&nbsp;
阅读(<span id="post_view_count">3</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18929904);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18929904', targetLink: 'https://www.cnblogs.com/pam-sh/p/18929904', title: '基于混合检索重排序策略的大模型增强方法' })">举报</a>
</div>
        