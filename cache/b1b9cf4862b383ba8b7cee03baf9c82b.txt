
		<h1 class="postTitle">
			<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/mingv/p/18713222" title="发布于 2025-02-13 15:14">
    <span role="heading" aria-level="2">如何正确配置 .gitignore 以忽略特定文件夹下的文件（除指定子文件夹外）</span>
    

</a>

		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>在使用 Git 进行版本控制时，<code>.gitignore</code>&nbsp;文件是一个非常有用的工具，可以帮助我们忽略不需要跟踪的文件或文件夹。然而，有时我们需要忽略某个文件夹下的所有内容，但保留其中的某个子文件夹。本文将详细介绍如何实现这一需求，并解决修改&nbsp;<code>.gitignore</code>&nbsp;后如何生效的问题。</p>
<h3>场景描述</h3>
<p>假设我们的项目根目录下有一个&nbsp;<code>unpackage</code>&nbsp;文件夹，我们希望忽略&nbsp;<code>unpackage</code>&nbsp;文件夹下的所有文件和文件夹，但保留其中的&nbsp;<code>res</code>&nbsp;文件夹。也就是说，<code>unpackage/res/</code>&nbsp;需要被 Git 跟踪，而&nbsp;<code>unpackage/</code>&nbsp;下的其他内容需要被忽略。</p>
<p>&nbsp;</p>
<h3>解决方案</h3>
<p>在&nbsp;<code>.gitignore</code>&nbsp;文件中添加以下规则：</p>
<div class="md-code-block">
<div class="cnblogs_code">
<pre>unpackage<span style="color: rgba(0, 128, 0, 1)">/*</span><span style="color: rgba(0, 128, 0, 1)">
!unpackage/res/</span></pre>
</div>
<p>&nbsp;</p>
</div>
<h4>规则解释：</h4>
<ol start="1">
<li>
<p><code>unpackage/*</code>：忽略&nbsp;<code>unpackage</code>&nbsp;文件夹下的所有文件和文件夹。</p>
</li>
<li>
<p><code>!unpackage/res/</code>：排除&nbsp;<code>unpackage/res/</code>&nbsp;文件夹，即不忽略&nbsp;<code>res</code>&nbsp;文件夹及其内容。</p>
</li>
</ol><hr>
<h3>修改&nbsp;<code>.gitignore</code>&nbsp;后如何生效</h3>
<p>如果你之前已经在&nbsp;<code>.gitignore</code>&nbsp;文件中写了&nbsp;<code>unpackage/*</code>，现在修改为上述规则后，需要执行以下步骤使更改生效：</p>
<h4>1. 清除 Git 缓存</h4>
<p>Git 会缓存已经跟踪的文件，即使它们现在被&nbsp;<code>.gitignore</code>&nbsp;规则匹配。我们需要清除缓存，让 Git 重新应用&nbsp;<code>.gitignore</code>&nbsp;规则。</p>
<p>运行以下命令：</p>
<div class="md-code-block">
<div class="cnblogs_code">
<pre>git <span style="color: rgba(0, 0, 255, 1)">rm</span> -r --cached unpackage/<span style="color: rgba(0, 0, 0, 1)">
git add .
git commit </span>-m <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Update .gitignore to exclude unpackage except res</span><span style="color: rgba(128, 0, 0, 1)">"</span></pre>
</div>
</div>
<h4>命令解释：</h4>
<ul>
<li>
<p><code>git rm -r --cached unpackage/</code>：从 Git 缓存中移除&nbsp;<code>unpackage</code>&nbsp;文件夹的内容，但不会删除本地文件。</p>
</li>
<li>
<p><code>git add .</code>：重新添加文件，应用新的&nbsp;<code>.gitignore</code>&nbsp;规则。</p>
</li>
<li>
<p><code>git commit</code>：提交更改。</p>
</li>
</ul>
<h4>2. 检查是否生效</h4>
<p>运行以下命令，检查&nbsp;<code>unpackage</code>&nbsp;文件夹的状态：</p>
<div class="md-code-block">
<div class="cnblogs_code">
<pre>git status</pre>
</div>
</div>
<p>你应该看到：</p>
<ul>
<li>
<p><code>unpackage/res/</code>&nbsp;被跟踪。</p>
</li>
<li>
<p><code>unpackage/</code>&nbsp;下的其他文件或文件夹被忽略。</p>
</li>
</ul>
<h4>3. 推送更改（如果需要）</h4>
<p>如果你在远程仓库中也需要这些更改，记得推送：</p>
<div class="md-code-block">
<div class="cnblogs_code">
<pre>git push origin &lt;branch-name&gt;</pre>
</div>
</div>
<hr>
<h3>注意事项</h3>
<ol start="1">
<li>
<p>如果你之前已经将&nbsp;<code>unpackage/</code>&nbsp;下的文件提交到了 Git 仓库，这些文件会保留在 Git 历史中。如果需要彻底从历史中删除，可以使用&nbsp;<code>git filter-repo</code>&nbsp;或&nbsp;<code>BFG Repo-Cleaner</code>&nbsp;工具。</p>
</li>
<li>
<p>如果&nbsp;<code>unpackage/res/</code>&nbsp;下有子文件夹或文件需要被跟踪，Git 会自动跟踪它们，因为&nbsp;<code>res</code>&nbsp;文件夹本身没有被忽略。</p>
</li>
</ol><hr>
<h3>总结</h3>
<p>通过合理配置&nbsp;<code>.gitignore</code>&nbsp;文件，我们可以灵活地控制 Git 跟踪的文件和文件夹。本文介绍了如何忽略某个文件夹下的所有内容，但保留其中的指定子文件夹，并解决了修改&nbsp;<code>.gitignore</code>&nbsp;后如何生效的问题。希望这篇文章对你有所帮助！</p>
<div>&nbsp;</div>
<div id="gtx-trans" style="position: absolute; left: -16px; top: 1342.81px">&nbsp;</div>
</div>
<div class="clear"></div>

		</div>
		<div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.057614586386574074" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-13 15:14">2025-02-13 15:14</span>&nbsp;
<a href="https://www.cnblogs.com/mingv">mingV2020</a>&nbsp;
阅读(<span id="post_view_count">59</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18713222" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18713222);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18713222', targetLink: 'https://www.cnblogs.com/mingv/p/18713222', title: '如何正确配置 .gitignore 以忽略特定文件夹下的文件（除指定子文件夹外）' })">举报</a>
</div>
	