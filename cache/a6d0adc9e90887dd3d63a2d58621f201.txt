
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/foury/p/18990163" title="发布于 2025-07-17 18:09">
    <span role="heading" aria-level="2">MinIO数据导出</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>最近公司里需要将生产环境MinIO数据导出来一份，用于后续工作。导出的过程中尝试了三种方法（最终选择了方法三），内容如下：</p>
<h1 id="方法一minio-web控制台界面下载适用于少量文件">方法一：MinIO Web控制台界面下载（适用于少量文件）</h1>
<p>通过浏览器访问MinIO服务（http://<host>:9000），进入对应的Bucket和文件夹，选择对应文件，点击下载。</host></p>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3476680/202507/3476680-20250717175431843-383068973.png" class="lazyload"></p>
<p>注意：MinIO 控制台 不支持文件夹整体下载，文件夹只能展开后逐个选择其下的文件进行下载。</p>
<h1 id="方法二使用python脚本批量导出文件导出">方法二：使用python脚本批量导出文件导出</h1>
<p>可以用 Python 编写一个脚本，<strong>批量下载 MinIO 某个 bucket 中的所有对象（文件）或者某个文件夹中的图片</strong>，保存到本地。MinIO 兼容 S3 协议，所以可以使用官方的 boto3 库来操作。</p>
<p>步骤：</p>
<ol>
<li>安装依赖：boto3</li>
<li>配置MinIO地址与访问密钥</li>
<li>使用 boto3 连接MinIO</li>
<li>遍历bucket中所有对象并下载</li>
</ol>
<pre><code>import boto3
from botocore.client import Config
import os

# ====== 配置 MinIO ======
minio_endpoint = "http://127.0.0.1:9000"  # MinIO 服务地址
access_key = "admin"                # 你的 Access Key
secret_key = "admin"                # 你的 Secret Key
bucket_name = "bucket-test"         # 要下载的 bucket 名称
download_dir = "F:\\minio_download_test"        # 本地保存目录
prefix = "fence-manual-capture"             # 要下载的文件夹

# ====== 创建本地目录 ======
os.makedirs(download_dir, exist_ok=True)

# ====== 创建 MinIO 客户端 ======
s3 = boto3.client('s3',
                  endpoint_url=minio_endpoint,
                  aws_access_key_id=access_key,
                  aws_secret_access_key=secret_key,
                  config=Config(signature_version='s3v4'),
                  region_name='us-east-1')

# ====== 获取并下载所有对象 ======
paginator = s3.get_paginator('list_objects_v2')
pages = paginator.paginate(Bucket=bucket_name,Prefix=prefix)

for page in pages:
    if 'Contents' in page:
        for obj in page['Contents']:
            key = obj['Key']
            local_path = os.path.join(download_dir, key)

            # 创建本地子目录（如果对象名中含有路径）
            os.makedirs(os.path.dirname(local_path), exist_ok=True)

            print(f"正在下载: {key} -&gt; {local_path}")
            s3.download_file(bucket_name, key, local_path)

print("所有文件下载完成！")
</code></pre>
<h1 id="方法三使用minio-clientmc批量导出推荐">方法三：使用MinIO Client（mc）批量导出（推荐）</h1>
<p>MinIO官方提供了命令行工具mc，支持同步和下载。<br>
官方文档：<a href="https://min.io/docs/minio/linux/reference/minio-mc.html" target="_blank" rel="noopener nofollow">https://min.io/docs/minio/linux/reference/minio-mc.html</a></p>
<p>1.安装mc：</p>
<pre><code>wget https://dl.min.io/client/mc/release/linux-amd64/mc
chmod +x mc
sudo mv mc /usr/local/bin/
</code></pre>
<ol start="2">
<li>配置连接MinIO：</li>
</ol>
<pre><code>mc alias set myminio http://&lt;MINIO_HOST&gt;:&lt;PORT&gt; &lt;ACCESS_KEY&gt; &lt;SECRET_KEY&gt;
#例如 mc alias set myminio http://127.0.0.1:9000 minioadmin minioadmin
</code></pre>
<p>3.下载桶中的数据到本地</p>
<pre><code>mc mirror myminio/mybucket ./local-folder
</code></pre>
<p>这条命令会把 mybucket 中的所有文件递归下载到当前文件夹 ./local-folder 中。<br>
可选参数：</p>
<ul>
<li>--overwrite 强制覆盖本地已有文件</li>
<li>--remove 会删除本地目标中不在源中的文件（慎用）</li>
<li>--continue：跳过失败项，继续同步，不中断。</li>
</ul>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-17 18:09">2025-07-17 18:09</span>&nbsp;
<a href="https://www.cnblogs.com/foury">深紫色的三北六号</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18990163);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18990163', targetLink: 'https://www.cnblogs.com/foury/p/18990163', title: 'MinIO数据导出' })">举报</a>
</div>
        