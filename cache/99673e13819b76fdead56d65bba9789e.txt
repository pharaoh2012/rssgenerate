
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/somefuture/p/18933713" title="发布于 2025-06-18 09:53">
    <span role="heading" aria-level="2">git-intelligence-message 1.3.2  发布了，智能生成、提交git的工具</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>git-intelligence-message 1.3.2 发布了，这是一次小版本更新。主要内容是可以通过命令查看AI配置信息了。</p>
<p>Git Intelligence Message (GIM) 是一个高级的Git提交消息生成工具，用于精确而复杂地自动生成高质量的提交消息。仓库地址： <a href="https://github.com/davelet/git-intelligence-message" target="_blank" rel="noopener nofollow">https://github.com/davelet/git-intelligence-message</a></p>
<h1 id="更新方法">更新方法</h1>
<p>如果你已经在使用了，并且gim的版本是1.3，那么可以通过命令</p>
<pre><code class="language-bash">gim update
</code></pre>
<p>进行更新。更新后有两种方法确认：</p>
<ol>
<li><code>gim -V</code> 输出 <code>1.3.2</code></li>
<li><code>gim ai</code> 输出配置信息，这就是本次更新的主要内容，之前的版本这个命令不携带其他参数会报错</li>
</ol>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/2157887/202506/2157887-20250617222238956-5657439.png" class="lazyload"></p>
<h1 id="全新安装">全新安装</h1>
<p>如果你还没安装，或者版本小于1.3，需要卸载掉重写安装：</p>
<pre><code class="language-bash">brew uninstall git-intelligence-message
brew install davelet/gim/git-intelligence-message
</code></pre>
<p>安装后执行 <code>gim -h</code>查看软件信息。用法参考 《<a href="https://www.cnblogs.com/somefuture/p/18889281" title="GIM 1.3.0 发布了" target="_blank">GIM 1.3.0</a>》。</p>
<h1 id="使用方法">使用方法</h1>
<ul>
<li><code>gim</code> 根据暂存区的文件变更内容生成提交消息并提交</li>
<li><code>gim -a</code> 自动暂存尚未暂存的变更，并生成提交消息提交</li>
<li><code>gim -p</code> 将本次暂存的变更内容合并到上一次提交中，并根据这两次变更生成提交消息提交（就是<code>--amend</code>）</li>
<li><code>gim -ap</code> 相当于<code>gim -a</code>后<code>gim -p</code>，先暂存，再合并提交</li>
<li><code>gim -t &lt;SUB&gt;</code> 指定提交的标题。不指定<code>-t</code>参数的话，标题是根据消息内容自动总结出来的</li>
<li><code>gim update</code> 更新软件版本，也可以<code>brew upgrade git-intelligence-message</code></li>
<li><code>gim ai -m &lt;model&gt; -k &lt;apikey&gt; -u &lt;url&gt; -l &lt;language&gt;</code> 设置AI参数。这个命令是前置命令，没有设置的话，上面携带参数的执行都会失败。<code>-l</code>有默认值，是英语，可以不用提供；<code>-u</code>是api调用的地址，软件内置了一些地址，可以查看 <a href="https://github.com/davelet/git-intelligence-message?tab=readme-ov-file#built-in-model-support" target="_blank" rel="noopener nofollow">https://github.com/davelet/git-intelligence-message?tab=readme-ov-file#built-in-model-support</a> ，如果模型名称能匹配上前缀也可以不提供。1.3.2版本开始，如果<code>gim ai</code>命令没携带参数，将输出当前配置</li>
<li><code>gim -v</code> 任何命令都可以增加<code>-v</code>参数，用于查看命令的详细执行过程，<code>v</code>表示 verbose</li>
<li><code>gim prompt</code> 查看当前提示词。增加<code>--edit</code>可以编辑提示词，增加<code>--prompt &lt;P&gt;</code>用于指定编辑文件</li>
</ul>
<p>更详细的用法可以通过<code>-h</code>查看帮助信息。比如</p>
<ul>
<li><code>gim -h</code></li>
<li><code>gim ai -h</code></li>
<li><code>gim update -h</code></li>
<li><code>gim prompt -h</code></li>
</ul>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-06-18 09:53">2025-06-18 09:53</span>&nbsp;
<a href="https://www.cnblogs.com/somefuture">大卫小东（Sheldon）</a>&nbsp;
阅读(<span id="post_view_count">156</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18933713);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18933713', targetLink: 'https://www.cnblogs.com/somefuture/p/18933713', title: 'git-intelligence-message 1.3.2  发布了，智能生成、提交git的工具' })">举报</a>
</div>
        