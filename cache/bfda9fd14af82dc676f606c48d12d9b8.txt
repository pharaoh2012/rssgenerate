
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/houdabao/p/18762159" title="发布于 2025-03-10 10:59">
    <span role="heading" aria-level="2">开箱即用的go-zero示例</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        在熟悉 go-zero 框架过程中踩坑很多，衍生的 go-zero-box 框架也是相当于经验贴了，希望可以帮助开发者更快的度过熟悉期。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h3 id="一概述">一、概述</h3>
<p>开箱即用的 go-zero 示例，内置 api、scheduler、queue、script 服务。</p>
<p>框架初始版本基于 go-zero 框架的 1.5.5 版本，后续会参考 go-zero 的版本出相应的更新。</p>
<p>在熟悉 go-zero 框架过程中踩坑很多，衍生的 go-zero-box 框架也是相当于经验贴了，希望可以帮助开发者更快的度过熟悉期。</p>
<p>整理并且开源不易，后续还会持续编写 go-zero 框架和 go 语言新特性的使用心得，在使用过程中有任何问题，欢迎提 <strong>issue</strong>，如果您觉得项目对您有帮助，希望给个️ ⭐️ <strong>star</strong> ⭐️ ，十分感谢。</p>
<h3 id="二特性">二、特性</h3>
<ul>
<li>
<p>做了一些符合Web应用框架的目录划分，使开发者代码阅读更便捷，减少开发成本；</p>
</li>
<li>
<p>提供了初始业务的 api 代码示例，包含登录、注册、鉴权等开箱即用的业务功能；</p>
</li>
<li>
<p>提供了初始业务的 api 文档，使用 Apifox 工具，导入即可使用 <a href="https://github.com/prf16/go-zero-box/blob/main/go-zero-box.apifox.json" target="_blank" rel="noopener nofollow">go-zero-box.apifox.json</a>；</p>
</li>
<li>
<p>增加了更多的 ORM API，支持复杂的数据操作业务；</p>
</li>
<li>
<p>引入 asynq 库，实现了队列、调度、脚本等功能；</p>
</li>
<li>
<p>引入 wire 库，实现了依赖注入功能；</p>
</li>
<li>
<p>通过 <code>app [command]</code> 的方式，在多实例扩展的场景下可以更方便地部署 api 、scheduler、queue 服务；</p>
</li>
<li>
<p>go 语言新特性的优秀示例，比如通过范式实现的三元表达式 <code>tools.Any(a == b, a, b)</code>；</p>
<p>···</p>
<p>持续更新中，敬请期待。</p>
</li>
</ul>
<h3 id="三框架介绍">三、框架介绍</h3>
<p>go-zreo 框架 + goctl 代码生成工具 + wire 依赖注入 + Makefile 实现自动化编译。</p>
<p>go-zero 是一个集成了各种工程实践的 web 和 rpc 框架，缩短从需求到上线的距离，通过弹性设计保障了大并发服务端的稳定性，经受了充分的实战检验。</p>
<p>goctl 是 go-zero 微服务框架下的代码生成工具。使用 goctl 可显著提升开发效率，让开发人员将时间重点放在业务开发上，其功能有：api服务生成、rpc服务生成、model代码生成、模板管理。</p>
<p>wire 是一个依赖注入工具，用于解决 Go 语言中依赖注入的问题。通过 wire，您可以轻松地管理应用程序的依赖关系，并确保它们在编译时进行注入。</p>
<p>Makefile 文件描述了 Linux 系统下项目工程的编译规则，只需要一个 <code>make bild</code> 命令，整个工程就开始自动构建项目环境，不再需要手动执行大量的 <code>go build</code> 命令，Makefile 文件定义了一系列规则，指明了源文件的编译顺序、依赖关系、是否需要重新编译等，可以输入 <code>make help</code> 查看命令集。</p>
<p>源码地址：<a href="https://github.com/prf16/go-zero-box" target="_blank" rel="noopener nofollow">https://github.com/prf16/go-zero-box</a></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.05374109210532407" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-10 10:59">2025-03-10 10:59</span>&nbsp;
<a href="https://www.cnblogs.com/houdabao">侯大宝</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18762159" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18762159);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18762159', targetLink: 'https://www.cnblogs.com/houdabao/p/18762159', title: '开箱即用的go-zero示例' })">举报</a>
</div>
        