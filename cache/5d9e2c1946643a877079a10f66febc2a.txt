
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/CeSun/p/18743730" title="发布于 2025-03-01 02:34">
    <span role="heading" aria-level="2">Blazor Hybrid适配到HarmonyOS系统</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="1-前言">1. 前言</h2>
<p>Blazor Hybrid是一个基于Web技术的MVVM开发模式的客户端框架，它只有UI是由Webview渲染，而逻辑均由.NET开发，可以突破浏览器限制访问本地文件，或者发起TCP或者UDP请求，相比Electron框架，理论上性能会更好。<br>
当我适配完.NET运行时，觉得应该快速适配一个UI框架，方便.NET开发者尝鲜，Avalonia目前完成度很低，还有一系列难以解决的问题，所以我想到Blazor Hybrid或许会更容易一些。<br>
跟我想的差不多，大概只用了三天的时间就完成了适配，今天跟大家分享一下。</p>
<h2 id="2-项目状态">2. 项目状态</h2>
<p>项目已完成适配，暂时没有发现明显的Bug，但是相比安卓或者iOS平台缺少原生API的包装库，只能调用C#标准库，或者通过P/Invoke特性调用HarmonyOS的原生SDK(NDK)。<br>
代码仓库: <a href="https://github.com/OpenHarmony-NET/OpenHarmony.Blazor.Hybrid" target="_blank" rel="noopener nofollow">https://github.com/OpenHarmony-NET/OpenHarmony.Blazor.Hybrid</a></p>
<p>运行截图:<br>
<img src="https://img2024.cnblogs.com/blog/1922583/202503/1922583-20250301023215912-1687173681.png" alt="" loading="lazy"></p>
<h2 id="3-使用方式">3. 使用方式</h2>
<ol>
<li>打开<code>OpenHarmony.Blazor.Hybrid.sln</code>解决方案，并发布BlazorApp项目。</li>
<li>使用Deveco Studio打开<code>OHOS_Project</code>，配置好签名后即可运行程序。</li>
</ol>
<p>另外可以通过chrome或者edge的devtools来调试手机中的webview(不包含.NET)，详情参考: <a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V13/web-debugging-with-devtools-V13" target="_blank" rel="noopener nofollow">Devtools工具 - 华为HarmonyOS文档</a></p>
<h2 id="4-适配原理">4. 适配原理</h2>
<p>Blazor和.NET交互是通过js的<code>window.external.sendMessage</code>和<code>window.external.receiveMessage</code>来实现的, 只需要在webview里实现这两个函数，然后调用<code>Blazor.start();</code>启动Blazor，这部分代码请参考：<a href="https://github.com/OpenHarmony-NET/OpenHarmony.Blazor.Hybrid/blob/main/Src/BlazorApp/wwwroot/openharmony.js" target="_blank" rel="noopener nofollow">https://github.com/OpenHarmony-NET/OpenHarmony.Blazor.Hybrid/blob/main/Src/BlazorApp/wwwroot/openharmony.js</a></p>
<p>一般Webview控件都会有原生代码与webview内的js交互的机制，HarmonyOS中是借助WebMessagePort机制实现的，关于WebMessagePort请参考官方文档: <a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V13/js-apis-webview-V13#webmessageport" target="_blank" rel="noopener nofollow">https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V13/js-apis-webview-V13#webmessageport</a></p>
<p>Blazor Hybrid内部使用了基于反射的序列化，所以要为项目开启"默认启用基于反射的序列化"，并配置rd.xml保留需要反射的元数据</p>
<p>为了保证Blazor Hybrid的异步任务可以正常的运行，需要实现一个单线程同步上下文，因为默认是多线程调度异步，而客户端往往需要单线程调度，代码: <a href="https://github.com/OpenHarmony-NET/OpenHarmony.Blazor.Hybrid/blob/main/Src/BlazorApp/OpenHarmony/BlaozrDispatcher.cs" target="_blank" rel="noopener nofollow">BlaozrDispatcher.cs</a></p>
<h2 id="参考资料">参考资料:</h2>
<ol>
<li><a href="https://github.com/tryphotino/photino.Blazor" target="_blank" rel="noopener nofollow">https://github.com/tryphotino/photino.Blazor</a></li>
<li><a href="https://github.com/JinShil/BlazorWebView" target="_blank" rel="noopener nofollow">https://github.com/JinShil/BlazorWebView</a></li>
</ol>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.9038503657662037" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-01 02:35">2025-03-01 02:34</span>&nbsp;
<a href="https://www.cnblogs.com/CeSun">布布(CeSun)</a>&nbsp;
阅读(<span id="post_view_count">208</span>)&nbsp;
评论(<span id="post_comment_count">1</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18743730" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18743730);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18743730', targetLink: 'https://www.cnblogs.com/CeSun/p/18743730', title: 'Blazor Hybrid适配到HarmonyOS系统' })">举报</a>
</div>
        