
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/deali/p/18926529" title="发布于 2025-06-13 10:01">
    <span role="heading" aria-level="2">提升Avalonia UI质感，跨平台图标库选型实践</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="前言">前言</h2>
<p>之前我写了 StarBlog 发布工具更新了版本，优化了一下界面，其中就把 emoji 表情换成了 FontAwesome 图标</p>
<p>emoji 如果只在一个系统上用（如 Windows）</p>
<p>那可能没啥问题</p>
<p>但我多个设备之间切换，就发现在 macOS 上效果不好，有些 emoji 显示得和 Windows 不一样</p>
<p>现在全部换成 Font Awesome 了，统一美观很多。感觉换图标这件事就可以单独写一篇文章了。</p>
<p>Avalonia 的生态还可以，有不同的图标库可选，本文主要介绍两个。</p>
<ul>
<li>Icon.Avalonia</li>
<li>IconPacks.Avalonia</li>
</ul>
<h2 id="iconavalonia">Icon.Avalonia</h2>
<p><a href="https://github.com/Projektanker/Icons.Avalonia" target="_blank" rel="noopener nofollow">https://github.com/Projektanker/Icons.Avalonia</a></p>
<p>这个库支持两种图标，目前 Star 数量 365</p>
<ul>
<li><a href="https://www.nuget.org/packages/Projektanker.Icons.Avalonia.FontAwesome/" target="_blank" rel="noopener nofollow">Projektanker.Icons.Avalonia.FontAwesome</a></li>
<li><a href="https://www.nuget.org/packages/Projektanker.Icons.Avalonia.MaterialDesign/" target="_blank" rel="noopener nofollow">Projektanker.Icons.Avalonia.MaterialDesign</a></li>
</ul>
<p>我在 StarBlog Publisher 工具里使用的就是这个库，用起来蛮简单的。</p>
<h3 id="安装">安装</h3>
<p>这里以 FontAwesome 为例，先添加依赖</p>
<pre><code class="language-bash">dotnet add package Projektanker.Icons.Avalonia.FontAwesome
</code></pre>
<p>在 <code>Program.BuildAvaloniaApp</code> 方法里注册</p>
<pre><code class="language-c#">public static AppBuilder BuildAvaloniaApp() {
  IconProvider.Current
    .Register&lt;FontAwesomeIconProvider&gt;();

  return AppBuilder.Configure&lt;App&gt;()
    .UsePlatformDetect()
    .LogToTrace();
}
</code></pre>
<p>在布局文件里添加命名空间</p>
<pre><code class="language-xml">xmlns:i="https://github.com/projektanker/icons.avalonia"
</code></pre>
<h3 id="使用">使用</h3>
<p>然后就可以使用图标了</p>
<h4 id="独立使用standalone">独立使用（Standalone）</h4>
<pre><code class="language-xaml">&lt;i:Icon Value="fa-brands fa-anchor" /&gt;
</code></pre>
<blockquote>
<p>独立显示一个图标。</p>
</blockquote>
<h4 id="附加到内容控件例如-buttonattached-to-contentcontrol例如按钮">附加到内容控件（例如 Button）（Attached to ContentControl，例如按钮）</h4>
<pre><code class="language-xaml">&lt;Button i:Attached.Icon="fa-brands fa-anchor" /&gt;
</code></pre>
<blockquote>
<p>将图标附加到按钮等控件中。</p>
</blockquote>
<h4 id="附加到菜单项menuitemattached-to-menuitem">附加到菜单项（MenuItem）（Attached to MenuItem）</h4>
<pre><code class="language-xaml">&lt;MenuItem Header="关于" i:MenuItem.Icon="fa-solid fa-circle-info" /&gt;
</code></pre>
<blockquote>
<p>在菜单项中添加图标，例如“关于”菜单。</p>
</blockquote>
<h4 id="自定义图标大小custom-icon-size">自定义图标大小（Custom icon size）</h4>
<pre><code class="language-xaml">&lt;i:Icon Value="fa-brands fa-anchor" FontSize="24" /&gt;
</code></pre>
<blockquote>
<p>设置图标字体大小为 24。</p>
</blockquote>
<h4 id="添加动画效果animated">添加动画效果（Animated）</h4>
<pre><code class="language-xaml">&lt;i:Icon Value="fa-spinner" Animation="Pulse" /&gt;
&lt;i:Icon Value="fa-sync" Animation="Spin" /&gt;
</code></pre>
<blockquote>
<p>为图标添加动画：</p>
<ul>
<li>
<p><code>Pulse</code>：跳动效果</p>
</li>
<li>
<p><code>Spin</code>：旋转效果</p>
</li>
</ul>
</blockquote>
<h4 id="作为图像源使用as-an-image-source">作为图像源使用（As an Image source）</h4>
<pre><code class="language-xaml">&lt;Image&gt;
  &lt;Image.Source&gt;
    &lt;i:IconImage Value="fa-brands fa-anchor" Brush="(默认为黑色)" /&gt;
  &lt;/Image.Source&gt;
&lt;/Image&gt;
</code></pre>
<blockquote>
<p>将图标作为图像显示，可通过 <code>Brush</code> 设置颜色（默认黑色）。</p>
</blockquote>
<h2 id="iconpacksavalonia">IconPacks.Avalonia</h2>
<p><a href="https://github.com/MahApps/IconPacks.Avalonia" target="_blank" rel="noopener nofollow">https://github.com/MahApps/IconPacks.Avalonia</a></p>
<p>这个库支持的图标就多了，不过很奇怪，Star 数量才 62</p>
<p>支持以下这么多图标…😂，非常丰富！</p>
<ul>
<li>BootstrapIcons</li>
<li>BoxIcons</li>
<li>CircumIcons</li>
<li>Codicons</li>
<li>Coolicons</li>
<li>Entypo</li>
<li>EvaIcons</li>
<li>FeatherIcons</li>
<li>FileIcons</li>
<li>Fontaudio</li>
<li>FontAwesome</li>
<li>Fontisto</li>
<li>ForkAwesome</li>
<li>GameIcons</li>
<li>Ionicons</li>
<li>JamIcons</li>
<li>Lucide</li>
<li>Material</li>
<li>MaterialLight</li>
<li>MaterialDesign</li>
<li>MemoryIcons</li>
<li>Microns</li>
<li>Modern</li>
<li>Octicons</li>
<li>PhosphorIcons</li>
<li>PicolIcons</li>
<li>PixelartIcons</li>
<li>RadixIcons</li>
<li>RemixIcon</li>
<li>RPGAwesome</li>
<li>SimpleIcons</li>
<li>Typicons</li>
<li>Unicons</li>
<li>VaadinIcons</li>
<li>WeatherIcons</li>
<li>Zondicons</li>
</ul>
<h3 id="安装-1">安装</h3>
<p>这里也是以 FontAwesome 为例</p>
<pre><code class="language-bash">dotnet add package IconPacks.Avalonia.FontAwesome
</code></pre>
<p>添加命名空间</p>
<pre><code class="language-xml">xmlns:iconPacks="https://github.com/MahApps/IconPacks.Avalonia"
</code></pre>
<p>注册到 Applications styles</p>
<pre><code class="language-xml">&lt;Application.Styles&gt;
  &lt;FluentTheme /&gt;

  &lt;StyleInclude Source="avares://IconPacks.Avalonia/Icons.axaml" /&gt;
  &lt;StyleInclude Source="avares://IconPacks.Avalonia.FontAwesome/Icons.axaml" /&gt;
&lt;/Application.Styles&gt;
</code></pre>
<h3 id="packicon-控件">PackIcon 控件</h3>
<p><code>PackIcon</code> 控件是使用图标包中图标的主要方式。</p>
<p>每个图标包都有各自的控件，命名格式如下：</p>
<pre><code>PackIcon&lt;包名&gt;
</code></pre>
<p>例如使用 FontAwesome 的图标：</p>
<pre><code class="language-xaml">&lt;iconPacks:PackIconFontAwesome Kind="SolidAnchor"
                               Width="24"
                               Height="24" /&gt;
</code></pre>
<p>或者：</p>
<pre><code class="language-xaml">&lt;iconPacks:PackIconFontAwesome Kind="BrandsGithub"
                               Width="24"
                               Height="24" /&gt;
</code></pre>
<h3 id="通用控件-packiconcontrol">通用控件 PackIconControl</h3>
<p><code>PackIconControl</code> 是一个通用控件，可以用来显示任何图标包中的图标。</p>
<p><strong>仅在主包 <code>IconPacks.Avalonia</code> 中可用。</strong></p>
<pre><code class="language-xaml">&lt;iconPacks:PackIconControl Kind="{x:Static iconPacks:PackIconFontAwesomeKind.SolidAnchor}"
                           Width="24"
                           Height="24" /&gt;
</code></pre>
<h3 id="packicon-标记扩展markupextensions">PackIcon 标记扩展（MarkupExtensions）</h3>
<p>更快捷的方式是使用 <code>PackIcon</code> 的标记扩展（MarkupExtension）来设置 <code>ContentControl</code> 的内容。</p>
<p>例如，你可以在 <code>Button</code> 中添加 FontAwesome 图标：</p>
<pre><code class="language-xaml">&lt;Button Content="{iconPacks:FontAwesome SolidAnchor}" /&gt;
</code></pre>
<p>或者使用参数形式：</p>
<pre><code class="language-xaml">&lt;Button Content="{iconPacks:FontAwesome Kind=SolidAnchor}" /&gt;
</code></pre>
<p>还可以设置大小：</p>
<pre><code class="language-xaml">&lt;Button Content="{iconPacks:FontAwesome SolidAnchor, Width=32, Height=32}" /&gt;
</code></pre>
<p>如果使用的是主包，还可以使用通用写法：</p>
<pre><code class="language-xaml">&lt;Button Content="{iconPacks:PackIcon {x:Static iconPacks:PackIconFontAwesomeKind.SolidAnchor}, Width=32, Height=32}" /&gt;
</code></pre>
<h3 id="packicon-图像标记扩展image-markupextensions">PackIcon 图像标记扩展（Image MarkupExtensions）</h3>
<p>还可以将图标作为图片使用：</p>
<pre><code class="language-xaml">&lt;Image Source="{iconPacks:FontAwesomeImage Kind=SolidAnchor, Brush=DarkBlue}"
       Width="24" Height="24"
       HorizontalAlignment="Left" Margin="10" /&gt;
</code></pre>
<p>也可以使用通用写法（主包中可用）：</p>
<pre><code class="language-xaml">&lt;Image Source="{iconPacks:PackIconImage Kind={x:Static iconPacks:PackIconFontAwesomeKind.SolidAnchor}, Brush=DarkOrange}"
       Width="24" Height="24"
       HorizontalAlignment="Left" Margin="10" /&gt;
</code></pre>
<h3 id="packicon-图像转换器imageconverter">PackIcon 图像转换器（ImageConverter）</h3>
<p>还可以使用图标转换器将绑定的数据转换为图标图像：</p>
<pre><code class="language-xaml">&lt;Image Source="{Binding #FontAwesomeKindComboBox.SelectedItem, Mode=OneWay, Converter={iconPacks:PackIconFontAwesomeKindToImageConverter Brush=Crimson}}"
       Width="24" Height="24"
       HorizontalAlignment="Left" Margin="10" /&gt;
</code></pre>
<p>主包中还提供了一个通用转换器：</p>
<pre><code class="language-xaml">&lt;Image Source="{Binding #FontAwesomeKindComboBox.SelectedItem, Mode=OneWay, Converter={iconPacks:PackIconKindToImageConverter Brush=Crimson}}"
       Width="24" Height="24"
       HorizontalAlignment="Left" Margin="10" /&gt;
</code></pre>
<p>如需进一步了解 FontAwesome 支持的图标类型（Solid、Regular、Brands 等），可以查看 <code>PackIconFontAwesomeKind</code> 枚举，或在 IDE 中代码补全里查看所有可用图标名称。</p>
<h3 id="图标浏览工具">图标浏览工具</h3>
<p><a href="https://github.com/MahApps/IconPacks.Browser" target="_blank" rel="noopener nofollow">https://github.com/MahApps/IconPacks.Browser</a></p>
<p>这个 IconPacks 还提供了个图标浏览器，可以很方便的搜索图标和复制代码</p>
<p>确实是非常完善了~</p>
<p>不过让我没想到的事，这个图标浏览器的Star（170+）比图标本体（60+）还多……😂</p>

</div>
<div id="MySignature" role="contentinfo">
    微信公众号：「程序设计实验室」
专注于互联网热门新技术探索与团队敏捷开发实践，包括架构设计、机器学习与数据分析算法、移动端开发、Linux、Web前后端开发等，欢迎一起探讨技术，分享学习实践经验。
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-06-13 10:01">2025-06-13 10:01</span>&nbsp;
<a href="https://www.cnblogs.com/deali">程序设计实验室</a>&nbsp;
阅读(<span id="post_view_count">27</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18926529);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18926529', targetLink: 'https://www.cnblogs.com/deali/p/18926529', title: '提升Avalonia UI质感，跨平台图标库选型实践' })">举报</a>
</div>
        