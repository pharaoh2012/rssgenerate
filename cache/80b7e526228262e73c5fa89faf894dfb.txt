
		<h1 class="postTitle">
			<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/naturl/p/18703736" title="发布于 2025-02-08 10:19">
    <span role="heading" aria-level="2">鸿蒙页面开发 -  扩展组件样式 @Extend</span>
    

</a>

		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>这篇文章介绍一个装饰器 <code>@Extend</code>，它的主要作用是：用于扩展原生组件的样式</p>
<h4 id="语法">语法</h4>
<pre><code class="language-typescript">@Extend(UIComponentName) function functionName { ... }
</code></pre>
<p><strong>定义规则：</strong></p>
<ol>
<li>UIComponentName：组件名称，例如 <code>Text</code>、<code>Button</code></li>
<li>后面必须跟 <code>function</code> 关键字</li>
<li>只能在全局定义，不支持组件内定义</li>
</ol>
<h4 id="举例">举例</h4>
<p>比如我们扩展 <code>Text</code> 组件的样式，为其添加一个默认的 <code>fontSize</code> 和 <code>fontColor</code>，如下：</p>
<pre><code class="language-typescript">@Entry
@Component
struct Index {
  build() {
    Text('碧玉妆成一树高，万条垂下绿丝绦。')
      .TextExtend()
  }
}

@Extend(Text)
function TextExtend() {
  .fontSize(20)
  .fontColor(Color.Blue)
}
</code></pre>
<p>通过上面的代码，我们就为 <code>Text</code> 组件扩展了一些样式，让其拥有了默认的字体大小和字体颜色，效果如下：</p>
<p><img src="https://img2023.cnblogs.com/blog/1289125/202502/1289125-20250208103244788-558006164.png" alt="img_1.png" loading="lazy"></p>
<p>因为<code>@Extend</code>是作用于单个组件，所以也支持组件的所有属性和事件（包括组件的私有属性），这点和 <code>@Styles</code> 不同</p>
<p>并且他 <strong>只能在全局定义</strong>，不支持组件内部定义</p>
<h4 id="extend支持传参styles不支持">@Extend支持传参（@Styles不支持）</h4>
<pre><code class="language-typescript">@Entry
@Component
struct Index {
  build() {
    Text('碧玉妆成一树高，万条垂下绿丝绦。')
      .TextExtend(22)
  }
}

@Extend(Text)
function TextExtend(fontSize: number) {
  .fontSize(fontSize)
  .fontColor(Color.Blue)
} 
</code></pre>
<h4 id="extend传的参数支持传入状态变量当变量改变时ui也会重新渲染">@Extend传的参数，支持传入状态变量，当变量改变时，UI也会重新渲染</h4>
<pre><code class="language-typescript">@Entry
@Component
struct Index {
  @State fontSize: number = 16

  build() {
    Text('碧玉妆成一树高，万条垂下绿丝绦。')
      .TextExtend(this.fontSize)
      .onClick(() =&gt; {
        this.fontSize = 24
      })
  }
}

@Extend(Text)
function TextExtend(fontSize: number) {
  .fontSize(fontSize)
  .fontColor(Color.Blue)
} 
</code></pre>
<p>效果如下：</p>
<p><img src="https://img2023.cnblogs.com/blog/1289125/202502/1289125-20250208103245252-1551765311.gif" alt="" loading="lazy"></p>
<h4 id="extend支持调用其他方法继承其他方法的属性">@Extend支持调用其他方法，继承其他方法的属性</h4>
<p>比如在 <code>TextExtend_1</code> 中定义字体的大小、颜色。在 <code>TextExtend_2</code> 定义背景颜色，并且在 <code>TextExtend_2</code> 中调用 <code>TextExtend_1</code> 方法</p>
<pre><code class="language-typescript">@Entry
@Component
struct Index {
  build() {
    Text('碧玉妆成一树高，万条垂下绿丝绦。')
      .TextExtend_2()
  }
}

@Extend(Text)
function TextExtend_1() {
  .fontSize(20)
  .fontColor(Color.Blue)
}

@Extend(Text)
function TextExtend_2() {
  .backgroundColor(Color.Gray)
  .TextExtend_1()
}
</code></pre>
<h4 id="extend装饰的方法参数可以为function作为event事件的句柄">@Extend装饰的方法，参数可以为function，作为Event事件的句柄。</h4>
<pre><code class="language-typescript">@Extend(Text) function makeMeClick(onClick: () =&gt; void) {
   .backgroundColor(Color.Blue)
   .onClick(onClick)
}

@Entry
@Component
struct FancyUse {
   @State label: string = 'Hello World';

   onClickHandler() {
      this.label = 'Hello ArkUI';
   }
   
   build() {
      Row({ space: 10 }) {
         Text(`${this.label}`)
            .makeMeClick(() =&gt; {this.onClickHandler()})
      }
   }
}
</code></pre>
<h4 id="总结">总结</h4>
<ol>
<li><code>@Extend</code> 支持组件的私有属性和私有方法。并且<strong>只能在全局定义</strong>，不支持组件内部定义 （@Styles只支持通用属性和通用方法，可以在全局定义，也可以在组件内定义）</li>
<li><code>@Extend</code> 支持传参，也可以传入状态变量，当变量改变的时候，UI也会重新渲染（@Style不支持传参）</li>
</ol>
<h4 id="最后">最后</h4>
<p>如果大家有不理解的地方可以留言，或自行阅读文档 <a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-extend-V5" target="_blank" rel="noopener nofollow">文档地址</a></p>

</div>
<div id="MySignature" role="contentinfo">
    <p>本文来自博客园，作者：<a href="https://www.cnblogs.com/naturl/" target="_blank">时光凉忆</a>，转载请注明原文链接：<a href="https://www.cnblogs.com/naturl/p/18703736" target="_blank">https://www.cnblogs.com/naturl/p/18703736</a></p>
</div>
<div class="clear"></div>

		</div>
		<div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.001536378349537037" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-08 10:38">2025-02-08 10:19</span>&nbsp;
<a href="https://www.cnblogs.com/naturl">时光凉忆</a>&nbsp;
阅读(<span id="post_view_count">9</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18703736" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18703736);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18703736', targetLink: 'https://www.cnblogs.com/naturl/p/18703736', title: '鸿蒙页面开发 -  扩展组件样式 @Extend' })">举报</a>
</div>
	