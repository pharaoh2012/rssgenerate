
	<div class="postTitle">
		<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/dnboy/p/18699666" title="发布于 2025-02-05 16:10">
    <span role="heading" aria-level="2">AI编程：Coze + Cursor实现一个思维导图的浏览器插件</span>
    

</a>

	</div>
	<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<blockquote>
<p>这是小卷对AI编程工具学习的第3篇文章，今天以实际开发一个思维导图的需求为例，了解AI编程开发的整个过程</p>
</blockquote>
<h2 id="1效果展示">1.效果展示</h2>
<p><img src="https://img2024.cnblogs.com/blog/2784584/202502/2784584-20250205160803764-1574272041.png" alt="" loading="lazy"></p>
<h2 id="2ai编程开发流程">2.AI编程开发流程</h2>
<p>虽然AI编程知识简单对话就行，不过咱要逐步深入到项目开发中，所以还需要前面的需求分析、调研等等步骤，下面是完成一个需求的流程图：</p>
<p><img src="https://img2024.cnblogs.com/blog/2784584/202502/2784584-20250205160814407-194975502.png" alt="" loading="lazy"></p>
<h2 id="3寻找思维导图coze插件">3.寻找思维导图Coze插件</h2>
<p>我们在Coze的国内站点里搜索能生成思维导图的插件，Coze官网地址：<a href="https://www.coze.cn/" target="_blank" rel="noopener nofollow">https://www.coze.cn/</a> ，这里发现TreeMind树图就可以满足我们的需求，输入文字，输出思维导图的图片：</p>
<p><img src="https://img2024.cnblogs.com/blog/2784584/202502/2784584-20250205160823382-1949457362.png" alt="" loading="lazy"></p>
<h2 id="4创建插件测试流程">4.创建插件测试流程</h2>
<p>我们在<code>工作空间 &gt; 项目开发 &gt; 创建</code>这样创建一个应用，</p>
<p><img src="https://img2024.cnblogs.com/blog/2784584/202502/2784584-20250205160833133-957639926.png" alt="" loading="lazy"></p>
<p>然后创建工作流，在工作流中<code>添加节点</code>将TreeMind插件添加进来后，再修改下输入输出的变量配置，这样一个工作流就创建好，接着可以手动测试功能是否正常</p>
<p><img src="https://img2024.cnblogs.com/blog/2784584/202502/2784584-20250205160842249-2056288775.png" alt="" loading="lazy"></p>
<p>这里我让其生成一张分布式系统的思维导图，试运行成功后得到图片的链接地址，打开后就是下面的这张图片，能满足我们的需求：</p>
<p><img src="https://img2024.cnblogs.com/blog/2784584/202502/2784584-20250205160852020-24701301.png" alt="" loading="lazy"></p>
<p>接下来我们将整个流程发布上线，后续的开发编程过程就可以用到了。</p>
<p>点击<code>发布</code>按钮，然后发布时选上API</p>
<h2 id="5api参数获取">5.API参数获取</h2>
<p>Coze API的使用是有限制和计费的，基础版本的账户每月只有<strong>100次调用机会</strong>，超过后需要升级成专业版才能付费使用，</p>
<p>Coze API官方文档介绍地址：<a href="https://www.coze.cn/open/docs/developer_guides/coze_api_overview" target="_blank" rel="noopener nofollow">https://www.coze.cn/open/docs/developer_guides/coze_api_overview</a></p>
<p>API调用工作流文档地址：<a href="https://www.coze.cn/open/docs/developer_guides/workflow_run" target="_blank" rel="noopener nofollow">https://www.coze.cn/open/docs/developer_guides/workflow_run</a></p>
<h3 id="51个人访问令牌">5.1个人访问令牌</h3>
<p>地址：<a href="https://www.coze.cn/open/oauth/pats" target="_blank" rel="noopener nofollow">https://www.coze.cn/open/oauth/pats</a></p>
<p>自行手动创建一个，然后把token拷贝下来，注意只有第一次创建的时候才能看到token</p>
<h3 id="52-workflow-id和app_id的获取">5.2 workflow id和app_id的获取</h3>
<p>打开应用工作流编辑页面，点击工作流，在浏览器的地址栏里<code>project-ide</code>后面跟的数字就是<code>app_id</code>，而<code>workflow</code>后面的那串数字就是<code>workflow_id</code></p>
<p><img src="https://img2024.cnblogs.com/blog/2784584/202502/2784584-20250205160904568-1319272757.png" alt="" loading="lazy"></p>
<h3 id="53-在线测试api">5.3 在线测试API</h3>
<p>我们通过在线测试普通Apifox来测试接口，地址：<a href="https://app.apifox.com/" target="_blank" rel="noopener nofollow">https://app.apifox.com/</a></p>
<p>可以将工作流API文档里的示例拷贝出来，在Apifox中选择<code>导入cURL</code>的方式新建一个请求，修改对应的参数为自己创建的应用参数，就可以请求执行了，下面是我的请求示例，大家可以自行参考：</p>
<pre><code class="language-shell">curl --location --request POST 'https://api.coze.cn/v1/workflow/run' \
--header 'Authorization: Bearer pat_npmd******' \
--header 'Content-Type: application/json' \
--data-raw '{
    "workflow_id": "746*****6370",
    "parameters": {
        "input": "生成分布式系统的思维导图"
    },
    "app_id": "74663******692927",
    "is_async": false
}'
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/2784584/202502/2784584-20250205160915158-451168729.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/2784584/202502/2784584-20250205160923812-860921624.png" alt="" loading="lazy"></p>
<h2 id="6-cursor编程集成coze插件">6. Cursor编程集成Coze插件</h2>
<p>为了开发生成思维导图的浏览器插件，我们开始逐步操作，第一步，先生成插件的基础框架：</p>
<pre><code class="language-shell">## 用户故事
用户选中文字，可以显示浮动按钮“生成思维导图”，点击后弹出右侧窗口，显示对应的文字

# 注意：
1.使用manifest v3版本开发
2.注意中文编码问题

# 任务
请按照用户故事和注意点帮我开发谷歌插件
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/2784584/202502/2784584-20250205160934233-1076835492.png" alt="" loading="lazy"></p>
<p>接着生成侧边栏的功能</p>
<pre><code class="language-shell">继续侧边栏的实现：
1.创建一个侧边栏的HTML页面
2.实现在background.js中打开侧边栏的逻辑
3.添加侧边栏的样式
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/2784584/202502/2784584-20250205160942088-768624772.png" alt="" loading="lazy"></p>
<p>可能会出现一些bug问题，我们把bug发给cursor后继续修改完善，下面是框架的效果图，可以看到已经满足我们的需要了，然后可以进行下一步操作了</p>
<p><img src="https://img2024.cnblogs.com/blog/2784584/202502/2784584-20250205160950470-684213645.png" alt="" loading="lazy"></p>
<h3 id="61-整合coze-api">6.1 整合coze API</h3>
<p>基于现有代码，现在我们需要整合Coze的API，建议提前把已有功能告诉Cursor，这样也能更好地理解代码背景。输入提示词示例，可结合个人实际情况调整：</p>
<pre><code class="language-shell"># 目的
用户需求是基于网页选中的内容生成一个思维导图
# 用户故事
用户在网页上选中一段文字，点击浮动按钮，可以生成思维导图的图片，在侧边栏展示
# 生成思维导图的接口
## curl请求的代码
curl --location --request POST 'https://api.coze.cn/v1/workflow/run' \
--header 'Authorization: Bearer 替换为自己的' \
--header 'Content-Type: application/json' \
--data-raw '{
    "workflow_id": "替换为自己的",
    "parameters": {
        "input": "生成分布式系统的思维导图"
    },
    "app_id": "替换为自己的APP_ID"
}'

## 请求参数说明
1. parameters下面的input：网页选中内容

## 返回数据
{
    "code": 0,
    "cost": "0",
    "data": "{\"output\":\"https://static.shutu.cn/shutu/jpeg/opence/2025/02/04/77b63eae2ea61d3******223.jpeg\"}",
    "debug_url": "https://www.coze.cn/work_flow?execute_id=7467838*******",
    "msg": "Success",
    "token": 0
}

## 返回参数说明
1. data下的output为思维导图的图片地址
2.code 状态码，不是0代表出差
3. msg 返回信息

# 注意
1. 注意使用manifest v3版本开发
2. 注意中文编码问题

# 任务
根据 用户故事 和提供的 生成思维导图接口，以及相关注意点，请优化当前谷歌插件
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/2784584/202502/2784584-20250205161000472-1524188530.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/2784584/202502/2784584-20250205161008746-1358195954.png" alt="" loading="lazy"></p>
<p>最终效果已满足用户需求了！！！</p>
<p>剩下的比如图标不好看等等问题可以自行调整</p>
<h2 id="6总结">6.总结</h2>
<p>今天通过一个实际需求，了解了AI编程的整个开发流程，相信看到最后的读者也能自行学会AI编程。</p>
<p>在AI时代，以后的程序员可能不必再执着于从零开始写代码，学会借助现有工具，运用自己的创意，懂得站在巨人肩膀上，总能看得更远，走得更快</p>

</div>
<div class="clear"></div>

	<div class="postDesc">posted on 
<span id="post-date" data-last-update-days="0.00808325296875" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-05 16:10">2025-02-05 16:10</span>&nbsp;
<a href="https://www.cnblogs.com/dnboy">卷福同学</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18699666" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18699666);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18699666', targetLink: 'https://www.cnblogs.com/dnboy/p/18699666', title: 'AI编程：Coze + Cursor实现一个思维导图的浏览器插件' })">举报</a>
</div>
