
        <div class="postTitle">
            <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/mysticbinary/p/18684463" title="发布于 2025-01-22 16:06">
    <span role="heading" aria-level="2">其他对称密码类型应用介绍</span>
    

</a>

        </div>
        <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p></p><div class="toc"><div class="toc-container-header">目录</div><ul><li><a href="#可搜索加密" rel="noopener nofollow">可搜索加密</a></li><li><a href="#保留格式加密" rel="noopener nofollow">保留格式加密</a></li><li><a href="#reference" rel="noopener nofollow">Reference</a></li></ul></div><p></p>
<hr>
<p>主流的对称密码类型就是：DES、AES....，下面介绍一些其他类型。</p>
<h1 id="可搜索加密">可搜索加密</h1>
<p><strong>需求背景：</strong><br>
现在隐私泄露问题备受关注，大家都希望自己的信息以密文的形式上云，而不是以明文的形式上云。<br>
但是这就会有个问题，<strong>如果需要对加密数据进行搜索，那怎么办？</strong> 总不能把云上所有的加密数据都下载下来，然后对其一一解密，再进行搜索吧。如果真是这样，效率显然会很低。因此，可搜索加密技术应运而生。</p>
<p><strong>什么是可搜索加密技术？</strong><br>
可搜索加密技术是搜索技术和加密技术的结合。可搜索加密能够实现将用户的数据进行特殊的加密后上传到云服务器上, 并且可以实现根据关键字进行检索的功能, 有些可搜索加密方案更能实现范围查询或布尔查询等高级检索功能。在方便用户使用的过程中, 也保护了文件的隐私安全。</p>
<p><strong>分类：</strong><br>
可搜索加密技术一般分为：</p>
<ul>
<li>
<p>对称可搜索加密(Searchable Symmetric Encryption, SSE)</p>
</li>
<li>
<p>非对称可搜索加密(Asymmetric Searchable Encryption, ASE)，非对称可搜索加密目前一般又称为公钥可搜索加密(Public Key Encryption With Searching, PEKS)。（简单的提起，下文不做介绍）</p>
</li>
</ul>
<p>两者有不同的应用场景和构造方式，对称可搜索加密一般考虑单用户使用的情况, 相当于建立个人加密云盘, 依赖对称加密算法进行方案构造。</p>
<p>公钥可搜索加密一般考虑多用户使用的场景例如邮件系统或者多人文件共享系统, 主要依赖公钥加密算法进行构造。</p>
<p><strong>步骤：</strong><br>
对称可搜索加密过程简化为归为以下 4 个步骤:</p>
<ul>
<li>步骤 1. 建立和密钥生成过程: 用户对文件集合进行某种特殊加密后上传至服务器并生成密钥和加密数据库;</li>
<li>步骤 2. 陷门生成过程: 用户根据密钥和将要检索的内容生成特定陷门, 分为生成检索陷门和生成更新陷门, 并都上传给服务器;</li>
<li>步骤 3. 检索过程: 用户提交陷门, 由服务器根据陷门对加密数据库进行安全搜索和返回结果, 用户收到密文后解密得到最终结果;</li>
<li>步骤 4. 更新过程: 对于支持动态更新的可搜索加密, 可以通过将加密文件和更新陷门上传到服务器进行文件添加或删除操作, 注意添加操作和删除操作是区分开来的。</li>
</ul>
<p><strong>实际案例：</strong><br>
假设你在使用一个加密云存储服务：</p>
<ol>
<li>
<p><strong>上传文件</strong>：</p>
<ul>
<li>文件1 包含关键词“合同”。</li>
<li>文件2 包含关键词“合同”和“发票”。</li>
<li>你生成加密索引：<br>
<span class="math inline">\(
\begin{cases}
H(K, \text{“合同”}) = \text{a1b2c3d4} \rightarrow [\text{文件1}, \text{文件2}] \\
H(K, \text{“发票”}) = \text{e5f6g7h8} \rightarrow [\text{文件2}]
\end{cases}
\)</span></li>
<li>上传加密文件和加密索引到服务器。</li>
</ul>
</li>
<li>
<p><strong>搜索文件</strong>：</p>
<ul>
<li>你想搜索包含“合同”的文件，生成陷门 $ \ T = H(K, \text{“合同”}) = \text{a1b2c3d4}  $。</li>
<li>服务器用 $\ T $ 匹配加密索引，找到 <code>a1b2c3d4</code> 对应的文件列表 <code>[文件1, 文件2]</code>。</li>
<li>服务器返回加密的<code>文件1</code>和<code>文件2</code>。</li>
</ul>
</li>
<li>
<p><strong>解密文件</strong>：</p>
<ul>
<li>你下载加密文件（<code>文件1</code>和<code>文件2</code>），用密钥 $\ K \ $ 解密查看内容。</li>
</ul>
</li>
</ol>
<h1 id="保留格式加密">保留格式加密</h1>
<p><strong>定义：</strong><br>
保留格式加密是一种现代加密技术，确保加密后的密文与原始明文<strong>格式完全一致</strong>（如长度、字符类型）。例如，加密信用卡号后，密文仍是16位数字。</p>
<p>保留格式加密（FPE）和古代的凯撒加密有点类似，但FPE是一种现代加密技术，其核心目标是加密后的密文与明文格式完全一致（如长度、字符类型）。FPE的加密过程比凯撒加密复杂得多，通常基于分组加密算法（如AES）和特定的模式（如FF1、FF3）。</p>
<p><strong>好处：</strong><br>
可以<strong>确保加密数据安全的同时仍然可用并与处理它的系统兼容</strong>。因此，它在原始数据的格式和长度至关重要的场景中非常有用，例如数据库、应用程序或具有特定数据输入要求的系统。</p>
<p><strong>核心原理</strong><br>
FPE的加密过程比凯撒加密复杂得多，通常基于分组加密算法（如AES）和特定的模式（如FF1、FF3）。</p>
<ul>
<li><strong>格式约束</strong>：加密算法根据明文格式（如数字、字母、日期）动态调整加密过程。</li>
<li><strong>分块加密</strong>：将数据分块后，用特定模式（如FF1、FF3模式）加密，确保输出格式一致。</li>
<li><strong>密钥派生</strong>：通过密钥和格式规则生成中间密钥，控制加密结果。</li>
</ul>
<p><strong>常见标准</strong></p>
<ul>
<li><strong>NIST标准</strong>：FF1（AES-based）、FF3-1（改进版FF3），支持数字、字母等格式。<br>
<strong>例子</strong>：
<ul>
<li>明文：<code>4111 1111 1111 1111</code>（信用卡号）</li>
<li>密文：<code>3569 2354 8234 5678</code>（格式相同，但数值随机化）。</li>
</ul>
</li>
</ul>
<p><strong>应用场景</strong></p>
<ul>
<li>
<p>支付卡数据加密（PCI-DSS合规要求）。<br>
例子：<code>4111 1111 1111 1111</code> → <code>3569 2354 8234 5678</code>。</p>
</li>
<li>
<p>数据库字段加密（如加密身份证号，保持数字格式）。<br>
例子：<code>310105199001011234</code> → <code>510203198912345678</code>。</p>
</li>
<li>
<p>日志脱敏（加密日志中的敏感信息，不影响日志分析工具）。<br>
例子：UserID: <code>12345</code> → UserID: <code>67890</code>。</p>
</li>
</ul>
<p><strong>局限性</strong></p>
<ul>
<li>安全性弱于传统加密（因格式限制，密钥空间可能缩小）。</li>
<li>实现复杂度高，需严格遵循标准（如FF1/FF3）。</li>
</ul>
<h1 id="reference">Reference</h1>
<p><a href="https://www.cnblogs.com/shirleyya/p/15024342.html" target="_blank">https://www.cnblogs.com/shirleyya/p/15024342.html</a><br>
可搜索加密技术 - 学习笔记（一）</p>

</div>
<div class="clear"></div>

        <div class="postDesc">posted on 
<span id="post-date" data-last-update-days="0.30457920477314815" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-22 17:01">2025-01-22 16:06</span>&nbsp;
<a href="https://www.cnblogs.com/mysticbinary">Mysticbinary</a>&nbsp;
阅读(<span id="post_view_count">81</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18684463" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18684463);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18684463', targetLink: 'https://www.cnblogs.com/mysticbinary/p/18684463', title: '其他对称密码类型应用介绍' })">举报</a>
</div>
    