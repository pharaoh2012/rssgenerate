
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/morec/p/18756805" title="发布于 2025-03-06 23:49">
    <span role="heading" aria-level="2">netcore后台服务慎用BackgroundService</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>在 .NET Core 开发中，<code data-start="81" data-end="100">BackgroundService</code> 是一个非常方便的后台任务运行方式，但它并不适用于所有场景。</p>
<p><code data-start="81" data-end="100">BackgroundService</code>&nbsp;一时爽，并发火葬场。</p>
<p data-start="879" data-end="925"><code data-start="879" data-end="898">BackgroundService</code> 适用于单实例的无状态后台任务，例如：</p>
<ul data-start="926" data-end="1005">
<li data-start="926" data-end="951">定期清理任务（删除过期数据、日志清理）</li>
<li data-start="952" data-end="976">轻量级定时任务（如定期检查某些状态）</li>
<li data-start="977" data-end="1005">简单的队列消费者（从内存队列读取并处理数据）</li>
</ul>
<p data-start="1051" data-end="1123">虽然 <code data-start="1054" data-end="1073">BackgroundService</code> 很方便，但在 分布式环境 或 Kubernetes 部署 时，它可能带来一些问题：</p>
<ul data-start="1124" data-end="1326">
<li data-start="1124" data-end="1200">多实例竞争：如果应用部署在多个 Pod 中，每个 Pod 都会运行 <code data-start="1164" data-end="1183">BackgroundService</code>，可能会导致任务重复执行。</li>
<li data-start="1201" data-end="1253">任务持久性问题：<code data-start="1215" data-end="1234">BackgroundService</code> 进程崩溃时，未完成的任务可能会丢失。</li>
<li data-start="1254" data-end="1326">任务锁管理复杂：如果 <code data-start="1271" data-end="1290">BackgroundService</code> 需要一个“全局锁”来防止多个实例同时执行任务，你需要额外实现分布式锁。</li>
</ul>
<p>&nbsp;</p>
<p>假如你的项目有多开服务，这个在K8S中是非常常见的，其他负载均衡组件包括nginx都有这功能，它会分发你的请求，可以不用考虑接口的并发问题，但是后台服务并不会。</p>
<p>所以传统的Quartz.NET可替代，当然不怕麻烦的话可以使用redis分布式锁,Kubernetes Lease等机制也可以实现。</p>
<p>&nbsp;</p>
<h3 data-start="4972" data-end="4985">总结</h3>
<ul data-start="4986" data-end="5144">
<li data-start="4986" data-end="5028">如果是单实例任务，<code data-start="4999" data-end="5018">BackgroundService</code> 可以使用。</li>
<li data-start="5029" data-end="5098">如果是 Kubernetes 多实例，建议使用 Quartz.NET 或分布式锁（如 Kubernetes Lease）。</li>
<li data-start="5099" data-end="5144">如果任务需要高并发，建议用消息队列（如 RabbitMQ, Kafka）。</li>
</ul>
</div>
<div id="MySignature" role="contentinfo">
    <a href="https://github.com/liuzhixin405"><img loading="lazy" width="149" height="149" src="https://github.blog/wp-content/uploads/2008/12/forkme_left_darkblue_121621.png?resize=149%2C149" class="attachment-full size-full" alt="Fork me on GitHub" data-recalc-dims="1"></a>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.5203383226273148" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-06 23:50">2025-03-06 23:49</span>&nbsp;
<a href="https://www.cnblogs.com/morec">星仔007</a>&nbsp;
阅读(<span id="post_view_count">356</span>)&nbsp;
评论(<span id="post_comment_count">10</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18756805" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18756805);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18756805', targetLink: 'https://www.cnblogs.com/morec/p/18756805', title: 'netcore后台服务慎用BackgroundService' })">举报</a>
</div>
        