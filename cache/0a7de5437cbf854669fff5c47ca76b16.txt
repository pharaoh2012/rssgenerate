
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/yclh/p/19001370" title="发布于 2025-07-23 19:30">
    <span role="heading" aria-level="2">java请求http服务-参数是@RequestBody String  resultJson 类型</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>当对方的接口参数是@RequestBody类型时如何调用。</p>
<p>&nbsp;</p>
<p>1、对方controller接口写发如下：</p>
<div class="cnblogs_Highlighter">
<pre class="brush:java;gutter:true;"> @PostMapping(value = "/test")
    @ResponseBody
    public StringresultBack(@RequestBody String  resultJson) {
        return  "helloWorld";
    }
</pre>
</div>
<p>2、Apipost的调用方式如下：</p>
<p><img alt="" data-src="https://img2024.cnblogs.com/blog/2379975/202507/2379975-20250723192511797-1249920973.png" class="lazyload"></p>
<p>3、用java代码调用对方接口方法</p>
<p>（1）引入依赖</p>
<div class="cnblogs_Highlighter">
<pre class="brush:bash;gutter:true;">&lt;dependency&gt;
    &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;
    &lt;artifactId&gt;httpcore&lt;/artifactId&gt;
    &lt;version&gt;4.4.10&lt;/version&gt;
&lt;/dependency&gt;
  
&lt;dependency&gt;
    &lt;groupId&gt;commons-httpclient&lt;/groupId&gt;
    &lt;artifactId&gt;commons-httpclient&lt;/artifactId&gt;
    &lt;version&gt;3.1&lt;/version&gt;
&lt;/dependency&gt;
  
&lt;dependency&gt;
    &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;
    &lt;artifactId&gt;httpclient&lt;/artifactId&gt;
    &lt;version&gt;4.5.6&lt;/version&gt;
&lt;/dependency&gt;
</pre>
</div>
<p>&nbsp;（2）调用方法</p>
<div class="cnblogs_Highlighter">
<pre class="brush:java;gutter:true;"> /**
     * @param httpUrl 请求的url
     * @param jsonParam 原始JSON字符串参数
     * @return 响应结果
     */
    public String doPostJson(String httpUrl, String jsonParam) {
        HttpURLConnection connection = null;
        InputStream is = null;
        OutputStream os = null;
        BufferedReader br = null;
        String result = null;
        try {
            URL url = new URL(httpUrl);
            // 通过远程url连接对象打开连接
            connection = (HttpURLConnection) url.openConnection();
            // 设置连接请求方式
            connection.setRequestMethod("POST");
            // 设置连接主机服务器超时时间：15000毫秒
            connection.setConnectTimeout(15000);
            // 设置读取主机服务器返回数据超时时间：60000毫秒
            connection.setReadTimeout(60000);

            // 允许向服务器输出数据
            connection.setDoOutput(true);
            // 允许从服务器读取数据
            connection.setDoInput(true);

            // 设置Content-Type为application/json
            connection.setRequestProperty("Content-Type", "application/json;charset=UTF-8");

            // 如果需要设置其他请求头，如Authorization，可以在这里添加
            // connection.setRequestProperty("Authorization", "Bearer your_token_here");

            // 检查JSON参数是否为空
            if (jsonParam == null || jsonParam.trim().isEmpty()) {
                throw new IllegalArgumentException("JSON参数不能为空");
            }

            // 通过连接对象获取一个输出流
            os = connection.getOutputStream();
            // 写入JSON参数，指定UTF-8编码
            os.write(jsonParam.getBytes("UTF-8"));
            os.flush();

            // 检查响应状态码
            int responseCode = connection.getResponseCode();
            if (responseCode == 200) {
                is = connection.getInputStream();
            } else {
                // 非200状态码使用错误流
                is = connection.getErrorStream();
            }

            // 处理响应流
            if (is != null) {
                br = new BufferedReader(new InputStreamReader(is, "UTF-8"));
                StringBuffer sbf = new StringBuffer();
                String temp;
                while ((temp = br.readLine()) != null) {
                    sbf.append(temp);
                }
                result = responseCode == 200 ? sbf.toString() :
                        "Error (code: " + responseCode + "): " + sbf.toString();
            } else {
                result = "No response from server, code: " + responseCode;
            }
        } catch (MalformedURLException e) {
            e.printStackTrace();
            result = "URL格式错误: " + e.getMessage();
        } catch (IllegalArgumentException e) {
            e.printStackTrace();
            result = "参数错误: " + e.getMessage();
        } catch (IOException e) {
            e.printStackTrace();
            result = "IO异常: " + e.getMessage();
        } finally {
            // 关闭资源
            if (br != null) {
                try {
                    br.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            if (os != null) {
                try {
                    os.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            if (is != null) {
                try {
                    is.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            // 断开连接
            if (connection != null) {
                connection.disconnect();
            }
        }
        return result;
    }
</pre>
</div>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-23 19:31">2025-07-23 19:30</span>&nbsp;
<a href="https://www.cnblogs.com/yclh">万笑佛</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19001370);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19001370', targetLink: 'https://www.cnblogs.com/yclh/p/19001370', title: 'java请求http服务-参数是@RequestBody String  resultJson 类型' })">举报</a>
</div>
        