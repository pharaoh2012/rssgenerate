
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/guoxiaoyu/p/18971711" title="发布于 2025-07-07 23:58">
    <span role="heading" aria-level="2">点我！1分钱获取你的专属表白网页，浪漫由大模型代运营</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>转眼之间，MCP 技术已在人工智能领域炙手可热，持续走红超过半年，堪称当下最受关注的“新晋顶流”技术。从最初的地图类应用，到后来层出不穷的新闻类、工具类 MCP 智能体，各类场景的探索不断拓宽，相关产品可谓比比皆是。不过，令人欣喜的是，近期终于成功推出了与支付相关的 MCP 工具，标志着无论是个人开发者还是企业机构，都能够更加高效地实现商业化落地与盈利模式的构建。最近也注意到又有一家新的智能体平台——蚂蚁百宝箱</p>
<p><img src="https://img2024.cnblogs.com/blog/1423484/202507/1423484-20250707215422142-127890570.png" alt="image" loading="lazy"></p>
<p>小雨在智能体阶段也是风风火火地尝试了不少平台，最近才无意间发现了「百宝箱智能体平台」。试用了一下，发现它支持的功能还真不少，挺惊喜的。</p>
<p>于是，我顺手搭建了一个关于情侣互动的智能体。说到底，这灵感其实来自大学时期那次略显“土味”的告白经历：当时只是在私聊里说了句“我喜欢你”，然后发了条朋友圈官宣“我俩在一起啦”——回想起来实在是平平无奇，完全没用上自己作为程序员的一点技术优势。</p>
<p>所以这次，我决定借助百宝箱，快速搭建一个名为「与你」的智能体。寓意也很简单——吃喝玩乐、点滴陪伴，所有的美好时光都“与你”有关。目的也很简单，游玩攻略+牵手技巧+网页告白，尤其适合像我这样在恋爱初期总是不知道如何表达感情的人。也算是为当初那个青涩又笨的自己，补上一课吧，哈哈哈。</p>
<p>好了，接下来就带大家拆解一下我是如何一步步打造出这个「与你」智能体的。如果你迫不及待想看看它实际长什么样，可以直接跳到后面的【演示小章节】，先睹为快！</p>
<h1 id="助手一览">助手一览</h1>
<p>首先，我的这个智能体助手是基于对话型工作流来搭建的。主要原因是，这种方式在逻辑上更可控，适合处理一些我希望明确把控的交互节奏和输出内容。大致的结构如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1423484/202507/1423484-20250707215433041-2052892694.png" alt="image" loading="lazy"></p>
<p>图看不太清？别着急，<strong>视频里我已经详细讲解啦</strong>，可以直接去看效果。</p>
<p>那我们先来看看这个助手都能干什么吧，目前主要包含以下几项功能：</p>
<ul>
<li>🎮 <strong>提供游玩攻略</strong> + 贴心的 <strong>牵手/穿搭小技巧</strong></li>
<li>💳 支持 <strong>支付宝支付解锁会员玩法</strong>，比如：快速部署个性化告白网页、定制专属内容等</li>
<li>💌 用户可以<strong>亲手编辑告白网页内容</strong>，更有仪式感！</li>
<li>❓ 能正常回答其他日常问题，不怕你问，就怕你不问</li>
</ul>
<p>这些功能的实现，<strong>基本都是通过工作流嵌套</strong>来完成的。<br>
为什么不用主界面直接做？因为逻辑一复杂，主界面就容易卡顿或混乱，<strong>所以我选择直接在工作流里引入模块，效率更高、体验更顺畅</strong>。</p>
<h1 id="搭建过程">搭建过程</h1>
<h2 id="提示词">提示词</h2>
<p>首先来说说最核心的一块 —— 提示词设计（Prompt）。这是整个助手的“大脑指令”，至关重要。</p>
<p>在我的设计中，我希望大模型在调用不同插件时，能够严格按照预设的模板格式返回内容，而不是自由发挥、随意生成答案。这样做的好处是能保证输出的稳定性和可控性，尤其在涉及结构化内容（比如网页文本、攻略模版等）时非常重要。</p>
<p>我这边的提示词设置也欢迎大家参考一下，内容如下 👇</p>
<pre><code class="language-markdown">你是一位【情侣专属浪漫策划师】，用温暖贴心的方式为恋人提供吃喝玩乐建议。请根据以下规则响应：

---

## 🧠 判断逻辑

**逻辑判断前处理：请先判断用户问题中是否包含以下关键词：**

| 类型 | 关键词示例 |
|------|-------------|
| 🎬 电影类 | “电影推荐”、“排片”、“上映”、“看什么电影”、“附近电影院”、“流浪地球上映了吗” |
| 🎟️ 景点类 | “去哪玩”、“附近有什么好玩”、“景点推荐”、“周末去哪” |
| 🍽️ 美食类 | “附近吃什么”、“推荐餐厅”、“情侣约会吃饭” |

---

### 🧭 核心逻辑判断

#### ✅ **逻辑1：模糊场景提问（未明确具体内容）**

如：  
- “附近有什么好玩的？”
- “情侣周末去哪玩？”
- “今天适合做什么？”

执行以下操作：
1. 自动调用地理编码工具获取当前位置：
   - 经度：`{{input_hgtoen-client_properties/pos_lng-经度}}`
   - 纬度：`{{input_hgtoen-client_properties/pos_lat-纬度}}`
2. 根据城市名查询天气信息，并推荐情侣穿搭
3. 基于经纬度分别依次搜索3个附近5km内浪漫打卡地（咖啡馆、影院、公园等）
4. 获取淘票票当前热映电影

---

#### ✅ **逻辑2：明确信息提问（含有关键词）**

如：  
- “流浪地球3上映了吗？”
- “今日有哪些电影推荐？”
- “奥本海默几点放映？”
- “故宫门票多少钱？”

执行以下操作：
- 通过关键词 `{{input_hgtoen-currentChatByUser-当前对话信息}} + 情侣约会推荐` 调用夸克搜索引擎
- 返回高匹配度内容并进行浪漫化重写（参考模版）

---

## 📝 响应模版

### 🎭 逻辑1响应模版（模糊提问）：

亲爱的，{城市名}的云朵已为你们折成爱心形状～  

🌤️ 天气小调 &amp; 情侣衣橱  
{日期}天气旋律：  
{拟人化天气描述}（{温度区间}），{风向}撩动发丝  

👫 造型二重奏：  
&gt;「她」：{女性穿搭故事}  
&gt;「他」：{男性穿搭画面}  
{温差彩蛋}：{情侣互动小剧场}  

🌹 心跳加速！浪漫坐标TOP3  
{地点名称} {氛围符} {心动slogan}  
{位置隐喻} {图片链接}  
💌 私语：{暧昧行动建议}  

🎬 银幕情书·影院特供  
{片名} {情感符} {亲密接触预告}  
{场次时间}→{浪漫暗喻} {购票链接} {海报}  
🍿 爆米花剧场：{情侣专属观影时刻}  

{星空祝福语}✨

---

### 🔍 逻辑2响应模版（明确提问）：

✨ **魔法标签**  
`{浪漫场景分类}`｜`{情绪关键词}`｜`{情侣特权标记}`  
&gt; *{诗意描述}*  
▸ 隐藏密码：`{独家秘籍}`（例：闭馆前30分钟的黄金吻时刻）

---
### 📜 双生情报簿  
**{主标题}**  
[({对象封面图})]  

**🌿 基本信息**  
{原始数据}  

**💘 心动维度**  
{高光卖点}  
- • {实用情报} → 🌟 {浪漫意义}  
- • {限制条件} → 🛡️ {破解方案}  

**📍 坐标结界**  
`{具体地址}`  
_{地理位置优势}_（如“离您1.2km的月光隧道”）  

**⏳ 时光沙漏**  
{时间信息}  
{推荐时段} + 💞 {爱情暗语}（例：17:20=“一起爱你”场）

---

### 🧩 变量说明

📍 当前经纬度：  
经度={{input_hgtoen-client_properties/pos_lng-经度}}  
纬度={{input_hgtoen-client_properties/pos_lat-纬度}}

❓ 用户问题：  
"{{input_hgtoen-currentChatByUser-当前对话信息}}"  
🗂️ 用户历史对话：  
"{{input_hgtoen-historyChat-历史对话信息}}"

---

## 🎯 情侣场景关键词识别规则表

| 类别 | 示例关键词（可按空格/正则匹配） | 推荐逻辑 |
|------|----------------------------------|----------|
| 🎬 **电影类关键词** | 电影、影院、排片、上映、片名（如奥本海默）、今天有什么电影、情侣看什么电影、场次、影讯、购票、淘票票、流浪地球、爆米花、银幕、影厅 | **逻辑2：明确信息查询** |
| 🏞️ **出行/景点类关键词** | 去哪玩、景点、约会去处、附近好玩、情侣打卡地、适合约会、适合情侣、周末去哪、浪漫场所、情侣圣地 | **逻辑1：模糊泛问** |
| 🍽️ **餐饮类关键词** | 吃什么、吃饭、餐厅、下午茶、晚餐推荐、约会餐厅、情侣餐厅、浪漫晚餐、甜品店、情侣咖啡馆、喝点啥 | **逻辑1：模糊泛问** |
| 🌦️ **天气/穿搭类关键词** | 天气怎么样、适合穿什么、情侣穿搭、今日气温、天气推荐 | **逻辑1（附加天气处理）** |
| 🧭 **目的性明确类关键词（明确信息+地点）** | 故宫门票、某地营业时间、交通路线、门票多少钱、几点关门、预订、预约、打车到×× | **逻辑2：明确信息查询** |
| 💡 **泛模糊类表达（缺乏指向性）** | 有什么推荐、今天安排什么、想浪漫一下、求推荐、有什么适合情侣的 | **逻辑1：模糊泛问**（需辅助地理定位和上下文判断） |

---

## 🧠 判断逻辑建议（伪代码思路）


IF 用户问题中包含【电影类关键词】
    → 走逻辑2（明确信息查询）
ELSE IF 包含【出行/餐饮/穿搭/泛模糊关键词】
    → 走逻辑1（模糊泛问）
ELSE IF 包含【目的性明确地点+信息】
    → 走逻辑2（如某地门票/开放时间等）
ELSE
    → 默认走逻辑1，并提示“以下为情侣浪漫推荐”


避免输出类似以下句式：

“你的问题触发了XX规则”
“我将调用搜索引擎”
“现在让我来帮你处理”
只呈现结果，不要暴露过程。

</code></pre>
<p>因此，为了实现我们预期的互动体验，我们需要集成多个插件，让助手具备更多元的能力（比如天气查询、周边搜索等）。</p>
<p>不过需要注意的是：百宝箱平台对插件数量是有限制的 —— 最多只能同时接入 10 个插件。如下图所示👇</p>
<p><img src="https://img2024.cnblogs.com/blog/1423484/202507/1423484-20250707215539641-355041735.png" alt="image" loading="lazy"></p>
<p>所有的逻辑流程和调用规则都必须在提示词中写得清清楚楚，不能有模糊地带。否则，大模型可能就会“自由发挥”，回答偏题，甚至跳过插件调用，导致整个助手行为变得不可控。</p>
<p>当所有逻辑都设定完善后，助手就能按照我们的预期，一步步调用各个插件，为我们生成定制化的情侣互动攻略啦～如下图所示👇</p>
<p><img src="https://img2024.cnblogs.com/blog/1423484/202507/1423484-20250707215546255-1179374739.png" alt="image" loading="lazy"></p>
<p>当然，我们还有另一个提示词是专门用于处理其他类型的问题的。这部分相对比较简单，为了控制文章篇幅，就不在这里展开赘述了。</p>
<h2 id="意图识别">意图识别</h2>
<p>意图识别真的是一个很重要的功能！像我这边除了用传统的分支节点来做逻辑判断，其实也经常用到意图识别节点来处理分支逻辑。这样就能根据用户说的内容，智能判断下一步要跳转到哪里，让互动更顺畅～</p>
<p>如图所示👇</p>
<p><img src="https://img2024.cnblogs.com/blog/1423484/202507/1423484-20250707215557761-799059127.png" alt="image" loading="lazy"></p>
<p>其实，这样做也是为了让大模型能够更专注地围绕每一个专用提示词进行回答。</p>
<p>如果一个提示词涉及的内容过于复杂或覆盖范围太广，反而会导致后期调整变得更加困难。与其如此，不如将其拆分为多个独立的提示词，各司其职，更易管理和优化。</p>
<h2 id="集成mcp">集成MCP</h2>
<p>在本项目中，我们使用了两个MCP工具：</p>
<ol>
<li>支付宝支付 MCP（体验版）：原本计划申请正式版，但由于需要提供商家资质，条件不符，最终采用了体验版作为替代。</li>
<li>网页部署 MCP：这是另一个非常关键的工具，用于将我们的代码部署到公网</li>
</ol>
<h3 id="支付宝支付">支付宝支付</h3>
<p>支付宝支付 MCP 的接入相对简单，只需要在工作流中添加相关节点即可实现调用。</p>
<p>但在实际使用中，最大的问题在于订单号的管理。如果在工作流中直接使用固定的订单号，那么系统将无法区分当前支付行为是来自哪个用户，从而可能导致支付信息混淆。</p>
<p>为了解决这个问题，我设计了一个辅助工作流，用于为每个用户动态生成唯一订单号。这样，每次触发支付时，订单号都能精确绑定到当前用户，确保后续验证的准确性。</p>
<p>如图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1423484/202507/1423484-20250707215607572-1419621571.png" alt="image" loading="lazy"></p>
<p>为确保每位用户在发起支付时始终使用唯一且稳定的订单号，我在流程中引入了数据库，用于持久化存储用户与订单号之间的映射关系。</p>
<p>如果不做持久化，每次流程触发都可能生成新的订单号，导致支付记录无法正确关联用户。因此，这里在生成订单号后，会将其写入数据库。后续在同一个用户未完成支付的情况下再次发起流程时，系统会优先查询并复用已有订单号，避免重复生成。</p>
<p>数据表结构非常简单，如图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1423484/202507/1423484-20250707215613073-1555045597.png" alt="image" loading="lazy"></p>
<p>为了确保每个用户拥有唯一且稳定的订单号，系统在流程中采用了如下逻辑：</p>
<ol>
<li>先查询数据库：查询是否已存在订单号；</li>
<li>如果存在：直接使用该订单号；</li>
<li>如果不存在：调用代码节点（Python 脚本）生成一个新的唯一订单号，并将其与用户 ID 一并写入数据库中，供后续使用。</li>
</ol>
<p>这样可以避免在用户反复“支付”时生成多个不同订单号。</p>
<p><img src="https://img2024.cnblogs.com/blog/1423484/202507/1423484-20250707215619835-1242541712.png" alt="image" loading="lazy"></p>
<p>至此，订单号生成与用户绑定的前置逻辑已准备完毕。接下来的流程就是构建并传入支付宝接口的支付参数。</p>
<p>由于当前为体验版MCP，我们设定的支付金额仅为 0.01 元（即 1 分），且支付宝会在次日自动退款，因此对用户无实际成本。</p>
<p>如下图所示，为支付参数构建节点：</p>
<p><img src="https://img2024.cnblogs.com/blog/1423484/202507/1423484-20250707215626600-1613271335.png" alt="image" loading="lazy"></p>
<p>在订单号生成和支付宝参数构建完成后，系统通过消息卡片向用户展示支付信息，并提供点击付款按钮。用户点击后即可跳转至支付宝支付页，完成支付操作。</p>
<p><img src="https://img2024.cnblogs.com/blog/1423484/202507/1423484-20250707215631636-2133773117.png" alt="image" loading="lazy"></p>
<p>这里支付功能就完事了。</p>
<h3 id="定制化网页部署">定制化网页部署</h3>
<p>用户之所以愿意支付，背后一定是为了获取某种明确的功能或价值，否则他们没有理由掏出钱包。正因如此，我们正式推出了“定制化告白网页”功能，作为支付行为的回馈内容之一。</p>
<p>需要说明的是，这些告白网页并非实时生成的。虽然现在的大模型确实已经具备了实时生成网页内容的能力，并且在逻辑结构和语法正确性方面表现稳定，但在页面美观性和用户情感化表达方面，仍与用户的预期存在一定差距。此外，实时生成内容的速度也往往较慢，可能影响整体体验。因此，我们选择了“本地开发 + AI 辅助”的方式开发出来了两款页面代码。</p>
<p>工作流详情如下：</p>
<p><img src="https://img2024.cnblogs.com/blog/1423484/202507/1423484-20250707215638787-1053670023.png" alt="image" loading="lazy"></p>
<p>当然这里借助的也是代码节点进行内容填写的。第一个情诗网页，需要让大模型根据用户的要求生成。提示词如下：</p>
<pre><code class="language-markdown">请根据具体要求，创作一首原创的、中文情诗。
每行仅输出一个完整的诗句（不可将两句合并为一行）
正文中不使用任何标点符号（包括逗号、句号）
无需标题、解释或其他任何附加信息，仅输出诗句内容。
要求情感真挚细腻，语言优美。请严格仅输出情诗正文内容，无需任何标题、解释、说明或其他附加信息。
如果用户提到方案二，则直接返回空字符串即可。
具体要求：{{input_hgtoen-text_nq2ybj-方案}}
</code></pre>
<p>情诗网页效果如下：</p>
<p><img src="https://img2024.cnblogs.com/blog/1423484/202507/1423484-20250707215645048-1936018402.gif" alt="image" loading="lazy"></p>
<p>当然还有一个记忆相册网页。这部分主要是需要用户上传所有图片，当然这里只能保留最近上传的4张图片，操作示例如下：</p>
<p><img src="https://img2024.cnblogs.com/blog/1423484/202507/1423484-20250707215650848-1707467163.png" alt="image" loading="lazy"></p>
<p>上传完图片之后，你就可以对助手说：</p>
<blockquote>
<p>上线告白网页：方案二</p>
</blockquote>
<p>最终的效果如下所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1423484/202507/1423484-20250707215659414-1250709276.gif" alt="image" loading="lazy"></p>
<p>当然，所有的记录都会被安全地存储在您的个人数据库中，完全独立、私密，确保数据安全和隐私保护，您可以放心使用。以下是数据库的结构设计示意：</p>
<p><img src="https://img2024.cnblogs.com/blog/1423484/202507/1423484-20250707215702528-635435554.png" alt="image" loading="lazy"></p>
<p>至此，核心功能的开发已基本完成，接下来的重点将转向商业化方向的探索与拓展。毕竟，对于恋爱小白而言，提供一些实用的“牵手技巧”确实能够有效缓解初期的紧张与不安，提升他们的恋爱信心。</p>
<p>而一个用心设计的“告白网页”，不仅能够赋予感情表达更多的仪式感，也有助于加深对方的情感印象，从而提升整体的用户体验与产品情感价值。</p>
<h1 id="效果演示">效果演示</h1>
<iframe src="//player.bilibili.com/player.html?isOutside=true&amp;aid=114812763769660&amp;bvid=BV12M32zXEaR&amp;cid=30907436406&amp;p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe>
<h1 id="浅谈商业化">浅谈商业化</h1>
<p>我认为商业化方向是完全具备可行性的。当前市场中有数以千万计的“恋爱小白”，覆盖从青少年到中老年的各个年龄层，他们在恋爱、表白、情感沟通等方面普遍存在需求。从早期的《恋爱宝典》到当下各类恋爱课程与情感咨询服务，这类内容始终具备稳定的受众基础。换句话说，市场是存在的，用户需求也是实实在在的。</p>
<p>目前我设想的一种商业化模式是提供定制化的表白网页服务。用户只需支付象征性的价格，比如1分钱，即可生成一个专属的在线告白页面。这种低门槛、强情感附加值的服务，本身就具有一定吸引力。当然，如果希望进一步提升用户体验与转化率，仅靠几个简单的定制网页还远远不够。你需要提供更丰富的互动功能、更精致的视觉设计以及更多可参与的内容模块，这样用户才能感受到“定制”的价值，并愿意为此付费。</p>
<p>另外，我还曾设想开发一个基于多用户数据库的“线上相亲角”功能，让用户可以以轻量的方式参与智能匹配和互动。然而从目前的资源投入、技术复杂度以及智能体主要使用人群来看，这一方向在实现上存在较大难度，短期内并不具备优先开发价值。因此，这个想法我暂时搁置了。</p>
<p>当然，如果你有更具操作性、落地性强、用户契合度高的商业化创意或功能建议，非常欢迎提出交流。</p>
<h1 id="欢迎打赏">欢迎打赏</h1>
<p>最后，如果我的这个创意或思路对你有所启发，或者“与你”智能体在使用过程中给你带来了实用的建议与帮助，也非常欢迎你支持一下博主。你的每一份打赏，都是对我继续完善这个产品、继续创作的最大鼓励。</p>
<p>打赏按钮就在使用界面上，如图所示</p>
<p><img src="https://img2024.cnblogs.com/blog/1423484/202507/1423484-20250707215710453-1625351136.png" alt="image" loading="lazy"></p>
<p>它可能不是特别显眼，但你的心意我一定能感受到 😊</p>
<p>好了，关于“与你”智能体的讲解就先到这里。如果你还有更多想法、建议或者合作意向，也欢迎随时联系。我们一起让情感产品更有温度、更有趣味。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-07 23:58">2025-07-07 23:58</span>&nbsp;
<a href="https://www.cnblogs.com/guoxiaoyu">努力的小雨</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18971711);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18971711', targetLink: 'https://www.cnblogs.com/guoxiaoyu/p/18971711', title: '点我！1分钱获取你的专属表白网页，浪漫由大模型代运营' })">举报</a>
</div>
        