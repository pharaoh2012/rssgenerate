
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ggtc/p/18820188" title="发布于 2025-04-11 12:51">
    <span role="heading" aria-level="2">冲压车间软件实施</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>小组在公司把冲压模块开发好后，我就兴冲冲地抱着电脑去车间了，准备部署软件——其实是浏览器的<code>Vue</code>网页。至于服务器嘛，那当然还是<code>.net</code>咯。我没想到见到了太多超出软件本体以外的事。</p>
<h1 id="熟悉而又陌生的车间与生产">熟悉而又陌生的车间与生产</h1>
<p>刚刚抵达工厂，确实感觉很大的一个厂区，但是公司这边也是一个厂区，同样很大，但是路上没有一人，静悄悄的。然后数着厂房上面挂着的数字，一路找到冲压车间去，这是个铁皮车间😂。<br>
车间机器轰鸣，声音嘈杂。到了车间首先被客户经理（事本公司的）带着观察生产流程。因为虽然软件已经做出来了，但我只负责其中一个模块，对总体过程不是很熟悉。结果一看，感觉出大问题了，怎么和软件对不上啊😂。<br>
冲压车间简单来说，就是把物料供应商拉来的铝卷，通过冲压机冲压成零件。由于冲压过程中会使用很多滑油进行润滑、散热，所以下一个工序是把零件用小拖车送到清洗机中，装篮清洗。零件从清洗机出来后，需要对零件进行装盘，并初步筛选不良品出来，然后小拖车把装盘的零件送到最后一个工序。最后一个工序是零件外观目检，进一步分离良品与不良品。目检之后，把装有零件的托盘送到仓库供产品组装产线使用。</p>
<pre><code>冲压 =&gt; 清洗 =&gt; 初筛 =&gt; 目检
</code></pre>
<h1 id="从没注意到的工人对整个生产过程的影响">从没注意到的工人对整个生产过程的影响。</h1>
<ul>
<li>
<p><strong>首先是冲压机负责人</strong>，他控制机器速度，要处理很多杂事，铝卷上料、冲压机运行管理、废料处理、表格填写、软件填写。为人比较精干，虽然比不年轻人，但在一步步教学实操之后，还是能比较快的使用软件，因为至少他原来的冲压机也是用厂家的软件控制的。</p>
</li>
<li>
<p><strong>然后是清洗工</strong>。清洗工是一个体力活，这并不是说清洗。清洗是由一个巨大的机器进行，清洗工就把零件装进清洗篮，然后用力提到清洗机传送带上。这是个力气活，所以可能招的人也比较少接触电脑，于是原定的他使用软件的清洗模块也不了了之。</p>
</li>
<li>
<p><strong>清洗篮从清洗机出来后，初筛工人对零件进行筛选装盘</strong>。一个班组有好几个人，每完成一单就找班长写上信息，抱到小拖车上去。等到小拖车满，转运工拖着装满一车托盘的小拖车到外观目检那里去。因为在这里安装了一个电脑，所以初筛组长同时使用清洗和初筛的模块。因为他经常要记录数据，所以对文字、数据还比较敏感，使用电脑的能力还算过得去。</p>
</li>
<li>
<p><strong>目检工人令我大跌眼镜</strong>。目检工人要做的和初筛类似，就是快速翻看托盘中的零件，拿出瑕疵品，用新的补上。他们其中一些人对电脑非常陌生，甚至连鼠标都操作不来，包括基本的移动鼠标、点击左键、双击左键。幸好他们其中一些还能理解软件界面，比如班长。所以班长也负责其中业务逻辑更加复杂的那些操作。在这里还是同样的，年轻人的理解能力非常快，与上年龄的人有着鲜明的区别。</p>
</li>
<li>
<p>小拖车就是这个叉车<br>
<img src="https://img2024.cnblogs.com/blog/1494271/202504/1494271-20250411123609163-2028909661.png" alt="image" loading="lazy"></p>
</li>
</ul>
<h1 id="软件在实地的水土不服">软件在实地的水土不服</h1>
<ul>
<li>
<p><strong>第一个水土不服的就是平平无奇的打印</strong>。<code>MES</code>系统的各环节依靠二维码来进行数据传递和定位识别。出于实际需要，办公室常用的A4纸打印机在这里换成了不知规格的纸带打印机，于是常常出现跨页的问题。于是需要在车间的每台电脑，每个快捷方式中进行打印预览的调整，还要找专业人员进行打印机的校准，非常非常繁琐。<br>
<img src="https://img2024.cnblogs.com/blog/1494271/202504/1494271-20250411123222633-148937887.png" alt="image" loading="lazy"></p>
</li>
<li>
<p><strong>第二个是软件原来理解的需求，在我实地理解生产流程后，发现有偏差</strong>。比如原来设想的每单打印二维码，但是由于工人的工作速度太快，频繁去操作电脑扫码录入数据，打印二维码等等会浪费大量时间，根本不可接受。于是在清晰和初筛环节，软件被大大简化了。好在原有的设计能适应新的现场简化的操作流程，无需做太大改动。</p>
</li>
<li>
<p><strong>就连最简单的登录功能也来攻击我</strong>。可能是为了节省成本，外观目检那里6个人只准备了1台电脑，令开发不会想到的是，这里出现了电脑的争用。毕竟<code>计件工作</code>，耽误时间就意味着工资下降。但是毕竟打印二维码要和人员关联，登录是不可少的。于是我灵机一动，给每个工位建了一个浏览器快捷方式，并且有独立的配置文件。这样能省去麻烦的退出与登录。各工位只要上班前登录一下就行了。<br>
<img src="https://img2024.cnblogs.com/blog/1494271/202504/1494271-20250411124048529-910868211.png" alt="image" loading="lazy"></p>
</li>
</ul>
<h1 id="一撸到底">一撸到底</h1>
<p>我作为开发，改代码是不能避免的。我一边在目检班组的电脑旁改代码，一边发布上去测试，这样比起在办公室中不知道快到那里去。而一个开发实际到车间查看需求，也比需求经过各种变换，最后才变换到软件，也不知道能减少多少偏差。如果不能开发一个人跑完全程，软件工程诞生真不是没有理由的。<br>
但是，车间工作真的好累，为了尽快把软件依附到生产上去，每天都要工作14个小时😭</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.5629060150706019" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-11 12:51">2025-04-11 12:51</span>&nbsp;
<a href="https://www.cnblogs.com/ggtc">ggtc</a>&nbsp;
阅读(<span id="post_view_count">247</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18820188" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18820188);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18820188', targetLink: 'https://www.cnblogs.com/ggtc/p/18820188', title: '冲压车间软件实施' })">举报</a>
</div>
        