
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wang_yb/p/18640752" title="发布于 2024-12-30 12:05">
    <span role="heading" aria-level="2">manim边学边做--改变动画速度</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p><code>ChangeSpeed</code>类是<code>Manim</code>库中用于修改动画速度的类。</p>
<p>它提供了一种灵活的方式来控制动画的播放速度，使动画在不同时间段内以不同的速度播放，从而创造出更加丰富多样的动画效果。</p>
<p>比如，在创建包含多个元素动画的场景中，通过<code>ChangeSpeed</code>可以精确控制不同元素在不同时间点的移动速度，实现复杂的动画节奏编排。</p>
<h1 id="1-动画概述">1. 动画概述</h1>
<p>与之前介绍的那些动画类不同，<code>ChangeSpeed</code>不是为元素实现某种具体的动画效果，</p>
<p>它的作用对象是动画本身，它的主要特点有：</p>
<ol>
<li><strong>灵活的速度调整</strong>：可以指定动画在不同时间对应的速度因子，也就是在动画的不同阶段设置不同的速度</li>
<li><strong>与多种动画类型结合</strong>：不仅可以用于修改单个动画的速度，还能处理<code>AnimationGroup</code>类型的动画，将多个动画组合成一个整体进行速度控制</li>
<li><strong>支持速率函数覆盖</strong>：通过<code>rate_func</code>参数可以覆盖传入动画的速率函数，从而进一步自定义动画的速度变化曲线</li>
</ol>
<p>主要参数有：</p>
<table>
<thead>
<tr>
<th><strong>参数名称</strong></th>
<th><strong>类型</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>anim</td>
<td>Animation</td>
<td>需要修改速度的动画对象</td>
</tr>
<tr>
<td>speedinfo</td>
<td>dict</td>
<td>指定在不同时间点的动画速度</td>
</tr>
<tr>
<td>rate_func</td>
<td>func</td>
<td>覆盖传入动画的速率函数，在修改速度之前应用</td>
</tr>
<tr>
<td>affects_speed_updaters</td>
<td>bool</td>
<td>决定是否影响通过<code>add_updater</code>方法添加的更新器的速度</td>
</tr>
</tbody>
</table>
<p><code>speedinfo</code>参数是一个字典，</p>
<p>它的<code>key</code>是动画运行时间的百分比（0 到 1 之间的浮点数），<code>value</code>是对应的速度因子。</p>
<p><code>affects_speed_updaters</code>参数一般在做联动动画时使用的，用来决定是否影响联动动画的速度。</p>
<p><code>ChangeSpeed</code>还有一些方法，可以用于全面控制动画的执行流程、时间相关属性和相关对象的处理。</p>
<table>
<thead>
<tr>
<th><strong>名称</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>add_updater</td>
<td>用于将速度变化应用于更新器</td>
</tr>
<tr>
<td>begin</td>
<td>在动画开始时被调用时，进行初始化操作</td>
</tr>
<tr>
<td>finish</td>
<td>动画结束时被调用</td>
</tr>
<tr>
<td>update_mobjects</td>
<td>更新相关对象，如起始对象和（对于变换动画）目标对象</td>
</tr>
<tr>
<td>clean_up_from_scene</td>
<td>在动画结束后清理场景</td>
</tr>
<tr>
<td>get_scaled_total_time</td>
<td>返回动画所花费的时间</td>
</tr>
<tr>
<td>interpolate</td>
<td>在动画的每一帧被调用，用于设置动画的进度</td>
</tr>
</tbody>
</table>
<h1 id="2-使用示例">2. 使用示例</h1>
<p>下面通过示例来演示如何使用<code>ChangeSpeed</code>类来丰富动画的表现效果。</p>
<h2 id="21-变速移动的点">2.1. 变速移动的点</h2>
<p>此示例在场景中创建了两个点，然后使用<code>ChangeSpeed</code>类来控制其移动动画。</p>
<p>通过<code>speedinfo</code>参数，设置第一个先减速移动，然后再加速移动，最后再次减速移动。</p>
<p>第二点与第一个点的速度变化正好相反，并且两个点在运动过程中都采用线性速率函数。</p>
<pre><code class="language-python">d1 = Dot(color=BLUE)
d2 = Dot(color=RED)
self.add(d1, d2)

# 先慢后快再慢
self.play(
    ChangeSpeed(
        d1.animate(run_time=2).shift(RIGHT * 5),
        speedinfo={0.2: 0.5, 0.3: 2, 0.8: 0.5},
        rate_func=linear,
    ),
)

# 先快后慢再快
self.play(
    ChangeSpeed(
        d2.animate(run_time=2).shift(LEFT * 5),
        speedinfo={0.2: 2, 0.3: 0.5, 0.8: 2},
        rate_func=linear,
    ),
)
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/83005/202412/83005-20241230120509044-327681053.gif" alt="" loading="lazy"></p>
<h2 id="22-变速旋转的正方形">2.2. 变速旋转的正方形</h2>
<p>先添加了一个正方形，然后利用<code>ChangeSpeed</code>类来调整其旋转动画。</p>
<p>根据<code>speedinfo</code>设定，正方形在动画开始的前 <code>30%</code> 时间内慢速旋转（速度因子为<code> 0.5</code>），之后在 <code>70%~100%</code> 时间内快速旋转（速度因子为 <code>2</code>），</p>
<p>同时使用平滑的速率函数，产生了变速旋转的动画效果。</p>
<pre><code class="language-python">square = Square()

# 正方形先慢速旋转 然后快速旋转
self.play(
    ChangeSpeed(
        Rotate(square, angle=PI, run_time=3),
        speedinfo={0.3: 0.5, 0.7: 2},
        rate_func=smooth,
    )
)
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/83005/202412/83005-20241230120509181-1705210188.gif" alt="" loading="lazy"></p>
<h2 id="23-结合更新器的变速缩放">2.3. 结合更新器的变速缩放</h2>
<p>首先创建了一个圆，并定义了一个更新器函数，使圆在每一帧渲染时按一定比例持续缩放。</p>
<p>接着通过<code>ChangeSpeed</code>类的静态方法<code>add_updater</code>将更新器应用到圆上，并根据<code>speedinfo</code>参数，使得更新器在动画中间部分速度变慢，从而实现了圆的变速缩放效果。</p>
<p><strong>注意</strong>，这里要设置<code>affects_speed_updaters=True</code>，否则圆会匀速放大，使得<code>speedinfo</code>参数无效。</p>
<pre><code class="language-python">circle = Circle()
self.add(circle)

# 定义一个更新器函数，使圆持续缩放
def update_circle(circle, dt):
    circle.scale(1 + 0.1 * dt)

# 将更新器添加到圆上，并使用ChangeSpeed控制更新器的速度
ChangeSpeed.add_updater(circle, update_circle)
self.play(
    ChangeSpeed(
        Wait(4),
        speedinfo={0.3: 2, 0.4: 0.4, 0.7: 0.4, 1: 2},
        affects_speed_updaters=True,
    )
)
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/83005/202412/83005-20241230120509197-117567219.gif" alt="" loading="lazy"></p>
<h2 id="24-动画组中元素的不同速度">2.4. 动画组中元素的不同速度</h2>
<p>在场景中添加了两条水平方向且一上一下的直线，通过<code>ChangeSpeed</code>类作用于<code>AnimationGroup</code>来实现不同速度的动画效果。</p>
<p>因为<code>speedinfo</code>参数只能设置一种速度因子，为了使两条直线的变色速度不一样，这里使用了一个技巧，设置两条直线变色的<code>run_time</code>不一样。</p>
<p>这样，即使它们的<code>speedinfo</code>参数一样，最终还是以不同节奏来变色。</p>
<pre><code class="language-python">l1 = Line(LEFT * 3, RIGHT * 3).shift(UP)
l2 = Line(LEFT * 3, RIGHT * 3).shift(DOWN)
self.add(l1, l2)

# 创建一个动画组，使两条线以不同的速度变色
self.play(
    ChangeSpeed(
        AnimationGroup(
            l1.animate(run_time=2).set_color(RED),
            l2.animate(run_time=4).set_color(BLUE),
        ),
        speedinfo={
            0.3: 1,
            0.6: 0.5,
            1: 1,
        },
        rate_func=linear,
    )
)
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/83005/202412/83005-20241230120509080-137765903.gif" alt="" loading="lazy"></p>
<h1 id="3-附件">3. 附件</h1>
<p>文中的代码只是关键部分的截取，完整的代码共享在网盘中（<code>change_speed.py</code>），</p>
<p>下载地址: <a href="https://url11.ctfile.com/d/45455611-64223578-4fb7ee?p=6872" target="_blank" rel="noopener nofollow">完整代码</a> (访问密码: 6872)</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.008975072368055555" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2024-12-30 12:06">2024-12-30 12:05</span>&nbsp;
<a href="https://www.cnblogs.com/wang_yb">wang_yb</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18640752" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18640752);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18640752', targetLink: 'https://www.cnblogs.com/wang_yb/p/18640752', title: 'manim边学边做--改变动画速度' })">举报</a>
</div>
        