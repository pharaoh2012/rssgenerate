
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/charlee44/p/18962164" title="发布于 2025-07-02 19:16">
    <span role="heading" aria-level="2">Ubuntu云服务器上部署发布Vite项目</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        介绍了如何将Vite项目从开发环境部署到云服务器，涵盖了代码拷贝、构建部署、域名配置及SSL证书申请等关键步骤。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="1-拷贝代码">1 拷贝代码</h1>
<p>一般来说是Windows环境下开发，Ubuntu环境下部署。因此首先要考虑的问题是如何将Vite项目的源代码拷贝到云服务器上面去。最简单的就是使用像MobaXterm这样的远程连接工具，这样远程连接工具一般都提供文件传输功能。</p>
<p>不过这样做对于更新很麻烦，总不能每次更新一点就将全部代码打包上传一遍。因此最好的方式就是使用Git，将代码上传到Github这样的仓库中，每次更新代码就可以实现增量更新，同时后期也很容易集成CICD。</p>
<p>不过使用Git仓库也很麻烦，大概的问题有以下几个：</p>
<ol>
<li>如果Git仓库在内网，就要使用代理工具或者内网穿透工具。</li>
<li>Github仓库网络不稳定问题，那么就需要使用代理工具或者加速服务。另外，某些情况下修改hosts也是个很有效的方案<sup class="footnote-ref"><a href="#fn1" id="fnref1" rel="noopener nofollow">[1]</a></sup>。</li>
<li>Git安全策略问题。推荐还是使用SSH登录的方式，只用麻烦一次。HTTP登录方式有时候总会失效，而且每次都要输入账户密码。</li>
</ol>
<h1 id="2-构建部署">2 构建部署</h1>
<p>接下来就是构建Vite项目，这一步一般可以直接使用脚本，如下所示：</p>
<pre><code class="language-shell">#!/bin/bash

# 安装
npm install

# 编译
npm run build

# 杀掉所有包含 node 的进程（如果存在）
PIDS=$(ps aux | grep node | grep -v grep | awk '{print $2}')

if [ -n "$PIDS" ]; then
    echo "Killing processes: $PIDS"
    kill $PIDS
else
    echo "No matching processes found."
fi

# 杀掉所有包含 npm 的进程（如果存在）
PIDS=$(ps aux | grep npm | grep -v grep | awk '{print $2}')

if [ -n "$PIDS" ]; then
    echo "Killing processes: $PIDS"
    kill $PIDS
else
    echo "No matching processes found."
fi

# 启动前端
setsid npm run preview &lt;/dev/null &gt;output.log 2&gt;&amp;1 &amp;
</code></pre>
<p>这段脚本的意思是先使用<code>npm install</code>安装依赖库，然后再进行构建操作<code>npm run build</code>。接下来是杀掉所有包含node和npm的进程，因为脚本可能需要多次使用，每次使用之前Web服务可能已经启用了。最后使用Vite提供的预览服务(<code>npm run preview</code>)来发布该应用。</p>
<h1 id="3-配置域名">3 配置域名</h1>
<p>如果是开发环境完成以上步骤就可以结束了，但是在云服务器上部署发布Web项目一般都是想通过域名来访问，并且最好省略端口号。具体步骤如下：</p>
<ol>
<li>在云服务器提供商的后台配置端口号。一般新的服务器出于安全考虑，端口号都是设置成不对外开放的。以天翼云为例，是在访问控制的安全组中配置端口号的：<br>
<img alt="云服务器配置端口号" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1000410/202507/1000410-20250702191435391-1575058224.png" class="lazyload"></li>
<li>在域名服务商的后台，将域名的解析地址指向云服务器的IP地址。</li>
<li>要省略掉端口号，HTTP服务就需要80端口，HTTPS服务需要443端口。国内的云服务器提供商统一要求先备案，才能对外开放80端口和443端口。</li>
</ol>
<h1 id="4-配置ssl">4. 配置SSL</h1>
<p>如果不想被浏览器提示不安全，那么最好就要使用HTTPS，要使用HTTPS就要申请SSL证书。具体的操作过程可以参看本人的另一篇博文<a href="https://charlee44.com/post.html?id=2c3adc5719734958a9403b1c0c9daae4" target="_blank" rel="noopener nofollow">《在Ubuntu上使用Certbot申请Let’s Encrypt SSL证书》</a>。</p>
<p>然后，在Vite项目的vite.config.js中进行如下配置：</p>
<pre><code class="language-json">import { defineConfig, loadEnv } from "vite";
import { resolve } from "path"; // 导入 path 模块

export default defineConfig(({ mode }) =&gt; {
  const env = loadEnv(mode, process.cwd(), "");
  return {
    server: {
      host: "0.0.0.0", // 绑定所有网络接口
      port: 443, // 自定义开发服务器端口
      open: true, // 自动打开浏览器
      https: {
        key: resolve(__dirname, env.SSL_KEY), // 替换为你的密钥文件路径
        cert: resolve(__dirname, env.SSL_CERT), // 替换为你的证书文件路径
      },
    },
    build: {
      outDir: "./dist", // 构建输出目录
    },
    preview: {
      host: "0.0.0.0", // 绑定所有网络接口
      port: 443, // 预览服务器端口
      open: true, // 自动打开浏览器
    },
  };
});
</code></pre>
<p>这里的<code>env.SSL_KEY</code>和<code>env.SSL_CERT</code>就是<a href="https://charlee44.com/post.html?id=2c3adc5719734958a9403b1c0c9daae4" target="_blank" rel="noopener nofollow">《在Ubuntu上使用Certbot申请Let’s Encrypt SSL证书》</a>中申请的证书文件，分别是证书私钥(/etc/letsencrypt/live/charlee44.com-0001/privkey.pem)和完整证书链(/etc/letsencrypt/live/charlee44.com-0001/fullchain.pem)。</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://cloud.tencent.com/developer/article/1946059" target="_blank" rel="noopener nofollow">解决腾讯云轻量服务器国内机器无法使用Github的方法</a> <a href="#fnref1" class="footnote-backref" rel="noopener nofollow">↩︎</a></p>
</li>
</ol>
</section>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-02 19:16">2025-07-02 19:16</span>&nbsp;
<a href="https://www.cnblogs.com/charlee44">charlee44</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18962164);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18962164', targetLink: 'https://www.cnblogs.com/charlee44/p/18962164', title: 'Ubuntu云服务器上部署发布Vite项目' })">举报</a>
</div>
        