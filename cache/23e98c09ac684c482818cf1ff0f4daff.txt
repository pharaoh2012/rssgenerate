
		<h1 class="postTitle">
			<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/jigang/p/19017324" title="发布于 2025-08-01 17:20">
    <span role="heading" aria-level="2">DeepSeek-R1详解</span>
    

</a>

		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p><img alt="deepseek-R1" loading="lazy" data-src="https://img2024.cnblogs.com/blog/976551/202508/976551-20250801171819127-1530380128.png" class="lazyload"><br>
咱把这张 DeepSeek-R1 的架构图拆成几块唠，保证小白也能听懂！就当是带着大家“逛” 模型从训练到能用的 “流水线工厂”，每个模块是干啥的、数据咋流动，一一说清楚～</p>
<h2 id="一offline-training-pipeline离线训练流水线">一、Offline Training Pipeline（离线训练流水线）</h2>
<p>这部分是 **“模型的产房”**，负责把 “基础模型胚子” 打磨成能用的智能模型，就像工厂里把原材料加工成半成品～</p>
<h3 id="1-base-modeldeepseek---v3---base-模型毛坯">1. Base Model（DeepSeek - V3 - Base） 模型“毛坯”</h3>
<ul>
<li>
<p><strong>是啥</strong>：可以理解成 “模型的地基”！就像盖房子先打地基，这里是最基础的模型版本，已经学了很多通用知识（比如语言规律、常识等），但还得继续调教。</p>
</li>
<li>
<p><strong>角色</strong>：所有后续训练的 “起点”，是个有潜力的 “好学生苗子”，但得接着教它更贴合需求的技能。</p>
</li>
<li>
<p><strong>技术</strong>：大语言模型基础架构（Transformer架构，理解文字的核心逻辑）</p>
</li>
</ul>
<h3 id="2-rl-stage强化学习阶段-rl-trainer--r1---zero">2. RL stage（强化学习阶段） RL Trainer → R1 - Zero</h3>
<ul>
<li>
<p><strong>是啥</strong>：可以简单想成 “给模型请个教练”！RL（强化学习）就是让模型在练习中，根据 “表现好坏” 调整自己。这里的 <code>RL Trainer</code> 是负责教模型的 “教练工具”，把基础模型 “训练” 成 <code>R1 - Zero</code> 这个版本。</p>
</li>
<li>
<p><strong>技术</strong>：强化学习（RL）算法，像给模型发“小红花”（奖励）或“小鞭子”（惩罚），让它记住好行为。</p>
</li>
<li>
<p><strong>数据流</strong>：<code>Base Model</code> 把自己 “交” 给 <code>RL Trainer</code>，经过强化学习的训练（就像学生听教练指令练习），输出 <code>R1 - Zero</code>。可以理解成：地基打好 → 教练带着练 → 变成 “初级优化版模型”。</p>
</li>
</ul>
<h3 id="3-seed-sft-监督微调sft-seeder--intermediate">3. seed SFT （监督微调）SFT Seeder → Intermediate</h3>
<ul>
<li>
<p><strong>SFT 是啥</strong>：SFT 就是 “监督微调”，简单说就是 “给模型喂更精准的练习题 + 答案”，让它学更具体的技能。比如教它怎么好好聊天、回答问题。</p>
</li>
<li>
<p><strong>模块角色</strong>：<code>SFT Seeder</code> 是执行 “监督微调” 的工具，拿 <code>R1 - Zero</code> 当 “学生”，用更细致的训练（seed SFT 阶段），把它变成 <code>Intermediate</code>（中间版本模型）。</p>
</li>
<li>
<p><strong>技术</strong>：监督微调（SFT），人工标注好数据，教模型“正确答案长这样”。</p>
</li>
<li>
<p><strong>数据流</strong>：<code>R1 - Zero</code> 进入 <code>SFT Seeder</code> 接受监督微调 → 变成更懂 “怎么干活” 的 <code>Intermediate</code>。相当于：初级优化版学生 → 做专项练习题 → 变成中级优化版学生。</p>
</li>
</ul>
<h3 id="4-rl-alignment强化学习对齐-rl-aligner--r1">4. RL alignment（强化学习对齐） RL Aligner → R1</h3>
<ul>
<li>
<p><strong>是啥</strong>：继续 “优化模型的表现”！可以理解成 “让模型更懂人类需求”，调整模型的回答，让它更贴合人类期望（比如更安全、更有用）。<code>RL Aligner</code> 就是干这个的工具。</p>
</li>
<li>
<p><strong>技术</strong>：强化学习 + 人类反馈（RLHF），结合人工审核数据，教模型“这么说才对”。</p>
</li>
<li>
<p><strong>数据流</strong>：<code>Intermediate</code> 模型进入 <code>RL Aligner</code>，经过这一轮强化学习对齐 → 变成 <code>R1</code>（更成熟的模型版本）。相当于：中级优化版学生 → 再调整学习，变得更符合人类要求 → 变成高级优化版学生。</p>
</li>
</ul>
<h3 id="5-distillation-inputs蒸馏输入-distiller--distilled-models">5. distillation inputs（蒸馏输入） Distiller → Distilled Models</h3>
<ul>
<li>
<p><strong>蒸馏是啥</strong>：可以理解成 “给模型 ‘瘦身’ 但不减本事”！就像把一大杯浓缩果汁，提炼成一小杯更浓的，模型变小了，但核心能力保留（甚至更精炼）。<code>Distiller</code> 就是负责 “蒸馏” 的工具。</p>
</li>
<li>
<p><strong>技术</strong>：知识蒸馏（把大模型当老师，小模型当学生，学生学老师的本事）。</p>
</li>
<li>
<p><strong>数据流</strong>：<code>R1</code> 模型作为 “原材料”，被 <code>Distiller</code> 用蒸馏技术处理 → 输出 <code>Distilled Models</code>（更轻巧、能高效干活的模型）。相当于：高级优化版学生 → 被提炼精华 → 变成 “精简高效版学生”。</p>
</li>
</ul>
<h2 id="二hugging-face-hub--github-repo模型--代码-仓库">二、Hugging Face Hub + GitHub Repo（模型 &amp; 代码 “仓库”）</h2>
<p>这俩是 **“模型和资料的存储库”**，就像工厂里的 “仓库”，存着训练好的模型、代码、说明文档这些东西～</p>
<h3 id="1-hugging-face-hub">1. Hugging Face Hub</h3>
<ul>
<li>
<p><strong>是啥</strong>：全球很多 AI 开发者在用的 “模型仓库”，可以存模型、分享模型。相当于一个 “模型超市”，大家能在这拿到训练好的模型。</p>
</li>
<li>
<p><strong>数据流</strong>：前面离线训练好的各种模型（<code>R1</code>、<code>Distilled Models</code> 等），会被 “推”（push artifacts）到这里存着；后面需要用模型的地方（比如在线服务），会从这里 “拉”（model pull）模型用。</p>
</li>
</ul>
<h3 id="2-github-repogithub-仓库">2. GitHub Repo（GitHub 仓库）</h3>
<ul>
<li>
<p><strong>是啥</strong>：程序员们常用的 “代码 + 文档仓库”，存着项目的代码、使用说明、许可证（License）、研究论文这些。相当于一个 “项目说明书大全”。</p>
</li>
<li>
<p><strong>里的小模块</strong>：</p>
<ul>
<li>
<p><code>License/LICENSE</code>：模型能用的 “规则说明书”（比如能不能商用、能不能修改）。</p>
</li>
<li>
<p><code>Static Assets/figures/</code>：存图片、图表这些 “辅助资料”（比如架构图可能存在这）。</p>
</li>
<li>
<p><code>Documentation/README.md</code>：最核心的 “使用说明书”！教你咋用这个模型、咋部署、有啥功能。</p>
</li>
<li>
<p><code>Research Papers/DeepSeek_R1.pdf</code>：模型背后的 “学术论文”，讲研发思路、技术细节（大佬们爱看，小白好奇也能瞅两眼）。</p>
</li>
</ul>
</li>
</ul>
<h2 id="三external-services外部服务--clients--ui用户咋用模型">三、External Services（外部服务） + Clients &amp; UI（用户咋用模型）</h2>
<p>这部分是 **“模型咋和外界互动”**，包括模型需要的 “外部资源”，以及用户（像咱普通人）咋接触、使用模型～</p>
<h3 id="1-external-services外部服务">1. External Services（外部服务）</h3>
<ul>
<li>
<p><strong>Hugging Face (external)</strong>：前面说过的 “模型仓库”，这里是 “外部版”，可以理解成模型训练时，可能需要从这下载一些基础资料、工具。</p>
</li>
<li>
<p><strong>DeepSeek Platform (external API)</strong>：<code>DeepSeek</code> 自己的 “外部接口平台”，可以简单想成 “模型和外界沟通的特殊通道”，比如训练模型时，需要从这拿数据、或者把训练好的东西存这。</p>
</li>
</ul>
<h3 id="2-clients--ui用户咋用模型">2. Clients &amp; UI（用户咋用模型）</h3>
<ul>
<li><strong>Web Chat (ui.chat.deepseek.com)</strong>：最直观的 “用户界面”！就是咱普通人能用的 “网页聊天框”，打开网址就能和模型聊天、问问题，像用 ChatGPT 网页版一样。</li>
</ul>
<h3 id="3-online-serving模型在线服务-流水线">3. Online Serving（模型在线服务 “流水线”）</h3>
<p>这部分是 **“模型咋变成能用的 ‘聊天工具’ 给用户用”**，像工厂里 “把仓库的半成品变成商品，送到用户手里”～</p>
<h4 id="1deepseek-api-gateway-platformdeepseekcom">（1）DeepSeek API Gateway (platform.deepseek.com)</h4>
<ul>
<li><strong>是啥</strong>：可以理解成 “模型服务的总大门”！用户（不管是网页聊天、还是其他方式）要用模型，都得经过这个 “大门” 调度。相当于餐厅的 “前台”，负责接用户需求，再分配给后面的 “厨师（模型）”。</li>
</ul>
<h4 id="2model-serving-fleet--vllm-server">（2）Model Serving Fleet + vLLM Server</h4>
<ul>
<li>
<p><strong>Model Serving Fleet</strong>：可以想成 “模型服务的 ‘运输车队’”，负责把用户需求 “运” 到能处理的地方。</p>
</li>
<li>
<p><strong>vLLM Server</strong>：是个 “高效跑模型的工具”！专门优化模型运行速度，让模型回答又快又稳。</p>
</li>
<li>
<p><strong>数据流</strong>：用户通过 <code>Web Chat</code> 发请求 → 经过 <code>DeepSeek API Gateway</code> → 交给 <code>Model Serving Fleet</code> → 调用 <code>vLLM Server</code> 里的模型干活。相当于：用户点单 → 前台接单 → 运输队送单 → 高效厨房（vLLM）做菜。</p>
</li>
</ul>
<h4 id="3user-cli--sdk--sglang-server">（3）User CLI / SDK + SGLang Server</h4>
<ul>
<li>
<p><strong>User CLI / SDK</strong>：给 “想自己开发、调试模型的人” 用的工具。CLI 是命令行（比如程序员在黑框框里输指令调模型），SDK 是软件开发工具包（给开发者写代码用的 “积木”）。</p>
</li>
<li>
<p><strong>SGLang Server</strong>：专门处理 “用特殊语言（SGLang）和模型交互” 的工具，让模型能理解更复杂的指令、流程。</p>
</li>
<li>
<p><strong>数据流</strong>：如果是开发者用 <code>User CLI / SDK</code> 发请求 → 经过 <code>DeepSeek API Gateway</code> → 可能调用 <code>SGLang Server</code> 处理（比如复杂指令）→ 再让模型干活。相当于：开发者自己写程序调模型 → 前台接需求 → 特殊语言处理中心（SGLang）翻译 → 模型干活。</p>
</li>
</ul>
<h2 id="四总结整个架构的-数据流-大流程">四、总结：整个架构的 “数据流” 大流程</h2>
<p>可以把整个 DeepSeek - R1 架构想成 **“从训练模型 → 存模型 → 给用户用” 的完整流水线**，数据 / 模型像 “流水” 一样流动：</p>
<ol>
<li>
<p><strong>训练流水</strong>：<code>Base Model</code>（地基）→ 经过 <code>RL Trainer</code>（教练1）→ <code>R1 - Zero</code>（初级版）→ 经过 <code>SFT Seeder</code>（练习题）→ <code>Intermediate</code>（中级版）→ 经过 <code>RL Aligner</code>（教练2）→ <code>R1</code>（高级版）→ 经过 <code>Distiller</code>（提炼）→ <code>Distilled Models</code>（精简版）。</p>
</li>
<li>
<p><strong>存储流水</strong>：训练好的模型（<code>R1</code>、<code>Distilled Models</code> 等）→ 被 “推” 到 <code>Hugging Face Hub</code>（模型仓库）和 <code>GitHub Repo</code>（代码 / 文档仓库）存着。</p>
</li>
<li>
<p><strong>使用流水</strong>：用户（不管是普通网页聊天，还是开发者写代码）→ 发需求到 <code>DeepSeek API Gateway</code>（总大门）→ 调度 <code>Model Serving Fleet</code>（运输队）→ 调用 <code>vLLM Server</code> 或 <code>SGLang Server</code>（高效厨房 / 特殊翻译）→ 从 <code>Hugging Face Hub</code> 拉模型干活 → 给用户输出回答！</p>
</li>
</ol>
<p>这样一套流程走完，一个从 “啥也不是的基础模型” 到 “能陪你聊天、干活的 AI” 就诞生啦～ 下次再看这张图，就知道每个模块是 “工厂” 里的哪个环节、数据咋从训练到你聊天框里啦！</p>

</div>
<div id="MySignature" role="contentinfo">
    知之为知之，不知为不知。
</div>
<div class="clear"></div>

		</div>
		<div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-08-01 17:21">2025-08-01 17:20</span>&nbsp;
<a href="https://www.cnblogs.com/jigang">没事学AI</a>&nbsp;
阅读(<span id="post_view_count">104</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19017324);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19017324', targetLink: 'https://www.cnblogs.com/jigang/p/19017324', title: 'DeepSeek-R1详解' })">举报</a>
</div>
	