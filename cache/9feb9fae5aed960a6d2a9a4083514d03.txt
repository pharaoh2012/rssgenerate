
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/HarmonyOSSDK/p/18886977" title="发布于 2025-05-20 14:43">
    <span role="heading" aria-level="2">探索自定义地图样式，打造应用专属个性化地图</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>不同应用的开发者对地图样式的展示需求差异很大。例如，物流类应用希望地图样式简洁一些，重点突出城市分布和快递路径；AR游戏类应用中的地图色彩需要和游戏UI适配，做的更酷炫一些；景区导览应用中的地图样式要景区特色相结合，重点呈现关键景点。</p>
<p>这就要求地图样式为开发者提供多种地图样式供选择，包括简洁风格、酷炫风格、特色风格等，让开发者可以根据自己的需求自定义地图样式，包括颜色、标注、线条等元素，以实现更加个性化的展示效果，以满足不同应用的需求。</p>
<p>HarmonyOS SDK<a href="https://developer.huawei.com/consumer/cn/sdk/map-kit?ha_source=hms1" title="地图服务" target="_blank" rel="noopener nofollow">地图服务</a>（Map Kit）提供了<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V13/map-style-V13?ha_source=hms1" title="自定义地图样式" target="_blank" rel="noopener nofollow">自定义地图样式</a>的能力，开发者可使用Petal Maps Studio管理地图样式或者通过传入自定义JSON更改地图样式。提供八大类，上百种地图元素的样式编辑，让开发者自由编辑个性化地图。同时，开发者只需编辑一次，地图即可适用于多种终端，极大的提高了开发效率。</p>
<p><img src="https://img2024.cnblogs.com/blog/2396482/202505/2396482-20250520144206709-1272124002.png" alt="image" loading="lazy"></p>
<h3 id="开发步骤">开发步骤</h3>
<p>Map Kit提供两种方法设置自定义地图样式：</p>
<p>• 设置样式ID：使用Petal Maps Studio管理地图样式，并使用样式ID将它们链接到您的地图上。您可以在Petal Maps Studio上创建新样式，或导入现有样式定义。样式一旦发布，使用此样式的应用都会自动应用新样式。</p>
<p>• 设置样式内容：通过传入自定义JSON更改地图样式，JSON的定义参见<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V13/map-style-V13?ha_source=hms1#section156991344101012" title="样式参考" target="_blank" rel="noopener nofollow">样式参考</a>。</p>
<h4 id="设置样式id">设置样式ID</h4>
<ol>
<li>
<p>导入相关模块。</p>
<p>import { MapComponent, mapCommon, map } from '@kit.MapKit'; import { AsyncCallback } from '@kit.BasicServicesKit';</p>
</li>
<li>
<p>创建样式ID。</p>
</li>
</ol>
<p>a. 登录Petal Maps Studio。</p>
<p><img src="https://img2024.cnblogs.com/blog/2396482/202505/2396482-20250520144222449-1871784084.png" alt="image" loading="lazy"></p>
<p>b. 点击"Create map"创建自定义样式。</p>
<p><img src="https://img2024.cnblogs.com/blog/2396482/202505/2396482-20250520144232732-1347860593.png" alt="image" loading="lazy"></p>
<p>c. 导入JSON样式文件，点击"Import"。</p>
<p><img src="https://img2024.cnblogs.com/blog/2396482/202505/2396482-20250520144242344-1470914568.png" alt="image" loading="lazy"></p>
<p>d. 在编辑器里修改样式。</p>
<p><img src="https://img2024.cnblogs.com/blog/2396482/202505/2396482-20250520144251585-181865902.png" alt="image" loading="lazy"></p>
<p>e. 点击"SAVE"生成预览ID，预览ID在编辑样式时会重新生成，您可以通过预览ID测试样式效果。点击"PUBLISH"发布生成样式ID，样式ID是唯一ID，一旦发布生效不会变化。</p>
<p><img src="https://img2024.cnblogs.com/blog/2396482/202505/2396482-20250520144302610-1613089812.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/2396482/202505/2396482-20250520144311266-830713608.png" alt="image" loading="lazy"></p>
<ol start="3">
<li>Map Kit提供两种方法设置样式ID：</li>
</ol>
<p>• 在创建地图后设置样式ID</p>
<pre><code>@Entry
@Component
struct CustomMapStyleDemo {
  private mapOptions?: mapCommon.MapOptions;
  private mapController?: map.MapComponentController;
  private callback?: AsyncCallback&lt;map.MapComponentController&gt;;

  aboutToAppear(): void {
    // 地图初始化参数
    this.mapOptions = {
      position: {
        target: {
          latitude: 31.984410259206815,
          longitude: 118.76625379397866
        },
        zoom: 15
      }
    };
    this.callback = async (err, mapController) =&gt; {
      if (!err) {
        this.mapController = mapController;
        // 自定义样式参数，styleId需要替换为您自己的样式ID或者预览ID，样式ID或者预览ID可在Petal Maps Studio平台上创建
        let param: mapCommon.CustomMapStyleOptions = {
           styleId: "1346407266336828736"
        };
        // 设置自定义样式
        await this.mapController.setCustomMapStyle(param);
      }
    };
  }

  build() {
    Stack() {
      Column() {
        MapComponent({ mapOptions: this.mapOptions, mapCallback: this.callback });
      }.width('100%')
    }.height('100%')
  }
}

</code></pre>
<p>• 在初始化地图时设置样式ID</p>
<pre><code>@Entry
@Component
struct CustomMapStyleDemo {
  private mapOptions?: mapCommon.MapOptions;
  private mapController?: map.MapComponentController;
  private callback?: AsyncCallback&lt;map.MapComponentController&gt;;

  aboutToAppear(): void {
    // 地图初始化参数
    this.mapOptions = {
      position: {
        target: {
          latitude: 31.984410259206815,
          longitude: 118.76625379397866
        },
        zoom: 15
      },
      // 自定义样式参数，styleId需要替换为您自己的样式ID或者预览ID，样式ID或者预览ID可在Petal Maps Studio平台上创建
      styleId: "1346407266336828736"
    };
    this.callback = async (err, mapController) =&gt; {
      if (!err) {
        this.mapController = mapController;
      }
    };
  }

  build() {
    Stack() {
      Column() {
        MapComponent({ mapOptions: this.mapOptions, mapCallback: this.callback });
      }.width('100%')
    }.height('100%')
  }
}

</code></pre>
<p>设置样式ID之后效果如下：</p>
<p><img src="https://img2024.cnblogs.com/blog/2396482/202505/2396482-20250520144323146-1527292814.png" alt="image" loading="lazy"></p>
<p>设置样式内容</p>
<ol>
<li>导入相关模块。</li>
</ol>
<pre><code>import { MapComponent, mapCommon, map } from '@kit.MapKit'; 
import { AsyncCallback } from '@kit.BasicServicesKit';
</code></pre>
<ol start="2">
<li>设置样式内容。</li>
</ol>
<pre><code>@Entry
@Component
struct CustomMapStyleDemo {
  private mapOptions?: mapCommon.MapOptions;
  private mapController?: map.MapComponentController;
  private callback?: AsyncCallback&lt;map.MapComponentController&gt;;

  aboutToAppear(): void {
    // 地图初始化参数
    this.mapOptions = {
      position: {
        target: {
          latitude: 31.984410259206815,
          longitude: 118.76625379397866
        },
        zoom: 15
      }
    };
    this.callback = async (err, mapController) =&gt; {
      if (!err) {
        this.mapController = mapController;
        // 自定义样式参数
        let param: mapCommon.CustomMapStyleOptions = {
               styleContent: `[{
                   "mapFeature": "landcover.natural",
                   "options": "geometry.fill",
                   "paint": {
                       "color": "#8FBC8F"
                   }},
                   {
                  "mapFeature": "water",
                  "options": "geometry.fill",
                  "paint": {
                      "color": "#4682B4"
                  }}]`
        };
        // 设置自定义样式
        await this.mapController.setCustomMapStyle(param);
      }
    };
  }

  build() {
    Stack() {
      Column() {
        MapComponent({ mapOptions: this.mapOptions, mapCallback: this.callback });
      }.width('100%')
    }.height('100%')
  }
}
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/2396482/202505/2396482-20250520144332944-640048116.png" alt="image" loading="lazy"></p>
<p><strong>了解更多详情&gt;&gt;</strong></p>
<p>访问<a href="https://developer.huawei.com/consumer/cn/sdk/map-kit?ha_source=hms1" title="地图服务联盟官网" target="_blank" rel="noopener nofollow">地图服务联盟官网</a></p>
<p>获取<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V13/map-style-V13?ha_source=hms1" title="自定义地图样式开发指导文档" target="_blank" rel="noopener nofollow">自定义地图样式开发指导文档</a></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.06794062251967592" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-20 14:44">2025-05-20 14:43</span>&nbsp;
<a href="https://www.cnblogs.com/HarmonyOSSDK">HarmonyOS_SDK</a>&nbsp;
阅读(<span id="post_view_count">50</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18886977);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18886977', targetLink: 'https://www.cnblogs.com/HarmonyOSSDK/p/18886977', title: '探索自定义地图样式，打造应用专属个性化地图' })">举报</a>
</div>
        