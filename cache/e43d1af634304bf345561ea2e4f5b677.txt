
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/fkxxgis/p/18660643" title="发布于 2025-01-08 21:27">
    <span role="heading" aria-level="2">Python在多个Excel文件中找出缺失数据行数多的文件</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        本文介绍基于Python语言，针对一个文件夹下大量的Excel表格文件，基于其中每一个文件内、某一列数据的特征，对其加以筛选，并将符合要求与不符合要求的文件分别复制到另外两个新的文件夹中的方法~
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>  本文介绍基于<strong>Python</strong>语言，针对一个<strong>文件夹</strong>下大量的<strong>Excel</strong>表格文件，基于其中<strong>每一个文件</strong>内、<strong>某一列数据</strong>的特征，对其加以筛选，并将<strong>符合要求</strong>与<strong>不符合要求</strong>的文件分别复制到另外<strong>两个新的文件夹</strong>中的方法。</p>
<p>  首先，我们来明确一下本文的具体需求。现有一个文件夹，其中有大量的<strong>Excel</strong>表格文件（在本文中我们就以<code>csv</code>格式的文件为例）；如下图所示。</p>
<p><img src="https://img2024.cnblogs.com/blog/3080295/202501/3080295-20250108212521495-1415437434.png" alt="image" loading="lazy"></p>
<p>  其中，每一个<strong>Excel</strong>表格文件都有着如下图所示的数据格式。</p>
<p><img src="https://img2024.cnblogs.com/blog/3080295/202501/3080295-20250108212515212-1142301856.png" alt="" loading="lazy"></p>
<p>  如上图所示，各个文件都有着这样的问题——有些行的数据是无误的，而有些行，除了第一列，其他列都是<code>0</code>值。因此，我们希望就以第<code>2</code>列为标准，找出含有<code>0</code>值数量<strong>低于或高于某一阈值</strong>的表格文件——其中，<code>0</code>值数量多，肯定不利于我们的分析，我们将其放入一个新的文件夹；而<code>0</code>值数量少的，我们才可以对这一表格文件加以后续的分析，我们就将其放入另一个新的文件夹中。因此，计算出每一个表格文件对应的的<code>0</code>值数量百分比后，我们就进一步将这一<strong>Excel</strong>表格文件复制到对应的文件夹内。</p>
<p>  知道了需求，我们就可以开始代码的撰写。其中，本文用到的代码如下所示。</p>
<pre><code class="language-python"># -*- coding: utf-8 -*-
"""
Created on Tue May 16 20:19:50 2023

@author: fkxxgis
"""

import os
import shutil
import pandas as pd

def filter_copy_files(original_path, useful_path, useless_path, threshold):
    original_all_file = os.listdir(original_path)
    for file in original_all_file:
        path = os.path.join(original_path, file)
        if file.endswith(".csv") and os.path.isfile(path):
            df = pd.read_csv(path)
            column_value = df.iloc[:, 1]
            zero_count = (column_value == 0).sum()
            zero_ratio = zero_count / len(column_value)
            
            if zero_ratio &lt; threshold:
                new_path = os.path.join(useful_path, file)
                shutil.copy(path, new_path)
            else:
                new_path = os.path.join(useless_path, file)
                shutil.copy(path, new_path)

filter_copy_files("E:/01_Reflectivity/99_Model_Training/00_Data/02_Extract_Data/13_AllYearAverage",
                  "E:/01_Reflectivity/99_Model_Training/00_Data/02_Extract_Data/14_PointSelection/LowMissingRate",
                  "E:/01_Reflectivity/99_Model_Training/00_Data/02_Extract_Data/14_PointSelection/HighMissingRate",
                  0.30)
</code></pre>
<p>  其中，上述代码是一个筛选并复制文件的函数。该函数的目的是根据给定的阈值将具有不同缺失率的文件从一个文件夹复制到另外两个文件夹。</p>
<p>  在代码中，<code>filter_copy_files</code>函数接受四个参数：</p>
<ul>
<li><code>original_path</code>：原始文件夹的路径，其中包含要筛选的<code>.csv</code>文件。</li>
<li><code>useful_path</code>：有用文件的目标文件夹路径，将满足阈值要求（也就是<code>0</code>值数量低于阈值）的文件复制到此处。</li>
<li><code>useless_path</code>：无用文件的目标文件夹路径，将不满足阈值要求（也就是<code>0</code>值数量高于阈值）的文件复制到此处。</li>
<li><code>threshold</code>：阈值，用于确定文件的缺失率是否满足要求。</li>
</ul>
<p>  函数首先使用<code>os.listdir</code>获取原始文件夹中的所有文件名，然后遍历每个文件名。对于以<code>.csv</code>结尾且为文件的文件，函数使用<code>pd.read_csv</code>读取<code>.csv</code>文件，并通过<code>df.iloc[:, 1]</code>获取第<code>2</code>列的值。</p>
<p>  接下来，函数计算第<code>2</code>列中为零的元素数量，并通过将其除以列的总长度来计算缺失率。根据阈值判断缺失率是否满足要求。</p>
<p>  如果缺失率小于阈值，函数将文件复制到<code>useful_path</code>目标文件夹中，使用<code>shutil.copy</code>函数实现复制操作。否则，函数将文件复制到<code>useless_path</code>文件夹中。</p>
<p>  最后，我们调用了<code>filter_copy_files</code>函数，并传递了相应的参数来执行文件筛选和复制操作。</p>
<p>  运行上述代码，我们即可在对应的文件夹中看到文件。如下图所示，<code>0</code>值数量低于阈值的表格文件都复制到了这个<code>LowMissingRate</code>文件夹中，我们即可对其加以后续处理；而那些<code>0</code>值数量高于阈值的表格文件，就放到另一个<code>HighMissingRate</code>文件夹中了。</p>
<p><img src="https://img2024.cnblogs.com/blog/3080295/202501/3080295-20250108212515208-198197653.png" alt="" loading="lazy"></p>
<p>  至此，大功告成。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.6183620743310185" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-08 21:28">2025-01-08 21:27</span>&nbsp;
<a href="https://www.cnblogs.com/fkxxgis">疯狂学习GIS</a>&nbsp;
阅读(<span id="post_view_count">33</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18660643" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18660643);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18660643', targetLink: 'https://www.cnblogs.com/fkxxgis/p/18660643', title: 'Python在多个Excel文件中找出缺失数据行数多的文件' })">举报</a>
</div>
        