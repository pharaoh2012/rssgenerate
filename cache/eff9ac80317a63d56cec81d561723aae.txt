
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/qife122/p/18956328" title="发布于 2025-06-29 16:02">
    <span role="heading" aria-level="2">Fluent Reader - 现代化的桌面RSS阅读器</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        Fluent Reader是一款基于Electron的现代化桌面RSS阅读器应用，支持Fluent Design设计语言、多平台同步、全文解析等功能，提供优雅的阅读体验和强大的订阅管理能力。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="项目标题与描述">项目标题与描述</h2>
<p>Fluent Reader 是一款现代化的桌面 RSS 阅读器应用，采用 Fluent Design 设计语言，支持全黑暗模式。该项目基于 Electron 构建，提供了跨平台的 RSS 订阅管理解决方案。</p>
<p>主要特点：</p>
<ul>
<li>支持本地阅读或与自托管服务同步（兼容 Fever 或 Google Reader API）</li>
<li>多平台支持（Windows/macOS/Linux）</li>
<li>响应式设计和优雅的用户界面</li>
</ul>
<p><img alt="应用截图" loading="lazy" data-src="https://i.imgs.ovh/2025/06/29/gdw7a.jpeg" class="lazyload"></p>
<h2 id="功能特性">功能特性</h2>
<ul>
<li>:artist_palette: 受 Fluent Design System 启发的现代化 UI，支持完整黑暗模式</li>
<li>:counterclockwise_arrows_button: 支持与多种 RSS 服务同步（Inoreader、Feedbin、The Old Reader、BazQux Reader 等）</li>
<li>📥 导入/导出 OPML 文件，完整的应用数据备份与恢复</li>
<li>📖 内置文章视图阅读全文或默认加载网页</li>
<li>:magnifying_glass_tilted_left: 支持正则表达式搜索文章或按阅读状态筛选</li>
<li>📂 使用文件夹式分组组织订阅源</li>
<li>⌨️ 单键键盘快捷键支持</li>
<li>⚙️ 自动隐藏、标记为已读或收藏文章的规则设置</li>
<li>🔔 后台获取文章并发送推送通知</li>
<li>:globe_showing_Europe-Africa: 多语言国际化支持（20+种语言）</li>
</ul>
<h2 id="安装指南">安装指南</h2>
<h3 id="windowsmacos-用户">Windows/macOS 用户</h3>
<p>推荐通过应用商店安装：</p>
<ul>
<li><a href="https://www.microsoft.com/store/apps/9P71FC94LRH8?cid=github" target="_blank" rel="noopener nofollow">Microsoft Store</a></li>
<li><a href="https://apps.apple.com/app/id1520907427" target="_blank" rel="noopener nofollow">Mac App Store</a></li>
</ul>
<h3 id="其他平台">其他平台</h3>
<p>可以从 <a href="https://github.com/yang991178/fluent-reader/releases" target="_blank" rel="noopener nofollow">GitHub Releases</a> 下载最新版本。</p>
<h3 id="从源码构建">从源码构建</h3>
<pre><code class="language-bash"># 安装依赖
npm install

# 编译TypeScript和依赖
npm run build

# 启动应用
npm run electron

# 生成签名证书
electron-builder create-self-signed-cert
# 打包Windows应用
npm run package-win
</code></pre>
<h2 id="使用说明">使用说明</h2>
<h3 id="基本使用">基本使用</h3>
<pre><code class="language-javascript">// 初始化应用
import { initApp } from "./scripts/models/app"
import { rootStore } from "./scripts/reducer"

rootStore.dispatch(initApp())

// 渲染主界面
ReactDOM.render(
    &lt;Provider store={rootStore}&gt;
        &lt;Root /&gt;
    &lt;/Provider&gt;,
    document.getElementById("app")
)
</code></pre>
<h3 id="订阅源管理">订阅源管理</h3>
<pre><code class="language-javascript">// 创建订阅源组
export class SourceGroup {
    isMultiple: boolean
    sids: number[]
    name?: string
    expanded?: boolean

    constructor(sids: number[], name: string = null) {
        name = (name &amp;&amp; name.trim()) || "Source group"
        if (sids.length == 1) {
            this.isMultiple = false
        } else {
            this.isMultiple = true
            this.name = name
            this.expanded = true
        }
        this.sids = sids
    }
}
</code></pre>
<h3 id="文章视图">文章视图</h3>
<pre><code class="language-javascript">// 文章组件
class Article extends React.Component&lt;ArticleProps, ArticleState&gt; {
    // 处理文章加载
    async function getArticle(url) {
        let article = get("a")
        if (get("m") === "1") {
            return (await Mercury.parse(url, {html: article})).content || ""
        } else {
            return article
        }
    }
    
    // 渲染文章内容
    render() {
        return (
            &lt;div id="main"&gt;&lt;/div&gt;
        )
    }
}
</code></pre>
<h2 id="核心代码">核心代码</h2>
<h3 id="主窗口管理">主窗口管理</h3>
<pre><code class="language-typescript">// WindowManager.ts
export class WindowManager {
    mainWindow: BrowserWindow = null
    
    createWindow() {
        this.mainWindow = new BrowserWindow({
            title: "Fluent Reader",
            backgroundColor: nativeTheme.shouldUseDarkColors ? "#282828" : "#faf9f8",
            vibrancy: "sidebar",
            width: 1200,
            height: 700,
            minWidth: 992,
            minHeight: 600,
            frame: process.platform === "darwin",
            titleBarStyle: "hiddenInset",
            webPreferences: {
                webviewTag: true,
                contextIsolation: true,
                preload: path.join(app.getAppPath(), "dist/preload.js")
            }
        })
    }
}
</code></pre>
<h3 id="数据存储">数据存储</h3>
<pre><code class="language-typescript">// db.ts
export async function init() {
    sourcesDB = await sdbSchema.connect({ onUpgrade: onUpgradeSourceDB })
    sources = sourcesDB.getSchema().table("sources")
    itemsDB = await idbSchema.connect()
    items = itemsDB.getSchema().table("items")
    
    if (window.settings.getNeDBStatus()) {
        await migrateNeDB()
    }
}
</code></pre>
<h3 id="主题设置">主题设置</h3>
<pre><code class="language-typescript">// theme.ts
export function setThemeDefaultFont(locale: string) {
    switch (locale) {
        case "zh-CN":
            lightTheme.defaultFontStyle.fontFamily = 
                '"Segoe UI", "Source Han Sans SC Regular", "Microsoft YaHei", sans-serif'
            break
        case "ja":
            lightTheme.defaultFontStyle.fontFamily = 
                '"Segoe UI", "Source Han Sans JP Regular", "Yu Gothic UI", sans-serif'
            break
        // 其他语言支持...
    }
}
</code></pre>
<p>更多精彩内容 请关注我的个人公众号 公众号（办公AI智能小助手）<br>
公众号二维码<br>
<img alt="" title="办公AI智能小助手" loading="lazy" data-src="https://i.imgs.ovh/2025/06/21/AejG6.png" class="lazyload"></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-06-29 16:02">2025-06-29 16:02</span>&nbsp;
<a href="https://www.cnblogs.com/qife122">qife</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18956328);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18956328', targetLink: 'https://www.cnblogs.com/qife122/p/18956328', title: 'Fluent Reader - 现代化的桌面RSS阅读器' })">举报</a>
</div>
        