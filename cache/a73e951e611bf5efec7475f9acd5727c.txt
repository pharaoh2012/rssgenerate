
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiao987334176/p/18806251" title="发布于 2025-04-02 16:55">
    <span role="heading" aria-level="2">SearXNG私有化部署与Dify集成</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h1>一、概述</h1>
<p>SearXNG 是一个免费的互联网元搜索引擎，它聚合了来自各种搜索服务和数据库的结果，但摆脱了隐私追踪 —— 用户行为既不会被引擎跟踪也不会被分析。</p>
<p><strong>功能特性</strong></p>
<ul>
<li>自托管，可以私有化部署</li>
<li>没有用户跟踪/没有分析</li>
<li>可以自定义设置脚本和 cookies</li>
<li>安全加密的连接</li>
<li>轻松整合了近200个搜索引擎，用户可自定义选择不同的引擎</li>
<li>多语言支持，约 60 个，包含中文、英文等</li>
<li>提供近 100 个维护良好的公共查询实例</li>
</ul>
<p>&nbsp;</p>
<p>Github官方地址：</p>
<p><a href="https://github.com/searxng/searxng-docker.git" rel="noopener nofollow">https://github.com/searxng/searxng-docker.git</a></p>
<p>&nbsp;</p>
<p>官方安装文档：</p>
<p><a href="https://docs.searxng.org/admin/installation-docker.html#installation-docker" rel="noopener nofollow">https://docs.searxng.org/admin/installation-docker.html#installation-docker</a></p>
<p>&nbsp;</p>
<p><span style="color: rgba(255, 0, 0, 1)"><strong>简单来说，如果你的AI模型没有联网功能，可以通过这个插件，来实现联网功能。</strong></span></p>
<h1>二、安装SearXNG</h1>
<p>根据官方安装文档，只需要使用docker启动即可</p>
<div class="cnblogs_code">
<pre>$ <span style="color: rgba(0, 0, 255, 1)">mkdir</span> my-<span style="color: rgba(0, 0, 0, 1)">instance
$ cd my</span>-<span style="color: rgba(0, 0, 0, 1)">instance
$ export PORT</span>=<span style="color: rgba(128, 0, 128, 1)">8080</span><span style="color: rgba(0, 0, 0, 1)">
$ docker pull searxng</span>/<span style="color: rgba(0, 0, 0, 1)">searxng
$ docker run </span>--<span style="color: rgba(0, 0, 255, 1)">rm</span><span style="color: rgba(0, 0, 0, 1)"> \
             </span>-d -p ${PORT}:<span style="color: rgba(128, 0, 128, 1)">8080</span><span style="color: rgba(0, 0, 0, 1)"> \
             </span>-v <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">${PWD}/searxng:/etc/searxng</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)"> \
             </span>-e <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">BASE_URL=http://localhost:$PORT/</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)"> \
             </span>-e <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">INSTANCE_NAME=my-instance</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)"> \
             searxng</span>/<span style="color: rgba(0, 0, 0, 1)">searxng
2f998.... # container</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">s ID</span></pre>
</div>
<p>&nbsp;</p>
<p>为了方便管理SearXNG，这里使用docker-compose来启动。</p>
<p>编辑文件docker-compose.yaml</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">mkdir</span> /data/<span style="color: rgba(0, 0, 0, 1)">searxng
cd </span>/data/<span style="color: rgba(0, 0, 0, 1)">searxng
</span><span style="color: rgba(0, 0, 255, 1)">vi</span> docker-compose.yaml</pre>
</div>
<p>内容如下：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">services:
  searxng:
    image: searxng</span>/<span style="color: rgba(0, 0, 0, 1)">searxng
    container_name: searxng
    ports:
      </span>- <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">8081:8080</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
    environment:
      BASE_URL: http:</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">10.44.32.14:8081</span>
      INSTANCE_NAME: my-<span style="color: rgba(0, 0, 0, 1)">instance
    volumes:
      </span>- ./searxng:/etc/<span style="color: rgba(0, 0, 0, 1)">searxng:rw
    restart: always

volumes:
  searxng</span>-data:</pre>
</div>
<p>说明：</p>
<p>8081:8080，避免端口冲突，改成8081</p>
<p>BASE_URL，访问地址http://10.44.32.14:8081。<span style="color: rgba(255, 0, 0, 1)"><strong>注意：这里要求dify能够访问到searxng即可。</strong></span></p>
<p>&nbsp;</p>
<p>启动应用</p>
<div class="cnblogs_code">
<pre>docker-compose up -d</pre>
</div>
<p>&nbsp;</p>
<p>生成密钥</p>
<div class="cnblogs_code">
<pre>openssl rand -hex <span style="color: rgba(128, 0, 128, 1)">32</span></pre>
</div>
<p>输出：</p>
<p>34788b49b8f9d819cfcb09da447b0d8586c63ad1acd469a1e446</p>
<p>&nbsp;</p>
<p>修改配置文件</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">cp</span> searxng/settings.yml searxng/<span style="color: rgba(0, 0, 0, 1)">settings.yml.bak
</span><span style="color: rgba(0, 0, 255, 1)">vi</span> searxng/settings.yml </pre>
</div>
<p>清空默认内容，一行不留，完整内容如下：</p>
<div class="cnblogs_code">
<pre># see https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">docs.searxng.org/admin/settings/settings.html#settings-use-default-settings</span>
use_default_settings: <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">
server:
  # base_url is defined </span><span style="color: rgba(0, 0, 255, 1)">in</span> the SEARXNG_BASE_URL environment variable, see .<span style="color: rgba(0, 0, 255, 1)">env</span> and docker-<span style="color: rgba(0, 0, 0, 1)">compose.yml
  secret_key: </span><span style="color: rgba(128, 0, 0, 1)">"34788b49b8f9d819cfcb09da447b0d8586c63ad1acd469a1e446</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
  limiter: </span><span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">
  image_proxy: </span><span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">
ui:
  static_use_hash: </span><span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">
redis:
  url: </span><span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">
search:
  formats:
    </span>-<span style="color: rgba(0, 0, 0, 1)"> html
</span>    - json</pre>
</div>
<p>说明：</p>
<p>secret_key: 上面生成的密钥</p>
<p>limiter: false，禁用请求限制器，否则可能触发 too many requests 的问题</p>
<p>redis:</p>
<p>&nbsp;&nbsp;&nbsp; url: false，这里不需要使用redis存储</p>
<p>search:</p>
<p>&nbsp; formats:</p>
<p>&nbsp;&nbsp;&nbsp; - html</p>
<p>&nbsp;&nbsp;&nbsp; - json，扩展数据返回格式，增加json，否则设置SearXNG插件，添加访问search接口会报错403</p>
<p>&nbsp;</p>
<p>重新启动应用</p>
<div class="cnblogs_code">
<pre>docker-<span style="color: rgba(0, 0, 0, 1)">compose down
docker</span>-compose up -d</pre>
</div>
<p>访问searxng页面</p>
<p>http://10.44.32.14:8081/</p>
<p>&nbsp;</p>
<p>验证 json 接口</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202504/1341090-20250402165013746-1260681749.png" alt=""></p>
<p>搜索功能展示</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202504/1341090-20250402165047610-884227631.png" alt=""></p>
<h1>三、Dify集成</h1>
<p>登录到dify，点击工具，搜索SearXNG</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202504/1341090-20250402165133284-1518663887.png" alt=""></p>
<p>点击插件，设置授权</p>
<p>输入地址：</p>
<p>http://10.44.32.14:8081</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202504/1341090-20250402165211129-1864580285.png" alt=""></p>
<p>&nbsp;</p>
<p>新建智能体</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202504/1341090-20250402165241663-1116986077.png" alt=""></p>
<p>提示词如下：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">## 技能
### 技能1：使用searxng_search工具进行联网搜索
### 技能2：使用webscraper功能对搜索到的相关内容进行爬取，并进行总结分析
## 限制
</span>-<span style="color: rgba(0, 0, 0, 1)"> 如果没有相关内容，再进行联网搜索
</span>-<span style="color: rgba(0, 0, 0, 1)"> 你的回答应严格针对分析任务。使用结构化语言，逐步思考
</span>-<span style="color: rgba(0, 0, 0, 1)"> 使用的语言应和用户提问的语言相同
</span>- 搜索的关键词必须和用户提问的内容一致</pre>
</div>
<p>点击工具添加</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202504/1341090-20250402165327131-1381390670.png" alt=""></p>
<p>添加2个工具</p>
<p>searxng_search</p>
<p>webscraper</p>
<p>&nbsp;</p>
<p>设置模型</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202504/1341090-20250402165353507-1984642695.png" alt=""></p>
<p>说明：</p>
<p>searxng_search工具返回的搜索结果，有几十条，这并不是我们最终想要的。</p>
<p>所以需要webscraper功能对搜索到的相关内容进行爬取，并进行总结分析，得到一条最终结果，才是我们想要的。</p>
<p>就像上面看到的搜索上海天气，有几十条。那么我们只需一条最终结果即可。</p>
<p>&nbsp;</p>
<p>点击发布更新，点击运行</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202504/1341090-20250402165433251-564923552.png" alt=""></p>
<p>今天上海天气怎么样？</p>
<p>效果如下：</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202504/1341090-20250402165458288-1115257213.png" alt=""></p>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.9757482257280092" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-02 16:57">2025-04-02 16:55</span>&nbsp;
<a href="https://www.cnblogs.com/xiao987334176">肖祥</a>&nbsp;
阅读(<span id="post_view_count">182</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18806251" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18806251);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18806251', targetLink: 'https://www.cnblogs.com/xiao987334176/p/18806251', title: 'SearXNG私有化部署与Dify集成' })">举报</a>
</div>
        