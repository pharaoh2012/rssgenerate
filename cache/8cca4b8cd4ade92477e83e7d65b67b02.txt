
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/li-jian-Lee/p/18792312" title="发布于 2025-03-25 20:52">
    <span role="heading" aria-level="2">智能Agent如何改造传统工作流：从搜索到全能助手</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="智能agent如何改造传统工作流从搜索到全能助手">智能Agent如何改造传统工作流：从搜索到全能助手</h1>
<h2 id="引言当ai遇上工作流">引言：当AI遇上工作流</h2>
<p>还记得我们以前搜索信息的方式吗？输入关键词，浏览大量结果，筛选有用内容，再整合成我们需要的答案。这个过程不仅耗时，还常常让人感到疲惫。</p>
<p>如今，智能Agent的出现正在彻底改变这一切。想象一下，你只需提出一个问题："北京今年什么时候入秋，哪里是赏秋的最佳去处？什么时候去最合适？"， <strong>AI就能直接给你一个完整、准确的答案，甚至还能根据你的后续问题深入解释 。这就是Agent赋能工作流的魅力所在。</strong></p>
<p>本文将用通俗易懂的语言，带你了解智能Agent如何改造传统工作流，让AI真正成为你的得力助手。</p>
<h2 id="什么是agent为什么它能改变工作方式">什么是Agent？为什么它能改变工作方式？</h2>
<p>简单来说，Agent就是一个能够理解你的需求，并自主调用各种工具来完成任务的AI助手。它不仅能理解你的问题，还能规划解决方案，调用合适的工具，最后整合结果呈现给你。</p>
<p><strong>传统AI只能回答问题，而Agent则可以"行动"</strong> ——它能搜索网络、生成图片、编写代码、分析数据，就像一个全能助理。</p>
<p><img src="https://img2023.cnblogs.com/blog/2045416/202503/2045416-20250321161106589-1212840980.png" alt="Agent工作原理示意图" loading="lazy"></p>
<h2 id="agent如何智能调用工具">Agent如何智能调用工具？</h2>
<p>当你向Agent提问时，它会经历以下几个步骤：</p>
<ol>
<li><strong>理解你的需求</strong>：分析你的问题，确定需要完成什么任务</li>
<li><strong>选择合适的工具</strong>：从它的"工具箱"中选择最适合的工具</li>
<li><strong>准备必要的参数</strong>：提取问题中的关键信息作为工具的输入</li>
<li><strong>执行工具调用</strong>：使用选定的工具完成任务</li>
<li><strong>整合结果</strong>：将工具返回的结果转化为易于理解的回答</li>
</ol>
<p>比如当你问"北京今年什么时候入秋"时，Agent会识别出这是一个天气查询任务，需要调用网络搜索工具，并将"北京"、"2024"、"入秋时间"作为关键参数。</p>
<h2 id="从传统搜索到智能agent三代进化">从传统搜索到智能Agent：三代进化</h2>
<h3 id="第一代传统搜索引擎">第一代：传统搜索引擎</h3>
<p>传统搜索引擎只能返回相关网页列表，你需要自己浏览、筛选和整合信息。比如搜索问题【<strong>北京今年什么时候入秋，哪里是赏秋的最佳去处？什么时候去最合适</strong>】结果如下：</p>
<img src="https://img2023.cnblogs.com/blog/2045416/202503/2045416-20250321161332844-380186293.png" alt="传统搜索结果" style="zoom: 67%">
<p>你会得到多个网页链接，需要自己点击进入，找到相关信息，再整合答案。这个过程耗时且效率低下。</p>
<h3 id="第二代ai总结--搜索引擎">第二代：AI总结 + 搜索引擎</h3>
<p>简单的AI搜索能够总结网页内容，但缺乏深度思考和规划能力。让 AI搜索 回答【<strong>北京今年什么时候入秋，哪里是赏秋的最佳去处？什么时候去最合适</strong>】以智谱官方给出的的AI搜索结果为例：</p>
<p><img src="https://img2023.cnblogs.com/blog/2045416/202503/2045416-20250321161348883-1932392340.png" alt="简单AI搜索结果" loading="lazy"></p>
<p>挺不错，问题基本都回答了，但逻辑有点凌乱，不够清晰，但是最关键的是： <strong>搜索时间错误了！！！</strong> LLM只是为了搜索问题而搜索忽视了“ <strong>今年</strong> ”这个关键词，而且并没有把得到的【北京的秋天时间】、【北京赏秋去处】两部分信息很好的联系起来</p>
<p>上面是智谱官方的AI搜索，通用系统提示词和思维链等方面优化做的还是很好，所以缺陷的对比效果不明显，来看一下依据这个逻辑用Coze搭建的AI智能助手，也集成了web_search的能力。同样的问题，让 AI搜索 回答【<strong>北京今年什么时候入秋，哪里是赏秋的最佳去处？什么时候去最合适</strong>】效果如下：</p>
<p><img src="https://img2023.cnblogs.com/blog/2045416/202503/2045416-20250323151339750-978346663.png" alt="简单AI搜索结果coze" loading="lazy"></p>
<p>我是初步实践做的这个AI智能助手，因为没有给他配置工作流和思维链的方式，所以他也只能是根据coze的function call的能力<strong>分开</strong>两次调用web_search来检索 <strong>【北京的秋天时间】、【北京赏秋去处】</strong>。然后coze的LLM <strong>简单拼接</strong>了两个搜索信息的回答。所以说自己搭建的助手还有很大的优化空间。</p>
<p><strong>这里就明显暴露了第二代AI搜索的核心问题：缺乏上下文理解和推理能力，无法真正理解用户意图的深层次含义</strong> 。从技术角度看，这是因为简单的RAG（检索增强生成）系统虽然能够获取外部信息，但缺乏对信息的深度处理和整合能力。</p>
<p>所以Agent可以作为载体与外部世界进行交互处理问题，但是对于复杂情况 / 高精度解决方案还是要依靠完善的Agent工作流 / 思维链（类似O1模型范式）来助力AI能力的落地</p>
<h3 id="第三代工作流增强的智能agentai总结--搜索引擎--工作流思维链">第三代：工作流增强的智能Agent（AI总结 + 搜索引擎 + 工作流/思维链）</h3>
<p>工作流增强的Agent不仅能搜索信息，还能规划解决方案，分步骤执行任务，并整合结果。智谱官方的<strong>AI搜索+深度推理</strong>回答【<strong>北京今年什么时候入秋，哪里是赏秋的最佳去处？什么时候去最合适</strong>】效果如下</p>
<p><img src="https://img2023.cnblogs.com/blog/2045416/202503/2045416-20250321161411898-95868449.png" alt="工作流增强的Agent结果" loading="lazy"></p>
<p>在官方的AI搜索智能体中，时间正确，抓住用户和核心诉求回答问题，并且逻辑清晰地呈现结果。这里能够更加智能准确的回答，<strong>深度推理、思维链的能力功不可没。</strong></p>
<p>分析一下这里agent的工作流和逻辑。首先都是一样的，将问题进行了拆解：</p>
<ol>
<li>第一步查询今年（2024年）的北京入秋时间；</li>
<li>紧接着查询北京赏秋的最佳去处<strong>和时间</strong>；</li>
</ol>
<p>最后综合两部分搜索得到的结果进行总结回答，并且完全按照问题拆解的步骤进行回答，逻辑清晰。通过思维链的方式让AI搜索在解决LLM幻觉问题的同时也能变得更加聪明。</p>
<p>同时智谱的Agent也可以调用包括绘画、代码在内的各种工具，从而解决了传统搜索引擎和常规 AI 不能解决的难题，表现得更像 “人”了。</p>
<h2 id="实际案例用coze搭建自己的智能agent">实际案例：用Coze搭建自己的智能Agent</h2>
<p>Coze是一个让普通用户也能轻松创建Agent的平台。下面是我用Coze搭建的一个简单Agent示例，首先给智能体中的LLM加人设与回复逻辑的系统提示词，让他有相应主题的问答及语义理解的能力；</p>
<p>然后给Agent加上各种能力插件，比如getToutiaoNews、LinkReaderPlugin、bingWebSearch、kimiAI、CodeRunner等等，使其能够处理特殊任务，效果如下图所示：</p>
<p><img src="https://img2023.cnblogs.com/blog/2045416/202503/2045416-20250321161137374-1290125112.png" alt="Coze搭建的Agent" loading="lazy"></p>
<p>这个Agent能够：</p>
<ul>
<li>回答关于AI的问题</li>
<li>搜索网络获取最新信息</li>
<li>阅读网页内容进行深入分析</li>
<li>生成PPT等文档</li>
</ul>
<p>我的提问【什么是agent】会触发Doubao-pro的functionCall 能力，分析问题语义并调用相应的工具，比如bingSearch来找相关的介绍资料来回答问题</p>
<p>再比如，添加AiPPT插件就可以借助AI搜索【请搜索两个最新的AI开源项目并制作简单的ppt来简要介绍内容】到的资料直接转换为ppt进行展示出来。它会自动：</p>
<ol>
<li>使用搜索工具查找最新AI项目</li>
<li>分析搜索结果，提取关键信息</li>
<li>调用PPT生成工具，创建演示文稿<br>
<img src="https://img2023.cnblogs.com/blog/2045416/202503/2045416-20250323151430551-262907437.png" alt="coze智能体执行工作流过程" loading="lazy"></li>
</ol>
<p><img src="https://img2023.cnblogs.com/blog/2045416/202503/2045416-20250323151502937-1404574127.png" alt="Agent生成的PPT" loading="lazy"></p>
<p>可以看到Doubao-pro很清楚的理解了语义并规划了相应的工具调用过程，先使用bingSearch查找开源项目，然后LLM将学习总结的内容转换为ppt展示出来。</p>
<p>除了AI搜索，还可以对搜索到的链接中的信息进行进一步追问，这时Agent会调用LinkReaderPlugin工具来进一步获取搜索到的链接里面的内容来展开回答问题<br>
<img src="https://img2023.cnblogs.com/blog/2045416/202503/2045416-20250323151522426-947777214.png" alt="coze智能体使用读取链接补充信息" loading="lazy"></p>
<p>总的来说，用coze搭建一个优秀的agent主要可以分为以下步骤：</p>
<ol>
<li><strong>规划：</strong> 制定任务的关键方法
<ol>
<li>总结任务目标与执行形式</li>
<li>将任务分解为可管理的子任务，确立逻辑顺序和依赖关系</li>
<li>设计每个子任务的执行方法</li>
</ol>
</li>
<li><strong>实施：</strong> 分步构建和测试 Agent 功能
<ol>
<li>在 Coze 上搭建工作流框架，设定每个节点的逻辑关系</li>
<li>详细配置子任务节点，并验证每个子任务的可用性</li>
</ol>
</li>
<li><strong>完善：</strong> 全面评估并优化 Agent 效果
<ol>
<li>整体试运行 Agent，识别功能和性能的卡点</li>
<li>通过反复测试和迭代，优化至达到预期水平<br>
<img src="https://img2023.cnblogs.com/blog/2045416/202503/2045416-20250323151543593-944611823.png" alt="img" loading="lazy"></li>
</ol>
</li>
</ol>
<h3 id="coze搭建ai搜索与对话智能体的本地部署">Coze搭建AI搜索与对话智能体的本地部署</h3>
<p>coze平台支持api调用，于是我就借助搭建的agent的能力部署一个本地的Agent智能助手，项目库代码结构如下<br>
<img src="https://img2023.cnblogs.com/blog/2045416/202503/2045416-20250323151605222-1854757037.png" alt="coze本地部署AI搜索agent的代码" loading="lazy"></p>
<p>通过本地部署可视化Agent的输出效果如下：<br>
<img src="https://img2023.cnblogs.com/blog/2045416/202503/2045416-20250323151629121-1115487692.png" alt="coze本地部署AI搜索agent效果图" loading="lazy"></p>
<p>可以在本地就实现agent的web搜索功能、textToimage功能等等</p>
<p><strong>利用coze的api在本地部署agent时遇到的难点：</strong></p>
<ul>
<li>
<p>coze的说明文档对python的支持不是很好，很多细节接口实现细节需要去搜索</p>
</li>
<li>
<p>coze的鉴权方式兼容性比较差，我采用了一个开源的Coze类来封装了鉴权的</p>
</li>
<li>
<p>agent调用插件生成结果时可能会输出很多多余的内容，我优化了提示词输出的约束和api的输出格式调整</p>
</li>
</ul>
<p><strong>其次我也尝试了使用langchain的框架来搭建AI搜索的Agent</strong></p>
<p><img src="https://img2023.cnblogs.com/blog/2045416/202503/2045416-20250323151742947-1873859922.png" alt="langchain本地部署AI搜索agent" loading="lazy"></p>
<p><strong>利用langchain在本地用纯代码方法部署agent目前遇到的难点：</strong></p>
<ul>
<li>langchain官方提供的免费可用<strong>搜索插件很少</strong>，比如bing官方的搜索api自己用是需要订阅的</li>
<li>langchain的理解和学习成本高，涉及复杂架构和新术语。而且<strong>不同的已有插件api的出入参都需要大量时间去调试</strong></li>
<li>如果在langchain搭建工作流，需要考虑到环境配置和依赖管理复杂以及兼容性问题。</li>
</ul>
<h2 id="如何开始使用agent改造你的工作流">如何开始使用Agent改造你的工作流？</h2>
<p>想要开始使用Agent改造你的工作流，可以从以下几个简单步骤开始：</p>
<ol>
<li><strong>选择合适的平台</strong>：Coze、Dify、langchain、Crewai等都提供了Agent功能</li>
<li><strong>确定你的需求</strong>：思考哪些重复性工作可以交给Agent</li>
<li><strong>从简单任务开始</strong>：先用Agent处理简单的信息搜集、整理工作</li>
<li><strong>逐步扩展能力</strong>：随着你对Agent的了解加深，可以让它处理更复杂的任务</li>
</ol>
<p>对于普通用户，我推荐直接使用Coze这类平台，它们提供了友好的界面，无需编程知识就能创建功能强大的Agent。</p>
<h2 id="agent适用性自测问卷">Agent适用性自测问卷</h2>
<p>想知道你的工作是否适合用Agent改造？回答以下问题，评估一下吧！</p>
<ol>
<li>
<p><strong>你的工作中是否有大量需要搜索和整理信息的任务？</strong></p>
<ul>
<li>A. 经常需要</li>
<li>B. 偶尔需要</li>
<li>C. 几乎不需要</li>
</ul>
</li>
<li>
<p><strong>你是否经常需要处理结构化的数据（如表格、报表等）？</strong></p>
<ul>
<li>A. 是的，每天都要处理</li>
<li>B. 有时候需要</li>
<li>C. 很少需要</li>
</ul>
</li>
<li>
<p><strong>你是否需要定期生成类似格式的文档或报告？</strong></p>
<ul>
<li>A. 是的，这是我的日常工作</li>
<li>B. 有时候需要</li>
<li>C. 很少需要</li>
</ul>
</li>
<li>
<p><strong>你的工作中是否有明确的、可重复的流程？</strong></p>
<ul>
<li>A. 有很多这样的流程</li>
<li>B. 有一些固定流程</li>
<li>C. 大多是创造性工作，很少有固定流程</li>
</ul>
</li>
<li>
<p><strong>你是否经常需要在多个工具或平台之间切换来完成工作？</strong></p>
<ul>
<li>A. 是的，经常在多个工具间切换</li>
<li>B. 有时候需要</li>
<li>C. 通常只在一两个工具中工作</li>
</ul>
</li>
<li>
<p><strong>你的工作是否包含大量简单但耗时的任务？</strong></p>
<ul>
<li>A. 是的，有很多这样的任务</li>
<li>B. 有一些这样的任务</li>
<li>C. 几乎没有</li>
</ul>
</li>
<li>
<p><strong>你是否经常需要从大量信息中提取关键点？</strong></p>
<ul>
<li>A. 经常需要</li>
<li>B. 有时候需要</li>
<li>C. 很少需要</li>
</ul>
</li>
<li>
<p><strong>你是否愿意投入时间学习和配置AI工具？</strong></p>
<ul>
<li>A. 非常愿意</li>
<li>B. 有一定意愿</li>
<li>C. 不太愿意</li>
</ul>
</li>
</ol>
<p><strong>评分标准：</strong></p>
<ul>
<li>主要选择A：你的工作非常适合用Agent改造！可能会大幅提高你的工作效率。</li>
<li>主要选择B：你的工作中有一些任务适合用Agent处理，可以从这些任务开始尝试。</li>
<li>主要选择C：你的工作可能更依赖创造性思维，但Agent仍可以在信息收集和初步分析方面提供帮助。</li>
</ul>
<h2 id="常见问题解答">常见问题解答</h2>
<h3 id="1-agent和普通ai助手有什么区别">1. Agent和普通AI助手有什么区别？</h3>
<p><strong>回答：</strong> Agent比普通AI助手多了"行动"能力。普通AI助手只能基于已有知识回答问题，而Agent可以主动调用外部工具（如搜索引擎、代码执行器、数据分析工具等）来获取信息并执行任务。简单说，普通AI是"知道"，Agent是"知道+做到"。</p>
<h3 id="2-我没有编程基础能使用agent吗">2. 我没有编程基础，能使用Agent吗？</h3>
<p><strong>回答：</strong> 完全可以！现在有很多低代码或无代码平台（如Coze、Dify等）让普通用户也能轻松创建和使用Agent。这些平台提供了友好的图形界面，你只需通过简单的拖拽和配置就能创建功能强大的Agent。</p>
<h3 id="3-agent会不会泄露我的敏感信息">3. Agent会不会泄露我的敏感信息？</h3>
<p><strong>回答：</strong> 这取决于你使用的平台和配置。大多数正规Agent平台都有严格的隐私政策，但建议：</p>
<ul>
<li>不要让Agent处理高度敏感的个人或商业信息</li>
<li>使用支持本地部署的解决方案处理敏感数据</li>
<li>了解并配置平台的数据保留和隐私设置</li>
</ul>
<h3 id="4-agent的使用成本是多少">4. Agent的使用成本是多少？</h3>
<p><strong>回答：</strong> 成本因平台而异：</p>
<ul>
<li>许多平台提供免费入门级别（如Coze目前的基础功能是免费的）</li>
<li>付费版本通常按API调用次数或使用量计费</li>
<li>自建解决方案需要考虑开发成本和基础设施费用<br>
总体而言，对于个人用户，基础使用通常是可负担的，而企业级应用则需要根据规模和需求评估成本。</li>
</ul>
<h3 id="5-我的agent表现不佳如何改进">5. 我的Agent表现不佳，如何改进？</h3>
<p><strong>回答：</strong> 改进Agent性能的几个关键方法：</p>
<ul>
<li>优化提示词：明确、具体的指令通常能获得更好的结果</li>
<li>细化工作流：将复杂任务分解为更小的步骤</li>
<li>添加适当工具：确保Agent有完成任务所需的所有工具</li>
<li>增加示例：提供成功案例让Agent学习</li>
<li>收集反馈：记录失败案例，有针对性地改进</li>
</ul>
<p><strong>所以，你准备好让Agent改造你的工作流了吗？</strong></p>
<hr>
<p><strong>想了解更多？欢迎在评论区留言，分享你对Agent的看法或使用体验！</strong></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.8121398107094907" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-25 20:52">2025-03-25 20:52</span>&nbsp;
<a href="https://www.cnblogs.com/li-jian-Lee">遇健李的幸运</a>&nbsp;
阅读(<span id="post_view_count">99</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18792312" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18792312);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18792312', targetLink: 'https://www.cnblogs.com/li-jian-Lee/p/18792312', title: '智能Agent如何改造传统工作流：从搜索到全能助手' })">举报</a>
</div>
        