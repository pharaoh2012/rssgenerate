
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/longfurcat/p/18724563" title="发布于 2025-02-19 20:54">
    <span role="heading" aria-level="2">【杂谈】主键ID如何选择——自增数 OR UUID？</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h3>1.生成位置如何影响选择？</h3>
<p><strong>数据库往返时间</strong></p>
<p>使用自增数时，ID是由数据库在执行INSERT操作时生成的；而UUID则可以在应用层生成。</p>
<p>考虑这样的场景：</p>
<p>一个方法需要插入A和B两个实体。其中B的数据需要引用A的ID。</p>
<p>如果使用自增ID，则必须与数据库进行两次网络请求：</p>
<p>1.先插入A，获取A的ID；</p>
<p>2.然后使用A的ID构建B，再插入B。</p>
<p>而如果使用UUID，可以在应用层同时生成A和B的ID，之后一次性将两个实体提交给数据库，从而减少网络往返的次数，提高效率。</p>
<p><strong>ID冲突</strong></p>
<p>自增数在一个表内不会冲突，那两个表呢？</p>
<p>当业务发展到需要分库分表的时候，就不能再使用自增数作为ID了，因为两个库/表会生成相同的ID。这种ID冲突且不报错的问题，会导致数据混乱。</p>
<p>UUID虽然具有全球唯一性，极端情况也会有冲突，所以应用层需要想办法处理，确保ID唯一性，例如IID生成结合机器ID。</p>
<h3>2.有序与无序如何影响选择？</h3>
<p>ID是否有序对数据库性能有重要影响，特别是使用B-Tree索引。</p>
<p><strong>有序的ID：</strong>对B-Tree索引来说，键值有序，那么连续插入的数据都会一个或少数几个节点上，这意味着，数据库只需要对少量的物理块进行I/O读写，I/O范围小，性能较好。</p>
<p>eg：连续插入20条数据，都在一个节点上，只要加载一个物理块。</p>
<p><strong>无序的ID：</strong>键值无序，那么连续插入的数据可能随机分布在各个节点上，数据库就需要对大量的物理块进行I/O读写，性能较差。</p>
<p>eg：连续插入20条数据，经计算它们分布在20个不同节点上，需要加载20个物理块。</p>
<p>&nbsp;</p>
<p>显然，自增ID是有序的，所以在大多数情况下，它的性能优于无序的UUID。</p>
<p>值得一提的是，UUID也有多个版本，其中一些是有序的，例如UUIDv7和雪花算法（Snowflake）</p>
<p>而Java JDK默认使用的UUID是v4版本，是无序的。</p>
<h3>3.ID大小如何影响选择？</h3>
<p>ID大小指占用的存储空间。自增数通常是INT或BIGINT，分别是4字节和8字节。UUID一般由32个字符组成，占16字节。</p>
<p><strong>树的高度</strong></p>
<p>在B-Tree中，对于固定大小的节点，键值大小会影响一个节点能存储的键值数量（这里就是ID数量）。影响了单个节点存储的键值，就会影响节点数量，进而影响树的高度。</p>
<p>而树越高，一次查询需要访问的节点就更多，查询就更慢。</p>
<p><strong>内存开销</strong></p>
<p>相同数量的记录，ID的大小会影响到数据库引擎的缓存（索引和数据行）。同样大小的缓存空间，单个ID越大，能缓存的数据就越少。</p>
<p>例如：InnoDB使用innodb_buffer_pool_size控制缓存池大小</p>
<h3>总结</h3>
<p>总的来说，有序的UUID（UUIDv7，雪花算法）更适合分布式服务，自增ID更适合单机服务。</p>
<p>但是也要看具体业务，举个例子，如果分表的数据不存在跨表访问的情况，那么ID冲突就冲突了，没有任何影响。</p>
<p>而且，ID策略也能混着用，一个数据库里面不同表可以用不同的ID生成策略。</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.9848834165127315" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-19 20:54">2025-02-19 20:54</span>&nbsp;
<a href="https://www.cnblogs.com/longfurcat">猫毛·波拿巴</a>&nbsp;
阅读(<span id="post_view_count">316</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18724563" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18724563);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18724563', targetLink: 'https://www.cnblogs.com/longfurcat/p/18724563', title: '【杂谈】主键ID如何选择——自增数 OR UUID？' })">举报</a>
</div>
        