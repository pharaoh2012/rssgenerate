
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/code-daily/p/18801661" title="发布于 2025-03-31 10:21">
    <span role="heading" aria-level="2">继承的思维：从思维模式到架构设计的深度解析</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<section id="nice" style="background: linear-gradient(90deg, rgba(252, 8, 8, 0.03) 0, rgba(255, 255, 255, 0) 11.49%) left top / 20px 20px repeat scroll padding-box border-box, linear-gradient(360deg, rgba(50, 0, 0, 0.04) 0, rgba(255, 255, 255, 0) 12.16%) repeat rgba(0, 0, 0, 0); width: auto; font-family: Optima, PingFangSC-light, serif; font-size: 16px; color: rgba(0, 0, 0, 1); line-height: 1.5em; word-spacing: 0; letter-spacing: 0; overflow-wrap: break-word; text-align: left; padding: 0 10px; margin: 0" data-tool="mdnice编辑器" data-website="https://www.mdnice.com">
<h2 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: flex; flex-direction: unset; float: unset; height: auto; justify-content: center; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 30px 0 15px; border: 1px none rgba(0, 0, 0, 1)" data-tool="mdnice编辑器"><span class="content" style="font-size: 22px; line-height: 1.8em; letter-spacing: 0; align-items: unset; background: linear-gradient(0deg, rgba(231, 247, 252, 1) 40%, rgba(0, 0, 0, 0) 40%) left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; color: rgba(112, 188, 234, 1); display: block; font-weight: bold; font-style: normal; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0 10px 0 0; margin: 0; border: 1px none rgba(0, 0, 0, 1)">引言</span></h2>
<blockquote class="custom-blockquote multiquote-1" style="border-radius: 8px; background: none left top / auto no-repeat scroll padding-box border-box rgba(64, 184, 250, 0.1); width: auto; height: auto; box-shadow: 0 0 rgba(0, 0, 0, 0); display: block; overflow-x: auto; overflow-y: auto; border: 1px solid rgba(64, 184, 255, 0.4); padding: 10px 10px 10px 20px; margin: 20px 0" data-tool="mdnice编辑器"><span style="display: block; color: rgba(64, 184, 250, 0.5); font-size: 28px; line-height: 1.5em; letter-spacing: 0; text-align: left; font-weight: bold">❝</span>
<p style="text-indent: 0; color: rgba(3, 3, 3, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal; padding: 8px 0; margin: 0">小编是一名10年+的.NET Coder，期间也写过Java、Python，从中深刻的认识到了软件开发与语言的无关性。现在小编已经脱离了一线开发岗位，在带领团队的过程中，发现了很多的问题，究其原因，<strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">更多的是开发思维的问题</strong>。所以小编通过总结自己过去十多年的软件开发经验，为年轻一辈的软件开发者从思维角度提供一些建议，希望能对大家有所帮助。</p>
</blockquote>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">在面向对象编程（OOP）中，继承（Inheritance）是另一个核心概念，它不仅是实现代码复用的工具，更是一种强大的设计思维。继承允许子类从父类<strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">获取或覆盖</strong>属性和方法，同时支持多态性、抽象类、接口等高级特性。这是众所周知的定义。</p>
<h2 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: flex; flex-direction: unset; float: unset; height: auto; justify-content: center; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 30px 0 15px; border: 1px none rgba(0, 0, 0, 1)" data-tool="mdnice编辑器"><span class="content" style="font-size: 22px; line-height: 1.8em; letter-spacing: 0; align-items: unset; background: linear-gradient(0deg, rgba(231, 247, 252, 1) 40%, rgba(0, 0, 0, 0) 40%) left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; color: rgba(112, 188, 234, 1); display: block; font-weight: bold; font-style: normal; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0 10px 0 0; margin: 0; border: 1px none rgba(0, 0, 0, 1)">一. 从生活出发理解继承</span></h2>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">我们在生活中最先接触的是细节，比如看到各种动作后，才开始对它们进行分类，才会去思考他们的叫声是不同，走路也是不同的。这种从细节到整体的思维方式，恰恰可以指导我们在编程中合理地使用继承。</p>
<h3 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; border-top: 1px none rgba(0, 0, 0, 1); border-right: 1px none rgba(0, 0, 0, 1); border-bottom: 4px solid rgba(64, 184, 250, 1); border-left: 1px none rgba(0, 0, 0, 1); padding: 0; margin: 30px 0 15px" data-tool="mdnice编辑器"><span class="content" style="font-size: 20px; color: rgba(64, 184, 250, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: flex; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 0 0 0 25px; border: 1px none rgba(0, 0, 0, 1)">自下而上，从细节出发，抽象出共性</span></h3>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">比如看到狗、猫、鸟，然后观察它们的行为，随后，我们总结它们有一些共同点，比如都会<code style="color: rgba(247, 53, 53, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0; background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; height: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">吃</code>和<code style="color: rgba(247, 53, 53, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0; background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; height: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">睡觉</code>，于是抽象出“动物”这个概念，也知道了动物都需要吃和睡。在编程中，这种思维方式同样适用：</p>
<ul style="list-style-type: disc; color: rgba(0, 0, 0, 1); padding: 0 0 0 25px; margin: 8px 0" data-tool="mdnice编辑器">
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">步骤</strong>：先观察具体的对象（比如<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Dog</code>、<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Cat</code>），列出它们的属性和行为，然后找出共性（如<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Eat()</code>和<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Sleep()</code>）。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">应用</strong>：将这些共性提取到一个抽象的父类（比如<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Animal</code>）中，而具体的特性（比如狗会舔人 - <code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Lick()</code>、猫会抓人 - <code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">ArrestAb()</code>、鸟会飞 - <code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Fly()</code>）则留在子类中。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">思考问题</strong>：问自己，“这些对象有哪些共同的属性和行为？” 这些共性将成为继承的基础。</section>
</li>
</ul>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">例如：</p>
<pre class="custom highlighter-hljs" style="border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55); text-align: left; padding: 0; margin: 10px 0" data-tool="mdnice编辑器"><code>Animal (父类)
  - Eat()
  - Sleep()

Dog (子类)       Cat (子类)		Bird()
  - Lick()         - ArrestAb()			- Fly()</code></pre>
<h3 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; border-top: 1px none rgba(0, 0, 0, 1); border-right: 1px none rgba(0, 0, 0, 1); border-bottom: 4px solid rgba(64, 184, 250, 1); border-left: 1px none rgba(0, 0, 0, 1); padding: 0; margin: 30px 0 15px" data-tool="mdnice编辑器"><span class="content" style="font-size: 20px; color: rgba(64, 184, 250, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: flex; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 0 0 0 25px; border: 1px none rgba(0, 0, 0, 1)">自上而下，逐步分解，逐步求精</span></h3>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">虽然我们从细节开始，但设计继承时，可以反过来从抽象的父类入手，再逐步细化到子类。这就像在动物分类学中，<strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">我们已经具备了动物界的相关知识</strong>，所以会先定义“动物”的大框架，然后再细分出哺乳动物、鸟类等：</p>
<ul style="list-style-type: disc; color: rgba(0, 0, 0, 1); padding: 0 0 0 25px; margin: 8px 0" data-tool="mdnice编辑器">
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">步骤</strong>：先定义一个通用的父类（<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Animal</code>），包含所有子类共享的属性和方法，然后在子类中添加特定功能。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">好处</strong>：这种方法让代码结构更清晰，易于扩展。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">思考问题</strong>：先问“这个系统整体需要什么通用逻辑？” 再考虑“每个具体对象需要什么特殊功能？”</section>
</li>
</ul>
<h3 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; border-top: 1px none rgba(0, 0, 0, 1); border-right: 1px none rgba(0, 0, 0, 1); border-bottom: 4px solid rgba(64, 184, 250, 1); border-left: 1px none rgba(0, 0, 0, 1); padding: 0; margin: 30px 0 15px" data-tool="mdnice编辑器"><span class="content" style="font-size: 20px; color: rgba(64, 184, 250, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: flex; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 0 0 0 25px; border: 1px none rgba(0, 0, 0, 1)">判断“is-a”关系</span></h3>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">生活中，狗是动物，猫是动物，但狗不是猫。这种“is-a”关系是继承的核心依据：</p>
<ul style="list-style-type: disc; color: rgba(0, 0, 0, 1); padding: 0 0 0 25px; margin: 8px 0" data-tool="mdnice编辑器">
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">原则</strong>：只有当子类与父类存在严格的“is-a”关系时，才使用继承。例如，<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Dog</code>是<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Animal</code>，但<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Dog</code>不是<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Vehicle</code>。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">思考问题</strong>：在设计时，问自己，“这个子类真的是父类的一种吗？” 如果答案是否定的，就不要强行使用继承。</section>
</li>
</ul>
<h3 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; border-top: 1px none rgba(0, 0, 0, 1); border-right: 1px none rgba(0, 0, 0, 1); border-bottom: 4px solid rgba(64, 184, 250, 1); border-left: 1px none rgba(0, 0, 0, 1); padding: 0; margin: 30px 0 15px" data-tool="mdnice编辑器"><span class="content" style="font-size: 20px; color: rgba(64, 184, 250, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: flex; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 0 0 0 25px; border: 1px none rgba(0, 0, 0, 1)">关注扩展性</span></h3>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">生活中，动物分类可以不断扩展，比如发现新物种时，可以将其归入现有类别或创建新类别。编程中也一样：</p>
<ul style="list-style-type: disc; color: rgba(0, 0, 0, 1); padding: 0 0 0 25px; margin: 8px 0" data-tool="mdnice编辑器">
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">建议</strong>：设计父类时，考虑未来的扩展性。比如，可以在<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Animal</code>中定义抽象方法（如<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">MakeSound()</code>），让子类去实现具体的叫声。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">思考问题</strong>：“如果以后需要添加新的子类，这个父类设计是否足够灵活？”</section>
</li>
</ul>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">例如：</p>
<pre class="custom highlighter-hljs" style="border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55); text-align: left; padding: 0; margin: 10px 0" data-tool="mdnice编辑器"><code>Animal
  - Eat()
  - Sleep()
  - MakeSound() [抽象方法]

Dog                Cat
  - MakeSound()     - MakeSound()
    输出 "汪汪"       输出 "喵喵"</code></pre>
<h3 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; border-top: 1px none rgba(0, 0, 0, 1); border-right: 1px none rgba(0, 0, 0, 1); border-bottom: 4px solid rgba(64, 184, 250, 1); border-left: 1px none rgba(0, 0, 0, 1); padding: 0; margin: 30px 0 15px" data-tool="mdnice编辑器"><span class="content" style="font-size: 20px; color: rgba(64, 184, 250, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: flex; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 0 0 0 25px; border: 1px none rgba(0, 0, 0, 1)">继承的挂葡萄式比喻</span></h3>
<figure style="display: flex; flex-direction: column; justify-content: center; align-items: center; padding: 0; margin: 10px 0" data-tool="mdnice编辑器"><img src="https://img2024.cnblogs.com/blog/365286/202503/365286-20250331102016358-938896755.png" alt="经典的继承示意图" style="display: block; max-width: 100%; border-radius: 8px; object-fit: fill; box-shadow: 2px 4px 8px rgba(153, 153, 153, 1); border: 3px none rgba(0, 0, 0, 0.4); margin: 0 auto">
<figcaption style="color: rgba(136, 136, 136, 1); font-size: 13px; line-height: 1.5em; letter-spacing: 0; text-align: center; font-weight: normal; padding: 0; margin: 10px 0 0">经典的继承示意图</figcaption>
</figure>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">在面向对象设计中，父类通常定义了一些通用的属性和方法，作为所有子类的共享基础。子类通过继承这个父类，可以直接使用这些共享特性，同时根据自己的需求进行<strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">特性化</strong>。</p>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">继承可以被看作是一种<strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">占位</strong>机制，通过父类定义一个通用的框架或接口，然后由子类根据具体需求来实现或扩展任务。</p>
<h4 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 30px 0 15px; border: 1px none rgba(0, 0, 0, 1)" data-tool="mdnice编辑器"><span class="content" style="font-size: 16px; color: rgba(43, 43, 43, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: inline-block; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 0 0 0 8px; border: 1px none rgba(0, 0, 0, 1)">反思</span></h4>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">在生活中，如果我们把动物分类得过于细致，比如分成“会飞的动物”“会游泳的动物”，可能会导致混乱。如同上图的分叉线继续分下去，会很难把控，整个结构也会线的混乱，编程中也是如此：</p>
<ul style="list-style-type: disc; color: rgba(0, 0, 0, 1); padding: 0 0 0 25px; margin: 8px 0" data-tool="mdnice编辑器">
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">问题</strong>：过深的继承层次（如<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Animal -&gt; Mammal -&gt; Canine -&gt; Dog</code>）会让代码难以维护。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">建议</strong>：保持继承层次简单，通常不超过三层。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">问题思考</strong>：“这个继承层次是否必要？能不能用其他方式替代？”</section>
</li>
</ul>
<h4 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 30px 0 15px; border: 1px none rgba(0, 0, 0, 1)" data-tool="mdnice编辑器"><span class="content" style="font-size: 16px; color: rgba(43, 43, 43, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: inline-block; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 0 0 0 8px; border: 1px none rgba(0, 0, 0, 1)">灵活结合组合</span></h4>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">有时候，细节特性不适合用继承表达</strong>。比如，“会飞”与其说是鸟的类型，不如说是鸟的一种<strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">能力</strong>：</p>
<ul style="list-style-type: disc; color: rgba(0, 0, 0, 1); padding: 0 0 0 25px; margin: 8px 0" data-tool="mdnice编辑器">
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">替代方案</strong>：使用组合（has-a）关系，而不是继承。例如，给<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Bird</code>添加一个<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">FlyBehavior</code>对象，而不是让<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Bird</code>继承一个<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">FlyableAnimal</code>类。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">问题思考</strong>：“这个特性是对象的一种类型，还是对象的一部分？” 如果是部分，组合可能更合适。</section>
</li>
</ul>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">例如：</p>
<pre class="language-plaintext highlighter-hljs"><code>Bird
  - FlyBehavior (组合的对象)
    - Fly() 方法</code></pre>
<hr style="border-radius: 0; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: 1px; border-top: 2px solid rgba(59, 170, 250, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 10px 0" data-tool="mdnice编辑器">
<h2 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: flex; flex-direction: unset; float: unset; height: auto; justify-content: center; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 30px 0 15px; border: 1px none rgba(0, 0, 0, 1)" data-tool="mdnice编辑器"><span class="content" style="font-size: 22px; line-height: 1.8em; letter-spacing: 0; align-items: unset; background: linear-gradient(0deg, rgba(231, 247, 252, 1) 40%, rgba(0, 0, 0, 0) 40%) left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; color: rgba(112, 188, 234, 1); display: block; font-weight: bold; font-style: normal; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0 10px 0 0; margin: 0; border: 1px none rgba(0, 0, 0, 1)">二、面向对象下的继承</span></h2>
<h3 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; border-top: 1px none rgba(0, 0, 0, 1); border-right: 1px none rgba(0, 0, 0, 1); border-bottom: 4px solid rgba(64, 184, 250, 1); border-left: 1px none rgba(0, 0, 0, 1); padding: 0; margin: 30px 0 15px" data-tool="mdnice编辑器"><span class="content" style="font-size: 20px; color: rgba(64, 184, 250, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: flex; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 0 0 0 25px; border: 1px none rgba(0, 0, 0, 1)">定义</span></h3>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">通过<code style="color: rgba(247, 53, 53, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0; background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; height: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">is-a</code>关系实现层次化的代码复用和类型兼容，结合行为的动态适配和资源管理的层次依赖，在封装约束下构建模块化、可扩展的系统。</p>
<h3 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; border-top: 1px none rgba(0, 0, 0, 1); border-right: 1px none rgba(0, 0, 0, 1); border-bottom: 4px solid rgba(64, 184, 250, 1); border-left: 1px none rgba(0, 0, 0, 1); padding: 0; margin: 30px 0 15px" data-tool="mdnice编辑器"><span class="content" style="font-size: 20px; color: rgba(64, 184, 250, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: flex; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 0 0 0 25px; border: 1px none rgba(0, 0, 0, 1)">规则</span></h3>
<blockquote class="custom-blockquote multiquote-1" style="border-radius: 8px; background: none left top / auto no-repeat scroll padding-box border-box rgba(64, 184, 250, 0.1); width: auto; height: auto; box-shadow: 0 0 rgba(0, 0, 0, 0); display: block; overflow-x: auto; overflow-y: auto; border: 1px solid rgba(64, 184, 255, 0.4); padding: 10px 10px 10px 20px; margin: 20px 0" data-tool="mdnice编辑器"><span style="display: block; color: rgba(64, 184, 250, 0.5); font-size: 28px; line-height: 1.5em; letter-spacing: 0; text-align: left; font-weight: bold">❝</span>
<p style="text-indent: 0; color: rgba(3, 3, 3, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal; padding: 8px 0; margin: 0"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">继承的最一般规则是：层次化复用与行为适配。</strong></p>
</blockquote>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">继承的核心在于通过<strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">层次化的代码复用</strong>和<strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">行为的动态适配</strong>，构建模块化、可扩展的系统。其一般规律可以归纳为以下几个普适原则，无论具体语言或实现细节如何变化，这些规律始终成立:</p>
<h4 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 30px 0 15px; border: 1px none rgba(0, 0, 0, 1)" data-tool="mdnice编辑器"><span class="content" style="font-size: 16px; color: rgba(43, 43, 43, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: inline-block; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 0 0 0 8px; border: 1px none rgba(0, 0, 0, 1)"><code>is-a</code>关系的层次复用</span></h4>
<ul style="list-style-type: disc; color: rgba(0, 0, 0, 1); padding: 0 0 0 25px; margin: 8px 0" data-tool="mdnice编辑器">
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">本质</strong>：继承通过<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">is-a</code>关系（子类是父类的一种），允许子类在复用父类定义（属性和方法）的基础上，扩展或特化其行为。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">规则</strong>：子类继承父类的所有可访问成员，形成一个从通用到具体的层次结构。每一层继承都在前一层的基础上增加特异性，从而实现代码的逐步精炼和重用。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">意义</strong>：这种层次化设计避免了重复定义通用功能，同时支持功能的逐步细化。</section>
</li>
</ul>
<h4 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 30px 0 15px; border: 1px none rgba(0, 0, 0, 1)" data-tool="mdnice编辑器"><span class="content" style="font-size: 16px; color: rgba(43, 43, 43, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: inline-block; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 0 0 0 8px; border: 1px none rgba(0, 0, 0, 1)">类型兼容性支持多态</span></h4>
<ul style="list-style-type: disc; color: rgba(0, 0, 0, 1); padding: 0 0 0 25px; margin: 8px 0" data-tool="mdnice编辑器">
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">本质</strong>：子类对象可以被视为父类对象，允许在需要父类的地方使用子类实例。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">规则</strong>：继承建立了类型间的兼容性（子类型关系），使得系统可以在运行时根据对象的实际类型动态选择行为（多态性）。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">意义</strong>：类型兼容性是多态的基础，确保了接口的统一性和实现的多样性，增强了系统的灵活性。</section>
</li>
</ul>
<h4 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 30px 0 15px; border: 1px none rgba(0, 0, 0, 1)" data-tool="mdnice编辑器"><span class="content" style="font-size: 16px; color: rgba(43, 43, 43, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: inline-block; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 0 0 0 8px; border: 1px none rgba(0, 0, 0, 1)">行为覆盖与动态适配</span></h4>
<ul style="list-style-type: disc; color: rgba(0, 0, 0, 1); padding: 0 0 0 25px; margin: 8px 0" data-tool="mdnice编辑器">
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">本质</strong>：子类可以通过重写（override）父类方法，覆盖或调整父类的行为。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">规则</strong>：继承允许子类在复用父类代码的同时，动态适配行为以满足特定需求。运行时根据对象的实际类型决定执行哪个方法实现。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">意义</strong>：这种动态适配机制使得同一接口可以有多种实现，支持系统的可扩展性和个性化需求。</section>
</li>
</ul>
<h4 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 30px 0 15px; border: 1px none rgba(0, 0, 0, 1)" data-tool="mdnice编辑器"><span class="content" style="font-size: 16px; color: rgba(43, 43, 43, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: inline-block; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 0 0 0 8px; border: 1px none rgba(0, 0, 0, 1)">资源管理的层次依赖</span></h4>
<ul style="list-style-type: disc; color: rgba(0, 0, 0, 1); padding: 0 0 0 25px; margin: 8px 0" data-tool="mdnice编辑器">
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">本质</strong>：子类的初始化和销毁依赖于父类的初始化和销毁。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">规则</strong>：对象的构造从父类到子类逐层进行，析构则反向进行，确保资源分配和释放的逻辑一致性。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">意义</strong>：这种顺序规律保证了继承链中每一层的资源管理不会出现未定义行为，维护了系统的稳定性。</section>
</li>
</ul>
<h4 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 30px 0 15px; border: 1px none rgba(0, 0, 0, 1)" data-tool="mdnice编辑器"><span class="content" style="font-size: 16px; color: rgba(43, 43, 43, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: inline-block; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 0 0 0 8px; border: 1px none rgba(0, 0, 0, 1)">访问控制的边界约束</span></h4>
<ul style="list-style-type: disc; color: rgba(0, 0, 0, 1); padding: 0 0 0 25px; margin: 8px 0" data-tool="mdnice编辑器">
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">本质</strong>：继承中父类的成员可见性通过访问控制（public、protected、private）定义，子类只能访问授权的部分。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">规则</strong>：子类对父类成员的访问受限于封装边界，private成员对子类不可见，protected和public成员可被复用或调整。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">意义</strong>：访问控制在复用代码的同时保护了父类的实现细节，维持了封装性与继承性的平衡。</section>
</li>
</ul>
<blockquote class="custom-blockquote multiquote-1" style="border-radius: 8px; background: none left top / auto no-repeat scroll padding-box border-box rgba(64, 184, 250, 0.1); width: auto; height: auto; box-shadow: 0 0 rgba(0, 0, 0, 0); display: block; overflow-x: auto; overflow-y: auto; border: 1px solid rgba(64, 184, 255, 0.4); padding: 10px 10px 10px 20px; margin: 20px 0" data-tool="mdnice编辑器"><span style="display: block; color: rgba(64, 184, 250, 0.5); font-size: 28px; line-height: 1.5em; letter-spacing: 0; text-align: left; font-weight: bold">❝</span>
<p style="text-indent: 0; color: rgba(3, 3, 3, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal; padding: 8px 0; margin: 0">这些规则不仅是继承的表层特征，还反映了其在类型系统、内存管理和运行时行为中的深层作用：</p>
<ul style="list-style-type: disc; color: rgba(0, 0, 0, 1); padding: 0 0 0 25px; margin: 8px 0">
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">类型系统</strong>：继承通过子类型关系支持类型安全和多态，确保子类可以替代父类（里氏替换原则）。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">内存管理</strong>：子类对象包含父类对象的内存布局，保证了类型兼容性和直接访问的可能。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">运行时行为</strong>：动态方法绑定以支持行为的运行时适配。</section>
</li>
</ul>
</blockquote>
<hr style="border-radius: 0; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: 1px; border-top: 2px solid rgba(59, 170, 250, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 10px 0" data-tool="mdnice编辑器">
<h2 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: flex; flex-direction: unset; float: unset; height: auto; justify-content: center; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 30px 0 15px; border: 1px none rgba(0, 0, 0, 1)" data-tool="mdnice编辑器"><span class="content" style="font-size: 22px; line-height: 1.8em; letter-spacing: 0; align-items: unset; background: linear-gradient(0deg, rgba(231, 247, 252, 1) 40%, rgba(0, 0, 0, 0) 40%) left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; color: rgba(112, 188, 234, 1); display: block; font-weight: bold; font-style: normal; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0 10px 0 0; margin: 0; border: 1px none rgba(0, 0, 0, 1)">三、继承的深层意义：层次化分解复杂问题</span></h2>
<h3 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; border-top: 1px none rgba(0, 0, 0, 1); border-right: 1px none rgba(0, 0, 0, 1); border-bottom: 4px solid rgba(64, 184, 250, 1); border-left: 1px none rgba(0, 0, 0, 1); padding: 0; margin: 30px 0 15px" data-tool="mdnice编辑器"><span class="content" style="font-size: 20px; color: rgba(64, 184, 250, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: flex; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 0 0 0 25px; border: 1px none rgba(0, 0, 0, 1)">1. 从抽象到具体的设计过程</span></h3>
<blockquote class="custom-blockquote multiquote-1" style="border-radius: 8px; background: none left top / auto no-repeat scroll padding-box border-box rgba(64, 184, 250, 0.1); width: auto; height: auto; box-shadow: 0 0 rgba(0, 0, 0, 0); display: block; overflow-x: auto; overflow-y: auto; border: 1px solid rgba(64, 184, 255, 0.4); padding: 10px 10px 10px 20px; margin: 20px 0" data-tool="mdnice编辑器"><span style="display: block; color: rgba(64, 184, 250, 0.5); font-size: 28px; line-height: 1.5em; letter-spacing: 0; text-align: left; font-weight: bold">❝</span>
<p style="text-indent: 0; color: rgba(3, 3, 3, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal; padding: 8px 0; margin: 0">这里的继承用到了一种自上而下的设计方法，开发者可以先从抽象的层面定义系统的整体结构和行为，然后逐步细化到具体的实现细节，这也是一个树形可追踪的过程的。</p>
</blockquote>
<ul style="list-style-type: disc; color: rgba(0, 0, 0, 1); padding: 0 0 0 25px; margin: 8px 0" data-tool="mdnice编辑器">
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">抽象层面</strong>：通过定义父类或抽象类，开发者可以先关注系统的“大图景”。例如，一个抽象的<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Shape</code>类可以定义所有图形共有的方法，如<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Draw()</code>和<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Resize()</code>，而无需立即考虑具体图形的绘制方式。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">具体实现</strong>：子类通过继承父类并实现具体方法，将抽象的概念转化为可操作的代码。例如，<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Circle</code>和<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Rectangle</code>类可以分别实现自己的<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Draw()</code>方法，完成具体的绘制逻辑。</section>
</li>
</ul>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">这种从上到下的分解方式，使开发者能够先勾勒出系统的<strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">整体框架</strong>，再逐步<strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">填充细节</strong>，<strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">确保设计的一致性和连贯性</strong>。</p>
<h3 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; border-top: 1px none rgba(0, 0, 0, 1); border-right: 1px none rgba(0, 0, 0, 1); border-bottom: 4px solid rgba(64, 184, 250, 1); border-left: 1px none rgba(0, 0, 0, 1); padding: 0; margin: 30px 0 15px" data-tool="mdnice编辑器"><span class="content" style="font-size: 20px; color: rgba(64, 184, 250, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: flex; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 0 0 0 25px; border: 1px none rgba(0, 0, 0, 1)">2. 层次化分解复杂问题</span></h3>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">继承允许将复杂的问题分解为多个层次。父类负责定义通用的属性和行为，子类则根据具体需求扩展或修改这些内容。这种层次化的结构使开发者可以专注于某个层次的功能，而不必同时应对整个系统的复杂性。</p>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">例如，在一个图形编辑器中：</p>
<ul style="list-style-type: disc; color: rgba(0, 0, 0, 1); padding: 0 0 0 25px; margin: 8px 0" data-tool="mdnice编辑器">
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">顶层</strong>：<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Shape</code>类定义了所有图形的通用接口。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">中层</strong>：<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">TwoDShape</code>和<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">ThreeDShape</code>类继承<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Shape</code>，分别处理二维和三维图形的共性。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">底层</strong>：<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Circle</code>、<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Rectangle</code>等类继承<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">TwoDShape</code>，实现具体的二维图形功能。</section>
</li>
</ul>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">这种层次化的设计让系统的复杂性被逐步分解，每个层次都更加易于理解和维护。</p>
<h3 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; border-top: 1px none rgba(0, 0, 0, 1); border-right: 1px none rgba(0, 0, 0, 1); border-bottom: 4px solid rgba(64, 184, 250, 1); border-left: 1px none rgba(0, 0, 0, 1); padding: 0; margin: 30px 0 15px" data-tool="mdnice编辑器"><span class="content" style="font-size: 20px; color: rgba(64, 184, 250, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: flex; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 0 0 0 25px; border: 1px none rgba(0, 0, 0, 1)">3. 提供扩展点而不破坏整体结构</span></h3>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">继承通过<strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">“钩子”</strong>（如虚方法或抽象方法）提供扩展点，允许子类在不修改父类代码的情况下添加具体实现。这种机制在设计中非常有用，因为它让我们可以在保持整体框架稳定的同时，逐步加入细节。</p>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">例如，在一个支付系统中：</p>
<ul style="list-style-type: disc; color: rgba(0, 0, 0, 1); padding: 0 0 0 25px; margin: 8px 0" data-tool="mdnice编辑器">
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">父类</strong>：<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">PaymentProcessor</code>定义了支付的通用流程，如验证、扣款、记录日志等。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">子类</strong>：<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">CreditCardPayment</code>和<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">PayPalPayment</code>通过重写具体步骤，实现不同支付方式的细节。</section>
</li>
</ul>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">这种设计遵循<strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">“开闭原则”</strong>（对扩展开放，对修改关闭），确保系统的稳定性与灵活性并存。</p>
<hr style="border-radius: 0; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: 1px; border-top: 2px solid rgba(59, 170, 250, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 10px 0" data-tool="mdnice编辑器">
<h2 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: flex; flex-direction: unset; float: unset; height: auto; justify-content: center; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 30px 0 15px; border: 1px none rgba(0, 0, 0, 1)" data-tool="mdnice编辑器"><span class="content" style="font-size: 22px; line-height: 1.8em; letter-spacing: 0; align-items: unset; background: linear-gradient(0deg, rgba(231, 247, 252, 1) 40%, rgba(0, 0, 0, 0) 40%) left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; color: rgba(112, 188, 234, 1); display: block; font-weight: bold; font-style: normal; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0 10px 0 0; margin: 0; border: 1px none rgba(0, 0, 0, 1)">四、继承在架构设计中的应用</span></h2>
<h3 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; border-top: 1px none rgba(0, 0, 0, 1); border-right: 1px none rgba(0, 0, 0, 1); border-bottom: 4px solid rgba(64, 184, 250, 1); border-left: 1px none rgba(0, 0, 0, 1); padding: 0; margin: 30px 0 15px" data-tool="mdnice编辑器"><span class="content" style="font-size: 20px; color: rgba(64, 184, 250, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: flex; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 0 0 0 25px; border: 1px none rgba(0, 0, 0, 1)">1. 模块化和层次化</span></h3>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">在架构设计中，继承常被用来构建模块化和层次化的系统结构。父类定义通用的行为和接口，子类则根据具体模块的需求实现细节。这种设计不仅使系统更具条理性，还能将问题拆分为更易于管理的部分。</p>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">在架构设计中，继承的真正力量在于它提供了一种自下而上的设计方法，引导我们从局部到整体逐步抽象问题。开发者可以先从抽象的层面定义系统的整体结构和行为，然后逐步细化到具体的实现细节，这也是一个树形可追踪的过程的。</p>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">例如，在一个企业级应用中：</p>
<ul style="list-style-type: disc; color: rgba(0, 0, 0, 1); padding: 0 0 0 25px; margin: 8px 0" data-tool="mdnice编辑器">
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">基础层</strong>：<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">BaseController</code>类定义了所有控制器的通用逻辑，如身份验证、日志记录等。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">业务层</strong>：<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">UserController</code>和<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">OrderController</code>继承<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">BaseController</code>，并实现各自的业务逻辑。</section>
</li>
</ul>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">这种层次化的设计使开发者可以专注于业务逻辑，而不必重复处理基础功能。</p>
<h3 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; border-top: 1px none rgba(0, 0, 0, 1); border-right: 1px none rgba(0, 0, 0, 1); border-bottom: 4px solid rgba(64, 184, 250, 1); border-left: 1px none rgba(0, 0, 0, 1); padding: 0; margin: 30px 0 15px" data-tool="mdnice编辑器"><span class="content" style="font-size: 20px; color: rgba(64, 184, 250, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: flex; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 0 0 0 25px; border: 1px none rgba(0, 0, 0, 1)">2. 支持设计模式</span></h3>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">继承在许多设计模式中扮演关键角色，帮助系统实现灵活性和可扩展性。</p>
<ul style="list-style-type: disc; color: rgba(0, 0, 0, 1); padding: 0 0 0 25px; margin: 8px 0" data-tool="mdnice编辑器">
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">模板方法模式</strong>：父类定义一个方法的框架，子类通过继承实现具体步骤。例如，一个<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Beverage</code>类定义了制作饮料的通用流程，<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Coffee</code>和<code style="background: none left top / auto no-repeat scroll padding-box border-box rgba(179, 187, 196, 0.05); width: auto; border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-top: 3px none rgba(0, 0, 0, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 2px 4px; margin: 0 2px">Tea</code>类通过继承实现具体的冲泡步骤。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">策略模式</strong>：通过继承不同的策略类，系统可以在运行时选择不同的行为。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">装饰器模式</strong>：虽然通常与组合相关，但在某些情况下，继承也可以实现装饰器效果，扩展对象的功能。</section>
</li>
</ul>
<h3 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; border-top: 1px none rgba(0, 0, 0, 1); border-right: 1px none rgba(0, 0, 0, 1); border-bottom: 4px solid rgba(64, 184, 250, 1); border-left: 1px none rgba(0, 0, 0, 1); padding: 0; margin: 30px 0 15px" data-tool="mdnice编辑器"><span class="content" style="font-size: 20px; color: rgba(64, 184, 250, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: flex; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 0 0 0 25px; border: 1px none rgba(0, 0, 0, 1)">3. 框架和库的扩展</span></h3>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">在框架或库的设计中，继承常被用来提供可扩展的钩子（hooks）。开发者可以通过继承基类并重写方法，定制框架的行为，使其适应特定场景。</p>
<hr style="border-radius: 0; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: 1px; border-top: 2px solid rgba(59, 170, 250, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 10px 0" data-tool="mdnice编辑器">
<h2 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: flex; flex-direction: unset; float: unset; height: auto; justify-content: center; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 30px 0 15px; border: 1px none rgba(0, 0, 0, 1)" data-tool="mdnice编辑器"><span class="content" style="font-size: 22px; line-height: 1.8em; letter-spacing: 0; align-items: unset; background: linear-gradient(0deg, rgba(231, 247, 252, 1) 40%, rgba(0, 0, 0, 0) 40%) left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; color: rgba(112, 188, 234, 1); display: block; font-weight: bold; font-style: normal; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0 10px 0 0; margin: 0; border: 1px none rgba(0, 0, 0, 1)">五、继承与思维模式的转变</span></h2>
<h3 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; border-top: 1px none rgba(0, 0, 0, 1); border-right: 1px none rgba(0, 0, 0, 1); border-bottom: 4px solid rgba(64, 184, 250, 1); border-left: 1px none rgba(0, 0, 0, 1); padding: 0; margin: 30px 0 15px" data-tool="mdnice编辑器"><span class="content" style="font-size: 20px; color: rgba(64, 184, 250, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: flex; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 0 0 0 25px; border: 1px none rgba(0, 0, 0, 1)">1. 分清整体和局部的思维</span></h3>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">继承鼓励开发者从整体到局部逐步分解问题：</p>
<ul style="list-style-type: disc; color: rgba(0, 0, 0, 1); padding: 0 0 0 25px; margin: 8px 0" data-tool="mdnice编辑器">
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">先定义框架</strong>：通过父类或抽象类定义系统的整体结构和行为。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">再细化细节</strong>：子类负责实现具体的功能，逐步完善系统。</section>
</li>
</ul>
<blockquote class="custom-blockquote multiquote-1" style="border-radius: 8px; background: none left top / auto no-repeat scroll padding-box border-box rgba(64, 184, 250, 0.1); width: auto; height: auto; box-shadow: 0 0 rgba(0, 0, 0, 0); display: block; overflow-x: auto; overflow-y: auto; border: 1px solid rgba(64, 184, 255, 0.4); padding: 10px 10px 10px 20px; margin: 20px 0" data-tool="mdnice编辑器"><span style="display: block; color: rgba(64, 184, 250, 0.5); font-size: 28px; line-height: 1.5em; letter-spacing: 0; text-align: left; font-weight: bold">❝</span>
<p style="text-indent: 0; color: rgba(3, 3, 3, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal; padding: 8px 0; margin: 0">当你在做软件开发的时候，需要首先明白你想要解决什么问题，而这个问题本身就是整体。设计父类的时候，需要想到你只是在整体上对该对象或者场景进行描述。而当我们进行继承操作的时候，更多的应该要想到，我们是在基于父类做一些细化，但不可以越界发挥。</p>
</blockquote>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">这种思维方式避免了在设计初期陷入琐碎细节的困境，提升了设计的效率和质量。</p>
<h3 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; border-top: 1px none rgba(0, 0, 0, 1); border-right: 1px none rgba(0, 0, 0, 1); border-bottom: 4px solid rgba(64, 184, 250, 1); border-left: 1px none rgba(0, 0, 0, 1); padding: 0; margin: 30px 0 15px" data-tool="mdnice编辑器"><span class="content" style="font-size: 20px; color: rgba(64, 184, 250, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: flex; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 0 0 0 25px; border: 1px none rgba(0, 0, 0, 1)">2. 关注点分离</span></h3>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">通过将通用描述与行为（父类）和具体描述与行为（子类）分开，<strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">继承让我们能够专注于当前的设计层次，而不必同时处理整个系统的复杂性</strong>。这种关注点分离的思维，帮助开发者更高效地管理复杂性。</p>
<h3 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; border-top: 1px none rgba(0, 0, 0, 1); border-right: 1px none rgba(0, 0, 0, 1); border-bottom: 4px solid rgba(64, 184, 250, 1); border-left: 1px none rgba(0, 0, 0, 1); padding: 0; margin: 30px 0 15px" data-tool="mdnice编辑器"><span class="content" style="font-size: 20px; color: rgba(64, 184, 250, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: flex; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 0 0 0 25px; border: 1px none rgba(0, 0, 0, 1)">3. 平衡抽象与细节</span></h3>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">继承在抽象的稳定性与细节的灵活性之间找到了平衡：</p>
<ul style="list-style-type: disc; color: rgba(0, 0, 0, 1); padding: 0 0 0 25px; margin: 8px 0" data-tool="mdnice编辑器">
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">抽象的稳定性</strong>：父类定义了系统的核心部分，通常不易改变。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">细节的灵活性</strong>：子类负责实现具体功能，可以根据需求灵活调整。</section>
</li>
</ul>
<blockquote class="custom-blockquote multiquote-1" style="border-radius: 8px; background: none left top / auto no-repeat scroll padding-box border-box rgba(64, 184, 250, 0.1); width: auto; height: auto; box-shadow: 0 0 rgba(0, 0, 0, 0); display: block; overflow-x: auto; overflow-y: auto; border: 1px solid rgba(64, 184, 255, 0.4); padding: 10px 10px 10px 20px; margin: 20px 0" data-tool="mdnice编辑器"><span style="display: block; color: rgba(64, 184, 250, 0.5); font-size: 28px; line-height: 1.5em; letter-spacing: 0; text-align: left; font-weight: bold">❝</span>
<p style="text-indent: 0; color: rgba(3, 3, 3, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal; padding: 8px 0; margin: 0">面对问题的时候，首先应该直面你面对的是什么问题，只要明确了问题，然后进行一般性的定性后，抽象也就出来了。而当你在进行继承操作的时候，更多的应该要想到，我们需要基于父类做一些<strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">细化和补充</strong>，但不可以越界发挥。</p>
</blockquote>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">这种平衡使得系统既能保持稳定，又能适应变化，为软件的可扩展性和可维护性奠定了基础。</p>
<h3 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; border-top: 1px none rgba(0, 0, 0, 1); border-right: 1px none rgba(0, 0, 0, 1); border-bottom: 4px solid rgba(64, 184, 250, 1); border-left: 1px none rgba(0, 0, 0, 1); padding: 0; margin: 30px 0 15px" data-tool="mdnice编辑器"><span class="content" style="font-size: 20px; color: rgba(64, 184, 250, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: flex; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 0 0 0 25px; border: 1px none rgba(0, 0, 0, 1)">4. 平衡稳定与变化</span></h3>
<ul style="list-style-type: disc; color: rgba(0, 0, 0, 1); padding: 0 0 0 25px; margin: 8px 0" data-tool="mdnice编辑器">
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">代码复用不一定是继承</strong>：在某些情况下，使用委托或辅助类可能比继承更合适。</section>
</li>
<li>
<section style="margin-top: 5px; margin-bottom: 5px; color: rgba(89, 89, 89, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal"><strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">接口 vs 继承</strong>：当只需要行为规范而不需要实现时，接口可能比继承更合适。</section>
</li>
</ul>
<blockquote class="custom-blockquote multiquote-1" style="border-radius: 8px; background: none left top / auto no-repeat scroll padding-box border-box rgba(64, 184, 250, 0.1); width: auto; height: auto; box-shadow: 0 0 rgba(0, 0, 0, 0); display: block; overflow-x: auto; overflow-y: auto; border: 1px solid rgba(64, 184, 255, 0.4); padding: 10px 10px 10px 20px; margin: 20px 0" data-tool="mdnice编辑器"><span style="display: block; color: rgba(64, 184, 250, 0.5); font-size: 28px; line-height: 1.5em; letter-spacing: 0; text-align: left; font-weight: bold">❝</span>
<p style="text-indent: 0; color: rgba(3, 3, 3, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; font-weight: normal; padding: 8px 0; margin: 0">始终谨记，通用的往往是稳定的，所以需要抽象出来；具体的才是频繁变化的，所以需要把变化的部分划分出来，使之可以在继承框架下既能重用也能独立变化，而不引发较大的影响，这就是继承的真正价值 —— 它帮助开发者在抽象与细节之间找到平衡，通过自下而上和自下而上的设计方法，引导我们从在局部与整体之间逐步完善对问题的认识。</p>
</blockquote>
<hr style="border-radius: 0; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: 1px; border-top: 2px solid rgba(59, 170, 250, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 10px 0" data-tool="mdnice编辑器">
<h2 style="align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; display: flex; flex-direction: unset; float: unset; height: auto; justify-content: center; line-height: 1.5em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0; margin: 30px 0 15px; border: 1px none rgba(0, 0, 0, 1)" data-tool="mdnice编辑器"><span class="content" style="font-size: 22px; line-height: 1.8em; letter-spacing: 0; align-items: unset; background: linear-gradient(0deg, rgba(231, 247, 252, 1) 40%, rgba(0, 0, 0, 0) 40%) left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; color: rgba(112, 188, 234, 1); display: block; font-weight: bold; font-style: normal; flex-direction: unset; float: unset; height: auto; justify-content: unset; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset; padding: 0 10px 0 0; margin: 0; border: 1px none rgba(0, 0, 0, 1)">结语</span></h2>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">继承是面向对象编程的核心机制，不仅提供了代码复用的便利，更体现了一种深刻的思维方式。通过继承，开发者能够在抽象与细节之间找到平衡，配合自上而下和自下而上的设计方法，逐步分解问题，从而提升系统的健壮性和可维护性。</p>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">在软件开发的多个领域，例如架构设计、设计模式以及生命周期管理等，继承都扮演着不可或缺的角色。它为构建灵活、可扩展的系统提供了强有力的支持。</p>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">然而，继承并非万能的解决方案。如果过度或不当使用继承，可能会导致类层次结构变得复杂，增加系统的耦合度，进而提高维护成本。</p>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">因此，在使用继承时，开发者需要谨慎设计，确保类层次结构清晰、类与类之间的关系合理。同时，在适当的场景下，应结合组合、接口等其他设计原则，以构建高质量的软件系统。<strong style="color: rgba(53, 133, 247, 0.85); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; border-radius: 0; border: 3px none rgba(0, 0, 0, 0.4); padding: 0; margin: 0">做到这些，更多的依靠经验的积累与思维的提升。</strong></p>
<p style="color: rgba(43, 43, 43, 1); font-size: 14px; line-height: 1.8em; letter-spacing: 0.02em; text-align: left; text-indent: 0; padding: 8px 0; margin: 0" data-tool="mdnice编辑器">通过正确使用继承，我们不仅能提升代码的逻辑性、可读性和可维护性，还能培养一种从具体到抽象、再回到具体的思维方式。希望大家从思维角度理解继承，用好继承。</p>
</section>
</div>
<div id="MySignature" role="contentinfo">
    <p>
    本文来自博客园，作者：<a href="https://www.cnblogs.com/code-daily/" target="_blank">AI·NET极客圈</a>，转载请注明原文链接：<a href="https://www.cnblogs.com/code-daily/p/18801661" target="_blank">https://www.cnblogs.com/code-daily/p/18801661</a> 
</p>
<img src="https://images.cnblogs.com/cnblogs_com/blogs/272929/galleries/2447197/o_250311050355_AI.NET%20Logo.png" width="61.8%" style="margin-left:20px">

<p>
    欢迎关注我们的公众号，作为.NET工程师，我们聚焦人工智能技术，探讨 AI 的前沿应用与发展趋势，为你立体呈现人工智能的无限可能，让我们共同携手共同进步。
</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="65.18819444444445" data-date-updated="2025-06-04 14:52">2025-03-31 10:21</span>&nbsp;
<a href="https://www.cnblogs.com/code-daily">AI·NET极客圈</a>&nbsp;
阅读(<span id="post_view_count">3976</span>)&nbsp;
评论(<span id="post_comment_count">7</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18801661);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18801661', targetLink: 'https://www.cnblogs.com/code-daily/p/18801661', title: '继承的思维：从思维模式到架构设计的深度解析' })">举报</a>
</div>
        