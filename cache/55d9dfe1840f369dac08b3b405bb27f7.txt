
		<div class="posthead">
			<h2>
				<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/zengming/p/18817466" title="发布于 2025-04-09 22:02">
    <span role="heading" aria-level="2">不同数据库Oracle、PostgreSQL、Vertical、Mysql常用操作</span>
    

</a>

			</h2>
 			Posted on 
<span id="post-date" data-last-update-days="0.00995682217013889" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-09 22:03">2025-04-09 22:02</span>&nbsp;
<a href="https://www.cnblogs.com/zengming">水木山川</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18817466" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18817466);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18817466', targetLink: 'https://www.cnblogs.com/zengming/p/18817466', title: '不同数据库Oracle、PostgreSQL、Vertical、Mysql常用操作' })">举报</a>

			
			
		</div>
		<div class="postbody"><div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h4>不同数据库Oracle、PostgreSQL、Vertical、Mysql常用操作</h4>
<div class="paragraph">
<p>授权语句用于管理数据库用户的权限，常见的授权语句如下：</p>
<p><strong>1、授权用户对表的SELECT权限</strong><br>　　GRANT SELECT ON dbname.tbname TO username; 　　　　赋权限</p>
<p>　　grant select on test_db.students to new_user;</p>
<p><strong>2、类型转换</strong></p>
<p>　　cast(col AS INTEGER);　　　　　　　　　　　　 转整型<br>　　to_char(now()-interval '1 day','yyyymmdd');　　　　时间转字符串<br>　　NVL(to_char(to_char(col,'YYYYMMDDHH24MISS')))</p>
<p><strong>3、PGV数据库</strong>：区分大小写，库表列名小写，常用类型有： bigint、numeric、date、timestamp、time</p>
<p>string_agg(column_name, separator) 将结果集某个字段的所有行连接成字符串<br>substr("原始字符","指定的字符",布尔值) 获取指定字符串之后或之前所有字符<br>SUBSTRING(string FROM start [FOR length]) 截取字符串中指定位置的字符<br>LEFT(string, length) 截取字符串左边指定数量的字符<br>RIGHT(string, length) 截取字符串右边指定数量的字符<br>CONCAT(string1, string2, ...) 将多个字符串进行连接<br>replace(uuid_generate_v4()::text,'-','')	获取uuid：sys_uuid、gen_random_uuid、uuid_generate_v5<br>cast('123' as bigint)   '123'::numeric		bigint '123'</p>
<p>row_number() over( [ partition by col1] order by col2[ desc ] ) <br>select max(length(colname)) from tbname; 	获取列最大长度<br>NVL(expr1,expr2); 如果expr1为空，则返回expr2；否则返回expr1(函数需要先创建)<br>COALESCE(expr1, expr2, ...); 逐个判断返回不为空的值，如果所有表达式均为空，则返回NULL<br>md5(str)<br>pgv3不能用NOT IN，用 LEFT JOIN或NOT EXISTS实现	<br>	　　SELECT ID FROM A WHERE NOT EXISTS IN(SELECT 1 FROM B WHERE A.ID=B.ID)</p>
<p>时间操作：<br>select now() ;当前时间   /* timestamp格式  'yyyyMMdd hh:mm:ss' */<br>select current_date ;当前时间  /* date格式 ‘yyyyMMdd' */<br>select now() - interval '1 week'; 近一周<br>select to_char(now()-interval '1 month','yyyymm');	获取上月日期<br>select date_trunc('day',now()::TIMESTAMP)			获取当天时间<br>select date_trunc('month',now()::TIMESTAMP)			获取当月1号<br>select trunc(now(),'mm')							获取当月1号<br>select date_trunc('month',now())  + '1month -1day'; 当前日期的月末<br>select (date_trunc('month',now()) +'-1 day')::date ; 当前日期的上月末<br>select (date_trunc('month',now()) +'-1 month')::date ; 当前日期的上月1号<br>select add_months(trunc(now(),'mm'),-1)				当前日期的上月1号<br>select date_trunc('quarter', current_date)			获取当前季度开始日期<br>select date_trunc('quarter', current_date) + '3 month' - interval '1 day'	获取当前季度结束日期<br>select date_trunc('year',now())::date ; 			当前日期的年初<br>select date_trunc('year',now()) + '1year - 1 day' ::date ; 当前日期的年末<br>select extract(month from now()+'-1 month'); 		获取上个月月份数<br>select extract(month from date('202402'||'01')); 	获取数字月份数<br>select extract(year from now()+'-1 month'); 		获取上年年份数<br>select to_char(to_timestamp('2024-2-26', 'YYYY-MM-DD'),'YYYY-MM-DD');	日期转字符串<br>select to_char(now(), 'YYYY-MM-DD HH24:MI:SS')		获取日期时间字符串<br>select to_date('2024-2-26', 'YYYY-MM-DD');			字符串转日期<br>select date_part('month',now())						获取月份数</p>
<p>EXCEPT对比两张表差异：数据出现第一个表，但不在第二个表。outer join 加主键对比两表数据<br>select * from pg_tables where TABLENAME='tbname';	查询表归属<br>select * from information_schema_table_privileges where table_name='tbname';	查询表权限<br>select 'grant select on schN.'||tablename||' to newUN;' from pg_tables <br>where schemaName='schN' and tableowner='oldUN';				#批量赋权<br>select pid, query from pg_stat_cluster_activity where query like '%tbname%' and nodename like '%cn%';	#查询死锁<br>select pid, query from pg_stat_cluster_activity where queryid='qid';		#查看并行执行<br>select pg_terminate_backend( '进程pid');		杀掉进程pid<br>select pg_cancel_backend( '进程pid');			杀掉进程pid</p>
<p><strong>4、ORACLE数据库</strong>: 严格区分大小写 (19c表别名可以不加AS) ，拼接单引号''','''&nbsp; 特殊类型有 CLOB</p>
<p>LISTAGG(XXX,',') WITHIN GROUP( ORDER BY XXX) over(partition by XXX) rank 行转列拼接字符串<br>SELECT SUBSTR(CAST(LISTAGG(COL,''',''') WITHIN GROUP(ORDER BY KW) AS VARCHAR2(1000)),1,1000) AS LTAG<br>RTRIM(xmlagg(xmlparse(content col || ','wellformed) order by col).getclobval(),',')<br>RTRIM(xmlagg(XMLELEMENT(E, col,',').EXTRACT('//text()') order by col).getclobval(),',') </p>
<p>SUBSTR(string，start， [length]); 截取字符串<br>months_between('2024-02-11',sysdate-1);  获取月份差<br>select trunc(start-end) from dual;		获取时间差天数		floor(sta-end);   获取日期差<br>add_months(trunc(sysdate,'mm'),-1)		获取上一个月份1号<br>add_months(sysdate,-1)					获取上个月日期<br>SELECT add_months(SYSDATE, 1) FROM dual;  一个月后的日期<br>SELECT add_months(TRUNC(SYSDATE, 'YYYY'), 12) - TRUNC(SYSDATE, 'YYYY') days FROM dual; 当年天数<br>-- 当前时间减去10分钟，同理换成year(年)、month(月)、day(日)、hour(时)、second(秒）<br>select sysdate,sysdate - interval '10' minute from dual;		获取十分钟前时间<br>select sysdate - interval '10' day as ten_days_ago,sysdate -10 from dual;	获取十天前时间<br>to_date('202402'||'01','yyyymmdd')		字符串转格式化日期<br>to_char(add_months(sysdate,-1),'mm')	获取上个月月份数<br>to_char(sysdate, 'YYYY')				获取本年年份数<br>cast(to_date('2024/2/26','yyyy-mm-dd,hh24:mi:ss') as timestamp)		字符串转时间戳<br>to_char(to_timestamp('2024-2-26','yyyy-mm-dd hh24:mi:ss') ,'YYYY-MM-DD HH24:MI:SS') 特殊格式：DD-MON-YY HH.MI.SS AM</p>
<p>NVL(expr1,expr2);如果expr1为空，则返回expr2；否则返回expr1<br>COALESCE(expr1, expr2, ...); 逐个判断返回不为空的值，如果所有表达式均为空，则返回NULL。<br>select ROW_NUMBER() OVER (PARTITION BY uuid ORDER BY dt DESC) AS rn FROM tbname where rn=1; 分组排序取第一个<br>select SYS_GUID() from dual;			获取数据库 uuid<br>DBMS_RANDOM.VALUE						获取随机数RANDOM()</p>
<p>MINUS对比两张表差异。也可以使用NOT IN子查询，NOT EXISTS子查询，LEFT JOIN和IS NULL 判断<br>select * from all_tables t where t.table_name like '%tbname%' and t.owner like '%user%';	查表<br>select * from all_objects t where t.object_name like '%tbname%' and t.owner like '%user%';<br>select * from dba_segments t where t.segment_name like '%tbname%' and t.owner like '%user%';<br>select * from all_col_comments t where t.table_name like '%tbname%' and t.column_name like '%comn%';<br>SELECT Last_Day FROM(SELECT TO_CHAR(LAST_DAY(ADD_MONTHS(SYSDATE,-24)+LEVEL-1),'YYYY-MM-DD') AS Last_Day				--获取最近两年每个月的最后一天日期<br>SELECT FROM DUAL CONNECT BY LEVEL&lt;=ADD_MONTHS(SYSDATE,-0)-ADD_MONTHS(SYSDATE,-24)+1)aa GROUP BY Last_Day;<br>SELECT CASE WHEN REGEXP_LIKE(col,'^(-)*[[:digit:]]+(\.[[:digit:]]+)*$') <br>THEN '数字' ELSE '非数字' END AS rt FROM tbname;	查找数字</p>
<p><strong>5、Vertical 数据库</strong>：严格区分大小写，常用函数与pg类似，部分函数与Oracle类似</p>
<p>row_number() over (partition by colkey order by col) as rnk 分组排序编号<br>rank() over (partition by colkey order by col) as rnk			分组排序续编号<br>GETDATE()		NOW()    获取当前时间<br>MONTH(now())-1							获取上个月月份数<br>last_day(date('202402'||'01'))			当前日期的月末<br>substr(cast(listagg(col USING parameters max_length=3000,on_overflow='TRUNCATE') AS varchar),1,1199);  行转列拼接字符串，截取1199段<br>REPLACE(CAST(UUID_GENERATE() AS VARCHAR),'-','')			获取数据库uuid<br>SELECT MONTHS_BETWEEN('2023-03-01'::DATE,'2023-01-01'::DATE) AS MONTHS_DIFFERENCE;	获取月份差</p>
<p>DROP TABLE tbname CASCADE 删除有依赖对象的表<br>alter table schemaName.tbname alter column colname set DATA TYPE ${dataType};	修改字段类型<br>alter table schemaName.tbname rename column colname to field2;		修改列名<br>alter table schemaName.tbname alter column colname drop not null; 	删除字段不为空约束</p>
<p>select table_name,owner_name from tables where table_name='tbname'; 查看表所有者</p>
<p><strong>6、MYSQL数据库</strong>：严格区分大小写</p>
<p>SELECT DATE_FORMAT(NOW(),'%Y-%M-%D %H:%I:%S'); 获取日期字符串<br>SELECT DATE_ADD(NOW(),INTERVAL 1 DAY);			加1天DAY/HOUR/WEEK/MONTH/QUARTER/YEAR<br>SELECT DATE_SUB(NOW(),INTERVAL 30 DAY);</p>
<p>以上是不同数据库常见的操作，包括授权语句、数据类型转换、时间操作、字符串操作、NULL值处理、窗口函数、数据库特定功能、表和权限管理以及对比表差异等，方便日常在不同数据库处理数据。</p>
</div>
</div>
<div class="clear"></div>
</div>
	