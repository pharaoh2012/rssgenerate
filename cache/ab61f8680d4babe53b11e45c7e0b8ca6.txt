
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/deali/p/18708130" title="发布于 2025-02-10 16:26">
    <span role="heading" aria-level="2">从SSH远程到Git Push：在Windows上一步到位实现免密码登录</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="前言">前言</h2>
<p>我一直希望在Windows上能像在Linux系统中那样，通过SSH密钥实现免密码远程连接。每次远程连接到服务器时，手动输入密码既麻烦又不太安全，尤其是在我需要频繁操作的情况下。</p>
<p>之前的文章中已经解决了 SSH 登录的问题: <a href="https://www.cnblogs.com/deali/p/18676667" target="_blank">在 Windows 10 上实现免密码 SSH 登录</a></p>
<h2 id="windows的ssh支持">Windows的SSH支持</h2>
<p>回顾一下</p>
<p>Windows自带了一个名为 <strong>OpenSSH Authentication Agent</strong> 的服务，这个服务能够管理SSH密钥，这意味着我无需额外安装任何第三方工具，就能轻松设置SSH免密码登录。</p>
<p>按照网上的教程，我简单地启动了 <strong>OpenSSH Authentication Agent</strong> 服务，设置好SSH密钥后，就可以 ssh 免密码连接到服务器了。</p>
<h2 id="git-push遇到问题">Git Push遇到问题</h2>
<p>然而，当我尝试通过Git进行 <code>git push</code> 操作时，却仍然被要求输入密码。</p>
<p>明明已经配置好了SSH密钥，为什么Git操作时还是要求输入密码？</p>
<p>显然，仅仅启动OpenSSH服务并没有解决问题。于是，我决定深入分析这个问题的原因，看看是否还有什么地方需要调整。</p>
<h2 id="使用git-bash测试">使用Git Bash测试</h2>
<p>为了进一步排查问题，我决定在 <strong>Git Bash</strong> 中测试一下。</p>
<p>Git Bash是用来执行Git命令的工具，因此我在Git Bash中运行了 <code>ssh-add -l</code> 命令，想确认是否正确加载了我的SSH密钥。结果发现，Git Bash中的 <strong>ssh-agent</strong> 并没有启动！</p>
<p>这时我突然意识到，Git Bash和Windows自带的SSH工具似乎并不完全兼容，Git并没有默认使用Windows的SSH工具。</p>
<h2 id="git使用了自己的ssh工具">Git使用了自己的SSH工具</h2>
<p>接下来，我进一步探讨了这个问题。</p>
<p>我了解到，Git实际上有自己的SSH工具，而并不会默认使用Windows系统中的OpenSSH工具。</p>
<p>Git自带的工具和Windows自带的工具是不同的，因此，即使在Windows中配置了OpenSSH Authentication Agent服务，Git也不会自动使用它。</p>
<h2 id="配置git使用windows默认ssh工具">配置Git使用Windows默认SSH工具</h2>
<p>既然Git没有使用Windows自带的SSH工具，那就需要手动配置它。我通过执行以下命令告诉Git使用Windows的默认SSH工具：</p>
<pre><code class="language-bash">git config --global core.sshCommand "C:/Windows/System32/OpenSSH/ssh.exe"
</code></pre>
<p>这条命令的作用是，让Git在进行操作时，使用Windows系统中的 <code>ssh.exe</code> 来处理SSH连接，而不是使用Git自带的工具。配置完成后，我再次尝试 <code>git push</code> 操作。</p>
<h2 id="全部搞定">全部搞定</h2>
<p>这次，当我运行 <code>git push</code> 时，一切都顺利进行，没有再提示我输入密码。通过这种方式，我成功地将Git操作与Windows的SSH配置结合起来，实现了免密码登录。现在，无论是进行远程服务器的SSH连接，还是使用Git进行版本控制，我都不再需要每次输入密码。</p>

</div>
<div id="MySignature" role="contentinfo">
    微信公众号：「程序设计实验室」
专注于互联网热门新技术探索与团队敏捷开发实践，包括架构设计、机器学习与数据分析算法、移动端开发、Linux、Web前后端开发等，欢迎一起探讨技术，分享学习实践经验。
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.07636572784606481" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-10 16:26">2025-02-10 16:26</span>&nbsp;
<a href="https://www.cnblogs.com/deali">程序设计实验室</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18708130" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18708130);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18708130', targetLink: 'https://www.cnblogs.com/deali/p/18708130', title: '从SSH远程到Git Push：在Windows上一步到位实现免密码登录' })">举报</a>
</div>
        