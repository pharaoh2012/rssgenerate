
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/zjdxr-up/p/18800060" title="发布于 2025-03-29 22:44">
    <span role="heading" aria-level="2">netstat 与 ss 比较</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h2><strong>一、netstat 命令</strong></h2>
<h3><strong>1. 核心功能</strong></h3>
<ul>
<li>
<p>显示网络连接、路由表、接口统计等信息。</p>
</li>
<li>
<p>支持TCP、UDP、UNIX域套接字等协议。</p>
</li>
<li>
<p>可查看进程与端口的关联。</p>
</li>
</ul>
<h3><strong>2. 常用语法示例</strong></h3>
<h4><strong>查看所有活动连接</strong></h4>
<div class="cnblogs_code">
<pre>netstat -<span style="color: rgba(0, 0, 0, 1)">a
# 输出示例：
Proto Recv</span>-Q Send-<span style="color: rgba(0, 0, 0, 1)">Q Local Address   Foreign Address  State      
tcp        </span><span style="color: rgba(128, 0, 128, 1)">0</span>      <span style="color: rgba(128, 0, 128, 1)">0</span> <span style="color: rgba(128, 0, 128, 1)">192.168</span>.<span style="color: rgba(128, 0, 128, 1)">1.2</span>:<span style="color: rgba(128, 0, 128, 1)">22</span> <span style="color: rgba(128, 0, 128, 1)">10.0</span>.<span style="color: rgba(128, 0, 128, 1)">0.5</span>:<span style="color: rgba(128, 0, 128, 1)">54321</span>   ESTABLISHED</pre>
</div>
<ul>
<li>
<p><code>-a</code>：显示所有连接（包括监听和非监听）。</p>
</li>
</ul>
<p><strong>查看TCP监听端口</strong></p>
<div>
<div>
<div class="cnblogs_code">
<pre>netstat -<span style="color: rgba(0, 0, 0, 1)">tuln
# 输出示例：
Proto Recv</span>-Q Send-Q Local Address   State       PID/<span style="color: rgba(0, 0, 0, 1)">Program name
tcp        </span><span style="color: rgba(128, 0, 128, 1)">0</span>      <span style="color: rgba(128, 0, 128, 1)">0</span> <span style="color: rgba(128, 0, 128, 1)">0.0</span>.<span style="color: rgba(128, 0, 128, 1)">0.0</span>:<span style="color: rgba(128, 0, 128, 1)">80</span>      LISTEN      <span style="color: rgba(128, 0, 128, 1)">1234</span>/nginx</pre>
</div>
<ul>
<li>
<p><code>-t</code>：TCP协议；<code>-u</code>：UDP协议；<code>-l</code>：仅监听端口；<code>-n</code>：禁用域名解析。</p>
</li>
</ul>
<h4><strong>统计各连接状态的数量</strong></h4>
<div>
<div class="cnblogs_code">
<pre>netstat -ant | awk <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">/^tcp/ {print $6}</span><span style="color: rgba(128, 0, 0, 1)">'</span> | sort | uniq -<span style="color: rgba(0, 0, 0, 1)">c
# 输出示例：
  </span><span style="color: rgba(128, 0, 128, 1)">10</span><span style="color: rgba(0, 0, 0, 1)"> ESTABLISHED
   </span><span style="color: rgba(128, 0, 128, 1)">2</span> TIME_WAIT</pre>
</div>
<h4><strong>查看进程与端口的关联</strong></h4>
<div>
<div class="cnblogs_code">
<pre>netstat -<span style="color: rgba(0, 0, 0, 1)">tulnp
# 输出示例：
tcp6       </span><span style="color: rgba(128, 0, 128, 1)">0</span>      <span style="color: rgba(128, 0, 128, 1)">0</span> :::<span style="color: rgba(128, 0, 128, 1)">80</span>      :::*        LISTEN      <span style="color: rgba(128, 0, 128, 1)">1234</span>/nginx</pre>
</div>
</div>
<div class="md-code-block">
<h2><strong>二、ss 命令</strong></h2>
<h3><strong>1. 核心功能</strong></h3>
<ul>
<li>
<p>替代&nbsp;<code>netstat</code>&nbsp;的现代工具，直接读取内核网络栈数据（通过&nbsp;<code>netlink</code>&nbsp;接口）。</p>
</li>
<li>
<p>速度更快，支持更复杂的过滤语法。</p>
</li>
<li>
<p>支持显示TCP内部状态（如拥塞窗口、RTT）。</p>
</li>
</ul>
<h3><strong>2. 常用语法示例</strong></h3>
<h4><strong>查看所有TCP连接</strong></h4>
</div>
</div>
<div class="md-code-block">
<div class="cnblogs_code">
<pre>ss -<span style="color: rgba(0, 0, 0, 1)">at
# 输出示例：
State    Recv</span>-Q   Send-<span style="color: rgba(0, 0, 0, 1)">Q   Local Address:Port    Peer Address:Port   
ESTAB    </span><span style="color: rgba(128, 0, 128, 1)">0</span>        <span style="color: rgba(128, 0, 128, 1)">0</span>        <span style="color: rgba(128, 0, 128, 1)">192.168</span>.<span style="color: rgba(128, 0, 128, 1)">1.2</span>:<span style="color: rgba(128, 0, 128, 1)">22</span>        <span style="color: rgba(128, 0, 128, 1)">10.0</span>.<span style="color: rgba(128, 0, 128, 1)">0.5</span>:<span style="color: rgba(128, 0, 128, 1)">54321</span></pre>
</div>
<ul>
<li>
<p><code>-a</code>：所有连接；<code>-t</code>：TCP协议。</p>
</li>
</ul>
<div>
<h4><strong>查看监听端口</strong></h4>
<div>
<div class="cnblogs_code">
<pre>ss -<span style="color: rgba(0, 0, 0, 1)">tuln
# 输出示例：
Netid  State   Recv</span>-Q  Send-<span style="color: rgba(0, 0, 0, 1)">Q  Local Address:Port  Peer Address:Port 
tcp    LISTEN  </span><span style="color: rgba(128, 0, 128, 1)">0</span>       <span style="color: rgba(128, 0, 128, 1)">128</span>     *:<span style="color: rgba(128, 0, 128, 1)">80</span>                *:*              </pre>
</div>
<ul>
<li>
<p><code>-u</code>：UDP协议；<code>-l</code>：监听端口；<code>-n</code>：禁用域名解析。</p>
</li>
</ul>
<div>
<h4><strong>按状态过滤连接</strong></h4>
<div>
<div class="cnblogs_code">
<pre>ss -<span style="color: rgba(0, 0, 0, 1)">t state established
# 输出示例：
Recv</span>-Q Send-<span style="color: rgba(0, 0, 0, 1)">Q Local:Port    Peer:Port    
</span><span style="color: rgba(128, 0, 128, 1)">0</span>      <span style="color: rgba(128, 0, 128, 1)">0</span>      <span style="color: rgba(128, 0, 128, 1)">192.168</span>.<span style="color: rgba(128, 0, 128, 1)">1.2</span>:<span style="color: rgba(128, 0, 128, 1)">22</span> <span style="color: rgba(128, 0, 128, 1)">10.0</span>.<span style="color: rgba(128, 0, 128, 1)">0.5</span>:<span style="color: rgba(128, 0, 128, 1)">54321</span></pre>
</div>
<ul>
<li>
<p>支持过滤：<code>established</code>,&nbsp;<code>time-wait</code>,&nbsp;<code>closed</code>&nbsp;等状态。</p>
</li>
</ul>
<div>
<h4><strong>查看进程和Socket详细信息</strong></h4>
<div>
<div class="cnblogs_code">
<pre>ss -<span style="color: rgba(0, 0, 0, 1)">tulnp
# 输出示例：
Netid  State   Recv</span>-Q  Send-<span style="color: rgba(0, 0, 0, 1)">Q  Local Address:Port  Peer Address:Port Process
tcp    LISTEN  </span><span style="color: rgba(128, 0, 128, 1)">0</span>       <span style="color: rgba(128, 0, 128, 1)">128</span>     *:<span style="color: rgba(128, 0, 128, 1)">80</span>                *:*              users:((<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">nginx</span><span style="color: rgba(128, 0, 0, 1)">"</span>,pid=<span style="color: rgba(128, 0, 128, 1)">1234</span>,fd=<span style="color: rgba(128, 0, 128, 1)">3</span>))</pre>
</div>
<ul>
<li>
<p><code>-p</code>：显示进程信息（需root权限）。</p>
</li>
</ul>
<div>
<h4><strong>统计各状态的连接数</strong></h4>
<div>
<div class="cnblogs_code">
<pre>ss -<span style="color: rgba(0, 0, 0, 1)">s
# 输出示例：
Total: </span><span style="color: rgba(128, 0, 128, 1)">45</span> (kernel <span style="color: rgba(128, 0, 128, 1)">60</span><span style="color: rgba(0, 0, 0, 1)">)
TCP:   </span><span style="color: rgba(128, 0, 128, 1)">10</span> (estab <span style="color: rgba(128, 0, 128, 1)">5</span>, closed <span style="color: rgba(128, 0, 128, 1)">2</span>, orphaned <span style="color: rgba(128, 0, 128, 1)">0</span>, timewait <span style="color: rgba(128, 0, 128, 1)">3</span><span style="color: rgba(0, 0, 0, 1)">)
UDP:   </span><span style="color: rgba(128, 0, 128, 1)">3</span></pre>
</div>
<h2><strong>三、核心区别对比</strong></h2>
<table>
<thead>
<tr><th><strong>特性</strong></th><th><strong>netstat</strong></th><th><strong>ss</strong></th></tr>
</thead>
<tbody>
<tr>
<td><strong>数据来源</strong></td>
<td>读取&nbsp;<code>/proc/net</code>&nbsp;文件</td>
<td>直接通过&nbsp;<code>netlink</code>&nbsp;接口读取内核数据</td>
</tr>
<tr>
<td><strong>性能</strong></td>
<td>较慢（高连接数时卡顿）</td>
<td>极快（适合大规模服务器）</td>
</tr>
<tr>
<td><strong>功能复杂度</strong></td>
<td>简单但功能有限</td>
<td>支持高级过滤和TCP内部状态分析</td>
</tr>
<tr>
<td><strong>输出信息</strong></td>
<td>基础连接信息</td>
<td>更详细的Socket元数据（如内存用量）</td>
</tr>
<tr>
<td><strong>系统兼容性</strong></td>
<td>旧系统默认安装</td>
<td>新系统推荐工具（如CentOS 7+/Ubuntu 16+）</td>
</tr>
<tr>
<td><strong>进程关联显示</strong></td>
<td>需要&nbsp;<code>-p</code>&nbsp;选项</td>
<td>同样支持，但格式更清晰<br><br></td>


</tr>


</tbody>

</table>

</div>
<div class="md-code-block">&nbsp;</div>

</div>

</div>
<div class="md-code-block">&nbsp;
<h3><strong>四、使用场景建议</strong></h3>
<h4><strong>1. 推荐使用&nbsp;<code>ss</code>&nbsp;的场景</strong></h4>
<ul>
<li>
<p><strong>高并发服务器</strong>：需快速统计数千个连接。</p>
</li>
<li>
<p><strong>精准过滤</strong>：按状态、端口、IP等条件筛选连接。</p>
<div class="md-code-block">
<div class="md-code-block-banner-wrap">
<div class="md-code-block-banner">
<div class="md-code-block-infostring">
<div class="cnblogs_code">
<pre>ss -t src <span style="color: rgba(128, 0, 128, 1)">192.168</span>.<span style="color: rgba(128, 0, 128, 1)">1.2</span> and dport = <span style="color: rgba(128, 0, 128, 1)">80</span></pre>
</div>
</div>
</div>
</div>
</div>
</li>
<li>
<p><strong>分析TCP性能</strong>：查看拥塞窗口、RTT等指标。</p>
<div class="md-code-block">
<div class="cnblogs_code">
<pre>ss -ti</pre>
</div>
</div>
</li>
</ul>
<h4><strong>2. 可能仍需使用&nbsp;<code>netstat</code>&nbsp;的场景</strong></h4>
<ul>
<li>
<p><strong>旧系统兼容</strong>：某些嵌入式系统未预装&nbsp;<code>ss</code>。</p>
</li>
<li>
<p><strong>路由表查看</strong>：<code>netstat -r</code>&nbsp;显示路由信息更直观。</p>
</li>
<li>
<p><strong>接口统计</strong>：<code>netstat -i</code>&nbsp;查看网络接口流量。</p>
</li>
</ul>
</div>
</div>
</div>
<div class="md-code-block">
<h2><strong>五、示例分析</strong></h2>
<h3><strong>案例：查找占用80端口的进程</strong></h3>
<h4><strong>　　使用&nbsp;<code>netstat</code></strong></h4>
</div>
</div>
</div>
<div class="md-code-block">
<div class="cnblogs_code">
<pre>netstat -tulnp | grep <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">:80</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">
# 输出：
tcp6  </span><span style="color: rgba(128, 0, 128, 1)">0</span>  <span style="color: rgba(128, 0, 128, 1)">0</span> :::<span style="color: rgba(128, 0, 128, 1)">80</span>  :::*  LISTEN  <span style="color: rgba(128, 0, 128, 1)">1234</span>/nginx</pre>
</div>
<h4><strong>　　使用&nbsp;<code>ss</code></strong></h4>
</div>
</div>
</div>
</div>
<div class="md-code-block">
<div class="cnblogs_code">
<pre>ss -tulnp | grep <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">:80</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">
# 输出：
tcp  LISTEN </span><span style="color: rgba(128, 0, 128, 1)">0</span> <span style="color: rgba(128, 0, 128, 1)">128</span> *:<span style="color: rgba(128, 0, 128, 1)">80</span> *:* users:((<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">nginx</span><span style="color: rgba(128, 0, 0, 1)">"</span>,pid=<span style="color: rgba(128, 0, 128, 1)">1234</span>,fd=<span style="color: rgba(128, 0, 128, 1)">3</span>))</pre>
</div>
<p><strong>　　结果对比</strong>：<code>ss</code>&nbsp;输出更简洁，直接显示进程名称和文件描述符。</p>
<h3><strong>案例：统计ESTABLISHED连接数</strong></h3>
<h4><strong>　　使用&nbsp;<code>netstat</code></strong></h4>
<div class="cnblogs_code">
<pre>netstat -ant | grep ESTABLISHED | wc -l</pre>
</div>
<h4><strong>　　使用&nbsp;<code>ss</code></strong></h4>
<div class="cnblogs_code">
<pre>ss -t state established | wc -l</pre>
</div>
<ul>
<li>
<p><strong>效率对比</strong>：<code>ss</code>&nbsp;直接过滤状态，速度更快。</p>
</li>
</ul>
<p>&nbsp;</p>
</div>
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.7294689262152778" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-29 22:48">2025-03-29 22:44</span>&nbsp;
<a href="https://www.cnblogs.com/zjdxr-up">香吧香</a>&nbsp;
阅读(<span id="post_view_count">26</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18800060" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18800060);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18800060', targetLink: 'https://www.cnblogs.com/zjdxr-up/p/18800060', title: 'netstat 与 ss 比较' })">举报</a>
</div>
        