<!----> <meta itemprop="headline" content="聊一下MCP，希望能让各位清醒一点吧🧐"> <meta itemprop="keywords" content="前端,JavaScript,MCP"> <meta itemprop="datePublished" content="2025-04-13T13:47:32.000Z"> <meta itemprop="image" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-128.png~tplv-t2oaga2asx-image.image"> <div itemprop="author" itemscope="itemscope" itemtype="http://schema.org/Person"><meta itemprop="name" content="华洛"> <meta itemprop="url" content="https://juejin.cn/user/4230576474430190"></div> <div itemprop="publisher" itemscope="itemscope" itemtype="http://schema.org/Organization"><meta itemprop="name" content="掘金"> <div itemprop="logo" itemscope="itemscope" itemtype="https://schema.org/ImageObject"><meta itemprop="url" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-white-180.png~tplv-t2oaga2asx-image.image"> <meta itemprop="width" content="180"> <meta itemprop="height" content="180"></div></div> <h1 class="article-title" data-v-61fb5e44="">
            聊一下MCP，希望能让各位清醒一点吧🧐
            <!----> <!----></h1> <div class="author-info-block block-hidden" data-v-61fb5e44=""><div class="author-info-box" data-v-61fb5e44=""><div class="author-name" data-v-61fb5e44=""><a href="/user/4230576474430190/posts" target="_blank" rel="" class="jj-link username username ellipsis" data-v-65b50b51="" data-v-292f6e48="" data-v-61fb5e44=""><span class="name" style="max-width:160px;" data-v-65b50b51="" data-v-292f6e48="">
    华洛
  </span> <!----> <!----> <!----> </a></div> <div class="meta-box" data-v-61fb5e44=""><time datetime="2025-04-13T13:47:32.000Z" title="Sun Apr 13 2025 13:47:32 GMT+0000 (Coordinated Universal Time)" class="time" data-v-61fb5e44="">
                    2025-04-13
                  </time> <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="read-icon" data-v-61fb5e44=""><path d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor" data-v-61fb5e44=""></path><circle cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor" data-v-61fb5e44=""></circle></svg> <span class="views-count" data-v-61fb5e44="">
                    37,012
                  </span> <span class="read-time" data-v-61fb5e44=""><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" data-v-61fb5e44=""><rect width="16" height="16" fill="none" data-v-61fb5e44=""></rect><circle cx="8" cy="8" r="5.65625" stroke="#8A919F" data-v-61fb5e44=""></circle><path d="M7.69141 5.18652V8.30924H10.8141" stroke="#8A919F" stroke-linecap="round" stroke-linejoin="round" data-v-61fb5e44=""></path></svg>
                    阅读8分钟
                  </span> <!----></div></div> <div style="flex:1;" data-v-61fb5e44=""></div> <!----> <!----></div> <!----> <!----> <!----> <!----> <div id="article-root" itemprop="articleBody" class="main" data-v-61fb5e44=""><div class="article-viewer markdown-body result"><p>最近正在忙着准备AI产品示例项目的数据，但是有好几群友问了MCP的问题，先花点时间给大家安排一下MCP。作为一个带队落地AI应用的真实玩家，是怎么看待MCP的。</p>
<p>先说观点：MCP不错，但它仅仅是个协议而已，很多科普文章中，提到的更多都是愿景，而不是落地的场景。</p>
<p>本文不再重新陈述MCP的基本概念，而是旨在能让大家了解的是MCP <code>有什么用？</code>、<code>怎么用？</code>、<code>要不要用？</code></p>
<p>我准备了一份<code>MCP实现的核心代码</code>，只保留必要的内容，五分钟就能看明白MCP回事。</p>
<p>先上代码，让我们看看实现MCP最核心的部分我们都干了些什么东西。顺便让大家看看MCP到底和Function call是个什么关系</p>
<blockquote>
<p>此处只贴用于讲解的代码，其他代码基本都是逻辑处理与调用。也可关注公众号：【华洛AI转型纪实】，发送<code>mcpdemo</code>，来获取完整代码。</p>
</blockquote>
<h2 data-id="heading-0">MCP代码核心逻辑</h2>
<p>我们在本地运行的MCP，所以使用的是<code>Stdio</code>模式的客户端和服务端。也就是：<code>StdioServerTransport</code>和<code>StdioClientTransport</code></p>
<p>先看打满日志的demo运行起来起来后，我们获得的信息：</p>
<img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/46e65584a4734a40aa28e091465c1e78~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5Y2O5rSb:q75.awebp?rk3s=f64ab15b&amp;x-expires=1750712152&amp;x-signature=fgZMTRwqga5yNsv3VjBDLOtJfqE%3D" alt="mcpdemo.jpg" width="100%" loading="lazy">
<p>我们的服务端写了两个简单的工具，<code>加法</code>和<code>减法</code>。</p>
<p>服务端启动成功之后，客户端成功的从服务端获取到了这两个工具。</p>
<p>我们发起了一个问题：<code>计算1+1</code></p>
<p>接下来做的事情就是MCP的客户端核心三步逻辑：</p>
<ol>
<li>
<p>客户端调用AI的function call能力，由AI决定是否使用工具，使用哪个工具。</p>
</li>
<li>
<p>客户端把确定要使用的工具和参数发送回服务端，由服务端实现API调用并返回结果。</p>
</li>
<li>
<p>客户端根据结果，再次调用AI，由AI进行回答。</p>
</li>
</ol>
<p>我们一边看代码一边说里面的问题：</p>
<h3 data-id="heading-1">第一步调用AI，决定使用工具</h3>
<p>客户端代码：</p>
<pre><code class="hljs language-js" lang="js">  <span class="hljs-keyword">const</span> response = <span class="hljs-keyword">await</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">openai</span>.<span class="hljs-property">chat</span>.<span class="hljs-property">completions</span>.<span class="hljs-title function_">create</span>({
    <span class="hljs-attr">model</span>: model,
    messages,
    <span class="hljs-attr">tools</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">tools</span>, <span class="hljs-comment">// ! 重点看这里，this.tools是服务端返回的工具列表</span>
  });
</code></pre>
<p>看到了么？这里用的还是Function call!  谣言一：<code>MCP和Function call没关系，MCP就可以让大家调用工具</code>，终结了。MCP就是用的function call的能力来实现的工具调用。当然我们也可以不用Function call，我们就直接用提示词判断，也是可以的。</p>
<p>这里要说的是：<code>MCP就是个协议</code>。并没有给大模型带来任何新的能力，也没有某些人说的MCP提升了Function call的能力，以后不用Function call了，用MCP就够了这种话，千万不要被误导。</p>
<p><strong>MCP并没有让大模型的工具调用能力提升</strong></p>
<p>在真实的生产环境中，目前Function call主要的问题有：</p>
<ul>
<li>
<p>工具调用准确性不够。
真正的生成环境可能不是三个五个工具，而是三十个五十个。工具之间的界限不够清晰的话，就会存在模型判断不准确的情况。</p>
</li>
<li>
<p>参数提取准确性不够。
特别是当一个工具必填加选填的参数达到十个以上的时候，面对复杂问题，参数的提取准确率会下降。</p>
</li>
<li>
<p>多意图的识别。<br>
用户的一个问题涉及到多个工具时，目前没有能够稳定提取的模型。</p>
</li>
</ul>
<h3 data-id="heading-2">第二步把工具和参数发回服务端，由服务端调用API</h3>
<p>客户端代码：</p>
<pre><code class="hljs language-js" lang="js"><span class="hljs-keyword">const</span> result = <span class="hljs-keyword">await</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">mcp</span>.<span class="hljs-title function_">callTool</span>({
  <span class="hljs-attr">name</span>: toolName,
  <span class="hljs-attr">arguments</span>: toolArgs,
});
</code></pre>
<p>服务端的代码：</p>
<pre><code class="hljs language-js" lang="js">server.<span class="hljs-title function_">tool</span>(
  <span class="hljs-string">"加法"</span>,
  <span class="hljs-string">"计算数字相加"</span>,
  {
    <span class="hljs-string">"a"</span>: z.<span class="hljs-title function_">number</span>().<span class="hljs-title function_">describe</span>(<span class="hljs-string">"加法的第一个数字"</span>),
    <span class="hljs-string">"b"</span>: z.<span class="hljs-title function_">number</span>().<span class="hljs-title function_">describe</span>(<span class="hljs-string">"加法的第二个数字"</span>),
  },
  <span class="hljs-keyword">async</span> ({ a, b, c }) =&gt; {
    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">`服务端: 收到加法API，计算<span class="hljs-subst">${a}</span>和<span class="hljs-subst">${b}</span>两个数的和。模型API发送`</span>) 
    <span class="hljs-comment">// 这里模拟API的发送和使用</span>
    <span class="hljs-keyword">let</span> data = a + b
    <span class="hljs-keyword">return</span> {
      <span class="hljs-attr">content</span>: [
        {
          <span class="hljs-attr">type</span>: <span class="hljs-string">"text"</span>,
          <span class="hljs-attr">text</span>: a + <span class="hljs-string">'+'</span> + b + <span class="hljs-string">'的结果是：'</span> + data,
        },
      ],
    };
  },
);
</code></pre>
<p>发现问题了么？ API是要有MCP服务器提供者调用的。<strong>要花钱的朋友！</strong></p>
<p>每一台MCP服务器背后都是要成本的，收费产品进行MCP服务器的支持还说的过去，不收费的产品全靠爱发电。更不要说，谁敢在生成环境接一个不收费的私人的小服务器？</p>
<p>百度地图核心API全面兼容MCP了，百度地图是收费的，进行多场景的支持是很正常的行为。</p>
<p>来看看百炼吧，阿里的百炼目前推出了MCP的功能，支持在百炼上部署MCP server。</p>
<p>也是要花钱的朋友~，三方API调用费用另算。</p>
<img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/6aa57430c57a488ab1223d1b153694eb~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5Y2O5rSb:q75.awebp?rk3s=f64ab15b&amp;x-expires=1750712152&amp;x-signature=Mw4TC8rn0nEQDrNyjHfPyplPCDc%3D" alt="blfy.jpg" width="100%" loading="lazy">
<p>阿里的魔塔社区提供了大量的MCP，可以看到有一些大厂的服务在，当然有收费的有免费的，各位可以尝试</p>
<img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/9993fc15525144b0a99b0bd49576c5b9~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5Y2O5rSb:q75.awebp?rk3s=f64ab15b&amp;x-expires=1750712152&amp;x-signature=JhsVqWiMhLn%2FpFXlDXxs0r17N2A%3D" alt="mota.jpg" width="100%" loading="lazy">
<h3 data-id="heading-3">第三步客户端根据结果，再次调用AI，由AI进行回答。</h3>
<p>客户端代码：</p>
<pre><code class="hljs language-js" lang="js">messages.<span class="hljs-title function_">push</span>({
  <span class="hljs-attr">role</span>: <span class="hljs-string">"user"</span>,
  <span class="hljs-attr">content</span>: result.<span class="hljs-property">content</span>,
});

<span class="hljs-keyword">const</span> aiResponse = <span class="hljs-keyword">await</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">openai</span>.<span class="hljs-property">chat</span>.<span class="hljs-property">completions</span>.<span class="hljs-title function_">create</span>({
  <span class="hljs-attr">model</span>: model,
  <span class="hljs-attr">messages</span>: messages,
});
</code></pre>
<p>从服务端返回的结果，添加到<code>messages</code>中，配合提示词由大模型进行回复即可。</p>
<p>这一步属于正常的流程，没什么好说的。</p>
<p>那么问题是：我们使用MCP来实现，和我们自己实现这套流程有什么区别么？我们为什么要用MCP呢？</p>
<p>当初群里朋友第一次提到MCP的时候，我去看了一眼文档，给了这样的结论：</p>
<p><code>大厂为了抢生态做的事情，给落地的流程中定义了一些概念，多了脑力负担，流程和自己实现没区别。</code></p>
<h2 data-id="heading-4">对于工具的使用，自己实现和用MCP实现有什么区别么？</h2>
<p>自己实现的流程和逻辑是这样的：</p>
<ol>
<li>我们的提示词工程师写好每个工具的提示词</li>
<li>我们的后端工程师写好模型的调用，使用的是前面写好的提示词</li>
<li>提供接口给前端，等待前端调用</li>
<li>前端调用传入query，后端通过AI获取了工具</li>
<li>通过工具配置调用API，拿到数据交给AI，流式返回用户。</li>
</ol>
<p>MCP的逻辑是这样的：</p>
<ol>
<li>我们的提示词工程师写好每个工具的提示词</li>
<li>我们后端工程师分别写好MCP服务端、MCP客户端</li>
<li>MCP客户端提供个接口给前端，等待前端调用</li>
<li>前端调用传入query，MCP客户端调用AI，获取了工具。</li>
<li>客户端把确定要使用的工具和参数发送会服务端，由服务端实现API调用并返回结果。</li>
<li>客户端根据结果，再次调用AI，由AI进行回答，流式返回用户。</li>
</ol>
<p><strong>看吧，本质上是没有区别的。</strong></p>
<p>什么？你说MCP服务端，如果日后需要与其他企业进行合作，可以方便的让对方的MCP客户端调用？
我们的客户端也可以很方便的接入别人的MCP服务端。</p>
<p>不好意思，不用MCP也可以，因为Function call的参数格式已经确定了，这里原本存在差异性就极小。而且MCP也并没有解决这个差异性。还是需要客户端进行修改的。</p>
<h2 data-id="heading-5">MCP真正的意义</h2>
<p>现在还是诸神混战时期，整个AI产品的上下游所有的点，都具有极高的不确定性。</p>
<p>MCP给出了一个技术标准化的协议，是大家共建AI的愿景中的一环，潜力是有的。</p>
<p>但是Anthropic真的只是在乎这个协议么？前面的内容我们也看到了，MCP和我们自己实现的流程几乎是一样的。但是为什么还要提出MCP呢？</p>
<p><strong>为了生态控制权和行业话语权。</strong></p>
<p>MCP它表面上是一个开放的协议，旨在解决AI模型与外部工具集成的碎片化问题，但其实他就是Anthropic对未来AI生态主导权的竞争。</p>
<p>未来MCP如果真的作为一个标准的协议成为大家的共识，围绕这个协议，甚至每家模型的工具调用格式都将被统一，此时Anthropic在委员会里的位置呢？不言而喻啊。</p>
<h2 data-id="heading-6">结语</h2>
<p>最后把我的策略分享给大家吧：</p>
<p><strong>打算在圈子里玩的部分，就和大家用一样的，不在圈子里玩的，其实自己团队实现也是OK的。</strong></p>
<p>我这边更多的是自己团队实现的，而且在这个实现过程中大家对模型应用、AI产品的理解不断地在提升。</p>
<p>希望各位读者也多进行尝试，这样未来面对新出的各路牛鬼蛇神时大家才能有更多的判断力。</p>
<p>共勉吧！</p>
<blockquote>
<p>☺️你好，我是<strong>华洛</strong>，如果你对程序员转型AI产品负责人感兴趣，请给我点个赞。</p>
<p>你可以在这里联系我👉<a href="https://link.juejin.cn?target=https%3A%2F%2Fwww.yuque.com%2Fhualuo-fztnr%2Frnkfkn%2Fhgg1ai826tm55vxs%3FsingleDoc%23" target="_blank" title="https://www.yuque.com/hualuo-fztnr/rnkfkn/hgg1ai826tm55vxs?singleDoc#" ref="nofollow noopener noreferrer">www.yuque.com/hualuo-fztn…</a></p>
<p>已入驻公众号【华洛AI转型纪实】，欢迎大家围观，后续会分享大量最近三年来的经验和踩过的坑。</p>
</blockquote>
<h2 data-id="heading-7">实战专栏</h2>
<p><a href="https://juejin.cn/post/7496397558358900790" target="_blank" title="https://juejin.cn/post/7496397558358900790"># 从0到1打造企业级AI售前机器人——实战指南一：根据产品需求和定位进行agent流程设计🧐</a></p>
<p><a href="https://juejin.cn/post/7497890801348821055" target="_blank" title="https://juejin.cn/post/7497890801348821055"># 从0到1打造企业级AI售前机器人——实战指南二：RAG工程落地之数据处理篇🧐</a></p>
<p><a href="https://juejin.cn/post/7485727472999579659" target="_blank" title="https://juejin.cn/post/7485727472999579659"># 实战派！百万PV的AI产品如何搭建RAG系统？</a></p>
<p><a href="https://juejin.cn/post/7482695183477047315" title="https://juejin.cn/post/7482695183477047315" target="_blank"># 团队落地AI产品的全流程</a></p>
<p><a href="https://juejin.cn/post/7479431076207362100" title="https://juejin.cn/post/7479431076207362100" target="_blank"># 30行代码，随时进行云端大模型能力评估！</a></p>
<p><a href="https://juejin.cn/post/7474925725662969883" title="https://juejin.cn/post/7474925725662969883" target="_blank"># 5000字长文，AI时代下程序员的巨大优势！</a></p></div></div>