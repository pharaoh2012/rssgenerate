
		<h2>
			<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ydswin/p/18666055" title="发布于 2025-01-11 17:48">
    <span role="heading" aria-level="2">k8s列出所有未配置探针的deployment</span>
    

</a>

		</h2>
		<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>在 Kubernetes 中，探针（Probes）用于检测容器的健康状态，主要包括以下三种：</p>
<ol>
<li><strong>Liveness Probe</strong>（存活探针）：检测容器是否正在运行。</li>
<li><strong>Readiness Probe</strong>（就绪探针）：检测容器是否准备好接收流量。</li>
<li><strong>Startup Probe</strong>（启动探针）：检测容器是否已完成启动。</li>
</ol>
<p>如果 Deployment 未配置这些探针，可能会导致容器在异常状态下继续运行或接收流量。因此，列出所有未配置探针的 Deployment 是一个常见的运维需求。</p>
<hr>
<h3 id="列出所有未配置探针的-deployment"><strong>列出所有未配置探针的 Deployment</strong></h3>
<p>以下是一个 Shell 脚本，用于列出 Kubernetes 集群中所有未配置探针的 Deployment：</p>
<pre><code class="language-bash">#!/bin/bash

# 设置命名空间（默认为所有命名空间）
NAMESPACE="${1:-}"

# 获取所有 Deployment
if [[ -z "$NAMESPACE" ]]; then
  DEPLOYMENTS=$(kubectl get deployments --all-namespaces -o json)
else
  DEPLOYMENTS=$(kubectl get deployments -n "$NAMESPACE" -o json)
fi

# 解析 Deployment
echo "$DEPLOYMENTS" | jq -r '
  .items[] | 
  select(
    (.spec.template.spec.containers[]? | 
      (.livenessProbe? == null) and 
      (.readinessProbe? == null) and 
      (.startupProbe? == null)
    )
  ) | 
  "Namespace: \(.metadata.namespace) | Deployment: \(.metadata.name)"
'
</code></pre>
<hr>
<h3 id="脚本说明"><strong>脚本说明</strong></h3>
<ol>
<li>
<p><strong>参数说明</strong></p>
<ul>
<li><code>NAMESPACE</code>：可选参数，指定要检查的命名空间。如果不指定，则检查所有命名空间。</li>
</ul>
</li>
<li>
<p><strong>获取 Deployment</strong></p>
<ul>
<li>使用 <code>kubectl get deployments</code> 获取所有 Deployment 的 JSON 格式数据。</li>
</ul>
</li>
<li>
<p><strong>过滤未配置探针的 Deployment</strong></p>
<ul>
<li>使用 <code>jq</code> 解析 JSON 数据，筛选出未配置 <code>livenessProbe</code>、<code>readinessProbe</code> 和 <code>startupProbe</code> 的 Deployment。</li>
</ul>
</li>
<li>
<p><strong>输出结果</strong></p>
<ul>
<li>输出未配置探针的 Deployment 的命名空间和名称。</li>
</ul>
</li>
</ol>
<hr>
<h3 id="使用方法"><strong>使用方法</strong></h3>
<ol>
<li>
<p><strong>安装依赖</strong></p>
<ul>
<li>
<p>确保已安装 <code>kubectl</code> 和 <code>jq</code>。</p>
</li>
<li>
<p>安装 <code>jq</code>：</p>
<pre><code class="language-bash"># Ubuntu/Debian
sudo apt-get install jq

# CentOS/RHEL
sudo yum install jq

# macOS
brew install jq
</code></pre>
</li>
</ul>
</li>
<li>
<p><strong>运行脚本</strong></p>
<ul>
<li>
<p>检查所有命名空间：</p>
<pre><code class="language-bash">./check-probes.sh
</code></pre>
</li>
<li>
<p>检查指定命名空间（如 <code>default</code>）：</p>
<pre><code class="language-bash">./check-probes.sh default
</code></pre>
</li>
</ul>
</li>
<li>
<p><strong>示例输出</strong></p>
<pre><code>Namespace: default | Deployment: my-app
Namespace: kube-system | Deployment: coredns
</code></pre>
</li>
</ol>
<hr>
<h3 id="扩展功能"><strong>扩展功能</strong></h3>
<ol>
<li>
<p><strong>列出未配置特定探针的 Deployment</strong><br>
如果需要单独检查未配置 <code>livenessProbe</code>、<code>readinessProbe</code> 或 <code>startupProbe</code> 的 Deployment，可以修改 <code>jq</code> 过滤条件。例如：</p>
<ul>
<li>
<p>仅检查未配置 <code>livenessProbe</code> 的 Deployment：</p>
<pre><code class="language-bash">echo "$DEPLOYMENTS" | jq -r '
  .items[] | 
  select(
    (.spec.template.spec.containers[]? | 
      (.livenessProbe? == null)
    )
  ) | 
  "Namespace: \(.metadata.namespace) | Deployment: \(.metadata.name)"
'
</code></pre>
</li>
</ul>
</li>
<li>
<p><strong>输出详细信息</strong><br>
如果需要输出 Deployment 的详细信息（如容器名称），可以修改 <code>jq</code> 输出格式：</p>
<pre><code class="language-bash">echo "$DEPLOYMENTS" | jq -r '
  .items[] | 
  select(
    (.spec.template.spec.containers[]? | 
      (.livenessProbe? == null) and 
      (.readinessProbe? == null) and 
      (.startupProbe? == null)
    )
  ) | 
  "Namespace: \(.metadata.namespace) | Deployment: \(.metadata.name) | Containers: \([.spec.template.spec.containers[].name] | join(", "))"
'
</code></pre>
<p>示例输出：</p>
<pre><code>Namespace: default | Deployment: my-app | Containers: app, sidecar
</code></pre>
</li>
<li>
<p><strong>导出结果到文件</strong><br>
将结果导出到文件：</p>
<pre><code class="language-bash">./check-probes.sh &gt; no-probes-deployments.txt
</code></pre>
</li>
</ol>
<hr>
<h3 id="总结"><strong>总结</strong></h3>
<p>通过该脚本，可以快速列出 Kubernetes 集群中所有未配置探针的 Deployment，帮助运维人员及时发现潜在问题并优化容器健康检查配置。</p>

</div>
<div id="MySignature" role="contentinfo">
    <p>本文来自博客园，作者：<a href="https://www.cnblogs.com/ydswin/" target="_blank">dashery</a>，转载请注明原文链接：<a href="https://www.cnblogs.com/ydswin/p/18666055" target="_blank">https://www.cnblogs.com/ydswin/p/18666055</a></p>
</div>
<div class="clear"></div>

		<p class="postfoot">
			posted on 
<span id="post-date" data-last-update-days="1.0180685287546296" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-11 17:48">2025-01-11 17:48</span>&nbsp;
<a href="https://www.cnblogs.com/ydswin">dashery</a>&nbsp;
阅读(<span id="post_view_count">52</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18666055" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18666055);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18666055', targetLink: 'https://www.cnblogs.com/ydswin/p/18666055', title: 'k8s列出所有未配置探针的deployment' })">举报</a>

		</p>
	