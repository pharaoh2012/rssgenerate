
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/powertoolsteam/p/19014471" title="发布于 2025-07-31 08:41">
    <span role="heading" aria-level="2">.NET 10 中的新增功能系列文章3—— .NET MAUI 中的新增功能</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<ul>
<li><a href="https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview6/dotnetmaui.md" target="_blank" rel="noopener nofollow">.NET 10 预览版 6 中的 .NET MAUI</a></li>
<li><a href="https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview5/dotnetmaui.md" target="_blank" rel="noopener nofollow">.NET 10  预览版 5  中的.NET MAUI</a></li>
<li><a href="https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview4/dotnetmaui.md" target="_blank" rel="noopener nofollow">.NET 10 预览版 4 中的 .NET MAUI</a></li>
<li><a href="https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview3/dotnetmaui.md" target="_blank" rel="noopener nofollow">.NET 10 预览版 3 中的 .NET MAUI</a></li>
<li><a href="https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview2/dotnetmaui.md" target="_blank" rel="noopener nofollow">.NET 10 预览版 2 中的 .NET MAUI</a></li>
<li><a href="https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview1/dotnetmaui.md" target="_blank" rel="noopener nofollow">.NET 10 预览版 1 中的 .NET MAUI</a></li>
</ul>
<h3 id="一mediapicker-增强功能预览版6">一、MediaPicker 增强功能（预览版6）</h3>
<p>.NET 10 预览版6 对 MediaPicker 进行了显著增强，新增了支持多文件选择和图像压缩的功能。开发者现在可以通过简单的 API 调用实现这些功能：</p>
<pre><code class="language-csharp">var result = await MediaPicker.PickMultipleAsync(new MediaPickerOptions
{
    MaximumWidth = 1024,
    MaximumHeight = 768
});
</code></pre>
<p>这个改进使得处理媒体文件变得更加高效，特别是对于需要处理多张图片或控制图像尺寸的应用场景。</p>
<h3 id="二xaml-命名空间简化预览版5">二、XAML 命名空间简化（预览版5）</h3>
<p>.NET 10 预览版5 引入了一套全新的 XAML 命名空间处理机制，显著简化了 XAML 文件的头部声明。主要改进包括：</p>
<ol>
<li><strong>项目范围的"全局"命名空间</strong>：<code>http://schemas.microsoft.com/dotnet/maui/global</code> 可以聚合多个 xmlns</li>
<li><strong>隐式默认命名空间</strong>（选择加入）：编译器自动注入默认命名空间</li>
</ol>
<p>对比示例：</p>
<pre><code class="language-xml">&lt;!-- .NET 8 style --&gt;
&lt;ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
        xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
        xmlns:models="clr-namespace:MyApp.Models"
        xmlns:controls="clr-namespace:MyApp.Controls"
        x:Class="MyApp.MainPage"&gt;
    &lt;controls:TagView x:DataType="models:Tag" /&gt;
&lt;/ContentPage&gt;

&lt;!-- .NET 10 简化版 --&gt;
&lt;ContentPage x:Class="MyApp.MainPage"&gt;
    &lt;TagView x:DataType="Tag" /&gt;
&lt;/ContentPage&gt;
</code></pre>
<p>变化：</p>
<ul>
<li>无需声明 <code>xmlns:models</code> 或 <code>xmlns:controls</code> 因为它们在 <code>GlobalXmlns.cs</code> 文件中全局声明</li>
<li>不需要前缀 <code>TagView</code> 或 <code>Tag</code></li>
</ul>
<pre><code class="language-xml">&lt;!-- .NET 10 Preview 5 plus opt-in --&gt;
&lt;ContentPage x:Class="MyApp.MainPage"&gt;
    &lt;TagView x:DataType="Tag" /&gt;
&lt;/ContentPage&gt;
</code></pre>
<p>要启用这一功能，开发者需要在项目中添加 GlobalXmlns.cs 文件并配置相关属性。</p>
<h3 id="三web-请求拦截功能预览版5和6">三、Web 请求拦截功能（预览版5和6）</h3>
<p>.NET 10 为 BlazorWebView 和 HybridWebView 新增了 Web 请求拦截能力，为开发者提供了更大的灵活性：</p>
<pre><code class="language-csharp">webView.WebResourceRequested += (s, e) =&gt;
{
    if (e.Uri.ToString().Contains("api/secure"))
    {
        e.Handled = true;
        e.SetResponse(200, "OK", "application/json", GetCustomStream());
    }
};
</code></pre>
<p>此功能支持多种场景，包括修改请求头、重定向请求或提供本地响应等。</p>
<h3 id="四net-aspire-集成">四、.NET Aspire 集成</h3>
<p>.NET 10 为 .NET MAUI 新增了与 .NET Aspire 的深度集成模板，简化了遥测和服务发现的配置：</p>
<pre><code class="language-csharp">builder.AddServiceDefaults();
</code></pre>
<p>该方法自动完成：</p>
<ul>
<li>OpenTelemetry 指标和追踪配置</li>
<li>服务发现功能添加</li>
<li>HttpClient 与服务发现的集成配置</li>
</ul>
<p>这为构建现代云原生应用提供了更便捷的路径。</p>
<h3 id="五动画-api-改进">五、动画 API 改进</h3>
<p>.NET 10 对动画 API 进行了现代化改造，将原有的同步方法替换为异步版本：</p>
<table>
<thead>
<tr>
<th>旧方法</th>
<th>新方法</th>
</tr>
</thead>
<tbody>
<tr>
<td>FadeTo</td>
<td>FadeToAsync</td>
</tr>
<tr>
<td>RotateTo</td>
<td>RotateToAsync</td>
</tr>
<tr>
<td>ScaleTo</td>
<td>ScaleToAsync</td>
</tr>
</tbody>
</table>
<p>这种改变不仅更符合现代异步编程模式，还能避免潜在的 UI 线程阻塞问题。</p>
<p>详细信息：<a href="https://learn.microsoft.com/zh-cn/dotnet/maui/user-interface/animation/basic?view=net-maui-10.0&amp;preserve-view=true" target="_blank" rel="noopener nofollow">基础动画</a>。</p>
<h3 id="六控件增强和弃用">六、控件增强和弃用</h3>
<h3 id="collectionview-和-carouselview">CollectionView 和 CarouselView</h3>
<p>.NET 9 中的 .NET MAUI 在 iOS 和 Mac Catalyst 上包含了两个可选的处理程序，为 <a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.collectionview" target="_blank" rel="noopener nofollow">CollectionView</a> 和 <a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.carouselview" target="_blank" rel="noopener nofollow">CarouselView</a>带来了性能和稳定性改进。 在 .NET 10 中，这些是 <a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.collectionview" target="_blank" rel="noopener nofollow">CollectionView</a> 和 <a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.carouselview" target="_blank" rel="noopener nofollow">CarouselView</a>的默认处理程序。</p>
<h3 id="编辑和输入-android">编辑和输入 (Android)</h3>
<p>在安卓平台上，<a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.editor" target="_blank" rel="noopener nofollow">Editor</a> 和 <a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.entry" target="_blank" rel="noopener nofollow">Entry</a> 视图将它们的原生视图从 <code>AppCompatEditText</code> 更改为 <code>MauiAppCompatEditText</code>，这增加了对 <code>SelectionChanged</code> 事件的支持。</p>
<h3 id="hybridwebview">HybridWebView</h3>
<p><a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.hybridwebview" target="_blank" rel="noopener nofollow">HybridWebView</a> 获得一个 <a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.hybridwebview.invokejavascriptasync" target="_blank" rel="noopener nofollow">InvokeJavaScriptAsync</a> 重载，该重载调用指定的 JavaScript 方法，但不包括返回类型的任何信息。 有关详细信息，请参阅 <a href="https://learn.microsoft.com/zh-cn/dotnet/maui/user-interface/controls/hybridwebview?view=net-maui-10.0&amp;preserve-view=true#invoke-javascript-methods-that-dont-return-a-value" target="_blank" rel="noopener nofollow">调用不返回值</a>的 JavaScript 方法。</p>
<p>默认情况下，由您的JavaScript代码抛出的任何异常都会发送到.NET，然后在.NET中重新抛出为.NET异常。</p>
<h3 id="列表视图">列表视图</h3>
<p><a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.listview" target="_blank" rel="noopener nofollow">ListView</a> 已被弃用，和 <a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.entrycell" target="_blank" rel="noopener nofollow">EntryCell</a>、<a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.imagecell" target="_blank" rel="noopener nofollow">ImageCell</a>、<a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.switchcell" target="_blank" rel="noopener nofollow">SwitchCell</a>、<a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.textcell" target="_blank" rel="noopener nofollow">TextCell</a>、以及 <a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.viewcell" target="_blank" rel="noopener nofollow">ViewCell</a> 一样。 相反，应使用 <a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.collectionview" target="_blank" rel="noopener nofollow">CollectionView</a>。</p>
<p>备注</p>
<p><a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.cell" target="_blank" rel="noopener nofollow">Cell</a> 尚未弃用，因为它目前用于源代码生成。 然而，它应该被视为已弃用。</p>
<h3 id="搜索栏">搜索栏</h3>
<p><a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.searchbar" target="_blank" rel="noopener nofollow">SearchBar</a> 获得了一个 <code>SearchIconColor</code> 可绑定属性，用于设置搜索图标的颜色：</p>
<pre><code class="language-xaml">&lt;SearchBar Placeholder="Search items..."
           SearchIconColor="Blue" /&gt;
</code></pre>
<p><a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.searchbar" target="_blank" rel="noopener nofollow">SearchBar</a> 还获得一个可绑定的 <code>ReturnType</code> 属性，类型为 <a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.returntype" target="_blank" rel="noopener nofollow">ReturnType</a>，用于指定返回按钮的外观。 此属性的默认值为 <code>Search</code>。</p>
<p>有关详细信息，请参阅 <a href="https://learn.microsoft.com/zh-cn/dotnet/maui/user-interface/controls/searchbar?view=net-maui-10.0&amp;preserve-view=true" target="_blank" rel="noopener nofollow">SearchBar</a>。</p>
<h3 id="开关">开关</h3>
<p><a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.switch" target="_blank" rel="noopener nofollow">Switch</a> 拥有一个 <code>OffColor</code> 可绑定属性，用于设置开关在关闭状态时的颜色。</p>
<pre><code class="language-xaml">&lt;Switch OffColor="Red"
        OnColor="Green" /&gt;
</code></pre>
<p>有关详细信息，请参阅 <a href="https://learn.microsoft.com/zh-cn/dotnet/maui/user-interface/controls/switch?view=net-maui-10.0&amp;preserve-view=true" target="_blank" rel="noopener nofollow">开关</a>。</p>
<h3 id="表格视图">表格视图</h3>
<p><a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.tableview" target="_blank" rel="noopener nofollow">TableView</a> 已弃用。 相反，应使用 <a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.collectionview" target="_blank" rel="noopener nofollow">CollectionView</a>。</p>
<h3 id="android上的webview">Android上的WebView</h3>
<p>当视频托管在 Android 的<a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.webview" target="_blank" rel="noopener nofollow">WebView</a>中时，现在可以通过在<code>allowfullscreen</code>中包含<code>iframe</code>来全屏播放。</p>
<h3 id="七平台特定功能增强">七、平台特定功能增强</h3>
<ol>
<li>
<p><strong>iOS/Mac Catalyst 模态页面</strong>：现在可以显示为弹出式页面</p>
<p>适用于 .NET 10 的 .NET MAUI 添加了一个特定于平台的功能，可以在 iOS 和 Mac Catalyst 上将模态页面显示为弹出式页面。 通过将<code>Page.ModalPopoverSourceView</code>可绑定属性设置为定义模态来源的<code>View</code>，将<code>Page.ModalPopoverRect</code>可绑定属性设置为定义弹出框将从其发起的视图内矩形的<a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.drawing.rectangle" target="_blank" rel="noopener nofollow">Rectangle</a>，并将<code>Page.ModalPresentationStyle</code>可绑定属性设置为<code>Popover</code>，来使用它。</p>
</li>
</ol>
<pre><code class="language-csharp">using Microsoft.Maui.Controls.PlatformConfiguration;
using Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific;

public partial class PopoverPage : ContentPage
{
    public PopoverPage(View modal, Rectangle rectangle)
    {
        InitializeComponent();
        On&lt;iOS&gt;().SetModalPopoverView(modal);
        On&lt;iOS&gt;().SetModalPopoverRect(rectangle);
        On&lt;iOS&gt;().SetModalPresentationStyle(UIModalPresentationStyle.Popover);
    }
}
</code></pre>
<p>使用 <code>Navigation.PushModalAsync</code> 方法导航到模式页</p>
<pre><code class="language-c#">Page modalPage = new PopoverPage(originButton, Rectangle.Empty);
await Navigation.PushModalAsync(modalPage);
</code></pre>
<ol start="2">
<li>
<p><strong>地理位置</strong>：新增 IsEnabled 属性检查位置服务状态</p>
</li>
<li>
<p><strong>文本转语音</strong>：SpeechOptions 新增 Rate 属性控制语速</p>
</li>
<li>
<p><strong>Web 认证</strong>：AuthenticateAsync 支持 CancellationToken</p>
</li>
</ol>
<p>这些平台特定的增强使得应用能够更好地利用各平台的原生能力^<sup>参考内容："平台功能"</sup>^。</p>
<h3 id="八android-开发改进">八、Android 开发改进</h3>
<p>.NET 10 为 Android 开发带来多项重要改进：</p>
<ol>
<li><strong>API 36 和 JDK 21 支持</strong>：默认使用 Android 16 (API 36)</li>
<li><strong>dotnet run 支持</strong>：简化调试流程</li>
</ol>
<pre><code class="language-bash">// Run on the only attached Android physical device
dotnet run -p:AdbTarget=-d

// Run on the only running Android emulator
dotnet run -p:AdbTarget=-e

// Run on the specified Android physical device or emulator
dotnet run -p:AdbTarget="-s emulator-5554"
</code></pre>
<ol start="3">
<li>
<p><strong>编组方法默认启用</strong>：</p>
<p>在 .NET 9 中，引入了一种新的方式来创建 Java 代码调用 C# 代码所需的封送方法，提高了启动性能。 但是，在 .NET 9 中，它们默认处于关闭状态。</p>
<p>在 .NET 10 中，默认启用它们。 这些封送方法的问题通常表现为启动时挂起。 如果您在 .NET 10 预览版中遇到启动时的卡顿问题，而在 .NET 9 上没有，请尝试在项目文件中将 <code>$(AndroidEnableMarshalMethods)</code> MSBuild 属性设置为 <code>false</code> 来禁用封送方法。</p>
</li>
</ol>
<pre><code class="language-xml">&lt;PropertyGroup&gt;
    &lt;AndroidEnableMarshalMethods&gt;false&lt;/AndroidEnableMarshalMethods&gt;
&lt;PropertyGroup&gt;
</code></pre>
<ol start="3">
<li><strong>构建优化</strong>：使用 System.IO.Compression 创建 APK，缩短构建时间</li>
</ol>
<p>这些改进显著提升了 Android 开发的体验和效率。</p>
<h3 id="九ios-开发改进">九、iOS 开发改进</h3>
<p>iOS 开发在 .NET 10 中也获得多项增强：</p>
<ol>
<li><strong>修剪器增强</strong>：在更多配置中启用，默认显示警告</li>
<li><strong>原始资源处理</strong>：优化资源嵌入机制</li>
<li><strong>Windows 绑定构建</strong>：不再需要远程 Mac</li>
<li><strong>NSUrlSessionHandler 改进</strong>：更灵活的 TLS 配置</li>
</ol>
<pre><code class="language-xml">&lt;PropertyGroup&gt;
    &lt;SuppressTrimAnalysisWarnings&gt;true&lt;/SuppressTrimAnalysisWarnings&gt;
    &lt;BundleOriginalResources&gt;false&lt;/BundleOriginalResources&gt;
&lt;/PropertyGroup&gt;
</code></pre>
<h2 id="系列文章">系列文章</h2>
<p><a href="https://www.cnblogs.com/powertoolsteam/p/19010089" target="_blank">.NET 10 中的新增功能系列文章1——运行时中的新增功能</a></p>
<p><a href="https://www.cnblogs.com/powertoolsteam/p/19012227" target="_blank">.NET 10 中的新增功能系列文章2——ASP.NET Core 中的新增功能</a></p>

</div>
<div id="MySignature" role="contentinfo">
    <hr>
<br>
<p style="font-size: 16px; font-family: 微软雅黑, 黑体, Arial; color: #000">本文是由葡萄城技术开发团队发布，转载请注明出处：<a href="https://www.grapecity.com.cn/" target="_blank">葡萄城官网</a></p>
<!--p style="font-size: 16px; font-family: 微软雅黑, 黑体, Arial; color: #000">了解企业级低代码开发平台，请前往<a href="https://www.grapecity.com.cn/solutions/huozige" target="_blank">活字格</a>
</p><p style="font-size: 16px; font-family: 微软雅黑, 黑体, Arial; color: #000">了解可嵌入您系统的在线 Excel，请前往<a href="https://www.grapecity.com.cn/developer/spreadjs" target="_blank">SpreadJS纯前端表格控件</a></p>
<p style="font-size: 16px; font-family: 微软雅黑, 黑体, Arial; color: #000">了解嵌入式的商业智能和报表软件，请前往<a href="https://www.grapecity.com.cn/solutions/wyn" target="_blank">Wyn Enterprise
</a></p-->

<br>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-31 08:41">2025-07-31 08:41</span>&nbsp;
<a href="https://www.cnblogs.com/powertoolsteam">葡萄城技术团队</a>&nbsp;
阅读(<span id="post_view_count">41</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19014471);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19014471', targetLink: 'https://www.cnblogs.com/powertoolsteam/p/19014471', title: '.NET 10 中的新增功能系列文章3—— .NET MAUI 中的新增功能' })">举报</a>
</div>
        