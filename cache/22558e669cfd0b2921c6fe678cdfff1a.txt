
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/mingupupu/p/18965841" title="发布于 2025-07-04 16:07">
    <span role="heading" aria-level="2">C#：wpf ui 4.0 是如何实现页面导航的？</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="wpf-ui-介绍">wpf ui 介绍</h2>
<p>wpf ui 是一款我比较喜欢的wpf ui界面开源库，目前已经获得了8.5颗stars，还是很受欢迎的：</p>
<p><img alt="image-20250704103840563" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202507/3288240-20250704160652680-2101207317.png" class="lazyload"></p>
<p>wpf ui在vs中也提供了快速开发模板：</p>
<p><img alt="image-20250704104020942" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202507/3288240-20250704160652670-1514424979.png" class="lazyload"></p>
<p>让wpf开发者可以快速进行应用开发，已经设置好了模板。</p>
<p>但是我发现最新的模板的页面导航方式跟之前不一样了。</p>
<p>先看下wpf ui的迁移文档：</p>
<p><img alt="image-20250704104159399" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202507/3288240-20250704160652945-917830642.png" class="lazyload"></p>
<p>先简单翻译一下：</p>
<p><strong>迁移计划</strong></p>
<p>本页概述了迁移时需要考虑的关键变更和重要细节。它突出了新功能、已更改的内容以及确保顺利过渡所需的步骤。这不是一份完整的逐步指南，而是一个快速参考，帮助您导航迁移过程中最关键的部分。</p>
<p><strong>抽象包</strong></p>
<p>一些 WPF UI 接口已被移动到独立包 WPF-UI.Abstractions。您无需引用它，它将始终随 WPF-UI NuGet 包自动添加。</p>
<p><strong>导航接口</strong></p>
<p>导航接口已移至独立的 WPF-UI.Abstractions 包中。这样，如果你有与其他项目相关的模型、视图或其他业务服务，这些项目不涉及 WPF，你可以在多个应用程序中共同开发它们。</p>
<p><strong>新命名空间</strong></p>
<p>INavigationAware 和 INavigableView 已移动到 Wpf.Ui.Abstractions.Controls 命名空间。</p>
<p><strong>基于依赖注入的页面创建</strong></p>
<p>IPageService 已更名为 INavigationViewPageProvider。</p>
<p>其默认实现位于新的 Wpf.Ui.DependencyInjection 包中。您只需使用 services.AddNavigationViewPageProvider() 扩展方法，然后在导航中指定要使用此接口。然后 NavigationView 将使用 DI 容器进行页面创建。</p>
<p><strong>导航服务</strong></p>
<p>在主包（WPF-UI）中定义的INavigationService使得导航管理变得简单。您可以用它来方便地在视图模型之间进行注入。我们强烈建议将其设置为单例。</p>
<h2 id="它是如何实现页面导航的">它是如何实现页面导航的？</h2>
<p>来到App.xaml.cs：</p>
<p><img alt="image-20250704151729308" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202507/3288240-20250704160652699-803237086.png" class="lazyload"></p>
<p>与实现导航有关的三个地方。</p>
<p>运行程序，来到ApplicationHostService.cs：</p>
<p><img alt="image-20250704152301186" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202507/3288240-20250704160653062-1868523885.png" class="lazyload"></p>
<p>首先从依赖注入容器中获取<code>INavigationWindow</code>实例。</p>
<p>转到<code>INavigationWindow</code>接口的定义：</p>
<p><img alt="image-20250704152639554" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202507/3288240-20250704160652821-531356758.png" class="lazyload"></p>
<p>定义了几个和导航有关的函数。</p>
<p>下一步在获取<code>INavigationWindow</code>的时候，会先实例化主窗体的ViewModel。</p>
<p><img alt="image-20250704152858893" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202507/3288240-20250704160652657-513086491.png" class="lazyload"></p>
<p>在这里会为NavigationView这个控件设置SetNavigationControl。</p>
<p><img alt="image-20250704153017822" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202507/3288240-20250704160652644-1944480028.png" class="lazyload"></p>
<p>请注意这里的RootNavigation就是指在xaml中使用的那个NavigationView控件：</p>
<p><img alt="image-20250704153403102" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202507/3288240-20250704160652880-2136049112.png" class="lazyload"></p>
<p>设置了NavigationView控件中的_pageService：</p>
<p><img alt="image-20250704153502648" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202507/3288240-20250704160652614-1047732821.png" class="lazyload"></p>
<p>现在来到导航到主页：</p>
<p><img alt="image-20250704153619932" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202507/3288240-20250704160652863-1672507303.png" class="lazyload"></p>
<p><img alt="image-20250704153650509" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202507/3288240-20250704160652642-937516399.png" class="lazyload"></p>
<p><img alt="image-20250704153713097" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202507/3288240-20250704160652840-159091374.png" class="lazyload"></p>
<p>再到：</p>
<p><img alt="image-20250704153757509" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202507/3288240-20250704160652645-23131861.png" class="lazyload"></p>
<p>在</p>
<p><img alt="image-20250704153930681" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202507/3288240-20250704160652624-2025953396.png" class="lazyload"></p>
<p>中由于现在_pageService已经设置了，会调用它的GetPage方法：</p>
<p><img alt="image-20250704154131287" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202507/3288240-20250704160652679-2004116715.png" class="lazyload"></p>
<p>来到：</p>
<p><img alt="image-20250704154214108" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202507/3288240-20250704160652814-2115056413.png" class="lazyload"></p>
<p>来到：</p>
<p><img alt="image-20250704154328967" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202507/3288240-20250704160652637-667908130.png" class="lazyload"></p>
<p>进行内容控件的更新。</p>
<p>现在就来到了首页：</p>
<p><img alt="image-20250704154518776" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202507/3288240-20250704160652657-1853709799.png" class="lazyload"></p>
<p>现在我点击Data就会触发<code>NavigationViewItemClick</code>事件：</p>
<p><img alt="image-20250704154658294" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202507/3288240-20250704160652637-412800365.png" class="lazyload"></p>
<p>又是刚刚那样来到NavigateInternal实现页面导航：</p>
<p><img alt="image-20250704154725975" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202507/3288240-20250704160652706-235558735.png" class="lazyload"></p>
<p>还是通过_pageService找到对应页面，然后进行控件内容更新。</p>
<p><img alt="image-20250704154832156" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202507/3288240-20250704160652661-1342535123.png" class="lazyload"></p>
<p>然后就会跳转到新的页面：</p>
<p><img alt="image-20250704154934906" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202507/3288240-20250704160652681-1475891755.png" class="lazyload"></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-04 16:07">2025-07-04 16:07</span>&nbsp;
<a href="https://www.cnblogs.com/mingupupu">mingupupup</a>&nbsp;
阅读(<span id="post_view_count">235</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18965841);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18965841', targetLink: 'https://www.cnblogs.com/mingupupu/p/18965841', title: 'C#：wpf ui 4.0 是如何实现页面导航的？' })">举报</a>
</div>
        