
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Java-Starter/p/18760221" title="发布于 2025-07-23 20:57">
    <span role="heading" aria-level="2">入职3个月，为冷门编程语言 InterSystems ObjectScript 编写了一个 VSCode 插件</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="背景介绍">背景介绍</h2>
<p>InterSystems ObjectScript 是由 InterSystems 公司开发的编程语言，诞生于 1980 年代初期。它最初是为了支持 InterSystems 的数据库产品（如 Caché）而设计的，结合了面向对象和过程式编程的特性。ObjectScript 的设计目的是为了高效地处理医疗、财务和其他高性能计算领域的数据密集型应用。<br>
公司老项目使用的是这个技术栈，我没得选，得使用。我明显感觉到，这个编程语言的社区远小于Java,Spring, C#，.NET, Python, AI等主流编程语言以及技术栈社区。出了错只能查官方API，AI编程辅助在这个语言上表现欠佳，比如会为一个类生成API不存在的方法，以及无法察觉到编译顺序之类的底层错误。</p>
<h2 id="和主流编程语言的对比">和主流编程语言的对比</h2>
<h3 id="相同点">相同点</h3>
<h4 id="面向对象编程">面向对象编程</h4>
<p>有静态方法和普通方法。</p>
<h4 id="异常处理">异常处理</h4>
<p>使用 <code>TRY/CATCH</code> 结构处理异常，类似于其他编程语言：</p>
<pre><code class="language-objectscript">TRY {
    // 可能出错的代码
    SET result = 10 / 0
} CATCH ex {
    WRITE "Error: " _ ex.DisplayString()
}
</code></pre>
<h4 id="全局变量">全局变量</h4>
<p><code>SET ^MyGlobal("UserCount") = 100</code></p>
<h4 id="为开头的变量的语法">"$"为开头的变量的语法</h4>
<p>让我想起来了php的变量。<code>$JOB</code>,<code>$ZDATE("YYYY-MM-DD")</code></p>
<h4 id="类似于c的宏定义">类似于C的宏定义</h4>
<p>支持预处理器指令和宏定义，在编译时进行文本替换：</p>
<pre><code class="language-objectscript">#define DEBUG 1
#if DEBUG
    WRITE "Debug mode enabled"
#endif
</code></pre>
<h4 id="现代包管理工具">现代包管理工具</h4>
<p>zpm "search"</p>
<h3 id="差异">差异</h3>
<h4 id="高度封装的例程">高度封装的例程</h4>
<p>有点像mysql的存储过程，可以直接使用</p>
<h3 id="反人类的函数习惯">反人类的函数习惯</h3>
<p>Collections集合的SetAt方法</p>
<pre><code>do myList.SetAt("red",2)
</code></pre>
<p>他这里key是在最后一个参数的位置，value在第一个参数位置。</p>
<p>For循环是<code>FOR var=start:increment:end</code>，主流语言是<code>FOR var=start:end:increment</code><br>
FOR i = 1 : 1 : 10 { code }</p>
<p>Property和Parameter傻傻分不清<br>
两个都是属性的意思，前者表示可以更改，后者表示常量，类似于主流编程语言的const关键字。</p>
<h4 id="奇特的语法">奇特的语法</h4>
<p>字符串包含<br>
<code>##class</code>调用</p>
<h4 id="编译顺序人工干预">编译顺序人工干预</h4>
<p>很头疼的特性，让我想起来被C++的手动内存管理折磨，现在需要自己指定编译顺序。</p>
<h4 id="代码生成器">代码生成器</h4>
<p>用代码生成代码，提高执行效率。<br>
较难调试，双引号配对的折磨。</p>
<pre><code class="language-C">If $CLASSMETHOD(type, "%Extends", "%Boolean")
	{
			Do %code.WriteLine("   do data.Write($Select(.."_propName_"="""": ""null"", +.."_propName_": ""true"", 1: ""false""))")
	}
		ElseIf $CLASSMETHOD(type, "%Extends", "%Integer") || $CLASSMETHOD(type, "%Extends", "%Numeric")
			|| $CLASSMETHOD(type, "%Extends", "%Float") || $CLASSMETHOD(type, "%Extends", "%Double")
	{
			Do %code.WriteLine("   do data.Write($Select(.." _ propName _ "="""": ""null"", 1: $FNUMBER(+.." _ propName _ ", ""N"")))")
		}
		Else
		{
			Do %code.WriteLine("   do data.Write($Select(.."_propName_"="""": ""null"", 1: """""""" _ .."_propName_"_""""""""))")
		}
</code></pre>
<h4 id="不存在多线程的类和方法">不存在多线程的类和方法</h4>
<p>ObjectScript 本身并没有提供类似其他编程语言（如 Java 或 Python）中的传统 多线程 类或方法。JOB 在 ObjectScript 中是基于 多进程 的，而不是传统意义上的 多线程。</p>
<h2 id="intersystems-objectscript-类图查看器">InterSystems ObjectScript 类图查看器</h2>
<p><img src="https://img2024.cnblogs.com/blog/1201453/202507/1201453-20250723210420053-86537865.png" alt="image" loading="lazy"></p>
<p>一个用于生成 InterSystems ObjectScript 类的 UML 类图的 Visual Studio Code 扩展。此扩展不仅生成类图，还提供交互式显示和导航功能。</p>
<p><img src="https://img2024.cnblogs.com/blog/1201453/202507/1201453-20250723210434742-2074267741.png" alt="image" loading="lazy"></p>
<h3 id="功能">功能</h3>
<ul>
<li>从 <code>.cls</code> 文件生成 UML 类图</li>
<li>支持类级和文件夹级图表生成</li>
<li>在编辑器和资源管理器中集成上下文菜单</li>
<li>可视化类关系、属性和方法</li>
<li>基于 PlantUML 提供可靠的图表表示</li>
<li>使用 PlantUML Web 服务器生成图表（无需安装 Java）</li>
<li><strong>新增：</strong> 与 InterSystems IRIS 直接集成，获取服务器端类信息</li>
<li><strong>新增：</strong> 从图表直接在 IRIS Documatic 中浏览类</li>
<li>交互式类图导航
<ul>
<li>点击类名、属性或方法可快速跳转到相应代码</li>
<li>SVG 图表嵌入 HTML 中实现平滑交互</li>
<li>类关系的可视化导航</li>
</ul>
</li>
</ul>
<h3 id="要求">要求</h3>
<table>
<thead>
<tr>
<th>操作系统</th>
<th>必需</th>
<th>可选（用于本地 PlantUML 生成）</th>
</tr>
</thead>
<tbody>
<tr>
<td>Windows</td>
<td>- VSCode 1.96.0+  <br> - ObjectScript 类文件(<code>.cls</code>)</td>
<td>- Java 8+</td>
</tr>
<tr>
<td>Linux</td>
<td>- VSCode 1.96.0+  <br> - ObjectScript 类文件(<code>.cls</code>)</td>
<td>- Java 8+ <br> - Graphviz</td>
</tr>
</tbody>
</table>
<p>💡 <em>使用 PlantUML Web 服务器时，不需要 Java 和 Graphviz。</em></p>
<h3 id="安装">安装</h3>
<ol>
<li>从 VS Code 安装扩展</li>
<li>确保您的系统上已安装 Java 运行时环境 (JRE)（使用 PlantUML Web 服务器时可选）</li>
<li>安装后重启 VS Code</li>
</ol>
<blockquote>
<p>💡 <strong>查看详细图文教程</strong>：如需查看安装和使用的详细截图演示，请访问 <a href="https://github.com/cjy513203427/intersystems-objectscript-class-diagram-view/blob/master/README.zh-CN.md" target="_blank" rel="noopener nofollow">GitHub 仓库文档</a></p>
</blockquote>
<h3 id="使用方法">使用方法</h3>
<h4 id="生成类图">生成类图</h4>
<ol>
<li>在编辑器中打开 <code>.cls</code> 文件</li>
<li>使用以下方法之一生成类图：
<ul>
<li>按下 <code>Ctrl+Alt+U</code></li>
<li>右键点击文件并选择"生成类图"</li>
<li>右键点击包含 <code>.cls</code> 文件的文件夹并选择"生成类图"</li>
</ul>
</li>
<li>出现提示时，选择您首选的生成方法：
<ul>
<li><strong>本地 Java</strong>：使用本地 Java 安装生成图表并在 VS Code 中显示</li>
<li><strong>PlantUML Web 服务器</strong>：生成可以在任何浏览器中打开的 URL（无需安装 Java）</li>
</ul>
</li>
</ol>
<h4 id="使用-plantuml-web-服务器">使用 PlantUML Web 服务器</h4>
<p>选择"PlantUML Web 服务器"选项时：</p>
<ul>
<li>无需本地 Java 安装</li>
<li>图表在 PlantUML Web 服务器上生成</li>
<li>您可以将 URL 复制到剪贴板或直接在浏览器中打开</li>
<li>可以与他人共享 URL 以查看图表</li>
</ul>
<h4 id="使用-iris-集成生成类图">使用 IRIS 集成生成类图</h4>
<p>此功能依赖于 Intersystem 插件，它将从所选类生成所有类属性、参数和方法。<br>
需要注意的是，该功能会生成整个继承层次结构，即使是本地项目中不存在的类也会包含在内。</p>
<ol>
<li>在 VS Code 设置中配置您的 IRIS 连接：
<ul>
<li>前往设置 &gt; 扩展 &gt; InterSystems ObjectScript 类图</li>
<li>输入您的 IRIS 服务器主机、端口、命名空间、用户名和密码</li>
</ul>
</li>
<li>在编辑器中打开 <code>.cls</code> 文件</li>
<li>右键点击并选择"生成 InterSystems 类图"</li>
<li>扩展将连接到您的 IRIS 服务器并使用服务器中的类信息生成图表</li>
<li>点击图表中的类名、属性或方法可以：
<ul>
<li>在 IRIS Documatic 中打开类</li>
<li>在 IRIS 中查看属性定义</li>
<li>在 IRIS 中导航到方法实现</li>
</ul>
</li>
</ol>
<h4 id="交互功能">交互功能</h4>
<ul>
<li>点击图表元素可以：
<ul>
<li>跳转到类定义</li>
<li>查看属性定义</li>
<li>导航到方法实现</li>
</ul>
</li>
<li>支持图表缩放和平移</li>
<li>清晰可视化类关系</li>
</ul>
<h3 id="键盘快捷键">键盘快捷键</h3>
<ul>
<li><code>Ctrl+Alt+U</code>：为当前打开的 <code>.cls</code> 文件生成类图</li>
</ul>
<h3 id="扩展设置">扩展设置</h3>
<p>此扩展提供以下命令：</p>
<ul>
<li><code>intersystems-objectscript-class-diagram-view.generateClassDiagram</code>：为选定的文件或文件夹生成类图</li>
<li><code>intersystems-objectscript-class-diagram-view.generateIntersystemsClassDiagram</code>：使用 IRIS 服务器信息生成类图</li>
</ul>
<p>此扩展提供以下设置：</p>
<ul>
<li><code>intersystems-objectscript-class-diagram-view.server.host</code>：IRIS 服务器主机</li>
<li><code>intersystems-objectscript-class-diagram-view.server.port</code>：IRIS 服务器端口</li>
<li><code>intersystems-objectscript-class-diagram-view.server.namespace</code>：IRIS 命名空间</li>
<li><code>intersystems-objectscript-class-diagram-view.server.username</code>：IRIS 服务器用户名</li>
<li><code>intersystems-objectscript-class-diagram-view.server.password</code>：IRIS 服务器密码</li>
</ul>
<h3 id="已知问题">已知问题</h3>
<ul>
<li><strong>子类生成</strong>：缺少为当前类生成子类图的功能</li>
<li><strong>大型项目性能</strong>：
<ul>
<li>使用右键为大型文件夹生成图表可能会有明显延迟</li>
<li>对于大型项目生成的 webview/SVG 缺乏流畅的缩放功能和适当的缩放</li>
</ul>
</li>
</ul>
<p>请在 GitHub 仓库中报告任何问题。</p>
<h3 id="贡献">贡献</h3>
<p>欢迎贡献！随时提交拉取请求。</p>
<h3 id="许可证">许可证</h3>
<p>此扩展根据 MIT 许可证授权。</p>

</div>
<div id="MySignature" role="contentinfo">
    <div id="AllanboltSignature">        
<p id="PSignature" style="border-top: #e0e0e0 1px dashed; border-right: #e0e0e0 1px dashed; border-bottom: #e0e0e0 1px dashed; border-left: #e0e0e0 1px dashed; padding-top: 10px; padding-right: 10px; padding-bottom: 10px; padding-left: 60px; background: url(&quot;https://images.cnblogs.com/cnblogs_com/lloydsheng/239039/o_copyright.gif&quot;) #e5f1f4 no-repeat 1% 50%; font-family: 微软雅黑; font-size: 11px">            
<br> 
作者：<a href="http://www.cnblogs.com/Java-Starter/" target="_blank">Rest探路者</a>            
<br> 
出处：<a href="http://www.cnblogs.com/Java-Starter/" target="_blank">http://www.cnblogs.com/Java-Starter/</a>
<br>本文版权归作者和博客园共有，欢迎转载，但未经作者同意请保留此段声明，请在文章页面明显位置给出原文连接
<br>Github：<a href="https://github.com/cjy513203427">https://github.com/cjy513203427</a>    
</p>
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.005555555555555556" data-date-updated="2025-07-23 21:05">2025-07-23 20:57</span>&nbsp;
<a href="https://www.cnblogs.com/Java-Starter">Rest探路者</a>&nbsp;
阅读(<span id="post_view_count">170</span>)&nbsp;
评论(<span id="post_comment_count">1</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18760221);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18760221', targetLink: 'https://www.cnblogs.com/Java-Starter/p/18760221', title: '入职3个月，为冷门编程语言 InterSystems ObjectScript 编写了一个 VSCode 插件' })">举报</a>
</div>
        