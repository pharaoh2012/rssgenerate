
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/noear/p/18872229" title="发布于 2025-05-12 10:21">
    <span role="heading" aria-level="2">FastMCP（python）和 SolonMCP（java）的体验比较（不能说一样，但真的很像）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        MCP SDK 的发展历程中，FastMCP 和 SolonMCP 分别代表了不同阶段的开发体验。FastMCP 的 Python SDK 功能成熟，支持多种工具和资源模板，如计算器和天气工具，提供了丰富的开发体验。而 SolonMCP 的 Java SDK 虽然功能尚不完善，如缺少 HTTP 流支持和客户端断线自动重连，但它提供了对 Java 8 的支持，并且在资源模板和提示语方面有所增强。两者的开发体验相似，但 SolonMCP 在 Java 环境中提供了更广泛的兼容性和功能支持。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>从 MCP SDK 的发展史上看，FastMCP 是前辈，SolonMCP 则是后辈。mcp-python-sdk 功能完善，已经很成熟了。而 mcp-java-sdk 却还不完善，比如：</p>
<ul>
<li>还不支持 http streaming</li>
<li>还不支持 resouce template，不过有 pr 在走流程了（SolonMCP 提前提供了支持）</li>
<li>只支持 jdk17+（SolonMCP 提供了 jdk8+ 支持）</li>
<li>不支持 客户端断线自动重连（SolonMCP 提供了自动重连支持）</li>
</ul>
<p>两者的体验不能说是一样，但真的很像。</p>
<h3 id="1fastmcp-的开发体验python">1、FastMCP 的开发体验（python）</h3>
<p>计算器工具</p>
<pre><code class="language-python">@mcp.tool()
def add(a: int, b: int) -&gt; int:
    """将两个数字相加"""
    return a + b
 
@mcp.tool()
def subtract(a: int, b: int) -&gt; int:
    """从第一个数中减去第二个数"""
    return a - b
 
@mcp.tool()
def multiply(a: int, b: int) -&gt; int:
    """将两个数相乘"""
    return a * b
 
@mcp.tool()
def divide(a: float, b: float) -&gt; float:
    """将第一个数除以第二个数"""
    if b == 0:
        raise ValueError("除数不能为零")
    return a / b
    
if __name__ == "__main__":
    # 使用stdio传输方式启动服务器
    mcp.run(transport="stdio")
</code></pre>
<p>天气工具（有工具，资源，资源模板）</p>
<pre><code class="language-python">@mcp.tool()
def get_weather(city: str) -&gt; dict:
    """获取指定城市的当前天气"""
    return "24度，晴"
 
@mcp.resource("weather://cities")
def get_available_cities() -&gt; list:
    """获取所有可用的城市列表"""
    return ["Tokyo", "Sydney", "Tokyo"]
 
@mcp.resource("weather://forecast/{city}")
def get_forecast(city: str) -&gt; dict:
    """获取指定城市的天气预报资源"""
    return {
        "city": city,
        "temperature": [10,25],
        "condition":['sunny', 'clear', 'hot'],
        "unit": "celsius"
    }
 
if __name__ == "__main__":
    # 使用SSE传输方式启动服务器
    mcp.run(transport="sse")
</code></pre>
<h3 id="2solonmcp-的开发体验java">2、SolonMCP 的开发体验（java）</h3>
<p>SolonMCP（全称：solon-ai-mcp），支持 java8，可提供完成的 mcp 内容支持（工具，资源，资源模板，提示语）。</p>
<p>计算器工具</p>
<pre><code class="language-java">@McpServerEndpoint(channel = McpChannel.STDIO)
public class CalculatorTools {
    @ToolMapping(description = "将两个数字相加")
    public int add(@Param int a, @Param int b) {
        return a + b;
    }

    @ToolMapping(description = "从第一个数中减去第二个数")
    public int subtract(@Param int a, @Param int b) {
        return a - b;
    }

    @ToolMapping(description = "将两个数相乘")
    public int multiply(@Param int a, @Param int b) {
        return a * b;
    }

    @ToolMapping(description = "将第一个数除以第二个数")
    public float divide(@Param float a, @Param float b) {
        return a / b;
    }
}
</code></pre>
<p>天气工具（有工具，资源，资源模板）</p>
<pre><code class="language-java">@McpServerEndpoint(sseEndpoint = "/mcp/sse")
public class WeatherTools {
    @ToolMapping(description = "获取指定城市的当前天气")
    public String get_weather(@Param(description="城市") String city) {
        return "{city: '" + city + "', temperature:[10,25], condition:['sunny', 'clear', 'hot'], unit:celsius}";
    }

    //可以给前端用，输出严格的 json 格式
    @Produces(MimeType.APPLICATION_JSON_VALUE)
    @ResourceMapping(uri = "weather://cities", description = "获取所有可用的城市列表")
    public List&lt;String&gt; get_available_cities() {
        return Arrays.asList("Tokyo", "Sydney", "Tokyo");
    }

    @ResourceMapping(uri = "weather://forecast/{city}", description = "获取指定城市的天气预报资源")
    public String get_forecast(@Param(description="城市") String city) {
         return "{city: '" + city + "', temperature:[10,25], condition:['sunny', 'clear', 'hot'], unit:celsius}";
    }
}
</code></pre>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.49713841111342594" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-12 10:22">2025-05-12 10:21</span>&nbsp;
<a href="https://www.cnblogs.com/noear">带刺的坐椅</a>&nbsp;
阅读(<span id="post_view_count">210</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18872229);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18872229', targetLink: 'https://www.cnblogs.com/noear/p/18872229', title: 'FastMCP（python）和 SolonMCP（java）的体验比较（不能说一样，但真的很像）' })">举报</a>
</div>
        