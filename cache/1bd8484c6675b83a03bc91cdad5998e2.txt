
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/du-hong/p/18403898" title="发布于 2025-06-10 10:36">
    <span role="heading" aria-level="2">《刚刚问世》系列初窥篇-Java+Playwright自动化测试-16- iframe操作-监听事件和执行js脚本 （详细教程）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h3>1.简介</h3>
<p>前边主要讲解和分享了一下iframe的基础知识，以及一些常见的定位方法，最后进行了一下总结。今天主要来讲解和分享一下如何监听iframe上的事件和在iframe上如何执行JavaScript脚本代码。好了废话不多说，直接进入今天的主题。</p>
<h3>2.Dialog</h3>
<p>Dialog介绍官方API的文档地址：<a href="https://playwright.dev/java/docs/api/class-dialog" rel="noopener nofollow">对话框 |Playwright Java</a></p>
<p>语法如下：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">import</span> com.microsoft.playwright.*<span style="color: rgba(0, 0, 0, 1)">;

</span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Example {
  </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> main(String[] args) {
    </span><span style="color: rgba(0, 0, 255, 1)">try</span> (Playwright playwright =<span style="color: rgba(0, 0, 0, 1)"> Playwright.create()) {
      BrowserType chromium </span>=<span style="color: rgba(0, 0, 0, 1)"> playwright.chromium();
      Browser browser </span>=<span style="color: rgba(0, 0, 0, 1)"> chromium.launch();
      Page page </span>=<span style="color: rgba(0, 0, 0, 1)"> browser.newPage();
      page.onDialog(dialog </span>-&gt;<span style="color: rgba(0, 0, 0, 1)"> {
        System.out.println(dialog.message());
        dialog.dismiss();
      });
      page.evaluate(</span>"alert('1')"<span style="color: rgba(0, 0, 0, 1)">);
      browser.close();
    }
  }
}</span></pre>
</div>
<p>敲黑板！！！注意：对话框会自动关闭，除非有 Page.onDialog（handler） 侦听器。当侦听器存在时，它必须 Dialog.accept（） 或 Dialog.dismiss（） 确定或者取消对话框 - 否则页面将冻结等待对话框，并且单击等操作将永远不会完成。</p>
<h3>3.监听iframe上的事件</h3>
<p>iframe的事件可以通过page对象直接监听到。如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202409/1232840-20240909105401662-1606034554.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202409/1232840-20240909105418756-1926217989.gif" alt="" loading="lazy"></p>
<h4>3.1代码设计</h4>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202409/1232840-20240909140507499-98264223.png" alt="" loading="lazy"></p>
<h4>3.2参考代码</h4>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">package</span><span style="color: rgba(0, 0, 0, 1)"> com.bjhg.playwright;

</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Browser;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.BrowserContext;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.BrowserType;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.FrameLocator;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Page;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Playwright;

</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">
 * </span><span style="color: rgba(128, 128, 128, 1)">@author</span><span style="color: rgba(0, 128, 0, 1)"> 北京-宏哥
 * 
 * @公众号:北京宏哥（微信搜索，关注宏哥，提前解锁更多测试干货）
 * 
 * 《刚刚问世》系列初窥篇-Java+Playwright自动化测试-16- iframe操作-监听事件和执行js脚本 （详细教程） 草稿
 *
 * 2024年9月15日
 </span><span style="color: rgba(0, 128, 0, 1)">*/</span>
<span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Test_Dialog {
    
    </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> main(String[] args) {
        </span><span style="color: rgba(0, 0, 255, 1)">try</span> (Playwright playwright =<span style="color: rgba(0, 0, 0, 1)"> Playwright.create()) {
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">1.使用chromium浏览器，# 浏览器配置，设置以GUI模式启动Chrome浏览器（要查看浏览器UI，在启动浏览器时传递 headless=false 标志。您还可以使用 slowMo 来减慢执行速度。</span>
          Browser browser = playwright.chromium().launch(<span style="color: rgba(0, 0, 255, 1)">new</span> BrowserType.LaunchOptions().setHeadless(<span style="color: rgba(0, 0, 255, 1)">false</span>).setSlowMo(3000<span style="color: rgba(0, 0, 0, 1)">));
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">2.创建context</span>
          BrowserContext context =<span style="color: rgba(0, 0, 0, 1)"> browser.newContext();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">创建page</span>
          Page page =<span style="color: rgba(0, 0, 0, 1)"> context.newPage();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">3.浏览器打开网站</span>
          page.navigate("E:/Desktop/test/iframe/index.html"<span style="color: rgba(0, 0, 0, 1)">);
          
          page.onDialog(dialog </span>-&gt;<span style="color: rgba(0, 0, 0, 1)"> {
              System.out.println(dialog.message());
              dialog.accept();
            });
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">一层一层定位</span>
          FrameLocator frame = page.frameLocator("#frameA"<span style="color: rgba(0, 0, 0, 1)">);
          frame.locator(</span>"#alert"<span style="color: rgba(0, 0, 0, 1)">).click();
         
          
          System.out.println(</span>"Test Pass"<span style="color: rgba(0, 0, 0, 1)">);
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">关闭page</span>
<span style="color: rgba(0, 0, 0, 1)">          page.close();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">关闭browser</span>
<span style="color: rgba(0, 0, 0, 1)">          browser.close();
        }
    }
}</span></pre>
</div>
<h4>3.3运行代码</h4>
<p>1.运行代码，右键Run As-&gt;Java Application，就可以看到控制台输出，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202409/1232840-20240909140543335-2066184673.png" alt="" loading="lazy"></p>
<p>2.运行代码后电脑端的浏览器的动作。如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202409/1232840-20240909140709645-182984588.gif" alt="" loading="lazy"></p>
<p>3.宏哥将这段代码dialog.accept();注释后，看看会不会出现敲黑板的情况（页面将冻结等待对话框，并且单击等操作将永远不会完成），如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202409/1232840-20240909140931047-1461353350.gif" alt="" loading="lazy"></p>
<h3 id="autoid-0-3-3">4.执行js脚本</h3>
<h4 id="autoid-0-4-0">4.1在page对象执行js脚本</h4>
<p>使用<strong>page.evaluate(js代码)</strong>方法可以直接在page对象上执行JavasScript 代码。</p>
<h5>4.1.1代码设计</h5>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202409/1232840-20240909134838386-1751388815.png" alt="" loading="lazy"></p>
<h5>4.1.2参考代码</h5>
<div class="cnblogs_code">
<pre>package com.bjhg.playwright;

import com.microsoft.playwright.Browser;
import com.microsoft.playwright.BrowserContext;
import com.microsoft.playwright.BrowserType;
import com.microsoft.playwright.Page;
import com.microsoft.playwright.Playwright;

/**
 * @author 北京-宏哥
 * 
 * @公众号:北京宏哥（微信搜索，关注宏哥，提前解锁更多测试干货）
 * 
 * 《刚刚问世》系列初窥篇-Java+Playwright自动化测试-16- iframe操作-监听事件和执行js脚本 （详细教程） 草稿
 *
 * 2024年9月15日
 */
public class Test_Dialog {
    
    public static void main(String[] args) {
        try (Playwright playwright = Playwright.create()) {
          //1.使用chromium浏览器，# 浏览器配置，设置以GUI模式启动Chrome浏览器（要查看浏览器UI，在启动浏览器时传递 headless=false 标志。您还可以使用 slowMo 来减慢执行速度。
          Browser browser = playwright.chromium().launch(new BrowserType.LaunchOptions().setHeadless(false).setSlowMo(3000));
          //2.创建context
          BrowserContext context = browser.newContext();
          //创建page
          Page page = context.newPage();
          
          page.onDialog(dialog -&gt; {
              System.out.println(dialog.message());
              dialog.accept();
            });
          page.evaluate("alert('Hello 北京-宏哥')");          
          
          System.out.println("Test Pass");
          //关闭page
          page.close();
          //关闭browser
          browser.close();
        }
    }
}</pre>
</div>
<h5>4.1.3运行代码</h5>
<p>1.运行代码，右键Run As-&gt;Java Application，就可以看到控制台输出，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202409/1232840-20240909135053449-2014835996.png" alt="" loading="lazy"></p>
<p>2.运行代码后电脑端的浏览器的动作。如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202409/1232840-20240909135227552-101185222.gif" alt="" loading="lazy"></p>
<p>3.宏哥将这段代码dialog.accept();注释后，看看会不会出现敲黑板的情况（页面将冻结等待对话框，并且单击等操作将永远不会完成），如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202409/1232840-20240909135522197-420257099.gif" alt="" loading="lazy"></p>
<h3><span style="font-size: 1em">5.在iframe上执行js脚本</span></h3>
<p>在iframe上执行JavaScript代码，需在iframe对象上执行。例如：在iframe的input中输入“北京-宏哥”，如下图所示：</p>
<p><img src="https://img2023.cnblogs.com/blog/1232840/202308/1232840-20230809152336153-1154291960.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202409/1232840-20240909105418756-1926217989.gif" alt="" loading="lazy"></p>
<h4>5.1代码设计</h4>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202409/1232840-20240909162337009-449837145.png" alt="" loading="lazy"></p>
<h4>5.2参考代码</h4>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">package</span><span style="color: rgba(0, 0, 0, 1)"> com.bjhg.playwright;

</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Browser;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.BrowserContext;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.BrowserType;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Frame;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.FrameLocator;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Page;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Playwright;

</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">
 * </span><span style="color: rgba(128, 128, 128, 1)">@author</span><span style="color: rgba(0, 128, 0, 1)"> 北京-宏哥
 * 
 * @公众号:北京宏哥（微信搜索，关注宏哥，提前解锁更多测试干货）
 * 
 * 《刚刚问世》系列初窥篇-Java+Playwright自动化测试-16- iframe操作-监听事件和执行js脚本 （详细教程） 草稿
 *
 * 2024年9月15日
 </span><span style="color: rgba(0, 128, 0, 1)">*/</span>
<span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Test_Dialog {
    
    </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> main(String[] args) {
        </span><span style="color: rgba(0, 0, 255, 1)">try</span> (Playwright playwright =<span style="color: rgba(0, 0, 0, 1)"> Playwright.create()) {
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">1.使用chromium浏览器，# 浏览器配置，设置以GUI模式启动Chrome浏览器（要查看浏览器UI，在启动浏览器时传递 headless=false 标志。您还可以使用 slowMo 来减慢执行速度。</span>
          Browser browser = playwright.chromium().launch(<span style="color: rgba(0, 0, 255, 1)">new</span> BrowserType.LaunchOptions().setHeadless(<span style="color: rgba(0, 0, 255, 1)">false</span>).setSlowMo(3000<span style="color: rgba(0, 0, 0, 1)">));
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">2.创建context</span>
          BrowserContext context =<span style="color: rgba(0, 0, 0, 1)"> browser.newContext();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">创建page</span>
          Page page =<span style="color: rgba(0, 0, 0, 1)"> context.newPage();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">3.浏览器打开网站</span>
          page.navigate("E:/Desktop/test/iframe/index.html"<span style="color: rgba(0, 0, 0, 1)">);
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">定位到要操作的iframe</span>
          Frame frame = page.frame("frameA"<span style="color: rgba(0, 0, 0, 1)">);
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">执行js 给iframe的输入框输入内容</span>
          String js = "document.getElementById('iframeinput').value='北京-宏哥';"<span style="color: rgba(0, 0, 0, 1)">;
          frame.evaluate(js);
          page.pause();
          System.out.println(</span>"Test Pass"<span style="color: rgba(0, 0, 0, 1)">);
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">关闭page</span>
<span style="color: rgba(0, 0, 0, 1)">          page.close();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">关闭browser</span>
<span style="color: rgba(0, 0, 0, 1)">          browser.close();
        }
    }
}</span></pre>
</div>
<h4>5.3运行代码</h4>
<p>1.运行代码，右键Run As-&gt;Java Application，就可以看到控制台输出，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202409/1232840-20240909162309726-623030847.png" alt="" loading="lazy"></p>
<p>2.运行代码后电脑端的浏览器的动作（为了看清楚输入的内容，宏哥这里加了debug的代码段：page.pause();）。如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202409/1232840-20240909163425178-160706706.gif" alt="" loading="lazy"></p>
<h3>6.小结</h3>
<p>今天主要讲解和分享了一下iframe的监听事件和执行js脚本。其实也是运用了前边讲解的iframe定位方法，首先定位到iframe后，才能在iframe中进行对应的操作，如果定位不到，就不可能操作其内部的元素。好了，时间不早了，今天就分享到这里，感谢您耐心的阅读！！！</p>
</div>
<div id="MySignature" role="contentinfo">
    <div id="MySignature" style="display: block">
	<div style="font-size: 13px; border: 1px dashed rgb(45, 161, 45); padding: 10px 15px; background-color: rgb(248, 248, 248)">
		<label style="font-weight: bold">
			&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家在移动端也能看到我分享的博文，现已注册个人微信公众号，扫描左下方二维码即可，欢迎大家关注，提前解锁更多测试干货！有时间会及时分享相关技术博文。
		</label>
		<br>
		<label style="font-weight: bold">
			&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家互动讨论相关技术问题，刚刚建立了咱们的专门的微信群交流互动群，群内会分享交流测试领域前沿知识。  请您扫描中间的微信二维码进群 
		</label>
		<br>
		<label style="font-weight: bold">
			&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家互动讨论相关技术问题，现已组建专门的微信群，由于微信群满100，请您扫描右下方宏哥个人微信二维码拉你进群
			<label style="font-weight: bold; color: red; font-size: 15px">
				（请务必备注：已关注公众号进群）平时上班忙（和你一样），所以加好友不及时，请稍安勿躁~
			</label>
			，欢迎大家加入这个大家庭，我们一起畅游知识的海洋。
		</label>
		<br>
		&nbsp;&nbsp;&nbsp;&nbsp;感谢您花时间阅读此篇文章,如果您觉得这篇文章你学到了东西也是为了犒劳下博主的码字不易不妨打赏一下吧，让博主能喝上一杯咖啡，在此谢过了！
		<br>
		&nbsp;&nbsp;&nbsp;&nbsp;如果您觉得阅读本文对您有帮助，请点一下左下角
		<a id="recommend" style="font-weight: bold; color: red; font-size: 15px; text-decoration: underline">
			“推荐”
		</a>
		按钮，您的
		<label style="font-weight: bold; color: red; font-size: 15px">
			“推荐”
		</label>
		将是我最大的写作动力！另外您也可以选择
		<a id="follow_me_btn" style="cursor: pointer; color: blue; text-decoration: underline">
			【
			<strong>
				关注我
			</strong>
			】
		</a>
		，可以很方便找到我！
		<br>
		&nbsp;&nbsp;&nbsp;&nbsp;本文版权归作者和博客园共有，来源网址：
		<a href="https://www.cnblogs.com/du-hong" style="color: red; text-decoration: underline" target="_blank">
			https://www.cnblogs.com/du-hong
		</a>
		欢迎各位转载，但是未经作者本人同意，转载文章之后必须在文章页面明显位置给出作者和原文连接，否则保留追究法律责任的权利！
	</div>
	<div style="text-align: center; margin-top: 10px">
		<p style=" font-weight: bolder; color: red; ">
			公众号(关注宏哥)&nbsp; &nbsp;&nbsp;&nbsp;
			&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
			微信群(扫码进群) &nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;客服微信
		</p>
		<img style="width: 200px;padding-right: 50px;" alt="个人微信公众号" src="https://img2018.cnblogs.com/common/1741949/201911/1741949-20191119095948011-608816619.png">
		<img style="width: 200px;padding-right: 65px;" alt="微信群" src="https://img2024.cnblogs.com/blog/1232840/202506/1232840-20250610113707419-637869921.png">
		<img style="width: 200px" alt="个人微信" src="https://img2018.cnblogs.com/common/1741949/201911/1741949-20191106101257091-849954564.png">
	</div>
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-06-10 10:36">2025-06-10 10:36</span>&nbsp;
<a href="https://www.cnblogs.com/du-hong">北京-宏哥</a>&nbsp;
阅读(<span id="post_view_count">36</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18403898);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18403898', targetLink: 'https://www.cnblogs.com/du-hong/p/18403898', title: '《刚刚问世》系列初窥篇-Java+Playwright自动化测试-16- iframe操作-监听事件和执行js脚本 （详细教程）' })">举报</a>
</div>
        