
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/du-hong/p/18348776" title="发布于 2025-01-06 11:40">
    <span role="heading" aria-level="2">《刚刚问世》系列初窥篇-Java+Playwright自动化测试-10- 标签页（tab）操作 - 上篇 （详细教程）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h3>1.简介</h3>
<p>本来按照计划这一系列的文章应该介绍Context和Page两个内容的，但是宏哥看了官方文档和查找资料发现其实和宏哥在Python+Playwright系列文章中的大同小异，差不了多少，再在这一个系列介绍就有点画蛇添足，索性就不介绍和讲解了，有兴趣的自己可以看宏哥之前写的，或者自己查找资料和官方文档进行了解和学习。今天讲解和分享的标签操作其实也是基于浏览器上下文（<strong>BrowserContext</strong>）进行操作的，而且宏哥在之前的BrowserContext也有提到过，但是有的童鞋或者小伙伴还是不清楚怎么操作，或者思路有点模糊，因此今天单独来对其进行讲解和分享一下，希望您有所帮助。</p>
<h3>2.什么是tab标签页</h3>
<p>Tabs 标签页又称选项卡（以下简称标签页），它是一种高效的屏幕空间利用手段，映射非常接近卡片的目录索引，用户可以基于索引标签，快速定位到目标中内容中去，这也是大多数用户来自现实世界的经验。</p>
<p>在 Web 页面中，它的使用场景也较为简单，当页面的内容信息量较多，用标签页可以对其分类，一方面可以提升查找信息的效率，另一方面可以精简用户单次获取到的信息量，用户更能够专注于当前已显示的内容。</p>
<p class="marklang-paragraph">‌标签页（Tab）是一种用户界面元素，用于组织和管理网页或应用程序中的内容，允许用户在不同的视图或数据集之间轻松切换。‌</p>
<p class="marklang-paragraph">标签页的设计灵感来源于现实生活中文件夹上的标签，通过隐喻的方式，设计师希望用户能够通过直观的方式理解和使用这一交互形式。</p>
<h3 id="autoid-0-1-0">3.单标签页</h3>
<p>单个标签操作这个是最简单的，之前讲的绝大多数都是单个标签的操作。通过context.new_page()就可以创建一个页面。</p>
<p>每个BrowserContext可以有多个页面。页面是指浏览器上下文中的单个选项卡或弹出窗口。它应该用于导航到URL并与页面内容交互。</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Create a page.</span>
Page page =<span style="color: rgba(0, 0, 0, 1)"> context.newPage();

</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Navigate explicitly, similar to entering a URL in the browser.</span>
page.navigate("http://example.com"<span style="color: rgba(0, 0, 0, 1)">);
</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Fill an input.</span>
page.locator("#search").fill("query"<span style="color: rgba(0, 0, 0, 1)">);

</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Navigate implicitly by clicking a link.</span>
page.locator("#submit"<span style="color: rgba(0, 0, 0, 1)">).click();
</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Expect a new url.</span>
System.out.println(page.url());</pre>
</div>
<p>实战举例：以度娘为例，首先启动浏览器，然后再设置浏览器的大小。查询“北京宏哥”后，刷新页面后执行回退操作到百度首页，然后有执行前进操作进入到搜索“北京宏哥”页面，最后退出浏览器。</p>
<h4 id="autoid-0-2-0">3.1代码设计</h4>
<p>按照上边的步骤进行代码设计，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202408/1232840-20240820152339752-970244315.png" alt="" loading="lazy"></p>
<h4>3.2参考代码</h4>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">package</span><span style="color: rgba(0, 0, 0, 1)"> com.bjhg.playwright;

</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Browser;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.BrowserContext;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.BrowserType;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Locator;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Page;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Playwright;

</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">
 * </span><span style="color: rgba(128, 128, 128, 1)">@author</span><span style="color: rgba(0, 128, 0, 1)"> 北京-宏哥
 * 
 * @公众号:北京宏哥（微信搜索，关注宏哥，提前解锁更多测试干货）
 * 
 * 《刚刚问世》系列初窥篇-Java+Playwright自动化测试-10- 标签页（tab）操作 （详细教程）
 *
 * 2024年8月26日
 </span><span style="color: rgba(0, 128, 0, 1)">*/</span>
<span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Test_Search {

    </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> main(String[] args) {
        </span><span style="color: rgba(0, 0, 255, 1)">try</span> (Playwright playwright =<span style="color: rgba(0, 0, 0, 1)"> Playwright.create()) {
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">1.使用chromium浏览器，# 浏览器配置，设置以GUI模式启动Chrome浏览器（要查看浏览器UI，在启动浏览器时传递&nbsp;headless=false&nbsp;标志。您还可以使用&nbsp;slowMo&nbsp;来减慢执行速度。</span>
          Browser browser = playwright.chromium().launch(<span style="color: rgba(0, 0, 255, 1)">new</span> BrowserType.LaunchOptions().setHeadless(<span style="color: rgba(0, 0, 255, 1)">false</span>).setSlowMo(500<span style="color: rgba(0, 0, 0, 1)">));
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">2.设置浏览器窗口大小</span>
          BrowserContext context = browser.newContext(<span style="color: rgba(0, 0, 255, 1)">new</span> Browser.NewContextOptions().setViewportSize(1280, 1024<span style="color: rgba(0, 0, 0, 1)">));
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">创建page</span>
          Page page =<span style="color: rgba(0, 0, 0, 1)"> context.newPage();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">3.浏览器打开百度</span>
          page.navigate("https://www.baidu.com/"<span style="color: rgba(0, 0, 0, 1)">);
          
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">判断title是不是 百度一下，你就知道</span>
             
          <span style="color: rgba(0, 0, 255, 1)">try</span><span style="color: rgba(0, 0, 0, 1)">{
               String baidu_title </span>= "百度一下，你就知道"<span style="color: rgba(0, 0, 0, 1)">;
               </span><span style="color: rgba(0, 0, 255, 1)">assert</span> baidu_title ==<span style="color: rgba(0, 0, 0, 1)"> page.title();
               System.out.println(</span>"Test Pass"<span style="color: rgba(0, 0, 0, 1)">);
                 
          }</span><span style="color: rgba(0, 0, 255, 1)">catch</span><span style="color: rgba(0, 0, 0, 1)">(Exception e){
               e.printStackTrace();
          }
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">使用xpath属性定位百度首页输入框 ，并输入搜索内容：北京-宏哥</span>
          page.locator("//*[@id='kw']").type("北京-宏哥"<span style="color: rgba(0, 0, 0, 1)">); 
          
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">使用路径与属性结合定位“百度一下”按钮，并点击 。</span>
          page.locator("//span/input[@id='su']"<span style="color: rgba(0, 0, 0, 1)">).click();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 5.刷新页面</span>
<span style="color: rgba(0, 0, 0, 1)">          page.reload();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 6.浏览器后退</span>
<span style="color: rgba(0, 0, 0, 1)">          page.goBack();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 7.浏览器前进</span>
<span style="color: rgba(0, 0, 0, 1)">          page.goForward();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">关闭page</span>
<span style="color: rgba(0, 0, 0, 1)">          page.close();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">关闭browser</span>
<span style="color: rgba(0, 0, 0, 1)">          browser.close();
        }
      }

}</span></pre>
</div>
<h4>3.3运行代码</h4>
<p>1.运行代码，右键Run'Test'，就可以看到控制台输出，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202408/1232840-20240820152600465-82051452.png" alt="" loading="lazy"></p>
<p>2.运行代码后电脑端的浏览器的动作。如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202408/1232840-20240820154228980-961456002.gif" alt="" loading="lazy"></p>
<h3 id="autoid-0-2-3">4.多标签页</h3>
<p>每个浏览器上下文可以承载多个页面（选项卡）。</p>
<ul>
<li>每个页面都像一个聚焦的活动页面。不需要将页面置于最前面。</li>
<li>上下文中的页面遵循上下文级别的模拟，例如视口大小、自定义网络路由或浏览器区域设置。</li>
</ul>
<div class="cnblogs_code">
<p>// Create two pages<br>Page pageOne = context.newPage();<br>Page pageTwo = context.newPage();</p>
<p>// Get pages of a browser context<br>List&lt;Page&gt; allPages = context.pages();</p>



</div>
<p>实战举例：在page_one 标签页打开百度，输入“北京-宏哥”， 在page_two 标签页打开百度，输入“宏哥”。</p>
<h4 id="autoid-0-2-0">4.1代码设计</h4>
<p>按照上边的步骤进行代码设计，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202408/1232840-20240820154937502-1119471630.png" alt="" loading="lazy"></p>
<h4>4.2参考代码</h4>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">package</span><span style="color: rgba(0, 0, 0, 1)"> com.bjhg.playwright;

</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Browser;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.BrowserContext;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.BrowserType;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Locator;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Page;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Playwright;

</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">
 * </span><span style="color: rgba(128, 128, 128, 1)">@author</span><span style="color: rgba(0, 128, 0, 1)"> 北京-宏哥
 * 
 * @公众号:北京宏哥（微信搜索，关注宏哥，提前解锁更多测试干货）
 * 
 * 《刚刚问世》系列初窥篇-Java+Playwright自动化测试-10- 标签页（tab）操作 （详细教程）
 *
 * 2024年8月26日
 </span><span style="color: rgba(0, 128, 0, 1)">*/</span>
<span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Test_Search {

    </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> main(String[] args) {
        </span><span style="color: rgba(0, 0, 255, 1)">try</span> (Playwright playwright =<span style="color: rgba(0, 0, 0, 1)"> Playwright.create()) {
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">1.使用chromium浏览器，# 浏览器配置，设置以GUI模式启动Chrome浏览器（要查看浏览器UI，在启动浏览器时传递&nbsp;headless=false&nbsp;标志。您还可以使用&nbsp;slowMo&nbsp;来减慢执行速度。</span>
          Browser browser = playwright.chromium().launch(<span style="color: rgba(0, 0, 255, 1)">new</span> BrowserType.LaunchOptions().setHeadless(<span style="color: rgba(0, 0, 255, 1)">false</span>).setSlowMo(500<span style="color: rgba(0, 0, 0, 1)">));
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">2.设置浏览器窗口大小</span>
          BrowserContext context = browser.newContext(<span style="color: rgba(0, 0, 255, 1)">new</span> Browser.NewContextOptions().setViewportSize(1280, 1024<span style="color: rgba(0, 0, 0, 1)">));
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">创建page</span>
          Page page1 =<span style="color: rgba(0, 0, 0, 1)"> context.newPage();
          
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">3.浏览器打开百度</span>
          page1.navigate("https://www.baidu.com/"<span style="color: rgba(0, 0, 0, 1)">);
        
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">使用xpath属性定位百度首页输入框 ，并输入搜索内容：北京-宏哥</span>
          page1.locator("//*[@id='kw']").type("北京-宏哥"<span style="color: rgba(0, 0, 0, 1)">); 
          
          Page page2 </span>=<span style="color: rgba(0, 0, 0, 1)"> context.newPage();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">3.浏览器打开百度</span>
          page2.navigate("https://www.baidu.com/"<span style="color: rgba(0, 0, 0, 1)">);
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">使用xpath属性定位百度首页输入框 ，并输入搜索内容：北京-宏哥</span>
          page2.locator("//*[@id='kw']").type("宏哥"<span style="color: rgba(0, 0, 0, 1)">); 
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">关闭page</span>
<span style="color: rgba(0, 0, 0, 1)">          page1.close();
          page2.close();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">关闭browser</span>
<span style="color: rgba(0, 0, 0, 1)">          browser.close();
        }
      }

}</span></pre>
</div>
<h4>4.3运行代码</h4>
<p>1.运行代码，右键Run'Test'，就可以看到控制台输出，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202408/1232840-20240820160837897-2147069013.png" alt="" loading="lazy"></p>
<p>2.运行代码后电脑端的浏览器的动作。如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202408/1232840-20240820160751665-46777475.gif" alt="" loading="lazy"></p>
<h3 id="autoid-0-3-3">5.小结</h3>
<p>&nbsp;好了，关于标签页（tab）的相关操作非常简单，时间不早了今天就分享到这里，感谢你耐心地阅读！</p>
</div>
<div id="MySignature" role="contentinfo">
    <div id="MySignature" style="display: block">
<div style="font-size: 13px; border: 1px dashed rgb(45, 161, 45); padding: 10px 15px; background-color: rgb(248, 248, 248)">
<label style="font-weight: bold">
&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家在移动端也能看到我分享的博文，现已注册个人微信公众号，扫描左下方二维码即可，欢迎大家关注，有时间会及时分享相关技术博文。</label><br>
<label style="font-weight: bold">
&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家互动讨论相关技术问题，现已组建专门的微信群，由于微信群满100，请您扫描右下方宏哥个人微信二维码拉你进群<label style="font-weight: bold; color: red; font-size: 15px">（请务必备注：已关注公众号进群）平时上班忙（和你一样），所以加好友不及时，请稍安勿躁~</label>，欢迎大家加入这个大家庭，我们一起畅游知识的海洋。</label><br>
&nbsp;&nbsp;&nbsp;&nbsp;感谢您花时间阅读此篇文章,如果您觉得这篇文章你学到了东西也是为了犒劳下博主的码字不易不妨打赏一下吧，让博主能喝上一杯咖啡，在此谢过了！<br>
&nbsp;&nbsp;&nbsp;&nbsp;如果您觉得阅读本文对您有帮助，请点一下左下角<a id="recommend" style="font-weight: bold; color: red; font-size: 15px; text-decoration: underline">“推荐”</a>按钮，您的<label style="font-weight: bold; color: red; font-size: 15px">“推荐”</label>将是我最大的写作动力！另外您也可以选择<a id="follow_me_btn" style="cursor: pointer; color: blue; text-decoration: underline">【<strong>关注我</strong>】</a>，可以很方便找到我！<br>
&nbsp;&nbsp;&nbsp;&nbsp;本文版权归作者和博客园共有，来源网址：<a href="https://www.cnblogs.com/du-hong" style="color: red; text-decoration: underline" target="_blank">https://www.cnblogs.com/du-hong</a> 欢迎各位转载，但是未经作者本人同意，转载文章之后必须在文章页面明显位置给出作者和原文连接，否则保留追究法律责任的权利！
</div>
<div style="text-align: center; margin-top: 10px">
   <p style="
    font-weight: bolder;
    color: red;
">公众号(关注宏哥)&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;客服微信</p><img style="width: 200px; padding-right: 20%" alt="个人微信公众号" src="https://img2018.cnblogs.com/common/1741949/201911/1741949-20191119095948011-608816619.png">
   <img style="width: 200px" alt="个人微信" src="https://img2018.cnblogs.com/common/1741949/201911/1741949-20191106101257091-849954564.png">
</div>
</div>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.19483962236805555" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-06 11:40">2025-01-06 11:40</span>&nbsp;
<a href="https://www.cnblogs.com/du-hong">北京-宏哥</a>&nbsp;
阅读(<span id="post_view_count">58</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18348776" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18348776);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18348776', targetLink: 'https://www.cnblogs.com/du-hong/p/18348776', title: '《刚刚问世》系列初窥篇-Java+Playwright自动化测试-10- 标签页（tab）操作 - 上篇 （详细教程）' })">举报</a>
</div>
        