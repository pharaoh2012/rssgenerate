
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/qq21497936/p/19056789" title="发布于 2025-08-25 12:44">
    <span role="heading" aria-level="2">VTK开发笔记（二）：Qt5.9.3+VS2017x64+VTK8.2创建兼容dll和嵌入源码窗口两种方式的Qt嵌入VTK8.2模板Demo</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<div class="cl-preview-section">
<h1>前言</h1>
</div>
<div class="cl-preview-section">
<p>  前面编译好了Qt5.9.3+VS2017x64+VTK8.2的开发环境，但是Qt结合VTK没有。<br>  本篇Qt融合VTK，搭建基础Qt界面搭载VTK显示引擎的模板Demo。</p>

</div>
<div class="cl-preview-section">&nbsp;</div>
<div class="cl-preview-section">
<h1><a id="Demo_6"></a>Demo</h1>

</div>
<div class="cl-preview-section">
<p>  QVTKWidget<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/601b08c4bb204b7f957a1a93976d163c.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  QVTKWidget+MyVTKWidget<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/b26e56ad5485448eb544bceda4f0128d.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">&nbsp;</div>
<div class="cl-preview-section">
<h1><a id="_16"></a>注意</h1>

</div>
<div class="cl-preview-section">
<p>  这是上一篇install的结果：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/2da05f14d9bb409db51bfecb83e73091.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">&nbsp;</div>
<div class="cl-preview-section">
<h1><a id="QVTKWidgetdll_22"></a>建立模板工程（QVTKWidget.dll方式）</h1>

</div>
<div class="cl-preview-section">
<h2><a id="vtkDemo_23"></a>步骤一：建立vtkDemo工程</h2>

</div>
<div class="cl-preview-section">
<p>  略</p>

</div>
<div class="cl-preview-section">
<h2><a id="_25"></a>步骤二：模块化</h2>

</div>
<div class="cl-preview-section">
<p>  文件夹modules，老规矩：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/76891aa3989b4839b42965358008e170.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  建立模块文件夹：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/7565cad63ded4fee881381998e982748.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  建立vtkWIdget.pri<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/966433dc0f3340f59dc96605968a324a.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  工程包含pri：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/22d81bd47dac4af999ee552db85f4b64.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  建立VTKWidget界面类，方便提升：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/a82cbb4c7f3b416787795fdb28b779b8.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<h2><a id="vtk_41"></a>步骤三：引入vtk的库和开发环境</h2>

</div>
<div class="cl-preview-section">
<p>  先把install复制过来，标记好qt和msvc版本，为了以后多版本vtk预留（能就别少，作为代码模块集合）：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/e82f04d873c74e03ba75aef0c13861b5.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  添加进pri：<br>  直接从文件夹复制进入pri，会是路径，再修改：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/118ce5c08f6b415eb8bd142f832a9bce.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<pre><code class="prism language-cpp">INCLUDEPATH <span class="token operator">+= $$PWD
DEPENDPATH <span class="token operator">+= $$PWD


HEADERS <span class="token operator">+= \
    $$PWD<span class="token operator">/VTKWidget<span class="token punctuation">.h

SOURCES <span class="token operator">+= \
    $$PWD<span class="token operator">/VTKWidget<span class="token punctuation">.cpp

FORMS <span class="token operator">+= \
    $$PWD<span class="token operator">/VTKWidget<span class="token punctuation">.ui

<span class="token macro property"><span class="token directive-hash"># <span class="token directive keyword">vtk<span class="token expression">库包含
INCLUDEPATH <span class="token operator">+= $$PWD<span class="token operator">/vtk<span class="token operator">-<span class="token number">8.2<span class="token punctuation">.<span class="token number">0<span class="token operator">-msvc2015x64<span class="token operator">-install<span class="token operator">/include \
               $$PWD<span class="token operator">/vtk<span class="token operator">-<span class="token number">8.2<span class="token punctuation">.<span class="token number">0<span class="token operator">-msvc2015x64<span class="token operator">-install<span class="token operator">/include<span class="token operator">/vtk<span class="token operator">-<span class="token number">8.2
LIBS <span class="token operator">+= <span class="token operator">-L$$PWD<span class="token operator">/vtk<span class="token operator">-<span class="token number">8.2<span class="token punctuation">.<span class="token number">0<span class="token operator">-msvc2015x64<span class="token operator">-install<span class="token operator">/lib
LIBS <span class="token operator">+= <span class="token operator">-lvtkzlib<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkChartsCore<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkCommonColor<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkCommonComputationalGeometry<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkCommonCore<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkCommonDataModel<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkCommonExecutionModel<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkCommonMath<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkCommonMisc<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkCommonSystem<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkCommonTransforms<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkDICOMParser<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkDomainsChemistry<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkDomainsChemistryOpenGL2<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkdoubleconversion<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkexodusII<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkexpat<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkFiltersAMR<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkFiltersCore<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkFiltersExtraction<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkFiltersFlowPaths<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkFiltersGeneral<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkFiltersGeneric<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkFiltersGeometry<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkFiltersHybrid<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkFiltersHyperTree<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkFiltersImaging<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkFiltersModeling<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkFiltersParallel<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkFiltersParallelImaging<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkFiltersPoints<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkFiltersProgrammable<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkFiltersSelection<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkFiltersSMP<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkFiltersSources<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkFiltersStatistics<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkFiltersTexture<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkFiltersTopology<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkFiltersVerdict<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkfreetype<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkGeovisCore<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkgl2ps<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkglew<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkGUISupportQt<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkGUISupportQtSQL<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkhdf5_hl<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkhdf5<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkImagingColor<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkImagingCore<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkImagingFourier<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkImagingGeneral<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkImagingHybrid<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkImagingMath<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkImagingMorphological<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkImagingSources<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkImagingStatistics<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkImagingStencil<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkInfovisCore<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkInfovisLayout<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkInteractionImage<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkInteractionStyle<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkInteractionWidgets<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOAMR<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOAsynchronous<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOCityGML<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOCore<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOEnSight<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOExodus<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOExport<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOExportOpenGL2<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOExportPDF<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOGeometry<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOImage<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOImport<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOInfovis<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOLegacy<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOLSDyna<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOMINC<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOMovie<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIONetCDF<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOParallel<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOParallelXML<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOPLY<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOSegY<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOSQL<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOTecplotTable<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOVeraOut<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOVideo<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOXML<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkIOXMLParser<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkjpeg<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkjsoncpp<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtklibharu<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtklibxml2<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkLocalExample<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtklz4<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtklzma<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkmetaio<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkNetCDF<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkogg<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkParallelCore<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkpng<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkproj<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkpugixml<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkRenderingAnnotation<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkRenderingContext2D<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkRenderingContextOpenGL2<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkRenderingCore<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkRenderingFreeType<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkRenderingGL2PSOpenGL2<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkRenderingImage<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkRenderingLabel<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkRenderingLOD<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkRenderingOpenGL2<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkRenderingQt<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkRenderingVolume<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkRenderingVolumeOpenGL2<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtksqlite<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtksys<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtktheora<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtktiff<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkverdict<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkViewsContext2D<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkViewsCore<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkViewsGeovis<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkViewsInfovis<span class="token operator">-<span class="token number">8.2 \
        <span class="token operator">-lvtkViewsQt<span class="token operator">-<span class="token number">8.2

<span class="token macro property"><span class="token directive-hash"># <span class="token directive keyword">win<span class="token expression">平台的复制dll
win32<span class="token punctuation">{
    <span class="token macro property"><span class="token directive-hash"># <span class="token directive keyword">copy <span class="token expression">vtk bin
    src_file <span class="token operator">= $$PWD<span class="token operator">/vtk<span class="token operator">-<span class="token number">8.2<span class="token punctuation">.<span class="token number">0<span class="token operator">-msvc2015x64<span class="token operator">-install<span class="token operator">/bin<span class="token comment">/*
    dst_file = $$OUT_PWD
    target_file = $$DESTDIR
    src_file ~= s,/,\\,g
    dst_file ~= s,/,\\,g
    target_file ~= s,/,\\,g
    system(xcopy $$src_file $$dst_file /y /s/q/e)
    system(xcopy $$src_file $$target_file /y /s/q/e)
}
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
<div class="cl-preview-section">
<p>  至此，运行环境引入好了。</p>
</div>
<div class="cl-preview-section">
<h2><a id="vktQt_209"></a>步骤四：vkt引擎融入Qt界面</h2>
</div>
<div class="cl-preview-section">
<p>  这里我们是直接通过QVTKWidget.h头文件和其lib、dll的方式引入：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/f4674c80709143cba214a9701d9fb681.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">&nbsp;</div>
<div class="cl-preview-section">
<h1><a id="MyVTKWidgetcpp_216"></a>建立模板工程（MyVTKWidget.cpp方式）</h1>

</div>
<div class="cl-preview-section">
<p>  为了最大化兼容代码，这里QVTKWidget.dll就不动了，QVTKWidget源码里面实际是跟osgWidget一样，映射了窗口对于渲染器的操作，这里我们可以直接拿过来改个名字即可，所以先找到QVTKWidget.h和QVTKWIdget.cpp的源码，改成MyVTKWidget.h，MyVTKWidget.cpp：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/4400d8bab7fd48c8b4d8ca657b3218ce.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  复制改名：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/5409de5d49ce48a6a56fe9497b457c48.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  加入源码：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/bbad07e96abd4a0081b208e7fdd43737.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  修改里面的类名为MyVTKWidget，注意修改头文件宏：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/dbde48d0aceb4112a49543ccdcfe0249.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  编译通过，修改加入之后，出现一些错误：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/1a2766f1905443cfb9c8301e1fd245ff.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  这是因为代码默认定义了宏是导出dll的，所以需要修改，先去掉类的导出dll宏，然后编译，出错如下：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/a41933160a2f48f096092929258eb74a.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  检查：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/601e163161ae4fbba3232000f454c4ee.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  点开查看：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/425854761cb44ddeb01e349bee8e54db.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  是因为这个类在这个库里面压根没有导出来cpp。<br>  现在直接反过来去添加导出，修改源码（测试加头文件定义宏也报错，直接加入导出的代码吧）：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/f284a8997b2e4fce9ffc097f96b83eca.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  然后重新编译：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/f6f41c55161d47a493da7355e946edd8.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  安装并将库引过去替换试一试：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/6146ae4b087543669bdc963e4cceb196.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  再次编译，解决了库定义的问题，还剩一个问题：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/e4b539c395824fa8be25087a6c226d17.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  还是往回退到VS2017去搜索，搜索不到，这就是windows的函数，连接到对应的库就好了：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/8d3a94506bcd4e09a665e6298e5ed69e.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  编译成功，运行失败：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/ec643e9ba6694f7cb68087a08c0c6cd2.png" class="lazyload"><br>  怀疑是没包含dll，下面直接exe进行探测：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/6873c9b5b1f742bba9bdedf7cd89f1e2.png" class="lazyload"><br>  先补完qt的库：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/2976ebbb3a754deba7908f81c511aee2.png" class="lazyload"><br>  然后点击运行：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/3c2eb6c6c39d41a8a7937482fe9fbeab.png" class="lazyload"><br>  是因为更新了这个lib，但是没有更新对应的dll过来：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/a39934e2184649a1a510bc9b66ac27c6.png" class="lazyload"><br>  Ok了，运行起来了，使用修改 源码大法可以 搞定，这样以后做其他的对映射操作就很方便了：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/9ac08ff1514a4c078b8a4bcbb26ee433.png" class="lazyload"><br>  运行起来一个黑色一个白色：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/c633c234c87f4146b9c82628919d2013.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  去掉父类，测试左侧这种就是白色的。<br>  为了确保可靠性，咱们还需要确认下，黑色和白色是否都是正常的，黑色肯定是正常的，写个常规代码：<br>  跑起来后：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/6ea8badfba0140f8865d708869ad170b.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  怀疑是哪个地方没有跑，导致初始化没有黑色，但是有场景的时候不影响。</p>

</div>
<div class="cl-preview-section">&nbsp;</div>
<div class="cl-preview-section">
<h1><a id="MyVTKWidgetcpp_281"></a>建立模板工程（MyVTKWidget.cpp方式，失败，仅供参考）</h1>

</div>
<div class="cl-preview-section">
<p>  为了最大化兼容代码，这里QVTKWidget.dll就不动了，QVTKWidget源码里面实际是跟osgWidget一样，映射了窗口对于渲染器的操作，这里我们可以直接拿过来改个名字即可，所以先找到QVTKWidget.h和QVTKWIdget.cpp的源码，改成MyVTKWidget.h，MyVTKWidget.cpp：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/2add1cf5c63740e9b60645e5d2ecd09d.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  复制改名：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/fd1575d2f9324fcc87b13aac30d00cbb.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  加入源码：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/d0f7f0b2baea4b36a89b2f9dfb59dc11.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  修改里面的类名为MyVTKWidget，注意修改头文件宏：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/b38aabec513e461980b1a650767392cc.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  编译通过，修改加入之后，出现一些错误：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/bdf0ccdeedd3423baaf39c6c54be8c4d.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  这是因为代码默认定义了宏是导出dll的，所以需要修改，先去掉类的导出dll宏，然后编译，出错如下：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/9d6624df83214cf180d818e85a1205c5.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  检查是需要包含win：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/0bd5a10129fa493aaef7877ee2db1db7.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  继续编译：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/2390957c47124cc39a7ac9bf7ddf518e.png" class="lazyload"><br>  #error: “No Target Architecture”<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/41927eac7df64c05ad6364604a8fc265.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  直接返回vs2017编译源码，查找编译的时候定义了哪些宏：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/e9f15e368a87428894a23883ab661438.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/701d64db30524a3d87546c24908f3571.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<pre><code class="prism language-cpp">WIN32
_WINDOWS
NDEBUG
QT_NO_DEBUG
_CRT_SECURE_NO_DEPRECATE
_CRT_NONSTDC_NO_DEPRECATE
_CRT_SECURE_NO_WARNINGS
_SCL_SECURE_NO_DEPRECATE
_SCL_SECURE_NO_WARNINGS
VTK_IN_VTK
QT_WIDGETS_LIB
QT_GUI_LIB
QT_CORE_LIB
QT_UIPLUGIN_LIB
CMAKE_INTDIR<span class="token operator">=<span class="token string">"Release"
QVTKWidgetPlugin_EXPORTS
</span></span></code></pre>
</div>
<div class="cl-preview-section">
<p>  此方式行不通！！！<br>  换个方式，退回去</p>

</div>
<div class="cl-preview-section">&nbsp;</div>
<div class="cl-preview-section">
<h1><a id="_336"></a>注意</h1>

</div>
<div class="cl-preview-section">
<p>  对比下osg和vtk的库大小：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/cc78544f40ab4d899e2787a6a56e2f9d.png" class="lazyload"><br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/9a781d3ab82442bf8055e2168a1176d5.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">&nbsp;</div>
<div class="cl-preview-section">
<h1><a id="_343"></a>源码</h1>

</div>
<div class="cl-preview-section">
<h2><a id="VTKWidgeth_344"></a>VTKWidget.h</h2>

</div>
<div class="cl-preview-section">
<pre><code class="prism language-cpp"><span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">ifndef <span class="token expression">VTKWIDGET_H
<span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">define <span class="token macro-name">VTKWIDGET_H

<span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">include <span class="token string">&lt;QWidget&gt;
<span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">include <span class="token string">"QVTKWidget.h"
<span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">include <span class="token string">"MyVTKWidget.h"

<span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">include <span class="token string">"vtkSphereSource.h"
<span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">include <span class="token string">"vtkPolyDataMapper.h"
<span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">include <span class="token string">"vtkActor.h"
<span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">include <span class="token string">"vtkProperty.h"
<span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">include <span class="token string">"vtkRenderer.h"
<span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">include <span class="token string">"vtkRenderWindow.h"
<span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">include <span class="token string">"vtkInteractorStyleTrackballCamera.h"

<span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">include <span class="token string">"vtkOutputWindow.h"
<span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">include <span class="token string">"vtkAutoInit.h"
<span class="token comment">//VTK_MODULE_INIT(vtkRenderingOpenGL);
<span class="token function">VTK_MODULE_INIT<span class="token punctuation">(vtkRenderingOpenGL2<span class="token punctuation">)<span class="token punctuation">;
<span class="token function">VTK_MODULE_INIT<span class="token punctuation">(vtkInteractionStyle<span class="token punctuation">)<span class="token punctuation">;

<span class="token keyword">namespace Ui <span class="token punctuation">{
<span class="token keyword">class <span class="token class-name">VTKWidget<span class="token punctuation">;
<span class="token punctuation">}

<span class="token keyword">class <span class="token class-name">VTKWidget <span class="token operator">: <span class="token base-clause"><span class="token keyword">public <span class="token class-name">QWidget
<span class="token punctuation">{
    Q_OBJECT

<span class="token keyword">public<span class="token operator">:
    <span class="token keyword">explicit <span class="token function">VTKWidget<span class="token punctuation">(QWidget <span class="token operator">*parent <span class="token operator">= <span class="token number">0<span class="token punctuation">)<span class="token punctuation">;
    <span class="token operator">~<span class="token function">VTKWidget<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">;

<span class="token keyword">protected<span class="token operator">:
    <span class="token keyword">void <span class="token function">initControl<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">;

<span class="token keyword">protected<span class="token operator">:
    <span class="token keyword">void <span class="token function">createSphere<span class="token punctuation">(QVTKWidget <span class="token operator">*pVTKWidget<span class="token punctuation">)<span class="token punctuation">;      <span class="token comment">// 临时代码，忽略代码规则
    <span class="token keyword">void <span class="token function">createSphere<span class="token punctuation">(MyVTKWidget <span class="token operator">*pVTKWidget<span class="token punctuation">)<span class="token punctuation">;     <span class="token comment">// 临时代码，忽略代码规则

<span class="token keyword">protected<span class="token operator">:
    <span class="token keyword">void <span class="token function">resizeEvent<span class="token punctuation">(QResizeEvent <span class="token operator">*event<span class="token punctuation">)<span class="token punctuation">;

<span class="token keyword">private<span class="token operator">:
    Ui<span class="token double-colon punctuation">::VTKWidget <span class="token operator">*ui<span class="token punctuation">;

<span class="token keyword">private<span class="token operator">:
    QVTKWidget <span class="token operator">*_pQVTKWidget<span class="token punctuation">;
    MyVTKWidget <span class="token operator">*_pMyVTKWidget<span class="token punctuation">;
<span class="token punctuation">}<span class="token punctuation">;

<span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">endif <span class="token comment">// VTKWIDGET_H
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
<div class="cl-preview-section">
<h2><a id="VTKWidgetcpp_399"></a>VTKWidget.cpp</h2>
</div>
<div class="cl-preview-section">
<pre><code class="prism language-cpp"><span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">include <span class="token string">"VTKWidget.h"
<span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">include <span class="token string">"ui_VTKWidget.h"

<span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">include <span class="token string">&lt;QDebug&gt;
<span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">include <span class="token string">&lt;QDateTime&gt;
<span class="token comment">//#define LOG qDebug()&lt;&lt;__FILE__&lt;&lt;__LINE__
<span class="token comment">//#define LOG qDebug()&lt;&lt;__FILE__&lt;&lt;__LINE__&lt;&lt;__FUNCTION__
<span class="token comment">//#define LOG qDebug()&lt;&lt;__FILE__&lt;&lt;__LINE__&lt;&lt;QThread()::currentThread()
<span class="token comment">//#define LOG qDebug()&lt;&lt;__FILE__&lt;&lt;__LINE__&lt;&lt;QDateTime::currentDateTime().toString("yyyy-MM-dd")
<span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">define <span class="token macro-name">LOG <span class="token expression"><span class="token function">qDebug<span class="token punctuation">(<span class="token punctuation">)<span class="token operator">&lt;&lt;<span class="token constant">__FILE__<span class="token operator">&lt;&lt;<span class="token constant">__LINE__<span class="token operator">&lt;&lt;<span class="token class-name">QDateTime<span class="token double-colon punctuation">::<span class="token function">currentDateTime<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">.<span class="token function">toString<span class="token punctuation">(<span class="token string">"yyyy-MM-dd hh:mm:ss:zzz"<span class="token expression"><span class="token punctuation">)


<span class="token comment">// QtCreator在msvc下设置编码也或有一些乱码，直接一刀切,避免繁琐的设置
<span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">define <span class="token macro-name">MSVC
<span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">ifdef <span class="token expression">MSVC
<span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">define <span class="token macro-name function">QSTRING<span class="token expression"><span class="token punctuation">(s<span class="token punctuation">)  <span class="token class-name">QString<span class="token double-colon punctuation">::<span class="token function">fromLocal8Bit<span class="token punctuation">(s<span class="token punctuation">)
<span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">else
<span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">define <span class="token macro-name function">QSTRING<span class="token expression"><span class="token punctuation">(s<span class="token punctuation">)  <span class="token function">QString<span class="token punctuation">(s<span class="token punctuation">)
<span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">endif



<span class="token class-name">VTKWidget<span class="token double-colon punctuation">::<span class="token function">VTKWidget<span class="token punctuation">(QWidget <span class="token operator">*parent<span class="token punctuation">)
    <span class="token operator">: <span class="token function">QWidget<span class="token punctuation">(parent<span class="token punctuation">)<span class="token punctuation">,
      <span class="token function">ui<span class="token punctuation">(<span class="token keyword">new Ui<span class="token double-colon punctuation">::VTKWidget<span class="token punctuation">)<span class="token punctuation">,
      <span class="token function">_pQVTKWidget<span class="token punctuation">(<span class="token number">0<span class="token punctuation">)<span class="token punctuation">,
      <span class="token function">_pMyVTKWidget<span class="token punctuation">(<span class="token number">0<span class="token punctuation">)
<span class="token punctuation">{
    ui<span class="token operator">-&gt;<span class="token function">setupUi<span class="token punctuation">(<span class="token keyword">this<span class="token punctuation">)<span class="token punctuation">;

    <span class="token function">initControl<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">;
<span class="token punctuation">}

<span class="token class-name">VTKWidget<span class="token double-colon punctuation">::<span class="token operator">~<span class="token function">VTKWidget<span class="token punctuation">(<span class="token punctuation">)
<span class="token punctuation">{
    <span class="token keyword">delete ui<span class="token punctuation">;
<span class="token punctuation">}

<span class="token keyword">void <span class="token class-name">VTKWidget<span class="token double-colon punctuation">::<span class="token function">initControl<span class="token punctuation">(<span class="token punctuation">)
<span class="token punctuation">{

    <span class="token comment">// 下面二选一，注意：这里必须在new之前设置好，new QVTKWidget窗口之后是无效的
    vtkOutputWindow<span class="token double-colon punctuation">::<span class="token function">GlobalWarningDisplayOff<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">; <span class="token comment">// 两段代码效果应该一致
    vtkOutputWindow<span class="token double-colon punctuation">::<span class="token function">SetGlobalWarningDisplay<span class="token punctuation">(<span class="token number">0<span class="token punctuation">)<span class="token punctuation">; <span class="token comment">// 设置消息登记显示，0-都不显示

    _pQVTKWidget <span class="token operator">= <span class="token keyword">new <span class="token function">QVTKWidget<span class="token punctuation">(<span class="token keyword">this<span class="token punctuation">)<span class="token punctuation">;
    <span class="token function">createSphere<span class="token punctuation">(_pQVTKWidget<span class="token punctuation">)<span class="token punctuation">;

    _pMyVTKWidget <span class="token operator">= <span class="token keyword">new <span class="token function">MyVTKWidget<span class="token punctuation">(<span class="token keyword">this<span class="token punctuation">)<span class="token punctuation">;
    <span class="token function">createSphere<span class="token punctuation">(_pMyVTKWidget<span class="token punctuation">)<span class="token punctuation">;
<span class="token punctuation">}

<span class="token keyword">void <span class="token class-name">VTKWidget<span class="token double-colon punctuation">::<span class="token function">createSphere<span class="token punctuation">(QVTKWidget <span class="token operator">*pVTKWidget<span class="token punctuation">)
<span class="token punctuation">{
    <span class="token comment">// 1. 创建球体数据
    vtkSphereSource<span class="token operator">* sphere <span class="token operator">= vtkSphereSource<span class="token double-colon punctuation">::<span class="token function">New<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">;
    sphere<span class="token operator">-&gt;<span class="token function">SetRadius<span class="token punctuation">(<span class="token number">1.0<span class="token punctuation">)<span class="token punctuation">;       <span class="token comment">// 球体半径
    sphere<span class="token operator">-&gt;<span class="token function">SetThetaResolution<span class="token punctuation">(<span class="token number">30<span class="token punctuation">)<span class="token punctuation">; <span class="token comment">// 纬线方向分辨率
    sphere<span class="token operator">-&gt;<span class="token function">SetPhiResolution<span class="token punctuation">(<span class="token number">30<span class="token punctuation">)<span class="token punctuation">;   <span class="token comment">// 经线方向分辨率

    <span class="token comment">// 2. 创建映射器（连接数据与渲染）
    vtkPolyDataMapper<span class="token operator">* mapper <span class="token operator">= vtkPolyDataMapper<span class="token double-colon punctuation">::<span class="token function">New<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">;
    mapper<span class="token operator">-&gt;<span class="token function">SetInputConnection<span class="token punctuation">(sphere<span class="token operator">-&gt;<span class="token function">GetOutputPort<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">)<span class="token punctuation">;

    <span class="token comment">// 3. 创建演员（设置显示属性）
    vtkActor<span class="token operator">* actor <span class="token operator">= vtkActor<span class="token double-colon punctuation">::<span class="token function">New<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">;
    actor<span class="token operator">-&gt;<span class="token function">SetMapper<span class="token punctuation">(mapper<span class="token punctuation">)<span class="token punctuation">;
    actor<span class="token operator">-&gt;<span class="token function">GetProperty<span class="token punctuation">(<span class="token punctuation">)<span class="token operator">-&gt;<span class="token function">SetColor<span class="token punctuation">(<span class="token number">0.3<span class="token punctuation">, <span class="token number">0.6<span class="token punctuation">, <span class="token number">0.9<span class="token punctuation">)<span class="token punctuation">; <span class="token comment">// 蓝色球体

    <span class="token comment">// 4. 创建渲染器并添加球体
    vtkRenderer<span class="token operator">* renderer <span class="token operator">= vtkRenderer<span class="token double-colon punctuation">::<span class="token function">New<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">;
    renderer<span class="token operator">-&gt;<span class="token function">AddActor<span class="token punctuation">(actor<span class="token punctuation">)<span class="token punctuation">;
    renderer<span class="token operator">-&gt;<span class="token function">SetBackground<span class="token punctuation">(<span class="token number">0.1<span class="token punctuation">, <span class="token number">0.1<span class="token punctuation">, <span class="token number">0.1<span class="token punctuation">)<span class="token punctuation">; <span class="token comment">// 深灰色背景

    <span class="token comment">// 5. 关联到QVTKWidget的渲染窗口
    pVTKWidget<span class="token operator">-&gt;<span class="token function">GetRenderWindow<span class="token punctuation">(<span class="token punctuation">)<span class="token operator">-&gt;<span class="token function">AddRenderer<span class="token punctuation">(renderer<span class="token punctuation">)<span class="token punctuation">;

    <span class="token comment">// 6. 设置交互（支持鼠标旋转、缩放）
    vtkRenderWindowInteractor<span class="token operator">* interactor <span class="token operator">= vtkRenderWindowInteractor<span class="token double-colon punctuation">::<span class="token function">New<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">;
    interactor<span class="token operator">-&gt;<span class="token function">SetRenderWindow<span class="token punctuation">(pVTKWidget<span class="token operator">-&gt;<span class="token function">GetRenderWindow<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">)<span class="token punctuation">;
    interactor<span class="token operator">-&gt;<span class="token function">SetInteractorStyle<span class="token punctuation">(vtkInteractorStyleTrackballCamera<span class="token double-colon punctuation">::<span class="token function">New<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">)<span class="token punctuation">;
    interactor<span class="token operator">-&gt;<span class="token function">Initialize<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">;
<span class="token punctuation">}

<span class="token keyword">void <span class="token class-name">VTKWidget<span class="token double-colon punctuation">::<span class="token function">createSphere<span class="token punctuation">(MyVTKWidget <span class="token operator">*pVTKWidget<span class="token punctuation">)
<span class="token punctuation">{
    <span class="token comment">// 1. 创建球体数据
    vtkSphereSource<span class="token operator">* sphere <span class="token operator">= vtkSphereSource<span class="token double-colon punctuation">::<span class="token function">New<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">;
    sphere<span class="token operator">-&gt;<span class="token function">SetRadius<span class="token punctuation">(<span class="token number">1.0<span class="token punctuation">)<span class="token punctuation">;       <span class="token comment">// 球体半径
    sphere<span class="token operator">-&gt;<span class="token function">SetThetaResolution<span class="token punctuation">(<span class="token number">30<span class="token punctuation">)<span class="token punctuation">; <span class="token comment">// 纬线方向分辨率
    sphere<span class="token operator">-&gt;<span class="token function">SetPhiResolution<span class="token punctuation">(<span class="token number">30<span class="token punctuation">)<span class="token punctuation">;   <span class="token comment">// 经线方向分辨率

    <span class="token comment">// 2. 创建映射器（连接数据与渲染）
    vtkPolyDataMapper<span class="token operator">* mapper <span class="token operator">= vtkPolyDataMapper<span class="token double-colon punctuation">::<span class="token function">New<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">;
    mapper<span class="token operator">-&gt;<span class="token function">SetInputConnection<span class="token punctuation">(sphere<span class="token operator">-&gt;<span class="token function">GetOutputPort<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">)<span class="token punctuation">;

    <span class="token comment">// 3. 创建演员（设置显示属性）
    vtkActor<span class="token operator">* actor <span class="token operator">= vtkActor<span class="token double-colon punctuation">::<span class="token function">New<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">;
    actor<span class="token operator">-&gt;<span class="token function">SetMapper<span class="token punctuation">(mapper<span class="token punctuation">)<span class="token punctuation">;
    actor<span class="token operator">-&gt;<span class="token function">GetProperty<span class="token punctuation">(<span class="token punctuation">)<span class="token operator">-&gt;<span class="token function">SetColor<span class="token punctuation">(<span class="token number">0.3<span class="token punctuation">, <span class="token number">0.6<span class="token punctuation">, <span class="token number">0.9<span class="token punctuation">)<span class="token punctuation">; <span class="token comment">// 蓝色球体

    <span class="token comment">// 4. 创建渲染器并添加球体
    vtkRenderer<span class="token operator">* renderer <span class="token operator">= vtkRenderer<span class="token double-colon punctuation">::<span class="token function">New<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">;
    renderer<span class="token operator">-&gt;<span class="token function">AddActor<span class="token punctuation">(actor<span class="token punctuation">)<span class="token punctuation">;
    renderer<span class="token operator">-&gt;<span class="token function">SetBackground<span class="token punctuation">(<span class="token number">0.1<span class="token punctuation">, <span class="token number">0.1<span class="token punctuation">, <span class="token number">0.1<span class="token punctuation">)<span class="token punctuation">; <span class="token comment">// 深灰色背景

    <span class="token comment">// 5. 关联到QVTKWidget的渲染窗口
    pVTKWidget<span class="token operator">-&gt;<span class="token function">GetRenderWindow<span class="token punctuation">(<span class="token punctuation">)<span class="token operator">-&gt;<span class="token function">AddRenderer<span class="token punctuation">(renderer<span class="token punctuation">)<span class="token punctuation">;

    <span class="token comment">// 6. 设置交互（支持鼠标旋转、缩放）
    vtkRenderWindowInteractor<span class="token operator">* interactor <span class="token operator">= vtkRenderWindowInteractor<span class="token double-colon punctuation">::<span class="token function">New<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">;
    interactor<span class="token operator">-&gt;<span class="token function">SetRenderWindow<span class="token punctuation">(pVTKWidget<span class="token operator">-&gt;<span class="token function">GetRenderWindow<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">)<span class="token punctuation">;
    interactor<span class="token operator">-&gt;<span class="token function">SetInteractorStyle<span class="token punctuation">(vtkInteractorStyleTrackballCamera<span class="token double-colon punctuation">::<span class="token function">New<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">)<span class="token punctuation">;
    interactor<span class="token operator">-&gt;<span class="token function">Initialize<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">;
<span class="token punctuation">}

<span class="token keyword">void <span class="token class-name">VTKWidget<span class="token double-colon punctuation">::<span class="token function">resizeEvent<span class="token punctuation">(QResizeEvent <span class="token operator">*event<span class="token punctuation">)
<span class="token punctuation">{
    <span class="token keyword">if<span class="token punctuation">(_pQVTKWidget<span class="token punctuation">)
    <span class="token punctuation">{
        _pQVTKWidget<span class="token operator">-&gt;<span class="token function">setGeometry<span class="token punctuation">(<span class="token function">rect<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">.<span class="token function">x<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">, <span class="token function">rect<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">.<span class="token function">y<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">, <span class="token function">rect<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">.<span class="token function">width<span class="token punctuation">(<span class="token punctuation">) <span class="token operator">/ <span class="token number">2 </span><span class="token operator">- </span><span class="token number">10</span><span class="token punctuation">, </span><span class="token function">rect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;
    </span><span class="token punctuation">}
    </span><span class="token keyword">if</span><span class="token punctuation">(_pMyVTKWidget</span><span class="token punctuation">)
    </span><span class="token punctuation">{
        _pMyVTKWidget</span><span class="token operator">-&gt;</span><span class="token function">setGeometry</span><span class="token punctuation">(</span><span class="token function">rect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">) </span><span class="token operator">/ </span><span class="token number">2 </span><span class="token operator">+ </span><span class="token number">10</span><span class="token punctuation">, </span><span class="token function">rect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">y</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">, </span><span class="token function">rect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">) </span><span class="token operator">/ </span><span class="token number">2 </span><span class="token operator">- </span><span class="token number">10</span><span class="token punctuation">, </span><span class="token function">rect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;

    </span><span class="token punctuation">}
</span><span class="token punctuation">}
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
<div class="cl-preview-section">&nbsp;</div>
<div class="cl-preview-section">
<h1><a id="v100_533"></a>工程模板v1.0.0</h1>
</div>
<div class="cl-preview-section">
<p>  <br><img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/735258508083487ea73450445e32796a.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">&nbsp;</div>
<div class="cl-preview-section">
<h1><a id="_539"></a>入坑</h1>

</div>
<div class="cl-preview-section">
<h2><a id="81remove_540"></a>入坑一：运行渲染窗口弹出8.1remove</h2>

</div>
<div class="cl-preview-section">
<h3><a id="_541"></a>问题</h3>

</div>
<div class="cl-preview-section">
<p>  出错点击关闭，提示截图图下：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/3b6f524489f849b3a3a57a8397c32f0c.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/20cea382d8e5416d8aa759db682f117f.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<h3><a id="_547"></a>尝试</h3>

</div>
<div class="cl-preview-section">
<p>  添加头文件<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/8f30232c6de048a5bfcc4f958d47c880.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  初始化<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/e28339e46b6f4c5cb53bf5030f5ead44.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  然后结果：<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/37fcd22c155b477a913377b87a9bdaec.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  调试窗口还是存在，关闭或者设置等级0，即可消息窗口输出即可。</p>

</div>
<div class="cl-preview-section">
<h3><a id="_558"></a>解决</h3>

</div>
<div class="cl-preview-section">
<p>  头文件<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/d7e146f44844448f870acd43b59fc2b9.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<pre><code class="prism language-cpp"><span class="token macro property"><span class="token directive-hash">#<span class="token directive keyword">include <span class="token string">"vtkAutoInit.h"
</span></span></span></span></code></pre>
</div>
<div class="cl-preview-section">
<p>  初始化<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/d404b230bf4743058b9a31afe1bb0c0b.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<pre><code class="prism language-cpp"><span class="token function">VTK_MODULE_INIT<span class="token punctuation">(vtkRenderingOpenGL2<span class="token punctuation">)<span class="token punctuation">;
<span class="token function">VTK_MODULE_INIT<span class="token punctuation">(vtkInteractionStyle<span class="token punctuation">)<span class="token punctuation">;
</span></span></span></span></span></span></span></span></code></pre>
</div>
<div class="cl-preview-section">
<p>  添加关闭打印信息输出或者设置输出等级<br>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/62ec75c2e34146948b91ffb0795a155d.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<p>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/d5bf7129c64c4f7fbcdb7ff1ed0c719a.png" class="lazyload"></p>

</div>
<div class="cl-preview-section">
<pre><code class="prism language-cpp"><span class="token comment">// 下面二选一，注意：这里必须在new之前设置好，new QVTKWidget窗口之后是无效的
vtkOutputWindow<span class="token double-colon punctuation">::<span class="token function">GlobalWarningDisplayOff<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">; <span class="token comment">// 两段代码效果应该一致
vtkOutputWindow<span class="token double-colon punctuation">::<span class="token function">SetGlobalWarningDisplay<span class="token punctuation">(<span class="token number">0<span class="token punctuation">)<span class="token punctuation">; <span class="token comment">// 设置消息登记显示，0-都不显示
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
<div class="cl-preview-section">
<p>  <img alt="在这里插入图片描述" data-src="https://i-blog.csdnimg.cn/direct/8f835491409c4440a788a802ba89da80.png" class="lazyload"></p>
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-08-25 12:44">2025-08-25 12:44</span>&nbsp;
<a href="https://www.cnblogs.com/qq21497936">长沙红胖子Qt创微智科</a>&nbsp;
阅读(<span id="post_view_count">59</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19056789);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19056789', targetLink: 'https://www.cnblogs.com/qq21497936/p/19056789', title: 'VTK开发笔记（二）：Qt5.9.3+VS2017x64+VTK8.2创建兼容dll和嵌入源码窗口两种方式的Qt嵌入VTK8.2模板Demo' })">举报</a>
</div>
        