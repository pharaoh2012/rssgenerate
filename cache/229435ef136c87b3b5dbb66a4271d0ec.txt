
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/springsource/p/18891362" title="发布于 2025-05-22 15:18">
    <span role="heading" aria-level="2">会用 AI 的工程师，效率已经拉开差距了 - “ 我们曾经引以为傲的编码能力，正在被改写。”</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>最近尝试用Cursor做了几个内部业务系统，发现一个越来越明显的趋势</p>
<div class="cnblogs_Highlighter">
<pre class="brush:csharp;gutter:true;">真正会用 AI 的工程师，效率已经拉开差距了。</pre>
</div>
<p>做了十几年 Java， 这波 AI 编程浪潮来得快，一开始我也没太当回事，以为这波AI编程只是停留在了高级 “代码补全” 功能上， 直到最近刚好有个需求，是在内部系统中实现， 刚好尝试了下， 用上了 Cursor，才意识到，这不是“辅助写代码”，这简直就是 “配置了助理”。&nbsp;</p>
<hr>
<p>&nbsp;</p>
<h2 data-start="163" data-end="177">1. 起初我也不以为意</h2>
<p data-start="179" data-end="284">做了十几年 Java，这波 AI 编程浪潮来得很快。一开始我没太当回事，以为只是“高级自动补全”——直到最近有个内部需求，我用 Cursor 完整实践了一次，才意识到这不是“辅助开发”，而是“加速上线”的变革。</p>
<hr data-start="286" data-end="289">
<h2 data-start="291" data-end="310">2. 我是怎么用 AI 开发的？</h2>
<p data-start="312" data-end="415">最近公司内部要做一个「费用分摊」功能，常规的增删改查 + 分页 + 导入导出 + 多状态交互，前端用的是 React + Ant Design，后端是 Spring Boot + MyBatis 的旧项目。</p>
<p data-start="417" data-end="439">我尝试用 Cursor 直接和 AI 对话：</p>
<blockquote data-start="441" data-end="501">
<p data-start="443" data-end="501">“认真阅读当前代码，仿照当前代码的结构、风格，帮我写一个费用列表展示的前端页面，挂在云管平台菜单下。下面是表结构。”</p>
</blockquote>
<p data-start="503" data-end="542">它做了什么？<strong data-start="509" data-end="519">10分钟不到</strong>，直接生成完整页面，并逐一让我确认。亮点如下：</p>
<ul data-start="544" data-end="694">
<li data-start="544" data-end="594">
<p data-start="546" data-end="594"><strong data-start="546" data-end="556">理解项目结构</strong>：我们前端结构是自定义的，但它准确找到了菜单组件、页面目录，并正确挂载菜单。</p>
</li>
<li data-start="595" data-end="641">
<p data-start="597" data-end="641"><strong data-start="597" data-end="607">风格保持一致</strong>：生成的页面结构、变量命名、样式都与现有项目一致，几乎“无缝”对接。</p>
</li>
<li data-start="642" data-end="694">
<p data-start="644" data-end="694"><strong data-start="644" data-end="654">字段自动翻译</strong>：比如 <code data-start="658" data-end="672">product_name</code> 自动展示为“产品名称”，比我自己写还细致。</p>
</li>
</ul>
<p data-start="696" data-end="703">接下来我又说：</p>
<blockquote data-start="705" data-end="732">
<p data-start="707" data-end="732">“产品名称和金额支持排序，做在前端，不要走后端。”</p>
</blockquote>
<p data-start="734" data-end="784">它理解错了，我纠正后它居然在前端打了日志，指导我 F12 把日志贴过去，它分析后继续调试，直到搞定。</p>
<p data-start="786" data-end="796">最“炸裂”的部分是：</p>
<p data-start="798" data-end="818">我原本只想让它写前端页面，顺口加了一句, 尝试了下后端的实现：</p>
<blockquote data-start="820" data-end="862">
<p data-start="822" data-end="862">“帮我把 /fee/show 的数据都通过接口来获取，并模拟后端风格实现接口。”</p>
</blockquote>
<p data-start="864" data-end="877">它直接生成了完整后端代码！</p>
<ul data-start="879" data-end="952">
<li data-start="879" data-end="897">
<p data-start="881" data-end="897">Controller 控制器</p>
</li>
<li data-start="898" data-end="916">
<p data-start="900" data-end="916">Service 接口和实现类</p>
</li>
<li data-start="917" data-end="933">
<p data-start="919" data-end="933">DAO 层接口 + 实现</p>
</li>
<li data-start="934" data-end="952">
<p data-start="936" data-end="952">MyBatis XML 映射文件</p>
</li>
</ul>
<p data-start="954" data-end="988">我唯一的工作：<strong data-start="961" data-end="988">点“接受”，然后启动项目，访问页面，一次成功。</strong></p>
<p data-start="990" data-end="1046">（中间还一个小插曲，我忘记了我用的测试库数据，一直质疑它查询的有问题， 然后它用 mysql 命令读取了配置文件, 直连了测试库、运行了 sql 语句， 证明了给我看... ）</p>
<p data-start="990" data-end="1046">&nbsp;</p>
<p data-start="990" data-end="1046">最重要的一点, 完全不需要联调,&nbsp; 生成完成代码后, 整个启动访问, 无钱后端联调试的过程, 直接端到端搞定!</p>
<p data-start="990" data-end="1046">&nbsp;</p>
<hr data-start="1048" data-end="1051">
<h2 data-start="1053" data-end="1068">3. AI 开发靠谱吗？</h2>
<p data-start="1070" data-end="1077">大致评估下来：</p>
<ul data-start="1079" data-end="1209">
<li data-start="1079" data-end="1144">
<p data-start="1081" data-end="1144"><strong data-start="1081" data-end="1090">前端交互：</strong><br data-start="1090" data-end="1093">
增删改查、分页、Excel 导入导出、图表、Ant Design 组件熟练，70% 代码直接可用。</p>



</li>
<li data-start="1146" data-end="1191">
<p data-start="1148" data-end="1191"><strong data-start="1148" data-end="1157">后端逻辑：</strong><br data-start="1157" data-end="1160">
分页接口、SQL 优化、日志调试，全都能写，而且风格统一。</p>



</li>
<li data-start="1193" data-end="1209">
<p data-start="1195" data-end="1209"><strong data-start="1195" data-end="1209">联调？基本不需要了。</strong></p>



</li>



</ul>
<hr data-start="1211" data-end="1214">
<h2 data-start="1216" data-end="1232">4. 和“手撸”效率对比？</h2>
<p data-start="1234" data-end="1246">我让组内同事纯手类似功能, , 包含: 列表、分页、搜索条件、时间日期组件、走势图、排序、增删改查、excel导入导出：</p>
<ul data-start="1248" data-end="1290">
<li data-start="1248" data-end="1263">
<p data-start="1250" data-end="1263">他 评估最少 1 天, 还是比较乐观估计</p>



</li>
<li data-start="1264" data-end="1290">
<p data-start="1266" data-end="1290">我用 Cursor 半天做完两个，而且前后端全部实现, 需要提供的只是建表语句+ 提示词</p>



</li>



</ul>
<p data-start="1292" data-end="1298">更重要的是：</p>
<p data-start="1300" data-end="1350"><strong data-start="1300" data-end="1350">我不用上下切 tab 查文档，不用查 API，不用 Copy 旧代码，思路更聚焦，效率倍增。 直接端到端</strong></p>
<p data-start="1300" data-end="1350">&nbsp;</p>
<hr data-start="1352" data-end="1355">
<h2 data-start="1357" data-end="1373">5. 它不是万能，但很划算</h2>
<p data-start="1375" data-end="1396">当然，AI 并非全能，以下是我遇到的不足：</p>
<ul data-start="1398" data-end="1517">
<li data-start="1398" data-end="1423">
<p data-start="1400" data-end="1423">生成的代码不一定是最优，需要人工 review</p>



</li>
<li data-start="1424" data-end="1446">
<p data-start="1426" data-end="1446">有时理解不够精准，得耐心拆解需求慢慢引导</p>



</li>
<li data-start="1447" data-end="1467">
<p data-start="1449" data-end="1467">不懂业务，只能“模仿”，不能“思考”</p>



</li>
<li data-start="1468" data-end="1483">
<p data-start="1470" data-end="1483">网络卡顿的时候，会影响体验</p>



</li>
<li data-start="1484" data-end="1517">
<p data-start="1486" data-end="1517">成本不低：我 16 天用完了 500 次请求，月花费 145 元 (20美金)</p>



</li>



</ul>
<p data-start="1519" data-end="1552">但这些问题，对比它带来的效率提升、心智负担下降来说，完全可以接受!</p>
<p data-start="1519" data-end="1552">&nbsp;</p>
<hr data-start="1554" data-end="1557">
<h2 data-start="1559" data-end="1578">6. 未来可期：AI 不止写代码</h2>
<p data-start="1580" data-end="1594">我现在还在探索更多接入场景, 已经完成的, 如下：</p>
<ul data-start="1596" data-end="1660">
<li data-start="1596" data-end="1617">
<p data-start="1598" data-end="1617"><strong data-start="1598" data-end="1617">发布流程中, 加入Code Review 进行分析提醒</strong></p>



</li>
<li data-start="1618" data-end="1630">
<p data-start="1620" data-end="1630"><strong data-start="1620" data-end="1630">弹出的告警中,&nbsp; AI捞取告警日志进行分析, 排查辅助</strong></p>



</li>
<li data-start="1631" data-end="1645">
<p data-start="1633" data-end="1645"><strong data-start="1633" data-end="1645">出故障后, 把普罗米修斯、监控日志智能分析</strong></p>



</li>
<li data-start="1646" data-end="1660">
<p data-start="1648" data-end="1660"><strong>把监控数据喂给它，提高线上故障的快恢环节</strong></p>



</li>



</ul>
<p>&nbsp; 但当前效果确实还一般， 没有写代码这么炸裂,&nbsp; 但坚信它会越来越成熟, 而且这个过程将非常快到来</p>
<p>&nbsp; 如：新出的&nbsp;Codex，已经可以自己运行测试</p>
<p>&nbsp; 坚信的是, 未来趋势是 AI 将逐步接管完整软件工程流程!</p>
<p>&nbsp;</p>
<hr data-start="1725" data-end="1728">
<h2 data-start="1730" data-end="1741">7. 一句话总结</h2>
<p data-start="1743" data-end="1775"><strong data-start="1743" data-end="1775">不是所有程序员都适合用 AI，但每个程序员都该尝试一下。</strong></p>
<p data-start="1777" data-end="1795">我已经从“试试看”变成了“离不开”。</p>
<p data-start="1797" data-end="1821">“ 我们曾经引以为傲的编码能力，正在被改写。”</p>
<p><strong>&nbsp;</strong></p>
<p>&nbsp;</p>
<p>还是留个公众号吧,&nbsp; 16年的老java了,&nbsp; 带着团队, 但还活跃在一线 , 最近对AI很有兴趣, 一起分享, 公众号</p>
<p><img src="https://img2024.cnblogs.com/blog/323385/202505/323385-20250522181147643-468020581.png" alt="" width="133" height="118" loading="lazy"></p>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.3392061250266204" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-22 18:12">2025-05-22 15:18</span>&nbsp;
<a href="https://www.cnblogs.com/springsource">何锦彬</a>&nbsp;
阅读(<span id="post_view_count">645</span>)&nbsp;
评论(<span id="post_comment_count">9</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18891362);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18891362', targetLink: 'https://www.cnblogs.com/springsource/p/18891362', title: '会用 AI 的工程师，效率已经拉开差距了 - “ 我们曾经引以为傲的编码能力，正在被改写。”' })">举报</a>
</div>
        