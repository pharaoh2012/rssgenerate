
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/geeklab/p/18796667" title="发布于 2025-03-27 19:18">
    <span role="heading" aria-level="2">码场趣谈 #1：索引</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="索引mysql-的gps-导航">索引：MySQL 的"GPS 导航"🧭</h1>
<p><em>你是否曾经在千万行数据的海洋中，苦苦搜寻那一条珍贵的记录？没有索引的 MySQL 查询，就像在没有地图的森林里找出口——既累人又低效！</em></p>
<h2 id="什么是索引">什么是索引？🤔</h2>
<p>简单来说，索引就是数据库中的"目录"。想象一下，如果你要在一本 1000 页的字典中找一个单词，你会怎么做？</p>
<ul>
<li><strong>无索引方式</strong>：从第 1 页开始，一页一页地翻，直到找到（全表扫描）😫</li>
<li><strong>有索引方式</strong>：直接翻到字典侧边的字母标签，快速定位（索引查询）😎</li>
</ul>
<h2 id="索引的内部秘密-">索引的内部秘密 🔍</h2>
<pre><code>MySQL：我的索引是B+树结构哦~
其他数据库：装什么酷，不就是棵树嘛！
MySQL：但我的叶子节点是双向链表，你有吗？哼！
</code></pre>
<h3 id="b树索引的优势">B+树索引的优势</h3>
<ol>
<li><strong>层级浅</strong>：通常只有 3-4 层，所以找数据很快！</li>
<li><strong>顺序访问</strong>：叶子节点连成链表，范围查询不费劲！</li>
<li><strong>高 fan-out</strong>：一个节点能存很多索引，更省空间！</li>
</ol>
<h2 id="常见索引类型-️">常见索引类型 🏷️</h2>
<table>
<thead>
<tr>
<th>索引类型</th>
<th>个性描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>主键索引</td>
<td>数据库的"身份证"，唯一且非空，地位最高</td>
</tr>
<tr>
<td>唯一索引</td>
<td>有洁癖的索引，相同的值？不存在的！</td>
</tr>
<tr>
<td>普通索引</td>
<td>平民索引，没什么特殊要求，好相处</td>
</tr>
<tr>
<td>联合索引</td>
<td>团队型选手，多个字段联手出击</td>
</tr>
<tr>
<td>全文索引</td>
<td>文学爱好者，专门查找文本内容</td>
</tr>
</tbody>
</table>
<h2 id="索引的尴尬时刻-">索引的尴尬时刻 🙈</h2>
<p>并不是所有时候索引都那么给力，有时候它也会"罢工"：</p>
<ol>
<li>
<p><strong>使用了<code>OR</code>且有一侧字段没索引</strong></p>
<pre><code class="language-sql">-- MySQL：这个查询我选择走全表扫描...
SELECT * FROM users WHERE indexed_col = 5 OR non_indexed_col = 10;
</code></pre>
</li>
<li>
<p><strong>在索引列上使用函数</strong></p>
<pre><code class="language-sql">-- MySQL：你对我的索引列做了什么？！我不认识它了！
SELECT * FROM users WHERE UPPER(username) = 'ADMIN';
</code></pre>
</li>
<li>
<p><strong>使用<code>!=</code>或<code>&lt;&gt;</code>操作符</strong></p>
<pre><code class="language-sql">-- MySQL：否定的条件太多了，我还是全表扫描吧...
SELECT * FROM products WHERE category_id != 3;
</code></pre>
</li>
</ol>
<h2 id="索引的维护成本-">索引的维护成本 💰</h2>
<pre><code>DBA：为什么服务器这么慢？
开发：我给每一列都加了索引，这样查询更快啊！
DBA：*晕倒*
</code></pre>
<p>索引不是越多越好！每个索引都需要占用磁盘空间，而且在插入、更新、删除数据时都需要维护索引，会降低写操作的性能。</p>
<h2 id="索引使用小技巧-">索引使用小技巧 💡</h2>
<ol>
<li>经常出现在<code>WHERE</code>子句的列应该加索引</li>
<li>唯一性强的列更适合做索引</li>
<li>短索引通常比长索引好（占用空间小，比较次数少）</li>
<li>联合索引遵循"最左前缀原则"（就像喝奶茶必须先有奶茶，才能加珍珠和椰果）</li>
</ol>
<hr>
<p>记住：<strong>没有索引的数据库就像没有目录的图书馆，看起来整齐，用起来崩溃！</strong></p>
<blockquote>
<p>MySQL：我可以没有漂亮的界面，但绝不能没有高效的索引！</p>
</blockquote>
<hr>
<p>希望这篇文章让你对 MySQL 索引有了更有趣的理解！下次面试官问起，你就可以微微一笑，胸有成竹地回答啦！😉</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.5763718737430555" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-27 19:18">2025-03-27 19:18</span>&nbsp;
<a href="https://www.cnblogs.com/geeklab">科韵小栈</a>&nbsp;
阅读(<span id="post_view_count">48</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18796667" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18796667);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18796667', targetLink: 'https://www.cnblogs.com/geeklab/p/18796667', title: '码场趣谈 #1：索引' })">举报</a>
</div>
        