
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaobaiysf/p/18786319" title="发布于 2025-03-22 10:44">
    <span role="heading" aria-level="2">Ubuntu安装GPU驱动+CUDA+cuDNN的安装方法</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>一台有GPU的虚拟机如果没有安装CUDA的驱动，是需要我们手动去进行安装的，介绍Ubuntu操作系统的安装教程。</p>
<h1 id="1-下载安装文件">1. 下载安装文件</h1>
<p><a href="https://developer.nvidia.com/cuda-toolkit-archive" target="_blank" rel="noopener nofollow">NVIDIA CUDA Toolkit Archive</a><br>
点击上面链接，进入<a href="https://developer.nvidia.com/cuda-downloads" target="_blank" rel="noopener nofollow">CUDA Toolkit Archive</a>，下载需要的CUDA工具包，本文章以CUDA Toolkit 12.3.2版本举例（可能需要代理加速访问网页）<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202503/3600464-20250322102719643-729817582.png" alt="" loading="lazy"></p>
<p>选择对应的系统，架构，发行版本，选择run文件安装方式<br>
（可在服务器中输入uname -a查看当前服务器系统版本信息）</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202503/3600464-20250322102914508-137896273.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202503/3600464-20250322102848162-2135145562.png" alt="" loading="lazy"></p>
<p>选择完后会出现run文件下载链接，可复制wget命令直接在服务器中下载，也可复制下载链接到浏览器上，通过本地浏览器下载再上传至服务器中。（注意：只下载不执行）</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202503/3600464-20250322102958061-2119741050.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202503/3600464-20250322103008265-971836615.png" alt="" loading="lazy"></p>
<h1 id="2-禁用-nouveau-驱动">2. 禁用 nouveau 驱动</h1>
<pre><code>sudo vim /etc/modprobe.d/blacklist-nouveau.conf
</code></pre>
<p>文件最后加入以下内容  (如果没有需要添加，否则忽略这步操作)</p>
<pre><code> blacklist nouveau
 options nouveau modeset=0
</code></pre>
<p>更新使其生效</p>
<pre><code> sudo update-initramfs -u
</code></pre>
<p>重启机器之后检查，</p>
<p>没有内容输出，说明禁用成功</p>
<pre><code>reboot  
lsmod | grep nouveau
</code></pre>
<h1 id="3-安装gcccmake">3. 安装gcc/cmake</h1>
<p>依次执行</p>
<pre><code>sudo apt-get update
sudo apt-get install gcc
sudo apt-get install cmake
 
# 查看版本
gcc --version
cmake --version
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202503/3600464-20250322103404183-777127761.png" alt="" loading="lazy"></p>
<h1 id="4-运行安装文件">4. 运行安装文件</h1>
<p>输入ls命令查看运行文件<br>
输入chmod -x {文件名}赋予run文件执行权限<br>
输入sh {文件名}运行run文件</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202503/3600464-20250322103442448-1888251.png" alt="" loading="lazy"></p>
<p>等待一会儿后会弹出NVIDIA用户协议输入accept同意</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202503/3600464-20250322103507567-708518689.png" alt="" loading="lazy"></p>
<p>默认选中显卡驱动，一起安装即可</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202503/3600464-20250322103534347-744094719.png" alt="" loading="lazy"></p>
<p>等待程序运行。。。。<br>
安装完成后，如下图</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202503/3600464-20250322103554790-1341575409.png" alt="" loading="lazy"></p>
<p>添加自己需要的cuda版本到环境变量, vim ~/.bashrc，添加以下内容到最后，如：</p>
<pre><code>export PATH=/usr/local/cuda-12.3/bin:$PATH                                                                                                                                                                                                
export LD_LIBRARY_PATH=/usr/local/cuda-12.3/lib64:$LD_LIBRARY_PATH
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202503/3600464-20250322103636274-189267014.png" alt="" loading="lazy"></p>
<p>内容输入后，:wq 保存退出，<br>
输入source ~/.bashrc 更新环境变量使刚刚输入的环境变量生效，输入nvcc -V 查看CUDA版本</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202503/3600464-20250322103652960-1506728782.png" alt="" loading="lazy"></p>
<p>输入命令nvidia-smi查看显卡驱动与CUDA版本，如下图所示，说明安装成功。</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202503/3600464-20250322103716477-1150062628.png" alt="" loading="lazy"></p>
<p>启动显卡持久化服务及其守护程序</p>
<pre><code>cat &lt;&lt;EOF &gt;&gt; /etc/systemd/system/nvidia-persistenced.service
[Unit]
Description=NVIDIA Persistence Daemon
Wants=syslog.target
 
[Service]
Type=forking
ExecStart=/usr/bin/nvidia-persistenced
ExecStopPost=/bin/rm -rf /var/run/nvidia-persistenced
 
[Install]
WantedBy=multi-user.target
EOF
 
systemctl daemon-reload
systemctl start nvidia-persistenced
systemctl enable nvidia-persistenced
</code></pre>
<p>在安装NVIDIA CUDA Toolkit时，cuDNN库并不是必须同时安装的，但安装cuDNN可以提供额外的性能优化，特别是在深度学习和某些高性能计算任务中。以下是一些关于是否需要安装cuDNN的考虑因素：</p>
<ol>
<li><strong>深度学习应用</strong>：如果你的工作或项目涉及到深度学习，特别是需要使用GPU加速的深度学习框架（如TensorFlow、PyTorch等），那么安装cuDNN是非常推荐的。cuDNN提供了针对深度学习算法的优化实现，可以显著提高训练和推理的速度。</li>
<li><strong>性能需求</strong>：如果你的应用需要高性能的计算能力，并且对计算速度有较高的要求，那么安装cuDNN可以提供额外的性能提升。</li>
<li><strong>兼容性</strong>：确保你安装的CUDA Toolkit版本与cuDNN版本兼容。NVIDIA提供了不同版本的CUDA Toolkit和cuDNN，它们之间有特定的兼容性要求。</li>
<li><strong>空间和资源</strong>：cuDNN是一个额外的库，会占用一定的磁盘空间和系统资源。如果你的系统资源有限，或者你不需要cuDNN提供的性能优化，那么可以考虑不安装。</li>
<li><strong>框架支持</strong>：一些深度学习框架可能已经内置了对cuDNN的支持，或者提供了使用cuDNN的选项。在这种情况下，安装cuDNN可以使得这些框架能够利用GPU加速。<br>
总的来说，是否需要安装cuDNN取决于你的具体需求。如果你不确定是否需要cuDNN，可以先安装CUDA Toolkit，然后在需要的时候再安装cuDNN。这样，你可以在不牺牲性能的情况下，根据实际需求灵活地选择是否使用cuDNN。</li>
</ol>
<h1 id="5-配置cudnn库">5. <strong>配置cuDNN库</strong></h1>
<p>cuDNN比CUDA安装简单，下载对应版本压缩包，拷贝文件到指定目录，给予权限就好了。</p>
<p><a href="https://developer.nvidia.com/cudnn" target="_blank" rel="noopener nofollow">cuDNN官方下载地址</a>（如果下载不了，需要登录NVIDIA账号）</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202503/3600464-20250322103858171-253924359.png" alt="" loading="lazy"></p>
<p>下图为cuDNN对应版本关系</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202503/3600464-20250322103910421-1318192206.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202503/3600464-20250322103955314-133386867.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202503/3600464-20250322104013294-1145413723.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202503/3600464-20250322104031243-1128154875.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202503/3600464-20250322104039618-592011189.png" alt="" loading="lazy"></p>
<p>将tar包下载至服务器上，解压tar包，并将文件cp至对应位置命令如下：</p>
<pre><code>tar -xvf cudnn-linux-$arch-8.x.x.x_cudaX.Y-archive.tar.xz
cp cudnn-*-archive/include/cudnn*.h /usr/local/cuda/include
cp -P cudnn-*-archive/lib/libcudnn* /usr/local/cuda/lib64
chmod a+r /usr/local/cuda/include/cudnn*.h /usr/local/cuda/lib64/libcudnn*
 
#加上版本号后，实际执行命令如下
tar -xvf cudnn-linux-x86_64-8.9.7.29_cuda12-archive.tar.xz 
cp cudnn-linux-x86_64-8.9.7.29_cuda12-archive/include/cudnn*.h /usr/local/cuda/include
cp -P cudnn-linux-x86_64-8.9.7.29_cuda12-archive/lib/libcudnn* /usr/local/cuda/lib64
chmod a+r /usr/local/cuda/include/cudnn*.h /usr/local/cuda/lib64/libcudnn*
</code></pre>
<p>使用以下命令查看cuDNN是否配置完成</p>
<pre><code>cat /usr/local/cuda/include/cudnn_version.h | grep CUDNN_MAJOR -A 2
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202503/3600464-20250322104157769-1872478006.png" alt="" loading="lazy"></p>
<p>相关安装包地址：<a href="https://pan.quark.cn/s/4a29f4c9ef9f" target="_blank" rel="noopener nofollow">https://pan.quark.cn/s/4a29f4c9ef9f</a></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.5552381157858797" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-22 10:58">2025-03-22 10:44</span>&nbsp;
<a href="https://www.cnblogs.com/xiaobaiysf">小白跃升坊</a>&nbsp;
阅读(<span id="post_view_count">91</span>)&nbsp;
评论(<span id="post_comment_count">2</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18786319" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18786319);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18786319', targetLink: 'https://www.cnblogs.com/xiaobaiysf/p/18786319', title: 'Ubuntu安装GPU驱动+CUDA+cuDNN的安装方法' })">举报</a>
</div>
        