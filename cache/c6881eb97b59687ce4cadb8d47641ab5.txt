
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/shanyou/p/18697848" title="发布于 2025-02-03 23:04">
    <span role="heading" aria-level="2">DeepSeek,你是懂.NET的！</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p><strong>这两天火爆出圈的话题,<strong>除了过年,<strong>那一定是DeepSeek！<strong>你是否也被刷屏了？</strong></strong></strong></strong></p><p><strong><br>DeepSeek 是什么</strong></p><p>DeepSeek是一款由国内人工智能公司研发的大型语言模型，拥有强大的自然语言处理能力，能够理解并回答问题，还能辅助写代码、整理资料和解决复杂的数学问题。</p><p><a href="https://img2023.cnblogs.com/blog/510/202502/510-20250203230341449-1527065201.png"><img width="973" height="598" title="image" style="display: inline; background-image: none" alt="image" src="https://img2023.cnblogs.com/blog/510/202502/510-20250203230342142-759668670.png" border="0"></a></p><p>与OpenAI开发的ChatGPT相比，DeepSeek不仅率先实现了媲美OpenAI-o1模型的效果，还大幅降低了推理模型的成本。其新模型DeepSeek-R1以十分之一的成本达到了GPT-o1级别的表现，引发海外AI圈的广泛讨论。</p><p>据报道，DeepSeek开发的模型在多项测试中的<strong>表现都优于OpenAI，</strong>且<strong>一次训练成本不到600万美元，</strong>堪称“小力出奇迹”。而且它特别擅长“个性化发挥”、“不说套话”、“说人话”。最近DeepSeek官网经常性的繁忙，我就在手机app里浅浅试了下问了DeepSeek几个问题，看看它眼中的.NET是什么样子的。 </p><p><br></p><p>DeepSeek眼中的.NET </p><p><br></p><p><a href="https://img2023.cnblogs.com/blog/510/202502/510-20250203230342766-41231559.jpg"><img width="365" height="791" title="02ddea10f0b52a53f9c4d9d92453df8" style="display: inline; background-image: none" alt="02ddea10f0b52a53f9c4d9d92453df8" src="https://img2023.cnblogs.com/blog/510/202502/510-20250203230343304-436130248.jpg" border="0"></a><a href="https://img2023.cnblogs.com/blog/510/202502/510-20250203230343916-494663279.jpg"><img width="361" height="783" title="c8d49cbdd8e89d2d57fc45666224613" style="display: inline; background-image: none" alt="c8d49cbdd8e89d2d57fc45666224613" src="https://img2023.cnblogs.com/blog/510/202502/510-20250203230344441-1158758171.jpg" border="0"></a><a href="https://img2023.cnblogs.com/blog/510/202502/510-20250203230345032-2012413071.jpg"><img width="360" height="782" title="e594bffb1f050cbabac98a9e88bac35" style="display: inline; background-image: none" alt="e594bffb1f050cbabac98a9e88bac35" src="https://img2023.cnblogs.com/blog/510/202502/510-20250203230345688-1695029552.jpg" border="0"></a><a href="https://img2023.cnblogs.com/blog/510/202502/510-20250203230346265-1339798707.jpg"><img width="365" height="792" title="f6f543aacbd1145f9d6504d7a87c275" style="display: inline; background-image: none" alt="f6f543aacbd1145f9d6504d7a87c275" src="https://img2023.cnblogs.com/blog/510/202502/510-20250203230346752-878817001.jpg" border="0"></a><a href="https://img2023.cnblogs.com/blog/510/202502/510-20250203230453033-2125344106.jpg"><img width="365" height="792" title="9c0fdf6ec4b81997873e397ec8bf4e0" style="display: inline; background-image: none" alt="9c0fdf6ec4b81997873e397ec8bf4e0" src="https://img2023.cnblogs.com/blog/510/202502/510-20250203230453689-617652247.jpg" border="0"></a><a href="https://img2023.cnblogs.com/blog/510/202502/510-20250203230454289-26713285.jpg"><img width="368" height="798" title="14be9e117041d43ef44b382fceeabbe" style="display: inline; background-image: none" alt="14be9e117041d43ef44b382fceeabbe" src="https://img2023.cnblogs.com/blog/510/202502/510-20250203230454899-1585957440.jpg" border="0"></a></p><p>在我看来，.NET 是一个兼具灵活性与生产力的技术生态，它既保留了企业级开发的稳健性，又能快速拥抱技术潮流。以下是我对它的理解：</p>
<p>1. 跨越时代的兼容性</p><ul><li>
从 Windows 到全平台：曾经的 .NET Framework 是 Windows 的“亲儿子”，而如今的 .NET 6/7/8 已彻底打破平台限制，Linux、macOS、容器甚至移动端（MAUI）都能无缝运行。</li><li>渐进式演进：旧项目可通过兼容层逐步迁移，新技术（如 Blazor、gRPC）又能直接整合，避免“推倒重来”的阵痛。</li></ul>
<p>2. 开发者体验的「隐形武器」</p><ul><li>
C# 语言的优雅哲学：LINQ、异步语法（async/await）、模式匹配等特性，让代码简洁如诗，同时保持强类型安全。</li><li>
工具链的「保姆级」支持：Visual Studio 的智能调试、Rider 的高效重构、CLI 的跨平台脚本，大幅降低心智负担。</li><li>热重载（Hot Reload）：改代码无需重启应用，尤其对前端开发（Blazor）和微服务调试极为友好。</li></ul>
<p>3. 性能不再是「企业级」的代价</p><ul><li>
 AOT 编译：.NET 8 的 Native AOT 将应用编译为原生机器码，启动速度堪比 Go 语言，适合云函数、边缘计算等场景。</li><li>零分配优化：Span&lt;T&gt;、MemoryPool 等 API 让内存控制更精细，高频交易或游戏服务端不再惧怕 GC 停顿。</li><li>SIMD 与硬件加速：直接调用 CPU 指令集处理向量计算，AI 推理或图像处理性能媲美 C++。</li></ul><p>4. 开源生态的「野蛮生长」</p><ul><li>
 社区驱动的创新：如 ML.NET（机器学习）、Orleans（分布式Actor模型）、Dapr（微服务抽象层）等项目，已反向影响微软官方路线。</li><li>云原生「无感」适配：与 Kubernetes、Prometheus 等云工具深度集成，甚至提供专属 SDK（如 Azure Container Apps）。</li><li>跨界融合案例：比如用 MAUI 开发智能硬件界面，或用 .NET 驱动 Raspberry Pi 的物联网项目。</li></ul>
<p>5. 企业级与创业团队的「平衡术」</p><ul><li>
 大厂背书下的「安全感」：银行、航空等关键系统依赖 .NET 的长期支持（LTS版本），而初创公司可利用 Minimal API 快速迭代原型。</li><li>成本控制的隐藏优势：MIT 协议下无商业授权顾虑，Docker 镜像体积小（约 100MB），节省云资源开支。</li><li>人才池的「双向流动」：Java 开发者可低门槛转型，而 F# 吸引函数式编程爱好者，形成多元技术文化。</li></ul>
<p>个人观察：生态的「破圈」信号</p><ul><li>抢占新赛道：Blazor 让 C# 侵入前端领域，.NET 的 WASM 支持甚至比某些传统前端框架更早。</li><li>AI 原生集成：与 ONNX Runtime、TorchSharp 深度整合，未来可能直接内置大模型推理引擎。</li><li>开发者社区的「年轻化」：Discord 和 Reddit 上活跃的 .NET 开发者，开始出现更多独立游戏开发者和学生群体。</li></ul>
<p>如果用一句话总结：.NET 像一个「技术混血儿」——既继承了微软的工程严谨性，又吸收了开源社区的敏捷基因，在性能与开发效率之间找到了独特的平衡点。 无论是维护遗留系统还是探索前沿领域，它都提供了「不折腾」的可持续路径。</p><p><br></p><p>最近DeepSeek app和官网上经常性出现服务器繁忙，请稍后再试，我让它给.NET写一首现代诗就一直服务器繁忙了，我就到硅基流动上去让他写了这样的一首诗(用这个链接注册 你和我都送2000万 token（14元人民币）：<a href="https://cloud.siliconflow.cn/i/eWPXVVVT" rel="noopener nofollow">硅基流动</a>)：</p><p><a href="https://img2023.cnblogs.com/blog/510/202502/510-20250203230349777-1212384938.png"><img width="426" height="282" title="image" style="display: inline; background-image: none" alt="image" src="https://img2023.cnblogs.com/blog/510/202502/510-20250203230350365-2146129733.png" border="0"></a><a href="https://img2023.cnblogs.com/blog/510/202502/510-20250203230350947-1871341622.png"><img width="460" height="281" title="image" style="display: inline; background-image: none" alt="image" src="https://img2023.cnblogs.com/blog/510/202502/510-20250203230351485-738798047.png" border="0"></a><a href="https://img2023.cnblogs.com/blog/510/202502/510-20250203230352077-711928719.png"><img width="510" height="282" title="image" style="display: inline; background-image: none" alt="image" src="https://img2023.cnblogs.com/blog/510/202502/510-20250203230352531-1744518259.png" border="0"></a></p><p><strong>《定风波·.NET江湖》</strong><br>代码如潮卷碧霄，<br>千行剑气指云涛。<br>跨世纵横开栈道，<br>呼啸——<br>一刃霜寒破天骄。</p><p>云海无界风作马，<br>叱咤，<br>万端经纬织灵桥。<br>开源星火映长夜，<br>不灭，<br>乾坤尽纳此间鞘。</p><hr><p><strong>注</strong>：</p><ol><li><strong>技术意象</strong>：
<ul><li>"跨世纵横"暗喻.NET跨平台特性；
</li><li>"万端经纬"指其多领域覆盖能力；
</li><li>"开源星火"呼应开源生态；
</li><li>"灵桥"象征.NET连接不同系统的中间件。</li></ul></li><li><strong>江湖隐喻</strong>：<br>将技术演进比作武侠江湖，.NET如名剑出鞘，既锋利（高性能）又包容（生态整合）。</li></ol><p>第三个问题让他介绍一下.NET基金会</p><p><a href="https://img2023.cnblogs.com/blog/510/202502/510-20250203230353222-382190571.png"><img width="395" height="245" title="image" style="display: inline; background-image: none" alt="image" src="https://img2023.cnblogs.com/blog/510/202502/510-20250203230354157-1252664925.png" border="0"></a><a href="https://img2023.cnblogs.com/blog/510/202502/510-20250203230354961-92144924.png"><img width="378" height="230" title="image" style="display: inline; background-image: none" alt="image" src="https://img2023.cnblogs.com/blog/510/202502/510-20250203230355523-1876185686.png" border="0"></a><a href="https://img2023.cnblogs.com/blog/510/202502/510-20250203230356081-1504000060.png"><img width="382" height="240" title="image" style="display: inline; background-image: none" alt="image" src="https://img2023.cnblogs.com/blog/510/202502/510-20250203230356600-1967461530.png" border="0"></a><a href="https://img2023.cnblogs.com/blog/510/202502/510-20250203230357219-258360235.png"><img width="408" height="243" title="image" style="display: inline; background-image: none" alt="image" src="https://img2023.cnblogs.com/blog/510/202502/510-20250203230357706-45289355.png" border="0"></a></p><p>当然！用大白话给你讲讲 <strong>.NET 基金会</strong> 是啥：</p><hr><h5><strong><font size="3">1. 一句话总结</font></strong></h5><p>.NET 基金会就是 <strong>.NET 开源项目的“大管家”</strong>，由微软在 2014 年成立，专门负责让.NET 生态（比如 C#、F#、各种框架）健康、中立、可持续地发展。</p><hr><h5><strong><font size="3">2. 它是干啥的？</font></strong></h5><ul><li><p><strong>管项目</strong>：<br>微软把自家的.NET 技术（比如 ASP.NET Core、Entity Framework）<strong>开源后</strong>，都交给基金会统一管理，防止微软“一言堂”。<br>（比如你贡献代码，基金会会确保公平审核，而不仅是微软说了算。）</p></li><li><p><strong>保中立</strong>：<br>虽然微软是“金主爸爸”之一，但基金会里有其他公司（亚马逊、谷歌、华为等）和社区代表投票，<strong>避免技术被某一家公司控制</strong>。</p></li><li><p><strong>养生态</strong>：<br>扶持社区开源项目（比如 MAUI、ML.NET），帮开发者解决法律、版权等问题，让好项目能活下来。</p></li></ul><hr><h5><strong><font size="3">3. 对普通开发者有啥用？</font></strong></h5><ul><li><p><strong>不用担心技术“跑路”</strong>：<br>比如以前 .NET Framework 只能跑在 Windows 上，微软想改就改；现在.NET 开源后，代码公开、社区监督，你甚至可以自己改底层。</p></li><li><p><strong>技术更自由</strong>：<br>基金会推动.NET 跨平台（Windows、Linux、macOS 都能跑），用 C# 写手机 App、云服务、游戏都行。</p></li><li><p><strong>参与感拉满</strong>：<br>你可以给.NET 官方项目提 Bug、写代码、参与设计决策，基金会会帮你协调流程，<strong>“人人都是话事人”</strong>。</p></li></ul><hr><h5><strong><font size="3">4. 它怎么运作？</font></strong></h5><ul><li><h1><strong>董事会</strong>：</h1><p><br>微软和其他公司出钱出力，但投票权分散（比如AWS、Red Hat、社区代表都能参与）。</p></li><li><p><strong>技术委员会</strong>：<br>一群技术大佬（不全是微软员工）决定.NET 的发展方向，比如“下一代 C# 该加什么功能”。</p></li><li><p><strong>社区驱动</strong>：<br>项目讨论公开透明（GitHub 上随便看），文档随便改，连 Bug 都是公开修的。</p></li></ul><hr><h5><strong><font size="3">5. 为啥要关注它？</font></strong></h5><p>如果你用.NET 技术，基金会直接决定了：</p><ul><li>你用的框架会不会突然收费？
</li><li>技术未来能不能跨平台？
</li><li>社区创新会不会被巨头打压？</li></ul><p><strong>说白了，它就是让.NET 从“微软的工具”变成“大家的工具”。</strong></p><hr><p><strong>总结</strong>：<br>.NET 基金会就像开源世界的“居委会”，既让微软开放技术，又防止巨头垄断，顺便帮开发者解决麻烦。你用它，就相当于背后有个“中立组织”撑腰，不怕被坑。</p><p><br></p><p>你都问过DeepSeek什么问题？来评论区说说吧~ </p>
</div>
<div id="MySignature" role="contentinfo">
    <p>欢迎大家扫描下面二维码成为我的客户，扶你上云</p>
<img src="https://images.cnblogs.com/cnblogs_com/shanyou/57459/o_220125090408_%E9%82%80%E8%AF%B7%E4%BA%8C%E7%BB%B4%E7%A0%81-258px.jpeg" width="170">
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="1.483985154642361" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-03 23:08">2025-02-03 23:04</span>&nbsp;
<a href="https://www.cnblogs.com/shanyou">张善友</a>&nbsp;
阅读(<span id="post_view_count">1844</span>)&nbsp;
评论(<span id="post_comment_count">4</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18697848" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18697848);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18697848', targetLink: 'https://www.cnblogs.com/shanyou/p/18697848', title: 'DeepSeek,你是懂.NET的！' })">举报</a>
</div>
        