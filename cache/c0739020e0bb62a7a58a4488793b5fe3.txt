
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/henjay724/p/18853064" title="发布于 2025-04-29 09:27">
    <span role="heading" aria-level="2">痞子衡嵌入式：在含多个i.MXRT的主从系统中共享一颗Flash启动的方法与实践(下篇)</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<hr>
<p>　　大家好，我是痞子衡，是正经搞技术的痞子。今天痞子衡给大家介绍的是<strong>多个i.MXRT共享一颗Flash启动的方法</strong>。</p>
<p>　　在 <a href="https://www.cnblogs.com/henjay724/p/18849909" target="_blank">《多个i.MXRT共享一颗Flash启动的方法与实践(上)》</a> 一文里痞子衡给大家从理论上介绍一种多 i.MXRT 共享 Flash 启动的方法，但是理论虽好，如果没有经过实践验证切实可行，不过是纸上谈兵，所以今天痞子衡就找了两个 i.MXRT 开发板来具体实操这种方法：</p>
<h3 id="一搭建硬件平台">一、搭建硬件平台</h3>
<p>　　理论上任意两块 i.MXRT 开发板均可以用作硬件测试平台（这里仅考虑一主一从，至于一主多从原理差不多），但是痞子衡手头 MIMXRT1010-EVK_Rev.C 开发板较多，就选用它来做测试吧，痞子衡对硬件做了如下改动：</p>
<ul>
<li>去除从板上 U13 - Flash</li>
<li>保留主板上 U13 - Flash，并且飞线连接到从板 U13（低速启动仅需 CS, SCLK, IO0, IO1）</li>
<li>主板主芯片 GPIO_11 信号（R1870 靠主芯片端，非 D25 LED 端）连到从板主芯片 POR_B（SW3 的 Pin3/4）</li>
</ul>
<p><img src="https://raw.githubusercontent.com/JayHeng/pzhmcu-picture/master/cnblogs/i.MXRT_ShareFlashBoot_board_rework.jpg" alt="" loading="lazy"></p>
<h3 id="二软件代码设计">二、软件代码设计</h3>
<p>　　有了硬件平台，现在开始设计代码。为了简单起见，主从 i.MXRT 共用一份 App（可以在条件分支里做区分）。因为 Flash 是共享的，所以 App 必须是 Non-XIP 性质。要让芯片 BootROM 去支持 Non-XIP 启动，得使用专用上位机工具（比如痞子衡的 <a href="https://github.com/JayHeng/NXP-MCUBootUtility" target="_blank" rel="noopener nofollow">MCUBootUtility</a> 或者恩智浦官方 SPT ）来下载程序镜像文件，这样稍微麻烦一点。为了避免下载程序的麻烦，我们可以简单设计一个 boot_loader 工程来拷贝和跳转 boot_app 程序。</p>
<pre><code class="language-text">代码仓库：
https://github.com/JayHeng/func-imxrt-flexspi-share-flash-boot-multiple-mcu

两个工程路径：
/boards/evkmimxrt1010/demo_apps/boot_loader
/boards/evkmimxrt1010/demo_apps/boot_app
</code></pre>
<h4 id="21-boot_loader-工程设计">2.1 boot_loader 工程设计</h4>
<p>　　boot_loader 工程是一个 XiP 工程，由芯片 BootROM 直接启动。我们可以直接基于 SDK 里的 hello_world 来修改（flexspi_nor target），先对它的启动头 FCB 做如下修改（1-bit SPI 30MHz Normal Read Mode）：</p>
<p><img src="https://raw.githubusercontent.com/JayHeng/pzhmcu-picture/master/cnblogs/i.MXRT_ShareFlashBoot_bootloader_fcb.png" alt="" loading="lazy"></p>
<p>　　boot_app 工程是一个 Non-XiP 工程，也可以基于 SDK 里的 hello_world 来修改（debug target），它生成的 binary 直接导入到 boot_loader 工程里，具体方法可参见 <a href="https://www.cnblogs.com/henjay724/p/16222895.html" target="_blank">《i.MXRT双核工程调试的三种方法(IAR篇)》</a> 一文里的 <strong>2.3 通用方法：双核工程有关联，主核加载从核</strong> 小节，这里不再赘述。</p>
<p>　　boot_loader 工程里有了 boot_app 数据以及链接地址，拷贝和跳转函数设计就比较简单了，都是通用代码。最终调稳定的 boot_loader 工程可以直接在 IDE 里下载到 Flash 里运行（需调试器连接到主板 SWD 口）。</p>
<h4 id="22-boot_app-工程设计">2.2 boot_app 工程设计</h4>
<p>　　现在来到最核心的 boot_app 工程设计，工程还是基于 hello_world，可以从串口接收简单的字符指令(A,B...)来做不同测试，目前设计了六个测试指令：</p>
<pre><code class="language-text">字符指令 A（仅适用主 i.MXRT）- 将 GPIO_11 输出电平由低变高控制 POR_B 信号以释放从 i.MXRT
字符指令 B（仅适用主 i.MXRT）- 将 GPIO_11 输出电平由高变低控制 POR_B 信号以复位保持从 i.MXRT
字符指令 C（适用主/从i.MXRT）- 初始化 Flash 相关引脚为 FlexSPI 功能
字符指令 D（适用主/从i.MXRT）- 恢复 Flash 相关引脚为默认 GPIO 状态
字符指令 E（适用主/从i.MXRT）- 以一线模式擦写读 U13 Flash
字符指令 F（仅适用从 i.MXRT）- 用定时器不断翻转 GPIO_11 来驱动 D25 LED 闪烁
</code></pre>
<p>　　这里需要特别说一下指令 A 和 E，这里面涉及到主/从 i.MXRT 芯片 FlexSPI 引脚共同驱动一个 Flash 的冲突问题。当主 i.MXRT 执行 A 指令来释放从 i.MXRT 时，需要先执行 D 指令（即调用如下函数）将 FlexSPI 引脚恢复到上电默认 GPIO 状态（BootROM 启动时已将这些引脚配置成了 FlexSPI 功能），否则从 i.MXRT 可能无法正常从 Flash 启动。</p>
<pre><code class="language-C">void bsp_deinit_flexspi_pins(void) 
{
    IOMUXC_SetPinMux(IOMUXC_GPIO_SD_06_GPIO2_IO06, 0U); 
    IOMUXC_SetPinMux(IOMUXC_GPIO_SD_07_GPIO2_IO07, 0U); 
    IOMUXC_SetPinMux(IOMUXC_GPIO_SD_09_GPIO2_IO09, 0U); 
    IOMUXC_SetPinMux(IOMUXC_GPIO_SD_10_GPIO2_IO10, 0U);
    IOMUXC_SetPinConfig(IOMUXC_GPIO_SD_06_GPIO2_IO06, 0x10A0U);
    IOMUXC_SetPinConfig(IOMUXC_GPIO_SD_07_GPIO2_IO07, 0x10A0U);
    IOMUXC_SetPinConfig(IOMUXC_GPIO_SD_09_GPIO2_IO09, 0x10A0U);
    IOMUXC_SetPinConfig(IOMUXC_GPIO_SD_10_GPIO2_IO10, 0x10A0U);
}
</code></pre>
<p>　　C 指令和 E 指令显然是结伴而行的，当从 i.MXRT 执行过 C,E 指令且仍处于激活状态时，如果主 i.MXRT 想正常执行 C,E 指令，要么先执行 B 指令直接将从 i.MXRT 复位保持住（FlexSPI 相关引脚配置也自动复位了），要么让从 i.MXRT 先执行下 D 指令。</p>
<h3 id="三在板卡上测试">三、在板卡上测试</h3>
<p>　　现在给板卡供电，将包含 boot_app 的 boot_loader 程序下载进 Flash，主板串口是 COM43，从板串口是 COM50，我们做一个快速测试，给主板直接发送 A 指令发现从板没有启动，但是执行过 D 指令后再发送 A 指令，这时候从板就正常启动了。此外主/从板也都能对 Flash 进行正常擦写，这证明我们的创新连接方法是切实可行的。</p>
<p><img src="https://raw.githubusercontent.com/JayHeng/pzhmcu-picture/master/cnblogs/i.MXRT_ShareFlashBoot_test_res.png" alt="" loading="lazy"></p>
<p>　　至此，多个i.MXRT共享一颗Flash启动的方法痞子衡便介绍完毕了，掌声在哪里~~~</p>
<h3 id="欢迎订阅">欢迎订阅</h3>
<p>文章会同时发布到我的 <a href="https://www.cnblogs.com/henjay724/" target="_blank">博客园</a>、<a href="https://blog.csdn.net/henjay724" target="_blank" rel="noopener nofollow">CSDN</a>、<a href="http://weixin.sogou.com/weixin?type=1&amp;query=%E7%97%9E%E5%AD%90%E8%A1%A1%E5%B5%8C%E5%85%A5%E5%BC%8F" target="_blank" rel="noopener nofollow">微信公众号</a>、<a href="https://www.zhihu.com/people/henjay724" target="_blank" rel="noopener nofollow">知乎</a>、<a href="https://www.eefocus.com/user/3876937/article/" target="_blank" rel="noopener nofollow">与非网</a>、<a href="https://blog.chinaaet.com/henjay724" target="_blank" rel="noopener nofollow">电子技术应用AET</a>、<a href="https://www.dianyuan.com/people/912268" target="_blank" rel="noopener nofollow">电子星球</a>、<a href="https://blog.51cto.com/henjay724" target="_blank" rel="noopener nofollow">51CTO</a> 平台上。</p>
<p>微信搜索"<strong>痞子衡嵌入式</strong>"或者扫描下面二维码，就可以在手机上第一时间看了哦。</p>
<p><img src="https://raw.githubusercontent.com/JayHeng/pzhmcu-picture/master/github/pzhMcu_qrcode_258x258.jpg" alt="" loading="lazy"></p>

</div>
<div id="MySignature" role="contentinfo">
    <div class="autograph"> 
  <p style="font-family: 楷体; font-size: 15px">&nbsp;&nbsp;最后欢迎关注痞子衡个人微信公众号【痞子衡嵌入式】，一个专注嵌入式技术的公众号，跟着痞子衡一起玩转嵌入式。</p>

  <img style="float: left" src="https://img2022.cnblogs.com/blog/623659/202211/623659-20221116165755872-427238307.jpg" alt="痞子衡嵌入式-微信二维码" class="img_avatar">

  <img style="float: right" src="http://henjay724.com/image/cnblogs/baogeMcu_payment_wechat_150x150.png" alt="痞子衡嵌入式-微信收款二维码" class="img_avatar">

  <img style="float: right" src="http://henjay724.com/image/cnblogs/baogeMcu_payment_alipay_150x150.jpg" alt="痞子衡嵌入式-支付宝收款二维码" class="img_avatar">

<br>
  <p>&nbsp;&nbsp;衡杰(痞子衡)，目前就职于某全球顶级半导体原厂MCU系统部门，担任高级嵌入式系统应用工程师。</p>

  <p>&nbsp;&nbsp;专栏内所有文章的转载请注明出处：<a href="http://www.cnblogs.com/henjay724/" target="_blank">http://www.cnblogs.com/henjay724/</a></p>

  <p>&nbsp;&nbsp;与痞子衡进一步交流或咨询业务合作请发邮件至 <a href="hengjie1989@foxmail.com" target="_blank">hengjie1989@foxmail.com</a></p>

  <p>&nbsp;&nbsp;可以关注痞子衡的Github主页 <a href="https://github.com/JayHeng" target="_blank">https://github.com/JayHeng</a>，有很多好玩的嵌入式项目。</p>

  <p><font color="yellow">&nbsp;&nbsp;关于专栏文章有任何疑问请直接在博客下面留言，痞子衡会及时回复免费(划重点)答疑。</font></p>

  <p><font color="red">&nbsp;&nbsp;痞子衡邮箱已被私信挤爆，技术问题不推荐私信，坚持私信请先扫码付款(5元起步)再发。</font></p>
<br>
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.06744155795717592" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-29 09:28">2025-04-29 09:27</span>&nbsp;
<a href="https://www.cnblogs.com/henjay724">痞子衡</a>&nbsp;
阅读(<span id="post_view_count">1</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18853064);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18853064', targetLink: 'https://www.cnblogs.com/henjay724/p/18853064', title: '痞子衡嵌入式：在含多个i.MXRT的主从系统中共享一颗Flash启动的方法与实践(下篇)' })">举报</a>
</div>
        