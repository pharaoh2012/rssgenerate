
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wuyuegb2312/p/18977312" title="发布于 2025-07-11 11:23">
    <span role="heading" aria-level="2">解决Dify的Ollama插件添加模型时保存成功但模型为空的问题</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        Windows+Docker+Dify+本地运行Ollama，添加模型提示保存成功但是看不到任何模型的解决方法
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>最近组里安排了点调研Dify任务。我跟着<a href="https://www.cnblogs.com/LaiYun/p/18808736" target="_blank">基于Docker+DeepSeek+Dify ：搭建企业级本地私有化知识库超详细教程</a>一步一步走，前面都挺顺利，但在Dify的Ollama中引入大模型这一步卡住了：按照原文，我添加了本地安装的deepseek-r1:1.5b，点击“保存”，提示“保存成功”但模型列表却是空的。</p>
<p>我摸索了半天，改了一通配置终于搞定，其中关键的一步配置在CXXN上看到了一些蛛丝马迹，但CXXN搞的付费订阅非常恶心，我从其他渠道弄明白以后，总结了一下自己做的操作，共享出来。</p>
<h1 id="问题的根因">问题的根因</h1>
<ul>
<li>Dify默认配置对插件安装过程的​​超时限制较短​​，且依赖下载可能因网络问题失败</li>
<li>确保 Ollama 插件有足够时间完成安装，并通过国内镜像源加速依赖下载</li>
</ul>
<h1 id="解决方法">解决方法</h1>
<p>假定你已经在Windows环境完成了Docker安装、Dify镜像的下载和启动、Ollama的本地安装，要在Dify里的Ollama插件添加大模型：<br>
<img src="https://img2024.cnblogs.com/blog/228024/202507/228024-20250710165634450-386571056.png" alt="image" loading="lazy"></p>
<p>先把Dify镜像停掉：去dify/docker目录下执行</p>
<blockquote>
<p>docker-compose down</p>
</blockquote>
<p>可以看到关联的镜像状态都是<code>Removed</code><br>
<img src="https://img2024.cnblogs.com/blog/228024/202507/228024-20250710165901822-1164947329.png" alt="image" loading="lazy"></p>
<p>编辑dify/docker/docker-compose.yaml，在<code>environment</code>部分增加</p>
<blockquote>
<p>PYTHON_ENV_INIT_TIMEOUT: 600  # 延长超时时间（默认值较低可能导致安装超时）<br>
PIP_MIRROR_URL: "<a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noopener nofollow">https://pypi.tuna.tsinghua.edu.cn/simple</a>"  # 替换为国内镜像源加速依赖安装</p>
</blockquote>
<p>重启dify</p>
<blockquote>
<p>docker-compose up -d</p>
</blockquote>
<p>先看下Docker的日志，出现了一些相关的信息：<br>
<img src="https://img2024.cnblogs.com/blog/228024/202507/228024-20250710170523341-492099456.png" alt="image" loading="lazy"><br>
等到Ollama安装完成时，再回到Dify的Ollama添加大模型，发现之前保存的模型都出现，可以继续下一步了，Good Job！<br>
<img src="https://img2024.cnblogs.com/blog/228024/202507/228024-20250710170604573-1219887943.png" alt="image" loading="lazy"></p>
<h1 id="其他的排查手段和配置更改">其他的排查手段和配置更改</h1>
<p>在排查过程中，我还做了一些其他配置变更，关系应该不大但是还是记录下，便于后续查阅。</p>
<h2 id="如何判断docker中运行的dify能访问本地安装的ollama">如何判断Docker中运行的Dify能访问本地安装的Ollama？</h2>
<p>Windows/Mac是默认支持的，Linux需要一些配置。进入Dify运行中的镜像，执行<code>curl http://host.docker.internal:11434</code>确认。还可以执行<code>curl http://host.docker.internal:11434/api/tags</code>确认ollama已安装的模型。</p>
<p><img src="https://img2024.cnblogs.com/blog/228024/202507/228024-20250711111241510-1245224322.png" alt="image" loading="lazy"></p>
<h2 id="ollama是否要手动启动执行ollama-serve">Ollama是否要手动启动（执行ollama serve）？</h2>
<p>Windows确定它在运行即可，如果在运行就不需要再次执行。<br>
<img src="https://img2024.cnblogs.com/blog/228024/202507/228024-20250711111828074-1668272951.png" alt="image" loading="lazy"></p>
<h2 id="是否要降低ollama版本到015x">是否要降低Ollama版本到0.15.x？</h2>
<p>没必要。Ollama的版本号遵循语义化版本规范，看上去比较跳跃：如1.6.0 → 0.15.8 → 1.4.1，某些博文提到添加模型不成功可以通过降低版本到0.15.x来解决。但我在最新的1.6.0通过上文中的配置也解决了这个问题。</p>
<h2 id="ollama的环境变量是否是必须的">Ollama的环境变量是否是必须的？</h2>
<p>也许不是必须的，但是在我之前的尝试里已经添加过了：<code>OLLAMA_HOST：0.0.0.0</code>、<code>OLLAMA_ORIGING：*</code></p>
<h2 id="配置变更后重启dify服务的方法">配置变更后重启Dify服务的方法</h2>
<p>配置变更后一般都要重启一下。这步不是在Docker Desktop，而是在Dify目录下，cmd中分别执行：</p>
<blockquote>
<p>docker-compose down<br>
docker-compose up -d</p>
</blockquote>
<h2 id="dify配置页面系统模型设置提示系统模型尚未完全配置是否有影响">Dify配置页面“系统模型设置”提示“系统模型尚未完全配置”是否有影响？</h2>
<p>没有任何影响。实际上当你配置好LLM和TEXT EMBEDDING两种模型后，这个提示就会消失。</p>
<h1 id="附dockerdeepseekdify安装全流程简述win10版">附：Docker+DeepSeek+Dify安装全流程简述（Win10版）</h1>
<p>为了便于查阅和后续的复用，我简单总结了一下整个流程。完整版可以看<a href="https://www.cnblogs.com/LaiYun/p/18808736" target="_blank">基于Docker+DeepSeek+Dify ：搭建企业级本地私有化知识库超详细教程</a></p>
<ol>
<li>下载安装docker、WSL，确定Docker Desktop启动时右下角出现<code>Engine running</code><br>
1.1 (可选)迁移docker镜像路径：Settings-&gt;Resources-&gt;Disk image location<br>
1.2 (可选，国内一般必须)配置国内镜像源：Settings-&gt; Docker Engine<br>
1.3 (可选)拉取镜像，cmd中<code>docker pull hello-world</code></li>
<li>安装Omalla及DeepSeek等大模型（本地版）<br>
2.1 <a href="https://ollama.com/" target="_blank" rel="noopener nofollow">Ollama官网</a>下载<br>
2.2 安装，(可选，可以通过特殊方法改变安装路径), cmd中ollama -v可以看到版本即表示安装成功<br>
2.3 安装DeepSeek等大模型<br>
2.3.1 在<a href="https://ollama.com/" target="_blank" rel="noopener nofollow">Ollama官网</a>的models中找到对应模型及版本，点击复制按钮获取全名，以deepseek-r1:1.5b为例，cmd输入<code>ollama run deepseek-r1:1.5b</code>开始下载<br>
2.3.2 下载完成即进入对话模式<br>
2.4 (可选)安装ChatBox AI<br>
2.4.1 选择Ollama API即可图形化使用本地的DeepSeek<br>
2.4.2 连接Ollama失败时新增两个环境变量<code>OLLAMA_HOST：0.0.0.0</code>、<code>OLLAMA_ORIGING：*</code>，需重启Ollama</li>
<li>安装Dify<br>
3.1 去<a href="https://github.com/langgenius/dify" target="_blank" rel="noopener nofollow">Dify的Github</a>，可以git clone也可以下载最新版的zip包直接解压到目标路径<br>
3.2 .env.example复制并重命名为.env<br>
3.3 在Dify目录拉去依赖<code>docker-compose up -d</code>，完成后在docker中确认镜像都在运行中</li>
<li>Dify配置<br>
4.1 进入本地Dify：<a href="http://127.0.0.1/%EF%BC%8C%E5%88%9B%E5%BB%BA%E7%AE%A1%E7%90%86%E5%91%98%E7%94%A8%E6%88%B7" target="_blank" rel="noopener nofollow">http://127.0.0.1/，创建管理员用户</a><br>
4.2 右上角头像，设置-&gt;模型供应商，添加Ollama插件<br>
4.3 Ollama插件中添加已安装的模型：模型名称为带版本号的全称，URL为<code>http://host.docker.internal:11434</code>。如果添加提示成功但仍然没有模型，参考正文的解决方法。</li>
<li>创建应用，开始使用。</li>
</ol>

</div>
<div id="MySignature" role="contentinfo">
    <div id="AllanboltSignature">
        <p id="PSignature" style="border-top: #e0e0e0 1px dashed; border-right: #e0e0e0 1px dashed; border-bottom: #e0e0e0 1px dashed; border-left: #e0e0e0 1px dashed;
            padding-top: 10px;padding-right: 10px;padding-bottom: 10px;padding-left: 60px;
            font-family: 微软雅黑; font-size:11px;">
            <br>
            作者：<a href="http://www.cnblogs.com/wuyuegb2312" target="_blank">五岳</a>
            <br>
            出处：<a href="http://www.cnblogs.com/wuyuegb2312" target="_blank">http://www.cnblogs.com/wuyuegb2312</a>
            <br>
            对于标题未标注为“转载”的文章均为原创，其版权归作者所有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文连接，否则保留追究法律责任的权利。
        </p>
    　</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.003472222222222222" data-date-updated="2025-07-11 11:28">2025-07-11 11:23</span>&nbsp;
<a href="https://www.cnblogs.com/wuyuegb2312">五岳</a>&nbsp;
阅读(<span id="post_view_count">108</span>)&nbsp;
评论(<span id="post_comment_count">1</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18977312);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18977312', targetLink: 'https://www.cnblogs.com/wuyuegb2312/p/18977312', title: '解决Dify的Ollama插件添加模型时保存成功但模型为空的问题' })">举报</a>
</div>
        