
	<h1 class="postTitle"><a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/szw/p/19051867" title="发布于 2025-08-25 08:20">
    <span role="heading" aria-level="2">微信 SDK + Senparc.AI + MCP 打造微信 AI 开发助手（二）：在 Cursor、VS Code 等 IDE 中自动编写</span>
    

</a>
</h1>
	<div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h2>概述</h2>
<p>　　在上一篇《<a href="https://www.cnblogs.com/szw/p/19051823" target="_blank">微信 SDK + Senparc.AI + MCP 打造微信 AI 开发助手（一）：网页版</a>》中，我们介绍了基于 Senparc.Weixin SDK + Senparc.AI + MCP 如何完成网页端的代码推荐生成服务。</p>
<p>　　在相关过程中，我们已经提前看到了 MCP（SSE）的相关 endpoint，以及工作原理，有了 MCP 的 endpoint，我们就可以把相关的能力赋予到 IDE 中直接编写。</p>
<p>&nbsp;</p>
<h2>案例资源</h2>
<ol>
<li>开源微信 SDK：<a href="https://github.com/JeffreySu/WeiXinMPSDK" target="_blank" rel="noopener nofollow">https://github.com/JeffreySu/WeiXinMPSDK</a></li>
<li>MCP 地址：<a href="https://www.ncf.pub/mcp-senparc-xncf-weixinmanager/sse" target="_blank" rel="noopener nofollow">https://www.ncf.pub/mcp-senparc-xncf-weixinmanager/sse</a>&nbsp;</li>
<li>QQ 交流群：553198593</li>
</ol>
<p>　　本文的网页版案例主要集中在微信 SDK。</p>
<p>&nbsp;</p>
<h2>IDE 的 MCP 设置</h2>
<p>　　以下操作教程以 <a href="https://cursor.com" target="_blank" rel="noopener nofollow">Cursor</a> 为例，VS Code、GitHub Copilot、LLM Studio 等操作过程类似。</p>
<p>&nbsp;</p>
<p><strong>第一步：打开 MCP 配置</strong></p>
<p>　　打开 Cursor，进入设置（点击右上角的<img src="https://img2024.cnblogs.com/blog/28384/202508/28384-20250822003007075-593629798.png" alt="image" width="45" height="44" loading="lazy">），左侧菜单选择“Tools &amp; Integrations”，右侧点击底部 New MCP Server 按钮。</p>
<p style="text-align: center"><img src="https://img2024.cnblogs.com/blog/28384/202508/28384-20250822003245477-1342970584.png" alt="image" width="840" height="559" loading="lazy"></p>
<p>&nbsp;　　随后将打开 mcp.json 配置文件（和大部分其他平台兼容）,如：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">{
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">mcpServers</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
      </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">timemcp</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
        </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">command</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">cmd</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
        </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">args</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: [
          </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">/c</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
          </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">X:/Forked/mcp-csharp-sdk/samples/TestServerWithHosting/bin/Debug/net9.0/TestServerWithHosting.exe</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
        ]
      }</span><span style="color: rgba(0, 0, 0, 1)">
  }
}</span></pre>
</div>
<p>　　如果您以前没有进行过任何操作，也可能是空的。</p>
<p>&nbsp;</p>
<p><strong>第二步：插入微信 AI MCP 配置</strong></p>
<p>&nbsp;　　插入微信 AI MCP 的配置到 "mcpServers" 节点下：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">{
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">mcpServers</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
      </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">其他节点...</span>
      <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">NCF.pub-WeChat-MCP</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
          </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">url</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">https://www.ncf.pub/mcp-senparc-xncf-weixinmanager/sse</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
    }
  }
}</span></pre>
</div>
<p>　　保存，并回到“配置”页面，可以看到多了一条 "" 名称的 MCP 记录：</p>
<p style="text-align: center"><img src="https://img2024.cnblogs.com/blog/28384/202508/28384-20250822174213015-1405169274.png" alt="image" width="589" height="72" loading="lazy"></p>
<p>　　我们可以展开 tools 列表，查看到所有相关说明：</p>
<p style="text-align: center"><img src="https://img2024.cnblogs.com/blog/28384/202508/28384-20250822174602458-1271671648.png" alt="image" width="597" height="186" loading="lazy"></p>
<p>&nbsp;</p>
<h2>开始编程&nbsp;</h2>
<p>　　配置完 MCP 之后，我们可以让 AI 直接帮我们编写代码。例如，我已经有以下代码：</p>
<div class="cnblogs_code">
<pre>        <span style="color: rgba(0, 0, 255, 1)">public</span> IActionResult AddAtricle(<span style="color: rgba(0, 0, 255, 1)">string</span> title, <span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)"> content)
        {
            </span><span style="color: rgba(0, 0, 255, 1)">var</span> adminOpenId = <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">xxxx</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;
            </span><span style="color: rgba(0, 0, 255, 1)">var</span> appId = <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">appId</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;

            </span><span style="color: rgba(0, 0, 255, 1)">return</span> Content(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Test</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
        }</span></pre>
</div>
<p>&nbsp;&nbsp;</p>
<h3>对比测试 —— 不使用微信 AI 助手</h3>
<p>　　提示词：在 AddAtricle 方法中用微信SDK保存微信素材，并把结果发送给管理员</p>
<p>　　耗时：6 分钟，思考过程：</p>
<p><img src="https://img2024.cnblogs.com/blog/28384/202508/28384-20250823164623448-290575965.png" alt="image" width="471" height="843" loading="lazy" style="display: block; margin-left: auto; margin-right: auto"></p>
<p>&nbsp;</p>
<p>　　修改完代码如下：</p>
<div class="cnblogs_code"><img src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" id="code_img_closed_a819f2cf-023a-483b-af28-6aec2af84de8" class="code_img_closed"><img src="https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" id="code_img_opened_a819f2cf-023a-483b-af28-6aec2af84de8" class="code_img_opened" style="display: none">
<div id="cnblogs_code_open_a819f2cf-023a-483b-af28-6aec2af84de8" class="cnblogs_code_hide">
<pre>        <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
        <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 上传微信素材并发送给管理员
        </span><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
        <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="file"&gt;</span><span style="color: rgba(0, 128, 0, 1)">文件路径</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
        <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="type"&gt;</span><span style="color: rgba(0, 128, 0, 1)">媒体文件类型</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
        <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="adminOpenId"&gt;</span><span style="color: rgba(0, 128, 0, 1)">管理员OpenId</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
        <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;returns&gt;&lt;/returns&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">public</span> IActionResult UploadMaterialAndNotify(IFormFile file, <span style="color: rgba(0, 0, 255, 1)">string</span> type = <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">image</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(0, 0, 255, 1)">string</span> adminOpenId = <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">YOUR_ADMIN_OPENID</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)
        {
            </span><span style="color: rgba(0, 0, 255, 1)">try</span><span style="color: rgba(0, 0, 0, 1)">
            {
                </span><span style="color: rgba(0, 0, 255, 1)">if</span> (file == <span style="color: rgba(0, 0, 255, 1)">null</span> || file.Length == <span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">)
                {
                    </span><span style="color: rgba(0, 0, 255, 1)">return</span> Json(<span style="color: rgba(0, 0, 255, 1)">new</span> { success = <span style="color: rgba(0, 0, 255, 1)">false</span>, message = <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">请选择要上传的文件</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)"> });
                }

                </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 保存文件到临时目录</span>
                <span style="color: rgba(0, 0, 255, 1)">var</span> fileName =<span style="color: rgba(0, 0, 0, 1)"> file.FileName;
                </span><span style="color: rgba(0, 0, 255, 1)">var</span> filePath =<span style="color: rgba(0, 0, 0, 1)"> Path.Combine(Path.GetTempPath(), fileName);
                </span><span style="color: rgba(0, 0, 255, 1)">using</span> (<span style="color: rgba(0, 0, 255, 1)">var</span> stream = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> FileStream(filePath, FileMode.Create))
                {
                    file.CopyTo(stream);
                }

                </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 上传永久素材</span>
                <span style="color: rgba(0, 0, 255, 1)">var</span> mediaType = (UploadForeverMediaType)Enum.Parse(<span style="color: rgba(0, 0, 255, 1)">typeof</span>(UploadForeverMediaType), type, <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">);
                </span><span style="color: rgba(0, 0, 255, 1)">var</span> result =<span style="color: rgba(0, 0, 0, 1)"> Senparc.Weixin.MP.AdvancedAPIs.MediaApi.UploadForeverMedia(
                    Config.SenparcWeixinSetting.WeixinAppId,
                    filePath,
                    mediaType
                );

                </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 发送结果给管理员</span>
                <span style="color: rgba(0, 0, 255, 1)">var</span> message = $<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">素材上传成功！\n媒体文件类型：{type}\n文件名：{fileName}\nMediaId：{result.media_id}</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;
                </span><span style="color: rgba(0, 0, 255, 1)">var</span> sendResult =<span style="color: rgba(0, 0, 0, 1)"> Senparc.Weixin.MP.AdvancedAPIs.CustomApi.SendText(
                    Config.SenparcWeixinSetting.WeixinAppId,
                    adminOpenId,
                    message
                );

                </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 删除临时文件</span>
                <span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)"> (System.IO.File.Exists(filePath))
                {
                    System.IO.File.Delete(filePath);
                }

                </span><span style="color: rgba(0, 0, 255, 1)">return</span> Json(<span style="color: rgba(0, 0, 255, 1)">new</span> { success = <span style="color: rgba(0, 0, 255, 1)">true</span>, mediaId = result.media_id, message = <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">素材上传成功并已通知管理员</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)"> });
            }
            </span><span style="color: rgba(0, 0, 255, 1)">catch</span><span style="color: rgba(0, 0, 0, 1)"> (Exception ex)
            {
                </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 发送错误信息给管理员</span>
                <span style="color: rgba(0, 0, 255, 1)">try</span><span style="color: rgba(0, 0, 0, 1)">
                {
                    Senparc.Weixin.MP.AdvancedAPIs.CustomApi.SendText(
                        Config.SenparcWeixinSetting.WeixinAppId,
                        adminOpenId,
                        $</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">素材上传失败！\n错误信息：{ex.Message}</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
                    );
                }
                </span><span style="color: rgba(0, 0, 255, 1)">catch</span><span style="color: rgba(0, 0, 0, 1)"> { }

                </span><span style="color: rgba(0, 0, 255, 1)">return</span> Json(<span style="color: rgba(0, 0, 255, 1)">new</span> { success = <span style="color: rgba(0, 0, 255, 1)">false</span>, message = $<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">上传失败：{ex.Message}</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)"> });
            }
        }</span></pre>
</div>
<span class="cnblogs_code_collapse">View Code</span></div>
<p>&nbsp;</p>
<h3>对比测试 —— 使用微信 AI 助手&nbsp;</h3>
<p>　　提示词：<span style="text-decoration: underline"><strong>使用MCP，</strong></span>在 AddAtricle 方法中用微信SDK保存微信素材，并把结果发送给管理员</p>
<p>　　耗时：55 秒，思考过程：</p>
<div>
<div>&nbsp;
<p style="text-align: center"><img src="https://img2024.cnblogs.com/blog/28384/202508/28384-20250822180605776-190575325.png" alt="image" width="462" height="760" loading="lazy"></p>
<p>&nbsp;</p>
</div>
<div>　　生成结果：</div>
<div>
<div class="cnblogs_code"><img src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" id="code_img_closed_1c36f6a0-9b57-40cb-b0fc-75349c09e814" class="code_img_closed"><img src="https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" id="code_img_opened_1c36f6a0-9b57-40cb-b0fc-75349c09e814" class="code_img_opened" style="display: none">
<div id="cnblogs_code_open_1c36f6a0-9b57-40cb-b0fc-75349c09e814" class="cnblogs_code_hide">
<pre><span style="color: rgba(0, 128, 128, 1)"> 1</span> <span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">async</span> Task&lt;IActionResult&gt; AddAtricle(<span style="color: rgba(0, 0, 255, 1)">string</span> title, <span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)"> content)
</span><span style="color: rgba(0, 128, 128, 1)"> 2</span> <span style="color: rgba(0, 0, 0, 1)">        {
</span><span style="color: rgba(0, 128, 128, 1)"> 3</span>             <span style="color: rgba(0, 0, 255, 1)">var</span> adminOpenId =<span style="color: rgba(0, 0, 0, 1)"> Config.SenparcWeixinSetting.WeixinAppId;
</span><span style="color: rgba(0, 128, 128, 1)"> 4</span>             <span style="color: rgba(0, 0, 255, 1)">var</span> appId =<span style="color: rgba(0, 0, 0, 1)"> Config.SenparcWeixinSetting.WeixinAppId;
</span><span style="color: rgba(0, 128, 128, 1)"> 5</span> 
<span style="color: rgba(0, 128, 128, 1)"> 6</span>             <span style="color: rgba(0, 0, 255, 1)">try</span>
<span style="color: rgba(0, 128, 128, 1)"> 7</span> <span style="color: rgba(0, 0, 0, 1)">            {
</span><span style="color: rgba(0, 128, 128, 1)"> 8</span>                 <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 1. Save content as permanent news material</span>
<span style="color: rgba(0, 128, 128, 1)"> 9</span>                 <span style="color: rgba(0, 0, 255, 1)">var</span> news = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> NewsModel[]
</span><span style="color: rgba(0, 128, 128, 1)">10</span> <span style="color: rgba(0, 0, 0, 1)">                {
</span><span style="color: rgba(0, 128, 128, 1)">11</span>                     <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> NewsModel
</span><span style="color: rgba(0, 128, 128, 1)">12</span> <span style="color: rgba(0, 0, 0, 1)">                    {
</span><span style="color: rgba(0, 128, 128, 1)">13</span>                         title =<span style="color: rgba(0, 0, 0, 1)"> title,
</span><span style="color: rgba(0, 128, 128, 1)">14</span>                         content =<span style="color: rgba(0, 0, 0, 1)"> content,
</span><span style="color: rgba(0, 128, 128, 1)">15</span>                         digest = content.Length &gt; <span style="color: rgba(128, 0, 128, 1)">100</span> ? content.Substring(<span style="color: rgba(128, 0, 128, 1)">0</span>, <span style="color: rgba(128, 0, 128, 1)">100</span><span style="color: rgba(0, 0, 0, 1)">) : content,
</span><span style="color: rgba(0, 128, 128, 1)">16</span>                         show_cover_pic = <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">1</span><span style="color: rgba(128, 0, 0, 1)">"</span>
<span style="color: rgba(0, 128, 128, 1)">17</span> <span style="color: rgba(0, 0, 0, 1)">                    }
</span><span style="color: rgba(0, 128, 128, 1)">18</span> <span style="color: rgba(0, 0, 0, 1)">                };
</span><span style="color: rgba(0, 128, 128, 1)">19</span> 
<span style="color: rgba(0, 128, 128, 1)">20</span>                 <span style="color: rgba(0, 0, 255, 1)">var</span> uploadResult = <span style="color: rgba(0, 0, 255, 1)">await</span> MediaApi.UploadNewsAsync(appId, <span style="color: rgba(128, 0, 128, 1)">10000</span><span style="color: rgba(0, 0, 0, 1)">, news);
</span><span style="color: rgba(0, 128, 128, 1)">21</span> 
<span style="color: rgba(0, 128, 128, 1)">22</span>                 <span style="color: rgba(0, 0, 255, 1)">if</span> (uploadResult.errcode ==<span style="color: rgba(0, 0, 0, 1)"> ReturnCode.请求成功)
</span><span style="color: rgba(0, 128, 128, 1)">23</span> <span style="color: rgba(0, 0, 0, 1)">                {
</span><span style="color: rgba(0, 128, 128, 1)">24</span>                     <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 2. Send the news to admin</span>
<span style="color: rgba(0, 128, 128, 1)">25</span>                     <span style="color: rgba(0, 0, 255, 1)">var</span> sendResult = <span style="color: rgba(0, 0, 255, 1)">await</span><span style="color: rgba(0, 0, 0, 1)"> CustomApi.SendMpNewsAsync(appId, adminOpenId, uploadResult.media_id);
</span><span style="color: rgba(0, 128, 128, 1)">26</span> 
<span style="color: rgba(0, 128, 128, 1)">27</span>                     <span style="color: rgba(0, 0, 255, 1)">if</span> (sendResult.errcode ==<span style="color: rgba(0, 0, 0, 1)"> ReturnCode.请求成功)
</span><span style="color: rgba(0, 128, 128, 1)">28</span> <span style="color: rgba(0, 0, 0, 1)">                    {
</span><span style="color: rgba(0, 128, 128, 1)">29</span>                         <span style="color: rgba(0, 0, 255, 1)">return</span> Json(<span style="color: rgba(0, 0, 255, 1)">new</span> { success = <span style="color: rgba(0, 0, 255, 1)">true</span>, message = <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">文章保存并发送成功！</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)"> });
</span><span style="color: rgba(0, 128, 128, 1)">30</span> <span style="color: rgba(0, 0, 0, 1)">                    }
</span><span style="color: rgba(0, 128, 128, 1)">31</span>                     <span style="color: rgba(0, 0, 255, 1)">else</span>
<span style="color: rgba(0, 128, 128, 1)">32</span> <span style="color: rgba(0, 0, 0, 1)">                    {
</span><span style="color: rgba(0, 128, 128, 1)">33</span>                         <span style="color: rgba(0, 0, 255, 1)">return</span> Json(<span style="color: rgba(0, 0, 255, 1)">new</span> { success = <span style="color: rgba(0, 0, 255, 1)">false</span>, message = $<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">发送失败：{sendResult.errmsg}</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)"> });
</span><span style="color: rgba(0, 128, 128, 1)">34</span> <span style="color: rgba(0, 0, 0, 1)">                    }
</span><span style="color: rgba(0, 128, 128, 1)">35</span> <span style="color: rgba(0, 0, 0, 1)">                }
</span><span style="color: rgba(0, 128, 128, 1)">36</span>                 <span style="color: rgba(0, 0, 255, 1)">else</span>
<span style="color: rgba(0, 128, 128, 1)">37</span> <span style="color: rgba(0, 0, 0, 1)">                {
</span><span style="color: rgba(0, 128, 128, 1)">38</span>                     <span style="color: rgba(0, 0, 255, 1)">return</span> Json(<span style="color: rgba(0, 0, 255, 1)">new</span> { success = <span style="color: rgba(0, 0, 255, 1)">false</span>, message = $<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">保存失败：{uploadResult.errmsg}</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)"> });
</span><span style="color: rgba(0, 128, 128, 1)">39</span> <span style="color: rgba(0, 0, 0, 1)">                }
</span><span style="color: rgba(0, 128, 128, 1)">40</span> <span style="color: rgba(0, 0, 0, 1)">            }
</span><span style="color: rgba(0, 128, 128, 1)">41</span>             <span style="color: rgba(0, 0, 255, 1)">catch</span><span style="color: rgba(0, 0, 0, 1)"> (Exception ex)
</span><span style="color: rgba(0, 128, 128, 1)">42</span> <span style="color: rgba(0, 0, 0, 1)">            {
</span><span style="color: rgba(0, 128, 128, 1)">43</span>                 <span style="color: rgba(0, 0, 255, 1)">return</span> Json(<span style="color: rgba(0, 0, 255, 1)">new</span> { success = <span style="color: rgba(0, 0, 255, 1)">false</span>, message = $<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">操作失败：{ex.Message}</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)"> });
</span><span style="color: rgba(0, 128, 128, 1)">44</span> <span style="color: rgba(0, 0, 0, 1)">            }
</span><span style="color: rgba(0, 128, 128, 1)">45</span>         }</pre>
</div>
<span class="cnblogs_code_collapse">View Code</span></div>
</div>
<div>&nbsp;</div>
<h3>对比结果分析</h3>
<p>　　通过上述的结果对比，我们可以看到 2 种方式的最终代码都能顺利编译通过，但是第一种 AI 直接生成的方式幻觉问题严重：从 AI 介入编程之前我们已经提供的原始方法中明确可以推理出来，这是一个包含标题 + 文字的纯文本类型的素材（AddAtricle(string title, string content)）。但是由于 AI 模型在预训练练过程中虽然学习到了盛派 SDK 的相关方法，却对于具体调用的方式细节，以及对于需要具体用哪个接口以及对应参数无法确定（上传不同类型的素材需要使用不同的接口参数），最后“随机”地选择了一个image（图片）类型的素材，导致任务失败。开发人员需要花费更多的时间重新生成或手动修改，这也是目前 AI 辅助编程过程中的最大痛点之一。</p>
<p>　　除此以外，在 IDE 的“思考”过程中，我们可以看到传统 AI 生成过程中，花了大量时间在解决方法调用和修复各类异常的事务上：</p>
<p style="text-align: center"><img src="https://img2024.cnblogs.com/blog/28384/202508/28384-20250822180853703-1860914910.png" alt="image" width="471" height="757" loading="lazy"></p>
<p>&nbsp;　　传统 AI 生成的整体的过程是：AI 先花了大量的时间思考和选（猜）一个方法填入编辑器，产后查看是否有错误发生，如果错了，根据错误信息再做处理，并且这个过程的处理结果带有很大的不确定性。</p>
<p>&nbsp;　　同样的提示词分别尝试了 5 次左右（清空所有上下文），结果都近似，从对比结果可以很清晰地看到，使用了微信 AI 助手的编程过程耗时更少，准确度更高，保留了原始的代码意图和上下文，并且准确地找到了接口。</p>
<p>&nbsp;　　当然，我们也发现了 2 种方式<strong>都发生了同一个错误</strong>：改写了 adminOpenId 的值，但是引用是错误的，这个是模型本身知识点没有覆盖或幻觉的问题，也是目前无法彻底解决的问题。</p>
<p>&nbsp;</p>
<p>分别 5 次测试统计结果：</p>
<table style="height: 541px; width: 496px" border="1">
<tbody>
<tr>
<td>&nbsp;</td>
<td>AI 直接写</td>
<td>使用微信 AI 助手</td>
</tr>
<tr>
<td>第一次</td>
<td>
<p>用时：6 分钟</p>
<p>结果：失败</p>
</td>
<td>
<p>用时：55 秒</p>
<p>结果：成功</p>
</td>
</tr>
<tr>
<td>第二次</td>
<td>
<p>用时：4 分钟</p>
<p>结果：失败</p>
</td>
<td>
<p>用时：1 分钟</p>
<p>结果：成功</p>
</td>
</tr>
<tr>
<td>第三次</td>
<td>
<p>用时：3 分钟</p>
<p>结果：失败</p>
</td>
<td>
<p>用时：40 秒</p>
<p>结果：成功</p>
</td>
</tr>
<tr>
<td>第四次</td>
<td>
<p>用时：6 分钟</p>
<p>结果：失败</p>
</td>
<td>
<p>用时： 1 分钟</p>
<p>结果：成功</p>
</td>
</tr>
<tr>
<td>第五次</td>
<td>
<p>用时：5 分钟</p>
<p>结果：失败</p>
</td>
<td>
<p>用时：1 分钟</p>
<p>结果：成功</p>
</td>
</tr>
<tr>
<td>
<p>第六次</p>
<p>（使用 Rule）</p>
</td>
<td>
<p>用时：4 分钟</p>
<p>结果：失败</p>
</td>
<td>
<p>用时：40 秒</p>
<p>结果：成功</p>
</td>
</tr>
</tbody>
</table>
<p style="text-align: center">注：超过 1 分钟的都已经省略秒数，不影响对比</p>
<p>&nbsp;</p>
<h2>进阶</h2>
<div>　　为了避免每次都输入重复的提示词要求，我们可以把使用微信 AI 助手的提示词加入到全局 <strong>Rule</strong> 中。操作方法如下：</div>
<div>　　第一步：进入 Cursor 配置界面（或其他编辑器也类似），选择左侧菜单 “Rules &amp;Memories”，在右侧点击“+ Add Rule”；</div>
<div>　　第二步：输入统一指令（如“<strong>如果问题涉及到微信 API&nbsp; 调用，优先使用&nbsp; MCP 工具 WeChat McpRoute 获取接口信息。</strong>”），界面如下：</div>
</div>
<p style="text-align: center"><img src="https://img2024.cnblogs.com/blog/28384/202508/28384-20250823171632239-1357166957.png" alt="image" width="867" height="534" loading="lazy"></p>
<p style="text-align: left">　　点击“Done”按钮保存，并回到常规编辑界面，只要输入最精简的提示词，即可使用微信 McpRouter 服务啦！</p>
<p style="text-align: left">　　测试效果：</p>
<p><img src="https://img2024.cnblogs.com/blog/28384/202508/28384-20250823172211918-176456512.png" alt="image" width="1410" height="805" loading="lazy" style="display: block; margin-left: auto; margin-right: auto"></p>
<p style="text-align: center">　　这次使用了原始的提示词，但是 IDE 仍然使用了 MCP，并且整个过程保持了高度的代码准确性，整个过程中只出现了 1 个错误并自动修复，完成时间 40 秒。&nbsp;</p>
<p style="text-align: left">&nbsp;</p>
<p>&nbsp;</p>
</div>
<div id="MySignature" role="contentinfo">
    <p>&nbsp;</p>

<p>
转载请注明出处和作者，谢谢！<br>
作者：JeffreySu  /  <a href="https://github.com/JeffreySu/" target="_blank">https://github.com/JeffreySu/</a><br>
博客：<a href="https://szw.cnblogs.com/" target="_blank">https://szw.cnblogs.com/</a><br>
</p>

<!--
<p>&nbsp;</p>
<p>
Senparc官方教程《微信开发深度解析：微信公众号、小程序高效开发秘籍》，耗时2年精心打造的微信开发权威教程，<a href="https://book.weixin.senparc.com/book/link?code=cnblogs-sign" target="_blank">点击这里，购买正版</a>！<br>
<a href="https://book.weixin.senparc.com/book/link?code=cnblogs-sign" target="_blank"><img src="https://images2017.cnblogs.com/blog/28384/201707/28384-20170730224601537-1461862917.png" width="300" alt="
微信开发深度解析：微信公众号、小程序高效开发秘籍"></a><br>

</p><a href="https://book.weixin.senparc.com/book/link?code=cnblogs-sign" target="_blank">
<p>&nbsp;</p></a>


<div style="margin-bottom: 30px">
Senparc 官方微信开发视频教程：《微信公众号+小程序快速开发》，<a href="https://book.weixin.senparc.com/book/videolinknetease?code=sdk-sign" target="_blank">点击这里点击观看</a>。<br>

<a href="https://book.weixin.senparc.com/book/videolinknetease?code=sdk-sign" target="_blank"><img src="https://images2017.cnblogs.com/blog/28384/201802/28384-20180208161432998-278885671.png" width="300" alt="Senparc 官方微信开发视频教程：《微信公众号+小程序快速开发》"></a>

</div>-->
</div>
<div class="clear"></div>

	<div class="postDesc">posted on 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-08-25 08:20">2025-08-25 08:20</span>&nbsp;
<a href="https://www.cnblogs.com/szw">SZW</a>&nbsp;
阅读(<span id="post_view_count">33</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19051867);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19051867', targetLink: 'https://www.cnblogs.com/szw/p/19051867', title: '微信 SDK + Senparc.AI + MCP 打造微信 AI 开发助手（二）：在 Cursor、VS Code 等 IDE 中自动编写' })">举报</a>
</div>
