
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chaoguo1234/p/18788098" title="发布于 2025-03-23 17:50">
    <span role="heading" aria-level="2">WebKit Inside: px 与 pt</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        前端CSS中的px是物理像素，还是逻辑像素？
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>前端<code>CSS</code>中的<code>px</code>是物理像素，还是逻辑像素？</p>
<p>它和<code>iOS</code>中的<code>pt</code>是怎样的关系？</p>
<p>下面我们就来看下<code>CSS</code>中的<code>px</code>实现。</p>
<p>假设有如下<code>CSS</code>字号设置:</p>
<pre><code class="language-css">div {
  font-size: 100px;
}
</code></pre>
<p>最终处理<code>px</code>的调用栈如下图所示:</p>
<p><img src="https://img2024.cnblogs.com/blog/489427/202503/489427-20250323174736421-1231009807.png" alt="image" loading="lazy"></p>
<p>从左边调用栈可知，这个过程发生在<code>CSS</code>的匹配。</p>
<p>详情可以参看<a href="https://www.cnblogs.com/chaoguo1234/p/18778101" title="《WebKit Inside: CSS 的匹配》" target="_blank">《WebKit Inside: CSS 的匹配》</a>。</p>
<p>从右下角红框输出可知，当前正在处理<code>CSS</code>中<code>font-size</code>属性值:<code>100px</code>。</p>
<p>从代码可以看到，如果是<code>px</code>，直接从<code>switch-case</code>语句中跳出，不做任何换算处理，属性值<code>100</code>被直接存储下来使用。</p>
<p>那么就可以得出结论，<strong>CSS 中的 px 是逻辑像素，等价于 iOS 中的 pt</strong>。</p>
<p><img src="https://img2024.cnblogs.com/blog/489427/202503/489427-20250323174750886-1548876976.png" alt="image" loading="lazy"></p>
<p>在<code>CSS</code>中，也有一个<code>pt</code>，那么它和<code>iOS</code>中的<code>pt</code>是什么关系呢？</p>
<p>还是上面的<code>CSS</code>字号设置，不同的是，将字号单位从<code>px</code>修改为<code>pt</code>:</p>
<pre><code class="language-css">div {
  font-size: 100pt;
}
</code></pre>
<p>最终处理<code>pt</code>的调用栈如下:</p>
<p><img src="https://img2024.cnblogs.com/blog/489427/202503/489427-20250323174808957-634255210.png" alt="image" loading="lazy"></p>
<p>整个处理过程和<code>px</code>类似。</p>
<p>不同的地方在于，最终的值不是支持存储<code>100</code>，而是经过了转换。</p>
<p>转换的关键就是<code>CSS::pixelsPerPt</code>，从控制台的输出可以看到，这个值为<code>1.3333</code>。</p>
<p>通过在代码中搜索，<code>CSS::pixelsPerPt</code>定义在<code>CSSUnits.h</code>文件中:</p>
<p><img src="https://img2024.cnblogs.com/blog/489427/202503/489427-20250323174824099-119960228.png" alt="image" loading="lazy"></p>
<p>从定义中看，<code>CSS::pixelsPerPt</code>由另外两个变量计算而来:</p>
<p><code>CSS::pixelsPerInch = 96</code></p>
<p><code>CSS::pointsPerInch = 72</code></p>
<p><code>CSS::pixelsPerInch</code>表示一英寸有多少像素，这里的像素是物理像素。</p>
<p><code>CSS::pointsPerInch</code>表示一英寸有多少点，这里的点是在打印时使用的单位。</p>
<p><code>CSS::pixelsPerPt</code>就等于<code>CSS::pixelsPerInch</code>除以<code>CSS::pointsPerInch</code>。</p>
<p>那么可以得出结论，<strong>CSS 中的 pt 是打印时使用的单位，和 iOS 中的 pt 不是一回事</strong>。</p>
<p><img src="https://img2024.cnblogs.com/blog/489427/202503/489427-20250323174836315-1842528807.png" alt="image" loading="lazy"></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.35274170264814814" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-23 17:51">2025-03-23 17:50</span>&nbsp;
<a href="https://www.cnblogs.com/chaoguo1234">chaoguo1234</a>&nbsp;
阅读(<span id="post_view_count">12</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18788098" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18788098);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18788098', targetLink: 'https://www.cnblogs.com/chaoguo1234/p/18788098', title: 'WebKit Inside: px 与 pt' })">举报</a>
</div>
        