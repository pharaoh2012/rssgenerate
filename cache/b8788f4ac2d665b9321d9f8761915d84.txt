<!----> <meta itemprop="headline" content="前端开发又幸福了，Cursor + Figma MCP 快速还原设计稿"> <meta itemprop="keywords" content="前端,Cursor,MCP"> <meta itemprop="datePublished" content="2025-03-11T06:31:12.000Z"> <meta itemprop="image" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-128.png~tplv-t2oaga2asx-image.image"> <div itemprop="author" itemscope="itemscope" itemtype="http://schema.org/Person"><meta itemprop="name" content="代码小学僧"> <meta itemprop="url" content="https://juejin.cn/user/255519436842030"></div> <div itemprop="publisher" itemscope="itemscope" itemtype="http://schema.org/Organization"><meta itemprop="name" content="掘金"> <div itemprop="logo" itemscope="itemscope" itemtype="https://schema.org/ImageObject"><meta itemprop="url" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-white-180.png~tplv-t2oaga2asx-image.image"> <meta itemprop="width" content="180"> <meta itemprop="height" content="180"></div></div> <h1 class="article-title" data-v-7956ab04="">
            前端开发又幸福了，Cursor + Figma MCP 快速还原设计稿
            <!----> <!----></h1> <div class="author-info-block block-hidden" data-v-7956ab04=""><div class="author-info-box" data-v-7956ab04=""><div class="author-name" data-v-7956ab04=""><a href="/user/255519436842030/posts" target="_blank" rel="" class="jj-link username username ellipsis" data-v-65b50b51="" data-v-1800aadb="" data-v-7956ab04=""><span class="name" style="max-width:160px;" data-v-65b50b51="" data-v-1800aadb="">
    代码小学僧
  </span> <!----> <!----> <!----> </a></div> <div class="meta-box" data-v-7956ab04=""><time datetime="2025-03-11T06:31:12.000Z" title="Tue Mar 11 2025 06:31:12 GMT+0000 (Coordinated Universal Time)" class="time" data-v-7956ab04="">
                    2025-03-11
                  </time> <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="read-icon" data-v-7956ab04=""><path d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor" data-v-7956ab04=""></path><circle cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor" data-v-7956ab04=""></circle></svg> <span class="views-count" data-v-7956ab04="">
                    14,320
                  </span> <span class="read-time" data-v-7956ab04=""><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" data-v-7956ab04=""><rect width="16" height="16" fill="none" data-v-7956ab04=""></rect><circle cx="8" cy="8" r="5.65625" stroke="#8A919F" data-v-7956ab04=""></circle><path d="M7.69141 5.18652V8.30924H10.8141" stroke="#8A919F" stroke-linecap="round" stroke-linejoin="round" data-v-7956ab04=""></path></svg>
                    阅读3分钟
                  </span> <!----></div></div> <div style="flex:1;" data-v-7956ab04=""></div> <!----> <!----></div> <!----> <!----> <!----> <!----> <div id="article-root" itemprop="articleBody" class="main" data-v-7956ab04=""><div class="article-viewer markdown-body result"><h2 data-id="heading-0">前言</h2>
<p>昨天朋友发给我一个开源项目 <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2FGLips%2FFigma-Context-MCP" target="_blank" title="https://github.com/GLips/Figma-Context-MCP" ref="nofollow noopener noreferrer">github.com/GLips/Figma…</a> 是一个 Figma 的 MCP 服务。</p>
<p>MCP 是最近比较火的概念，你可能在推特经常能看到。我用自己的话理解，简单讲就是一个开放给 AI 应用访问外部某某平台，某某应用的一个接口，AI 可以通过 MCP 来获取到更具体的相关数据。</p>
<p>站内优秀文章更详细的可以看下这篇文章的介绍 <a href="https://juejin.cn/post/7478304240122134566" target="_blank" title="https://juejin.cn/post/7478304240122134566">juejin.cn/post/747830…</a> (下图来源自互联网蛮形象的)</p>
<img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/ee5bc741702646bbb4ade0b6d9137269~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5Luj56CB5bCP5a2m5YOn:q75.awebp?rk3s=f64ab15b&amp;x-expires=1744281012&amp;x-signature=biyepGjV%2BHoQPs01%2FheE69SGKR4%3D" alt="image.png" width="100%" loading="lazy">
<p>Cursor 不用介绍了吧。大名鼎鼎的 AI IDE <a href="https://link.juejin.cn?target=https%3A%2F%2Fwww.cursor.com%2F" target="_blank" title="https://www.cursor.com/" ref="nofollow noopener noreferrer">Cursor 官网</a> 他支持绑定 MCP 服务，我使用的 0.45 版本，应该此版本以上都支持。在 Setting 中找到 MCP Server 进行添加配置。</p>
<img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/f0a84b660cab4ddfb2f458a28db8f407~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5Luj56CB5bCP5a2m5YOn:q75.awebp?rk3s=f64ab15b&amp;x-expires=1744281012&amp;x-signature=adX1Ta453kWE7jSBSuHSVFkLuF0%3D" alt="image.png" width="100%" loading="lazy">
<p>我直接使用了下这个 Figma MCP + Cursor 感觉很不错，感恩开源。下面介绍下使用教程。</p>
<h2 data-id="heading-1">按照项目 Readme 操作</h2>
<p>在 Figma 点击头像然后进入 Setting 先创建一个 <code>Figma api-key</code>。</p>
<img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/8ac249559e2c4168b34825e5de99485e~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5Luj56CB5bCP5a2m5YOn:q75.awebp?rk3s=f64ab15b&amp;x-expires=1744281012&amp;x-signature=Qg7CVrhSoa5Xm05aVGZlDYiLpKM%3D" alt="image.png" width="100%" loading="lazy">
<p>给予一些权限。我这里给可读可写了。可自行修改。应该是至少需要 Dev resources 可读的。</p>
<img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/ff3d1cebd02f4eda95cec21459415b67~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5Luj56CB5bCP5a2m5YOn:q75.awebp?rk3s=f64ab15b&amp;x-expires=1744281012&amp;x-signature=DF6BwcAyRDhFDT3WvSsEQNScVPE%3D" alt="image.png" width="100%" loading="lazy">
<p>复制下来生成的 <code>api-key</code> 然后在终端执行命令。</p>
<pre><code class="hljs language-shell" lang="shell">pnpx figma-developer-mcp --figma-api-key=&lt;your-figma-api-key&gt;
</code></pre>
<p>看到显示在本地 3333 端口启动服务了，就可以去 Cursor 链接了。</p>
<img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/6459f085abad4c2997777218a12ba935~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5Luj56CB5bCP5a2m5YOn:q75.awebp?rk3s=f64ab15b&amp;x-expires=1744281012&amp;x-signature=VHh9bf7oQ5WeCtD4FEJvMpd3Xl0%3D" alt="image.png" width="100%" loading="lazy">
<p>添加上亮小绿点就表示链接成功了。</p>
<blockquote>
<p>2025.3.20补充内容最新版本 cursor 点击添加 MCP 是直接写入 json 文件了如下</p>
</blockquote>
<pre><code class="hljs language-json" lang="json"><span class="hljs-punctuation">{</span>
  <span class="hljs-attr">"mcpServers"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>
    <span class="hljs-attr">"Figma"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>
      <span class="hljs-attr">"url"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"http://localhost:3333/sse"</span>
    <span class="hljs-punctuation">}</span>
  <span class="hljs-punctuation">}</span>
<span class="hljs-punctuation">}</span>
</code></pre>
<img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/efcd0e58b75840aa9a1e4461582cc165~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5Luj56CB5bCP5a2m5YOn:q75.awebp?rk3s=f64ab15b&amp;x-expires=1744281012&amp;x-signature=xglp0C%2BcMxBP5w0Ccf2eZ2NKDG0%3D" alt="image.png" width="100%" loading="lazy">
<img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/8369de49d3564d16ac45ebfb4021ec0a~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5Luj56CB5bCP5a2m5YOn:q75.awebp?rk3s=f64ab15b&amp;x-expires=1744281012&amp;x-signature=tZzjzyTfG8U5Cyr1IDG9LG9%2Fz6Q%3D" alt="image.png" width="100%" loading="lazy">
<p>在 Figma 复制选中的模块</p>
<img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/8903143a83a348778bbda20cb7e76872~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5Luj56CB5bCP5a2m5YOn:q75.awebp?rk3s=f64ab15b&amp;x-expires=1744281012&amp;x-signature=DPHzIq7xxjYLFWrstHk9tkyAcSc%3D" alt="image.png" width="100%" loading="lazy">
<p>指定要写入的文件，并提出相对应的要求。他就开始写了。（好像开启 agent 模式效果更佳，我直接使用的 nomal，朋友用 nomal 读取不到 Figma）</p>
<img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/b78d59ae0972453faaba4eacb118f83f~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5Luj56CB5bCP5a2m5YOn:q75.awebp?rk3s=f64ab15b&amp;x-expires=1744281012&amp;x-signature=aFUdGHGCvkJuaboq%2FGtxtBPAF2E%3D" alt="image.png" width="100%" loading="lazy">
<p>最后的成品 下方是设计稿，上方是他一次性就实现的界面。还是很赞的，调整下高度和边距就可以用了。</p>
<img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/9eb360f3838c42dcbc5b69e18686de1c~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5Luj56CB5bCP5a2m5YOn:q75.awebp?rk3s=f64ab15b&amp;x-expires=1744281012&amp;x-signature=J7KW30%2FtH3NScXsT1K%2BO03ccXYo%3D" alt="image.png" width="100%" loading="lazy">
<pre><code class="hljs language-tsx" lang="tsx"><span class="hljs-keyword">import</span> <span class="hljs-title class_">ReactECharts</span> <span class="hljs-keyword">from</span> <span class="hljs-string">'echarts-for-react'</span>;

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">LineChart</span>(<span class="hljs-params"></span>) {
  <span class="hljs-keyword">const</span> data = [
    { <span class="hljs-attr">date</span>: <span class="hljs-string">'周一'</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">150</span> },
    { <span class="hljs-attr">date</span>: <span class="hljs-string">'周二'</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">230</span> },
    { <span class="hljs-attr">date</span>: <span class="hljs-string">'周三'</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">224</span> },
    { <span class="hljs-attr">date</span>: <span class="hljs-string">'周四'</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">218</span> },
    { <span class="hljs-attr">date</span>: <span class="hljs-string">'周五'</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">135</span> },
    { <span class="hljs-attr">date</span>: <span class="hljs-string">'周六'</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">147</span> },
    { <span class="hljs-attr">date</span>: <span class="hljs-string">'周日'</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">260</span> },
  ];

  <span class="hljs-keyword">const</span> option = {
    <span class="hljs-attr">tooltip</span>: {
      <span class="hljs-attr">trigger</span>: <span class="hljs-string">'axis'</span>,
      <span class="hljs-attr">backgroundColor</span>: <span class="hljs-string">'rgba(255, 255, 255, 0.9)'</span>,
      <span class="hljs-attr">borderWidth</span>: <span class="hljs-number">0</span>,
      <span class="hljs-attr">textStyle</span>: {
        <span class="hljs-attr">color</span>: <span class="hljs-string">'#333'</span>,
      },
    },
    <span class="hljs-attr">grid</span>: {
      <span class="hljs-attr">left</span>: <span class="hljs-string">'1%'</span>,
      <span class="hljs-attr">right</span>: <span class="hljs-string">'1%'</span>,
      <span class="hljs-attr">bottom</span>: <span class="hljs-string">'1%'</span>,
      <span class="hljs-attr">top</span>: <span class="hljs-string">'3%'</span>,
      <span class="hljs-attr">containLabel</span>: <span class="hljs-literal">true</span>,
    },
    <span class="hljs-attr">xAxis</span>: {
      <span class="hljs-attr">type</span>: <span class="hljs-string">'category'</span> <span class="hljs-keyword">as</span> <span class="hljs-keyword">const</span>,
      <span class="hljs-attr">boundaryGap</span>: <span class="hljs-literal">false</span>,
      <span class="hljs-attr">data</span>: data.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> item.<span class="hljs-property">date</span>),
      <span class="hljs-attr">axisLine</span>: {
        <span class="hljs-attr">lineStyle</span>: {
          <span class="hljs-attr">color</span>: <span class="hljs-string">'#E5E7EB'</span>,
        },
      },
      <span class="hljs-attr">axisLabel</span>: {
        <span class="hljs-attr">color</span>: <span class="hljs-string">'#6B7280'</span>,
      },
    },
    <span class="hljs-attr">yAxis</span>: {
      <span class="hljs-attr">type</span>: <span class="hljs-string">'value'</span> <span class="hljs-keyword">as</span> <span class="hljs-keyword">const</span>,
      <span class="hljs-attr">axisLine</span>: {
        <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span>,
      },
      <span class="hljs-attr">axisTick</span>: {
        <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span>,
      },
      <span class="hljs-attr">splitLine</span>: {
        <span class="hljs-attr">lineStyle</span>: {
          <span class="hljs-attr">color</span>: <span class="hljs-string">'#E5E7EB'</span>,
          <span class="hljs-attr">type</span>: <span class="hljs-string">'dashed'</span>,
        },
      },
      <span class="hljs-attr">axisLabel</span>: {
        <span class="hljs-attr">color</span>: <span class="hljs-string">'#6B7280'</span>,
      },
    },
    <span class="hljs-attr">series</span>: [
      {
        <span class="hljs-attr">name</span>: <span class="hljs-string">'客服消息量'</span>,
        <span class="hljs-attr">type</span>: <span class="hljs-string">'line'</span>,
        <span class="hljs-attr">smooth</span>: <span class="hljs-literal">true</span>,
        <span class="hljs-attr">data</span>: data.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> item.<span class="hljs-property">value</span>),
        <span class="hljs-attr">symbol</span>: <span class="hljs-string">'circle'</span>,
        <span class="hljs-attr">symbolSize</span>: <span class="hljs-number">6</span>,
        <span class="hljs-attr">itemStyle</span>: {
          <span class="hljs-attr">color</span>: <span class="hljs-string">'#1677FF'</span>,
        },
        <span class="hljs-attr">lineStyle</span>: {
          <span class="hljs-attr">width</span>: <span class="hljs-number">2</span>,
          <span class="hljs-attr">color</span>: <span class="hljs-string">'#1677FF'</span>,
        },
        <span class="hljs-attr">areaStyle</span>: {
          <span class="hljs-attr">color</span>: {
            <span class="hljs-attr">type</span>: <span class="hljs-string">'linear'</span>,
            <span class="hljs-attr">x</span>: <span class="hljs-number">0</span>,
            <span class="hljs-attr">y</span>: <span class="hljs-number">0</span>,
            <span class="hljs-attr">x2</span>: <span class="hljs-number">0</span>,
            <span class="hljs-attr">y2</span>: <span class="hljs-number">1</span>,
            <span class="hljs-attr">colorStops</span>: [
              {
                <span class="hljs-attr">offset</span>: <span class="hljs-number">0</span>,
                <span class="hljs-attr">color</span>: <span class="hljs-string">'rgba(22, 119, 255, 0.2)'</span>,
              },
              {
                <span class="hljs-attr">offset</span>: <span class="hljs-number">1</span>,
                <span class="hljs-attr">color</span>: <span class="hljs-string">'rgba(22, 119, 255, 0)'</span>,
              },
            ],
          },
        },
      },
    ],
  };

  <span class="hljs-keyword">return</span> (
    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">ReactECharts</span>
      <span class="hljs-attr">option</span>=<span class="hljs-string">{option}</span>
      <span class="hljs-attr">style</span>=<span class="hljs-string">{{</span> <span class="hljs-attr">height:</span> '<span class="hljs-attr">100</span>%', <span class="hljs-attr">width:</span> '<span class="hljs-attr">100</span>%', <span class="hljs-attr">display:</span> '<span class="hljs-attr">flex</span>', <span class="hljs-attr">justifyContent:</span> '<span class="hljs-attr">center</span>' }}
    /&gt;</span></span>
  );
}

</code></pre>
<h2 data-id="heading-2">注意事项</h2>
<p>如果使用的时候没成功的话请 check 以下事项</p>
<ul>
<li>检查生成的 <code>Figma api key</code> 权限是否足够</li>
<li>检查 MCP 服务是否亮绿灯</li>
<li>复制设计稿 selection 的时候使用设计师模式</li>
<li>升级 npm 版本 <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fgetcursor%2Fcursor%2Fissues%2F2833" target="_blank" title="https://github.com/getcursor/cursor/issues/2833" ref="nofollow noopener noreferrer">github.com/getcursor/c…</a></li>
<li>使用 agent 模式交流</li>
</ul>
<h2 data-id="heading-3">结语</h2>
<p>使用 Figma MCP 对比之前我直接截图给 AI 进行还原，进一步提升了准确性，原先 claude 是需要识别图片，现在可以直接读取 Figma 的元数据了。实现的效果更好了。感恩 AI，让我摸鱼时间更多了，逃~ 😂</p>
<p>有更好用的 MCP 欢迎大家在评论区分享，ღ( ´･ᴗ･` )比心。</p></div></div>