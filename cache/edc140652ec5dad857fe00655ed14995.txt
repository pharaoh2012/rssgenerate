
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/GuijiH6/p/18651665" title="发布于 2025-01-04 10:49">
    <span role="heading" aria-level="2">DVWA靶场Insecure CAPTCHA(不安全验证)漏洞所有级别通关教程及源码审计</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="insecure-captcha不安全验证">Insecure CAPTCHA(不安全验证)</h1>
<p><strong>Insecure CAPTCHA（不安全验证）</strong>漏洞指的是在实现  CAPTCHA（完全自动化公共图灵测试区分计算机和人类）机制时，未能有效保护用户输入的验证信息，从而使得攻击者能够绕过或破解该验证机制。这类漏洞通常出现在网络应用程序中，目的是防止自动化脚本（如机器人）对网站进行滥用，CAPTCHA全称为Completely Automated Public Turing Test to Tell Computers and Humans Apart，中文名字是<strong>全自动区分计算机和人类的图灵测试</strong></p>
<h2 id="low">low</h2>
<p>正常修改会报错</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20241230173304412.png" alt="" loading="lazy"></p>
<p>重新修改密码并抓包发送到重放器</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20241230173235594.png" alt="" loading="lazy"></p>
<p>将<strong>step=1</strong>修改为<strong>step=2</strong>，发包</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20241230173218133.png" alt="" loading="lazy"></p>
<p>修改成功</p>
<h3 id="源码审计">源码审计</h3>
<p>并没有什么过滤，设置了<strong>step=2</strong>才能修改，使用<code>**mysqli_real_escape_string**</code>可能SQL注入；使用了不安全的<strong>md5</strong>加密算法</p>
<pre><code class="language-php">&lt;?php

if (isset($_POST['Change']) &amp;&amp; ($_POST['step'] == '1')) { 
    // Step 1: 用户提交了第一个表单，并且是第一步
    $hide_form = true; // 标识隐藏CAPTCHA表单

    // 获取用户输入的新密码和确认密码
    $pass_new  = $_POST['password_new'];
    $pass_conf = $_POST['password_conf'];

    // 通过第三方服务检查CAPTCHA
    $resp = recaptcha_check_answer(
        $_DVWA['recaptcha_private_key'],
        $_POST['g-recaptcha-response']
    );

    // CAPTCHA验证未通过
    if (!$resp) {
        $html     .= "&lt;pre&gt;&lt;br /&gt;The CAPTCHA was incorrect. Please try again.&lt;/pre&gt;";
        $hide_form = false; // 如果错误，不隐藏表单
        return;
    } else {
        // CAPTCHA验证通过，检查两次输入的密码是否匹配
        if ($pass_new == $pass_conf) {
            // 如果匹配，让用户确认更改
            $html .= "
                &lt;pre&gt;&lt;br /&gt;You passed the CAPTCHA! Click the button to confirm your changes.&lt;br /&gt;&lt;/pre&gt;
                &lt;form action=\"#\" method=\"POST\"&gt;
                    &lt;input type=\"hidden\" name=\"step\" value=\"2\" /&gt;
                    &lt;input type=\"hidden\" name=\"password_new\" value=\"{$pass_new}\" /&gt;
                    &lt;input type=\"hidden\" name=\"password_conf\" value=\"{$pass_conf}\" /&gt;
                    &lt;input type=\"submit\" name=\"Change\" value=\"Change\" /&gt;
                &lt;/form&gt;";
        } else {
            // 两次输入的密码不匹配
            $html     .= "&lt;pre&gt;Both passwords must match.&lt;/pre&gt;";
            $hide_form = false; // 不隐藏表单，提示用户重新输入
        }
    }
}
if (isset($_POST['Change']) &amp;&amp; ($_POST['step'] == '2')) { 
    // Step 2: 用户提交确认后的表单，进行更改操作
    $hide_form = true; // 隐藏CAPTCHA表单

    // 获取用户输入的新密码和确认密码
    $pass_new  = $_POST['password_new'];
    $pass_conf = $_POST['password_conf'];

    // 确认两个密码匹配
    if ($pass_new == $pass_conf) {
        // 对特殊字符进行转义，防止SQL注入
        $pass_new = ((isset($GLOBALS["___mysqli_ston"]) &amp;&amp; is_object($GLOBALS["___mysqli_ston"])) ? mysqli_real_escape_string($GLOBALS["___mysqli_ston"], $pass_new) : "");

        // 将密码进行md5加密（注：md5已不再安全，实际应用中应使用更安全的加密方式）
        $pass_new = md5($pass_new);

        // 更新数据库中当前用户的密码
        $insert = "UPDATE `users` SET password = '$pass_new' WHERE user = '" . dvwaCurrentUser() . "';";
        $result = mysqli_query($GLOBALS["___mysqli_ston"], $insert) or die('&lt;pre&gt;' . ((is_object($GLOBALS["___mysqli_ston"])) ? mysqli_error($GLOBALS["___mysqli_ston"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '&lt;/pre&gt;');

        // 给用户反馈密码已更改
        $html .= "&lt;pre&gt;Password Changed.&lt;/pre&gt;";
    } else {
        // 两次输入的密码不匹配
        $html .= "&lt;pre&gt;Passwords did not match.&lt;/pre&gt;";
        $hide_form = false; // 提示错误，不隐藏表单
    }

    // 关闭数据库连接
    ((is_null($___mysqli_res = mysqli_close($GLOBALS["___mysqli_ston"]))) ? false : $___mysqli_res);
}
?&gt;
</code></pre>
<h2 id="medium">medium</h2>
<p>同样修改后抓包</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20241230173812671.png" alt="" loading="lazy"></p>
<p>这里查看源码可以发现设置了<strong>passed_captcha</strong>验证</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20241230173911315.png" alt="" loading="lazy"></p>
<p>将<strong>step=1</strong>修改为<strong>step=2</strong>，并且添加<strong>passed_captcha=true</strong></p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20241230174226061.png" alt="" loading="lazy"></p>
<p>修改成功</p>
<h3 id="源码审计-1">源码审计</h3>
<p>与low级别差不多，多了一个设置<strong>passed_captcha=true</strong>才能正常修改</p>
<pre><code class="language-php">?php

if (isset($_POST['Change']) &amp;&amp; ($_POST['step'] == '1')) {
    // 第一步：用户提交了表单且处于步骤1
    $hide_form = true; // 标识隐藏CAPTCHA表单

    // 获取用户输入的新密码和确认密码
    $pass_new = $_POST['password_new'];
    $pass_conf = $_POST['password_conf'];

    // 从第三方验证CAPTCHA
    $resp = recaptcha_check_answer(
        $_DVWA['recaptcha_private_key'],
        $_POST['g-recaptcha-response']
    );

    // CAPTCHA验证未通过
    if (!$resp) {
        $html .= "&lt;pre&gt;&lt;br /&gt;The CAPTCHA was incorrect. Please try again.&lt;/pre&gt;";
        $hide_form = false; // 如果错误，不隐藏表单
        return;
    } else {
        // CAPTCHA验证通过，检查两次输入的密码是否匹配
        if ($pass_new == $pass_conf) {
            // 密码匹配，显示下一步
            $html .= "
                &lt;pre&gt;&lt;br /&gt;You passed the CAPTCHA! Click the button to confirm your changes.&lt;br /&gt;&lt;/pre&gt;
                &lt;form action=\"#\" method=\"POST\"&gt;
                    &lt;input type=\"hidden\" name=\"step\" value=\"2\" /&gt;
                    &lt;input type=\"hidden\" name=\"password_new\" value=\"{$pass_new}\" /&gt;
                    &lt;input type=\"hidden\" name=\"password_conf\" value=\"{$pass_conf}\" /&gt;
                    &lt;input type=\"hidden\" name=\"passed_captcha\" value=\"true\" /&gt;
                    &lt;input type=\"submit\" name=\"Change\" value=\"Change\" /&gt;
                &lt;/form&gt;";
        } else {
            // 两次输入的密码不匹配
            $html .= "&lt;pre&gt;Both passwords must match.&lt;/pre&gt;";
            $hide_form = false; // 不隐藏表单，提示用户重新输入
        }
    }
}
if (isset($_POST['Change']) &amp;&amp; ($_POST['step'] == '2')) {
    // 第二步：用户提交确认后的表单
    $hide_form = true; // 隐藏CAPTCHA表单

    // 获取用户输入的新密码和确认密码
    $pass_new = $_POST['password_new'];
    $pass_conf = $_POST['password_conf'];

    // 确保用户完成了第一步
    if (!$_POST['passed_captcha']) {
        $html .= "&lt;pre&gt;&lt;br /&gt;You have not passed the CAPTCHA.&lt;/pre&gt;";
        $hide_form = false;
        return;
    }
    // 检查两次输入的密码是否匹配
    if ($pass_new == $pass_conf) {
        // 匹配进行密码更新
        // 转义特殊字符，防止SQL注入
        $pass_new = ((isset($GLOBALS["___mysqli_ston"]) &amp;&amp; is_object($GLOBALS["___mysqli_ston"])) ? mysqli_real_escape_string($GLOBALS["___mysqli_ston"], $pass_new) : "");
        
        // 使用md5加密密码（注意：md5不够安全，实际应用中应使用更好的加密方法）
        $pass_new = md5($pass_new);

        // 更新数据库中的用户密码
        $insert = "UPDATE `users` SET password = '$pass_new' WHERE user = '" . dvwaCurrentUser() . "';";
        $result = mysqli_query($GLOBALS["___mysqli_ston"], $insert) or die('&lt;pre&gt;' . ((is_object($GLOBALS["___mysqli_ston"])) ? mysqli_error($GLOBALS["___mysqli_ston"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '&lt;/pre&gt;');

        // 反馈用户密码已更改
        $html .= "&lt;pre&gt;Password Changed.&lt;/pre&gt;";
    } else {
        // 两次输入的密码不匹配
        $html .= "&lt;pre&gt;Passwords did not match.&lt;/pre&gt;";
        $hide_form = false;
    }
    // 关闭数据库连接
    ((is_null($___mysqli_res = mysqli_close($GLOBALS["___mysqli_ston"]))) ? false : $___mysqli_res);
}
?&gt;
</code></pre>
<h2 id="high">high</h2>
<p>定位登录框，发现这么一处注释</p>
<pre><code class="language-php"> **DEV NOTE**   Response: 'hidd3n_valu3'   &amp;&amp;   User-Agent: 'reCAPTCHA'   **/DEV NOTE** 
</code></pre>
<p>结合源码得知需要<strong>g-recaptcha-response=hidd3n_valu3</strong> 并且 <strong>User-Agent: 'reCAPTCHA'</strong></p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20241230174700731.png" alt="" loading="lazy"></p>
<p>同样修改后抓包</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20241230173812671.png" alt="" loading="lazy"></p>
<p>发送包并修改参数</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20241230175451002.png" alt="" loading="lazy"></p>
<p>修改成功</p>
<h3 id="源码审计-2">源码审计</h3>
<p>设置了请求头：<strong>reCAPTCHA ； g-recaptcha-response = hidd3n_valu3</strong>，以及token使会话更有安全性，还利用CSRF令牌使的更安全</p>
<pre><code class="language-php">&lt;?php

if (isset($_POST['Change'])) {
    // 用户提交了表单，隐藏CAPTCHA表单
    $hide_form = true;

    // 获取用户输入的新密码和确认密码
    $pass_new = $_POST['password_new'];
    $pass_conf = $_POST['password_conf'];

    // 验证CAPTCHA
    $resp = recaptcha_check_answer(
        $_DVWA['recaptcha_private_key'],
        $_POST['g-recaptcha-response']
    );

    // 检查CAPTCHA验证是否通过或符合内置绕过条件
    if (
        $resp || 
        (
            $_POST['g-recaptcha-response'] == 'hidd3n_valu3'
            &amp;&amp; $_SERVER['HTTP_USER_AGENT'] == 'reCAPTCHA'
        )
    ) {
        // CAPTCHA验证通过，检查两次输入的密码是否匹配
        if ($pass_new == $pass_conf) {
            // 转义输入以防止SQL注入攻击
            $pass_new = ((isset($GLOBALS["___mysqli_ston"]) &amp;&amp; is_object($GLOBALS["___mysqli_ston"])) ? mysqli_real_escape_string($GLOBALS["___mysqli_ston"], $pass_new) : "");
            
            // 使用md5加密密码（注意：不推荐在生产环境中使用）
            $pass_new = md5($pass_new);

            // 更新数据库用户密码
            $insert = "UPDATE `users` SET password = '$pass_new' WHERE user = '" . dvwaCurrentUser() . "' LIMIT 1;";
            $result = mysqli_query($GLOBALS["___mysqli_ston"], $insert) or die('&lt;pre&gt;' . ((is_object($GLOBALS["___mysqli_ston"])) ? mysqli_error($GLOBALS["___mysqli_ston"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '&lt;/pre&gt;');

            // 返回用户的反馈信息
            $html .= "&lt;pre&gt;Password Changed.&lt;/pre&gt;";
        } else {
            // 如果密码不匹配
            $html .= "&lt;pre&gt;Both passwords must match.&lt;/pre&gt;";
            $hide_form = false;
        }
    } else {
        // CAPTCHA输入错误时的响应
        $html .= "&lt;pre&gt;&lt;br /&gt;The CAPTCHA was incorrect. Please try again.&lt;/pre&gt;";
        $hide_form = false;
        return;
    }

    // 关闭数据库连接
    ((is_null($___mysqli_res = mysqli_close($GLOBALS["___mysqli_ston"]))) ? false : $___mysqli_res);
}

// 生成反CSRF攻击的令牌
generateSessionToken();
?&gt;
</code></pre>
<h2 id="impossible">impossible</h2>
<h3 id="源码审计-3">源码审计</h3>
<p>结合反CSRF令牌和CAPTCHA，提高安全性；并且使用PDO和参数绑定防止SQL注入。</p>
<pre><code class="language-php">&lt;?php
if (isset($_POST['Change'])) {
    // 检查反CSRF令牌，确保请求的合法性
    checkToken($_REQUEST['user_token'], $_SESSION['session_token'], 'index.php');

    // 隐藏CAPTCHA表单
    $hide_form = true;

    // 获取用户输入的新密码，并移除转义字符
    $pass_new = $_POST['password_new'];
    $pass_new = stripslashes($pass_new);
    $pass_new = ((isset($GLOBALS["___mysqli_ston"]) &amp;&amp; is_object($GLOBALS["___mysqli_ston"])) ? mysqli_real_escape_string($GLOBALS["___mysqli_ston"], $pass_new) : "");
    $pass_new = md5($pass_new); // 对新密码进行MD5加密

    // 获取用户输入的确认密码，并移除转义字符
    $pass_conf = $_POST['password_conf'];
    $pass_conf = stripslashes($pass_conf);
    $pass_conf = ((isset($GLOBALS["___mysqli_ston"]) &amp;&amp; is_object($GLOBALS["___mysqli_ston"])) ? mysqli_real_escape_string($GLOBALS["___mysqli_ston"], $pass_conf) : "");
    $pass_conf = md5($pass_conf); // 对确认密码进行MD5加密

    // 获取用户输入的当前密码，并移除转义字符
    $pass_curr = $_POST['password_current'];
    $pass_curr = stripslashes($pass_curr);
    $pass_curr = ((isset($GLOBALS["___mysqli_ston"]) &amp;&amp; is_object($GLOBALS["___mysqli_ston"])) ? mysqli_real_escape_string($GLOBALS["___mysqli_ston"], $pass_curr) : "");
    $pass_curr = md5($pass_curr); // 对当前密码进行MD5加密

    // 使用第三方功能验证CAPTCHA
    $resp = recaptcha_check_answer(
        $_DVWA['recaptcha_private_key'],
        $_POST['g-recaptcha-response']
    );

    // 如果CAPTCHA验证失败
    if (!$resp) {
        // 反馈信息：CAPTCHA错误
        $html .= "&lt;pre&gt;&lt;br /&gt;The CAPTCHA was incorrect. Please try again.&lt;/pre&gt;";
        $hide_form = false;
    } else {
        // 检查当前密码是否正确
        $data = $db-&gt;prepare('SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;');
        $data-&gt;bindParam(':user', dvwaCurrentUser(), PDO::PARAM_STR);
        $data-&gt;bindParam(':password', $pass_curr, PDO::PARAM_STR);
        $data-&gt;execute();

        // 检查新密码是否匹配，且当前密码是否正确
        if (($pass_new == $pass_conf) &amp;&amp; ($data-&gt;rowCount() == 1)) {
            // 更新数据库中的用户密码
            $data = $db-&gt;prepare('UPDATE users SET password = (:password) WHERE user = (:user);');
            $data-&gt;bindParam(':password', $pass_new, PDO::PARAM_STR);
            $data-&gt;bindParam(':user', dvwaCurrentUser(), PDO::PARAM_STR);
            $data-&gt;execute();

            // 用户反馈：成功
            $html .= "&lt;pre&gt;Password Changed.&lt;/pre&gt;";
        } else {
            // 用户反馈：失败
            $html .= "&lt;pre&gt;Either your current password is incorrect or the new passwords did not match.&lt;br /&gt;Please try again.&lt;/pre&gt;";
            $hide_form = false;
        }
    }
}

// 生成反CSRF攻击的令牌
generateSessionToken();
?&gt;
</code></pre>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.061160497371527775" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-04 10:49">2025-01-04 10:49</span>&nbsp;
<a href="https://www.cnblogs.com/GuijiH6">H轨迹H</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18651665" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18651665);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18651665', targetLink: 'https://www.cnblogs.com/GuijiH6/p/18651665', title: 'DVWA靶场Insecure CAPTCHA(不安全验证)漏洞所有级别通关教程及源码审计' })">举报</a>
</div>
        