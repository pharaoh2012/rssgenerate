
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/youlanjihua/p/18945723" title="发布于 2025-06-24 10:09">
    <span role="heading" aria-level="2">在仓颉开发语言中使用数据库</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p data-id="p838747a-v200UnzD">今天体验了一下在开发者大会上见到的CodeGenie，非常棒。AI正在影响着各行各业，这几天幽蓝君对此深有感触，身为打工人要保持不断学习的状态，不然就有可能被替代。</p>
<p data-id="p124945a-yZFA9F1f">今天跟大家分享一下在仓颉开发语言中如何使用数据库。</p>
<p data-id="p124945a-lPoeSVqR">我们这里说的是关系型数据库，首先还是要引入对应的模块，仓颉语言中关系型数据库的模块是：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>import ohos.relational_store.*</code></pre>
</div>
<p data-id="p124945a-bwLlYELc">接下来数据库的操作流程可能很多友友都比较熟悉了，依次是获取数据库、建表，然后进行增删改查等操作，在任何开发语言中都是这样的步骤。不过仓颉的写法可能会有些不同。</p>
<p data-id="p124945a-bVld0uuK">仓颉获取数据的方法是:</p>
<div>
<pre class="language-plain highlighter-hljs"><code>getRdbStore(context, config)</code></pre>
</div>
<p data-id="p124945a-BlFQ1kzQ">它的两个参数分别是应用上下文和数据库的配置信息。主要是应用上下文写起来比较麻烦，首先main_ability.cj文件，定义全局的上下文参数，并且赋值：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>var globalAbilityContext: Option&lt;AbilityContext&gt; = Option&lt;AbilityContext&gt;.None

globalAbilityContext = Option&lt;AbilityContext&gt;.Some(this.context)</code></pre>
</div>
<p data-id="p124945a-kwmgcsA5">这两行代码的位置是这样的：</p>
<p><img data-type="block" data-src="https://dl-harmonyos.51cto.com/images/202506/d6959e685958faadc1a166e8a8ca8dbbaa140d.png" class="lazyload"></p>
<p data-id="p124945a-AOpivzva">现在回到数据库页面，这里又写了一个方法：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>func getContext(): AbilityContext {
     match(globalAbilityContext) {
         case Some(context) =&gt; context
         case _ =&gt; throw Exception("can not get globalAbilityContext.")
     }
 }</code></pre>
</div>
<p data-id="p124945a-2eJbf8Gx">现在可以获取数据库了：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>var rdbStore: RdbStore = getRdbStore(getStageContext(getContext()), StoreConfig("RdbTest.db", SecurityLevel.S1))</code></pre>
</div>
<p data-id="p124945a-pzqzSCXd">获取到数据库，我们可以尝试建表，我们一直在写商城应用，我就创建一个商品表，字段就只写id、商品和价格：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>rdbStore.executeSql("CREATE TABLE IF NOT EXISTS GOODSLIST(ID int NOT NULL, NAME varchar(255) NOT NULL, PRICE int,  PRIMARY KEY (Id))")</code></pre>
</div>
<p data-id="p124945a-qNLeXGpp">现在尝试向表中插入数据：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>var values = HashMap&lt;String, ValueType&gt;()
values.put("ID", ValueType.integer(1))
values.put("NAME", ValueType.string("T恤"))
values.put("PRICE", ValueType.integer(79))

rdbStore.insert("GOODSLIST", values)</code></pre>
</div>
<p data-id="p124945a-S3t34Js9">为了验证插入成功，接下来进行查询操作：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>let resultSet = rdbStore.querySql("SELECT * FROM GOODSLIST")</code></pre>
</div>
<p data-id="p124945a-UCb96xRT">查询的写法比较简单，resultSet就是查询得到的结果集，现在为大家演示如何从这个结果集中取出数据：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>if(resultSet.goToNextRow()){
  let id = resultSet.getLong(resultSet.getColumnIndex("ID"));
  let name = resultSet.getString(resultSet.getColumnIndex("NAME"));
  let price = resultSet.getLong(resultSet.getColumnIndex("PRICE"));
  AppLog.info('id:' + id.toString()  + ',商品:' + name.toString() + ',价格:' +  price.toString())
}</code></pre>
</div>
<p data-id="p124945a-tmx63wRs">goToNextRow意思是指向结果集的下一行，它返回一个bool值，返回true表示有值。如果你想打印获取的所有数据可以使用while：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>while (resultSet.goToNextRow()) {
  let id = resultSet.getLong(resultSet.getColumnIndex("ID"));
  let name = resultSet.getString(resultSet.getColumnIndex("NAME"));
  let price = resultSet.getLong(resultSet.getColumnIndex("PRICE"));
  AppLog.info('id:' + id.toString()  + '  ,商品:' + name.toString() + '  ,价格:' +  price.toString())
}</code></pre>
</div>
<p data-id="p124945a-EozBfbIc">看一下执行结果：</p>
<p><img data-type="block" data-src="https://dl-harmonyos.51cto.com/images/202506/b2ec2580711e49dd08f327f2b69d5cd0e18848.png" class="lazyload"></p>
<p data-id="p124945a-aBiqT1ON">到这里关于仓颉的数据库基本上就讲完了，因为改和删都可以使用创建数据的方式去操作，比如要删除一条数据：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>rdbStore.executeSql("DELETE FROM GOODSLIST WHERE ID = ?", [ValueType.integer(3)])</code></pre>
</div>
<p data-id="p124945a-m6CIDn8C">总结一下，如果是有返回值的操作，比如查询，可以使用querySql方法，没有返回值的操作可以使用executeSql方法。</p>
<p data-id="p124945a-3YwKL23o">今天的内容就是这样，感谢阅读。##HarmonyOS语言##仓颉##购物#</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-06-24 10:09">2025-06-24 10:09</span>&nbsp;
<a href="https://www.cnblogs.com/youlanjihua">幽蓝计划</a>&nbsp;
阅读(<span id="post_view_count">24</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18945723);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18945723', targetLink: 'https://www.cnblogs.com/youlanjihua/p/18945723', title: '在仓颉开发语言中使用数据库' })">举报</a>
</div>
        