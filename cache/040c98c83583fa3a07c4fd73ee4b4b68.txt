
		<h2>
			<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lmy5215006/p/18816120" title="发布于 2025-04-09 13:14">
    <span role="heading" aria-level="2">Linux浅谈(四)----中断&amp;异常</span>
    

</a>

		</h2>
		<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="简介">简介</h1>
<p>CPU中断时操作系统中的两个重要概念，都作用于改变CPU执行的正常流程。<br>
当出现某些特殊情况（如外部设备请求服务、定时器时间到等）时，CPU 暂停当前正在执行的程序，转去执行处理这些特殊情况的程序，处理完毕后再返回原来被暂停的程序继续执行的过程。</p>
<blockquote>
<p>其作用在于让操作系统强行夺回CPU的控制权</p>
</blockquote>
<h1 id="中断与异常模型图">中断与异常模型图</h1>
<p><img src="https://img2024.cnblogs.com/blog/1084317/202504/1084317-20250409113505871-1985540938.png" alt="image" loading="lazy"></p>
<h2 id="内中断">内中断</h2>
<p>也称为软件中断，是由 CPU 内部的某些事件（如执行特定的指令、程序出错等）引发的。例如，在 x86 架构中，使用INT指令可以触发一个软件中断，用于调用操作系统的系统服务。</p>
<blockquote>
<p>简单来说就是中断信号来自CPU内部，与当前指令有关</p>
</blockquote>
<ol>
<li>陷阱，陷入<br>
是指在指令执行过程中<code>故意引发</code>的，通常用于实现系统调用、调试等功能。<br>
比如：
<ul>
<li>要执行系统调用</li>
<li>C#/JAVA中主动抛出异常</li>
<li>int 3 这种故意设置的陷阱</li>
</ul>
</li>
<li>故障<br>
是指由<code>错误条件引发，它可能会被修复</code>，CPU 在处理故障后会返回到引起故障的<code>指令重新执行</code>。<br>
比如：
<ul>
<li>缺页故障</li>
</ul>
</li>
<li>终止<br>
是指无法恢复的严重错误，如硬件故障、系统崩溃等。终止发生时，CPU将控制权交由终止程序处理，不会再返回程序，而是返回到内核中的abort例程，它会终止进程。<br>
比如：
<ul>
<li>除0异常</li>
<li>硬件损坏</li>
<li>非法使用特权指令</li>
</ul>
</li>
</ol>
<h2 id="外中断">外中断</h2>
<p>也称为硬件中断，外中断是由 CPU 外部的设备或事件引起的中断。比如键盘，鼠标，主板定时器。这些外部设备通过向 CPU 发送中断请求信号来通知 CPU 需要处理某个事件。外中断是计算机系统与外部设备进行交互的重要方式，使得 CPU 能够及时响应外部设备的请求，提高系统的整体性能和响应能力。</p>
<blockquote>
<p>简单来说就是中断信号来自CPU外部，与当前指令无关</p>
</blockquote>
<blockquote>
<p>例如，当用户按下键盘上的某个按键时，键盘控制器会向 CPU 发送一个中断请求，CPU 接收到该请求后会暂停当前程序的执行，转去执行键盘中断处理程序，读取用户按下的按键信息</p>
</blockquote>
<ol>
<li>不可屏蔽中断（Non-Maskable Interrupt, NMI）<br>
CPU 必须立即响应，无法屏蔽，通常用于处理紧急硬件故障。<br>
比如：
<ul>
<li>电源故障中断：如突然断电、电池电量过低，通知系统保存数据或紧急关机。</li>
<li>硬件错误中断：内存错误（如 ECC 校验失败）、CPU 过热、主板硬件故障等，需立即处理以避免系统崩溃。</li>
</ul>
</li>
<li>可屏蔽中断（Maskable Interrupt, IRQ）<br>
CPU 可通过中断控制器暂时忽略（屏蔽）此类中断，待当前任务处理完毕后再响应。<br>
比如：
<ul>
<li>定时设备中断：操作系统任务调度中断，系统定时器中断</li>
<li>I/O设备中断：鼠标/键盘/打印机/硬盘/显示器等执行操作触发的中断</li>
<li>网络设备中断：网卡接收到新的数据包，触发中断。</li>
<li>USB设备中断：U盘插入/拔出，数据传输完成等操作触发的中断</li>
</ul>
</li>
</ol>
<h2 id="小结">小结</h2>
<table>
<thead>
<tr>
<th>大类</th>
<th>子类</th>
<th>原因</th>
<th>异步/同步</th>
<th>返回行为</th>
</tr>
</thead>
<tbody>
<tr>
<td>外中断</td>
<td>中断</td>
<td>来自硬件的信号</td>
<td>异步</td>
<td>总是返回到下一条指令</td>
</tr>
<tr>
<td>内中断</td>
<td>陷阱</td>
<td>进程主动触发的异常</td>
<td>同步</td>
<td>总是返回到下一条指令</td>
</tr>
<tr>
<td>内中断</td>
<td>故障</td>
<td>潜在可恢复的错误</td>
<td>同步</td>
<td>可能返回到当前指令</td>
</tr>
<tr>
<td>内中断</td>
<td>终止</td>
<td>不可恢复的错误</td>
<td>同步</td>
<td>不会返回</td>
</tr>
</tbody>
</table>
<p>它们之间的区别如下：</p>
<ol>
<li>来源不同<br>
内部中断来源于CPU内部事件或者程序自身行为，无需外部硬件信号<br>
外部中断由CPU外部的硬件设备触发，通过硬件信号（如中断请求线 IRQ）通知CPU</li>
<li>处理时机不同<br>
内部中断，CPU在执行指令时会检查是否有异常发生，属于<code>事前检查</code><br>
外部中断，CPU在指令周期的末尾，再检查是否有外部中断信号要处理，属于<code>事后检查</code></li>
<li>可屏蔽性不同<br>
内部中断通常不可屏蔽<br>
外部中断中，可屏蔽中断（如键盘中断）：可通过 CPU 标志位（如 IF）暂时忽略，<br>
不可屏蔽中断（如电源故障）无论IF标志位是否开启，CPU 必须立即响应。</li>
</ol>
<blockquote>
<p>外部中断发生时，CPU会清除EFLAGS寄存器的IF(Interrupt Enable)标志位，避免其它中断干扰。比如你正在执行I/O操作，就不应该被CPU时钟周期所切换进程。<br>
内部中断发生时，IF标志位不会被清除。</p>
</blockquote>
<h1 id="中断的流程">中断的流程</h1>
<p><img src="https://img2024.cnblogs.com/blog/1084317/202504/1084317-20250409130515326-1312764056.png" alt="image" loading="lazy"></p>
<h2 id="中断描述表interrupt-descriptor-table">中断描述表(Interrupt Descriptor Table)</h2>
<p>操作系统为每一种中断都分配了处理流程，这个流程的唯一标识叫做<code>中断向量</code>，它是一个非负整数。<br>
一部分中断向量由CPU设计者分配，另一部分由操作系统内核设计者分配。两者组成了一个完整的中断处理流程。它就是<code>中断描述表</code><br>
操作系统启动时，内核会分配和初始化一张中断描述表(Interrupt Descriptor Table)的跳转表，将中断向量一一映射。<br>
<img src="https://img2024.cnblogs.com/blog/1084317/202504/1084317-20250409123745622-1374915728.png" alt="image" loading="lazy"></p>

</div>
<div class="clear"></div>

		<p class="postfoot">
			posted on 
<span id="post-date" data-last-update-days="0.7082226554629629" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-09 13:15">2025-04-09 13:14</span>&nbsp;
<a href="https://www.cnblogs.com/lmy5215006">叫我安不理</a>&nbsp;
阅读(<span id="post_view_count">106</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18816120" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18816120);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18816120', targetLink: 'https://www.cnblogs.com/lmy5215006/p/18816120', title: 'Linux浅谈(四)----中断&amp;amp;异常' })">举报</a>

		</p>
	