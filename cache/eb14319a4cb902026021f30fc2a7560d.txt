
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/warrenwt/p/18999001" title="发布于 2025-07-22 16:20">
    <span role="heading" aria-level="2">记一次训练模型踩坑经历（附ai整理版）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>@</p><div class="toc"><div class="toc-container-header">目录</div><ul><li><a href="#项目背景" rel="noopener nofollow">项目背景</a></li><li><a href="#小结" rel="noopener nofollow">小结</a><ul><li><a href="#为安卓项目训练-小爱同学-唤醒词的探索与解决过程" rel="noopener nofollow"><strong>为安卓项目训练 “小爱同学” 唤醒词的探索与解决过程</strong></a></li><li><a href="#核心要点总结" rel="noopener nofollow"><strong>核心要点总结</strong></a></li></ul></li></ul></div><p></p>
<h2 id="项目背景">项目背景</h2>
<p><code> 公司要做个语音助手，类似于“小爱同学”那种，然后安卓小伙伴跟我交代需要换个唤醒词，重新训练个模型才行，so这个重任落到了我的身上，对于一个从来没有训练过模型的人，只能硬着头皮上了，踩坑用时3天</code></p>
<p>首先安卓小伙伴发给我的链接是这个https://github.com/hasanatlodhi/OpenwakewordforAndroid，这个是专门针对android开发的唤醒词项目，其中他说他要的就是一个onnx格式的模型文件，然后我找到这个项目的源项目地址https://github.com/dscripka/openWakeWord，ok下载下来自己跑试试吧，先创建个虚拟的运行环境，而且要python3.9以上，好的，那我切换到3.11，然后看到他没有requirments.txt，又看不到需要安装的扩展包清单，那我就复制运行代码直接执行吧，遇到要安装的扩展包再挨个安装，其中直接<code>pip install</code>安装太慢了，要在后面加上<code>-i https://pypi.tuna.tsinghua.edu.cn/simple</code>，经过用cursor一顿折腾总算安装完了，再执行运行语句吧，还是报错，于是我复制报错语句去问ai解决，一会报说配置不够完整一会说配置错了是个二维数组配置，还有说模型文件未找到我再去github上找，还有报执行命令要去openwakeword文件夹里面执行，各种解决了最后执行<code>pip install openwakeword-train</code>就是这句话，我一直执行报没有找到对应版本，不管是加了国内镜像地址还是直接拉都找不到，行，是不是3.11版本太高了里面没有，那我切换3.9吧，再重新拉项目检查python版本重新挨个拉依赖包，但是还是显示没有找到，然后我把这个报错信息给gemini给我回复是他能找到，他也自己到虚拟环境中执行了能拉下来。好吧怎么就我不行，我去问问通义千问，再走了一遍给的教程还是没有，我就奇怪了，是不是我的电脑本地环境有问题，然后我想用docker跑个环境运行吧，再问了gemini要了教程，走了一波，还是没有找到，此刻我很怀疑是不是真的有这个包了，然后我找了可不可以直接下载这个包再装载到我的pip里面，不行。好吧，我去FAQ里面找找，看了有好多人提过issue但是没有找到跟我这个类似的问题，行吧那我继续看看readme里面作者有个推荐的docker环境，我拉下来，但是看到里面很多配置mqtt，我用不上啊，我只是想跑个新模型出来，而且具体怎么跑这个项目还要花一定时间才能搞定，算了我继续找别的办法吧，想起最近kimi k2据说现在是最强ai，好，我好好描述下问题给他<br>
<code>我是名安卓开发人员，想使用“小爱同学”这个唤醒词，会简单的python，如果用github上openwakeword这个项目该如何训练，具体一些的操作</code><br>
给我建议是用一个google colab的工具，这个其实就是google提供的一个虚拟机环境，然后在这个里面运行你的项目，看的也行耶，然后我把我要拉的项目和要下载的依赖全部在里面执行了，不出意外的话就有意外了，还是没有拉到openwakeword-train这个包，行吧就是没有这个包。再去看看readme吧，找到了readme里面怎么也有colab，行啊，我算熟悉了一点这个平台，就去试试，直接点进了<a href="https://colab.research.google.com/drive/1q1oe2zOyZp7UsB3jJiQ1IFn8z5YfjwEb?usp=sharing#scrollTo=1cbqBebHXjFD" target="_blank" rel="noopener nofollow">链接</a>，然后在里面执行每个单元格里面的代码，时间有点长一步步的最后出来了，叫我直接下载onnx和tflite格式文件，再拿去给安卓测试下，ok了。</p>
<h2 id="小结">小结</h2>
<p>ai不一定都是对的，如果出问题一直解决不了，要学会保持怀疑的心态与之交流。同时官方readme很重要，一定要看完！</p>
<p>---以下是gemini整理了一下---<br>
好的，这段曲折但最终成功的技术探索经历，可以整理成一个更清晰、有条理的复盘记录。</p>
<hr>
<h3 id="为安卓项目训练-小爱同学-唤醒词的探索与解决过程"><strong>为安卓项目训练 “小爱同学” 唤醒词的探索与解决过程</strong></h3>
<p>这是一个关于如何使用 <code>openWakeWord</code> 开源项目，为安卓应用制作一个“小爱同学”唤醒词模型的全过程记录。整个过程充满了挑战，最终通过官方推荐的工具成功解决。</p>
<p><strong>一、 目标与起点</strong></p>
<ul>
<li><strong>核心需求：</strong> 为安卓App生成一个“小爱同学”唤醒词的 <code>.onnx</code> 格式模型文件。</li>
<li><strong>项目来源：</strong>
<ol>
<li>安卓同事提供了针对安卓的唤醒词项目 <code>OpenwakewordforAndroid</code>。</li>
<li>根据指引，找到了其核心源项目 <code>openWakeWord</code>，并决定基于此项目进行模型训练。</li>
</ol>
</li>
</ul>
<p><strong>二、 本地环境搭建的坎坷之路</strong></p>
<ol>
<li>
<p><strong>环境初始化：</strong></p>
<ul>
<li>创建了 Python 虚拟环境，并根据项目要求选择了 Python 3.9 以上版本（初选 3.11）。</li>
<li>项目缺少 <code>requirements.txt</code> 文件，只能在代码运行时“缺啥补啥”，逐一手动安装依赖包。</li>
<li>为解决 <code>pip install</code> 速度过慢的问题，使用了清华镜像源 (<code>-i https://pypi.tuna.tsinghua.edu.cn/simple</code>)。</li>
</ul>
</li>
<li>
<p><strong>遇到的主要障碍：</strong></p>
<ul>
<li><strong>反复报错：</strong> 即使依赖安装完毕，运行时仍遇到各种错误，如配置不完整、数据格式错误（二维数组）、模型文件未找到、执行路径不正确等。</li>
<li><strong>关键包安装失败：</strong> 在尝试训练模型时，最关键的一步 <code>pip install openwakeword-train</code> 始终失败，提示“找不到匹配的版本”。</li>
</ul>
</li>
</ol>
<p><strong>三、 多方求助与尝试</strong></p>
<p>为解决 <code>openwakeword-train</code> 的安装问题，进行了多轮尝试：</p>
<ol>
<li><strong>更换 Python 版本：</strong> 怀疑是 Python 3.11 版本过高不兼容，降级到 3.9，并重复了所有安装步骤，但问题依旧。</li>
<li><strong>求助 AI 模型：</strong>
<ul>
<li>向 Gemini 求助，对方反馈在其虚拟环境中可以成功安装该包，这让我一度怀疑是自己的本地环境有问题。</li>
<li>向通义千问求助，按照其教程操作，依然失败。</li>
</ul>
</li>
<li><strong>使用 Docker 隔离环境：</strong>
<ul>
<li>为了彻底排除本地环境的干扰，尝试使用 Docker 构建一个干净的运行环境。</li>
<li>根据 Gemini 提供的教程进行操作，但在 Docker 容器内，<code>openwakeword-train</code> 仍然无法安装。</li>
</ul>
</li>
<li><strong>研究官方 Docker 镜像：</strong>
<ul>
<li>发现项目作者提供了一个推荐的 Docker 环境，但拉取后发现其配置复杂（包含 MQTT 等），不适合只想快速训练模型的简单需求，故放弃。</li>
</ul>
</li>
<li><strong>尝试 Kimi 与 Google Colab：</strong>
<ul>
<li>向 Kimi AI 详细描述了问题和目标，它建议使用 <strong>Google Colab</strong>（一个在线的虚拟环境）。</li>
<li>在 Colab 中手动执行项目拉取和依赖安装，但 <code>openwakeword-train</code> 这个包依然无法安装。至此，基本确认这个包可能无法通过 <code>pip</code> 直接获取。</li>
</ul>
</li>
</ol>
<p><strong>四、 柳暗花明：找到官方推荐的正确路径</strong></p>
<p>在几乎所有方法都失败后，再次回到项目的 <code>README</code> 文档中寻找线索，终于发现了突破口：</p>
<ul>
<li><strong>官方 Colab 链接：</strong> 作者在文档中提供了一个<strong>直接用于模型训练的 Google Colab 笔记本链接</strong>。</li>
<li><strong>一键式操作：</strong> 点击该链接进入预设好的 Colab 环境，只需按顺序执行每个单元格的代码即可。这个环境已经处理好了所有复杂的依赖和配置问题。</li>
</ul>
<p><strong>五、 最终成果</strong></p>
<ul>
<li>通过执行官方提供的 Colab 笔记本，整个训练流程顺利完成。</li>
<li>最终，<strong>直接生成并下载了所需的 <code>.onnx</code> 和 <code>.tflite</code> 格式的模型文件</strong>，成功交付给安卓同事进行测试。</li>
</ul>
<hr>
<h3 id="核心要点总结"><strong>核心要点总结</strong></h3>
<ol>
<li><strong>直面核心问题：</strong> 整个过程的卡点在于 <code>openwakeword-train</code> 这个包无法通过常规 <code>pip</code> 方式安装，所有围绕本地环境的折腾都是徒劳。</li>
<li><strong>官方文档是关键：</strong> 在遇到难以解决的问题时，最可靠的方案往往隐藏在项目的官方 <code>README</code> 或 <code>FAQ</code> 中。作者推荐的工具和流程（如本例中的 Colab 笔记本）是最高效的路径。</li>
<li><strong>善用云端工具：</strong> 对于有复杂环境依赖的项目，使用 Google Colab 或类似的云端开发环境可以避免大量本地配置问题，尤其适合只想快速验证和使用项目核心功能的用户。</li>
</ol>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.0020833333333333333" data-date-updated="2025-07-22 16:23">2025-07-22 16:20</span>&nbsp;
<a href="https://www.cnblogs.com/warrenwt">蜗牛使劲冲</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18999001);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18999001', targetLink: 'https://www.cnblogs.com/warrenwt/p/18999001', title: '记一次训练模型踩坑经历（附ai整理版）' })">举报</a>
</div>
        