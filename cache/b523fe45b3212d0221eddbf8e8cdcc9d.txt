<!----> <meta itemprop="headline" content="CSS 实现九宫格缩放(9-slice scaling 不变形拉伸)"> <meta itemprop="keywords" content="CSS,前端,HTML"> <meta itemprop="datePublished" content="2025-06-04T10:07:20.000Z"> <meta itemprop="image" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-128.png~tplv-t2oaga2asx-image.image"> <div itemprop="author" itemscope="itemscope" itemtype="http://schema.org/Person"><meta itemprop="name" content="德莱厄斯"> <meta itemprop="url" content="https://juejin.cn/user/3919115686512942"></div> <div itemprop="publisher" itemscope="itemscope" itemtype="http://schema.org/Organization"><meta itemprop="name" content="掘金"> <div itemprop="logo" itemscope="itemscope" itemtype="https://schema.org/ImageObject"><meta itemprop="url" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-white-180.png~tplv-t2oaga2asx-image.image"> <meta itemprop="width" content="180"> <meta itemprop="height" content="180"></div></div> <h1 class="article-title" data-v-61fb5e44="">
            CSS 实现九宫格缩放(9-slice scaling 不变形拉伸)
            <!----> <!----></h1> <div class="author-info-block block-hidden" data-v-61fb5e44=""><div class="author-info-box" data-v-61fb5e44=""><div class="author-name" data-v-61fb5e44=""><a href="/user/3919115686512942/posts" target="_blank" rel="" class="jj-link username username ellipsis" data-v-65b50b51="" data-v-292f6e48="" data-v-61fb5e44=""><span class="name" style="max-width:160px;" data-v-65b50b51="" data-v-292f6e48="">
    德莱厄斯
  </span> <!----> <!----> <!----> </a></div> <div class="meta-box" data-v-61fb5e44=""><time datetime="2025-06-04T10:07:20.000Z" title="Wed Jun 04 2025 10:07:20 GMT+0000 (Coordinated Universal Time)" class="time" data-v-61fb5e44="">
                    2025-06-04
                  </time> <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="read-icon" data-v-61fb5e44=""><path d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor" data-v-61fb5e44=""></path><circle cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor" data-v-61fb5e44=""></circle></svg> <span class="views-count" data-v-61fb5e44="">
                    4,085
                  </span> <span class="read-time" data-v-61fb5e44=""><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" data-v-61fb5e44=""><rect width="16" height="16" fill="none" data-v-61fb5e44=""></rect><circle cx="8" cy="8" r="5.65625" stroke="#8A919F" data-v-61fb5e44=""></circle><path d="M7.69141 5.18652V8.30924H10.8141" stroke="#8A919F" stroke-linecap="round" stroke-linejoin="round" data-v-61fb5e44=""></path></svg>
                    阅读5分钟
                  </span> <!----></div></div> <div style="flex:1;" data-v-61fb5e44=""></div> <!----> <!----></div> <!----> <!----> <!----> <!----> <div id="article-root" itemprop="articleBody" class="main" data-v-61fb5e44=""><div class="article-viewer markdown-body result"><h2 data-id="heading-0">前言</h2>
<p>一些游戏中的窗口通常都有一些炫酷的效果</p>
<p>比如这样的</p>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/41dde3bd14124fdb9a38064b73ae9871~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5b636I6x5Y6E5pav:q75.awebp?rk3s=f64ab15b&amp;x-expires=1752695208&amp;x-signature=UjjwMXh4clRcwYo1F1Pxo9Zjijk%3D" alt="image.png" loading="lazy"></p>
<p>这样的</p>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/b168dccacfd644e4a975e81b9090360e~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5b636I6x5Y6E5pav:q75.awebp?rk3s=f64ab15b&amp;x-expires=1752695208&amp;x-signature=sbNXrJUHV59BhZeygET%2FCGhrkBw%3D" alt="image.png" loading="lazy"></p>
<p>还有这样的</p>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/5f3b0a14a5714155903f42ba8eabaa33~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5b636I6x5Y6E5pav:q75.awebp?rk3s=f64ab15b&amp;x-expires=1752695208&amp;x-signature=U92a3olBhhl%2Bvk%2F8vxqRtr7nTmM%3D" alt="image.png" loading="lazy"></p>
<p>哎等等，你发现没有，后面两张的窗口长得很相似，只是第二张比较矮，第三张比较高，那么是不是要做两张素材来支持这种形式呢？</p>
<p>当然不用，在游戏开发中，通常会使用一种叫做 “<strong>9宫格缩放（9-slice scaling）</strong> ” 的技术，这是一种非常常见且极其实用的图形技术，<strong>9-slice scaling</strong> 是一种对位图图像进行缩放的方法，它将图像划分成 9 个区域（3 行 × 3 列），像这样</p>
<pre><code class="hljs language-css" lang="css">╔════╦═══════╦════╗
║ TL ║  <span class="hljs-attribute">Top</span>  ║ <span class="hljs-selector-tag">TR</span> ║
╠════╬═══════╬════╣
║ L  ║Center ║ R  ║
╠════╬═══════╬════╣
║ BL ║ <span class="hljs-attribute">Bottom</span>║ BR ║
╚════╩═══════╩════╝
</code></pre>
<p><strong>四个角（TL, TR, BL, BR）</strong> ：固定尺寸，<strong>不缩放</strong>，用来保持 UI 的边角样式（圆角、高光、装饰等）。</p>
<p><strong>四条边（Top, Bottom, Left, Right）</strong> ：只在一个方向拉伸：</p>
<ul>
<li>Top/Bottom 水平拉伸</li>
<li>Left/Right 垂直拉伸</li>
</ul>
<p><strong>中心区域（Center）</strong> ：在 <strong>水平和垂直方向都可以拉伸</strong>，填满剩下的空间。</p>
<p>不得不说，发明九宫格缩放的人就是个天才，这大大减少了美术资源用量。</p>
<p>聪明的你肯定联想到了你那睿智的 UI 同事，他也总是给你一些让你抓耳挠腮的背景图，让你在使用时总是有图片拉伸变形的问题。</p>
<p>那么前端有没有类似的用法呢？</p>
<h2 data-id="heading-1">有的兄弟有的</h2>
<p>哦？你以为我又要介绍某个 auto 系列插件是吗？</p>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/dd99e662352a40bd886e3fd05956ed1b~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5b636I6x5Y6E5pav:q75.awebp?rk3s=f64ab15b&amp;x-expires=1752695208&amp;x-signature=BSMZK4TnYrj7h4buTc7gwTo6yBY%3D" alt="image.png" loading="lazy"></p>
<p>还真让你猜错了，今天我要说的是几个 CSS 属性。它们分别是：</p>
<ul>
<li>border-image-source</li>
<li>border-image-slice</li>
<li>border-image-repeat</li>
</ul>
<p>通过这三个属性，就可以做到让图片做到不变形的拉伸效果。</p>
<p>现在拿一个图片举例</p>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/ea6d359a49ed4b6e838ff2d3c22e4707~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5b636I6x5Y6E5pav:q75.awebp?rk3s=f64ab15b&amp;x-expires=1752695208&amp;x-signature=l2tVI8TFvFuwTbuuaY0O4BfimSA%3D" alt="image.png" loading="lazy"></p>
<p>可以看到，我拿红线将在此图上花了一个井字形，这个井字可不是随便画的，它大有来头，它标记了我允许它形变的地方，和保持不变的地方。</p>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/527bc1b6277e4480ae2bd5d914030b8b~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5b636I6x5Y6E5pav:q75.awebp?rk3s=f64ab15b&amp;x-expires=1752695208&amp;x-signature=XWEhC3Ys7rczoZtay2hyUgO6aN8%3D" alt="image.png" loading="lazy"></p>
<p>这样四个角将会保持我们目前看到的样子（原始比例），当图片宽度或高度改变时，只会改变可拉伸区域的表现。</p>
<p>这张图片的原始尺寸是 1064*141，且上面的截图是以原始尺寸展示的。从此图来看（梯形），它大概率要承受比它更长或更短的内容，目测一下，可以看到右上角、左上角的不允许形变区域大概是 50px、而左右不允许形变区域大概是 200px、由于这张梯形图且不考虑上下拉伸，所以下面则不能设置固定部分，否则会使左右两边发生断层（有时斜率不一致）。</p>
<p>所以我们这么写</p>
<pre><code class="hljs language-css" lang="css"> &nbsp; &nbsp; &nbsp;<span class="hljs-selector-class">.frame-container</span> {
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-comment">/* 1. 先设定边框宽度（上 右 下 左）*/</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-attribute">border-width</span>: <span class="hljs-number">50px</span> <span class="hljs-number">200px</span> <span class="hljs-number">0px</span> <span class="hljs-number">200px</span>;
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-attribute">border-style</span>: solid;
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-attribute">border-color</span>: transparent; <span class="hljs-comment">/* 透明即可，边框颜色会被 image 覆盖 */</span>
 &nbsp; &nbsp;  }
</code></pre>
<p>我们将正常的边框属性按照刚刚目测的数值写成这样，现在看起来无事发生，因为边框是透明的。</p>
<p>那么我们接着写：</p>
<pre><code class="hljs language-css" lang="css"> &nbsp; &nbsp; &nbsp;<span class="hljs-selector-class">.frame-container</span> {
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-comment">/* 1. 先设定边框宽度（上 右 下 左）*/</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-attribute">border-width</span>: <span class="hljs-number">50px</span> <span class="hljs-number">200px</span> <span class="hljs-number">0</span> <span class="hljs-number">200px</span>;
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-attribute">border-style</span>: solid;
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-attribute">border-color</span>: transparent; <span class="hljs-comment">/* 透明即可，边框颜色会被 image 覆盖 */</span>
​
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-comment">/* 2. 指定 border-image 源图片 */</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-attribute">border-image-source</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">'./a.png'</span>);
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-comment">/* 为了演示，就给它一个动态宽度和高度 */</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-attribute">width</span>: <span class="hljs-number">1064px</span>;
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-attribute">height</span>: <span class="hljs-number">141px</span>;
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-comment">/* 3. 指定 slice，也就是按 30px / 10px / 20px / 15px 把图片分成 9 块 */</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-attribute">border-image-slice</span>: <span class="hljs-number">50</span> <span class="hljs-number">200</span> <span class="hljs-number">0</span> <span class="hljs-number">200</span> fill;
 &nbsp; &nbsp;  }
</code></pre>
<p>这里为了方便演示，我们将容器大小设置为图片的原始大小，目前的效果看起来有点奇怪，左右两边看起来被折断了。</p>
<pre><code class="hljs language-css" lang="css"> &nbsp; &nbsp; &nbsp;<span class="hljs-selector-class">.frame-container</span> {
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-comment">/* 1. 先设定边框宽度（上 右 下 左）*/</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-attribute">border-width</span>: <span class="hljs-number">50px</span> <span class="hljs-number">200px</span> <span class="hljs-number">0</span> <span class="hljs-number">200px</span>;
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-attribute">border-style</span>: solid;
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-attribute">border-color</span>: transparent; <span class="hljs-comment">/* 透明即可，边框颜色会被 image 覆盖 */</span>
​
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-comment">/* 2. 指定 border-image 源图片 */</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-attribute">border-image-source</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">'./a.png'</span>);
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-comment">/* 为了演示，就给它一个动态宽度和高度 */</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-attribute">width</span>: <span class="hljs-number">1064px</span>;
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-attribute">height</span>: <span class="hljs-number">141px</span>;
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-comment">/* 3. 指定 slice，也就是按 30px / 10px / 20px / 15px 把图片分成 9 块 */</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-attribute">border-image-slice</span>: <span class="hljs-number">50</span> <span class="hljs-number">200</span> <span class="hljs-number">0</span> <span class="hljs-number">200</span> fill;
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-comment">/* 4. 指定拉伸（stretch）—— 
 &nbsp; &nbsp; &nbsp; &nbsp; 上边/下边 拉伸水平；左边/右边 拉伸垂直；中间那块自由拉伸/填充 */</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-attribute">border-image-repeat</span>: stretch;
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-attribute">transition</span>: <span class="hljs-number">1s</span>;
​
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-comment">/* 5. 你可以给中间区域再加个背景，比如纯白或者另一张图 */</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-attribute">background-color</span>: white;
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-comment">/* 如果想用内容图，也可以启用下面这行： */</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-comment">/* background: url("content.png") no-repeat center/cover; */</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-attribute">box-sizing</span>: border-box; <span class="hljs-comment">/* 确保 width/height 包括 border */</span>
 &nbsp; &nbsp;  }
</code></pre>
<p>加上 box-sizing: border-box; 图片看起来正常多了，我还加了其他必须的代码，现在这张图已经具备我们开头说的能力了。</p>
<p>加一个 hover 简单看一下：</p>
<pre><code class="hljs language-css" lang="css"> &nbsp; &nbsp; &nbsp;<span class="hljs-comment">/* 鼠标移进去改变尺寸，看看效果，模拟内容变少 */</span>
 &nbsp; &nbsp; &nbsp;<span class="hljs-selector-class">.frame-container</span><span class="hljs-selector-pseudo">:hover</span> {
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-attribute">width</span>: <span class="hljs-number">400px</span>;
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-attribute">height</span>: <span class="hljs-number">141px</span>;
 &nbsp; &nbsp;  }
</code></pre>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/346901dc40fa49628899bbd0d14df66c~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5b636I6x5Y6E5pav:q75.awebp?rk3s=f64ab15b&amp;x-expires=1752695208&amp;x-signature=pIfrU1vCQVrC8oFFzAED1%2FNJfWA%3D" alt="GIF 2025-6-4 17-53-17.gif" loading="lazy"></p>
<h2 data-id="heading-2">总结</h2>
<p>通过上面的演示，可以发现，通过这种方式可以实现横向纵向（取决于图片异形，有的只能横向，有的只能纵向，有的横纵都可）的不变形拉伸。</p>
<p>学会了这招，再也不用向 UI 要多张切图、拆分切图了，还不谢谢我。</p></div></div>