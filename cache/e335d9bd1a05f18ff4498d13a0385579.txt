
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/zhuancloud/p/18802032" title="发布于 2025-03-31 14:09">
    <span role="heading" aria-level="2">SQL SERVER日常运维巡检系列之-实例级参数</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h1>前言</h1>
<p>　　做好日常巡检是数据库管理和维护的重要步骤，而且需要对每次巡检日期、结果进行登记，同时可能需要出一份巡检报告。</p>
<p>　　本系列旨在解决一些常见的困扰：</p>
<p>不知道巡检哪些东西<br>不知道怎么样便捷体检<br>机器太多体检麻烦<br>生成报告困难，无法直观呈现结果<br>    实例的参数对系统性能和稳定的影响很重要，系统级别的参数可能会根据业务的变化而变化，但防止系统参数设置不合理或被意外修改，系统参数检查也是巡检中的必要项。</p>
<h1>系统参数概览</h1>
<p>　　1.在【检查项】-【全部】页面检查是否有设置不合理的参数，当参数设置未通过检查，会有警告。</p>
<p><img src="https://img2024.cnblogs.com/blog/980582/202503/980582-20250331140355648-1149752436.png" alt="" loading="lazy"></p>
<h2>具体参数设置</h2>
<p>　　在【参数】页查看具体的参数配置。</p>
<p>　　注：合理参数与不合理参数为平台计算公式所得，个人针对系统特点进行的调整可能会被列入不合理范围（此情况可忽略警告）。</p>
<p><img src="https://img2024.cnblogs.com/blog/980582/202503/980582-20250331140446354-1683054484.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/980582/202503/980582-20250331140503284-1184723340.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<h1>参数说明</h1>
<p>参数设置不合理带来的影响：</p>
<p>参数设置不佳可能导致系统硬件无法发挥最大性能，或造成性能问题。例如：最大内存的设置，设置过小会导致系统无法利用内存而使性能出现严重问题，反之不设置或过大会导致在操作系统内存压力时强制释放SQL Server内存导致SQL Server无法工作。</p>
<p>1.最大并行度（max degree of parallelism）</p>
<p>一般建议系统如果超过32个CPU 那么设置成8或者4，如果系统中都是特别短小且频繁的语句建议设置成1（取消语句并行，要慎重真的符合你的场景才好）</p>
<p>注：很多时候并行度设置和你的服务器CPU配置有关，比如有几路、几核、是否超线程，一般来说不要跨物理CPU为好。</p>
<p>并行度的设置是针对实例级别的设置（SQL2016中可以对单独数据库设置）</p>
<p>微软官方建议：https://support.microsoft.com/zh-cn/kb/329204</p>
<p>2.并行开销的阀值（cost threshold for parallelism） 仅当运行同一查询的串行计划的估计开销高于在“并行的开销阈值”中设置的值时，SQL Server 才创建和运行该查询的并行计划。 开销指的是在特定硬件配置中运行串行计划估计需要花费的时间（秒）。 “并行的开销阈值”选项可设置为 0 到 32767 之间的任何值。 默认值为 5。</p>
<p>在某些情况下，即使查询的开销计划小于当前“并行的开销阈值”的值，也有可能选择并行计划。 出现这种情况，是因为使用并行还是串行计划是根据完成完全优化之前所提供的开销估计确定的。</p>
<p>注：主要控制SQL优化器何时选用并行计划，建议默认值，此值设置的越小优化器越容易选择并行计划。</p>
<p>3.服务器内存（ min server memory 和 max server memory）</p>
<p>max server memory （建议设置）： 一般推荐如果内存较小操作系统预留3G-4G ，如果内存大256或512以上在数据库内存无压力时预留5%-10%给操作系统，剩下给SQL SERVER ，如果服务器还有其他应用还要在SQL 中减掉应用所占的内存。</p>
<p>min server memory（服务器存在多个实例建议设置）:当计算机上存在其他占用大量内存的进程时，这种方法也十分有用，因为它可确保 SQL Server 至少获得合理的内存量。 这种方法的缺点是：当启动新的实例（或任何其他进程）时，运行的实例可能会花费一些时间来释放内存，如果实例必须将修改后的页写回到数据库中来释放内存，则花费的时间可能会更长。</p>
<p>带有工作负荷的第一个实例通常分配所有的内存。 空闲实例或稍后启动的实例最终可能会只使用最少的可用内存量运行。 SQL Server 不会尝试均衡分配各个实例的内存使用量。 但是，所有实例均将响应 Windows 内存通知信号以调整它们内存需求量的大小。 Windows 不会使用内存通知 API 来平衡各个应用程序使用的内存。 它只提供有关系统内存可用性的全局反馈。</p>
<p>&nbsp;</p>
<p>注：最大服务器内存控制 SQL Server 内存分配，包括缓冲池、编译内存、所有缓存、QE 内存授予、锁定管理器内存和 CLR 内存（实际上是 sys.dm_os_memory_clerks 中找到的任何内存分配器）。 线程栈的内存、内存堆、除 SQL Server 之外的链接服务器提供程序以及由非 SQL Server DLL 分配的任何内存都不受最大服务器内存控制。</p>
<p>注：SQL Server 不会在启动时立即分配 min server memory 中指定的内存量。 不过，除非降低 min server memory 的值，否则当内存使用量由于客户端负荷而达到该值后，SQL Server 不能释放内存。</p>
<p>4. xp_cmdshell 使SQL SERVER可以使用cmdshell功能应用</p>
<p>xp_cmdshell 属于外围应用配置在新安装的 SQL Server的默认配置中，功能并未启用。以最大限度地减少可能受到恶意用户攻击的功能数。</p>
<p>注：部分客户使用脚本备份数据库时开启xp_cmdshell功能，可以使用master.dbo.xp_delete_file 等系统过程代替。</p>
<h1>总结　　</h1>
<p>参数设置不佳可能导致系统硬件无法发挥最大性能，或造成性能问题。例如：最大内存的设置，设置过小会导致系统无法利用内存而使性能出现严重问题，反之不设置或过大会导致在操作系统内存压力时强制释放SQL Server内存导致SQL Server无法工作。</p>
<p>　　在巡检中及时发现系统参数配置变化与是否合理，这也是重要的巡检项。</p>
<p>&nbsp;</p>
<p>北京格瑞趋势科技有限公司是聚焦于数据服务的高新技术企业，成立于2008年，创始团队及核心技术人员来自微软和雅虎。微软数据平台合作伙伴，卫宁健康数据平台战略合作伙伴。通过产品+服务双轮驱动的业务模式，14年间累计服务4000+客户，覆盖互联网、市政、交通、电信、医疗、教育、电力、制造业等各个领域。<br><br></p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.1793196411909722" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-31 14:09">2025-03-31 14:09</span>&nbsp;
<a href="https://www.cnblogs.com/zhuancloud">格瑞趋势技术团队</a>&nbsp;
阅读(<span id="post_view_count">76</span>)&nbsp;
评论(<span id="post_comment_count">1</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18802032" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18802032);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18802032', targetLink: 'https://www.cnblogs.com/zhuancloud/p/18802032', title: 'SQL SERVER日常运维巡检系列之-实例级参数' })">举报</a>
</div>
        