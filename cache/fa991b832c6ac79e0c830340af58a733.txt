
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ccgc718/p/18696762" title="发布于 2025-02-02 12:12">
    <span role="heading" aria-level="2">线性筛</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="线性筛">线性筛</h1>
<h2 id="引入">引入</h2>
<hr>
<h3 id="-例题f题">-例题(F题)</h3>
<h4 id="给定两个正整数然后询问次每次询问第小的质数保证质数小于等于">给定两个正整数<span class="math inline">\(n\)</span>,<span class="math inline">\(q\)</span>然后询问<span class="math inline">\(q\)</span>次，每次询问第<span class="math inline">\(m\)</span>小的质数保证质数小于等于<span class="math inline">\(n\)</span>。</h4>
<h3 id="-思路">-思路</h3>
<h4 id="用数组把质数进行存储再输出第个便可以了但是我们需要考虑时间空间限制一般题暴力也可以但有些唐题就想要让我们用线性筛接下来进行讲解供各位鉴赏">用数组把质数进行存储，再输出第<span class="math inline">\(m\)</span>个便可以了，但是我们需要考虑时间空间限制，一般题暴力也可以，但有些<s>唐</s>题就想要让我们用线性筛。接下来进行讲解，供各位鉴赏。</h4>
<h2 id="线性筛-1">线性筛</h2>
<hr>
<h3 id="-原理">-原理</h3>
<h4 id="在遍历到某一个数字时如果是质数那么它的倍数必然不是质数若不是质数它必定被前面的某个质数排掉">在遍历到某一个数字<span class="math inline">\(k\)</span>时，如果<span class="math inline">\(k\)</span>是质数，那么它的倍数（<span class="math inline">\(2*k\)</span>,<span class="math inline">\(3*k\)</span>...<span class="math inline">\(n*k\)</span>）必然不是质数，若<span class="math inline">\(k\)</span>不是质数，它必定被前面的某个质数排掉。</h4>
<h3 id="-核心代码">-核心代码</h3>
<pre><code class="language-c">vector&lt;bool&gt; prime(n+1,true);//用数组存下0-n，默认每个数都是质数（true）
prime[0]=prime[1]=false;//0，1不是质数（fales）
for(int i=2;i*i&lt;=n;++i){//遍历（Q1：为什么是i*i？）
	if(prime[i]){
		for(int j=i*i;j&lt;=n;j+=i){//对这个质数的平方后的倍数排除（Q2：为什么从i*i开始？）
			prime[j]=false;//排除
		}
	} 
}

</code></pre>
<h3 id="-tips">-Tips</h3>
<h4 id="q1">Q1：</h4>
<h4 id="合数的性质">合数的性质：</h4>
<h4 id="如果-n-是合数那么它至少有一个质因数-p-满足-p--n">如果 n 是合数，那么它至少有一个质因数 p 满足 p ≤ √n。</h4>
<h4 id="例如n--100100--10如果-n-是合数它至少有一个质因数-p--10">例如，n = 100，√100 = 10。如果 n 是合数，它至少有一个质因数 p ≤ 10。</h4>
<h4 id="筛法的终止条件">筛法的终止条件：</h4>
<h4 id="当-i--n-时ii--n此时-i-的倍数-i2-i3--ii-1-已经被更小的质数筛除了">当 i &gt; √n 时，i<em>i &gt; n，此时 i 的倍数 i</em>2, i<em>3, ..., i</em>(i-1) 已经被更小的质数筛除了。</h4>
<h4 id="因此继续筛除已经没有意义">因此，继续筛除已经没有意义。</h4>
<h4 id="q2">Q2：</h4>
<h4 id="合数的性质-1">合数的性质：</h4>
<h4 id="如果-n-是合数那么它至少有一个质因数-p-满足-p--n-1">如果 n 是合数，那么它至少有一个质因数 p 满足 p ≤ √n。</h4>
<h4 id="例如n--100100--10如果-n-是合数它至少有一个质因数-p--10-1">例如，n = 100，√100 = 10。如果 n 是合数，它至少有一个质因数 p ≤ 10。</h4>
<h4 id="筛法的起始点">筛法的起始点：</h4>
<h5 id="对于质数-ii-的倍数-i2-i3--ii-1-已经被更小的质数筛除了">对于质数 i，i 的倍数 i<em>2, i</em>3, ..., i*(i-1) 已经被更小的质数筛除了。</h5>
<h4 id="因此直接从-j--i--i-开始筛除">因此，直接从 j = i * i 开始筛除。</h4>
<h2 id="上代码">上代码</h2>
<hr>
<pre><code class="language-C">#include &lt;bits/stdc++.h&gt;
using namespace std;

int main() {
	int n,q,m;
	cin&gt;&gt;n&gt;&gt;q;
	vector&lt;bool&gt; prime(n+1,true);
	prime[0]=prime[1]=false;
	for(int i=2;i*i&lt;=n;++i){
		if(prime[i]){
			for(int j=i*i;j&lt;=n;j+=i){
				prime[j]=false;
			}
		} 
	}
	
	vector&lt;int&gt; primes;//存入质数
    for(int i=2;i&lt;=n;++i){
        if(prime[i]) primes.push_back(i);
    }
	
	while(q--){//多次询问
		cin&gt;&gt;m;
		if(m&gt;=1&amp;&amp;m&lt;=primes.size()){
			cout&lt;&lt;primes[m-1]&lt;&lt;endl;
		}else{
			cout&lt;&lt;-1&lt;&lt;endl;
		}
	}
	
	
    return 0;
} 


</code></pre>
<h4 id="题解任务--">题解++，任务--！</h4>
<h1 id="感谢观看">感谢观看！</h1>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.0023307483703703703" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-02 12:13">2025-02-02 12:12</span>&nbsp;
<a href="https://www.cnblogs.com/ccgc718">ccgc718</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18696762" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18696762);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18696762', targetLink: 'https://www.cnblogs.com/ccgc718/p/18696762', title: '线性筛' })">举报</a>
</div>
        