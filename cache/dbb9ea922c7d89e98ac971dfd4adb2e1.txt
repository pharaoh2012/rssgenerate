
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/37Y37/p/18742806" title="发布于 2025-02-28 11:00">
    <span role="heading" aria-level="2">全程使用 AI 从 0 到 1 写了个小工具</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="背景">背景</h2>
<p>好长时间没写技术方面的文章了，主要的原因是AI的发展实在太快太快，尤其是从去年ChatGPT的普及到今年DeepSeek的爆火，AI的世界可谓是三天一个小变化五天一个大版本，AI的能力每天都在以惊人的速度成长。就我自己而言，现在无论遇到什么问题，几乎都在向AI寻求答案，已经很久没有使用传统搜索引擎了，在这种状况之下，我不禁在想，我所写的那些文章所介绍的那一点皮毛，究竟还能产生多大的价值和意义。没有想清楚，所以迟迟也没有动笔</p>
<p>AI在各个领域都有着迅猛的发展，至于编程更甚，尤其是Cursor的问世，让许多不懂技术不懂编程的人也跃跃欲试，经常在网上看到零基础小白使用AI几小时写个APP的文章，虽然我也经常用AI来解决程序问题，但大都是写个脚本或者实现代码片段，确实很好用，但对于只用AI从0到1完整实现个项目还没体验过，本着体验过才有发言权的原则，我决定亲自去试试。恰好最近在整理RSS，于是就想通过AI来写一个简单的RSS阅读器，以满足我自己琐碎时间的阅读需求</p>
<p>RSS是一种基于XML格式的网络内容订阅技术，其核心功能是帮助用户集中获取多个网站或平台的最新更新，无需逐个访问原始页面即可跟踪信息源，RSS通过生成标准的XML文件（即Feed）描述网站内容更新，用户使用RSS阅读器订阅这些Feed后，阅读器会定期抓取更新并集中展示标题、摘要、发布时间及原文链接。RSS是非常古老的技术，但对于喜欢阅读独立博客或是周刊之类内容的我来说很好用，成熟的RSS阅读器也有很多，但个人觉得大都很重，需要安装APP或是有一堆其他不相干的功能，我只需要最简单的聚合阅读即可。于是全程使用AI，我只提问+确认，不手工创建一个文件，不手动编写一行代码，一个简单的RSS阅读器就做成了，效果如下</p>
<p><img src="https://static.ops-coffee.cn/static/images/2025/0227.01.png" alt="" loading="lazy"></p>
<p>你也可以直接点击：<a href="https://rss.ops-coffee.cn" target="_blank" rel="noopener nofollow">简约RSS阅读器</a>在线体验，微信公众号读者点击文末阅读原文跳转</p>
<h2 id="工具">工具</h2>
<p>整个项目的实现我用到的AI辅助编程工具是Trae，而不是更为流行Cursor或Windsurf。Cursor、Windsurf和Trae与其他AI编程工具的核心差异在于全局代码理解与项目级应用能力，它们通过底层技术架构实现了对完整项目代码的深度解析，而非局限于单文件或片段级补全。在这三个工具中，从个人的使用效果和大众的口碑来看，Cursor无疑是其中的佼佼者，至于不选Cursor的原因只有一个，那就是Cursor收费，20美金/月的费用着实用不起，尽管有免费的额度，但完全不够用，不选Windsurf的原因也是一样，它要比Cursor便宜一点，15美金/月，而Trae目前面向个人开发者是免费的</p>
<p>Trae是由字节跳动推出的针对海外市场的AI原生集成开发环境IDE，深度集成Claude等AI模型，旨在通过智能化工具链提升开发者效率，其核心功能包括智能代码生成与优化、多模态交互、Builder模式与协作开发、原生中文支持与本地化适配等。Trae是基于VSCode开发的，所以与vscode生态兼容，界面也基本一致</p>
<p><img src="https://static.ops-coffee.cn/static/images/2025/0227.02.png" alt="" loading="lazy"></p>
<p>其中必须要提一下它的Builder模式，Builder模式可以实现全自动的项目构建，从文件创建到代码编写，再到问题排查及Bug修复等都可以自动完成，例如输入“开发图片压缩工具”可生成包含命令行接口与GUI的完整应用。我的RSS阅读器就是在这个模式下完成的</p>
<h2 id="过程">过程</h2>
<p>Trae使用比较简单，尤其是在Builder全自动模式，只需要打开一个空的文件夹作为项目根目录即可，之后就可以向它提交需求了，例如我向Trae提出的第一个需求</p>
<p><img src="https://static.ops-coffee.cn/static/images/2025/0227.03.png" alt="" loading="lazy"></p>
<p>提交之后Trae会根据你的问题逐个分析，并生成对应的文件及代码，生成的代码也会标注出文件以及添加/删除的代码行数，点击审查可以看到详细的变更内容，同时还会列出本次实现的具体功能列表，最后会告诉你本次变更的文件数量，需要你拒绝或者是接受，你如果确认没有问题则点击底部的“全部接受”按钮，本次变更的代码就会直接应用到</p>
<p><img src="https://static.ops-coffee.cn/static/images/2025/0227.04.png" alt="" loading="lazy"></p>
<p>因为是纯静态的页面，我就在项目目录下通过python启动了一个简易的http服务，然后浏览器访问查看实现效果，如果哪里对效果不满意，或是有哪些bug，都可以直接在对话框里接着向Trae提需求，同样的Trae会进行一系列的分析，给你修复/优化后的代码，就这样循环往复，直到所有效果都满意为止</p>
<h2 id="问题">问题</h2>
<p>这个项目总共应该花了我超过8个小时的时间，从开始到目前上线的这个版本，进行了上百次的对话，我自己没有写一行代码，没有做一点调整，只是提出需求/问题，让AI解决，我点确认按钮，然后查看实现效果。优势自不必说，太多太多了，让不懂技术的人也能仅凭想法实现产品，已经是降维打击，那这里仅分享几个遇到的问题</p>
<p>1.Trae是针对海外市场的，所以默认国内没办法直接使用，这个是比较遗憾的，但并不算什么问题</p>
<p>2.一个文件内代码行数过多时，AI理解时间过长。尤其是在BUG解决或者报错处理这块，AI可能要完整阅读整个文件或是多个关联文件的代码，当代码过多过长时，AI的阅读和理解时间太长，需要长时间的等待，这里的时间长指的是十几秒或者几十秒</p>
<p>3.经常遇到“服务异常，请稍后重拾”的报错提示。这个大概是因为网络问题或者服务器处理不过来吧，AI的读取、理解和推理需要消耗大量的资源，又加上网络问题，所以经常出错</p>
<p>4.问题分析的能力及问题解决的准确性还有待提升。一个稍微复杂一点的问题，AI的理解能力就比较有限了，需要多次对话，不断的提醒才能正确的解决，对于稍微大点的项目更甚，这或许也跟我的提问方式有关，不够明确和清晰</p>
<p>5.上下文阅读能力不够。在处理问题的过程中AI思考还是比较单一，对上下文的理解比较单一，实现新功能或者解决BUG时，不能很好的从整体上考虑，这就导致解决了老的BUG但导致了新的问题，这个就算是在人类程序员身上也是普遍存在的</p>
<h2 id="经验">经验</h2>
<p>说了这么多的问题，那再聊一点使用的经验</p>
<p>首先就是提问，尽量的详细，如果是新功能，那告诉他这个功能的作用，以及具体的表现，例如我要给RSS阅读器添加一个已读功能，那我就这么提需求：现在需要给这个阅读器增加一个已读功能，可以在本地存储中建一个已读列表，所有点击过标题的文章都给放到已读列表里，已读列表里的文章不再在文章列表里展示，PC端点击文章之后，把当前文章记录到已读列表里，当用户点击其他文章标题时，就把这篇已读文章从文章列表里移除，移动端，当从文章详情页返回时，就把文章从文章列表里移除</p>
<p>其次是一次对话多提几个问题，减少对话的次数，AI会需要理解项目代码及对话上线文，并且有提问次数限制，所以尽量在一次提问里清晰的表达几个问题，让他一并处理，可以通过1、2、3的方式来分别描述每个问题，AI在收到需求之后会逐个分析并处理</p>
<p>最后就是提问之前要自己先想清楚实现的内容和效果，认真的思考和清晰的表达很重要，<strong>AI的能力往往取决于使用者个人的能力，用的人能力越强AI能力也越强</strong>，能够独立思考并表达清楚自己的需求，这本身就是一项很强的个人能力</p>
<h2 id="总结">总结</h2>
<p>目前的AI能力我不敢妄加评论，就自己使用Trae以及Cursor的经验来说，这些AI工具对于不懂技术零编程经验的用户来说，实现一些简单的小系统或工具完全没有问题，若是想要实现一个复杂的系统还有不小的难度，当然这只是我个人想法，虽然我自己没有实现也不能说实际不行，影响最终结果的因素有很多，例如我用的模型以及我的提问方式，但即便是如此也已经是颠覆性的存在了</p>
<h2 id="思考">思考</h2>
<p>AI已来且势不可挡，任何个人的任何抵抗都是徒劳的，就像是把头埋在沙子里的鸵鸟，我们唯一能做的就是拥抱，把AI用在工作生活中，提升工作效率，解决生活疑惑，让AI为我们所用，尽量成为朋友同事身边那个最懂AI的，借助AI来帮助我们解决实际问题，提升个人竞争力</p>
<p>AI必然会导致工作的重塑以及与我们切身相关的部分职位的减少和消失，为此我们个人也无能为力，除了第一点的拥抱AI提升个人竞争力之外，剩下的就是调整心态了，不必过分焦虑，AI不止针对你我，也不止针对我们所在的这个行业，当大家都一样的处境时，那差距或许没有想象的那么大</p>
<p>AI让很多原本不可能的事情变得可能，例如原本你不懂技术不会写程序，那现在借助于AI也能实现自己的产品，这样无论是对副业的探索或是想法的实现都多了条可以落地的途径，好好珍惜</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.054389079186342594" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-28 11:01">2025-02-28 11:00</span>&nbsp;
<a href="https://www.cnblogs.com/37Y37">ops-coffee</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18742806" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18742806);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18742806', targetLink: 'https://www.cnblogs.com/37Y37/p/18742806', title: '全程使用 AI 从 0 到 1 写了个小工具' })">举报</a>
</div>
        