
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/JacobX/p/18908334" title="发布于 2025-06-03 14:58">
    <span role="heading" aria-level="2">飞牛OS给容器魔方上行宽带限速</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<blockquote>
<p>下面我将详细讲解（容器网络命名空间限速）的持久化配置步骤，确保在飞牛OS重启后自动生效。请严格按照顺序执行以下操作：</p>
</blockquote>
<h1 id="️-完整持久化配置教程带详细解释">🛠️ 完整持久化配置教程（带详细解释）</h1>
<h2 id="步骤1确认容器魔方名称">步骤1：确认容器魔方名称</h2>
<pre><code># 查看运行的容器列表
docker ps

# 从输出中找到容器魔方的名称（通常在NAMES列）
# 示例输出：
# CONTAINER ID   IMAGE                   ...   NAMES
# a1b2c3d4e5f6   wxedge-image   ...   wxedge
</code></pre>
<p>确认容器名称（如上例的 ​​wxedge​​），后续步骤将用到这个名称。容器魔方的名字默认<strong>wxedge</strong></p>
<h2 id="步骤2创建限速脚本">步骤2：创建限速脚本</h2>
<pre><code># 创建脚本目录
sudo mkdir -p /opt/scripts

# 创建脚本文件
sudo nano /opt/scripts/limit_container_traffic.sh
</code></pre>
<p>在编辑器中粘贴以下内容（​​记得替换 YOUR_CONTAINER_NAME 为你的实际容器名称​​）：容器魔方的名字为<strong>wxedge</strong><br>
eth0是网卡名称，可以在飞牛OS中的网络设置中查看自己的网卡名称，替换自己的使用网卡即可</p>
<pre><code>#!/bin/bash
# 容器名称（必须修改）
CONTAINER_NAME="wxedge"

# 等待容器完全启动（重要！）
echo "等待容器启动..."
while ! docker inspect --format='{{.State.Running}}' $CONTAINER_NAME | grep -q "true"; do
    sleep 3
done

# 额外等待5秒确保网络初始化
sleep 5

# 获取容器PID
PID=$(docker inspect -f '{{.State.Pid}}' "$CONTAINER_NAME")

if [ -z "$PID" ]; then
    echo "错误：无法获取容器 $CONTAINER_NAME 的PID"
    exit 1
fi

# 应用上行带宽限制(20Mbps) 注意，如下是在飞牛OS中网络设置中看到的网卡名称，此处为eth0
echo "为容器 $CONTAINER_NAME (PID:$PID) 设置上行带宽限制..."
nsenter -t $PID -n tc qdisc replace dev eth0 root tbf \
    rate 20mbit \
    burst 320kbit \
    latency 400ms

# 检查结果
if [ $? -eq 0 ]; then
    echo "成功设置上行带宽限制：20Mbps"
else
    echo "限速设置失败！"
    exit 2
fi
</code></pre>
<p>按 Ctrl+O 保存文件，然后 Ctrl+X 退出编辑器。</p>
<p>给脚本添加可执行权限：</p>
<pre><code>sudo chmod +x /opt/scripts/limit_container_traffic.sh
</code></pre>
<h2 id="步骤3创建systemd服务单元">步骤3：创建Systemd服务单元</h2>
<pre><code># 创建服务配置文件
sudo nano /etc/systemd/system/container-bandwidth.service
</code></pre>
<p>粘贴以下内容：</p>
<pre><code>[Unit]
Description=Container Bandwidth Limiter for Magic Container
After=docker.service
Requires=docker.service

[Service]
Type=simple
ExecStart=/opt/scripts/limit_container_traffic.sh
Restart=on-failure
RestartSec=30
StartLimitInterval=0

[Install]
WantedBy=multi-user.target
</code></pre>
<p>保存并退出（Ctrl+O → Enter → Ctrl+X）</p>
<h2 id="步骤4启用并启动服务">步骤4：启用并启动服务</h2>
<pre><code># 重载systemd配置
sudo systemctl daemon-reload

# 启用服务（开机自启）
sudo systemctl enable container-bandwidth.service

# 立即启动服务
sudo systemctl start container-bandwidth.service
</code></pre>
<h2 id="步骤5验证服务状态">步骤5：验证服务状态</h2>
<pre><code># 检查服务状态
sudo systemctl status container-bandwidth.service

# 预期看到 "active (running)" 状态
# 检查日志（查看限速是否成功）
journalctl -u container-bandwidth.service -n 50 --no-pager
</code></pre>
<p>日志中应看到类似：</p>
<pre><code>等待容器启动...
为容器 container_magic (PID:12345) 设置上行带宽限制...
成功设置上行带宽限制：20Mbps
</code></pre>
<h3 id="步骤6测试限速效果理论上如果容器魔方正在上传不需要测试直接看效果立竿见影">步骤6：测试限速效果，理论上如果容器魔方正在上传，不需要测试，直接看效果，立竿见影。</h3>
<blockquote>
<p>飞牛OS系统中的UI界面有网速，看那个即可。比如之前是7Mb/s，限制完上传后变为了2.4Mb/s，速度根据自己需求调整</p>
</blockquote>
<ol>
<li>​​在容器内安装测试工具​​：</li>
</ol>
<pre><code># 进入容器魔方Shell
docker exec -it YOUR_CONTAINER_NAME /bin/bash

# 在容器内安装speedtest-cli
apt-get update &amp;&amp; apt-get install -y speedtest-cli  # 对于Debian系
# 或（如果使用Alpine）：
# apk add curl
</code></pre>
<ol start="2">
<li>运行上行速度测试​​：</li>
</ol>
<pre><code># 方法1: 使用speedtest-cli
speedtest --simple

# 方法2: 使用curl测试上传
curl -T /dev/zero http://speedtest.ftp.otenet.gr/files/test10Mb.db
# 观察输出速度（应稳定在~2.5MB/s左右，因为20Mbps = 2.5MB/s）
</code></pre>
<h2 id="步骤7重启验证持久化">步骤7：重启验证持久化</h2>
<pre><code># 重启飞牛OS
sudo reboot

# 重启后检查
sudo systemctl status container-bandwidth.service
docker exec YOUR_CONTAINER_NAME tc qdisc show dev eth0
</code></pre>
<p>应看到类似：</p>
<pre><code>qdisc tbf 800d: root refcnt 2 rate 20Mbit burst 32Kb lat 400.0ms
</code></pre>
<h2 id="-排错指南">🚨 排错指南</h2>
<table>
<thead>
<tr>
<th>问题现象</th>
<th>解决方案</th>
</tr>
</thead>
<tbody>
<tr>
<td>"无法获取容器PID"</td>
<td>检查容器名称是否正确、容器是否正常运行</td>
</tr>
<tr>
<td>"No such file or directory"</td>
<td>确认已创建 /opt/scripts/limit_container_traffic.sh 并有执行权限</td>
</tr>
<tr>
<td>"RTNETLINK answers: File exists"</td>
<td>添加 replace 关键字：tc qdisc replace...</td>
</tr>
<tr>
<td>网卡名称不是eth0</td>
<td>修改脚本中的 dev eth0 → 使用 docker exec 容器名 ip addr 查看正确网卡名</td>
</tr>
<tr>
<td>限速不精确</td>
<td>调整 burst 值：burst = rate/8 * 1.5</td>
</tr>
<tr>
<td>服务启动过早</td>
<td>增加脚本中的 sleep 时间</td>
</tr>
</tbody>
</table>
<h2 id="-更新限速配置">🔄 更新限速配置</h2>
<p>如需修改带宽限制（例如改为30Mbps）：</p>
<p>编辑脚本文件：</p>
<pre><code>sudo nano /opt/scripts/limit_container_traffic.sh
</code></pre>
<p>修改 rate 20mbit → rate 30mbit<br>
修改 burst 320kbit → burst 480kbit (30÷8×1.5=5.625，约480kbit)<br>
重启服务：</p>
<pre><code>sudo systemctl restart container-bandwidth.service
</code></pre>
<blockquote>
<p>💡 此方案通过Systemd在宿主机层面自动管理，避免修改容器内部，确保每次重启飞牛OS后自动生效且不影响容器魔方的正常功能。</p>
</blockquote>

</div>
<div id="MySignature" role="contentinfo">
    <p>本文来自博客园，作者：<a href="https://www.cnblogs.com/JacobX/" target="_blank">Jacob·雅各布</a>，转载请注明原文链接：<a href="https://www.cnblogs.com/JacobX/p/18908334" target="_blank">https://www.cnblogs.com/JacobX/p/18908334</a></p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.2311844581585648" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-06-03 14:58">2025-06-03 14:58</span>&nbsp;
<a href="https://www.cnblogs.com/JacobX">Jacob·雅各布</a>&nbsp;
阅读(<span id="post_view_count">111</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18908334);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18908334', targetLink: 'https://www.cnblogs.com/JacobX/p/18908334', title: '飞牛OS给容器魔方上行宽带限速' })">举报</a>
</div>
        