
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/huangSir-devops/p/18856488" title="发布于 2025-05-01 11:33">
    <span role="heading" aria-level="2">K8s新手系列之Pod中容器的镜像拉取策略</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="概述">概述</h2>
<p>在 Kubernetes（K8s）里，容器镜像拉取策略（ImagePullPolicy）决定了 K8s 在创建或重启 Pod 时，如何处理容器镜像的拉取操作。这一策略能够确保使用的镜像始终是最新的，或者使用本地已有的镜像以提升部署效率。</p>
<p>可以使用<code>kubectl explain pod.spec.containers.imagePullPolicy</code>查看资源的详细文档：<br>
示例：</p>
<pre><code>[root@master01 ~]# kubectl explain pod.spec.containers.imagePullPolicy
KIND:     Pod
VERSION:  v1

FIELD:    imagePullPolicy &lt;string&gt;

DESCRIPTION:
     Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always
     if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated.
     More info:
     https://kubernetes.io/docs/concepts/containers/images#updating-images

     Possible enum values:
     - `"Always"` means that kubelet always attempts to pull the latest image.
     Container will fail If the pull fails.
     - `"IfNotPresent"` means that kubelet pulls if the image isn't present on
     disk. Container will fail if the image isn't present and the pull fails.
     - `"Never"` means that kubelet never pulls an image, but only uses a local
     image. Container will fail if the image isn't present
</code></pre>
<p>通过文档可以发现，镜像拉取策略有三个类型，分别是Always、IfNotPresent、Never</p>
<p>也可以通过官方文档来查看：<a href="https://kubernetes.io/docs/concepts/containers/images#updating-images" target="_blank" rel="noopener nofollow">https://kubernetes.io/docs/concepts/containers/images#updating-images</a></p>
<h2 id="镜像拉取策略分类详解">镜像拉取策略分类详解</h2>
<h3 id="never">Never</h3>
<p>Never表示永不拉取镜像，kubelet 不会尝试获取镜像。如果镜像已经以某种方式存在本地， kubelet 会尝试启动容器；否则，会启动失败。</p>
<p>示例：</p>
<pre><code>[root@master01 ~/pod]# cat pod-tomcat.yaml
apiVersion: v1
kind: Pod
metadata:
  name: pod-tomcat
spec:
  containers:
  - name: container-tomcat
    image: tomcat:8.0
    # 指定镜像拉取策略为Never
    imagePullPolicy: Never
    ports:
    - name: http
      containerPort: 8080
# 创建pod
[root@master01 ~/pod]# kubectl apply -f pod-tomcat.yaml
pod/pod-tomcat created
# 查看pod
[root@master01 ~/pod]# kubectl get po pod-tomcat
NAME         READY   STATUS              RESTARTS   AGE
pod-tomcat   0/1     ErrImageNeverPull   0          111s

# 查看详情，发现并没有拉取镜像
[root@master01 ~/pod]# kubectl describe po pod-tomcat
Name:             pod-tomcat
...省略万字内容
Events:
  Type     Reason             Age                  From               Message
  ----     ------             ----                 ----               -------
  Normal   Scheduled          2m7s                 default-scheduler  Successfully assigned default/pod-tomcat to node02
  Normal   SandboxChanged     2m5s                 kubelet            Pod sandbox changed, it will be killed and re-created.
  Warning  ErrImageNeverPull  25s (x12 over 2m6s)  kubelet            Container image "tomcat:8.0" is not present with pull policy of Never
  Warning  Failed             25s (x12 over 2m6s)  kubelet            Error: ErrImageNeverPull

</code></pre>
<h3 id="ifnotpresent">IfNotPresent</h3>
<p>如果本地有镜像就使用本地的，如果没有就去远程仓库拉取</p>
<p>示例：</p>
<pre><code>[root@master01 ~/pod]# cat pod-tomcat.yaml
apiVersion: v1
kind: Pod
metadata:
  name: pod-tomcat
spec:
  containers:
  - name: container-tomcat
    image: tomcat:8.0
    # 指定镜像拉取策略为IfNotPresent
    imagePullPolicy: IfNotPresent
    ports:
    - name: http
      containerPort: 8080

# 创建pod
[root@master01 ~/pod]# kubectl apply -f pod-tomcat.yaml
pod/pod-tomcat created

# 查看pod
[root@master01 ~/pod]# kubectl get pod pod-tomcat
NAME         READY   STATUS    RESTARTS   AGE
pod-tomcat   1/1     Running   0          43s

#查看pod详情
[root@master01 ~/pod]# kubectl describe pod pod-tomcat
Name:             pod-tomcat
Namespace:        default
##...省略万字内容
Events:
  Type    Reason     Age   From               Message
  ----    ------     ----  ----               -------
  Normal  Scheduled  64s   default-scheduler  Successfully assigned default/pod-tomcat to node02
  Normal  Pulling    63s   kubelet            Pulling image "tomcat:8.0"
  Normal  Pulled     23s   kubelet            Successfully pulled image "tomcat:8.0" in 40.129798231s (40.129811976s including waiting)
  Normal  Created    23s   kubelet            Created container container-tomcat
  Normal  Started    23s   kubelet            Started container container-tomcat

</code></pre>
<h3 id="always">Always</h3>
<p>如果本地有镜像，则对比本地镜像和远程仓库的摘要信息,若相同则使用本地缓存，若不同则重新拉取镜像。<br>
如果本地没有镜像，则无需对比摘要信息，直接拉取镜像。</p>
<p>示例：</p>
<pre><code>[root@master01 ~/pod]# cat pod-tomcat.yaml
apiVersion: v1
kind: Pod
metadata:
  name: pod-tomcat
spec:
  containers:
  - name: container-tomcat
    # 镜像更改为latest
    image: tomcat:latest
    # 指定镜像拉取策略为Always
    imagePullPolicy: Always
    ports:
    - name: http
      containerPort: 8080

# 创建pod
[root@master01 ~/pod]# kubectl apply -f pod-tomcat.yaml
pod/pod-tomcat created

#查看pod
[root@master01 ~/pod]# kubectl get pod pod-tomcat
NAME         READY   STATUS    RESTARTS   AGE
pod-tomcat   1/1     Running   0          4m53s

# 查看pod详情
[root@master01 ~/pod]# kubectl describe pod pod-tomcat
Name:             pod-tomcat
Namespace:        default
## ...省略万字内容
Events:
  Type    Reason     Age    From               Message
  ----    ------     ----   ----               -------
  Normal  Scheduled  5m39s  default-scheduler  Successfully assigned default/pod-tomcat to node02
  Normal  Pulling    5m38s  kubelet            Pulling image "tomcat:latest"
  Normal  Pulled     4m55s  kubelet            Successfully pulled image "tomcat:latest" in 43.43020764s (43.430224485s including waiting)
  Normal  Created    4m55s  kubelet            Created container container-tomcat
  Normal  Started    4m55s  kubelet            Started container container-tomcat

</code></pre>
<h2 id="镜像默认的拉取策略">镜像默认的拉取策略</h2>
<p>官网的描述是这样的：</p>
<ul>
<li>如果你省略了 <code>imagePullPolicy</code> 字段，并且你为容器镜像指定了摘要， 那么 <code>imagePullPolicy</code> 会自动设置为 <code>IfNotPresent</code>。</li>
<li>如果你省略了 <code>imagePullPolicy</code> 字段，并且容器镜像的标签是 <code>:latest</code>， <code>imagePullPolicy</code> 会自动设置为 <code>Always</code>。</li>
<li>如果你省略了 <code>imagePullPolicy</code> 字段，并且没有指定容器镜像的标签， <code>imagePullPolicy</code> 会自动设置为 <code>Always</code>。</li>
<li>如果你省略了 <code>imagePullPolicy</code> 字段，并且为容器镜像指定了非 <code>:latest</code> 的标签， <code>imagePullPolicy</code> 就会自动设置为 <code>IfNotPresent</code></li>
</ul>
<p><strong>简单点来说就是如果没有指定镜像的版本，或者指定镜像的版本为 <code>:latest</code>，那么镜像拉取策略就是 <code>Always</code>。否则就是 <code>IfNotPresent</code></strong></p>

</div>
<div id="MySignature" role="contentinfo">
    <p>本文来自博客园，作者：<a href="https://www.cnblogs.com/huangSir-devops/" target="_blank">huangSir-devops</a>，转载请注明原文链接：<a href="https://www.cnblogs.com/huangSir-devops/p/18856488" target="_blank">https://www.cnblogs.com/huangSir-devops/p/18856488</a>，微信Vac666666，欢迎交流</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.034117797657407405" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-01 11:33">2025-05-01 11:33</span>&nbsp;
<a href="https://www.cnblogs.com/huangSir-devops">huangSir-devops</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18856488);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18856488', targetLink: 'https://www.cnblogs.com/huangSir-devops/p/18856488', title: 'K8s新手系列之Pod中容器的镜像拉取策略' })">举报</a>
</div>
        