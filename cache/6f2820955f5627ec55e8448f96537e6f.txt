
        <div class="postcontent">
            <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p><span class="code-block-header__lang">序：</span></p>
<p><span class="code-block-header__lang">已经有10来年没写过代码和研究技术了，转职产品岗了，工作闲时会看一看NGA，但是NGA的横幅很明显，，所以想到用Tampermonkey来注入代码把横幅给删掉（让DeepSeek 帮忙写了一些）。</span></p>
<h2>一、开发环境准备</h2>
<ol>
<li>
<p>浏览器扩展安装</p>
<ul>
<li>Chrome：访问<a href="https://www.tampermonkey.net/" target="_blank" rel="noopener nofollow">Tampermonkey官网</a>安装</li>
</ul>
</li>
<li>
<p>开发工具启用</p>
<div class="code-block-header"><span class="code-block-header__lang">javascript<span class="code-block-header__copy">复制代码</span></span></div>
<pre class="code-block-wrapper highlighter-hljs"><code>// 调试快捷键
Ctrl+Shift+I  // 打开开发者工具
Ctrl+Shift+M  // 切换移动端模式</code></pre>
</li>
</ol>
<h2>二、脚本元信息解析</h2>
<div class="code-block-header"><span class="code-block-header__lang">javascript<span class="code-block-header__copy">复制代码</span></span></div>
<pre class="code-block-wrapper highlighter-hljs"><code>// ==UserScript==
// @name         NGA自定义横幅移除  // 脚本显示名称
// @namespace    http://tampermonkey.net/  // 防止冲突的命名空间
// @version      1.3  // 语义化版本号
// @description  完全移除#custombg容器  // 应用商店展示描述
// @match        *://nga.178.com/*  // 生效站点(支持通配符)
// @grant        none  // 权限声明
// ==/UserScript==</code></pre>
<blockquote>
<p>最佳实践建议：</p>
<ul>
<li>始终声明<code>@namespace</code>避免脚本冲突</li>
<li>使用<code>@match</code>替代<code>@include</code>获得更精准的URL控制</li>
</ul>
</blockquote>
<h2>三、核心功能实现</h2>
<h3>1. DOM元素定点清除</h3>
<div class="code-block-header"><span class="code-block-header__lang">javascript<span class="code-block-header__copy">复制代码</span></span></div>
<pre class="code-block-wrapper highlighter-hljs"><code>const nukeCustomBg = () =&gt; {
    // 精确选择器定位
    const target = document.getElementById('custombg');
    
    // 防御性编程检查
    if (target &amp;&amp; target.parentNode) {
        target.remove();
        console.log('[脚本日志] 已移除自定义横幅容器');
    }
};</code></pre>
<h3>2. 动态内容监听</h3>
<div class="code-block-header"><span class="code-block-header__lang">javascript<span class="code-block-header__copy">复制代码</span></span></div>
<pre class="code-block-wrapper highlighter-hljs"><code>// 创建观察者实例
const observer = new MutationObserver(mutations =&gt; {
    mutations.forEach(mutation =&gt; {
        if (mutation.addedNodes.length) {
            debouncedNuke();
        }
    });
});

// 配置监听参数
observer.observe(document, {
    childList: true,   // 监控子节点变化
    subtree: true      // 监控所有后代节点
});</code></pre>
<h3>3. 单页应用兼容方案</h3>
<div class="code-block-header"><span class="code-block-header__lang">javascript<span class="code-block-header__copy">复制代码</span></span></div>
<pre class="code-block-wrapper highlighter-hljs"><code>// 劫持History API
const _pushState = history.pushState;
history.pushState = function() {
    _pushState.apply(this, arguments);
    setTimeout(nukeCustomBg, 50); // 等待路由更新完成
};

// 监听hashchange事件
window.addEventListener('hashchange', () =&gt; {
    setTimeout(nukeCustomBg, 100);
});</code></pre>
<h2>四、性能优化技巧</h2>
<h3>1. 函数节流控制</h3>
<div class="code-block-header"><span class="code-block-header__lang">javascript<span class="code-block-header__copy">复制代码</span></span></div>
<pre class="code-block-wrapper highlighter-hljs"><code>function debounce(fn, delay) {
    let timer;
    return function() {
        clearTimeout(timer);  // 清除旧计时器
        timer = setTimeout(() =&gt; {
            fn.apply(this, arguments);
        }, delay);
    };
}

// 创建防抖实例（300ms阈值）
const debouncedNuke = debounce(nukeCustomBg, 300); </code></pre>
<h3>2. 资源释放策略</h3>
<div class="code-block-header"><span class="code-block-header__lang">javascript<span class="code-block-header__copy">复制代码</span></span></div>
<pre class="code-block-wrapper highlighter-hljs"><code>// 适时断开观察者
window.addEventListener('beforeunload', () =&gt; {
    observer.disconnect(); 
});</code></pre>
<h2>五、脚本调试指南</h2>
<h3>控制台调试命令</h3>
<div class="code-block-header"><span class="code-block-header__lang">javascript<span class="code-block-header__copy">复制代码</span></span></div>
<pre class="code-block-wrapper highlighter-hljs"><code>// 手动触发移除
unsafeWindow.nukeCustomBg();

// 查看观察者状态
console.log(observer._callback); 

// 性能指标统计
console.time('移除操作');
target.remove();
console.timeEnd('移除操作');  // 典型值：0.15-0.3ms</code></pre>
<h3>&nbsp;</h3>
<h3>完整代码</h3>
<details>
<summary>完整代码</summary>
<pre class="language-javascript highlighter-hljs"><code>&nbsp;// ==UserScript==
// @name         NGA自定义横幅移除
// @namespace    http://tampermonkey.net/
// @version      1.3
// @description 完全移除#custombg容器
// @match        *://nga.178.com/*
// @grant        none
// ==/UserScript==

(function() {
    'use strict';

    // 核心删除函数
    const nukeCustomBg = () =&gt; {
        const target = document.getElementById('custombg');
        if (target) {
            target.remove();
            console.log('已移除自定义横幅容器');
        }
    };

    // 即时执行 + 防抖监听
    const debouncedNuke = debounce(nukeCustomBg, 300);

    // 启动监控
    const observer = new MutationObserver(debouncedNuke);
    observer.observe(document, {
        childList: true,
        subtree: true
    });

    // 初始执行
    nukeCustomBg();

    // 防抖函数
    function debounce(fn, delay) {
        let timer;
        return function() {
            clearTimeout(timer);
            timer = setTimeout(() =&gt; fn.apply(this, arguments), delay);
        };
    }

    // 兼容HTML5 History API
    const _pushState = history.pushState;
    history.pushState = function() {
        _pushState.apply(this, arguments);
        setTimeout(nukeCustomBg, 50);
    };
})();</code></pre>
</details>
</div>
<div class="clear"></div>

        </div>
        <div class="itemdesc">
            发表于 
<span id="post-date" data-last-update-days="20.755407221873842" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-21 16:49">2025-02-21 16:48</span>&nbsp;
<a href="https://www.cnblogs.com/yiayi">Stuart.ZF</a>&nbsp;
阅读(<span id="post_view_count">20</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18729500" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18729500);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18729500', targetLink: 'https://www.cnblogs.com/yiayi/p/18729500', title: 'Tampermonkey脚本开发入门：以NGA横幅移除为例' })">举报</a>

        </div>
    