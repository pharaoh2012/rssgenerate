
        <div class="postTitle">
            <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/mysticbinary/p/18714840" title="发布于 2025-02-14 11:30">
    <span role="heading" aria-level="2">BurpSuite重放发包的一些区别</span>
    

</a>

        </div>
        <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p></p><div class="toc"><div class="toc-container-header">目录</div><ul><li><a href="#send-group-in-parallel" rel="noopener nofollow">Send Group in parallel</a></li><li><a href="#single-connection-和-separate-connections-的差别" rel="noopener nofollow">Single connection 和 Separate connections 的差别</a></li><li><a href="#实际应用场景" rel="noopener nofollow"><strong>实际应用场景</strong></a></li><li><a href="#reference" rel="noopener nofollow">Reference</a></li></ul></div><p></p>
<hr>
<p>2022年之后，Burp多了几种种类的发包格式，值得研究一下。<br>
<img src="https://img2024.cnblogs.com/blog/1552062/202502/1552062-20250214100859704-1297611687.png" alt="image" loading="lazy"></p>
<blockquote>
<p>Sending over a single connection is useful for timing-based attacks that rely on being able to compare responses with very small differences in timings, as it reduces the "jitter" that can occur when establishing TCP connections.</p>
</blockquote>
<blockquote>
<p>Sending over separate connections is primarily useful when testing for vulnerabilities that require a multi-step sequence to be performed.</p>
</blockquote>
<h1 id="send-group-in-parallel">Send Group in parallel</h1>
<p>这个没什么好说的，看名知意，就是 <strong>并发</strong> 发送。</p>
<h1 id="single-connection-和-separate-connections-的差别">Single connection 和 Separate connections 的差别</h1>
<p>这两者之间的差别需要看看，</p>
<p>先阐述一下网络上的差异，使用这两种发包的时候，都需要建立一个Group组，一般来说一个组内是有多个请求包的，</p>
<p>网络连接上的差别：</p>
<ul>
<li>Single connection - 下文用<code>单次连接</code>代替，</li>
<li>Separate connections - 下文用<code>分别连接</code>代替；</li>
</ul>
<hr>
<p><strong>单次连接</strong>是为了减少<strong>网络抖动</strong>而设计的，<strong>减少抖动（Jitter）</strong>：</p>
<ul>
<li>
<p>当通过单一TCP连接发送请求时，所有请求共享同一个已建立的连接。</p>
</li>
<li>
<p><strong>TCP连接建立的“抖动”</strong>：每次新建TCP连接时，需要经历“三次握手”（SYN, SYN-ACK, ACK），而网络延迟、路由变化、防火墙处理等因素会导致每次连接建立的时间不一致（即抖动）。</p>
</li>
<li>
<p>如果攻击需要比较多个请求的响应时间（比如相差几毫秒），这种抖动会干扰时间测量的准确性。</p>
</li>
<li>
<p><strong>单次连接避免了重复建立连接的开销</strong>，因此响应时间的差异更可能反映服务器实际处理时间的差异，而非网络波动。</p>
</li>
</ul>
<p>而<strong>分别连接</strong>，就是指每次的连接都需要建立完善的TCP三次握手。</p>
<hr>
<p>想了解<code>单次连接</code>在安全上的用途，还需要先了解一个概念：<strong>时序攻击（Timing-Based Attacks）</strong></p>
<ul>
<li>
<p><strong>时序攻击</strong>是一种通过测量服务器响应时间的微小差异来推断敏感信息的攻击方式（例如破解密码、探测系统内部状态等）。</p>
</li>
<li>
<p><strong>例子</strong>：攻击者发送不同密码尝试登录，通过服务器响应时间的差异猜测正确密码（正确密码可能需要更长的验证时间），这种也叫<strong>侧信道</strong>。</p>
</li>
</ul>
<p><strong>什么叫“侧信道”？</strong></p>
<ul>
<li>
<p>“<strong>侧</strong>”（Side）：指攻击者不直接攻击系统的主逻辑（如密码算法、代码漏洞），而是从“侧面”观察系统的物理或行为特征。</p>
</li>
<li>
<p>“<strong>信道</strong>”（Channel）：指攻击者利用的这些间接信息传递的路径（如时间、功耗、电磁波等）。</p>
</li>
</ul>
<p><strong>总结：</strong><br>
<code>单次连接</code>适合需要高精度时间测量的攻击场景（如边信道攻击），因为它能减少网络层面的干扰。</p>
<hr>
<p><strong>多连接的用途：多步骤漏洞测试</strong><br>
<strong>多步骤漏洞</strong>：指某些漏洞需要按特定顺序执行多个操作才能触发。</p>
<ul>
<li><strong>例子</strong>：
<ol>
<li>先通过一个请求创建用户账户；</li>
<li>用另一个请求提升权限；</li>
<li>最后用第三个请求执行恶意操作。</li>
</ol>
</li>
</ul>
<p><strong>为什么用多连接？</strong></p>
<ul>
<li>
<p><strong>模拟真实场景</strong>：</p>
<ul>
<li>多步骤漏洞通常需要多个独立操作，每个操作可能涉及不同的会话（Session）、Cookie或令牌。</li>
<li>如果使用单一连接，可能会因为连接复用（如HTTP Keep-Alive）导致服务器误认为多个步骤是同一用户连续操作，从而掩盖漏洞。</li>
</ul>
</li>
<li>
<p><strong>隔离步骤</strong>：</p>
<ul>
<li>每个步骤通过独立连接执行，可以确保服务器为每个步骤分配新的资源（如线程、内存），更贴近真实攻击环境。</li>
<li>某些漏洞可能依赖连接状态的独立性（如竞争条件漏洞）。</li>
</ul>
</li>
</ul>
<p><strong>总结：</strong><br>
<code>分别连接</code>适合测试需要多个独立操作的漏洞（如逻辑漏洞、竞争条件），因为它能模拟真实用户的多步行为。</p>
<hr>
<p><strong>类比理解</strong></p>
<ul>
<li><strong>单次连接</strong>：像用同一把尺子连续测量多个物体的长度，减少工具切换带来的误差。</li>
<li><strong>分别连接</strong>：像用不同工具完成组装一台机器的多个步骤，每个工具独立使用，避免相互干扰。</li>
</ul>
<hr>
<h1 id="实际应用场景"><strong>实际应用场景</strong></h1>
<ol>
<li>
<p><strong>时序攻击示例</strong> —— 单次连接：</p>
<ul>
<li>攻击者通过单连接发送100次密码猜测请求，通过响应时间差异推断正确密码。</li>
<li>如果每次请求都新建连接，网络抖动可能导致误判。</li>
</ul>
</li>
<li>
<p><strong>多步骤漏洞示例</strong> —— 分别连接：</p>
<ul>
<li>漏洞需要：登录 → 上传文件 → 触发文件解析漏洞。</li>
<li>每个步骤需通过独立连接模拟不同用户操作，确保漏洞被正确触发。</li>
</ul>
</li>
</ol>
<hr>
<h1 id="reference">Reference</h1>
<p><a href="https://portswigger.net/burp/releases/professional-community-2022-8" target="_blank" rel="noopener nofollow">https://portswigger.net/burp/releases/professional-community-2022-8</a><br>
<a href="https://blog.csdn.net/qq_50296568/article/details/142334322" target="_blank" rel="noopener nofollow">https://blog.csdn.net/qq_50296568/article/details/142334322</a></p>

</div>
<div class="clear"></div>

        <div class="postDesc">posted on 
<span id="post-date" data-last-update-days="0.30022821596296295" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-14 13:14">2025-02-14 11:30</span>&nbsp;
<a href="https://www.cnblogs.com/mysticbinary">Mysticbinary</a>&nbsp;
阅读(<span id="post_view_count">23</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18714840" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18714840);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18714840', targetLink: 'https://www.cnblogs.com/mysticbinary/p/18714840', title: 'BurpSuite重放发包的一些区别' })">举报</a>
</div>
    