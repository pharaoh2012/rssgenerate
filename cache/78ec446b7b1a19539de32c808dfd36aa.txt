
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/FatTiger4399/p/18802479" title="发布于 2025-04-01 11:42">
    <span role="heading" aria-level="2">我要成为node_modules大师!(一):包管理器选择,依赖关系分析</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">好家伙</span></strong><br><br>
<h1>1.npm曾经的一些问题</h1>
<h3><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">1.&nbsp;依赖地狱（Dependency Hell）</span></strong></h3>
<ul>
<li>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">嵌套依赖结构：早期版本的 npm 采用嵌套的&nbsp;<code>node_modules</code>&nbsp;结构，依赖层级极深，容易导致路径过长问题（尤其在 Windows 上），甚至触发文件系统限制。</span></strong></p>





</li>
<li>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">版本冲突：依赖的版本管理不够严格，容易出现“同一个包多个版本”共存的情况，导致项目体积膨胀或难以调试。</span></strong></p>





</li>





</ul>
<hr>
<h3><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">2.&nbsp;性能问题</span></strong></h3>
<ul>
<li>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">安装速度慢：npm 的安装算法（尤其是 v3 之前）效率较低，依赖解析和下载时间较长。</span></strong></p>





</li>
<li>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">全局锁问题：npm 的锁文件（<code>package-lock.json</code>）设计曾被诟病与其他工具（如 Yarn）不兼容，且早期版本存在锁文件冲突问题。</span></strong></p>





</li>





</ul>
<hr>
<h3><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">3.&nbsp;安全性历史问题</span></strong></h3>
<ul>
<li>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">依赖链风险：npm 允许依赖包自动安装任意子依赖，曾引发多起安全事件（例如&nbsp;<code>event-stream</code>&nbsp;恶意包注入事件）。</span></strong></p>





</li>
<li>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">权限问题：过去 npm 的包发布机制容易被滥用，出现过“包名抢注”（squatting）或低质量包泛滥的情况。</span></strong></p>





</li>





</ul>
<hr>
<h3><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">4.&nbsp;设计哲学争议</span></strong></h3>
<ul>
<li>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">集中式 registry：npm 的官方 registry 是单点故障，一旦宕机（如 2020 年的服务中断），全球开发者受影响。</span></strong></p>





</li>
<li>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">语义化版本（SemVer）的滥用：许多包过度依赖&nbsp;<code>^</code>&nbsp;或&nbsp;<code>~</code>&nbsp;版本范围，导致不同环境安装的依赖版本不一致，可能引发意外问题。</span></strong></p>





</li>





</ul>
<hr>
<h3><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">5.&nbsp;竞争对手的对比</span></strong></h3>
<ul>
<li>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">Yarn 的冲击：Yarn 在 2016 年推出后，凭借离线缓存、并行安装、更稳定的锁文件等特性，直接暴露了 npm 的短板。</span></strong></p>





</li>
<li>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">pnpm 的改进：pnpm 通过硬链接和符号链接优化存储空间和安装速度，进一步凸显了 npm 的冗余问题。</span></strong></p>





</li>





</ul>
<h3>&nbsp;</h3>
<h3>尽管如此</h3>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">对于大多数普通项目，npm 已足够稳定，尤其是新版（v7+）吸收了 Yarn 和 pnpm 的优点。</span></strong></p>
<h1><br>2.包管理工具</h1>
<table align="left">
<tbody>
<tr>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">npm</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">官方默认，兼容性无敌</span></strong></td>





</tr>
<tr>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">Yarn</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">稳定可靠，锁文件严谨</span></strong></td>





</tr>
<tr>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">pnpm</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">省空间、快、无依赖冲突</span></strong></td>





</tr>
<tr>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">Bun</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">宇宙最快，All-in-One</span></strong></td>





</tr>





</tbody>





</table>
<p><br><br><br></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">&nbsp;</span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">&nbsp;</span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">&nbsp;</span></strong></p>
<h1>3.具体的依赖关系实例分析</h1>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">现在 有两个项目, </span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">项目1,依赖需求: a,b,c a依赖于b,c , c无依赖依赖 </span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">项目2.依赖需求: a,b,c,d a依赖于b,c , c依赖于d ,d依赖于b </span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">这是两个典型项目,</span></strong><br><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">第一个,代表直接依赖</span></strong><br><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">第二个,代表嵌套依赖</span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">现在我分别使用npm,yarn,pnpm,bun,</span></strong><br><br><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">我们分别分析器其node_modules文件夹结构,以及package文件,和lock文件</span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">&nbsp;</span></strong></p>
<h2>3.1.第一个项目非常简单</h2>
<h3><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">安装结果对比</span></strong></h3>
<table align="left">
<thead>
<tr><th><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">包管理器</span></strong></th><th><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt"><code>node_modules</code>&nbsp;结构</span></strong></th><th><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">锁文件格式</span></strong></th></tr>





</thead>
<tbody>
<tr>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">npm</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">扁平化（hoisting）:</span></strong><br><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">-&nbsp;<code>a</code>,&nbsp;<code>b</code>,&nbsp;<code>c</code>（顶层）</span></strong><br><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">-&nbsp;<code>a/node_modules</code>&nbsp;无嵌套（依赖已提升）</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt"><code>package-lock.json</code>（嵌套结构，标记依赖来源）</span></strong></td>






</tr>
<tr>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">Yarn</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">类似 npm 的扁平化:</span></strong><br><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">-&nbsp;<code>a</code>,&nbsp;<code>b</code>,&nbsp;<code>c</code>（顶层）</span></strong><br><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">- 无重复依赖</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt"><code>yarn.lock</code>（扁平列表，记录所有依赖的精确版本）</span></strong></td>






</tr>
<tr>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">pnpm</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">隔离结构:</span></strong><br><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">- 顶层只有&nbsp;<code>a</code>,&nbsp;<code>b</code>,&nbsp;<code>c</code>（符号链接）</span></strong><br><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">- 真实依赖存储在&nbsp;<code>~/.pnpm-store</code>，通过硬链接引用</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt"><code>pnpm-lock.yaml</code>（内容寻址，记录依赖的存储路径）</span></strong></td>






</tr>
<tr>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">Bun</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">类似 pnpm 的硬链接优化:</span></strong><br><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">- 扁平化但共享依赖存储</span></strong><br><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">- 依赖通过硬链接复用</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt"><code>bun.lockb</code>（二进制锁文件，记录依赖树和哈希）</span></strong></td>






</tr>






</tbody>





</table>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">&nbsp;</span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">&nbsp;</span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">&nbsp;</span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">&nbsp;</span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">&nbsp;</span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">&nbsp;</span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">&nbsp;</span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">&nbsp;</span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">&nbsp;</span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">&nbsp;</span></strong></p>
<h2>3.2.我们重点关注第二个项目</h2>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">看看各家工具如何处理嵌套依赖</span></strong></p>
<table align="left">
<thead>
<tr><th><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">包管理器</span></strong></th><th><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt"><code>node_modules</code>&nbsp;结构</span></strong></th><th><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">关键区别</span></strong></th></tr>




</thead>
<tbody>
<tr>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">npm</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">扁平化 + 部分嵌套:</span></strong><br><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">-&nbsp;<code>a</code>,&nbsp;<code>b</code>,&nbsp;<code>c</code>,&nbsp;<code>d</code>（顶层）</span></strong><br><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">- 如果&nbsp;<code>b</code>&nbsp;有多个版本，低版本会嵌套在&nbsp;<code>d/node_modules</code></span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt"><code>package-lock.json</code>&nbsp;会标记&nbsp;<code>d</code>&nbsp;的&nbsp;<code>b</code>&nbsp;是否嵌套</span></strong></td>





</tr>
<tr>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">Yarn</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">完全扁平化:</span></strong><br><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">-&nbsp;<code>a</code>,&nbsp;<code>b</code>,&nbsp;<code>c</code>,&nbsp;<code>d</code>（顶层）</span></strong><br><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">- 若版本冲突，Yarn 会选择一个版本，可能导致问题</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt"><code>yarn.lock</code>&nbsp;会记录所有依赖的解析版本</span></strong></td>





</tr>
<tr>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">pnpm</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">严格隔离:</span></strong><br><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">-&nbsp;<code>a</code>,&nbsp;<code>b</code>,&nbsp;<code>c</code>,&nbsp;<code>d</code>（顶层符号链接）</span></strong><br><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">-&nbsp;<code>c</code>&nbsp;和&nbsp;<code>d</code>&nbsp;的&nbsp;<code>b</code>&nbsp;不会冲突，各自引用正确版本</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt"><code>pnpm-lock.yaml</code>&nbsp;会记录每个包的独立存储路径</span></strong></td>





</tr>
<tr>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">Bun</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">类似 pnpm:</span></strong><br><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">- 共享存储 + 硬链接</span></strong><br><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">- 依赖版本冲突时，Bun 会优先兼容</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt"><code>bun.lockb</code>&nbsp;会优化存储，避免重复</span></strong></td>





</tr>





</tbody>




</table>
<p><br><br><br></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">&nbsp;</span></strong></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">来看示例图:</span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">(1)NPM</span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">node_modules</span></strong></p>
<div class="cnblogs_code">
<pre><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">node_modules/<span style="color: rgba(0, 0, 0, 1)">
├── a</span>/               # a@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
│   └── package.json # 依赖: b, c
├── b</span>/               # b@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)"> (被 a 和 d 依赖)
├── c</span>/               # c@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
│   └── package.json # 依赖: d
├── d</span>/               # d@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
│   └── package.json # 依赖: b
└── .bin</span>/            # 可执行文件（如果有）</span></strong></pre>
</div>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">锁文件</span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt"><code>package-lock.json</code></span></strong></p>
<div class="cnblogs_code">
<pre><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt"><span style="color: rgba(0, 0, 0, 1)">{
  </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">name</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">project2</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
  </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">version</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">1.0.0</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
  </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">lockfileVersion</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 128, 1)">2</span><span style="color: rgba(0, 0, 0, 1)">,
  </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">requires</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">,
  </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">packages</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">node_modules/a</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
      </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">version</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">1.0.0</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
      </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">dependencies</span><span style="color: rgba(128, 0, 0, 1)">"</span>: { <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">b</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">^1.0.0</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">c</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">^1.0.0</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)"> }
    },
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">node_modules/b</span><span style="color: rgba(128, 0, 0, 1)">"</span>: { <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">version</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">1.0.0</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)"> },
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">node_modules/c</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
      </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">version</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">1.0.0</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
      </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">dependencies</span><span style="color: rgba(128, 0, 0, 1)">"</span>: { <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">d</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">^1.0.0</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)"> }
    },
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">node_modules/d</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
      </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">version</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">1.0.0</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
      </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">dependencies</span><span style="color: rgba(128, 0, 0, 1)">"</span>: { <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">b</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">^1.0.0</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)"> }
    }
  }
}</span></span></strong></pre>
</div>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">(2)Yarn</span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">node_modules</span></strong></p>
<div class="cnblogs_code">
<pre><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">node_modules/<span style="color: rgba(0, 0, 0, 1)">
├── a</span>/               # a@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
│   └── package.json # 依赖: b, c
├── b</span>/               # b@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)"> (提升到顶层)
├── c</span>/               # c@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
│   └── package.json # 依赖: d
├── d</span>/               # d@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
│   └── package.json # 依赖: b
└── .bin</span>/</span></strong></pre>
</div>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">锁文件</span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt"><code>yarn.lock</code></span></strong></p>
<div class="cnblogs_code">
<pre><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt"><span style="color: rgba(0, 0, 0, 1)"># THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
a@</span><span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">:
  version </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">1.0.0</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
  dependencies:
    b </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">^1.0.0</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
    c </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">^1.0.0</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">

b@</span><span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">:
  version </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">1.0.0</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">

c@</span><span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">:
  version </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">1.0.0</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
  dependencies:
    d </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">^1.0.0</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">

d@</span><span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">:
  version </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">1.0.0</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
  dependencies:
    b </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">^1.0.0</span><span style="color: rgba(128, 0, 0, 1)">"</span></span></strong></pre>
</div>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">(3)pnpm</span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">node_modules</span></strong></p>
<div class="cnblogs_code">
<pre><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">node_modules/<span style="color: rgba(0, 0, 0, 1)">
├── a </span>-&gt; .pnpm/a@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span>/node_modules/<span style="color: rgba(0, 0, 0, 1)">a      # 符号链接
├── b </span>-&gt; .pnpm/b@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span>/node_modules/<span style="color: rgba(0, 0, 0, 1)">b
├── c </span>-&gt; .pnpm/c@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span>/node_modules/<span style="color: rgba(0, 0, 0, 1)">c
├── d </span>-&gt; .pnpm/d@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span>/node_modules/<span style="color: rgba(0, 0, 0, 1)">d
└── .pnpm</span>/<span style="color: rgba(0, 0, 0, 1)">
    ├── a@</span><span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span>/<span style="color: rgba(0, 0, 0, 1)">
    │   └── node_modules</span>/<span style="color: rgba(0, 0, 0, 1)">
    │       ├── a       # a 的真实文件
    │       ├── b </span>-&gt; ../../b@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span>/node_modules/<span style="color: rgba(0, 0, 0, 1)">b  # 硬链接
    │       └── c </span>-&gt; ../../c@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span>/node_modules/<span style="color: rgba(0, 0, 0, 1)">c
    ├── c@</span><span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span>/<span style="color: rgba(0, 0, 0, 1)">
    │   └── node_modules</span>/<span style="color: rgba(0, 0, 0, 1)">
    │       ├── c       # c 的真实文件
    │       └── d </span>-&gt; ../../d@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span>/node_modules/<span style="color: rgba(0, 0, 0, 1)">d
    ├── d@</span><span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span>/<span style="color: rgba(0, 0, 0, 1)">
    │   └── node_modules</span>/<span style="color: rgba(0, 0, 0, 1)">
    │       ├── d       # d 的真实文件
    │       └── b </span>-&gt; ../../b@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span>/node_modules/<span style="color: rgba(0, 0, 0, 1)">b  # 硬链接
    └── b@</span><span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span>/<span style="color: rgba(0, 0, 0, 1)">
        └── node_modules</span>/<span style="color: rgba(0, 0, 0, 1)">
            └── b       # b 的真实文件</span></span></strong></pre>
</div>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">锁文件</span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt"><code>pnpm-lock.yaml</code></span></strong></p>
<div class="cnblogs_code">
<pre><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">lockfileVersion: <span style="color: rgba(128, 0, 128, 1)">5.4</span><span style="color: rgba(0, 0, 0, 1)">
dependencies:
  a:
    specifier: </span><span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
    version: </span><span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
    dependencies:
      b: </span><span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
      c: </span><span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
  b:
    specifier: </span><span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
    version: </span><span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
  c:
    specifier: </span><span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
    version: </span><span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
    dependencies:
      d: </span><span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
  d:
    specifier: </span><span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
    version: </span><span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
    dependencies:
      b: </span><span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span></span></strong></pre>
</div>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">(4)bun</span></strong></p>
<div class="cnblogs_code">
<pre><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">node_modules/<span style="color: rgba(0, 0, 0, 1)">
├── a</span>/               # a@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)"> (硬链接到全局存储)
├── b</span>/               # b@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)"> (硬链接)
├── c</span>/               # c@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
├── d</span>/               # d@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
└── .bin</span>/</span></strong></pre>
</div>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">锁文件</span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">bun.lockb</span></strong><br><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">为二进制</span></strong><br><br><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">总结,</span></strong></p>
<table align="left">
<thead>
<tr><th><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">特性</span></strong></th><th><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">npm</span></strong></th><th><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">Yarn</span></strong></th><th><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">pnpm</span></strong></th><th><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">Bun</span></strong></th></tr>

</thead>
<tbody>
<tr>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">依赖结构</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">扁平化（可能嵌套冲突）</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">完全扁平化（可能版本冲突）</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">隔离 + 硬链接（无冲突）</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">扁平化 + 硬链接优化</span></strong></td>

</tr>
<tr>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">安装速度</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">慢</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">较快</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">最快（复用存储）</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">极快（内置优化）</span></strong></td>

</tr>
<tr>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">磁盘占用</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">高（每个项目独立存储）</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">较高</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">极低（全局共享存储）</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">低（共享存储）</span></strong></td>

</tr>
<tr>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">锁文件格式</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt"><code>package-lock.json</code>（嵌套）</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt"><code>yarn.lock</code>（扁平列表）</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt"><code>pnpm-lock.yaml</code>（内容寻址）</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt"><code>bun.lockb</code>（二进制高效）</span></strong></td>

</tr>
<tr>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">幻影依赖</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">严重（依赖提升）</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">存在</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">无（严格隔离）</span></strong></td>
<td><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">较少（但比 pnpm 宽松）</span></strong></td>

</tr>

</tbody>

</table>
<p><br><br></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h1>4.一个问题</h1>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">对于项目2提出一个新的情况</span></strong><br><br><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">假设项目本身依赖的b包为1.0.0</span></strong><br><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">d包依赖的b包版本为:2.0.0</span></strong><br><br><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">node_modules和锁文件会发生什么?</span></strong></p>
<div class="cnblogs_code">
<pre><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">node_modules/<span style="color: rgba(0, 0, 0, 1)">
├── a</span>/               # a@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
│   └── package.json # 依赖: b@</span><span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span>, c@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
├── b</span>/               # b@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)"> (被提升到顶层)
├── c</span>/               # c@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
│   └── package.json # 依赖: d@</span><span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
├── d</span>/               # d@<span style="color: rgba(128, 0, 128, 1)">1.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
│   ├── node_modules</span>/<span style="color: rgba(0, 0, 0, 1)">
│   │   └── b</span>/       # b@<span style="color: rgba(128, 0, 128, 1)">2.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)"> (嵌套)
│   └── package.json # 依赖: b@</span><span style="color: rgba(128, 0, 128, 1)">2.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">
└── .bin</span>/</span></strong></pre>
</div>
<p>&nbsp;</p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">由于依赖提升,所以b包版本1.0.0(先遇到)于是,被提升到顶层</span></strong></p>
<p><strong><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 14pt">npm 会尽量将依赖提升到顶层，但<span style="font-size: 18pt; background-color: rgba(204, 255, 204, 1)">同一包的不同版本只能提升一个，其余版本会嵌套</span>。</span></strong></p>
<p><br><br></p>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="1.1935452018020833" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-01 11:43">2025-04-01 11:42</span>&nbsp;
<a href="https://www.cnblogs.com/FatTiger4399">养肥胖虎</a>&nbsp;
阅读(<span id="post_view_count">160</span>)&nbsp;
评论(<span id="post_comment_count">1</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18802479" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18802479);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18802479', targetLink: 'https://www.cnblogs.com/FatTiger4399/p/18802479', title: '我要成为node_modules大师!(一):包管理器选择,依赖关系分析' })">举报</a>
</div>
        