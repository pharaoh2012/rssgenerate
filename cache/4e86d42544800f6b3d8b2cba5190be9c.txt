
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/teark/p/18998619" title="发布于 2025-07-22 13:42">
    <span role="heading" aria-level="2">抓包工具哪个最好用？Charles不一定是正解</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h3 class="md-end-block md-heading"><span style="font-size: 1.17em">本文对比了一系列抓包工具最后得出一个惊天结论。</span></h3>
<h2 class="md-end-block md-heading"><span style="font-size: 1.17em">一、都有哪些抓包工具？</span></h2>
<p class="md-end-block md-p"><span class="md-tab"> <span class="md-plain">除了程序员们用得最多的finddler、charles，还有系统级抓包的Wireshark，其它更多的直接用浏览器抓包，亦或一些小众的。</span></span></p>
<h2 class="md-end-block md-heading"><span class="md-plain">二、哪个最好用？</span></h2>
<p class="md-end-block md-p"><span class="md-tab"> <span class="md-plain">用得多不代表好用，小众里亦有黄金。</span></span></p>
<p class="md-end-block md-p md-focus"><span class="md-tab"> <span class="md-plain md-expand">用得最多的finddler竟然只支持windows，还有那界面真的习惯吗，可能只是因为人家出现的时间早，吃到了互联网爆发期的红利罢了。</span></span></p>
<p class="md-end-block md-p"><span class="md-tab"> <span class="md-plain">好不容易出了个charles，虽然win和mac都支持，但竟然要收费，一般公司用用破解版的没问题，但涉及到涉密等级高的公司和体制内的公司你敢用破解版软件吗？一般情况下，它确实蛮好用的，颜值高能完全替代finddler，但抓包手机app会出现一些unknow的情况，相信不少小伙伴被整怕了。</span></span></p>
<p class="md-end-block md-p"><span class="md-tab"> <span class="md-plain">抓包工具基本上都是finddler和charles之争，更专业的Wireshark其实大多数人接触不到，只是听过其赫赫威名，有个有意思的现象是，很多同学一旦用过charles再换不回finddler了。</span></span></p>
<h2 class="md-end-block md-heading"><span class="md-plain">三、哪个适合自动化、爬虫？</span></h2>
<p class="md-end-block md-p"><span class="md-tab"> <span class="md-plain">上述提到的几个抓包工具都属于exe文件，是需要安装的。可一旦需要在自动化、爬虫领域里规模化应用，那它们都不适用了。</span></span></p>
<p class="md-end-block md-p"><span class="md-tab"> <span class="md-plain">用什么呢？有今天的主角：<span><strong>mitmproxy</strong></span></span></span></p>
<p class="md-end-block md-p"><span class="md-tab"> <span class="md-plain">mitmproxy 是一款强大的开源抓包工具，支持命令行、Web 界面和 Python 脚本扩展，适合高级用户和开发者进行 HTTP/HTTPS 流量的拦截、分析和修改。以下是其核心功能和使用方法。</span></span></p>
<h2 class="md-end-block md-heading"><span class="md-plain">四、mitmproxy安装与启动</span></h2>
<ol class="ol-list">
<li class="md-list-item">
<p class="md-end-block md-p"><span>安装<span class="md-plain">（需 Python 3.6+）：</span></span></p>
<pre class="md-fences md-end-block ty-contain-cm modeLoaded"><span>pip install mitmproxy</span></pre>
</li>
<li class="md-list-item">
<p class="md-end-block md-p">三种启动模式<span class="md-plain">：</span></p>
<ul class="ul-list" data-mark="-">
<li class="md-list-item">
<p class="md-end-block md-p"><span><code>mitmproxy</code><span class="md-plain">：命令行交互界面（推荐新手）。</span></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span><code>mitmweb</code><span class="md-plain">：Web 界面（浏览器访问 <span><code>http://localhost:8081</code><span class="md-plain">）。</span></span></span></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span><code>mitmdump</code><span class="md-plain">：无界面模式，用于自动化脚本（类似 Tcpdump）。</span></span></p>
</li>
</ul>
</li>
</ol>
<h2 class="md-end-block md-heading"><span class="md-plain">五、基本抓包流程</span></h2>
<h4 class="md-end-block md-heading"><span class="md-plain">1. 配置手机 / 浏览器代理</span></h4>
<ul class="ul-list" data-mark="-">
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-plain">确保手机与电脑在同一局域网，获取电脑 IP（如 <span><code>192.168.1.100</code><span class="md-plain">）。</span></span></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-plain">手机 Wi-Fi 设置 → 代理 → 手动 → 服务器主机名（电脑 IP）→ 端口（默认 <span><code>8080</code><span class="md-plain">）。</span></span></span></p>
</li>
</ul>
<h4 class="md-end-block md-heading"><span class="md-plain">2. 安装证书</span></h4>
<ul class="ul-list" data-mark="-">
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-plain">启动 mitmproxy：<span><code>mitmproxy</code><span class="md-plain"> 或 <span><code>mitmweb</code><span class="md-plain">。</span></span></span></span></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-plain">手机浏览器访问: <span class="md-link"><a href="http://mitm.it" rel="noopener nofollow">http://mitm.it</a></span></span></p>
<p class="md-end-block md-p"><span class="md-plain">，下载对应系统的证书并安装：</span></p>
<ul class="ul-list" data-mark="-">
<li class="md-list-item">
<p class="md-end-block md-p"><span>iOS<span class="md-plain">：设置 → 通用 → 描述文件与设备管理 → 安装证书 → 关于本机 → 证书信任设置 → 信任。</span></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span>Android<span class="md-plain">：设置 → 安全 → 加密与凭据 → 从存储设备安装 → 选择证书。</span></span></p>
</li>
</ul>
</li>
</ul>
<h4 class="md-end-block md-heading"><span class="md-plain">3. 查看流量</span></h4>
<ul class="ul-list" data-mark="-">
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-plain">在 mitmproxy 界面中，使用方向键浏览请求，按 <span><code>Enter</code><span class="md-plain"> 查看详情，按 <span><code>q</code><span class="md-plain"> 返回列表。</span></span></span></span></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-plain">在 mitmweb 界面中，浏览器会显示请求列表、响应内容、时间线等可视化数据。</span></p>
</li>
</ul>
<h2><span class="md-plain">六、Python 脚本扩展</span></h2>
<p class="md-end-block md-p"><span class="md-plain">mitmproxy 最强大的功能是通过 Python 脚本实现自动化拦截和修改。</span></p>
<h4 class="md-end-block md-heading"><span class="md-plain">示例 1：修改请求头</span></h4>
<p class="md-end-block md-p"><span class="md-plain">创建脚本 <span><code>modify_headers.py</code><span class="md-plain">：</span></span></span></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">def</span><span style="color: rgba(0, 0, 0, 1)"> request(flow):
    </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 添加自定义请求头</span>
    flow.request.headers[<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">User-Agent</span><span style="color: rgba(128, 0, 0, 1)">"</span>] = <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">MitmProxy/1.0</span><span style="color: rgba(128, 0, 0, 1)">"</span>
    <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 重定向请求</span>
    <span style="color: rgba(0, 0, 255, 1)">if</span> <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">example.com</span><span style="color: rgba(128, 0, 0, 1)">"</span> <span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)"> flow.request.url:
        flow.request.url </span>= flow.request.url.replace(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">example.com</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">test.com</span><span style="color: rgba(128, 0, 0, 1)">"</span>)</pre>
</div>
<p class="md-end-block md-p"><span class="md-plain">运行脚本：mitmproxy -s modify_headers.py</span></p>
<h4 class="md-end-block md-heading"><span class="md-plain">示例 2：篡改响应内容</span></h4>
<p class="md-end-block md-p"><span class="md-plain">创建脚本 <span><code>modify_response.py</code><span class="md-plain">：</span></span></span></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">def</span><span style="color: rgba(0, 0, 0, 1)"> response(flow):
    </span><span style="color: rgba(0, 0, 255, 1)">if</span> <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">json</span><span style="color: rgba(128, 0, 0, 1)">"</span> <span style="color: rgba(0, 0, 255, 1)">in</span> flow.response.headers.get(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Content-Type</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(128, 0, 0, 1)">""</span><span style="color: rgba(0, 0, 0, 1)">):
        </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 修改 JSON 响应</span>
        data =<span style="color: rgba(0, 0, 0, 1)"> flow.response.json()
        data[</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">modified</span><span style="color: rgba(128, 0, 0, 1)">"</span>] =<span style="color: rgba(0, 0, 0, 1)"> True
        flow.response.text </span>= str(data)</pre>
</div>
<h4 class="md-end-block md-heading"><span class="md-plain">示例 3：模拟弱网环境</span></h4>
<p class="md-end-block md-p"><span class="md-plain">创建脚本 <span><code>slow_internet.py</code><span class="md-plain">：</span></span></span></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">from</span> mitmproxy <span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> ctx
​
</span><span style="color: rgba(0, 0, 255, 1)">def</span><span style="color: rgba(0, 0, 0, 1)"> request(flow):
    </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 延迟所有请求 2 秒</span>
    ctx.master.commands.call(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">flow.sleep</span><span style="color: rgba(128, 0, 0, 1)">"</span>, [flow], 2)</pre>
</div>
<h2 class="md-end-block md-heading"><span class="md-plain">七、高级用法</span></h2>
<h4 class="md-end-block md-heading"><span class="md-plain">1. 抓包 HTTPS</span></h4>
<ul class="ul-list" data-mark="-">
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-plain">默认情况下，mitmproxy 会自动解密 HTTPS 流量，需确保：</span></p>
<ul class="ul-list" data-mark="-">
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-plain">手机已安装并信任 mitmproxy 证书。</span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-plain">脚本中未禁用 SSL 验证（如 <span><code>verify=False</code><span class="md-plain">）。</span></span></span></p>
</li>
</ul>
</li>
</ul>
<h4 class="md-end-block md-heading"><span class="md-plain">2. 多设备同时抓包</span></h4>
<ul class="ul-list" data-mark="-">
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-plain">在电脑上启动 mitmproxy，多个手机 / 设备配置相同的代理（电脑 IP + 8080 端口），流量会汇总显示。</span></p>
</li>
</ul>
<h4 class="md-end-block md-heading"><span class="md-plain">3. 导出数据</span></h4>
<ul class="ul-list" data-mark="-">
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-plain">使用mitmdump将流量保存为 JSON 或 CSV：</span></p>
<pre class="md-fences md-end-block ty-contain-cm modeLoaded"><span>mitmdump <span class="cm-attribute">-w output.json &nbsp;<span class="cm-comment"># 保存为 JSON<br><span>mitmdump <span class="cm-attribute">-s <span class="cm-string">"print(request.url)" &nbsp;<span class="cm-comment"># 自定义输出</span></span></span></span></span></span></span></pre>
</li>
</ul>
<h4 class="md-end-block md-heading"><span class="md-plain">4. 与其他工具集成</span></h4>
<ul class="ul-list" data-mark="-">
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-plain">通过 Python API 将 mitmproxy 集成到自动化测试框架（如 pytest）：</span></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">from</span> mitmproxy <span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> http
​
</span><span style="color: rgba(0, 0, 255, 1)">def</span> request(flow: http.HTTPFlow) -&gt;<span style="color: rgba(0, 0, 0, 1)"> None:
    </span><span style="color: rgba(0, 0, 255, 1)">if</span> flow.request.url.endswith(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">/api/data</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">):
        flow.response </span>=<span style="color: rgba(0, 0, 0, 1)"> http.HTTPResponse.make(
            </span>200<span style="color: rgba(0, 0, 0, 1)">,
            b</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">{"mitmproxy": "intercepted"}</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">,
            {</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Content-Type</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">application/json</span><span style="color: rgba(128, 0, 0, 1)">"</span>})</pre>
</div>
</li>
</ul>
<h2 class="md-end-block md-heading"><span class="md-plain">八、常见问题与解决</span></h2>
<ol class="ol-list">
<li class="md-list-item">
<p class="md-end-block md-p">证书安装失败<span class="md-plain">：</span></p>
<ul class="ul-list" data-mark="-">
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-plain">确保手机与电脑在同一网络，mitmproxy 正在运行。</span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-plain">尝试在手机浏览器中直接访问 <span><code>http://mitm.it</code><span class="md-plain"> 重新下载证书。</span></span></span></p>
</li>
</ul>
</li>
<li class="md-list-item">
<p class="md-end-block md-p">HTTPS 请求显示为乱码<span class="md-plain">：</span></p>
<ul class="ul-list" data-mark="-">
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-plain">检查证书是否正确安装并信任。</span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-plain">确认应用未使用证书锁定（SSL Pinning），可通过 Frida 等工具绕过。</span></p>
</li>
</ul>
</li>
<li class="md-list-item">
<p class="md-end-block md-p">性能问题<span class="md-plain">：</span></p>
<ul class="ul-list" data-mark="-">
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-plain">使用过滤表达式减少不必要的流量（如 <span><code>~u /api</code><span class="md-plain">）。</span></span></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-plain">大流量场景建议使用 <span><code>mitmdump</code><span class="md-plain"> + 脚本处理，避免界面卡顿。</span></span></span></p>
</li>
</ul>
</li>
</ol>
<h2 class="md-end-block md-heading"><span>总结</span></h2>
<p class="md-end-block md-p"><span class="md-plain">最强抓包工具非mitmproxy莫属，mitmproxy 适合需要深度定制和自动化的场景，通过 Python 脚本可实现复杂的流量控制和测试逻辑。相比 Fiddler 和 Charles，它更适合技术能力较强的开发者和测试人员。如果需要图形界面和快速上手，可优先使用 Charles；如果需要跨平台和脚本扩展，mitmproxy 是更好的选择。</span></p>
<div><span class="md-plain">&nbsp;</span></div>
</div>
<div id="MySignature" role="contentinfo">
    <div>作者：<a target="_blank">Teark</a></div>
<div>出处：<a href="https://www.cnblogs.com/teark" target="_blank">https://www.cnblogs.com/teark</a></div>
<div>本文版权归作者-博客园测神 独有，欢迎转载，但未经作者同意必须在文章页面给出原文链接，否则保留追究法律责任的权利。 </div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.002777777777777778" data-date-updated="2025-07-22 13:46">2025-07-22 13:42</span>&nbsp;
<a href="https://www.cnblogs.com/teark">测神</a>&nbsp;
阅读(<span id="post_view_count">23</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18998619);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18998619', targetLink: 'https://www.cnblogs.com/teark/p/18998619', title: '抓包工具哪个最好用？Charles不一定是正解' })">举报</a>
</div>
        