
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Johny-zhao/p/18972015" title="发布于 2025-07-08 02:00">
    <span role="heading" aria-level="2">Docker + CentOS 部署 Zookeeper 集群 + Kubernetes Operator 自动化运维方案</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<div class="dad65929">
<div class="_4f9bf79 d7dc56a8 _43c05b5">
<div class="ds-markdown ds-markdown--block">
<h2>环境说明</h2>
<div class="markdown-table-wrapper">
<table>
<thead>
<tr><th>主机 IP</th><th>主机名</th><th>节点角色</th><th>数据目录</th><th>Kubernetes 节点标签</th></tr>
</thead>
<tbody>
<tr>
<td>192.168.10.100</td>
<td>zk1</td>
<td>Master</td>
<td><code>/opt/zookeeper/data</code></td>
<td>zk-cluster=true</td>
</tr>
<tr>
<td>192.168.10.101</td>
<td>zk2</td>
<td>Worker</td>
<td><code>/opt/zookeeper/data</code></td>
<td>zk-cluster=true</td>
</tr>
<tr>
<td>192.168.10.102</td>
<td>zk3</td>
<td>Worker</td>
<td><code>/opt/zookeeper/data</code></td>
<td>zk-cluster=true</td>
</tr>
<tr>
<td>192.168.10.103</td>
<td>zk4</td>
<td>Worker</td>
<td><code>/opt/zookeeper/data</code></td>
<td>zk-cluster=true</td>
</tr>
<tr>
<td>192.168.10.104</td>
<td>zk5</td>
<td>Worker</td>
<td><code>/opt/zookeeper/data</code></td>
<td>zk-cluster=true</td>
</tr>
</tbody>
</table>
</div>
<hr>
<h3>一、基础环境部署（所有节点）</h3>
<h4>1. 系统配置</h4>
<div class="md-code-block md-code-block-light">
<div class="md-code-block-banner-wrap">
<div class="md-code-block-banner md-code-block-banner-lite">
<div class="_121d384">
<div class="d2a24f03"><span class="d813de27">bash</span></div>
<div class="d2a24f03">&nbsp;</div>
</div>
</div>
</div>
<pre><span class="token comment"># 设置主机名
<span class="token function">sudo hostnamectl set-hostname zk1  <span class="token comment"># 分别在每台机器执行对应主机名

<span class="token comment"># 编辑hosts文件
<span class="token function">sudo <span class="token function">tee <span class="token parameter variable">-a /etc/hosts <span class="token operator">&lt;&lt;<span class="token string">EOF
192.168.10.100 zk1
192.168.10.101 zk2
192.168.10.102 zk3
192.168.10.103 zk4
192.168.10.104 zk5
EOF

<span class="token comment"># 关闭SELinux
<span class="token function">sudo setenforce <span class="token number">0
<span class="token function">sudo <span class="token function">sed <span class="token parameter variable">-i <span class="token string">'s/^SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config

<span class="token comment"># 优化内核参数
<span class="token function">sudo <span class="token function">tee <span class="token parameter variable">-a /etc/sysctl.conf <span class="token operator">&lt;&lt;<span class="token string">EOF
net.core.somaxconn=65535
net.ipv4.tcp_max_syn_backlog=65535
vm.swappiness=1
EOF
<span class="token function">sudo <span class="token function">sysctl <span class="token parameter variable">-p</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<h4>2. Docker 安装</h4>
<div class="md-code-block md-code-block-light">
<div class="md-code-block-banner-wrap">
<div class="md-code-block-banner md-code-block-banner-lite">
<div class="_121d384">
<div class="d2a24f03"><span class="d813de27">bash</span></div>
<div class="d2a24f03">&nbsp;</div>
</div>
</div>
</div>
<pre><span class="token comment"># 安装依赖
<span class="token function">sudo dnf <span class="token function">install <span class="token parameter variable">-y yum-utils device-mapper-persistent-data lvm2

<span class="token comment"># 添加Docker仓库
<span class="token function">sudo yum-config-manager --add-repo<span class="token operator">=https://download.docker.com/linux/centos/docker-ce.repo

<span class="token comment"># 安装Docker
<span class="token function">sudo dnf <span class="token function">install <span class="token parameter variable">-y docker-ce docker-ce-cli containerd.io

<span class="token comment"># 配置Docker
<span class="token function">sudo <span class="token function">mkdir <span class="token parameter variable">-p /etc/docker
<span class="token function">sudo <span class="token function">tee /etc/docker/daemon.json <span class="token operator">&lt;&lt;<span class="token string">EOF
{
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m",
    "max-file": "3"
  }
}
EOF

<span class="token comment"># 启动Docker
<span class="token function">sudo systemctl start <span class="token function">docker
<span class="token function">sudo systemctl <span class="token builtin class-name">enable <span class="token function">docker</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<h4>3. Kubernetes 组件安装</h4>
<div class="md-code-block md-code-block-light">
<div class="md-code-block-banner-wrap">
<div class="md-code-block-banner md-code-block-banner-lite">
<div class="_121d384">
<div class="d2a24f03"><span class="d813de27">bash</span></div>
<div class="d2a24f03">&nbsp;</div>
</div>
</div>
</div>
<pre><span class="token comment"># 禁用Swap
<span class="token function">sudo swapoff <span class="token parameter variable">-a
<span class="token function">sudo <span class="token function">sed <span class="token parameter variable">-i <span class="token string">'/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

<span class="token comment"># 安装kubeadm/kubelet/kubectl
<span class="token function">cat <span class="token operator">&lt;&lt;<span class="token string">EOF<span class="token bash punctuation"> <span class="token operator">| <span class="token function">sudo <span class="token function">tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

<span class="token function">sudo dnf <span class="token function">install <span class="token parameter variable">-y kubelet kubeadm kubectl <span class="token parameter variable">--disableexcludes<span class="token operator">=kubernetes
<span class="token function">sudo systemctl <span class="token builtin class-name">enable <span class="token parameter variable">--now kubelet

<span class="token comment"># 初始化Master节点 (仅在zk1执行)
<span class="token function">sudo kubeadm init --pod-network-cidr<span class="token operator">=<span class="token number">10.244.0.0/16 <span class="token punctuation">\
  --control-plane-endpoint<span class="token operator">=<span class="token string">"zk1:6443" <span class="token punctuation">\
  --upload-certs <span class="token punctuation">\
  --apiserver-advertise-address<span class="token operator">=<span class="token number">192.168.10.100

<span class="token comment"># 配置kubectl (在zk1执行)
<span class="token function">mkdir <span class="token parameter variable">-p <span class="token environment constant">$HOME/.kube
<span class="token function">sudo <span class="token function">cp <span class="token parameter variable">-i /etc/kubernetes/admin.conf <span class="token environment constant">$HOME/.kube/config
<span class="token function">sudo <span class="token function">chown <span class="token variable"><span class="token variable">$(<span class="token function">id <span class="token parameter variable">-u<span class="token variable">)<span class="token builtin class-name">:<span class="token variable"><span class="token variable">$(<span class="token function">id <span class="token parameter variable">-g<span class="token variable">) <span class="token environment constant">$HOME/.kube/config

<span class="token comment"># 安装网络插件
kubectl apply <span class="token parameter variable">-f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

<span class="token comment"># 加入Worker节点 (在zk2-zk5执行)
<span class="token comment"># 使用kubeadm init输出的join命令
kubeadm <span class="token function">join zk1:6443 <span class="token parameter variable">--token <span class="token operator">&lt;token<span class="token operator">&gt; --discovery-token-ca-cert-hash <span class="token operator">&lt;hash<span class="token operator">&gt;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<hr>
<h3>二、Zookeeper Operator 部署</h3>
<h4>1. 安装 Zookeeper Operator</h4>
<div class="md-code-block md-code-block-light">
<div class="md-code-block-banner-wrap">
<div class="md-code-block-banner md-code-block-banner-lite">
<div class="_121d384">
<div class="d2a24f03"><span class="d813de27">bash</span></div>
<div class="d2a24f03">&nbsp;</div>
</div>
</div>
</div>
<pre><span class="token comment"># 创建命名空间
kubectl create ns zookeeper-operator

<span class="token comment"># 部署Operator
kubectl apply <span class="token parameter variable">-f https://raw.githubusercontent.com/pravega/zookeeper-operator/master/deploy/all_ns/rbac.yaml
kubectl apply <span class="token parameter variable">-f https://raw.githubusercontent.com/pravega/zookeeper-operator/master/deploy/all_ns/operator.yaml

<span class="token comment"># 验证Operator状态
kubectl get pods <span class="token parameter variable">-n zookeeper-operator</span></span></span></span></span></span></pre>
</div>
<h4>2. 创建 Zookeeper 集群 CRD</h4>
<p class="ds-markdown-paragraph"><code>zookeeper-cluster.yaml</code>:</p>
<div class="md-code-block md-code-block-light">
<div class="md-code-block-banner-wrap">
<div class="md-code-block-banner md-code-block-banner-lite">
<div class="_121d384">
<div class="d2a24f03"><span class="d813de27">yaml</span></div>
<div class="d2a24f03">&nbsp;</div>
</div>
</div>
</div>
<pre><span class="token key atrule">apiVersion<span class="token punctuation">: zookeeper.pravega.io/v1beta1
<span class="token key atrule">kind<span class="token punctuation">: ZookeeperCluster
<span class="token key atrule">metadata<span class="token punctuation">:
  <span class="token key atrule">name<span class="token punctuation">: zookeeper<span class="token punctuation">-cluster
  <span class="token key atrule">namespace<span class="token punctuation">: default
<span class="token key atrule">spec<span class="token punctuation">:
  <span class="token key atrule">replicas<span class="token punctuation">: <span class="token number">5
  <span class="token key atrule">image<span class="token punctuation">:
    <span class="token key atrule">repository<span class="token punctuation">: zookeeper
    <span class="token key atrule">tag<span class="token punctuation">: 3.8.0
  <span class="token key atrule">persistence<span class="token punctuation">:
    <span class="token key atrule">storageClassName<span class="token punctuation">: local<span class="token punctuation">-storage
    <span class="token key atrule">volumeReclaimPolicy<span class="token punctuation">: Retain
    <span class="token key atrule">size<span class="token punctuation">: 20Gi
  <span class="token key atrule">config<span class="token punctuation">:
    <span class="token key atrule">initLimit<span class="token punctuation">: <span class="token number">15
    <span class="token key atrule">syncLimit<span class="token punctuation">: <span class="token number">5
    <span class="token key atrule">tickTime<span class="token punctuation">: <span class="token number">2000
    <span class="token key atrule">autopurge<span class="token punctuation">:
      <span class="token key atrule">snapRetainCount<span class="token punctuation">: <span class="token number">10
      <span class="token key atrule">purgeInterval<span class="token punctuation">: <span class="token number">24
  <span class="token key atrule">pod<span class="token punctuation">:
    <span class="token key atrule">affinity<span class="token punctuation">:
      <span class="token key atrule">podAntiAffinity<span class="token punctuation">:
        <span class="token key atrule">requiredDuringSchedulingIgnoredDuringExecution<span class="token punctuation">:
        <span class="token punctuation">- <span class="token key atrule">labelSelector<span class="token punctuation">:
            <span class="token key atrule">matchExpressions<span class="token punctuation">:
            <span class="token punctuation">- <span class="token key atrule">key<span class="token punctuation">: app
              <span class="token key atrule">operator<span class="token punctuation">: In
              <span class="token key atrule">values<span class="token punctuation">:
              <span class="token punctuation">- zookeeper
          <span class="token key atrule">topologyKey<span class="token punctuation">: kubernetes.io/hostname
    <span class="token key atrule">nodeSelector<span class="token punctuation">:
      <span class="token key atrule">zk-cluster<span class="token punctuation">: <span class="token string">"true"
    <span class="token key atrule">securityContext<span class="token punctuation">:
      <span class="token key atrule">runAsUser<span class="token punctuation">: <span class="token number">1000
      <span class="token key atrule">fsGroup<span class="token punctuation">: <span class="token number">1000
    <span class="token key atrule">resources<span class="token punctuation">:
      <span class="token key atrule">requests<span class="token punctuation">:
        <span class="token key atrule">memory<span class="token punctuation">: <span class="token string">"2Gi"
        <span class="token key atrule">cpu<span class="token punctuation">: <span class="token string">"1"
      <span class="token key atrule">limits<span class="token punctuation">:
        <span class="token key atrule">memory<span class="token punctuation">: <span class="token string">"4Gi"
        <span class="token key atrule">cpu<span class="token punctuation">: <span class="token string">"2"
  <span class="token key atrule">security<span class="token punctuation">:
    <span class="token key atrule">enable<span class="token punctuation">: <span class="token boolean important">true
    <span class="token key atrule">jaasConfig<span class="token punctuation">:
      <span class="token key atrule">secretRef<span class="token punctuation">: zk<span class="token punctuation">-jaas<span class="token punctuation">-secret
    <span class="token key atrule">tlsConfig<span class="token punctuation">:
      <span class="token key atrule">enable<span class="token punctuation">: <span class="token boolean important">true
      <span class="token key atrule">secretRef<span class="token punctuation">: zk<span class="token punctuation">-tls<span class="token punctuation">-secret
  <span class="token key atrule">metrics<span class="token punctuation">:
    <span class="token key atrule">enable<span class="token punctuation">: <span class="token boolean important">true
    <span class="token key atrule">port<span class="token punctuation">: <span class="token number">7000</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<h4>3. 创建安全配置</h4>
<div class="md-code-block md-code-block-light">
<div class="md-code-block-banner-wrap">
<div class="md-code-block-banner md-code-block-banner-lite">
<div class="_121d384">
<div class="d2a24f03"><span class="d813de27">bash</span></div>
<div class="d2a24f03">&nbsp;</div>
</div>
</div>
</div>
<pre><span class="token comment"># JAAS 认证配置
kubectl create secret generic zk-jaas-secret <span class="token punctuation">\
  --from-literal<span class="token operator">=jaas-config<span class="token operator">=<span class="token string">"Server {
    org.apache.zookeeper.server.auth.DigestLoginModule required
    user_admin=<span class="token entity" title="\&quot;">\"adminpassword<span class="token entity" title="\&quot;">\"
    user_appuser=<span class="token entity" title="\&quot;">\"apppassword<span class="token entity" title="\&quot;">\";
};"

<span class="token comment"># TLS 证书配置
<span class="token comment"># (提前生成keystore.jks)
kubectl create secret generic zk-tls-secret <span class="token punctuation">\
  --from-file<span class="token operator">=keystore.jks<span class="token operator">=keystore.jks <span class="token punctuation">\
  --from-literal<span class="token operator">=keystore-password<span class="token operator">=changeit</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<h4>4. 创建存储类</h4>
<p class="ds-markdown-paragraph"><code>local-storage.yaml</code>:</p>
<div class="md-code-block md-code-block-light">
<div class="md-code-block-banner-wrap">
<div class="md-code-block-banner md-code-block-banner-lite">
<div class="_121d384">
<div class="d2a24f03"><span class="d813de27">yaml</span></div>
<div class="d2a24f03">&nbsp;</div>
</div>
</div>
</div>
<pre><span class="token key atrule">apiVersion<span class="token punctuation">: storage.k8s.io/v1
<span class="token key atrule">kind<span class="token punctuation">: StorageClass
<span class="token key atrule">metadata<span class="token punctuation">:
  <span class="token key atrule">name<span class="token punctuation">: local<span class="token punctuation">-storage
<span class="token key atrule">provisioner<span class="token punctuation">: kubernetes.io/no<span class="token punctuation">-provisioner
<span class="token key atrule">volumeBindingMode<span class="token punctuation">: WaitForFirstConsumer</span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<h4>5. 部署集群</h4>
<div class="md-code-block md-code-block-light">
<div class="md-code-block-banner-wrap">
<div class="md-code-block-banner md-code-block-banner-lite">
<div class="_121d384">
<div class="d2a24f03"><span class="d813de27">bash</span></div>
<div class="d2a24f03">&nbsp;</div>
</div>
</div>
</div>
<pre>kubectl apply <span class="token parameter variable">-f local-storage.yaml
kubectl apply <span class="token parameter variable">-f zookeeper-cluster.yaml

<span class="token comment"># 查看集群状态
kubectl get zookeepercluster
kubectl get pods <span class="token parameter variable">-l <span class="token assign-left variable">app<span class="token operator">=zookeeper</span></span></span></span></span></span></pre>
</div>
<hr>
<h3>三、自动化运维功能实现</h3>
<h4>1. 自动扩缩容</h4>
<div class="md-code-block md-code-block-light">
<div class="md-code-block-banner-wrap">
<div class="md-code-block-banner md-code-block-banner-lite">
<div class="_121d384">
<div class="d2a24f03"><span class="d813de27">bash</span></div>
<div class="d2a24f03">&nbsp;</div>
</div>
</div>
</div>
<pre><span class="token comment"># 水平扩展
kubectl patch zk zookeeper-cluster <span class="token parameter variable">--type<span class="token operator">=<span class="token string">'merge' <span class="token parameter variable">-p <span class="token string">'{"spec":{"replicas":7}}'

<span class="token comment"># 垂直扩容
kubectl patch zk zookeeper-cluster <span class="token parameter variable">--type<span class="token operator">=<span class="token string">'merge' <span class="token parameter variable">-p <span class="token string">'{"spec":{"pod":{"resources":{"limits":{"memory":"8Gi"}}}}}'</span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<h4>2. 自动备份与恢复</h4>
<p class="ds-markdown-paragraph"><code>zk-backup-job.yaml</code>:</p>
<div class="md-code-block md-code-block-light">
<div class="md-code-block-banner-wrap">
<div class="md-code-block-banner md-code-block-banner-lite">
<div class="_121d384">
<div class="d2a24f03"><span class="d813de27">yaml</span></div>
<div class="d2a24f03">&nbsp;</div>
</div>
</div>
</div>
<pre><span class="token key atrule">apiVersion<span class="token punctuation">: batch/v1
<span class="token key atrule">kind<span class="token punctuation">: CronJob
<span class="token key atrule">metadata<span class="token punctuation">:
  <span class="token key atrule">name<span class="token punctuation">: zk<span class="token punctuation">-backup
<span class="token key atrule">spec<span class="token punctuation">:
  <span class="token key atrule">schedule<span class="token punctuation">: <span class="token string">"0 2 * * *"
  <span class="token key atrule">jobTemplate<span class="token punctuation">:
    <span class="token key atrule">spec<span class="token punctuation">:
      <span class="token key atrule">template<span class="token punctuation">:
        <span class="token key atrule">spec<span class="token punctuation">:
          <span class="token key atrule">containers<span class="token punctuation">:
          <span class="token punctuation">- <span class="token key atrule">name<span class="token punctuation">: backup
            <span class="token key atrule">image<span class="token punctuation">: zookeeper<span class="token punctuation">:3.8.0
            <span class="token key atrule">command<span class="token punctuation">: <span class="token punctuation">[<span class="token string">"/bin/sh"<span class="token punctuation">, <span class="token string">"-c"<span class="token punctuation">]
            <span class="token key atrule">args<span class="token punctuation">:
              <span class="token punctuation">- <span class="token punctuation">|<span class="token scalar string">
                echo "Connecting to ${ZK_SERVER}"
                echo "savemn" | nc ${ZK_SERVER} 2181
                tar czf /backup/$(date +%Y%m%d).tar.gz -C /data .
            <span class="token key atrule">volumeMounts<span class="token punctuation">:
            <span class="token punctuation">- <span class="token key atrule">name<span class="token punctuation">: backup<span class="token punctuation">-volume
              <span class="token key atrule">mountPath<span class="token punctuation">: /backup
            <span class="token punctuation">- <span class="token key atrule">name<span class="token punctuation">: data<span class="token punctuation">-volume
              <span class="token key atrule">mountPath<span class="token punctuation">: /data
          <span class="token key atrule">restartPolicy<span class="token punctuation">: OnFailure
          <span class="token key atrule">volumes<span class="token punctuation">:
          <span class="token punctuation">- <span class="token key atrule">name<span class="token punctuation">: backup<span class="token punctuation">-volume
            <span class="token key atrule">persistentVolumeClaim<span class="token punctuation">:
              <span class="token key atrule">claimName<span class="token punctuation">: zk<span class="token punctuation">-backup<span class="token punctuation">-pvc
          <span class="token punctuation">- <span class="token key atrule">name<span class="token punctuation">: data<span class="token punctuation">-volume
            <span class="token key atrule">persistentVolumeClaim<span class="token punctuation">:
              <span class="token key atrule">claimName<span class="token punctuation">: $(ZK_PVC)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<h4>3. 自动监控告警</h4>
<p class="ds-markdown-paragraph"><code>prometheus-monitoring.yaml</code>:</p>
<div class="md-code-block md-code-block-light">
<div class="md-code-block-banner-wrap">
<div class="md-code-block-banner md-code-block-banner-lite">
<div class="_121d384">
<div class="d2a24f03"><span class="d813de27">yaml</span></div>
<div class="d2a24f03">&nbsp;</div>
</div>
</div>
</div>
<pre><span class="token key atrule">apiVersion<span class="token punctuation">: monitoring.coreos.com/v1
<span class="token key atrule">kind<span class="token punctuation">: ServiceMonitor
<span class="token key atrule">metadata<span class="token punctuation">:
  <span class="token key atrule">name<span class="token punctuation">: zookeeper<span class="token punctuation">-monitor
<span class="token key atrule">spec<span class="token punctuation">:
  <span class="token key atrule">selector<span class="token punctuation">:
    <span class="token key atrule">matchLabels<span class="token punctuation">:
      <span class="token key atrule">app<span class="token punctuation">: zookeeper
  <span class="token key atrule">endpoints<span class="token punctuation">:
  <span class="token punctuation">- <span class="token key atrule">port<span class="token punctuation">: metrics
    <span class="token key atrule">interval<span class="token punctuation">: 15s
  <span class="token key atrule">namespaceSelector<span class="token punctuation">:
    <span class="token key atrule">any<span class="token punctuation">: <span class="token boolean important">true</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<h4>4. 自动证书轮换</h4>
<div class="md-code-block md-code-block-light">
<div class="md-code-block-banner-wrap">
<div class="md-code-block-banner md-code-block-banner-lite">
<div class="_121d384">
<div class="d2a24f03"><span class="d813de27">bash</span></div>
<div class="d2a24f03">&nbsp;</div>
</div>
</div>
</div>
<pre><span class="token comment"># 证书更新后滚动重启
kubectl patch zk zookeeper-cluster <span class="token parameter variable">--type<span class="token operator">=<span class="token string">'merge' <span class="token parameter variable">-p <span class="token string">'{"spec":{"tlsConfig":{"certUpdated":true}}}'</span></span></span></span></span></span></pre>
</div>
<hr>
<h3>四、安全合规与灾备</h3>
<h4>1. 安全加固</h4>
<div class="md-code-block md-code-block-light">
<div class="md-code-block-banner-wrap">
<div class="md-code-block-banner md-code-block-banner-lite">
<div class="_121d384">
<div class="d2a24f03"><span class="d813de27">yaml</span></div>
<div class="d2a24f03">&nbsp;</div>
</div>
</div>
</div>
<pre><span class="token comment"># 在CRD中增加安全配置
<span class="token key atrule">spec<span class="token punctuation">:
  <span class="token key atrule">security<span class="token punctuation">:
    <span class="token key atrule">enable<span class="token punctuation">: <span class="token boolean important">true
    <span class="token key atrule">jaasConfig<span class="token punctuation">:
      <span class="token key atrule">secretRef<span class="token punctuation">: zk<span class="token punctuation">-jaas<span class="token punctuation">-secret
    <span class="token key atrule">tlsConfig<span class="token punctuation">:
      <span class="token key atrule">enable<span class="token punctuation">: <span class="token boolean important">true
      <span class="token key atrule">secretRef<span class="token punctuation">: zk<span class="token punctuation">-tls<span class="token punctuation">-secret
    <span class="token key atrule">networkPolicy<span class="token punctuation">:
      <span class="token key atrule">enabled<span class="token punctuation">: <span class="token boolean important">true
      <span class="token key atrule">allowedClients<span class="token punctuation">:
      <span class="token punctuation">- 192.168.10.0/24</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<h4>2. 跨集群灾备</h4>
<div class="md-code-block md-code-block-light">
<div class="md-code-block-banner-wrap">
<div class="md-code-block-banner md-code-block-banner-lite">
<div class="_121d384">
<div class="d2a24f03"><span class="d813de27">yaml</span></div>
<div class="d2a24f03">&nbsp;</div>
</div>
</div>
</div>
<pre><span class="token key atrule">apiVersion<span class="token punctuation">: zookeeper.pravega.io/v1beta1
<span class="token key atrule">kind<span class="token punctuation">: ZookeeperCluster
<span class="token key atrule">metadata<span class="token punctuation">:
  <span class="token key atrule">name<span class="token punctuation">: zookeeper<span class="token punctuation">-dr
<span class="token key atrule">spec<span class="token punctuation">:
  <span class="token key atrule">replicas<span class="token punctuation">: <span class="token number">3
  <span class="token key atrule">config<span class="token punctuation">:
    <span class="token comment"># 配置为观察者模式
    <span class="token key atrule">peerType<span class="token punctuation">: observer
    <span class="token comment"># 连接主集群
    <span class="token key atrule">initConfig<span class="token punctuation">: <span class="token punctuation">|<span class="token scalar string">
      server.1=zk1:2888:3888:participant;2181
      server.2=zk2:2888:3888:participant;2181
      server.3=zk3:2888:3888:participant;2181
      server.4=dr-zk1:2888:3888:observer;2181
      server.5=dr-zk2:2888:3888:observer;2181
      server.6=dr-zk3:2888:3888:observer;2181</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<hr>
<h3>五、日常运维操作</h3>
<h4>1. 集群状态检查</h4>
<div class="md-code-block md-code-block-light">
<div class="md-code-block-banner-wrap">
<div class="md-code-block-banner md-code-block-banner-lite">
<div class="_121d384">
<div class="d2a24f03"><span class="d813de27">bash</span></div>
<div class="d2a24f03">&nbsp;</div>
</div>
</div>
</div>
<pre><span class="token comment"># 查看集群状态
kubectl get zookeepercluster
kubectl describe zk zookeeper-cluster

<span class="token comment"># 检查节点角色
kubectl <span class="token builtin class-name">exec zookeeper-cluster-0 -- zkServer.sh status</span></span></span></pre>
</div>
<h4>2. 日志管理</h4>
<div class="md-code-block md-code-block-light">
<div class="md-code-block-banner-wrap">
<div class="md-code-block-banner md-code-block-banner-lite">
<div class="_121d384">
<div class="d2a24f03"><span class="d813de27">bash</span></div>
<div class="d2a24f03">&nbsp;</div>
</div>
</div>
</div>
<pre><span class="token comment"># 查看实时日志
kubectl logs <span class="token parameter variable">-f zookeeper-cluster-0

<span class="token comment"># 日志归档配置 (Operator自动管理)</span></span></span></pre>
</div>
<h4>3. 配置热更新</h4>
<div class="md-code-block md-code-block-light">
<div class="md-code-block-banner-wrap">
<div class="md-code-block-banner md-code-block-banner-lite">
<div class="_121d384">
<div class="d2a24f03"><span class="d813de27">bash</span></div>
<div class="d2a24f03">&nbsp;</div>
</div>
</div>
</div>
<pre><span class="token comment"># 修改配置后触发更新
kubectl patch zk zookeeper-cluster <span class="token parameter variable">--type<span class="token operator">=<span class="token string">'merge' <span class="token parameter variable">-p <span class="token string">'{"spec":{"config":{"tickTime":"3000"}}}'</span></span></span></span></span></span></pre>
</div>
<hr>
<h3>六、扩展与升级</h3>
<h4>1. 集群升级流程</h4>
<div class="md-code-block md-code-block-light">
<div class="md-code-block-banner-wrap">
<div class="md-code-block-banner md-code-block-banner-lite">
<div class="_121d384">
<div class="d2a24f03"><span class="d813de27">bash</span></div>
<div class="d2a24f03">&nbsp;</div>
</div>
</div>
</div>
<pre><span class="token comment"># 滚动升级到新版本
kubectl patch zk zookeeper-cluster <span class="token parameter variable">--type<span class="token operator">=<span class="token string">'merge' <span class="token parameter variable">-p <span class="token string">'{"spec":{"image":{"tag":"3.9.0"}}}'

<span class="token comment"># 监控升级进度
kubectl get pods <span class="token parameter variable">-w <span class="token parameter variable">-l <span class="token assign-left variable">app<span class="token operator">=zookeeper</span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<h4>2. 多集群管理</h4>
<div class="md-code-block md-code-block-light">
<div class="md-code-block-banner-wrap">
<div class="md-code-block-banner md-code-block-banner-lite">
<div class="_121d384">
<div class="d2a24f03"><span class="d813de27">bash</span></div>
<div class="d2a24f03">&nbsp;</div>
</div>
</div>
</div>
<pre><span class="token comment"># 部署多套Zookeeper集群
kubectl apply <span class="token parameter variable">-f zookeeper-cluster-app1.yaml
kubectl apply <span class="token parameter variable">-f zookeeper-cluster-app2.yaml

<span class="token comment"># 统一监控
kubectl apply <span class="token parameter variable">-f zookeeper-global-monitor.yaml</span></span></span></span></span></pre>
</div>
<hr>
<h3>七、备份与恢复方案</h3>
<h4>1. Velero 全集群备份</h4>
<div class="md-code-block md-code-block-light">
<div class="md-code-block-banner-wrap">
<div class="md-code-block-banner md-code-block-banner-lite">
<div class="_121d384">
<div class="d2a24f03"><span class="d813de27">bash</span></div>
<div class="d2a24f03">&nbsp;</div>
</div>
</div>
</div>
<pre><span class="token comment"># 安装Velero
velero <span class="token function">install <span class="token punctuation">\
  <span class="token parameter variable">--provider aws <span class="token punctuation">\
  <span class="token parameter variable">--plugins velero/velero-plugin-for-aws:v1.0.0 <span class="token punctuation">\
  <span class="token parameter variable">--bucket zk-backups <span class="token punctuation">\
  --secret-file ./credentials-velero <span class="token punctuation">\
  --use-restic

<span class="token comment"># 创建备份
velero backup create zk-full-backup --include-namespaces default <span class="token parameter variable">--selector <span class="token assign-left variable">app<span class="token operator">=zookeeper

<span class="token comment"># 灾难恢复
velero restore create --from-backup zk-full-backup</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<h4>2. 数据迁移</h4>
<div class="md-code-block md-code-block-light">
<div class="md-code-block-banner-wrap">
<div class="md-code-block-banner md-code-block-banner-lite">
<div class="_121d384">
<div class="d2a24f03"><span class="d813de27">bash</span></div>
<div class="d2a24f03">&nbsp;</div>
</div>
</div>
</div>
<pre><span class="token comment"># 使用zkTransfer工具
kubectl <span class="token builtin class-name">exec zookeeper-cluster-0 -- zkTransfer.sh <span class="token punctuation">\
  <span class="token parameter variable">--source zk1:2181 <span class="token punctuation">\
  <span class="token parameter variable">--target new-zk1:2181 <span class="token punctuation">\
  <span class="token parameter variable">--path /critical_data <span class="token punctuation">\
  <span class="token parameter variable">--parallel <span class="token number">8</span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<hr>
<h3>运维检查清单</h3>
<div class="markdown-table-wrapper">
<table>
<thead>
<tr><th>检查项</th><th>频率</th><th>命令/方法</th></tr>
</thead>
<tbody>
<tr>
<td>集群健康状态</td>
<td>每日</td>
<td><code>kubectl get zk</code></td>
</tr>
<tr>
<td>节点资源使用率</td>
<td>每日</td>
<td><code>kubectl top pods</code></td>
</tr>
<tr>
<td>证书有效期检查</td>
<td>每月</td>
<td><code>keytool -list -v -keystore</code></td>
</tr>
<tr>
<td>备份恢复测试</td>
<td>每季度</td>
<td>Velero恢复演练</td>
</tr>
<tr>
<td>安全漏洞扫描</td>
<td>每月</td>
<td>Trivy扫描镜像</td>
</tr>
<tr>
<td>故障转移演练</td>
<td>每半年</td>
<td>模拟节点故障</td>
</tr>
<tr>
<td>性能压测</td>
<td>每年</td>
<td>ZK Benchmark工具</td>
</tr>
</tbody>
</table>
</div>
<blockquote>
<p class="ds-markdown-paragraph">通过Kubernetes Operator实现Zookeeper集群的全生命周期自动化管理，结合Velero实现灾备，Prometheus实现监控，显著提升运维效率。生产环境建议：</p>
<ol start="1">
<li>
<p class="ds-markdown-paragraph">使用HashiCorp Vault管理密钥</p>
</li>
<li>
<p class="ds-markdown-paragraph">部署多可用区集群</p>
</li>
<li>
<p class="ds-markdown-paragraph">集成OpenPolicyAgent进行策略管理</p>
</li>
<li>
<p class="ds-markdown-paragraph">使用GitOps工作流（Argo CD）管理配置</p>
</li>
</ol></blockquote>
</div>
</div>
</div>
<div class="_871cbca">&nbsp;</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-08 02:01">2025-07-08 02:00</span>&nbsp;
<a href="https://www.cnblogs.com/Johny-zhao">Johny_Zhao</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18972015);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18972015', targetLink: 'https://www.cnblogs.com/Johny-zhao/p/18972015', title: 'Docker + CentOS 部署 Zookeeper 集群 + Kubernetes Operator 自动化运维方案' })">举报</a>
</div>
        