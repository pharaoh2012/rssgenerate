<!----> <meta itemprop="headline" content="性能优化，前端能做的不多"> <meta itemprop="keywords" content="JavaScript,面试,性能优化"> <meta itemprop="datePublished" content="2025-04-23T00:55:42.000Z"> <meta itemprop="image" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-128.png~tplv-t2oaga2asx-image.image"> <div itemprop="author" itemscope="itemscope" itemtype="http://schema.org/Person"><meta itemprop="name" content="前端双越老师"> <meta itemprop="url" content="https://juejin.cn/user/1714893868765373"></div> <div itemprop="publisher" itemscope="itemscope" itemtype="http://schema.org/Organization"><meta itemprop="name" content="掘金"> <div itemprop="logo" itemscope="itemscope" itemtype="https://schema.org/ImageObject"><meta itemprop="url" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-white-180.png~tplv-t2oaga2asx-image.image"> <meta itemprop="width" content="180"> <meta itemprop="height" content="180"></div></div> <h1 class="article-title" data-v-61fb5e44="">
            性能优化，前端能做的不多
            <!----> <!----></h1> <div class="author-info-block block-hidden" data-v-61fb5e44=""><div class="author-info-box" data-v-61fb5e44=""><div class="author-name" data-v-61fb5e44=""><a href="/user/1714893868765373/posts" target="_blank" rel="" class="jj-link username username ellipsis" data-v-65b50b51="" data-v-292f6e48="" data-v-61fb5e44=""><span class="name" style="max-width:160px;" data-v-65b50b51="" data-v-292f6e48="">
    前端双越老师
  </span> <!----> <!----> <!----> </a></div> <div class="meta-box" data-v-61fb5e44=""><time datetime="2025-04-23T00:55:42.000Z" title="Wed Apr 23 2025 00:55:42 GMT+0000 (Coordinated Universal Time)" class="time" data-v-61fb5e44="">
                    2025-04-23
                  </time> <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="read-icon" data-v-61fb5e44=""><path d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor" data-v-61fb5e44=""></path><circle cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor" data-v-61fb5e44=""></circle></svg> <span class="views-count" data-v-61fb5e44="">
                    12,099
                  </span> <span class="read-time" data-v-61fb5e44=""><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" data-v-61fb5e44=""><rect width="16" height="16" fill="none" data-v-61fb5e44=""></rect><circle cx="8" cy="8" r="5.65625" stroke="#8A919F" data-v-61fb5e44=""></circle><path d="M7.69141 5.18652V8.30924H10.8141" stroke="#8A919F" stroke-linecap="round" stroke-linejoin="round" data-v-61fb5e44=""></path></svg>
                    阅读6分钟
                  </span> <!----></div></div> <div style="flex:1;" data-v-61fb5e44=""></div> <!----> <!----></div> <!----> <!----> <!----> <!----> <div id="article-root" itemprop="articleBody" class="main" data-v-61fb5e44=""><div class="article-viewer markdown-body cache result"><p>大家好，我是双越老师，也是 <a href="https://link.juejin.cn?target=https%3A%2F%2Fwww.wangeditor.com%2F" target="_blank" title="https://www.wangeditor.com/" ref="nofollow noopener noreferrer">wangEditor</a> 作者。</p>
<blockquote>
<p>我正开发一个 Node 全栈 AIGC 知识库&nbsp;<a href="https://juejin.cn/pin/7495532653221036059" target="_blank" title="https://juejin.cn/pin/7495532653221036059">划水AI</a>，包括 AI 写作、多人协同编辑。<strong>复杂业务，真实上线</strong>，大家可以去注册试用，围观项目研发过程。</p>
</blockquote>
<h2 data-id="heading-0">关于前端性能优化的困惑</h2>
<p>前端性能优化是前度面试常考的问题，答案说来复杂，其实总结下来就是：<strong>减少或拆分资源 + 异步加载</strong> 现在都搞成八股文了，面试之前背诵一下。</p>
<p>还有缓存。</p>
<p>但纯前端的缓存其实作用不大，使用场景也不多，例如 Vue computed keep-alive，React useMemo 在绝大部分场景下都用不到。虽然面试的时候我们得说出来。</p>
<p>HTTP 缓存是网络层面的，操作系统和浏览器实现的，并不是前端实现的。虽然作为前端工程师要掌握这些知识，但大多数情况下并不需要自己亲自去配置。</p>
<p>实际工作中，其实绝大部分前端项目，代码量都没有非常大，不拆分代码，不异步加载也不会有太大的影响。</p>
<p>我这两年 1v1 评审过很多前端简历，大家都会有这样一个困惑：问到前端性能优化，感觉工作几年了，也没做什么优化，而且也想不出前端能做什么优化。</p>
<p>其实这是正常的，绝大部分前端项目、前端工作都不需要优化，而且从全栈角度看，前端能做的优化也很有限。</p>
<p>但面试是是面试，工作是工作。面试造火箭，工作拧螺丝，这个大家都知道，不要为此较真。</p>
<h2 data-id="heading-1">从全栈角度的性能优化</h2>
<p>从我开发 <a href="https://juejin.cn/pin/7495532653221036059" target="_blank" title="https://juejin.cn/pin/7495532653221036059">划水AI</a> 全栈项目的经历来看，一个 web 系统影响性能的诸多因素，按优先级排序：</p>
<p>第一是网络情况，服务器地理位置和客户端的距离，大型 web 系统在全国、全球各个节点都会部署服务器，还有 CDN DCDN EDGE 边缘计算等服务，都是解决这个问题。</p>
<p>第二是服务端的延迟，最主要的是 I/O 延迟，例如查询数据库、第三方服务等。</p>
<p>第三是 SSR 服务端渲染，一次性返回内容，尽量减少网络情况。</p>
<p>第四才是纯前端性能优化，使用 loading 提示、异步加载等。其实到了纯前端应该更多是体验优化，而不是性能优化。</p>
<h3 data-id="heading-2">网络</h3>
<p>网络是最重要的一个因素，也是我们最不易察觉的因素，尤其初学者，甚至都没有独立发布上线过项目。</p>
<p><a href="https://juejin.cn/pin/7495532653221036059" target="_blank" title="https://juejin.cn/pin/7495532653221036059">划水AI</a> 之前部署在海外服务器，使用 Sentry 性能监控，TTFB 都超过 2s， FCP 接近 3s ，性能非常糟糕。</p>
<p>原因也很明显，代码无论如何优化，TTFB 时间慢是绕不过去的，这是网络层面的。</p>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/c77e49830f484f4f9741fbefcd1e7ed4~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5YmN56uv5Y-M6LaK6ICB5biI:q75.awebp?rk3s=f64ab15b&amp;x-expires=1749603533&amp;x-signature=Ha%2BBVcU43gcXLxQNuGBaQCipzO0%3D" alt="image.png" loading="lazy"></p>
<p>还有，之前 CDN 也是部署在香港的，使用站长工具做测试，会发现国内访问速度非常慢。</p>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/b79976348db946bc8abdb48670072332~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5YmN56uv5Y-M6LaK6ICB5biI:q75.awebp?rk3s=f64ab15b&amp;x-expires=1749603533&amp;x-signature=yqNubZpqG7fHTNk7lULsaRj%2FCeU%3D" alt="image.png" loading="lazy"></p>
<p>文档的多人协同编辑，之前总是不稳定重新连接。我之前一直以为是代码哪里写错了，一直没找到原因，后来发现是网络不稳定的问题。因为协同编辑服务当时是部署在亚马逊 AWS 新加坡的服务器。</p>
<p><img src="https://p3-juejin-sign.byteimg.com/tos-cn-i-k3u1fbpfcp/1ee86565490740828b74ba89fde2b7c0~tplv-k3u1fbpfcp-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5YmN56uv5Y-M6LaK6ICB5biI:q75.awebp?rk3s=f64ab15b&amp;x-expires=1749603533&amp;x-signature=rt3OTUztwLMOwA4ov2vC%2FKPn%2FKI%3D" alt="" loading="lazy"></p>
<p>这两天我刚刚把 <a href="https://juejin.cn/pin/7495532653221036059" target="_blank" title="https://juejin.cn/pin/7495532653221036059">划水AI</a> 服务迁移到国内，访问速度从感知上就不一样了，又快又稳定。具体的数据我还在跟踪中，需要持续跟踪几天，过几天统计出来再分享。</p>
<h3 data-id="heading-3">服务端响应速度</h3>
<p>首先是数据库查询速度，这是最常见的瓶颈。后端程序员都要熟练各种数据库的优化手段，前端不一定熟练，但要知道有这么回事。</p>
<p>现在 <a href="https://juejin.cn/pin/7495532653221036059" target="_blank" title="https://juejin.cn/pin/7495532653221036059">划水AI</a> 数据库用的是 Supabase 服务，是海外服务器。国内目前还没有类似的可替代服务，所以暂时还不能迁移。</p>
<p>所以每次切换文档，都会有 1s 左右的 loading 时间，体验上也说的过去。比用之前的 AWS 新加坡服务器要快了很多。</p>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/9a18f2d0f16d44579d338f8013d9ec35~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5YmN56uv5Y-M6LaK6ICB5biI:q75.awebp?rk3s=f64ab15b&amp;x-expires=1749603533&amp;x-signature=OqruwxLhDSCCJEl5SO15myn1PbU%3D" alt="image.png" loading="lazy"></p>
<p>其次是第三方服务的速度，例如 AI 服务的接口响应速度，有时候会比较慢，需要等待 3s 以上。</p>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/57af778260ad4b4a87fec437fe86c3aa~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5YmN56uv5Y-M6LaK6ICB5biI:q75.awebp?rk3s=f64ab15b&amp;x-expires=1749603533&amp;x-signature=CexWxa%2FeV%2FBdoILiQl4AmQUd1e0%3D" alt="image.png" loading="lazy"></p>
<p>但 deepseek 网页版也挺慢的，也得 loading 2-3s 时间。ChatGPT 倒是挺快，但我们得用中转服务，这一中转又慢了。</p>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/d0c13473cec348a1971d3b320f2509f2~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5YmN56uv5Y-M6LaK6ICB5biI:q75.awebp?rk3s=f64ab15b&amp;x-expires=1749603533&amp;x-signature=UNEKaVXywPsoSTZsEk9eLpc6PU0%3D" alt="image.png" loading="lazy"></p>
<p>还有例如登录时 GitHub 验证、发送邮件验证等，这个目前也不快，接下来我会考虑改用短信验证码的方式来登录。</p>
<p>第三方服务的问题是最无解的。</p>
<h3 data-id="heading-4">SSR 服务端渲染</h3>
<p>服务端获取数据，直接给出结果，或者判断跳转页面（返回 302），而不是前端 ajax 获取数据再做判断。</p>
<p>后者再如何优化，也会比前者多一步网络请求，50-100ms 是少不了的。前端压缩、拆分多少资源也填不上这个坑。</p>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/79e344c0191d475a96444b16e81def20~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5YmN56uv5Y-M6LaK6ICB5biI:q75.awebp?rk3s=f64ab15b&amp;x-expires=1749603533&amp;x-signature=tXKnKvLLFLMP4w19fRmjjUAmIzk%3D" alt="image.png" loading="lazy"></p>
<h3 data-id="heading-5">纯前端性能优化</h3>
<p>面试中常说的性能优化方式，如 JS 代码拆分、异步组件、路由懒加载等，可能减少的就是几十 KB 的数据量，而这几十 KB 在现代网络速度和 CDN 几乎感知不出来。</p>
<p>而且还有 HTTP 缓存，可能第一次访问时候可能慢一点点，再次访问时静态资源使用缓存，就不会再影响速度。</p>
<p>最后还有压缩，网络请求通常采用 GZIP 压缩，可把资源体积压缩到 1/3 大小。例如，你把 JS 减少了 100kb，看似优化了很多，但实际在网络传输的时候压缩完只有 30kb ，还不如一个图片体积大。</p>
<p>而有时候为了这些优化反而把 webpack 或 vite 配置的乱七八糟的，反而增加了代码复杂度，容易出问题。</p>
<p>但前端可以做很多体验优化的事情，例如使用 loading 效果和图片懒加载，虽然速度还一样，但用户体验会更好，使用更流畅。这也是有很大产品价值的。</p>
<h2 data-id="heading-6">最后</h2>
<p>一个 web 系统的性能瓶颈很少会出现在前端，前端资源的速度问题在网络层面很好解决。所以希望每一位前端开发都要有全栈思维，能站在全栈的角度去思考问题和解决问题。</p>
<p>有兴趣的同学可关注 <a href="https://juejin.cn/pin/7495532653221036059" target="_blank" title="https://juejin.cn/pin/7495532653221036059">划水AI</a>  项目，Node 全栈 AIGC 知识库，复杂项目，真实上线。</p></div></div>