
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/thisiswhy/p/18734819" title="发布于 2025-02-24 20:42">
    <span role="heading" aria-level="2">一个奇形怪状的面试题：Bean中的CHM要不要加volatile？</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="margin: 0; padding: 0 10px; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; font-family: Optima, &quot;Microsoft YaHei&quot;, PingFangSC-regular, serif; font-size: 16px; color: rgba(0, 0, 0, 1); line-height: 1.5em; word-spacing: 0; letter-spacing: 0; overflow-wrap: break-word; text-align: left"><p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">你好呀，我是歪歪。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">事情是这样的，前几天有一个读者给我发消息，说他面试的时候遇到一个奇形怪状的面试题。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">歪师傅纵横面试界多年，最喜欢的是奇形怪状的面试题。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">可以说是见过大场面的人，所以让他描述一下具体啥问题。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">据他的描述，这道面试题是这样的：</p>
<blockquote class="custom-blockquote multiquote-1" data-tool="mdnice编辑器" style="margin: 20px 0; padding: 10px 10px 10px 20px; border-top: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px solid rgba(239, 112, 96, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-radius: 0; background: none left top / auto no-repeat scroll padding-box border-box rgba(255, 249, 249, 1); width: auto; height: auto; box-shadow: 0 0 rgba(0, 0, 0, 0); display: block; overflow-x: auto; overflow-y: auto"><span style="display: none; color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.5em; letter-spacing: 0; text-align: left; font-weight: normal"></span>
<p style="text-indent: 0; padding: 8px 0; color: rgba(0, 0, 0, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0; text-align: left; font-weight: normal; margin: 0">在多线程环境下使用 ConcurrentHashMap 时，是否需要将其声明为 volatile 以确保线程安全？</p>
</blockquote>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">呃...</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">这个题...</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">有点意思...</p>
<figure data-tool="mdnice编辑器" style="margin: 10px 0; padding: 0; display: flex; flex-direction: column; justify-content: center; align-items: center"><img src="https://why-image-1300252878.cos.ap-chengdu.myqcloud.com/img/20220716/20250223170308.png" alt="" style="display: block; margin: 0 auto; max-width: 100%; border: 3px none rgba(0, 0, 0, 0.4); border-radius: 0; object-fit: fill; box-shadow: 0 0 rgba(0, 0, 0, 0)"></figure>
<h2 data-tool="mdnice编辑器" style="border-bottom: 2px solid rgba(239, 112, 96, 1); margin: 30px 0 15px; padding: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box unset; border-top: 1px none rgba(0, 0, 0, 1); border-left: 1px none rgba(0, 0, 0, 1); border-right: 1px none rgba(0, 0, 0, 1); border-radius: 0; box-shadow: none; display: flex; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.1em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset"><span class="prefix" style="display: none"></span><span class="content" style="font-size: 22px; color: rgba(255, 255, 255, 1); background: none left top / auto no-repeat scroll padding-box border-box rgba(239, 112, 96, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; border: 1px none rgba(0, 0, 0, 1); border-radius: 3px 3px 0 0; box-shadow: none; display: inline-block; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; margin: 0 5px 0 0; overflow-x: unset; overflow-y: unset; padding: 3px 10px 1px; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset">简单盘一盘</span><span class="suffix" style="display: none"></span><span style="border-bottom: 36px solid rgba(239, 235, 233, 1); align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box unset; border-top: 1px none rgba(0, 0, 0, 1); border-left: 1px none rgba(0, 0, 0, 1); border-right: 20px solid rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; color: rgba(0, 0, 0, 1); display: inline-block; font-size: 16px; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; letter-spacing: 0; line-height: 1.1em; margin: 0; overflow-x: unset; overflow-y: unset; padding: 0; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset"> </span></h2>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">这个题听起来确实有点奇奇怪怪的，多线程、ConcurrentHashMap（后续文中用 CHM 代替）、volatile、线程安全...</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">乍一听有一种全都是我熟悉的技术点，但是组合在一起，突然有点不认识了的陌生感。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">但是如果你真的对上面这几个技术点达到了熟悉的程度，那么简单梳理一下之后，你又会觉得线索太多，甚至有点不知道从何说起。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">先梳理清楚两个关键点：</p>
<ul data-tool="mdnice编辑器" style="list-style-type: disc; margin: 8px 0; padding: 0 0 0 25px; color: rgba(0, 0, 0, 1)">
<li><section style="margin-top: 5px; margin-bottom: 5px; color: rgba(1, 1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; font-weight: normal">CHM 是干啥的？</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgba(1, 1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; font-weight: normal">volatile 又是干啥的？</section></li></ul>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">首先，CHM 是八股中老大哥了，一般它和 HashMap 会在面试环节成对出现。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">比如这样式儿的：HashMap 不是线程安全的，那我们应该怎么办呢？</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">然后 CHM 就噼里啪啦一大堆开始背诵起来了。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">但是在这篇文章中，关于 CHM 我们需要注意的就一个点：</p>
<blockquote class="custom-blockquote multiquote-1" data-tool="mdnice编辑器" style="margin: 20px 0; padding: 10px 10px 10px 20px; border-top: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px solid rgba(239, 112, 96, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-radius: 0; background: none left top / auto no-repeat scroll padding-box border-box rgba(255, 249, 249, 1); width: auto; height: auto; box-shadow: 0 0 rgba(0, 0, 0, 0); display: block; overflow-x: auto; overflow-y: auto"><span style="display: none; color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.5em; letter-spacing: 0; text-align: left; font-weight: normal"></span>
<p style="text-indent: 0; padding: 8px 0; color: rgba(0, 0, 0, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0; text-align: left; font-weight: normal; margin: 0">CHM 是线程安全的，但是它的线程安全仅限于方法内部的操作。</p>
</blockquote>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">然后，volatile 是干啥的？</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">这种老八股应该是张口就来：</p>
<blockquote class="custom-blockquote multiquote-1" data-tool="mdnice编辑器" style="margin: 20px 0; padding: 10px 10px 10px 20px; border-top: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px solid rgba(239, 112, 96, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-radius: 0; background: none left top / auto no-repeat scroll padding-box border-box rgba(255, 249, 249, 1); width: auto; height: auto; box-shadow: 0 0 rgba(0, 0, 0, 0); display: block; overflow-x: auto; overflow-y: auto"><span style="display: none; color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.5em; letter-spacing: 0; text-align: left; font-weight: normal"></span>
<p style="text-indent: 0; padding: 8px 0; color: rgba(0, 0, 0, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0; text-align: left; font-weight: normal; margin: 0">volatile 可以保证变量的可见性，即一个线程修改了被 volatile 修饰的变量，其他线程能立即看到新值。</p>
</blockquote>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">这里画个重点：变量。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">如果要把 CHM 和 volatile 牵扯到一起，那么他们就需要对齐一下颗粒度：CHM 需要是一个变量。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">当 CHM 在程序的引用中会发生变化时，讨论 volatile 才有意义。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">所以，这个面试题的答案也就呼之欲出了。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">答案就是：得结合代码，看具体场景，分两种情况去讨论。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">第一种情况是 CHM 的引用不会发生变化，就不需要加 volatile。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">比如下面这种写法：</p>
<blockquote class="custom-blockquote multiquote-1" data-tool="mdnice编辑器" style="margin: 20px 0; padding: 10px 10px 10px 20px; border-top: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px solid rgba(239, 112, 96, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-radius: 0; background: none left top / auto no-repeat scroll padding-box border-box rgba(255, 249, 249, 1); width: auto; height: auto; box-shadow: 0 0 rgba(0, 0, 0, 0); display: block; overflow-x: auto; overflow-y: auto"><span style="display: none; color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.5em; letter-spacing: 0; text-align: left; font-weight: normal"></span>
<p style="text-indent: 0; padding: 8px 0; color: rgba(0, 0, 0, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0; text-align: left; font-weight: normal; margin: 0">private static final ConcurrentHashMap&lt;String, String&gt; chm = new ConcurrentHashMap&lt;&gt;();</p>
</blockquote>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">这里的 final 已经保证引用不可变，无论多少个线程在同时操作这个 CHM，都能确保看到的始终是同一个对象。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">至于线程安全问题，CHM 内部的方法自会处理好并发问题。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">第二种情况是 CHM 的引用会变，比如这样的代码逻辑：</p>
<pre class="custom" data-tool="mdnice编辑器" style="border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55); text-align: left; margin: 10px 0; padding: 0"><span style="display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(40, 44, 52, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px"></span><code class="hljs" style="overflow-x: auto; padding: 15px 16px 16px; color: rgba(171, 178, 191, 1); background: rgba(40, 44, 52, 1); border-radius: 5px; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px">private&nbsp;volatile&nbsp;ConcurrentHashMap&lt;String,&nbsp;String&gt;&nbsp;cache&nbsp;=&nbsp;new&nbsp;ConcurrentHashMap&lt;&gt;();<br><br>public&nbsp;void&nbsp;<span class="hljs-function" style="line-height: 26px"><span class="hljs-title" style="color: rgba(97, 174, 238, 1); line-height: 26px">updateCache</span></span>()&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;ConcurrentHashMap&lt;String,&nbsp;String&gt;&nbsp;newCache&nbsp;=&nbsp;new&nbsp;ConcurrentHashMap&lt;&gt;();<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;填充新数据...<br>&nbsp;&nbsp;&nbsp;&nbsp;cache&nbsp;=&nbsp;newCache;&nbsp;<br>}<br></code></pre>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">因为我们程序中有把 newCache 赋值给 cache 的操作，而这个 cache 可能又不只是一个线程在操作。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">所以这个场景下，就需要使用 volatile，保证当前线程对 cache 操作之后，其他线程能立刻看到新引用。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">从而保证了线程安全。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">现在，我们再回过头去看这个问题，应该就清晰很多了：</p>
<blockquote class="custom-blockquote multiquote-1" data-tool="mdnice编辑器" style="margin: 20px 0; padding: 10px 10px 10px 20px; border-top: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px solid rgba(239, 112, 96, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-radius: 0; background: none left top / auto no-repeat scroll padding-box border-box rgba(255, 249, 249, 1); width: auto; height: auto; box-shadow: 0 0 rgba(0, 0, 0, 0); display: block; overflow-x: auto; overflow-y: auto"><span style="display: none; color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.5em; letter-spacing: 0; text-align: left; font-weight: normal"></span>
<p style="text-indent: 0; padding: 8px 0; color: rgba(0, 0, 0, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0; text-align: left; font-weight: normal; margin: 0">在多线程环境下使用 ConcurrentHashMap 时，是否需要将其声明为 volatile 以确保线程安全？</p>
</blockquote>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">这个问题确实是有点陷阱的，不能直接回答需要或者不需要。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">需要面试者结合自己的理解，去分析出不同的场景，得到上面的回答。</p>
<h2 data-tool="mdnice编辑器" style="border-bottom: 2px solid rgba(239, 112, 96, 1); margin: 30px 0 15px; padding: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box unset; border-top: 1px none rgba(0, 0, 0, 1); border-left: 1px none rgba(0, 0, 0, 1); border-right: 1px none rgba(0, 0, 0, 1); border-radius: 0; box-shadow: none; display: flex; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.1em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset"><span class="prefix" style="display: none"></span><span class="content" style="font-size: 22px; color: rgba(255, 255, 255, 1); background: none left top / auto no-repeat scroll padding-box border-box rgba(239, 112, 96, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; border: 1px none rgba(0, 0, 0, 1); border-radius: 3px 3px 0 0; box-shadow: none; display: inline-block; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; margin: 0 5px 0 0; overflow-x: unset; overflow-y: unset; padding: 3px 10px 1px; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset">想到另一个题</span><span class="suffix" style="display: none"></span><span style="border-bottom: 36px solid rgba(239, 235, 233, 1); align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box unset; border-top: 1px none rgba(0, 0, 0, 1); border-left: 1px none rgba(0, 0, 0, 1); border-right: 20px solid rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; color: rgba(0, 0, 0, 1); display: inline-block; font-size: 16px; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; letter-spacing: 0; line-height: 1.1em; margin: 0; overflow-x: unset; overflow-y: unset; padding: 0; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset"> </span></h2>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">在分析上面这个问题的时候，我又联想到了另外一个经典的面试题。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">问：Spring 的 Bean 是否是线程安全的？</p>
<figure data-tool="mdnice编辑器" style="margin: 10px 0; padding: 0; display: flex; flex-direction: column; justify-content: center; align-items: center"><img src="https://why-image-1300252878.cos.ap-chengdu.myqcloud.com/img/20220716/20250223170528.png" alt="" style="display: block; margin: 0 auto; max-width: 100%; border: 3px none rgba(0, 0, 0, 0.4); border-radius: 0; object-fit: fill; box-shadow: 0 0 rgba(0, 0, 0, 0)"></figure>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">我个人认为这两个题的相似程度算是非常高的。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">为啥这样说呢？</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">我们一起分析一波。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">首先，我们搞个示意代码：</p>
<pre class="custom" data-tool="mdnice编辑器" style="border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55); text-align: left; margin: 10px 0; padding: 0"><span style="display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(40, 44, 52, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px"></span><code class="hljs" style="overflow-x: auto; padding: 15px 16px 16px; color: rgba(171, 178, 191, 1); background: rgba(40, 44, 52, 1); border-radius: 5px; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px">@Controller<br>public&nbsp;class&nbsp;TestController&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;int&nbsp;num&nbsp;=&nbsp;0;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(<span class="hljs-string" style="color: rgba(152, 195, 121, 1); line-height: 26px">"/test"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;<span class="hljs-function" style="line-height: 26px"><span class="hljs-title" style="color: rgba(97, 174, 238, 1); line-height: 26px">test</span></span>()&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(++num);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(<span class="hljs-string" style="color: rgba(152, 195, 121, 1); line-height: 26px">"/test1"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;<span class="hljs-function" style="line-height: 26px"><span class="hljs-title" style="color: rgba(97, 174, 238, 1); line-height: 26px">test1</span></span>()&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(++num);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br></code></pre>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">TestController 就是在 Spring 中托管的一个 Bean。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">这个程序跑起来，我们先访问 test，得到的答案是 1，然后再访问 test1，得到的答案是 2。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">按照常规的理解，两个不同的请求，它们之间应该相互独立才对。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">现在的现象是第二个线程的运行结果，受到了前一个线程的影响。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">但是，你能说这是线程不安全的吗？</p>
<figure data-tool="mdnice编辑器" style="margin: 10px 0; padding: 0; display: flex; flex-direction: column; justify-content: center; align-items: center"><img src="https://why-image-1300252878.cos.ap-chengdu.myqcloud.com/img/20220716/20250223170453.png" alt="" style="display: block; margin: 0 auto; max-width: 100%; border: 3px none rgba(0, 0, 0, 0.4); border-radius: 0; object-fit: fill; box-shadow: 0 0 rgba(0, 0, 0, 0)"></figure>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">不能。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">只能说因为 Bean 里面包含了可变的成员变量 num，有 ++num 这种代码，所以多个线程并发修改时会导致数据不一致，这里需要我们在开发的时候自行通过加锁或者使用原子类来保证同步。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">而这个 Bean，我们一般叫它有状态的 Bean。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">对应的，如果 Bean 里面没有成员变量，或者所有的变量都是只读的，那我们就能说它是线程安全的......吗？</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">先把这个问题按下不表，我们先看看 Bean 的作用域。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">还是上面这个例子，如果我在 TestController 类上加一个注解 @Scope("prototype")。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">其他都不变，程序跑起来，我们先访问 test，得到的答案是 1，然后再访问 test1，得到的答案还是 1。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">这样看起来就是线程安全的了。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">@Scope("prototype")，翻译过来是说这个 Bean 是原型作用域的 Bean。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">其特性是每次请求 Bean 时，Spring 都会创建一个新实例。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">由于每个线程操作独立的 Bean 实例，所以天然线程安全。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">而我们在没加 @Scope("prototype") 之前，Bean 的默认作用域是 Singleton，即单例。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">其特性是整个 Spring 容器中仅有这一个实例，所有的线程都共享此实例。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">所以，由于共享，才出现了前面的线程不安全现象。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">再看看我们刚刚按下不表的问题：如果 Bean 里面没有成员变量，或者所有的变量都是只读的，那我们就能说它是线程安全的......吗？</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">是的，它就是线程安全的。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">不管作用域是 prototype 还是 Singleton。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">我这样写，也只是为了模拟面试的时候，面试官故意通过反问的方式，来检验你对于知识点的掌握程度。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">好，现在回到最开始的这个问题上：Spring 的 Bean 是否是线程安全的？</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">经过前面的分析，我们知道这个问题确实也是有点陷阱的，不能直接回答是或者不是。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">和“CHM 需要将其声明为 volatile”一样，需要面试者结合自己的理解，去分析出不同的场景，得到下面的回答。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">首先，Spring 本身并不自动保证 Bean 的线程安全。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">在 Spring 框架中，Bean 的线程安全性取决于其作用域和具体实现方式。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">当作用域是 Singleton 是，如果 Bean 是有状态的 Bean，即 Bean 中包含可变的成员变量，那就是线程不安全的，需要开发者执行保证。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">如果是无状态的 Bean，则是线程安全的。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">而当作用域是 Prototype 时，由于每次请求 Bean 时，Spring 都会创建一个新实例。所以每个线程操作的 Bean 实例都是独立的，天然线程安全。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">那你可能在想，Spring 的 Bean 我天天都在用，也一直用的是默认的 Singleton 模式，为什么我用的时候没遇到过线程安全的问题呢？</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">那你就去仔细想想，翻一翻代码，我们用的绝大部分 Bean 是不是都是无状态的设计？</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">如果，你盘出来发现在项目中有几个有状态的 Bean，访问对应的变量时，你也没有做相应的加锁之类的处理，那恭喜你，找到一个潜伏工作做的不错的 BUG。</p>
<h2 data-tool="mdnice编辑器" style="border-bottom: 2px solid rgba(239, 112, 96, 1); margin: 30px 0 15px; padding: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box unset; border-top: 1px none rgba(0, 0, 0, 1); border-left: 1px none rgba(0, 0, 0, 1); border-right: 1px none rgba(0, 0, 0, 1); border-radius: 0; box-shadow: none; display: flex; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.1em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset"><span class="prefix" style="display: none"></span><span class="content" style="font-size: 22px; color: rgba(255, 255, 255, 1); background: none left top / auto no-repeat scroll padding-box border-box rgba(239, 112, 96, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; border: 1px none rgba(0, 0, 0, 1); border-radius: 3px 3px 0 0; box-shadow: none; display: inline-block; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; margin: 0 5px 0 0; overflow-x: unset; overflow-y: unset; padding: 3px 10px 1px; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset">结合一下</span><span class="suffix" style="display: none"></span><span style="border-bottom: 36px solid rgba(239, 235, 233, 1); align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box unset; border-top: 1px none rgba(0, 0, 0, 1); border-left: 1px none rgba(0, 0, 0, 1); border-right: 20px solid rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; color: rgba(0, 0, 0, 1); display: inline-block; font-size: 16px; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; letter-spacing: 0; line-height: 1.1em; margin: 0; overflow-x: unset; overflow-y: unset; padding: 0; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset"> </span></h2>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">好，如果前面写的你都理解到了，那现在我们把前面两个题结合一下。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">比如我给你这样一份代码：</p>
<pre class="custom" data-tool="mdnice编辑器" style="border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55); text-align: left; margin: 10px 0; padding: 0"><span style="display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(40, 44, 52, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px"></span><code class="hljs" style="overflow-x: auto; padding: 15px 16px 16px; color: rgba(171, 178, 191, 1); background: rgba(40, 44, 52, 1); border-radius: 5px; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px">@RestController<br>public&nbsp;class&nbsp;TestController&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;ConcurrentHashMap&nbsp;chm&nbsp;=&nbsp;new&nbsp;ConcurrentHashMap();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(<span class="hljs-string" style="color: rgba(152, 195, 121, 1); line-height: 26px">"/test"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;<span class="hljs-function" style="line-height: 26px"><span class="hljs-title" style="color: rgba(97, 174, 238, 1); line-height: 26px">test</span></span>()&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chm.put(<span class="hljs-string" style="color: rgba(152, 195, 121, 1); line-height: 26px">"1"</span>,&nbsp;<span class="hljs-string" style="color: rgba(152, 195, 121, 1); line-height: 26px">"1"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(<span class="hljs-string" style="color: rgba(152, 195, 121, 1); line-height: 26px">"/test1"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;<span class="hljs-function" style="line-height: 26px"><span class="hljs-title" style="color: rgba(97, 174, 238, 1); line-height: 26px">test1</span></span>()&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chm.put(<span class="hljs-string" style="color: rgba(152, 195, 121, 1); line-height: 26px">"2"</span>,&nbsp;<span class="hljs-string" style="color: rgba(152, 195, 121, 1); line-height: 26px">"2"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br></code></pre>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">你说一说它的问题是什么？</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">或者你说说它有没有出现线程安全问题的风险？</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">如果回答不出来说明你看的时候根本就没用心去理解，只是在用眼睛看，没有往脑子里面记。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">说明你正在看文章的此刻，不是学习的时候。你就先放到收藏夹里面，退出去得了，等有时间的时候再慢慢看。</p>
<figure data-tool="mdnice编辑器" style="margin: 10px 0; padding: 0; display: flex; flex-direction: column; justify-content: center; align-items: center"><img src="https://why-image-1300252878.cos.ap-chengdu.myqcloud.com/img/20220716/20250223170825.png" alt="" style="display: block; margin: 0 auto; max-width: 100%; border: 3px none rgba(0, 0, 0, 0.4); border-radius: 0; object-fit: fill; box-shadow: 0 0 rgba(0, 0, 0, 0)"></figure>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">首先，由于我们使用的是 CHM，所以即使 1000 个线程同时调用 test 方法，最终结果也正确。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">这个方法的线程安全性是由 CHM 来保证的。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">其次，由于 TestController 是单例的，所有的请求共享同一个 TestController 实例，因此共享同一个 CHM。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">但是这个 CHM 没有被 volatile 修饰。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">如果以后新增代码，逻辑中修改了 chm 的引用，比如这样：</p>
<figure data-tool="mdnice编辑器" style="margin: 10px 0; padding: 0; display: flex; flex-direction: column; justify-content: center; align-items: center"><img src="https://why-image-1300252878.cos.ap-chengdu.myqcloud.com/img/20220716/20250223161052.png" alt="" style="display: block; margin: 0 auto; max-width: 100%; border: 3px none rgba(0, 0, 0, 0.4); border-radius: 0; object-fit: fill; box-shadow: 0 0 rgba(0, 0, 0, 0)"></figure>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">在 test2 方法中对 chm 进行了重新赋值的操作，因为没有使用 volatile 修饰 chm，所以可能导致其他线程看到的不是最新的 chm。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">这就是风险点。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">而这个风险点的化解方式之一是给 chm 加上 volatile。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">化解方式之二是给 chm 加上 final，确保不能对 chm 进行重新赋值。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">化解方式之三是把 Bean 的作用域修改为 prototype，让每个请求操作的 Bean 实例都是独立的。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">具体采用哪个方案，就得结合你的应用场景来看了。</p>
<h2 data-tool="mdnice编辑器" style="border-bottom: 2px solid rgba(239, 112, 96, 1); margin: 30px 0 15px; padding: 0; align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box unset; border-top: 1px none rgba(0, 0, 0, 1); border-left: 1px none rgba(0, 0, 0, 1); border-right: 1px none rgba(0, 0, 0, 1); border-radius: 0; box-shadow: none; display: flex; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.1em; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset"><span class="prefix" style="display: none"></span><span class="content" style="font-size: 22px; color: rgba(255, 255, 255, 1); background: none left top / auto no-repeat scroll padding-box border-box rgba(239, 112, 96, 1); line-height: 1.5em; letter-spacing: 0; align-items: unset; border: 1px none rgba(0, 0, 0, 1); border-radius: 3px 3px 0 0; box-shadow: none; display: inline-block; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; margin: 0 5px 0 0; overflow-x: unset; overflow-y: unset; padding: 3px 10px 1px; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset">再延伸一下</span><span class="suffix" style="display: none"></span><span style="border-bottom: 36px solid rgba(239, 235, 233, 1); align-items: unset; background: none left top / auto no-repeat scroll padding-box border-box unset; border-top: 1px none rgba(0, 0, 0, 1); border-left: 1px none rgba(0, 0, 0, 1); border-right: 20px solid rgba(0, 0, 0, 0); border-radius: 0; box-shadow: none; color: rgba(0, 0, 0, 1); display: inline-block; font-size: 16px; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; letter-spacing: 0; line-height: 1.1em; margin: 0; overflow-x: unset; overflow-y: unset; padding: 0; position: relative; text-align: left; text-indent: 0; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset"> </span></h2>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">关于 CHM，再做一个小小的延伸，是我多年前看到的一段源码了，印象深刻，和文章内容也比较匹配，分享一下。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">Spring 的 SimpleAliasRegistry 类中有一个 CHM 类型的 aliasMap 变量。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">但是在操作这个变量之前都是用 synchronized 把 aliasMap 锁住了：</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0"><img src="https://why-image-1300252878.cos.ap-chengdu.myqcloud.com/img/20220716/20250223162147.png" alt="" style="display: block; margin: 0 auto; max-width: 100%">
、<img src="https://why-image-1300252878.cos.ap-chengdu.myqcloud.com/img/20220716/20250223164055.png" alt="" style="display: block; margin: 0 auto; max-width: 100%"></p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">请问，为什么我们操作 ConcurrentHashMap 的时候还要加锁呢？</p>
<figure data-tool="mdnice编辑器" style="margin: 10px 0; padding: 0; display: flex; flex-direction: column; justify-content: center; align-items: center"><img src="https://why-image-1300252878.cos.ap-chengdu.myqcloud.com/img/20220716/20250223164248.png" alt="" style="display: block; margin: 0 auto; max-width: 100%; border: 3px none rgba(0, 0, 0, 0.4); border-radius: 0; object-fit: fill; box-shadow: 0 0 rgba(0, 0, 0, 0)"></figure>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">看一下 registerAlias 方法中的这部分代码：</p>
<figure data-tool="mdnice编辑器" style="margin: 10px 0; padding: 0; display: flex; flex-direction: column; justify-content: center; align-items: center"><img src="https://why-image-1300252878.cos.ap-chengdu.myqcloud.com/img/20220716/20250223164456.png" alt="" style="display: block; margin: 0 auto; max-width: 100%; border: 3px none rgba(0, 0, 0, 0.4); border-radius: 0; object-fit: fill; box-shadow: 0 0 rgba(0, 0, 0, 0)"></figure>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">aliasMap 的 get 和 put 方法都是线程安全的，但是先 get，再检查是否存在，然后再 put，这几步操作组合在一起的时候，其他的线程能在 get 和 put 之间插入数据。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">这个类是个别名管理器，具体来说就是可能导致重复别名。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">即使你使用了 CHM，它也只能保证自身方法的原子性，无法保证外部复合操作的原子性。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">因此，在这个场景下，用 synchronized 包裹住了整个复合操作。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">如果你觉得不太好理解的话我再举一个 Redis 的例子。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">Redis 的 get、set 方法都是线程安全的吧。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">但是你如果先 get 再 set，那么在多线程的情况下还是会因为操作非原子性导致竞态条件，比如下面这种：</p>
<pre class="custom" data-tool="mdnice编辑器" style="border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55); text-align: left; margin: 10px 0; padding: 0"><span style="display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(40, 44, 52, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px"></span><code class="hljs" style="overflow-x: auto; padding: 15px 16px 16px; color: rgba(171, 178, 191, 1); background: rgba(40, 44, 52, 1); border-radius: 5px; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px">value&nbsp;=&nbsp;redis.get(<span class="hljs-string" style="color: rgba(152, 195, 121, 1); line-height: 26px">"counter"</span>)&nbsp;&nbsp;<span class="hljs-comment" style="color: rgba(92, 99, 112, 1); font-style: italic; line-height: 26px">#&nbsp;步骤1</span><br>value&nbsp;+=&nbsp;1<br>redis.set(<span class="hljs-string" style="color: rgba(152, 195, 121, 1); line-height: 26px">"counter"</span>,&nbsp;value)<br></code></pre>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">两个线程可能同时执行步骤 1，读到相同的 value，导致最终结果少加 1。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">因为这两个操作不是原子性的。所以 incr 就应运而生了。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">我举这个例子的是想说线程安全与否不是绝对的，要看场景。给你一个线程安全的容器，你使用不当还是会有线程安全的问题。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">再比如，HashMap 一定是线程不安全的吗？</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">朋友，说不能说的这么死吧？</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">它是一个线程不安全的容器。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">但是如果我的使用场景是只读呢？</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">在这个只读的场景下，它就是线程安全的。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">总之，看场景，不要脱离场景讨论问题。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">道理，就是这么一个道理。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">最后，记住歪师傅下面说的这句话，面试的时候可能用的上：</p>
<blockquote class="custom-blockquote multiquote-1" data-tool="mdnice编辑器" style="margin: 20px 0; padding: 10px 10px 10px 20px; border-top: 3px none rgba(0, 0, 0, 0.4); border-bottom: 3px none rgba(0, 0, 0, 0.4); border-left: 3px solid rgba(239, 112, 96, 1); border-right: 3px none rgba(0, 0, 0, 0.4); border-radius: 0; background: none left top / auto no-repeat scroll padding-box border-box rgba(255, 249, 249, 1); width: auto; height: auto; box-shadow: 0 0 rgba(0, 0, 0, 0); display: block; overflow-x: auto; overflow-y: auto"><span style="display: none; color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.5em; letter-spacing: 0; text-align: left; font-weight: normal"></span>
<p style="text-indent: 0; padding: 8px 0; color: rgba(0, 0, 0, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0; text-align: left; font-weight: normal; margin: 0">线程安全问题是一个全局问题，不能试图依赖单个组件的特性来解决这个全局的问题。</p>
</blockquote>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">好，行文至此，暂驻笔锋。</p>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0">诸君，可以鼓掌了。</p>
<figure data-tool="mdnice编辑器" style="margin: 10px 0; padding: 0; display: flex; flex-direction: column; justify-content: center; align-items: center"><img src="https://why-image-1300252878.cos.ap-chengdu.myqcloud.com/img/20220716/20250223171651.png" alt="" style="display: block; margin: 0 auto; max-width: 100%; border: 3px none rgba(0, 0, 0, 0.4); border-radius: 0; object-fit: fill; box-shadow: 0 0 rgba(0, 0, 0, 0)"></figure>
<p data-tool="mdnice编辑器" style="color: rgba(0, 0, 0, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0; text-align: left; text-indent: 0; margin: 0; padding: 8px 0"><strong style="color: rgba(0, 0, 0, 1); font-weight: bold; background: none left top / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); width: auto; height: auto; margin: 0; padding: 0; border: 3px none rgba(0, 0, 0, 0.4); border-radius: 0">最后，欢迎关注公众号"why技术"，全网首发平台，还有技术之外的东西哦。</strong></p>
</section>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.06579418703240741" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-24 20:42">2025-02-24 20:42</span>&nbsp;
<a href="https://www.cnblogs.com/thisiswhy">why技术</a>&nbsp;
阅读(<span id="post_view_count">8</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18734819" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18734819);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18734819', targetLink: 'https://www.cnblogs.com/thisiswhy/p/18734819', title: '一个奇形怪状的面试题：Bean中的CHM要不要加volatile？' })">举报</a>
</div>
        