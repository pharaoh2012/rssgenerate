
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/vipstone/p/18831096" title="发布于 2025-04-17 16:22">
    <span role="heading" aria-level="2">超实用！用FunctionCall实现快递AI助手</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>昨天晚上直播，我们用 RAG（Retrieval-Augmented Generation，检索增强生成）实现了数据库 AI 助手，今天我们准备换一个技术使用 function call 来实现快递 AI 助手。</p>
<h2 id="执行效果">执行效果</h2>
<p>快递 AI 助手的业务逻辑很清晰，就是我通过 LLM 大语言模型的对话来查询我的快递详情，例如，我问 AI 我有几个“运送中”的快递，他把这些快递查询并展示出来，效果如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202504/172074-20250417162205541-2061842910.png" alt="" loading="lazy"></p>
<h2 id="什么是-function-call">什么是 function call？</h2>
<p><strong>定义</strong>： Function Call（也称为 Tool Call）它允许大模型与一组 API 或工具进行交互，从而增强其功能。</p>
<blockquote>
<p>也就是说 Function Call 和 RAG、MCP 等类似都是<strong>用于增强 AI 能力边界的</strong>。</p>
</blockquote>
<h2 id="function-call-执行流程">function call 执行流程</h2>
<p>执行流程如下：</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202504/172074-20250417162213338-1181686875.png" alt="" loading="lazy"></p>
<blockquote>
<p>其中，Tool 既为 Function Call。</p>
</blockquote>
<p>当然如果你上图看的不是很懂的话，也可以参考阿里云提供的 function call 的工作流程：</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202504/172074-20250417162220751-294935092.png" alt="" loading="lazy"></p>
<h2 id="快递-ai-助手实现">快递 AI 助手实现</h2>
<p>具体实现步骤：</p>
<ol>
<li>添加大模型依赖</li>
<li>配置大模型参数</li>
<li>创建 function call</li>
<li>调用 function call 实现快递查询</li>
</ol>
<p>接下来，我们一步步来看，我们以阿里云的百炼（通义千问）大模型对接为例。</p>
<h2 id="1添加大模型依赖">1.添加大模型依赖</h2>
<pre><code class="language-xml">&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.ai&lt;/groupId&gt;
    &lt;artifactId&gt;spring-ai-starter-model-openai&lt;/artifactId&gt;
&lt;/dependency&gt;
</code></pre>
<h2 id="2配置大模型参数">2.配置大模型参数</h2>
<pre><code class="language-yaml">spring:
  ai:
    openai:
      base-url: https://dashscope.aliyuncs.com/compatible-mode/
      api-key: ${ALIYUN-AK}
      chat:
        options:
          model: deepseek-v3
</code></pre>
<h2 id="3创建-function-call">3.创建 function call</h2>
<p>这里就不连接数据库查询快递信息了，生成级别需要连接数据库，这里演示效果，构建测试数据即可，如下代码所示：</p>
<pre><code class="language-java">import org.springframework.ai.tool.annotation.Tool;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

public class ExpressService {

    @Tool(description = "用于查询我的快递")
    public List&lt;Express&gt; getExpress(String state) {
        // 生成测试数据
        List&lt;Express&gt; data = getData();
        // 根据状态过滤（如果state为null或空则返回全部）
        return state == null || state.isEmpty()
                ? data
                : data.stream()
                .filter(e -&gt; e.state().equalsIgnoreCase(state))
                .collect(Collectors.toList());
    }

    /**
     * 生成测试快递数据
     */
    private List&lt;Express&gt; getData() {
        List&lt;Express&gt; data = new ArrayList&lt;&gt;();
        LocalDateTime now = LocalDateTime.now();
        data.add(new Express(1001L, "北京", "西安", now.minusDays(12), "已签收"));
        data.add(new Express(1002L, "广州", "西安", now.minusDays(12), "已签收"));
        data.add(new Express(1003L, "杭州", "西安", now.minusDays(3), "运送中"));
        data.add(new Express(1004L, "深圳", "西安", now.minusDays(3), "运送中"));
        data.add(new Express(1005L, "南京", "西安", now.minusDays(1), "待发货"));
        return data;
    }


    /**
     * 快递类
     *
     * @param id
     * @param from
     * @param to
     * @param createtime
     * @param state
     */
    record Express(long id, String from, String to,
                   LocalDateTime createtime, String state) {
    }
}
</code></pre>
<h2 id="4调用-function-call">4.调用 function call</h2>
<p>调用大模型可以使用 ChatModel 和 ChatClient，这里使用 ChatClient 调用：</p>
<pre><code class="language-java">@RequestMapping("/tool")
public Flux&lt;String&gt; tool(@RequestParam("msg") String msg) {
    return chatClient.prompt(msg)
            .tools(new ExpressService(),
                    new DateTimeTools())
            .stream().content();
}
</code></pre>
<p>最终执行效果如下：</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202504/172074-20250417162231591-26075804.png" alt="" loading="lazy"></p>
<h2 id="小结">小结</h2>
<p>大模型应用开发是以后程序开发的主流方向，他也会巅峰以往的开发形式，早早掌握大模型的开发知识，对于后期涨薪或找工作都有巨大的帮助。程序员群体注定是一个活到老学到老的群体，因为<strong>学习的本质在于扩展自己的能力边界，让自己变得更值钱</strong>。所以各位动起来，让我们一起拥抱这场 AI 盛宴吧。</p>
<blockquote>
<p>本文已收录到我的技术小站 <a href="https://www.javacn.site" target="_blank" rel="noopener nofollow">www.javacn.site</a>，其中包含的内容有：Spring AI、大模型应用开发各种技术、MCP、Function Call、RAG、向量数据库、Prompt、多模态、向量数据库、嵌入模型等内容。</p>
</blockquote>

</div>
<div id="MySignature" role="contentinfo">
    <div style="text-align: center; color: red">
关注下面二维码，订阅更多精彩内容。
<br>
<img style="margin-left: 0px" src="https://images.cnblogs.com/cnblogs_com/vipstone/848916/o_211225130402_gognzhonghao.jpg">
</div>

<div style="display: none">
    <img src="http://icdn.apigo.cn/gitchat/rabbitmq.png?imageView2/0/w/500/h/400">
</div>
<div style="margin-bottom: 50px; display: none">

<img title="微信打赏" src="http://icdn.apigo.cn/myinfo/wchat-pay.png" alt="微信打赏">
<br>

<div style="display: none">
<span style="display: block; position: absolute; height: 40px; top: 50%; margin-top: -20px">关注公众号（加好友）：</span>

<img style="margin-left: 144px" src="http://icdn.apigo.cn/gongzhonghao2.png?imageView2/0/w/120/h/120">
</div>
<p></p>

<div id="AllanboltSignature">
    <p style="border-top: #e0e0e0 1px dashed; border-right: #e0e0e0 1px dashed; border-bottom: #e0e0e0 1px dashed; border-left: #e0e0e0 1px dashed; padding-top: 10px; padding-right: 10px; padding-bottom: 10px; padding-left: 60px; background: url(&quot;https://images.cnblogs.com/cnblogs_com/lloydsheng/239039/o_copyright.gif&quot;) #e5f1f4 no-repeat 1% 50%; font-family: 微软雅黑; font-size: 11px" id="PSignature">
        <br> 作者：
        <a href="http://vipstone.cnblogs.com/" target="_blank">王磊的博客</a>
        <br> 出处：
        <a href="http://vipstone.cnblogs.com/" target="_blank">http://vipstone.cnblogs.com/</a>
        <br>
    </p>
</div></div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.07952801702893518" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-17 16:23">2025-04-17 16:22</span>&nbsp;
<a href="https://www.cnblogs.com/vipstone">磊哥|www.javacn.site</a>&nbsp;
阅读(<span id="post_view_count">91</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18831096);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18831096', targetLink: 'https://www.cnblogs.com/vipstone/p/18831096', title: '超实用！用FunctionCall实现快递AI助手' })">举报</a>
</div>
        