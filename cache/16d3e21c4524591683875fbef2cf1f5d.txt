
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaobaiysf/p/18718662" title="发布于 2025-02-16 19:55">
    <span role="heading" aria-level="2">【保姆级教程】DeepSeek R1+RAG，基于开源三件套10分钟构建本地AI知识库</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="一总体方案">一、总体方案</h1>
<p>目前在使用 DeepSeek 在线环境时，页面经常显示“服务器繁忙，请稍后再试”，以 DeepSeek R1 现在的火爆程度，这个状况可能还会持续一段时间，所以这里给大家提供了 DeepSeek R1 +RAG 的本地部署方案。最后实现的效果是，结合本地部署的三个开源工具，包括 1Panel、Ollama、MaxKB，可以快速搭建一个本地知识库。以下总体方案及说明如下：<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194006169-425616589.png" alt="" loading="lazy"></p>
<p>首先基于 GPU 服务器承载 DeepSeek-R1 大模型，其次基于 1Panel  新一代的 Linux 开源运维管理面板完成 MaxKB 和 Ollama 的安装运维管理，最后通过 Ollama 安装管理 DeepSeek-R1 模型，最后再通过 MaxKB 完成本地知识库的搭建，让企业快速构建本地 AI 知识库。</p>
<h1 id="11deepseek">1.1	DeepSeek</h1>
<p>DeepSeek是杭州深度求索公司开源出来的AI大模型，在一些典型的应用场景，比如智能对话、文本生成、计算推理、代码生成等场景，表现都非常不错。它有两款大模型，目前在全球都很受关注，分别是 DeepSeek-V3 和 DeepSeek-R1 两个大版本。DeepSeek 在综合能力方面，跟国外 OpenAI o1 版本大模型的性能，基本不相上下。不管是训练成本，还有使用成本，都远低于国外同类型的大模型，可以说是好用又便宜。DeepSeek 在线对话，提供深度思考和联网搜索两种模式<br>
大家可以访问 DeepSeek 官网体验对话效果，官网地址： <a href="https://www.deepseek.com/" target="_blank" rel="noopener nofollow">https://www.deepseek.com/</a>  或者 <a href="https://ai.com/" target="_blank" rel="noopener nofollow">https://ai.com/</a> 。</p>
<h1 id="12rag">1.2	RAG</h1>
<p>RAG 是 “Retrieval-Augmented Generation” 的缩写，中文可以翻译为“检索增强生成”。这是一种结合了检索（Retrieval）和生成（Generation）的自然语言处理技术，用于提高语言模型在特定任务上的性能和准确性。在加上一个数据向量和索引的工作，我们对 RAG 就可以总概方式地理解为“ 索引、检索和生成 ”。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194035414-341970665.png" alt="" loading="lazy"></p>
<ul>
<li>
<p>检索（Retrieval）：在这个阶段，模型会从预先构建的大规模数据集中检索出与当前任务最相关的信息。这些数据集可以是文档、网页、知识库等。</p>
</li>
<li>
<p>生成（Generation）：在检索到相关信息后，模型会使用这些信息来生成答案或完成特定的语言任务。这个阶段通常涉及到序列生成技术，如基于 Transformer 的模型。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194051438-1459214878.png" alt="" loading="lazy"></p>
</li>
<li>
<p>创建索引：将输入的文档切割成不同的数据块，进行向量化处理后，存储到向量数据库，并创建索引。</p>
</li>
<li>
<p>向量检索：将用户的提问信息向量化，再到向量数据库进行搜索，根据向量相似度的算法，寻找相关性最强的文档片段。</p>
</li>
</ul>
<h1 id="13开源三件套介绍">1.3	开源三件套介绍</h1>
<h2 id="1311panel新一代的-linux-服务器运维管理面板">1.3.1	1Panel：新一代的 Linux 服务器运维管理面板</h2>
<p>通过 Web 图形界面轻松管理 Linux 服务器，实现主机监控、文件管理、数据库管理、容器管理等功能。<br>
官方网址：<a href="https://1panel.cn/" target="_blank" rel="noopener nofollow">https://1panel.cn/</a><br>
下载地址：<a href="https://1panel.cn/docs/installation/online_installation/" target="_blank" rel="noopener nofollow">https://1panel.cn/docs/installation/online_installation/</a></p>
<h3 id="132ollamallm大型语言模型服务管理工具">1.3.2	Ollama：LLM（大型语言模型）服务管理工具</h3>
<p>Ollama是一个开源的 LLM（大型语言模型）服务工具，用于简化在本地运行大语言模型，使得大模型的开发者、研究人员和爱好者能够在本地环境快速实验、管理和部署最新大语言模型，包括如Llama 3、DeepSeek、Qwen、Gemma 等开源的大型语言模型。<br>
官网地址： <a href="https://ollama.com/" target="_blank" rel="noopener nofollow">https://ollama.com/</a></p>
<h3 id="133maxkb基于大语言模型和-rag-的开源知识库问答系统">1.3.3	MaxKB：基于大语言模型和 RAG 的开源知识库问答系统</h3>
<p>MaxKB = Max Knowledge Base，是一款基于大语言模型和 RAG 的开源知识库问答系统，广泛应用于智能客服、企业内部知识库、学术研究与教育等场景。<br>
结合 RAG 技术架构，其主要有三部分组成，分别是数据索引，数据检索和数据生成。<br>
对于 MaxKB 来说，数据索引的过程，基本是直接由 MaxKB 服务后台完成。当用户在 MaxKB 知识库页面，上传文档后，文档被分割成不同的数据块，每个数据块经过向量化处理，再存储到向量数据库。接下来是数据检索过程，当用户向 MaxKB 应用提问时，提问信息也会被 MaxKB 后台进行向量化处理，然后从向量数据库中，搜索相似度最高的向量数据。最后是数据生成过程， MaxKB 会把向量数据库检索到结果，当成提示词丢给 AI 大模型，最后在 MaxKB 页面上输出回复信息。<br>
更多详细内容，可以查看 MaxKB 官方网址：<a href="https://maxkb.cn/index.html" target="_blank" rel="noopener nofollow">https://maxkb.cn/index.html</a><br>
以及 MaxKB 安装包下载地址：<a href="https://maxkb.cn/docs/installation/offline_installtion/" target="_blank" rel="noopener nofollow">https://maxkb.cn/docs/installation/offline_installtion/</a></p>
<h1 id="二具体操作说明">二、具体操作说明</h1>
<p>整个解决方案需要依赖开源三件套，并最终通过六步完成总体部署实施，最终构建本 AI 知识库。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194109998-1407323826.png" alt="" loading="lazy"></p>
<h2 id="21第一步准备服务器">2.1	第一步：准备服务器</h2>
<p>首先我们需要准备一台本地 GPU 服务器，其中 GPU 主要为 DeepSeek R1 大模型提供资源，本操作步骤全部基于腾讯云的 GPU 服务器，大家可以根据自己具体情况选择本地服务器。腾讯云的 GPU 服务器在开机时，默认会自动安装好 Nvidia GPU 驱动。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194127143-294942596.png" alt="" loading="lazy"></p>
<p>当带 GPU 资源的腾讯云服务器准备好之后，如果已安装好 GPU 驱动，在服务器终端输入 nvidia-smi，可以看到以下显示信息。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194144490-1457569409.png" alt="" loading="lazy"></p>
<h2 id="22第二步安装-1panel">2.2	第二步：安装 1Panel</h2>
<p>浏览器访问 <a href="https://community.fit2cloud.com/#/products/1panel/downloads%EF%BC%8C%E4%B8%8B%E8%BD%BD%E5%A5%BD" target="_blank" rel="noopener nofollow">https://community.fit2cloud.com/#/products/1panel/downloads，下载好</a> 1Panel 离线包安装包，并上传到腾讯云服务器的 /tmp 目录，执行 tar -xvf 命令，解压安装包。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194202034-575292457.png" alt="" loading="lazy"></p>
<p>进入安装包的解压目录，执行 bash install.sh，服务器开始安装 1Panel。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194215229-581706713.png" alt="" loading="lazy"></p>
<p>安装成功后，日志会显示 1Panel 服务的访问地址信息。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194225765-134063139.png" alt="" loading="lazy"></p>
<p>为方便 1Panel 安装其它开源工具时，能快速下载 Docker 镜像，这里需要配置 Docker 镜像加速器。/etc/docker/daemon.json 配置文件内容如下：</p>
<pre><code>	{
  "registry-mirrors": [
    "https://docker.1ms.run",
    "https://proxy.1panel.live",
    "https://9f73jm5p.mirror.aliyuncs.com",
    "https://docker.ketches.cn"
  ]
}
</code></pre>
<p>/etc/docker/daemon.json 配置文件修改，需要 重启 Docker 服务。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194317466-1965101405.png" alt="" loading="lazy"></p>
<p>接下来在 1Panel 服务器提前拉取 ollama/ollama:0.5.7 镜像，1panel/maxkb:v1.10.0-lts 镜像，可以节省在 1Panel 页面上安装 Ollama 和 MaxKB 应用的时间。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194331189-1254595282.png" alt="" loading="lazy"></p>
<p>需要注意的是，Ollama 容器如果想使用服务器的 GPU 资源，操作系统需要提前安装 NVIDIA Container Toolkit，这是 NVIDIA 容器工具包。以 CentOS 7.9 操作系统为例，安装步骤如下：<br>
1、添加 NVIDIA 的 GPG 密钥和仓库：</p>
<pre><code>distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.repo | sudo tee /etc/yum.repos.d/nvidia-docker.repo
</code></pre>
<p>2、安装 NVIDIA Container Toolkit：<br>
<code>sudo yum install -y nvidia-container-toolkit</code><br>
3、重启 Docker 服务：<br>
<code>sudo systemctl restart docker</code></p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194413783-835511912.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194430206-43086661.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194441650-1865973765.png" alt="" loading="lazy"></p>
<p>如果是其它操作系统，也可以参考以上步骤来安装 NVIDIA Container Toolkit。</p>
<h2 id="23第三步安装-ollama">2.3	第三步：安装 Ollama</h2>
<p>登录 1Panel 页面，在“应用商店”，切换到“AI/大模型”，点击 Ollama 的“安装”按钮。</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194523917-683183236.png" alt="" loading="lazy"></p>
<p>打开“端口外部访问”。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194538801-1604053922.png" alt="" loading="lazy"></p>
<p>勾选”编辑 compose 文件”，将以下文本内容粘贴到输入框，此文件作用是，让 Ollama 容器在启动时，可以调用服务器本身的 GPU 资源。</p>
<pre><code>networks:
    1panel-network:
        external: true
services:
    ollama:
        container_name: ${CONTAINER_NAME}
        deploy:
            resources:
                limits:
                    cpus: ${CPUS}
                    memory: ${MEMORY_LIMIT}
                reservations:
                    devices:
                        - driver: nvidia
                          count: all
                          capabilities: [gpu]
        image: ollama/ollama:0.5.7
        labels:
            createdBy: Apps
        networks:
            - 1panel-network
        ports:
            - ${HOST_IP}:${PANEL_APP_PORT_HTTP}:11434
        restart: unless-stopped
        tty: true
        volumes:
            - ./data:/root/.ollama
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194555147-1230117635.png" alt="" loading="lazy"></p>
<p>点击“确认”后，在 1Panel 页面可以看到 Ollama 应用是“已启动”状态。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194606089-1057730875.png" alt="" loading="lazy"></p>
<p>浏览器访问服务器 IP:11434，可以看到 “Ollama is running” 的显示信息。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194620068-896754006.png" alt="" loading="lazy"></p>
<p>点击“容器”菜单的“日志”操作，在容器日志，可以看到 Ollama 容器已正常使用 GPU 资源。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194637683-415658262.png" alt="" loading="lazy"><br>
点击“容器”菜单的“终端”操作，再点击“连接”，进入 Ollama 容器的终端命令行。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194655048-1698862508.png" alt="" loading="lazy"></p>
<p>执行 ollama pull deepseek-r1:7b 命令，此命令的执行时间较长，取决于 DeepSeek 参数规模的大小。提前下载 deepseek-r1:7b 大模型的安装包到本地，方便后续在 MaxKB 页面可以快速对接deepseek-r1:7b 大模型。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194706431-182257596.png" alt="" loading="lazy"></p>
<p>由于 Ollama 官网的网速限制，ollama pull 执行过程中，deepseek-r1:7b 安装包下载速度会持续降低，可以通过 ctrl+c 中断命令，再次执行 ollama pull deepseek-r1:7b 命令，下载速度会慢慢恢复正常。这个操作过程可能会持续多次。</p>
<h2 id="24第四步安装maxkb">2.4	第四步：安装MaxKB</h2>
<p>在 1Panel 页面的“应用商店”，切换到“AI 大模型”，点击 MaxKB 的“安装”按钮。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194721604-2091581451.png" alt="" loading="lazy"></p>
<p>打开“端口外部访问”，CPU 设置为 2 核，内存设置为 4096 M。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194733028-1665495964.png" alt="" loading="lazy"></p>
<p>点击“确认”后，可以看到 MaxKB 应用是“已启动”状态。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194745545-845690346.png" alt="" loading="lazy"></p>
<p>浏览器访问服务器 IP:8080，可以显示 MaxKB 应用的登录页面，即可正常使用 MaxKB 服务。默认登录信息是：<br>
用户名：admin<br>
密码：MaxKB@123..<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194800262-1208573142.png" alt="" loading="lazy"></p>
<h2 id="25第五步对接-deepseek--r1-模型">2.5	第五步：对接 DeepSeek -R1 模型</h2>
<p>在 MaxKB “模型设置”菜单，点击“添加模型”。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194814569-1193499126.png" alt="" loading="lazy"></p>
<p>模型供应商选择 “Ollama”。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194825384-1143641801.png" alt="" loading="lazy"></p>
<p>填写“基础信息”，包括“模型名称”，“模型类型”为“大语言模型”，“基础模型”为 “deepseek-r1:7b”，”API URL ”为 <a href="http://xn--IP-962c03nfxfo83a074bmbr:11434/" target="_blank" rel="noopener nofollow">http://腾讯云服务器IP:11434/</a></p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194840071-1729531687.png" alt="" loading="lazy"></p>
<p>点击“保存”后，页面显示 MaxKB 服务已正常对接 deepseek-r1:7b 本地大模型。</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194856315-1595987147.png" alt="" loading="lazy"></p>
<h2 id="26第六步发布本地ai知识库">2.6	第六步：发布本地AI知识库</h2>
<h3 id="261简单应用发布">2.6.1	简单应用发布</h3>
<p>首先发布一个简单应用，使用某高校教务管理文档为例，使用 MaxKB 创建的对话应用，完成教务问题的智能对话问答。<br>
在 MaxKB “知识库”菜单，点击“创建知识库”。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194910212-2391806.png" alt="" loading="lazy"><br>
输入“知识库名称”，“知识库描述”，选择“向量模型”，知识库类型选择“通用型”，点击“创建”。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194926042-1313774676.png" alt="" loading="lazy"></p>
<p>在跳转后的页面，点击“上传文档”。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194936129-2083536050.png" alt="" loading="lazy"></p>
<p>点击“选择文件”，选中本地某高校教务管理规定的 WORD 文件，点击“下一步”。</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194947514-1497646917.png" alt="" loading="lazy"></p>
<p>分段规则默认使用“智能分段”，点击“开始导入”。</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216194958813-1578310241.png" alt="" loading="lazy"></p>
<p>当“文件状态”显示“成功”时，说明本地文档已正常导入到 MaxKB 知识库。</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216195014856-938035953.png" alt="" loading="lazy"></p>
<p>开始手动创建简单应用，在 MaxKB “应用”菜单，点击“创建应用”。</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216195027265-895390796.png" alt="" loading="lazy"></p>
<p>输入“应用名称”，“应用描述”，选择“应用类型”为“简单配置”，点击“创建”。</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216195038314-37836450.png" alt="" loading="lazy"></p>
<p>设置“AI 模型”为 MaxKB 刚才对接的 deepseek-r1:7b 本地大模型，填写“系统角色”。</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216195049768-292733876.png" alt="" loading="lazy"></p>
<p>添加刚才创建的“高校教务管理”知识库，填写“开场白”，打开“输出思考”，点击右上角的“保存并发布”。</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216195100902-1820357222.png" alt="" loading="lazy"></p>
<p>在 MaxKB “应用”菜单的概览页面，点击“演示”，可以测试 MaxKB 创建的智能对话应用。</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216195115083-675345889.png" alt="" loading="lazy"></p>
<p>在对话应用的输入框，填写提问信息后，可以看到应用回复的内容是比较准确的。</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216195130090-1345731784.png" alt="" loading="lazy"></p>
<h3 id="262高级编排应用发布">2.6.2	高级编排应用发布</h3>
<p>接下来，发布一个高级编排应用，使用 JumpServer 中文运维手册为例，使用 MaxKB 创建的高级应用，完成 JumpServer 运维的智能对话问答。当用户提问信息是英文时，高级应用可以将英文翻译成中文，结合 JumpServer 中文运维手册的数据，高级应用再将此中文数据自动翻译成英文，最后返回英文回复信息给用户。<br>
工作流编排中有两个最重要的 AI 对话节点，前一个 AI 对话节点作用是把英文翻译成中文，后一个 AI 对话节点作用是把中文翻译成英文。<br>
继续创建一个知识库，方便给工作流编排中的“AI 对话”节点使用。</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216195141849-305914209.png" alt="" loading="lazy"></p>
<p>输入“知识库名称”，“知识库描述”，选择“向量模型”，知识库类型选择“通用型”，点击“创建”。</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216195151917-828105029.png" alt="" loading="lazy"></p>
<p>点击“选择文件”，选中本地 JumpServer 运维手册的 WORD 文件，点击“下一步”。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216195203118-1375651222.png" alt="" loading="lazy"></p>
<p>当“文件状态”显示“成功”时，说明本地文档已正常导入到 MaxKB 知识库。</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216195214526-2087931425.png" alt="" loading="lazy"></p>
<p>开始创建高级编排应用，在 MaxKB “应用”菜单，点击“导入应用”，选中本地 mk 文件，点击“确认”。</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216195230042-1683733631.png" alt="" loading="lazy"></p>
<p>mk 文件导入成功后，点击“设置”按钮，进入高级编排应用的工作流编辑页面。</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216195242474-844562534.png" alt="" loading="lazy"></p>
<p>在工作流编辑页面，修改“问题翻译节点”的“AI 大模型”为本地部署的 DeepSeek-R1:7B ，“选择知识库”为刚才创建的 JumpServer 运维手册的知识库。</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216195254974-1958502930.png" alt="" loading="lazy"></p>
<p>“中文-英文翻译节点”的“AI 大模型”修改为本地部署的 DeepSeek-R1:7B，打开“输出思考”的开关，先点击右上角的“保存”，再点击“发布”。</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216195309513-1552134793.png" alt="" loading="lazy"></p>
<p>在 MaxKB “应用”菜单的概览页面，点击“演示”，可以测试 MaxKB 创建的高级编排应用。</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216195318919-1447466563.png" alt="" loading="lazy"></p>
<p>在对话应用的输入框，填写提问信息后，可以看到应用回复的内容是比较准确的，并且可以看到DeepSeek-R1:7B 大模型的思考过程。</p>
<p><img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216195332363-1578473599.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216195338440-1866370498.png" alt="" loading="lazy"></p>
<p>如果想查看腾讯云服务器 GPU 的资源使用情况，可以在服务器终端执行 nvidia-smi 命令。<br>
<img src="https://img2024.cnblogs.com/blog/3600464/202502/3600464-20250216195352366-711237523.png" alt="" loading="lazy"></p>
<p>教学视频：<a href="https://edu.fit2cloud.com/detail/l_67a3079ee4b0694c5a8b350e/4" target="_blank" rel="noopener nofollow">https://edu.fit2cloud.com/detail/l_67a3079ee4b0694c5a8b350e/4</a><br>
相关附件：<a href="https://pan.baidu.com/s/1YfT7-tZ8hfh9CFwiJxGokA?pwd=5sae" target="_blank" rel="noopener nofollow">https://pan.baidu.com/s/1YfT7-tZ8hfh9CFwiJxGokA?pwd=5sae</a>  提取码: 5sae</p>
<ul>
<li>DeepSeek+RAG 直播实操笔记；</li>
<li>DeepSeek-R1+RAG 开源三件构建本地 AI 知识库教学PPT；</li>
<li>JumpServer Assistant.mk</li>
<li>JumpServer 运维安全审计系统运维手册.docx</li>
<li>高校教务管理规定.docx</li>
</ul>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.020109700912037037" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-16 19:58">2025-02-16 19:55</span>&nbsp;
<a href="https://www.cnblogs.com/xiaobaiysf">小白跃升坊</a>&nbsp;
阅读(<span id="post_view_count">2</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18718662" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18718662);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18718662', targetLink: 'https://www.cnblogs.com/xiaobaiysf/p/18718662', title: '【保姆级教程】DeepSeek R1+RAG，基于开源三件套10分钟构建本地AI知识库' })">举报</a>
</div>
        