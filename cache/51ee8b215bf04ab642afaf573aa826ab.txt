
		<h1 class="postTitle">
			<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/linx/p/18900100" title="发布于 2025-05-28 10:50">
    <span role="heading" aria-level="2">Web前端入门第 60 问：JavaScript 各种数组定义与数组取值方法</span>
    

</a>

		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>数组可以算是程序里面最常用的数据结构了，但凡网页上任何一个列表数据，基本都是以数组的形式存在，像表格、banner图、菜单列表、商品列表，分类列表等等，在前端领域都是以数组处理。</p>
<h2 id="数组的定义">数组的定义</h2>
<p>JS 的数组花样很多，不像其他强类型语言中的数组限制颇多。</p>
<h3 id="数组中的元素">数组中的元素</h3>
<p>JS 数组中的元素可以是任何类型，包括对象、数组、函数、字符串、数字、布尔值等。而且可以在同一个数组中混合使用各种数据类型。</p>
<p>示例：</p>
<pre><code class="language-js">const arr1 = [
  '前端路引', // 字符串
  1, // 数字
  true, // 布尔值
  function() {}, // 函数
  { name: '前端路引' }, // 对象
  [1, 2], // 数组
  new Date(), // 日期对象
  new RegExp(), // 正则对象
  // ...还可以是其他各种对象
];
</code></pre>
<h3 id="数组定义">数组定义</h3>
<p>除了使用字面量 <code>[]</code> 定义数组外，还可以使用构造函数 <code>Array</code> 定义数组，也可以使用数组提供的内置方法定义数组。</p>
<p>示例：</p>
<pre><code class="language-js">const arr1 = [1, 2, 3]; // 字面量定义数组
const arr2 = new Array(); // 空数组
const arr3 = new Array(1, 2, 3); // 包含元素
const arr5 = Array(1, 2, 3) // 与 new Array 一样，获取 [1, 2, 3]
const arr6 = new Array(5) // [空属性 × 5]  数组长度为 5
const arr7 = Array(5) // 与 new Array(5) 相同
const arr8 = Array.of(5) // [5]  数组长度为 1
// 将类数组或可迭代对象转为数组
const arr9 = Array.from('前端路引') // ['前', '端', '路', '引']
const arr10 = Array.from([1, 2, 3], (item) =&gt; item * 2) // [2, 4, 6]
const arr11 = Array.from({ length: 5 }, (item, index) =&gt; index)
const arr12 = Array.from(document.querySelectorAll('div'))
// 扩展运算符
const arr13 = [...arr5]; // 扩展运算符将会展开原数组，获得一个新的数组
// fill 方法
const arr14 = new Array(5).fill(1); // [1, 1, 1, 1, 1]
</code></pre>
<h3 id="数组长度">数组长度</h3>
<p>数组的 <code>length</code> 属性表示数组长度，即一个数组中的元素个数，也可以通过 <code>length</code> 属性修改数组长度，如果长度不够，则自动使用 <code>空属性</code> 填充，如果设置的 <code>length</code> 小于原数组长度，则数组将会截断。</p>
<pre><code class="language-js">const arr1 = [1, 2, 3];
console.log(arr1.length); // 3
arr1.length = 5; // 自动使用空属性填充
console.log(arr1); // [1, 2, 3, 空属性 × 2]
arr1.length = 2; // 截断长度为2
console.log(arr1); // [1, 2]
</code></pre>
<h2 id="数组取值">数组取值</h2>
<p>数组取值需要通过 <code>下标(index)</code> 来获取，所有数组下标都从 <code>0</code> 开始，如果下标越界，则会返回 <code>undefined</code>。</p>
<pre><code class="language-js">const arr1 = ['前', '端', '路', '引'];
console.log(arr1[0]); // 前
console.log(arr1[4]); // undefined 数组最大下标为 length - 1
console.log(arr1[-1]); // undefined
const index = 2;
// 可以使用变量取值
console.log(arr1[index]); // 路

// 使用 at 方法取值
console.log(arr1.at(0)); // 前
console.log(arr1.at(4)); // 越界获取 undefined
// at 方法负数取值，从数组末尾开始取值倒数，-1 表示数组最后一个元素，-2 表示数组倒数第二个元素，以此类推。
console.log(arr1.at(-1)); // 引
</code></pre>
<p>空属性的取值将会获得 <code>undefined</code>：</p>
<pre><code class="language-js">const arr1 = new Array(5); // [空属性 × 5]  数组长度为 5
console.log(arr1[0]); // undefined
console.log(arr1.at(0)); // undefined
</code></pre>
<h2 id="写在最后">写在最后</h2>
<p>以上数组定义和取值基本涵盖了日常开发中最常用的几种方式，当然不是所有的定义方法都能穷举，比如一些歪路子定义数组：</p>
<pre><code class="language-js">const arr1 = eval(`['前', '端', '路', '引']`);
const arr2 = (new Function(`return ['前', '端', '路', '引']`))();
</code></pre>
<p>歪路子有很多，就不一一介绍了，掌握常用的定义方法即可！</p>

</div>
<div id="MySignature" role="contentinfo">
    <p>&nbsp;</p>
<p style="font-size: 18px;font-weight: bold;">文章收录于微信公众号【<span style="color:rgb(255, 71, 87)">前端路引</span>】，欢迎 <span style="color:#4ec259">微信扫一扫</span> 查看更多文章。</p>
<p>
  <img style="max-width: 320px;" src="https://images.cnblogs.com/cnblogs_com/linx/2447020/o_250228035031_%E5%85%AC%E4%BC%97%E5%8F%B7%E4%BA%8C%E7%BB%B4%E7%A0%81.png">
</p>
<p>本文来自博客园，作者：<a href="https://www.cnblogs.com/linx/" target="_blank">前端路引</a>，转载请注明原文链接：<a href="https://www.cnblogs.com/linx/p/18900100" target="_blank">https://www.cnblogs.com/linx/p/18900100</a></p>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

		</div>
		<div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="6.403931036025463" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-28 10:50">2025-05-28 10:50</span>&nbsp;
<a href="https://www.cnblogs.com/linx">前端路引</a>&nbsp;
Views(<span id="post_view_count">228</span>)&nbsp;
Comments(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18900100);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18900100', targetLink: 'https://www.cnblogs.com/linx/p/18900100', title: 'Web前端入门第 60 问：JavaScript 各种数组定义与数组取值方法' })">举报</a>
</div>
	