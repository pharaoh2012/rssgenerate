
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/WxxYdl/p/18800279" title="发布于 2025-03-30 08:31">
    <span role="heading" aria-level="2">C# 管理多个工作簿的任务窗格</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>CustomTaskPanes.Add方法，它自动把任务窗格添加到<strong>当前的工作簿</strong>上去了。怎样才能将工作簿对象和任务窗格关联起来？<br>
方法是：<br>
ThisAddIn.cs中创建一个字典管理任务窗格</p>
<p>private Dictionary&lt;string, CustomTaskPane&gt; _createdPanes = new Dictionary&lt;string, CustomTaskPane&gt;();</p>
<pre><code>    /// &lt;summary&gt;
    /// 按名称获取任务窗格（如果当前excel窗口存在，则返回现有实例，否则使用taskPaneCreatorFunc创建一个）。
    /// &lt;/summary&gt;
    /// &lt;param name="taskPaneId"&gt;一个唯一字符串来标识任务窗格&lt;/param&gt;
    /// &lt;param name="taskPaneTitle"&gt;任务窗格的标题&lt;/param&gt;
    /// &lt;param name="taskPaneWidth"&gt;任务窗格的宽度&lt;/param&gt;
    /// &lt;param name="taskPaneDockPosition"&gt;任务窗格的停靠位置&lt;/param&gt;
    /// &lt;param name="taskPaneCreatorFunc"&gt;构造任务窗格的函数。&lt;/param&gt;
    public CustomTaskPane GetTaskPane(
               string taskPaneId,
               string taskPaneTitle,
               int taskPaneWidth,
               Office.MsoCTPDockPosition taskPaneDockPosition,
               Func&lt;UserControl&gt; taskPaneCreatorFunc
           )
    {
        //string key = string.Format("{0}({1})", taskPaneId, Globals.ThisAddIn.Application.Hwnd);
        string key = $"{taskPaneId}({Globals.ThisAddIn.Application.Hwnd})";

        if (!_createdPanes.ContainsKey(key))
        {
            // 忽略第三个参数，默认在当前窗口新建一个任务窗格
            var taskPane = Globals.ThisAddIn.CustomTaskPanes.Add(taskPaneCreatorFunc(), taskPaneTitle);
            taskPane.Width = taskPaneWidth;
            taskPane.DockPosition = taskPaneDockPosition;
            _createdPanes[key] = taskPane;
        }
        return _createdPanes[key];
    }
</code></pre>
<p>在Ribbon1.cs中设置一个按钮 调用 并显示或隐藏<br>
private void button1_Click(object sender, RibbonControlEventArgs e)<br>
{<br>
<a href="//Globals.ThisAddIn.myPane.Visible" target="_blank" rel="noopener nofollow">//Globals.ThisAddIn.myPane.Visible</a> = ! Globals.ThisAddIn.myPane.Visible;<br>
{<br>
//调用自定义任务窗格方法来获取或创建任务窗格<br>
var taskpane = Globals.ThisAddIn.GetTaskPane(<br>
"A",<br>
"设置",<br>
200,<br>
Office.MsoCTPDockPosition.msoCTPDockPositionLeft,<br>
() =&gt; new UserControl1()<br>
);<br>
taskpane.Visible = !taskpane.Visible;<br>
}</p>
<pre><code>    }
</code></pre>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="4.102725150877315" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-30 08:32">2025-03-30 08:31</span>&nbsp;
<a href="https://www.cnblogs.com/WxxYdl">WxxYdl</a>&nbsp;
阅读(<span id="post_view_count">57</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18800279" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18800279);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18800279', targetLink: 'https://www.cnblogs.com/WxxYdl/p/18800279', title: 'C# 管理多个工作簿的任务窗格' })">举报</a>
</div>
        