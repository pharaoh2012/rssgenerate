
		<h1 class="postTitle">
			<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chingho/p/18888423" title="发布于 2025-05-21 10:03">
    <span role="heading" aria-level="2">C#实现自己的MCP Client</span>
    

</a>

		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p><strong>市面上，有很多免费Client客户端。</strong></p>
<p><strong>虽然说，这些Client客户端可以满足我们大部分的需求，但是在实际企业业务场景中，免费的Client无法全部满足我们的需求。</strong></p>
<p>下面我们用C# 实现MCP Client。</p>
<h1 id="一新建控制台项目">一、新建控制台项目</h1>
<p>新建项目</p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202505/93789-20250521100207435-1344572578.png" alt="图片" loading="lazy"></p>
<p>框架选择.Net 8</p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202505/93789-20250521100207383-350754778.png" alt="图片" loading="lazy"></p>
<h1 id="二添加mcp-sdk">二、添加MCP SDK</h1>
<p>添加依赖库：ModelContextProtocol，版本为：<strong>最新预发行版 0.1.0-preview.13，添加的时候记得勾选：包括预发行版。</strong></p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202505/93789-20250521100207472-222884477.png" alt="图片" loading="lazy"></p>
<p>这个是官方提供的C#版本的SDK，官网：<a href="https://modelcontextprotocol.io/introduction%E3%80%82" target="_blank" rel="noopener nofollow">https://modelcontextprotocol.io/introduction。</a></p>
<h1 id="三实现客户端">三、实现客户端</h1>
<p>下面代码，创建一个SSE客户端实例，并获取工具列表。</p>
<pre><code>using&nbsp;ModelContextProtocol.Client;&nbsp;// 包含 McpClientFactory 和 McpClient 相关定义
using&nbsp;ModelContextProtocol.Protocol.Transport;&nbsp;// 包含传输层相关类，如 SseClientTransport
// 创建一个 SSE（Server-Sent Events）客户端传输配置实例
var&nbsp;config =&nbsp;new&nbsp;SseClientTransport(
&nbsp; &nbsp;&nbsp;// 配置传输选项，指定服务端点（Endpoint）
&nbsp; &nbsp;&nbsp;new&nbsp;SseClientTransportOptions()
&nbsp; &nbsp; {
&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;// 设置远程服务器的 URI 地址 &nbsp;(记得替换真实的地址，从魔搭MCP广场获取)
&nbsp; &nbsp; &nbsp; &nbsp; Endpoint =&nbsp;new&nbsp;Uri("https://mcp.api-inference.modelscope.cn/sse/215e9461d2xxxxx")
&nbsp; &nbsp; }
);
// 使用配置创建 MCP 客户端实例
var&nbsp;client =&nbsp;await&nbsp;McpClientFactory.CreateAsync(config);
// 调用客户端的 ListToolsAsync 方法，获取可用工具列表
var&nbsp;listToolsResult =&nbsp;await&nbsp;client.ListToolsAsync();
Console.WriteLine("功能列表:");
// 遍历工具列表，并逐个输出到控制台
foreach&nbsp;(var&nbsp;tool&nbsp;in&nbsp;listToolsResult)
{
&nbsp; &nbsp; Console.WriteLine($" &nbsp;名称：{tool.Name}，说明：{tool.Description}"&nbsp;);
}
</code></pre>
<p>运行效果如下，<strong>Fetch网页内容抓取，提供的工具列表。</strong></p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202505/93789-20250521100207400-1613832998.png" alt="图片" loading="lazy"></p>
<p>这里MCP Server用的协议是Sse，Stdio协议实现，等后续文章自定义MCP Server会讲到。</p>
<p>官方也有提供C# 实现客户端的例子：</p>
<p><a href="https://modelcontextprotocol.io/quickstart/client#c%E3%80%82" target="_blank" rel="noopener nofollow">https://modelcontextprotocol.io/quickstart/client#c。</a></p>
<p>- End -<br>
文章首发于公众号【编程乐趣】，欢迎大家关注。<br>
<img src="https://img2024.cnblogs.com/blog/93789/202505/93789-20250521100257569-22165666.png" alt="image" loading="lazy"></p>
<p><strong>推荐阅读</strong></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDE5MDM5NA==&amp;mid=2449946099&amp;idx=1&amp;sn=deadb46bf5863b31c3efdc946ff0ef57&amp;scene=21#wechat_redirect" target="_blank" rel="noopener nofollow">盘点11个.Net比较流行的开源的ORM框架</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDE5MDM5NA==&amp;mid=2449946082&amp;idx=1&amp;sn=3e3fb18475f4e682561ec9471610cca5&amp;scene=21#wechat_redirect" target="_blank" rel="noopener nofollow">盘点6个WebAPI+Vue前后端分离的.Net开源项目</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDE5MDM5NA==&amp;mid=2449946128&amp;idx=1&amp;sn=0ed847c881f813a27152738d917aeb51&amp;scene=21#wechat_redirect" target="_blank" rel="noopener nofollow">Duplicati：一款跨平台的备份客户端，支持加密、增量、压缩的备份存储在云存储服务和远程文件服务器</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDE5MDM5NA==&amp;mid=2449946104&amp;idx=1&amp;sn=d903da554a54963ab13032228719bc4a&amp;scene=21#wechat_redirect" target="_blank" rel="noopener nofollow">一个简单又好用的.Net版本.env文件读写操作库</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDE5MDM5NA==&amp;mid=2449946097&amp;idx=1&amp;sn=fcfd7aec9c649845722df5e9fb0ca618&amp;scene=21#wechat_redirect" target="_blank" rel="noopener nofollow">盘点4个浏览器插件相关的.Net开源项目</a></p>

</div>
<div class="clear"></div>

		</div>
		<div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.6797455335833333" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-21 10:04">2025-05-21 10:03</span>&nbsp;
<a href="https://www.cnblogs.com/chingho">chingho</a>&nbsp;
阅读(<span id="post_view_count">324</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18888423);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18888423', targetLink: 'https://www.cnblogs.com/chingho/p/18888423', title: 'C#实现自己的MCP Client' })">举报</a>
</div>
	