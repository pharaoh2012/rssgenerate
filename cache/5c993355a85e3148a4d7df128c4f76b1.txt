
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/du-hong/p/18457667" title="发布于 2025-07-25 16:30">
    <span role="heading" aria-level="2">《刚刚问世》系列初窥篇-Java+Playwright自动化测试-22- 操作鼠标拖拽 - 下篇（详细教程）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h3 id="autoid-0-0-0">1.简介</h3>
<p>上一篇中，宏哥说的宏哥在最后提到网站的反爬虫机制，那么宏哥在自己本地做一个网页，没有那个反爬虫的机制，谷歌浏览器是不是就可以验证成功了，宏哥就想验证一下自己想法，其次有人私信宏哥说是有那种类似拼图的验证码如何处理。于是写了这一篇文章，另外也是相对前边做一个简单的总结分享给小伙伴们或者童鞋们。废话不多数，直接进入今天的主题。</p>
<h3 id="autoid-0-1-0">2.滑动验证码</h3>
<h4 id="autoid-0-2-0">2.1演示模拟验证码点击拖动场景</h4>
<p>例如:演示模拟验证码点击拖动场景示例如下:</p>
<p><img src="https://img2018.cnblogs.com/blog/1535541/201907/1535541-20190705100703089-587353510.png" alt="" class="medium-zoom-image"></p>
<p><img src="https://img2018.cnblogs.com/blog/1535541/201907/1535541-20190705100732714-1764511399.png" alt="" class="medium-zoom-image"></p>
<p><img src="https://img2018.cnblogs.com/blog/1535541/201907/1535541-20190705100801268-627620823.png" alt="" class="medium-zoom-image"></p>
<h3 id="autoid-0-2-1">3.代码准备</h3>
<h4 id="autoid-0-3-0">3.1前端HTML代码</h4>
<p>前端HTML代码如下：</p>
<div class="cnblogs_code">
<pre>&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;北京-宏哥 滑动条&lt;/title&gt;
    &lt;link rel="stylesheet" href="drag.css"&gt;
    &lt;script src="jquery-1.7.1.min.js"&gt;&lt;/script&gt;
    &lt;script src="drag.js"&gt;&lt;/script&gt;
    &lt;style type="text/css"&gt;
        .slidetounlock{
            font-size: 12px;
            background:-webkit-gradient(linear,left top,right top,color-stop(0,#4d4d4d),color-stop(.4,#4d4d4d),color-stop(.5,#fff),color-stop(.6,#4d4d4d),color-stop(1,#4d4d4d));
            -webkit-background-clip:text;
            -webkit-text-fill-color:transparent;
            -webkit-animation:slidetounlock 3s infinite;
            -webkit-text-size-adjust:none
        }
        @-webkit-keyframes slidetounlock{0%{background-position:-200px 0} 100%{background-position:200px 0}}
        .button1 {
            background-color: #f44336; 
            border: none;
            color: white;
            padding: 15px 32px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 28px;
            margin-bottom: 100px;
            text-decoration:none;
            color: white;
        }
        #myAnchor
        {
          text-decoration:none;
          color: white;
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div id="wrapper" style="position: relative;top: 300px;left:300px;"&gt;
    &lt;button class="button1"&gt;&lt;a id="myAnchor" href="https://www.cnblogs.com/du-hong/"&gt;北京-宏哥&lt;/a&gt;&lt;/button&gt;&lt;/br&gt;
    &lt;div id="drag"&gt;
        &lt;div class="drag_bg"&gt;&lt;/div&gt;
        &lt;div class="drag_text slidetounlock" onselectstart="return false;" unselectable="on"&gt;
            请按住滑块，拖动到最右边
        &lt;/div&gt;
        &lt;div class="handler handler_bg"&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

    &lt;!--&lt;a href="#" class="img"&gt;&lt;img src="img/Lighthouse.jpg"/&gt;&lt;/a&gt;--&gt;
&lt;script&gt;
    $('#drag').drag();
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</pre>
</div>
<h4 id="autoid-0-3-1">3.2滑块CSS样式</h4>
<p>HTML滑块CSS样式代码如下：</p>
<div class="cnblogs_code">
<pre>#drag{
    position: relative;
    background-color: #e8e8e8;
    width: 300px;
    height: 34px;
    line-height: 34px;
    text-align: center;
}
#drag .handler{
    position: absolute;
    top: 0px;
    left: 0px;
    width: 40px;
    height: 32px;
    border: 1px solid #ccc;
    cursor: move;
}
.handler_bg{
    background: #fff url("../img/slider.png") no-repeat center;
}
.handler_ok_bg{
    background: #fff url("../img/complet.png") no-repeat center;
}
#drag .drag_bg{
    background-color: #7ac23c;
    height: 34px;
    width: 0px;
}
#drag .drag_text{
    position: absolute;
    top: 0px;
    width: 300px;
    color:#9c9c9c;
    -moz-user-select: none;
    -webkit-user-select: none;
    user-select: none;
    -o-user-select:none;
    -ms-user-select:none;

    font-size: 12px;        //  add
}</pre>
</div>
<h4 id="autoid-0-3-2">3.3滑块拖拽JS</h4>
<p>滑块拖拽JS代码如下：</p>
<div class="cnblogs_code">
<pre>$.fn.drag = function(options) {
    var x, drag = this, isMove = false, defaults = {
    };
    var options = $.extend(defaults, options);
    var handler = drag.find('.handler');
    var drag_bg = drag.find('.drag_bg');
    var text = drag.find('.drag_text');
    var maxWidth = drag.width() - handler.width();  //能滑动的最大间距

    //鼠标按下时候的x轴的位置
    handler.mousedown(function(e) {
        isMove = true;
        x = e.pageX - parseInt(handler.css('left'), 10);
    });

    //鼠标指针在上下文移动时，移动距离大于0小于最大间距，滑块x轴位置等于鼠标移动距离
    $(document).mousemove(function(e) {
        var _x = e.pageX - x;// _x = e.pageX - (e.pageX - parseInt(handler.css('left'), 10)) = x
        if (isMove) {
            if (_x &gt; 0 &amp;&amp; _x &lt;= maxWidth) {
                handler.css({'left': _x});
                drag_bg.css({'width': _x});
            } else if (_x &gt; maxWidth) {  //鼠标指针移动距离达到最大时清空事件
                dragOk();
            }
        }
    }).mouseup(function(e) {
        isMove = false;
        var _x = e.pageX - x;
        if (_x &lt; maxWidth) { //鼠标松开时，如果没有达到最大距离位置，滑块就返回初始位置
            handler.css({'left': 0});
            drag_bg.css({'width': 0});
        }
    });

    //清空事件
    function dragOk() {
        handler.removeClass('handler_bg').addClass('handler_ok_bg');
        text.removeClass('slidetounlock').text('验证通过').css({'color':'#fff'});       //modify
       // drag.css({'color': '#fff !important'});

        handler.css({'left': maxWidth});                   // add
        drag_bg.css({'width': maxWidth});                  // add

        handler.unbind('mousedown');
        $(document).unbind('mousemove');
        $(document).unbind('mouseup');

    }
};</pre>
</div>
<h4 id="autoid-0-3-3">3.4jquery-1.7.1.min.js下载地址</h4>
<p>&nbsp;jquery-1.7.1.min.js下载链接：<a href="http://www.jqueryfuns.com/resource/2169" rel="noopener nofollow" target="_blank">http://www.jqueryfuns.com/resource/2169</a></p>
<h4>3.5demo滑动演示效果</h4>
<p>最后用浏览器打开HTML文件，看一下效果如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202410/1232840-20241012085820268-340632537.gif" alt="" loading="lazy"></p>
<h3 id="autoid-0-3-4">4.自动化代码实现</h3>
<h4 id="autoid-0-4-0">4.1代码设计</h4>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202410/1232840-20241012090435840-1805285628.png" alt="" loading="lazy"></p>
<h4>4.2参考代码</h4>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">package</span><span style="color: rgba(0, 0, 0, 1)"> com.bjhg.playwright;

</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Browser;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.BrowserContext;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.BrowserType;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Locator;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Page;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Playwright;

</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">
 * </span><span style="color: rgba(128, 128, 128, 1)">@author</span><span style="color: rgba(0, 128, 0, 1)"> 北京-宏哥
 * 
 * @公众号:北京宏哥（微信搜索，关注宏哥，提前解锁更多测试干货）
 * 
 * 《刚刚问世》系列初窥篇-Java+Playwright自动化测试-22- 操作鼠标拖拽 - 下篇（详细教程）
 *
 * 2024年10月08日
 </span><span style="color: rgba(0, 128, 0, 1)">*/</span>
<span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Test_Drag_Demo {
    
    
    </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> main(String[] args) {
        </span><span style="color: rgba(0, 0, 255, 1)">try</span> (Playwright playwright =<span style="color: rgba(0, 0, 0, 1)"> Playwright.create()) {
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">1.使用chromium浏览器，# 浏览器配置，设置以GUI模式启动Chrome浏览器（要查看浏览器UI，在启动浏览器时传递 headless=false 标志。您还可以使用 slowMo 来减慢执行速度。</span>
          Browser browser = playwright.chromium().launch(<span style="color: rgba(0, 0, 255, 1)">new</span> BrowserType.LaunchOptions().setHeadless(<span style="color: rgba(0, 0, 255, 1)">false</span>).setSlowMo(3000<span style="color: rgba(0, 0, 0, 1)">));
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">2.创建context</span>
          BrowserContext context =<span style="color: rgba(0, 0, 0, 1)"> browser.newContext();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">创建page</span>
          Page page =<span style="color: rgba(0, 0, 0, 1)"> context.newPage();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">3.浏览器访问demo</span>
          page.navigate("E:\\Desktop\\test\\MouseDrag\\identifying_code.html"<span style="color: rgba(0, 0, 0, 1)">);
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">4.开始拖拽 </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">*[@id='drag']/div[3]
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">获取拖动按钮位置并拖动</span>
          Locator slider = page.locator("//*[@id='drag']/div[3]"<span style="color: rgba(0, 0, 0, 1)">);
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 使用鼠标滑动滑块</span>
          page.mouse().move(slider.boundingBox().x + slider.boundingBox().width / 2, slider.boundingBox().y + slider.boundingBox().height / 2<span style="color: rgba(0, 0, 0, 1)">);
          page.mouse().down();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 根据滑动的范围，这里使用滑动最大距离</span>
          page.mouse().move(slider.boundingBox().x + slider.boundingBox().width / 0.5+300, slider.boundingBox().y + slider.boundingBox().height / 2<span style="color: rgba(0, 0, 0, 1)">);
          page.mouse().up();
          System.out.println(</span>"Test Pass"<span style="color: rgba(0, 0, 0, 1)">);
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">关闭page</span>
<span style="color: rgba(0, 0, 0, 1)">          page.close();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">关闭browser</span>
<span style="color: rgba(0, 0, 0, 1)">          browser.close();
        }
    }
}</span></pre>
</div>
<h4>4.3运行代码</h4>
<p>1.运行代码，右键Run As-&gt;Java Application，就可以看到控制台输出，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202410/1232840-20241012090417175-243318798.png" alt="" loading="lazy"></p>
<p>2.运行代码后电脑端的浏览器的动作。如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202410/1232840-20241012090808259-581639266.gif" alt="" loading="lazy"></p>
<h3 id="autoid-0-2-1">5.项目实战</h3>
<p>闲暇之际，宏哥突然想到以前的一个网站，于是抱着试一试的想法看看能不能找到这样的一个演示实例，果然皇天不负有心人，在：<a href="https://www.jq22.com/" target="_blank" rel="noopener nofollow">https://www.jq22.com/</a>&nbsp;找了一个demo（也是没有发爬虫机制的）用于演示：<a href="https://www.jq22.com/demo/slideVerify201909022305/" target="_blank" rel="noopener nofollow">https://www.jq22.com/demo/slideVerify201909022305/</a>。如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202410/1232840-20241010171845775-1109348899.gif" alt="" loading="lazy"></p>
<h4 id="autoid-0-3-2">5.1代码设计</h4>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202410/1232840-20241010172031432-1391017195.png" alt="" loading="lazy"></p>
<h4 id="autoid-0-3-3">5.2参考代码</h4>
<div class="cnblogs_code">
<pre>package<span> com.bjhg.playwright;

import<span> com.microsoft.playwright.Browser;
import<span> com.microsoft.playwright.BrowserContext;
import<span> com.microsoft.playwright.BrowserType;
import<span> com.microsoft.playwright.Locator;
import<span> com.microsoft.playwright.Page;
import<span> com.microsoft.playwright.Playwright;


/**
 * @author 北京-宏哥
 * 
 * @公众号:北京宏哥（微信搜索，关注宏哥，提前解锁更多测试干货）
 * 
 * 《刚刚问世》系列初窥篇-Java+Playwright自动化测试-21-操作鼠标拖拽 -中篇（详细教程）
 *
 * 2024年10月11日
 */
public class<span> Test_DragTo {

    public static void<span> main(String[] args) {
        try (Playwright playwright =<span> Playwright.create()) {
          //1.使用chromium浏览器，# 浏览器配置，设置以GUI模式启动Chrome浏览器（要查看浏览器UI，在启动浏览器时传递 headless=false 标志。您还可以使用 slowMo 来减慢执行速度。
          Browser browser = playwright.chromium().launch(new BrowserType.LaunchOptions().setHeadless(false).setSlowMo(3000<span>));
          //2.创建context
          BrowserContext context =<span> browser.newContext();
          //创建page
          Page page =<span> context.newPage();
          //3.浏览器访问demo
          page.navigate("https://www.jq22.com/demo/slideVerify201909022305/"<span>);
          //4.开始拖拽
          //获取拖动按钮位置并拖动:
          Locator slider = page.locator("//*[@id='verify-wrap']/span[1]"<span>);
          // 使用鼠标滑动滑块
          page.mouse().move(slider.boundingBox().x + slider.boundingBox().width / 2, slider.boundingBox().y + slider.boundingBox().height / 2<span>);
          page.mouse().down();
          // 根据滑动的范围，这里使用滑动最大距离
          page.mouse().move(slider.boundingBox().x + slider.boundingBox().width / 0.5+300, slider.boundingBox().y + slider.boundingBox().height / 2<span>);
          page.mouse().up();
          
          System.out.println("Test Pass"<span>);
          //关闭page
<span>          page.close();
          //关闭browser
<span>          browser.close();
        }
    }
}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<h4>5.3运行代码</h4>
<p>1.运行代码，右键Run As-&gt;Java Application，就可以看到控制台输出，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202410/1232840-20241010172323765-2129393858.png" alt="" loading="lazy"></p>
<p>2.运行代码后电脑端的浏览器的动作（滑动并验证通过）。如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202410/1232840-20241010172612575-1230762151.gif" alt="" loading="lazy"></p>
<h3 id="autoid-0-4-3">6.小结</h3>
<p>好了，今天时间也不早了，宏哥就讲解和分享到这里，感谢您耐心的阅读，希望对您有所帮助。</p>
</div>
<div id="MySignature" role="contentinfo">
    <div id="MySignature" style="display: block">
	<div style="font-size: 13px; border: 1px dashed rgb(45, 161, 45); padding: 10px 15px; background-color: rgb(248, 248, 248)">
		<label style="font-weight: bold">
			&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家在移动端也能看到我分享的博文，现已注册个人微信公众号，扫描左下方二维码即可，欢迎大家关注，提前解锁更多测试干货！有时间会及时分享相关技术博文。
		</label>
		<br>
		<label style="font-weight: bold">
			&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家互动讨论相关技术问题，刚刚建立了咱们的专门的微信群交流互动群，群内会分享交流测试领域前沿知识。  请您扫描中间的微信二维码进群 
		</label>
		<br>
		<label style="font-weight: bold">
			&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家互动讨论相关技术问题，现已组建专门的微信群，由于微信群满100，请您扫描右下方宏哥个人微信二维码拉你进群
			<label style="font-weight: bold; color: red; font-size: 15px">
				（请务必备注：已关注公众号进群）平时上班忙（和你一样），所以加好友不及时，请稍安勿躁~
			</label>
			，欢迎大家加入这个大家庭，我们一起畅游知识的海洋。
		</label>
		<br>
		&nbsp;&nbsp;&nbsp;&nbsp;感谢您花时间阅读此篇文章,如果您觉得这篇文章你学到了东西也是为了犒劳下博主的码字不易不妨打赏一下吧，让博主能喝上一杯咖啡，在此谢过了！
		<br>
		&nbsp;&nbsp;&nbsp;&nbsp;如果您觉得阅读本文对您有帮助，请点一下左下角
		<a id="recommend" style="font-weight: bold; color: red; font-size: 15px; text-decoration: underline">
			“推荐”
		</a>
		按钮，您的
		<label style="font-weight: bold; color: red; font-size: 15px">
			“推荐”
		</label>
		将是我最大的写作动力！另外您也可以选择
		<a id="follow_me_btn" style="cursor: pointer; color: blue; text-decoration: underline">
			【
			<strong>
				关注我
			</strong>
			】
		</a>
		，可以很方便找到我！
		<br>
		&nbsp;&nbsp;&nbsp;&nbsp;本文版权归作者和博客园共有，来源网址：
		<a href="https://www.cnblogs.com/du-hong" style="color: red; text-decoration: underline" target="_blank">
			https://www.cnblogs.com/du-hong
		</a>
		欢迎各位转载，但是未经作者本人同意，转载文章之后必须在文章页面明显位置给出作者和原文连接，否则保留追究法律责任的权利！
	</div>
	<div style="text-align: center; margin-top: 10px">
		<p style=" font-weight: bolder; color: red; ">
			公众号(关注宏哥)&nbsp; &nbsp;&nbsp;&nbsp;
			&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
			微信群(扫码进群) &nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;客服微信
		</p>
		<img style="width: 200px;padding-right: 50px;" alt="个人微信公众号" src="https://img2018.cnblogs.com/common/1741949/201911/1741949-20191119095948011-608816619.png">
		<img style="width: 200px;padding-right: 65px;" alt="微信群" src="https://img2024.cnblogs.com/blog/1232840/202506/1232840-20250610113707419-637869921.png">
		<img style="width: 200px" alt="个人微信" src="https://img2018.cnblogs.com/common/1741949/201911/1741949-20191106101257091-849954564.png">
	</div>
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-25 16:30">2025-07-25 16:30</span>&nbsp;
<a href="https://www.cnblogs.com/du-hong">北京-宏哥</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18457667);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18457667', targetLink: 'https://www.cnblogs.com/du-hong/p/18457667', title: '《刚刚问世》系列初窥篇-Java+Playwright自动化测试-22- 操作鼠标拖拽 - 下篇（详细教程）' })">举报</a>
</div>
        