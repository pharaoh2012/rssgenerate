
	<h1 class="postTitle"><a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/szw/p/19051631" title="发布于 2025-08-21 21:57">
    <span role="heading" aria-level="2">Senparc.AI 系列教程（二）：配置大模型，开始开发应用</span>
    

</a>
</h1>
	<div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>　　上一篇《<a href="https://www.cnblogs.com/szw/p/18004568" target="_blank">Senparc.AI 系列教程（一）：概要</a>》中简要介绍了 Senparc.AI 所支撑的底层能力，本篇将介绍如何使用 Senparc.AI 打通 AI 算力，使用不同类型的大模型完成对话或者文本生成任务。</p>
<h2>准备工作</h2>
<p>　　Senparc.AI 已经全部开源，地址：<a href="https://github.com/Senparc/Senparc.AI" rel="noopener nofollow" target="_blank">https://github.com/Senparc/Senparc.AI</a>，相关的程序包已经全部打包到 Nuget，因此只需要引用相关包即可接通基础能力。</p>
<p>　　为了方便大家学习和应用，在源码中我们已经提供了基于命令行的演示（相关方法同样适用于网站等任何其他系统），代码位置位于 /Samples/Senparc.AI.Samples.Consoles，打开 Senparc.AI.sln 解决方案也可以直接看到响应示例和所有源码：</p>
<p style="text-align: center"><img src="https://img2024.cnblogs.com/blog/28384/202508/28384-20250821195029587-1312405164.png" alt="image" width="388" height="545" loading="lazy"></p>
<p style="text-align: center">&nbsp;</p>
<p>&nbsp;　　运行后即可测试大模型对话、补全、图片生成、向量化、RAG、function-calling、MCP 等常见功能：</p>
<p><img src="https://img2024.cnblogs.com/blog/28384/202508/28384-20250821195213784-612063841.png" alt="image" width="1006" height="478" loading="lazy" style="display: block; margin-left: auto; margin-right: auto"></p>
<p>&nbsp;　</p>
<p>　　例如进行 Chat 对话（可以通过不同颜色区分 Stream 流式输出过程中的 Token）：　　</p>
<p style="text-align: center"><img src="https://img2024.cnblogs.com/blog/28384/202508/28384-20250821195415385-218600834.png" alt="image" width="1012" height="772" loading="lazy"></p>
<blockquote>
<p>　　可以看到 AI 回答问题还是有幻觉的问题（如 GitHub 地址有错误）。</p>
</blockquote>
<p>&nbsp;</p>
<h2>开始创建应用</h2>
<p><strong>第一步：创建一个空项目</strong></p>
<p>　　为了方便演示和更直观地查看原始输出内容，我们使用 Console 项目，您也可以举一反三使用 MVC、RazorPage、WPF、Blazor、WinForm 等其他类型项目。</p>
<p>　　使用 VS / VS Code 创建一个 Console 空项目，或使用命令行：</p>
<div class="cnblogs_code">
<pre>dotnet new console -n SenparcAiTest</pre>
</div>
<p>&nbsp;</p>
<p><strong>第二步：设置 appsettings.json</strong></p>
<p>　　创建或修改 appsettings.json 文件：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">{
  </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Logging</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">IncludeScopes</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">,
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">LogLevel</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
      </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Default</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Warning</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
    }
  },
  </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">CO2NET 设置</span>
  <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">SenparcSetting</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">IsDebug</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">,
  },
  </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">Senparc.AI 设置</span>
  <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">SenparcAiSetting</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">IsDebug</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">,
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">AiPlatform</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">DeepSeek</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">注意修改为自己平台对应的枚举值</span>
    <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">VectorDB</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
      </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Type</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">InMemory</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
      </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">ConnectionString</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">""</span><span style="color: rgba(0, 0, 0, 1)">
    },
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">DeepSeekKeys</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
      </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Endpoint</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">https://api.deepseek.com</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
      </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">ApiKey</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&lt;Your DeepSeek Key&gt;</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
      </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">ModelName</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
        </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Chat</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">deepseek-chat</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
        </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">TextCompletion</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">deepseek-chat</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
      }
    }
  }
}</span></pre>
</div>
<p>　　上述配置以 DeepSeek 为例，<strong>AiPlatform</strong> 为默认选用大模型平台，<strong>DeepSeekKeys</strong> 节点中配置 DeepSeek 模型信息，其中 ModelName 中指定同一个平台下不同类型大模型所对应的模型名称。</p>
<p>　　目前还支持的其他类型还包括：</p>
<ul>
<li class="p1"><span class="Apple-converted-space">&nbsp; &nbsp; &nbsp; &nbsp; NeuCharAI</span></li>
<li class="p1"><span class="Apple-converted-space">&nbsp; &nbsp; &nbsp; &nbsp; OpenAI&nbsp;</span></li>
<li class="p1"><span class="Apple-converted-space">&nbsp; &nbsp; &nbsp; &nbsp; AzureOpenAI</span></li>
<li class="p1"><span class="Apple-converted-space">&nbsp; &nbsp; &nbsp; &nbsp; HuggingFace</span></li>
<li class="p1"><span class="Apple-converted-space">&nbsp; &nbsp; &nbsp; &nbsp; FastAPI</span></li>
<li class="p1"><span class="Apple-converted-space">&nbsp; &nbsp; &nbsp; &nbsp; Ollama</span></li>
<li class="p1"><span class="Apple-converted-space">&nbsp; &nbsp; &nbsp; &nbsp; DeepSeek</span></li>
</ul>
<p>　　当&nbsp;<strong>AiPlatform&nbsp;</strong>选中了任意一个模型平台，系统会自动从 “<strong>&lt;AiPlatform&gt;Keys”</strong>名称节点下读取相关配置信息。</p>
<p>&nbsp;</p>
<p><strong>第三步：安装 Nuget 依赖包</strong></p>
<p>　　为了能够读取 appsettings.json，我们需要引用一个官方包：Microsoft.Extensions.Configuration.Json，以及 Senparc.AI 的核心模块包：Senparc.AI.Kernel：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">dotnet add package Microsoft.Extensions.Configuration.Json
dotnet add package Senparc.AI.Kernel</span></pre>
</div>
<p>&nbsp;</p>
<p>第四步：配置 Program.cs</p>
<p>　　清除 Program.cs 原有内容，输入启动准备代码：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> Microsoft.Extensions.Configuration;
</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> Microsoft.Extensions.DependencyInjection;
</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> Senparc.AI.Kernel;
</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> Senparc.CO2NET;
</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> Senparc.CO2NET.RegisterServices;

</span><span style="color: rgba(0, 0, 255, 1)">var</span> configBuilder = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> ConfigurationBuilder();
configBuilder.AddJsonFile(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">appsettings.json</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(0, 0, 255, 1)">false</span>, <span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">);
Console.WriteLine(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">完成 appsettings.json 添加</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);

</span><span style="color: rgba(0, 0, 255, 1)">var</span> config =<span style="color: rgba(0, 0, 0, 1)"> configBuilder.Build();
Console.WriteLine(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">完成 ServiceCollection 和 ConfigurationBuilder 初始化</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);

</span><span style="color: rgba(0, 0, 255, 1)">var</span> services = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> ServiceCollection();

services.AddSenparcGlobalServices(config)
        .AddSenparcAI(config);

</span><span style="color: rgba(0, 0, 255, 1)">var</span> serviceProvider =<span style="color: rgba(0, 0, 0, 1)"> services.BuildServiceProvider();

IRegisterService register </span>=<span style="color: rgba(0, 0, 0, 1)"> RegisterService.Start()
              .UseSenparcGlobal()
              .UseSenparcAI();</span></pre>
</div>
<p>　　上述代码是使用 Senparc.AI 的通用启动代码，任何系统都只需要完成一次，重点是 AddSenparcAI() 和 UseSenparcAI() 两个方法，将自动完成所有 Senparc.AI 的相关准备工作（包括大模型信息映射）。</p>
<p>&nbsp;</p>
<p><strong>第五步：编写 AI 代码</strong></p>
<p>　　以对话（Chat）为例，最精简的单轮对话（或直接执行任务），可以在 Program.cs 中继续输入以下代码：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 128, 1)"> 1</span> <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Chat 对话
</span><span style="color: rgba(0, 128, 128, 1)"> 2</span> 
<span style="color: rgba(0, 128, 128, 1)"> 3</span> <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">定义 SemanticAiHandler 实例</span>
<span style="color: rgba(0, 128, 128, 1)"> 4</span> SemanticAiHandler semanticAiHandler = <span style="color: rgba(0, 0, 255, 1)">new</span> SemanticAiHandler(<span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">);
</span><span style="color: rgba(0, 128, 128, 1)"> 5</span> 
<span style="color: rgba(0, 128, 128, 1)"> 6</span> <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">配置模型参数</span>
<span style="color: rgba(0, 128, 128, 1)"> 7</span> <span style="color: rgba(0, 0, 255, 1)">var</span> parameter = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> PromptConfigParameter()
</span><span style="color: rgba(0, 128, 128, 1)"> 8</span> <span style="color: rgba(0, 0, 0, 1)">{
</span><span style="color: rgba(0, 128, 128, 1)"> 9</span>     MaxTokens = <span style="color: rgba(128, 0, 128, 1)">2000</span><span style="color: rgba(0, 0, 0, 1)">,
</span><span style="color: rgba(0, 128, 128, 1)">10</span>     Temperature = <span style="color: rgba(128, 0, 128, 1)">0.7</span><span style="color: rgba(0, 0, 0, 1)">,
</span><span style="color: rgba(0, 128, 128, 1)">11</span>     TopP = <span style="color: rgba(128, 0, 128, 1)">0.5</span><span style="color: rgba(0, 0, 0, 1)">,
</span><span style="color: rgba(0, 128, 128, 1)">12</span> <span style="color: rgba(0, 0, 0, 1)">};
</span><span style="color: rgba(0, 128, 128, 1)">13</span> 
<span style="color: rgba(0, 128, 128, 1)">14</span> <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">获取 IWantToRun 实例</span>
<span style="color: rgba(0, 128, 128, 1)">15</span> <span style="color: rgba(0, 0, 255, 1)">var</span> systemMessage = <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">你是一位专业的AI助手，擅长回答各种问题。请确保你的回答准确且有帮助。</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;
</span><span style="color: rgba(0, 128, 128, 1)">16</span> <span style="color: rgba(0, 0, 255, 1)">var</span> iWantToRun =<span style="color: rgba(0, 0, 0, 1)"> semanticAiHandler.ChatConfig(parameter,
</span><span style="color: rgba(0, 128, 128, 1)">17</span>                                 userId: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Jeffrey</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
</span><span style="color: rgba(0, 128, 128, 1)">18</span>                                 maxHistoryStore: <span style="color: rgba(128, 0, 128, 1)">10</span><span style="color: rgba(0, 0, 0, 1)">,
</span><span style="color: rgba(0, 128, 128, 1)">19</span> <span style="color: rgba(0, 0, 0, 1)">                                chatSystemMessage: systemMessage);
</span><span style="color: rgba(0, 128, 128, 1)">20</span> 
<span style="color: rgba(0, 128, 128, 1)">21</span> <span style="color: rgba(0, 0, 0, 1)">Console.WriteLine();
</span><span style="color: rgba(0, 128, 128, 1)">22</span> Console.WriteLine(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">==== 对话开始 ====</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
</span><span style="color: rgba(0, 128, 128, 1)">23</span> <span style="color: rgba(0, 0, 255, 1)">while</span> (<span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">)
</span><span style="color: rgba(0, 128, 128, 1)">24</span> <span style="color: rgba(0, 0, 0, 1)">{
</span><span style="color: rgba(0, 128, 128, 1)">25</span>     <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">开始对话</span>
<span style="color: rgba(0, 128, 128, 1)">26</span>     Console.WriteLine(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">人类：</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
</span><span style="color: rgba(0, 128, 128, 1)">27</span>     <span style="color: rgba(0, 0, 255, 1)">var</span> inputPrompt = Console.ReadLine() ?? <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">你好</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;
</span><span style="color: rgba(0, 128, 128, 1)">28</span> 
<span style="color: rgba(0, 128, 128, 1)">29</span>     <span style="color: rgba(0, 0, 255, 1)">var</span> result = <span style="color: rgba(0, 0, 255, 1)">await</span><span style="color: rgba(0, 0, 0, 1)"> semanticAiHandler.ChatAsync(iWantToRun, inputPrompt);
</span><span style="color: rgba(0, 128, 128, 1)">30</span> 
<span style="color: rgba(0, 128, 128, 1)">31</span>     Console.WriteLine(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">AI 回答：\n</span><span style="color: rgba(128, 0, 0, 1)">"</span> +<span style="color: rgba(0, 0, 0, 1)"> result.OutputString);
</span><span style="color: rgba(0, 128, 128, 1)">32</span> <span style="color: rgba(0, 0, 0, 1)">    Console.WriteLine();
</span><span style="color: rgba(0, 128, 128, 1)">33</span> }</pre>
</div>
<p>　　可以看到，核心代码是 16 行（定义 IWantToRun 对象）以及 29 行请求模型结果，非常简洁。</p>
<p>&nbsp;</p>
<p><strong>　　运行效果：</strong></p>
<p><img src="https://img2024.cnblogs.com/blog/28384/202508/28384-20250821205436048-1624150031.png" alt="image" width="1008" height="847" loading="lazy" style="display: block; margin-left: auto; margin-right: auto"></p>
<p>&nbsp;</p>
<h2>延伸功能</h2>
<p>　　更多延伸功能，可以参考源码中的示例，注释已经比较完整，相关示例包含：</p>
<ul>
<li>如 Stream（流式）输出</li>
<li>Completion（补全）</li>
<li>RAG / 知识库</li>
<li>向量数据库操作</li>
<li>图片生成（Text to Image）</li>
<li>Planner</li>
<li>Plguin（function-calling 和 MCP）</li>
<li>等等</li>
</ul>
<p>&nbsp;</p>
<h2>进阶小贴士</h2>
<ol>
<li>可以通过&nbsp;<strong>Senparc.AI.</strong><span class="s1"><span class="s1"><strong>Config.SenparcAiSetting</strong> 获取 appsettings.json 中的&nbsp;SenparcAiSetting</span></span><span class="s1">&nbsp;节点的信息。</span></li>
<li><span class="s1"><span class="s1">可以使用&nbsp;</span></span><strong>Senparc.AI.</strong><span class="s1"><strong>Config.SenparcAiSetting.AiPlatform</strong> 可以读取或者设置当前系统默认的模型平台。</span></li>
<li><span class="s1"><span class="s1">如果你想在系统中同时配置和使用多个平台（甚至同一个平台的不同账号或模型配置），可以在 appsettings.json 下 SenparcAiSetting 节点下添加一个 Item 节点，如：<br></span></span>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 128, 1)"> 1</span>     <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Items</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
</span><span style="color: rgba(0, 128, 128, 1)"> 2</span>       <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">AzureDallE3</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
</span><span style="color: rgba(0, 128, 128, 1)"> 3</span>         <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">AiPlatform</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">AzureOpenAI</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
</span><span style="color: rgba(0, 128, 128, 1)"> 4</span>         <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">AzureOpenAIKeys</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
</span><span style="color: rgba(0, 128, 128, 1)"> 5</span>           <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">ApiKey</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&lt;My AzureOpenAI Keys&gt;</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
</span><span style="color: rgba(0, 128, 128, 1)"> 6</span>           <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">AzureEndpoint</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&lt;My AzureOpenAI DallE3 Endpoint&gt;</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
</span><span style="color: rgba(0, 128, 128, 1)"> 7</span>           <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">AzureOpenAIApiVersion</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">2022-12-01</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
</span><span style="color: rgba(0, 128, 128, 1)"> 8</span>           <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">ModelName</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
</span><span style="color: rgba(0, 128, 128, 1)"> 9</span>             <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">TextToImage</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">dall-e-3</span><span style="color: rgba(128, 0, 0, 1)">"</span>
<span style="color: rgba(0, 128, 128, 1)">10</span> <span style="color: rgba(0, 0, 0, 1)">          }
</span><span style="color: rgba(0, 128, 128, 1)">11</span> <span style="color: rgba(0, 0, 0, 1)">        }
</span><span style="color: rgba(0, 128, 128, 1)">12</span> <span style="color: rgba(0, 0, 0, 1)">      },</span><span style="color: rgba(0, 128, 128, 1)">23</span>       <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">OtherModels</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
</span><span style="color: rgba(0, 128, 128, 1)">24</span>         <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">AiPlatform</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">&lt;AiPlatform&gt;</span><span style="color: rgba(128, 0, 0, 1)">"</span>
<span style="color: rgba(0, 128, 128, 1)">25</span>         <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">任意数量的 *Keys 配置</span>
<span style="color: rgba(0, 128, 128, 1)">26</span> <span style="color: rgba(0, 0, 0, 1)">      }
</span><span style="color: rgba(0, 128, 128, 1)">27</span>     }</pre>
</div>
<p>在代码中索引 Key 的方式找到对应配置，如：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">var</span> senparcAiSetting = ((SenparcAiSetting)Senparc.AI.Config.SenparcAiSetting)[<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">AzureDallE3</span><span style="color: rgba(128, 0, 0, 1)">"</span>];<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">获取 AzureDallE3 模型配置</span></pre>
</div>
<p>&nbsp;</p>
</li>
</ol>
<h2>交流群</h2>
<p>　　欢迎加 QQ 群踊跃交流：553198593</p>
<p>　　如果你希望本博客系列深入讲解哪方面的内容，或对上述内容有任何疑问，也欢迎留言！</p>
</div>
<div id="MySignature" role="contentinfo">
    <p>&nbsp;</p>

<p>
转载请注明出处和作者，谢谢！<br>
作者：JeffreySu  /  <a href="https://github.com/JeffreySu/" target="_blank">https://github.com/JeffreySu/</a><br>
博客：<a href="https://szw.cnblogs.com/" target="_blank">https://szw.cnblogs.com/</a><br>
</p>

<!--
<p>&nbsp;</p>
<p>
Senparc官方教程《微信开发深度解析：微信公众号、小程序高效开发秘籍》，耗时2年精心打造的微信开发权威教程，<a href="https://book.weixin.senparc.com/book/link?code=cnblogs-sign" target="_blank">点击这里，购买正版</a>！<br>
<a href="https://book.weixin.senparc.com/book/link?code=cnblogs-sign" target="_blank"><img src="https://images2017.cnblogs.com/blog/28384/201707/28384-20170730224601537-1461862917.png" width="300" alt="
微信开发深度解析：微信公众号、小程序高效开发秘籍"></a><br>

</p><a href="https://book.weixin.senparc.com/book/link?code=cnblogs-sign" target="_blank">
<p>&nbsp;</p></a>


<div style="margin-bottom: 30px">
Senparc 官方微信开发视频教程：《微信公众号+小程序快速开发》，<a href="https://book.weixin.senparc.com/book/videolinknetease?code=sdk-sign" target="_blank">点击这里点击观看</a>。<br>

<a href="https://book.weixin.senparc.com/book/videolinknetease?code=sdk-sign" target="_blank"><img src="https://images2017.cnblogs.com/blog/28384/201802/28384-20180208161432998-278885671.png" width="300" alt="Senparc 官方微信开发视频教程：《微信公众号+小程序快速开发》"></a>

</div>-->
</div>
<div class="clear"></div>

	<div class="postDesc">posted on 
<span id="post-date" data-last-update-days="0.001388888888888889" data-date-updated="2025-08-21 21:59">2025-08-21 21:57</span>&nbsp;
<a href="https://www.cnblogs.com/szw">SZW</a>&nbsp;
阅读(<span id="post_view_count">85</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19051631);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19051631', targetLink: 'https://www.cnblogs.com/szw/p/19051631', title: 'Senparc.AI 系列教程（二）：配置大模型，开始开发应用' })">举报</a>
</div>
