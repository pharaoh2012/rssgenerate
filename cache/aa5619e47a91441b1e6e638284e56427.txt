<!----> <meta itemprop="headline" content="CSS砌体布局：颠覆你认知的最疯狂的CSS最强布局🤡，一行代码解决布局问题！"> <meta itemprop="keywords" content="前端,CSS,JavaScript"> <meta itemprop="datePublished" content="2024-12-21T08:08:15.000Z"> <meta itemprop="image" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-128.png~tplv-t2oaga2asx-image.image"> <div itemprop="author" itemscope="itemscope" itemtype="http://schema.org/Person"><meta itemprop="name" content="Embrace"> <meta itemprop="url" content="https://juejin.cn/user/763493913998601"></div> <div itemprop="publisher" itemscope="itemscope" itemtype="http://schema.org/Organization"><meta itemprop="name" content="掘金"> <div itemprop="logo" itemscope="itemscope" itemtype="https://schema.org/ImageObject"><meta itemprop="url" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-white-180.png~tplv-t2oaga2asx-image.image"> <meta itemprop="width" content="180"> <meta itemprop="height" content="180"></div></div> <h1 class="article-title" data-v-7cdd11fb="">
            CSS砌体布局：颠覆你认知的最疯狂的CSS最强布局🤡，一行代码解决布局问题！
            <!----> <!----></h1> <div class="author-info-block block-hidden" data-v-7cdd11fb=""><div class="author-info-box" data-v-7cdd11fb=""><div class="author-name" data-v-7cdd11fb=""><a href="/user/763493913998601/posts" target="_blank" rel="" class="jj-link username username ellipsis" data-v-65b50b51="" data-v-1800aadb="" data-v-7cdd11fb=""><span class="name" style="max-width:160px;" data-v-65b50b51="" data-v-1800aadb="">
    Embrace
  </span> <!----> <!----> <!----> </a></div> <div class="meta-box" data-v-7cdd11fb=""><time datetime="2024-12-21T08:08:15.000Z" title="Sat Dec 21 2024 08:08:15 GMT+0000 (Coordinated Universal Time)" class="time" data-v-7cdd11fb="">
                    2024-12-21
                  </time> <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="read-icon" data-v-7cdd11fb=""><path d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor" data-v-7cdd11fb=""></path><circle cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor" data-v-7cdd11fb=""></circle></svg> <span class="views-count" data-v-7cdd11fb="">
                    9,963
                  </span> <span class="read-time" data-v-7cdd11fb=""><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" data-v-7cdd11fb=""><rect width="16" height="16" fill="none" data-v-7cdd11fb=""></rect><circle cx="8" cy="8" r="5.65625" stroke="#8A919F" data-v-7cdd11fb=""></circle><path d="M7.69141 5.18652V8.30924H10.8141" stroke="#8A919F" stroke-linecap="round" stroke-linejoin="round" data-v-7cdd11fb=""></path></svg>
                    阅读8分钟
                  </span> <!----></div></div> <div style="flex:1;" data-v-7cdd11fb=""></div> <!----> <!----></div> <!----> <!----> <!----> <div id="article-root" itemprop="articleBody" class="main" data-v-7cdd11fb=""><div class="article-viewer markdown-body result"><h2 data-id="heading-0">前言</h2>
<p>我敢说，这是整个掘金社区绝无仅有的讲解！关注我，将带你一步步颠覆你认识中的css</p>
<blockquote>
<p>如果本文对你有帮助，请在评论区扣个666啥的，如果你不认同，也请大佬们提出您的意见🚀</p>
</blockquote>
<blockquote>
<p>我好知道我写的东西对大家有没有用或者说我可以凭借你们的反馈我好知道大家想要什么，我要去给大家带来什么，以及我能知道文章中哪里有缺陷。这样大家才能进步🌹。</p>
</blockquote>
<p>不要忘了点赞和收藏以及关注，这是对我更新文章最大的动力。</p>
<p>我会持续更新劲爆的内容，颠覆整个掘金社区对css的认知。</p>
<blockquote>
<p>先叠个保护壳：作者才大二能力有限，以下的东西都是自己琢磨的，各位大佬如果发现有不认同的地方，请大家轻点喷🙏</p>
</blockquote>
<h2 data-id="heading-1">正式讲解</h2>
<p>事情起因是这样的，大家在刷抖音，小红书等短视频平台、发现他们的布局是这样的<strong>瀑布流布局</strong>。
<img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/c3ee3be34e774f358097f9402252f08c~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgRW1icmFjZQ==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738636637&amp;x-signature=sF6Z7RUTbIJg3X3sygF%2BdceZnyQ%3D" alt="image.png" loading="lazy">
知道是瀑布流后，怎么做呢？我们第一反应是<code>flex，grid</code>？是的这是大部分人的固态思维</p>
<p>我认为这极为麻烦，因为你甚至还需要用到大量的<code>@meida，javascript</code>来解决细节问题，代码极其冗杂。</p>
<blockquote>
<p>全文的大前提：不考虑图片顺序。</p>
</blockquote>
<p>但是砌体布局使用<code>columns</code>后仅仅一行代码就能完成上述的功能！！🤩，这你还不学起来？</p>
<p>我查阅了许多博客，发现大多数对于使用column仅仅也就是介绍了多列布局，但是！！！！它的作用不仅仅如此，至少在这种不考虑顺序的瀑布流布局下，我认为它是最强的。</p>
<p>砌体布局原理就是使用<code>column</code>将元素分为不同的列，然后元素会自动填充空白的部分。但这还不是最特别的，列不是仅仅基于数量，而是可以根据每件物品的尺寸，自动进行响应式！！amazing！</p>
<h2 data-id="heading-2">Grid</h2>
<p>这里代码我准备了很多图片，他们拥有不同的比例和尺寸</p>
<p>我们先来看grid布局怎么做的。</p>
<pre><code class="hljs language-css" lang="css"><span class="hljs-selector-class">.layout-container</span> {
      <span class="hljs-attribute">display</span>: grid;
      <span class="hljs-attribute">grid-template-columns</span>: <span class="hljs-built_in">repeat</span>(<span class="hljs-number">3</span>, <span class="hljs-number">1</span>fr);
    }
</code></pre>
<p><img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/1ce137c287c048c2b09db7d2ef6a18ad~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgRW1icmFjZQ==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738636637&amp;x-signature=CXgg4L2ncAg%2BRoZGf8b2%2ByTPwq4%3D" alt="image.png" loading="lazy">
缺点很明显，这种方法会将图片强制分为三列，但是中间会出现许多剩余部分，这极为丑陋，你需要通过其他方法来解决这些，这里就不深入说了，毕竟这不是重点。</p>
<h2 data-id="heading-3">Flex</h2>
<p>ok，让我们来看看flex怎么做</p>
<pre><code class="hljs language-css" lang="css"><span class="hljs-selector-tag">img</span> {
      <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;
      <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1em</span>;
    }

    <span class="hljs-selector-class">.layout-container</span> {
      <span class="hljs-attribute">display</span>: flex;
      <span class="hljs-comment">/* 允许换行，但是图像扭曲了 */</span>
      <span class="hljs-attribute">flex-wrap</span>: wrap;
    }
</code></pre>
<p><img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/b307b1ad836944709e16b126179c0489~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgRW1icmFjZQ==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738636637&amp;x-signature=LZp8NhHV%2FgIB%2FJJdbkfVnRZoO6U%3D" alt="image.png" loading="lazy">
我们可以发现图片占满了整个屏幕</p>
<p>修复方法</p>
<pre><code class="hljs language-css" lang="css"><span class="hljs-selector-tag">img</span> {
      <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;
      <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1em</span>;
      <span class="hljs-comment">/* 只需要添加对象修复覆盖即可 */</span>
      <span class="hljs-attribute">max-width</span>: <span class="hljs-number">300px</span>;
      <span class="hljs-attribute">object-fit</span>: cover;
    }

    <span class="hljs-selector-class">.layout-container</span> {
      <span class="hljs-attribute">display</span>: flex;
      <span class="hljs-attribute">flex-wrap</span>: wrap;
    }
</code></pre>
<p><img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/2eedc911c5fb4fca924c85c22203f734~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgRW1icmFjZQ==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738636637&amp;x-signature=Ym3v3U22nTLNC5dUSNXKYfKMRMw%3D" alt="image.png" loading="lazy">
修复后。间隔消失，并且整齐排列，但是发现很多图片缺了一块（比如第一行第三列），这不是我们要的效果，
我们要的是保留图片的原比例，</p>
<h2 data-id="heading-4">砌体布局：columns-visibility！</h2>
<p>重头戏来了，砌体布局！</p>
<p>我们只需要要一行代码便能完美解决这个问题</p>
<p><code>column-count</code></p>
<pre><code class="hljs language-css" lang="css">    <span class="hljs-selector-tag">img</span> {
      <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;
      <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1em</span>;
    }

    <span class="hljs-selector-class">.layout-container</span> {
      <span class="hljs-attribute">column-count</span>: <span class="hljs-number">3</span>;
    }
</code></pre>
<p><img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/7558dfeb0bf54ce0a4aaff8724d5e91c~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgRW1icmFjZQ==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738636637&amp;x-signature=UvaxMB2TvV0AR%2BYsvppUuDGwQGk%3D" alt="image.png" loading="lazy">
是的你没看错，我们仅仅用了这一行代码，便解决了这个问题。<code> column-count: 3</code>:把图片分为三列，在保持图片比例的情况下，又能填充空白部分。</p>
<p>但是细节的大佬就发现了，它不是响应式的，那不炸了吗。
<img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/a2e62a52629b4b038a6107aa60cff6fc~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgRW1icmFjZQ==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738636637&amp;x-signature=N%2FG9xKuQN0wDR7Cd9%2FqJlnY%2BfN4%3D" alt="Recording%202024-12-21%20152457_converted.gif" loading="lazy"></p>
<p>我们用<code>@media</code>就能解决了，你以为我会用吗？😡那岂不是不又要写一堆@media来适配，这违背了我写这篇文章的目的，告诉你，不需要！！！😏一行代码搞定！</p>
<p>我们先看@media怎么实现🚀</p>
<pre><code class="hljs language-css" lang="css">    <span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">max-width</span>: <span class="hljs-number">600px</span>) {
      <span class="hljs-selector-class">.layout-container</span> {
        <span class="hljs-attribute">column-count</span>: <span class="hljs-number">2</span>;
      }
    }
</code></pre>
<p><img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/6bcc2ff13c0a42b7906ebb72f40d4168~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgRW1icmFjZQ==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738636637&amp;x-signature=bMp%2FQlb%2BbKiokms39rKOFMsfWvo%3D" alt="Recording%202024-12-21%20153001_converted.gif" loading="lazy">
可以发现的确解决了响应式的问题。</p>
<p>Now😍！睁开你们的眼睛👀，一行代码写完。</p>
<pre><code class="hljs language-css" lang="css"><span class="hljs-selector-class">.layout-container</span> {
      <span class="hljs-attribute">columns</span>: <span class="hljs-number">300px</span>;
    }
</code></pre>
<p><code>columns: 300px</code> 将列设置为300像素，系统按300像素划分列，自动进行响应式布局，如果下一张图片给它剩的位置不够，那么就会自动到下一行去，并且剩余的空间将会自动被填满。</p>
<p>Perfect！😄这种布局方式简直太爽了。🚀🚀
<img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/c406d820b241453d8e41e51b9441baef~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgRW1icmFjZQ==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738636637&amp;x-signature=ohgENf7GpWh%2Fwb6i46pKih4XiI8%3D" alt="Recording%202024-12-21%20153638_converted.gif" loading="lazy"></p>
<p>嗯哼😄，又有大佬发现了🚀，将浏览器最大化后，图片就会按照300像素划分列，从而一行铺满。</p>
<p><img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/0861cf891139494eb8dd4746de5c9d04~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgRW1icmFjZQ==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738636637&amp;x-signature=2VZPwLudQjaIyQIWAHGnY966Eo8%3D" alt="image.png" loading="lazy"></p>
<p>如果我们既想要响应式效果又想要指定行列呢？🤔（既要又要？哪有这么好的事情）</p>
<p>其实有的🔥，也是一行代码，诸君且看我如何操作。</p>
<pre><code class="hljs language-css" lang="css"><span class="hljs-selector-class">.layout-container</span> { 
      <span class="hljs-attribute">columns</span>: <span class="hljs-number">300px</span> <span class="hljs-number">3</span>;
    } 
</code></pre>
<p><code>columns: 300px 3</code>是简写，表示在按照300像素的基础上，强行按照3列划分。</p>
<p>吼吼吼，发现变成三列了！我们也发现，它依然是响应式的！！amazing！！🤩
<img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/5c2e949e0a954cd39194c2767355a8f8~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgRW1icmFjZQ==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738636637&amp;x-signature=8vFZJzesFXKNZYQ3Neb5IWk95MU%3D" alt="image.png" loading="lazy"></p>
<p><img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/9f0698d3dd64413f8963955de735b0ea~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgRW1icmFjZQ==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738636637&amp;x-signature=tErb5oLpTOo6rDbFEzhtx1D4ix8%3D" alt="Recording%202024-12-23%20070622_converted.gif" loading="lazy"></p>
<h2 data-id="heading-5">缺点</h2>
<p>有缺点吗，当然有</p>
<blockquote>
<p>因为它是从上往下排序，如果我们需要一些动态加载图片的业务，那么新加入的图片将不会加入页面的最低端，不符合我们的业务需求。如果你的网站不需要考虑图片顺序，我个人认为这种方法是完美的。</p>
</blockquote>
<blockquote>
<p>注意，当你在包含太多元素的列表中使用 columns-visibility 时，它会导致布局和渲染计算不断进行，这会使网站卡顿，性能不佳。通常，对于大型列表，程序员不会使用 container-visibility，最流行的两个选项是分页或使用延迟加载。</p>
</blockquote>
<h2 data-id="heading-6">兼容性</h2>
<p>关于columns-visibility的兼容性不用担心，此功能已非常完善，适用于多种设备和浏览器版本。自2017 年 3 月起，该功能已在各种浏览器中可用。</p>
<p>它并非新特性，只是很少人这么用而已</p>
<p>这里我就给大家展示我文中提到的两个属性的兼容性了🚀。</p>
<h3 data-id="heading-7">column-count</h3>
<p><img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/64d4a38b26cf490099fa03dab5a31954~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgRW1icmFjZQ==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738636637&amp;x-signature=1O59PyFu5DpORVRZ0RLAdcN9TgU%3D" alt="Snipaste_2024-12-23_06-05-13.png" loading="lazy"></p>
<p><img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/25648ceab875447eb76616541a6ae719~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgRW1icmFjZQ==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738636637&amp;x-signature=DgUfWilhmgwAJC5y0bL5JX4JpO4%3D" alt="Snipaste_2024-12-23_06-12-10.png" loading="lazy"></p>
<p><img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/81a58297031c46b89b8143660d9124b5~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgRW1icmFjZQ==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738636637&amp;x-signature=EQVHPTOoMznjJcmmnDu%2FIXQM1iU%3D" alt="Snipaste_2024-12-23_06-04-54.png" loading="lazy"></p>
<h3 data-id="heading-8">columns</h3>
<p><img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/39bb5755cfb8488aa09487ed28a69cac~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgRW1icmFjZQ==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738636637&amp;x-signature=fMurYrgKJiU%2FQmVHW7B39FW9tAE%3D" alt="image.png" loading="lazy"></p>
<p><img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/388d39d0ff74479aa4f366b6f574ff25~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgRW1icmFjZQ==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738636637&amp;x-signature=LnLqiJE2CuekasGZsSgHF0BjVY0%3D" alt="Snipaste_2024-12-23_06-17-59.png" loading="lazy"></p>
<p><img src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/ef6b1d0205a941b493fdc8b774e1c2f5~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgRW1icmFjZQ==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1738636637&amp;x-signature=HEYN%2FyPqVwg%2F%2FfhccC0rOpP%2BSbA%3D" alt="Snipaste_2024-12-23_06-18-20.png" loading="lazy"></p>
<h2 data-id="heading-9">总结</h2>
<p>感谢大家的观看，如果对您有帮助的话，请在评论区随便说两句吧，这对作者非常重要。</p>
<p>作者并非把文章当作笔记来写，而是当作教学。大家什么都不说，我不知道大家喜欢看什么js？css？react？后面也不知道更新啥了😭。也不知道自己的文章哪里有缺陷需要改正😭</p>
<blockquote>
<p>已经提交到git仓库，欢迎大家来点star<a href="https://link.juejin.cn?target=https%3A%2F%2Fgitee.com%2Fyu-some%2Fcss-master-css-tips" target="_blank" title="https://gitee.com/yu-some/css-master-css-tips" ref="nofollow noopener noreferrer">CSS-Master，CSS-tips: css黑科技</a></p>
</blockquote>
<blockquote>
<p>作者仅在掘金写文章，如需转载，请先经过作者同意，违者必究😡</p>
</blockquote></div></div>