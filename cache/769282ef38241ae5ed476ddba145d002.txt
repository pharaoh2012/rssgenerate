
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/mua9102/p/18625047" title="发布于 2024-12-23 22:52">
    <span role="heading" aria-level="2">Java代码覆盖率super-jacoco</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="开源项目地址">开源项目地址</h1>
<p><a href="https://gitee.com/didiopensource/super-jacoco" target="_blank" rel="noopener nofollow">https://gitee.com/didiopensource/super-jacoco</a></p>
<h1 id="项目流程">项目流程</h1>
<p><img src="https://img2024.cnblogs.com/blog/1890192/202412/1890192-20241223205958456-724477623.png" alt="image" loading="lazy"></p>
<h1 id="项目架构">项目架构</h1>
<p><img src="https://img2024.cnblogs.com/blog/1890192/202412/1890192-20241223210038813-295008237.png" alt="image" loading="lazy"></p>
<h1 id="部署步骤">部署步骤</h1>
<p><strong><span style="color: rgba(255, 0, 0, 1)">注意：一定要用Linux服务器部署，不要用Windows</span></strong></p>
<h2 id="准备linux服务器环境">准备Linux服务器环境</h2>
<ol>
<li>安装好JDK1.8</li>
<li>安装好git</li>
<li><strong><span style="color: rgba(255, 0, 0, 1)">安装和配置好Maven3.6，或3.6以下</span></strong></li>
<li>安装MySQL数据库（尽量不用8版本，就用5.7、5.8版本）</li>
</ol>
<h2 id="拉取super-jacoco开源项目">拉取super-jacoco开源项目</h2>
<pre><code class="language-bash">git clone https://gitee.com/didiopensource/super-jacoco.git
</code></pre>
<h2 id="初始化mysql">初始化MySQL</h2>
<ol>
<li>建立数据库：super-jacoco</li>
<li>建立数据表：执行 sql/db.sql 文件<br>
<img src="https://img2024.cnblogs.com/blog/1890192/202412/1890192-20241223211135207-620342391.png" alt="image" loading="lazy"></li>
<li>修改 application.properties 文件中的数据库配置</li>
</ol>
<pre><code class="language-properties"># 以下信息需要手动配置
spring.datasource.url=jdbc:mysql://IP:端口/super-jacoco?useUnicode=true&amp;characterEncoding=utf8&amp;verifyServerCertificate=false&amp;useSSL=false
spring.datasource.username=super-jacoco的数据库账号
spring.datasource.password=super-jacoco的数据库密码
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#git username &amp; password
gitlab.username=被测项目的的git账号
gitlab.password=被测项目的的git密码
</code></pre>
<h2 id="编译super-jacoco开源项目">编译super-jacoco开源项目</h2>
<p>生成super-jacoco.jar</p>
<pre><code class="language-bash">mvn package -Dmaven.test.skip=true
</code></pre>
<h2 id="部署super-jacoco">部署super-jacoco</h2>
<ol>
<li>进入super-jacoco项目，把 cli.jar 复制到用户主页</li>
</ol>
<pre><code class="language-bash">cd super-jacoco/jacoco
cp org.jacoco.cli-1.0.2-SNAPSHOT-nodeps.jar ~
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/1890192/202412/1890192-20241223212327767-902582060.png" alt="image" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/1890192/202412/1890192-20241223212539198-2001520682.png" alt="image" loading="lazy"></p>
<ol start="2">
<li>把 runtime.jar 传送到被测项目服务器的 jar 包位置</li>
</ol>
<pre><code class="language-bash">scp org.jacoco.agent-0.8.5-runtime.jar root@被测项目服务器IP:/root/www/xxx/back/
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/1890192/202412/1890192-20241223213040713-119270896.png" alt="image" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/1890192/202412/1890192-20241223213154683-137323771.png" alt="image" loading="lazy"></p>
<ol start="3">
<li>启动super-jacoco</li>
</ol>
<pre><code class="language-bash">nohup java -jar super-jacoco.jar &amp;
</code></pre>
<p>启动后的默认端口号为：8899</p>
<ol start="4">
<li>super-jacoco服务器的防火墙规则自己设置</li>
</ol>
<h2 id="被测项目用-super-jacoco-runtimejar-来启动">被测项目用 super-jacoco-runtime.jar 来启动</h2>
<pre><code class="language-bash">java -javaagent:/root/www/xxx/back/org.jacoco.agent-0.8.5-runtime.jar=includes=*,output=tcpserver,port=18513,address=*,append=true,destfile=/jacoco.exec -jar /root/www/xxx/back/springboot-0.0.1-SNAPSHOT.jar
</code></pre>
<h3 id="附上-jacoco-启动参数">附上 jacoco 启动参数</h3>
<pre><code class="language-bash">-executioindataonly: 仅生成执行数据，不生成报告。

-agentlib: 指定JaCoCo代理库，用于Java程序。

-agentpath: 指定JaCoCo代理库，用于C / C ++程序。

=destfile: 指定覆盖已有的执行数据文件的路径。

=append: 指定追加到现有执行数据文件的路径。

=includes: 指定哪些类的方法应包含在覆盖率分析中，使用逗号分隔。

=excludes: 指定哪些类的方法应排除在覆盖率分析之外，使用逗号分隔。

=classpath: 指定JaCoCo用于查找类文件的类路径。

=classpathfile: 指定包含类路径条目的文件。

=jmxfile: 指定JMX文件的路径，用于远程应用程序。

=output: 指定报告生成的目录。

=report-aggregate: 指定聚合报告的路径。

=dump-on-exit: 在JVM退出时转储执行数据。
</code></pre>
<h1 id="使用覆盖率检测">使用覆盖率检测</h1>
<h2 id="启动覆盖率检测">启动覆盖率检测</h2>
<ol>
<li>准备一个不会重复的，没有使用过的 UUID</li>
<li>被测项目地址</li>
<li>被测项目上一次代码的版本ID</li>
<li>被测项目目前代码的版本ID</li>
<li>被测项目的地址</li>
<li>被测项目的 super-jacoco-runtime.jar 的端口（按照上面的启动参数就是：18513）<br>
<img src="https://img2024.cnblogs.com/blog/1890192/202412/1890192-20241223214236325-76451972.png" alt="image" loading="lazy"></li>
</ol>
<h2 id="去被测项目进行测试测试一段时间后造成足够的代码覆盖">去被测项目进行测试，测试一段时间后，造成足够的代码覆盖</h2>
<h2 id="获取覆盖率收集">获取覆盖率收集</h2>
<p>把启动覆盖率时的 UUID 拿来获取覆盖率</p>
<h3 id="失败的场景">失败的场景</h3>
<ol>
<li>失败了也有日志文件</li>
<li>失败了的日志文件内容可能是空的，这种情况一般就是：下载项目代码后，编译失败了<br>
<img src="https://img2024.cnblogs.com/blog/1890192/202412/1890192-20241223221110956-116211609.png" alt="image" loading="lazy"></li>
</ol>
<h2 id="成功的场景">成功的场景</h2>
<p><img src="https://img2024.cnblogs.com/blog/1890192/202412/1890192-20241223221757125-1562530282.png" alt="image" loading="lazy"></p>
<h1 id="查看覆盖率报告">查看覆盖率报告</h1>
<h2 id="整个java项目">整个Java项目</h2>
<p><img src="https://img2024.cnblogs.com/blog/1890192/202412/1890192-20241223223645945-387646254.png" alt="image" loading="lazy"></p>
<h2 id="java实现类列表">Java实现类列表</h2>
<p><img src="https://img2024.cnblogs.com/blog/1890192/202412/1890192-20241223221946327-602557348.png" alt="image" loading="lazy"></p>
<h2 id="java实现类">Java实现类</h2>
<p><img src="https://img2024.cnblogs.com/blog/1890192/202412/1890192-20241223222050698-119254083.png" alt="image" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/1890192/202412/1890192-20241223222117346-462986486.png" alt="image" loading="lazy"></p>
<h2 id="覆盖分类">覆盖分类</h2>
<p><img src="https://img2024.cnblogs.com/blog/1890192/202412/1890192-20241223224151110-542335021.png" alt="image" loading="lazy"></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.05821789650694444" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2024-12-23 22:53">2024-12-23 22:52</span>&nbsp;
<a href="https://www.cnblogs.com/mua9102">mua~mua~</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18625047" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18625047);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18625047', targetLink: 'https://www.cnblogs.com/mua9102/p/18625047', title: 'Java代码覆盖率super-jacoco' })">举报</a>
</div>
        