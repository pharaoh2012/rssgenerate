
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/vipstone/p/18828905" title="发布于 2025-04-16 16:05">
    <span role="heading" aria-level="2">SpringAI版本更新：向量数据库不可用的解决方案！</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>Spring AI 前两天（4.10 日）更新了 1.0.0-M7 版本后，<strong>原来的 SimpleVectorStore 内存级别的向量数据库就不能用了</strong>，Spring AI 将其全部源码删除了。</p>
<p>此时我们就需要一种成本更低的解决方案来解决这个问题，如何解决呢？我们一起来看。</p>
<h2 id="解决方案redis-向量数据库">解决方案：Redis 向量数据库</h2>
<p>虽然 SimpleVectorStore 不支持了，但 Spring AI 内置了 Redis 或 ES 作为向量数据库的分布式存储中间件，我们可以用他们来进行向量的存储。</p>
<p>而在这两种方案中，显然 Redis 使用成本更低，因此，我们来看如何将向量存储到 Redis 数据库中。</p>
<p>它的具体实现步骤如下。</p>
<h2 id="安装redis-stack">安装Redis-Stack</h2>
<ol>
<li>
<p><strong>下载 Docker Hub</strong>：<img src="https://img2024.cnblogs.com/blog/172074/202504/172074-20250416160456970-2051042110.png" alt="" loading="lazy"></p>
</li>
<li>
<p><strong>安装 redis-stack-server</strong>：使用“docker run -d --name redis-stack-server -p 6379:6379 redis/redis-stack-server”。</p>
</li>
</ol>
<h2 id="添加依赖">添加依赖</h2>
<p>我们使用阿里云百炼平台的嵌入模型 text-embedding-v3 是兼容 OpenAI 的 SDK 的，因此，我们需要添加 OpenAI 和 Redis Vector 依赖：</p>
<pre><code class="language-xml">&lt;dependency&gt;
  &lt;groupId&gt;org.springframework.ai&lt;/groupId&gt;
  &lt;artifactId&gt;spring-ai-starter-vector-store-redis&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.springframework.ai&lt;/groupId&gt;
  &lt;artifactId&gt;spring-ai-starter-model-openai&lt;/artifactId&gt;
&lt;/dependency&gt;
</code></pre>
<h2 id="设置配置信息">设置配置信息</h2>
<p>配置 Redis 连接信息，以及嵌入模型的配置信息：</p>
<pre><code class="language-yaml">spring:
  data:
    redis:
      host: localhost
      port: 6379
  ai:
    vectorstore:
      redis:
        initialize-schema: true
        index-name: custom-index
        prefix: custom-prefix
    openai:
      api-key: ${ALIYUN-AK}
      embedding:
        options:
          model: text-embedding-v3
</code></pre>
<p>阿里云百炼平台支持的向量模型：</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202504/172074-20250416160505823-297927009.png" alt="" loading="lazy"></p>
<h2 id="代码实现">代码实现</h2>
<h3 id="redis-添加向量数据">Redis 添加向量数据</h3>
<pre><code class="language-java">@Autowired
private VectorStore vectorStore;

// 构建数据
List&lt;Document&gt; documents =
List.of(new Document("I like Spring Boot"),
        new Document("I love Java"));
// 添加到向量数据库
vectorStore.add(documents);
</code></pre>
<p>当然，向量数据的数据源可以是文件、图片、音频等资源，这里为了简单演示整体执行流程，使用了更简单直观的文本作为数据源。</p>
<p>VectorStore 提供的常用方法如下：</p>
<ul>
<li><strong>add(List<document> documents)</document></strong> ：添加文档。</li>
<li><strong>delete(List<string> idList)</string></strong> ：按 ID 删除文档。</li>
<li><strong>delete(Filter.Expression filterExpression)</strong> ：按过滤表达式删除文档。</li>
<li><strong>similaritySearch(String query) 和 similaritySearch(SearchRequest request)</strong> ：相似性搜索。</li>
</ul>
<p>执行结果如下：</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202504/172074-20250416160514064-1670154814.png" alt="" loading="lazy"></p>
<h3 id="查询向量数据">查询向量数据</h3>
<pre><code class="language-java">@RestController
@RequestMapping("/vector")
public class VectorController {

    @Resource
    private VectorStore vectorStore;

    @RequestMapping("/find")
    public List find(@RequestParam String query) {
        // 构建搜索请求，设置查询文本和返回的文档数量
        SearchRequest request = SearchRequest.builder()
        .query(query)
        .topK(3)
        .build();
        List&lt;Document&gt; result = vectorStore.similaritySearch(request);
        System.out.println(result);
        return result;
    }
}
</code></pre>
<p>执行结果如下：</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202504/172074-20250416160522671-2076884425.png" alt="" loading="lazy"></p>
<p>从上述结果可以看出，和“java”相似度最高的向量为“I love Java”，相似度评分为 0.77，如果我们 SearchRequest 对象中的 topK 设置为 1 的话，只会查询“I love Java”这条数据，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202504/172074-20250416160529127-1347168477.png" alt="" loading="lazy"></p>
<blockquote>
<p>本文已收录到我的技术小站 <a href="https://www.javacn.site" target="_blank" rel="noopener nofollow">www.javacn.site</a>，其中包含的内容有：Spring AI、并发编程、MySQL、Redis、Spring、Spring MVC、Spring Boot、Spring Cloud、MyBatis、JVM、设计模式、消息队列、场景题等模块。</p>
</blockquote>

</div>
<div id="MySignature" role="contentinfo">
    <div style="text-align: center; color: red">
关注下面二维码，订阅更多精彩内容。
<br>
<img style="margin-left: 0px" src="https://images.cnblogs.com/cnblogs_com/vipstone/848916/o_211225130402_gognzhonghao.jpg">
</div>

<div style="display: none">
    <img src="http://icdn.apigo.cn/gitchat/rabbitmq.png?imageView2/0/w/500/h/400">
</div>
<div style="margin-bottom: 50px; display: none">

<img title="微信打赏" src="http://icdn.apigo.cn/myinfo/wchat-pay.png" alt="微信打赏">
<br>

<div style="display: none">
<span style="display: block; position: absolute; height: 40px; top: 50%; margin-top: -20px">关注公众号（加好友）：</span>

<img style="margin-left: 144px" src="http://icdn.apigo.cn/gongzhonghao2.png?imageView2/0/w/120/h/120">
</div>
<p></p>

<div id="AllanboltSignature">
    <p style="border-top: #e0e0e0 1px dashed; border-right: #e0e0e0 1px dashed; border-bottom: #e0e0e0 1px dashed; border-left: #e0e0e0 1px dashed; padding-top: 10px; padding-right: 10px; padding-bottom: 10px; padding-left: 60px; background: url(&quot;https://images.cnblogs.com/cnblogs_com/lloydsheng/239039/o_copyright.gif&quot;) #e5f1f4 no-repeat 1% 50%; font-family: 微软雅黑; font-size: 11px" id="PSignature">
        <br> 作者：
        <a href="http://vipstone.cnblogs.com/" target="_blank">王磊的博客</a>
        <br> 出处：
        <a href="http://vipstone.cnblogs.com/" target="_blank">http://vipstone.cnblogs.com/</a>
        <br>
    </p>
</div></div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.011452323265046296" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-16 16:06">2025-04-16 16:05</span>&nbsp;
<a href="https://www.cnblogs.com/vipstone">磊哥|www.javacn.site</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18828905);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18828905', targetLink: 'https://www.cnblogs.com/vipstone/p/18828905', title: 'SpringAI版本更新：向量数据库不可用的解决方案！' })">举报</a>
</div>
        