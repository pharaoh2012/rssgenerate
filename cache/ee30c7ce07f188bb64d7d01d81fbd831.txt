
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoxi666/p/18857038" title="发布于 2025-05-01 23:06">
    <span role="heading" aria-level="2">DeepSeek又在节前放大招！</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<div class="Post-RichTextContainer">
<div class="css-1od93p9">
<div class="css-376mun">
<div class="RichText ztext Post-RichText css-1yl6ec1">
<h2 data-first-child="">写在前面</h2>
<p data-pid="ejMnlLWu">事情是这样的，就在五一假期开始前夕，DeepSeek放出了模型DeepSeek-Prover-V2-671B：</p>
<img src="https://picx.zhimg.com/80/v2-c17ba20b679551aa5680452d25c37aab_1440w.webp" width="3502" height="1534" class="origin_image zh-lightbox-thumb lazy" data-caption="" data-size="normal" data-rawwidth="3502" data-rawheight="1534" data-original-token="v2-9f0721054b6a5b36c63ca3f33bf348ce" data-original="https://picx.zhimg.com/v2-c17ba20b679551aa5680452d25c37aab_r.jpg" data-actualsrc="https://picx.zhimg.com/v2-c17ba20b679551aa5680452d25c37aab_1440w.jpg" data-lazy-status="ok">
<p data-pid="5WAItjPo">这是延续了节假日狂飙的传统？</p>
<p><img src="https://img2024.cnblogs.com/blog/609124/202505/609124-20250501230417285-549211703.gif" alt="" width="342" height="185" loading="lazy" style="display: block; margin-left: auto; margin-right: auto"></p>
<div class="GifPlayer css-o0k2vi" data-size="small" data-za-detail-view-path-module="GifItem">
<div class="GifPlayer-icon css-d39tw7">&nbsp;</div>
</div>
<p data-pid="0eDFKzMz">言归正传，我们看看这次放出了哪些核心技术。</p>
<p data-pid="hijrSIzs">最直接的方法是参见技术报告，也在半夜放出来了（真是一群勤奋的家伙啊）。</p>
<img src="https://pica.zhimg.com/80/v2-98ab98c056d5d758e396098fd5b78da8_1440w.webp" width="2974" height="1834" class="origin_image zh-lightbox-thumb lazy" data-caption="" data-size="normal" data-rawwidth="2974" data-rawheight="1834" data-original-token="v2-8495e658fefbabaac744f482ab26b474" data-original="https://pica.zhimg.com/v2-98ab98c056d5d758e396098fd5b78da8_r.jpg" data-actualsrc="https://pica.zhimg.com/v2-98ab98c056d5d758e396098fd5b78da8_1440w.jpg" data-lazy-status="ok">
<blockquote data-pid="vmnea9rJ">链接：<a class=" external" href="https://link.zhihu.com/?target=https%3A//github.com/deepseek-ai/DeepSeek-Prover-V2/blob/main/DeepSeek_Prover_V2.pdf" rel="noopener nofollow" target="_blank" data-za-detail-view-id="1043"><span class="invisible">https://<span class="visible">github.com/deepseek-ai/<span class="invisible">DeepSeek-Prover-V2/blob/main/DeepSeek_Prover_V2.pdf</span></span></span></a>，网络不方便的小伙伴可以关注公众号xiaoxi666后回复“DeepSeek_Prover_V2”获取。</blockquote>
<p data-pid="y4X9njtX">这篇论文到底说了啥呢，先画个大纲总结下：</p>
<img src="https://pic4.zhimg.com/80/v2-13f182d4e1179d3c9cde438a6df171c9_1440w.webp" width="1148" height="1484" class="origin_image zh-lightbox-thumb lazy" data-caption="" data-size="normal" data-rawwidth="1148" data-rawheight="1484" data-original-token="v2-eb0bda96f7b7dbcd424d255e79e37bdc" data-original="https://pic4.zhimg.com/v2-13f182d4e1179d3c9cde438a6df171c9_r.jpg" data-actualsrc="https://pic4.zhimg.com/v2-13f182d4e1179d3c9cde438a6df171c9_1440w.jpg" data-lazy-status="ok">
<p data-pid="7iiVs_Qr">通篇读下来，印象最深刻的就是”形式化数学推理“和”形式化证明“这两个概念，他们两者的结合也是这个模型最大的创新点。</p>
<h2>“非形式数学推理”与“形式化证明”</h2>
<p data-pid="K5a0kYTG">非形式数学推理的英文名为 informal mathematical reasoning，指使用自然语言和直观的逻辑来理解和解释数学概念或证明定理。它依赖于人类的直觉和经验，通常不涉及严格的符号和规则。</p>
<p data-pid="p0PBR_5P">形式化证明的英文名为 formally verified 或者 formal theorem proving，指使用严格的数学符号和逻辑规则来构建和验证数学证明，要求每一步都必须有明确的依据，并且整个证明过程必须是可验证的。现在模型推理引入该方法，称为“形式化数学推理”，英文名为 formal mathematical reasoning。</p>
<p data-pid="SEOMsrmP">两者的区别主要在于表达方式的精确性：</p>
<table data-draft-node="block" data-draft-type="table" data-size="normal" data-row-style="normal">
<tbody>
<tr><th>特点</th><th>非形式化推理</th><th>形式化推理</th></tr>
<tr>
<td>表达方式</td>
<td>自然语言</td>
<td>严格的数学符号和逻辑规则</td>
</tr>
<tr>
<td>精确性</td>
<td>较低，可能包含模糊表述</td>
<td>高，每一步都有明确依据</td>
</tr>
<tr>
<td>适用范围</td>
<td>日常交流、初步探索</td>
<td>严格证明、软件验证</td>
</tr>
<tr>
<td>工具和技术</td>
<td>直觉、经验、自然语言处理</td>
<td>形式化语言、自动定理证明器</td>
</tr>
<tr>
<td>示例</td>
<td>因为三角形内角和为180度，所以这个三角形是直角三角形。</td>
<td>根据欧几里得几何公理，若∠A + ∠B + ∠C = 180°，且∠A = 90°，则该三角形为直角三角形。</td>
</tr>
</tbody>
</table>
<p data-pid="P1wPbl84">在深度学习和人工智能领域，非形式化推理和形式化证明的结合变得越来越重要（尤其数学定理证明时）：</p>
<ul>
<li data-pid="w5RAtKtN">非形式化推理可以帮助模型理解问题的背景和上下文，生成初步的证明思路。</li>
<li data-pid="ckB8H5N6">形式化推理则用于将这些思路转化为严格的数学证明，确保每一步都是正确的。</li>
</ul>
<p data-pid="9NkWpmRs">通过结合这两种方法，可以更有效地解决复杂的数学问题，提高模型的推理能力和证明的准确性。这也是 DeepSeek-Prover-V2 主要发力点。</p>
<p data-pid="rEAmevBv">其实，早在2024年12月20日，就有一篇论文“Formal Mathematical Reasoning: A New Frontier in AI”讨论了形式化数学推理在人工智能领域中的重要性，这篇论文主要围绕4个点进行了研究：</p>
<p data-pid="2MSEOxKQ">1、形式化数学推理的定义：形式化数学推理基于形式系统，如一阶逻辑、依赖类型理论和带有形式规范的计算机程序。这些系统提供了一个环境，可以验证模型的推理并提供自动反馈。</p>
<p data-pid="2ZyL2xPp">2、证明工具的使用：同样是引入了Lean这种用于编写形式证明的函数式编程语言。它适用于编写数学定义、定理和证明，其核心特性是能够自动检查证明的 correctness。</p>
<img src="https://pic2.zhimg.com/80/v2-bbf0c7db4d5fff51b1670e99ca147c2f_1440w.webp" width="1500" height="516" class="origin_image zh-lightbox-thumb lazy" data-caption="" data-size="normal" data-rawwidth="1500" data-rawheight="516" data-original-token="v2-ae11cafdd8d0c6f799fd68f94e3ffecc" data-original="https://pic2.zhimg.com/v2-bbf0c7db4d5fff51b1670e99ca147c2f_r.jpg" data-actualsrc="https://pic2.zhimg.com/v2-bbf0c7db4d5fff51b1670e99ca147c2f_1440w.jpg" data-lazy-status="ok">
<p data-pid="5OGnWljd">3、自动形式化：自动形式化是将非正式数学文本自动转换为形式数学表达式的过程。这可以通过机器学习和深度学习技术实现，如神经机器翻译和自回归语言模型。</p>
<p data-pid="b-TXOsc7">4、神经定理证明：神经定理证明是利用深度学习方法在形式系统中寻找定理证明的启发式方法。常用的方法包括专家迭代、从错误中学习和非正式证明草图的利用。</p>
<img src="https://pic1.zhimg.com/80/v2-c4f33eef7ca4ced135899070b1be29b6_1440w.webp" width="1524" height="672" class="origin_image zh-lightbox-thumb lazy" data-caption="" data-size="normal" data-rawwidth="1524" data-rawheight="672" data-original-token="v2-35f11599f5d878227b428a42d049031b" data-original="https://pic1.zhimg.com/v2-c4f33eef7ca4ced135899070b1be29b6_r.jpg" data-actualsrc="https://pic1.zhimg.com/v2-c4f33eef7ca4ced135899070b1be29b6_1440w.jpg" data-lazy-status="ok">
<p data-pid="v7dKdWLj">其实，在AIGC时代以前，形式化验证的手段常用于安全关键的系统（例如航空航天、高铁动车、核电等），其系统的行为必须是可以预测的，形式化方法能够确保这些系统的行为符合预期，避免死锁、数据竞争等问题。更为具体的描述可参见往期文章：</p>
<div class="RichText-LinkCardContainer"><a class="LinkCard new css-biylet" href="https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/xCgmoOlH27Ft4Z8q5rGagw" target="_blank" data-draft-node="block" data-draft-type="link-card" data-text="有没有一种测试技术，能够确保软件不存在Bug？" data-za-detail-view-id="172" rel="noopener nofollow"><span class="LinkCard-contents"><span class="LinkCard-title two-line">有没有一种测试技术，能够确保软件不存在Bug？：<span class="LinkCard-desc">​mp.weixin.qq.com/s/xCgmoOlH27Ft4Z8q5rGagw</span></span></span></a></div>
<p data-pid="EgB-1g-h"><em>可以预见的是，未来的强人工智能，会朝着越来越严谨的推理方向演进（虽然AGENT、RAG等外挂技术还是当下主流）。引入形式化验证的方法，对于迈向强人工智能之路具有极为重要的意义。</em></p>
<h2>Lean4 与 ADT</h2>
<p data-pid="2YKZiuuq">提到 Lean4，就不得不提一下 ADT，它们有很深的渊源。ADT的全称是 Algebraic Data Types，一般译为“代数数据类型”。ADT 是 Lean4 的核心组成部分，用于定义数据结构、逻辑命题和数学对象，并通过模式匹配和递归机制支持函数定义和证明。</p>
<p data-pid="Iqe8N55w">比如，在Lean4中，可以使用<code>inductive</code>关键字来定义 ADT。例如，定义布尔类型&nbsp;<code>Bool</code>&nbsp;和自然数类型&nbsp;<code>Nat</code>：</p>
<div class="highlight">
<pre><code class="language-lean">inductive Bool where
  | false : Bool
  | true : Bool

inductive Nat where
  | zero : Nat
  | succ (x : Nat) : Nat</code></pre>
</div>
<p data-pid="fXrbDhpW">上述定义分别创建了布尔类型和自然数类型，其中布尔类型有两个构造函数&nbsp;<code>false</code>&nbsp;和&nbsp;<code>true</code>，自然数类型有两个构造函数&nbsp;<code>zero</code>&nbsp;和&nbsp;<code>succ</code>。</p>
<p data-pid="wTLkA-Fy">更为复杂的数学结构和数据模型也可以定义，比如定义一个简单的二叉树结构：</p>
<div class="highlight">
<pre><code class="language-lean">inductive Tree (α : Type) where
  | leaf : Tree α
  | node : Tree α → α → Tree α → Tree α</code></pre>
</div>
<p data-pid="QZkURJFD">上述定义创建了一个参数化的二叉树类型，其中&nbsp;<code>leaf</code>&nbsp;表示空树，<code>node</code>&nbsp;表示一个包含左子树、值和右子树的节点。</p>
<p data-pid="ASvUfcGf">模式匹配功能也不在话下，比如定义一个函数来计算二叉树的大小：</p>
<div class="highlight">
<pre><code class="language-lean">def treeSize {α : Type} : Tree α → Nat
  | leaf =&gt; 0
  | node left _ right =&gt; 1 + treeSize left + treeSize right</code></pre>
</div>
<p data-pid="O0eflFjj">总的来说，<em>Lean4 通过支持 ADT 提供了强大的数据定义和操作能力，这使得它在形式化数学和自动化定理证明中非常有用。另外，Lean4 的强大类型系统和元编程能力进一步巩固了它在这些领域的应用潜力。</em></p>
<p data-pid="1ImY_pg-">最后，可以参考往期文章，其中有一篇推荐文章，结合ADT和代数解空间进行了详细阐述：</p>
<div class="RichText-LinkCardContainer"><a class="LinkCard new css-biylet" href="https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/K53iYcyDcwO4XarkgZo4rg" target="_blank" data-draft-node="block" data-draft-type="link-card" data-text="​推荐一篇DDD+ADT文章" data-za-detail-view-id="172" rel="noopener nofollow"><span class="LinkCard-contents"><span class="LinkCard-title two-line">​推荐一篇DDD+ADT文章<span class="LinkCard-desc">​：mp.weixin.qq.com/s/K53iYcyDcwO4XarkgZo4rg</span></span></span></a></div>
<p>&nbsp;</p>
</div>
</div>
</div>
</div>
</div>
<div id="MySignature" role="contentinfo">
    『注:本文来自博客园“小溪的博客”，若非声明均为原创内容，请勿用于商业用途，转载请注明出处http://www.cnblogs.com/xiaoxi666/』
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="1.1343293321331018" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-01 23:08">2025-05-01 23:06</span>&nbsp;
<a href="https://www.cnblogs.com/xiaoxi666">xiaoxi666</a>&nbsp;
阅读(<span id="post_view_count">321</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18857038);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18857038', targetLink: 'https://www.cnblogs.com/xiaoxi666/p/18857038', title: 'DeepSeek又在节前放大招！' })">举报</a>
</div>
        