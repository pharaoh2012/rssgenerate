
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wangerdan115/p/18929284" title="发布于 2025-06-15 10:52">
    <span role="heading" aria-level="2">鸿蒙运动开发实战：打造专属运动视频播放器</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>##鸿蒙核心技术##运动开发##Media Kit（媒体服务）#</p>
<p>在当今数字化时代，运动健身已经成为许多人生活的一部分。今天我将在应用中添加视频播放器，帮助用户在运动前、运动后更好地进行热身和拉伸。这篇文章将从代码核心点入手，带你一步步了解开发过程中的关键技术和实现细节。</p>
<p><img src="https://img2024.cnblogs.com/blog/2732256/202506/2732256-20250615105226814-1236196832.png" alt="" loading="lazy"></p>
<h2 id="一项目背景与需求分析">一、项目背景与需求分析</h2>
<p>在开发任何应用之前，明确需求是至关重要的。对于运动视频播放器，我们需要考虑以下几个核心功能：</p>
<ol>
<li><strong>视频播放</strong>：支持播放运动相关的视频，如热身、拉伸等。</li>
<li><strong>用户交互</strong>：提供简单的按钮操作，如播放、暂停、继续等。</li>
</ol>
<h2 id="二代码核心点梳理与解析">二、代码核心点梳理与解析</h2>
<p>接下来，我们将通过代码的核心部分，逐步解析实现运动视频播放器的关键步骤。</p>
<h3 id="一页面布局与导航">（一）页面布局与导航</h3>
<p>在鸿蒙开发中，页面布局是用户体验的基础。我们使用了<code>LibNav</code>和<code>LibPage</code>来构建页面的导航和内容布局。以下是代码的核心部分：</p>
<pre><code class="language-typescript">@Component
export struct SportHelperPage {
  @Builder
  pageNavBuilder(){
    LibNav({
      pageTitle: "运动助手"
    }).width("100%")
  }

  @Builder
  pageContentBuilder(){
    Column() {
      Text('运动助手')
        .fontSize(20)
        .fontWeight(FontWeight.Bold)
        .margin({ top: 20 })
      Button('跑前热身')
        .onClick(() =&gt; this.playVideo('https://video.111.com/p/bms/warmup_before_running.mp4'))
        .margin({ top: 10 })
      Button('跑后拉伸')
        .onClick(() =&gt; this.playVideo('https://video.111.com/p/bms/stretch_after_running.mp4'))
        .margin({ top: 10 })
      Button('暂停播放')
        .onClick(() =&gt; {
          this.avPlayer?.pause()
        })
      Button('继续播放')
        .onClick(() =&gt; {
          this.avPlayer?.play()
        })
      XComponent({ type: XComponentType.SURFACE, controller: mXComponentController })
        .width('100%')
        .height(300)
    }
    .padding(20)
    .backgroundColor(Color.White)
  }
}
</code></pre>
<ol>
<li><strong>页面导航</strong>：通过<code>LibNav</code>设置页面标题为“运动助手”，并将其宽度设置为100%，以确保导航栏能够覆盖整个屏幕顶部。</li>
<li><strong>页面内容</strong>：使用<code>Column</code>布局，将文本、按钮和视频播放组件（<code>XComponent</code>）依次排列。每个按钮都绑定了点击事件，用于触发视频播放或控制播放状态。</li>
</ol>
<h3 id="二视频播放器的初始化与控制">（二）视频播放器的初始化与控制</h3>
<p>视频播放是应用的核心功能，我们使用了鸿蒙的<code>media.AVPlayer</code>来实现。以下是初始化和播放控制的代码：</p>
<pre><code class="language-typescript">async initPlay() {
  try {
    this.avPlayer = await media.createAVPlayer();
    this.setAVPlayerCallback(this.avPlayer);
  } catch (error) {
    console.error('初始化视频失败:', error);
  }
}

async playVideo(url: string) {
  try {
    if(this.avPlayer){
      this.avPlayer.url = url;
      this.avPlayer.play();
    }
  } catch (error) {
    console.error('播放视频失败:', error);
  }
}
</code></pre>
<ol>
<li><strong>初始化播放器</strong>：通过<code>media.createAVPlayer()</code>创建一个<code>AVPlayer</code>实例，并注册回调函数来监听播放状态的变化。</li>
<li><strong>播放视频</strong>：通过设置<code>avPlayer.url</code>属性为视频的URL，并调用<code>play()</code>方法开始播放。这里需要注意的是，视频URL必须是有效的，否则会导致播放失败。</li>
</ol>
<h3 id="三状态机回调与错误处理">（三）状态机回调与错误处理</h3>
<p>在视频播放过程中，可能会出现各种状态变化和错误。通过注册回调函数，我们可以更好地管理这些情况：</p>
<pre><code class="language-typescript">setAVPlayerCallback(avPlayer: media.AVPlayer) {
  avPlayer.on('startRenderFrame', () =&gt; {
    console.info(`AVPlayer start render frame`);
  });
  avPlayer.on('seekDone', (seekDoneTime: number) =&gt; {
    console.info(`AVPlayer seek succeeded, seek time is ${seekDoneTime}`);
  });
  avPlayer.on('error', (err: BusinessError) =&gt; {
    console.error(`Invoke avPlayer failed, code is ${err.code}, message is ${err.message}`);
    avPlayer.reset();
  });
  avPlayer.on('stateChange', async (state: string, reason: media.StateChangeReason) =&gt; {
    switch (state) {
      case 'idle':
        avPlayer.release();
        break;
      case 'initialized':
        const id = mXComponentController.getXComponentSurfaceId();
        avPlayer.surfaceId = id;
        avPlayer.prepare();
        break;
      case 'prepared':
        avPlayer.play();
        break;
      case 'paused':
        console.info('AVPlayer state paused called.');
        break;
      case 'completed':
        avPlayer.stop();
        break;
      case 'stopped':
        avPlayer.reset();
        break;
      case 'released':
        console.info('AVPlayer state released called.');
        break;
      default:
        console.info('AVPlayer state unknown called.');
        break;
    }
  });
}
</code></pre>
<ol>
<li><strong>状态回调</strong>：通过监听<code>stateChange</code>事件，我们可以根据不同的状态（如<code>initialized</code>、<code>prepared</code>、<code>playing</code>等）执行相应的操作。例如，在<code>initialized</code>状态时，设置播放画面的<code>surfaceId</code>，并调用<code>prepare()</code>方法准备播放。</li>
<li><strong>错误处理</strong>：通过监听<code>error</code>事件，捕获播放过程中可能出现的错误，并调用<code>reset()</code>方法重置播放器状态。</li>
</ol>
<h2 id="三开发中的注意事项与优化建议">三、开发中的注意事项与优化建议</h2>
<p>在开发过程中，我们需要注意以下几个关键点，以确保应用的稳定性和用户体验：</p>
<ol>
<li><strong>视频URL的有效性</strong>：在调用<code>playVideo()</code>方法时，必须确保传入的URL是有效的。如果URL无效或网络不可用，播放器将无法正常工作。建议在实际开发中，对视频URL进行校验，并提供友好的错误提示。</li>
<li><strong>性能优化</strong>：为了减少视频加载时间，可以考虑在应用启动时预先加载视频资源。此外，合理管理播放器的生命周期，避免在不需要时占用系统资源。</li>
<li><strong>用户体验</strong>：在页面布局中，按钮和文本的排布要简洁明了，避免过于复杂的操作。同时，可以考虑添加进度条、音量控制等功能，进一步提升用户体验。</li>
</ol>
<h2 id="四总结">四、总结</h2>
<p>在实际开发中，开发者可以根据需求进一步扩展功能，例如添加更多运动视频类别、支持离线下载等。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-06-15 10:53">2025-06-15 10:52</span>&nbsp;
<a href="https://www.cnblogs.com/wangerdan115">王二蛋和他的狗</a>&nbsp;
阅读(<span id="post_view_count">26</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18929284);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18929284', targetLink: 'https://www.cnblogs.com/wangerdan115/p/18929284', title: '鸿蒙运动开发实战：打造专属运动视频播放器' })">举报</a>
</div>
        