
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/tongh/p/18706383" title="发布于 2025-02-09 18:01">
    <span role="heading" aria-level="2">ceph 16.2.15(Pacific)编译</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p></p><div class="toc"><div class="toc-container-header">目录</div><ul><li><a href="#获取ceph源码" rel="noopener nofollow">获取ceph源码</a></li><li><a href="#编译" rel="noopener nofollow">编译</a><ul><li><a href="#拉取submodule网络问题" rel="noopener nofollow">拉取submodule网络问题</a></li><li><a href="#安装依赖" rel="noopener nofollow">安装依赖</a></li><li><a href="#do_cmakesh" rel="noopener nofollow">do_cmake.sh</a></li><li><a href="#编译-1" rel="noopener nofollow">编译</a></li><li><a href="#vstart启动" rel="noopener nofollow">vstart启动</a><ul><li><a href="#问题" rel="noopener nofollow">问题</a></li></ul></li></ul></li><li><a href="#编译dashboard" rel="noopener nofollow"><span id="编译dashboard">编译dashboard</span></a><ul><li><a href="#安装nodejs" rel="noopener nofollow">安装nodejs</a><ul><li><a href="#方法一-下载编译好的源码包" rel="noopener nofollow">方法一 下载编译好的源码包</a></li><li><a href="#方法二-nvm安装node推荐" rel="noopener nofollow">方法二 nvm安装node（推荐）</a></li></ul></li><li><a href="#编译nodeenv" rel="noopener nofollow">编译nodeenv</a></li></ul></li><li><a href="#其他" rel="noopener nofollow">其他</a><ul><li><a href="#boost下载慢" rel="noopener nofollow">boost下载慢</a></li></ul></li><li><a href="#总结" rel="noopener nofollow">总结</a></li></ul></div><p></p>
<blockquote>
<p>以下流程在ubuntu22.04 和 openEuler20.03 都实际操作过</p>
</blockquote>
<h1 id="获取ceph源码">获取ceph源码</h1>
<p>从<a href="https://docs.ceph.com/en/latest/releases/" target="_blank" rel="noopener nofollow">https://docs.ceph.com/en/latest/releases/</a>找到pacific版本对应的tag为16.2.15</p>
<p><img src="https://img2024.cnblogs.com/blog/1480358/202502/1480358-20250209175337509-1636731745.png" alt="" loading="lazy"></p>
<pre><code class="language-bash">git clone https://github.com/ceph/ceph.git

# 查看所有tag
git ls-remote --tags origin |grep 16.2.
618f440892089921c3e944a991122ddc44e60516        refs/tags/v16.2.15^{}

# 根据git log的commit找到pacifc的release tag为v16.2.15
commit 618f440892089921c3e944a991122ddc44e60516 (HEAD -&gt; ceph-pacific-learning, tag: v16.2.15, tag: ls, origin/ceph-pacific-learning)
Author: Ceph Release Team &lt;ceph-maintainers@ceph.io&gt;
Date:   Mon Feb 26 19:21:09 2024 +0000

    16.2.15
    
    Signed-off-by: Ceph Release Team &lt;ceph-maintainers@ceph.io&gt;
# 或者 git show v16.2.15，可以确认即可


# 切换到pacific的release tag
git checkout v16.2.15

# 这个tag是一个快照，不可修改，所以创建我们自己的分支
git checkout -b ceph-pacific-learning
</code></pre>
<h1 id="编译">编译</h1>
<h2 id="拉取submodule网络问题">拉取submodule网络问题</h2>
<p>执行命令<code>git submodule update --init --recursive --progress</code>更新子模块</p>
<p>如果子模块拉取失败：</p>
<ul>
<li>方法一：这个地址会记录最新国内可用的github镜像地址，<a href="https://fcp7.com/github-mirror-daily-updates.html" target="_blank" rel="noopener nofollow">https://fcp7.com/github-mirror-daily-updates.html</a>，修改ceph顶层目录下的.gitmodule，例如对于<code>[submodule "src/erasure-code/jerasure/gf-complete"]</code>，将<code>url = https://github.com/ceph/gf-complete.git</code>部分替换为镜像的地址如下：</li>
</ul>
<pre><code class="language-bash">[submodule "ceph-object-corpus"]
	path = ceph-object-corpus
	url = https://gitclone.com/ceph/ceph-object-corpus.git
[submodule "src/civetweb"]
	path = src/civetweb
	url = https://gitclone.com/ceph/civetweb
[submodule "src/erasure-code/jerasure/jerasure"]
	path = src/erasure-code/jerasure/jerasure
	url = https://gitclone.com/ceph/jerasure.git
	branch = v2-ceph
[submodule "src/erasure-code/jerasure/gf-complete"]
	path = src/erasure-code/jerasure/gf-complete
	url = https://gitclone.com/ceph/gf-complete.git
	branch = v3-ceph
[submodule "src/rocksdb"]
	path = src/rocksdb
	url = https://gitclone.com/ceph/rocksdb
	ignore = dirty
[submodule "ceph-erasure-code-corpus"]
	path = ceph-erasure-code-corpus
	url = https://gitclone.com/ceph/ceph-erasure-code-corpus.git
</code></pre>
<p>执行<code>git submodule sync --recursive</code>更新git拉取的地址，再次执行<code>git submodule update --init --recursive --progress</code></p>
<ul>
<li>方法二：如果方法一中的镜像源没有地址，根据拉取失败的提示<code>fatal: clone of 'https://github.com/spdk/dpdk.git' into submodule path '/data/ceph-learning/src/spdk/dpdk' failed</code>，手动多拉取几次<code>git clone https://github.com/spdk/dpdk.git /data/ceph-learning/src/spdk/dpdk --progress</code>，或者将https换成git执行<code>git clone git://github.com/spdk/dpdk.git /data/ceph-learning/src/spdk/dpdk --progress</code></li>
<li>方法三：那种方式上网，解决99%的编译问题</li>
</ul>
<h2 id="安装依赖">安装依赖</h2>
<pre><code class="language-bash">./install-deps.sh
</code></pre>
<p>如果是openEuler系统</p>
<pre><code class="language-bash">index 7e137d687f1..b22d45f409d 100755
--- a/install-deps.sh
+++ b/install-deps.sh
@@ -410,7 +410,7 @@ else
        $SUDO env DEBIAN_FRONTEND=noninteractive apt-get -y remove ceph-build-deps
        if [ "$control" != "debian/control" ] ; then rm $control; fi
         ;;
-    centos|fedora|rhel|ol|virtuozzo)
+    centos|fedora|rhel|ol|virtuozzo|openEuler) # 修改这里
         builddepcmd="dnf -y builddep --allowerasing"
         echo "Using dnf to install dependencies"
         case "$ID" in
</code></pre>
<h2 id="do_cmakesh">do_cmake.sh</h2>
<ol>
<li><code>cmake -LH</code>可以看到cmake可用参数和描述信息，例如</li>
</ol>
<pre><code class="language-bash">// ceph-mgr is enabled
WITH_MGR:BOOL=ON

// Build the mgr/dashboard frontend using `npm`
WITH_MGR_DASHBOARD_FRONTEND:BOOL=ON

// build OCF-compliant cluster resource agent
WITH_OCF:BOOL=OFF
</code></pre>
<p>dashboard依赖node、ng的一堆包，系统版本不同依赖问题也不同，编译会很麻烦，如果用不到它可以关掉：</p>
<pre><code class="language-bash">./do_cmake.sh -DWITH_MGR_DASHBOARD_FRONTEND=OFF
</code></pre>
<p>如果需要dashboard，直接执行<code>./do_cmake.sh</code>后，到build目录下，按照下面的<a href="#%E7%BC%96%E8%AF%91dashboard" rel="noopener nofollow">编译dashboard</a>配置后，再回来执行make</p>
<h2 id="编译-1">编译</h2>
<p>执行<code>./do_cmake.sh</code>后会在ceph源码顶层目录下生成一个build目录</p>
<pre><code class="language-bash">cd build
make -j16
</code></pre>
<blockquote>
<p>Tips：make过程中也会下载一些软件包，没有那种方式上网可能会导致超时失败，失败后可以继续<code>make -j16</code>增量编译</p>
</blockquote>
<h2 id="vstart启动">vstart启动</h2>
<p>要使用vstart启动ceph，还需要编译相关环境，在build目录下</p>
<pre><code class="language-bash">make vstart
</code></pre>
<pre><code class="language-bash">MON=1 OSD=2 MGR=1 RGW=1 NFS=1 ../src/vstart.sh -d -n -x
</code></pre>
<h3 id="问题">问题</h3>
<ol>
<li>无法访问dashboard，<code>ceph -s</code>输出<code>Module 'dashboard' has failed: No module named 'routes'</code>，缺python包<code>pip3 install routes</code>即可</li>
<li>启动cephfs可能会失败缺包，手动安装</li>
</ol>
<pre><code class="language-bash">Requirements
------------

The following packages are required to enable CephFS and RGW exports with nfs-ganesha:

-  ``nfs-ganesha``, ``nfs-ganesha-ceph``, ``nfs-ganesha-rados-grace`` and
   ``nfs-ganesha-rados-urls`` packages (version 3.3 and above)

Ganesha Configuration Hierarchy
</code></pre>
<h1 id="编译dashboard"><span id="编译dashboard">编译dashboard</span></h1>
<blockquote>
<p>如果使用-DWITH_MGR_DASHBOARD_FRONTEND=OFF关了dashboard的话可以忽略这个</p>
</blockquote>
<h2 id="安装nodejs">安装nodejs</h2>
<h3 id="方法一-下载编译好的源码包">方法一 下载编译好的源码包</h3>
<pre><code class="language-bash">wget https://nodejs.org/dist/v16.14.2/node-v16.14.2-linux-x64.tar.xz
xz -d node-v16.14.2-linux-x64.tar.xz
tar -xvf node-v16.14.2-linux-x64.tar
 
mkdir /usr/local/soft
mv node-v16.14.2-linux-x64 /usr/local/soft

ln -s /usr/local/soft/node-v16.14.2-linux-x64/bin/node /usr/local/bin/node
ln -s /usr/local/soft/node-v16.14.2-linux-x64/bin/npm /usr/local/bin/npm

npm config set registry https://registry.npmmirror.com
npm install -g @angular/cli@16.2.0
ln -s /usr/local/soft/node-v16.14.2-linux-x64/lib/node_modules/@angular/cli/bin/ng.js /usr/local/bin/ng
</code></pre>
<h3 id="方法二-nvm安装node推荐">方法二 nvm安装node（推荐）</h3>
<pre><code class="language-bash"># 复制脚本到主机
https://github.com/nvm-sh/nvm/blob/master/install.sh

bash install.sh
# 重新打开终端
nvm ls-remote --lts

nvm install v16.14.2
npm -g install @angular/cli@16.2.10
</code></pre>
<h2 id="编译nodeenv">编译nodeenv</h2>
<p>旧版本的ceph编译dashboard会有nodejs和angular/cli版本冲突的问题</p>
<pre><code class="language-bash"># /data/ceph-learning换成自己的ceph源码顶层目录
cd /data/ceph-learning/src/pybind/mgr/dashboard &amp;&amp; vim CMakeLists.txt

# 修改 COMMAND ${mgr-dashboard-nodeenv-dir}/bin/nodeenv --verbose ${node_mirror_opt} -p --node=12.18.2
# 为 COMMAND ${mgr-dashboard-nodeenv-dir}/bin/nodeenv --verbose ${node_mirror_opt} -p --node=16.14.2

cd /data/ceph-learning/build

root@yielde:/data/ceph-learning/build# make mgr-dashboard-nodeenv

Installing collected packages: nodeenv
Successfully installed nodeenv-1.9.1
 * Install prebuilt node (16.14.2) ..... done.
 * Appending data to /data/ceph-learning/build/src/pybind/mgr/dashboard/node-env/bin/activate
 * Appending data to /data/ceph-learning/build/src/pybind/mgr/dashboard/node-env/bin/activate.fish
Built target mgr-dashboard-nodeenv
</code></pre>
<h1 id="其他">其他</h1>
<h2 id="boost下载慢">boost下载慢</h2>
<p>生成build后，可以先下载好 <a href="https://download.ceph.com/qa/boost_1_73_0.tar.bz2" target="_blank" rel="noopener nofollow">https://download.ceph.com/qa/boost_1_73_0.tar.bz2</a>，放到/data/ceph-learning/build/boost/src目录下</p>
<pre><code class="language-bash">root@yielde:/data/ceph-learning/build/boost/src# ls -lh
total 105M
drwxr-xr-x 2 root root 4.0K Feb  9 14:38 Boost
-rw-r--r-- 1 root root 105M Feb  9 15:27 boost_1_73_0.tar.bz2
drwxr-xr-x 2 root root 4.0K Feb  9 14:55 Boost-stamp
</code></pre>
<h1 id="总结">总结</h1>
<p>其实棘手的问题就两个，一是网络方面众所周知的问题访问git和其他一些仓库会超时失败，二是前端相关的nodejs组件等版本问题导致编译失败。要耐心查看报错，修改CmakeList.txt或Makefile、手动下载相关软件包到目录，一步一步解决。</p>
<p>附一个大佬写的vscode+clangd的调试环境配置，我还没尝试：</p>
<p><a href="https://xingyys.tech/%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95ceph/" target="_blank" rel="noopener nofollow">编译调试 ceph v16.2.10</a></p>

</div>
<div id="MySignature" role="contentinfo">
    <h3>望各位大佬指出错误！</h3>
<h3><a href="https://www.cnblogs.com/tongh/">不断学习更新，转载请注明出处</a></h3>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.008849184930555556" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-09 18:01">2025-02-09 18:01</span>&nbsp;
<a href="https://www.cnblogs.com/tongh">佟晖</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18706383" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18706383);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18706383', targetLink: 'https://www.cnblogs.com/tongh/p/18706383', title: 'ceph 16.2.15(Pacific)编译' })">举报</a>
</div>
        