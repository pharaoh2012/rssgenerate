
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wang_yb/p/18674709" title="发布于 2025-01-16 11:37">
    <span role="heading" aria-level="2">manim边做边学--缩放变换</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>使用 <code>Manim</code> 进行动画创作时，<strong>缩放变换</strong>是一项强大且实用的功能。</p>
<p>当我们处理复杂的科学模型可视化、数学原理演示时，缩放变换可以帮助我们在不改变元素位置关系的基础上，突出关键信息，引导观众聚焦于特定的细节。</p>
<p>比如在数学教学动画中，通过对几何图形的缩放，可以清晰地展示图形的比例变化与性质特征。</p>
<p>本篇将介绍<code>Manim</code>中的两个用于<strong>缩放变换</strong>的类：</p>
<ol>
<li><code>ScaleInPlace</code>：用于原地的缩放强调，侧重于对象大小的改变而位置不变</li>
<li><code>ShrinkToCenter</code>：侧重于将对象向屏幕中心收缩直至消失，适用于场景转换、元素移除等</li>
</ol>
<h1 id="1-动画概述">1. 动画概述</h1>
<h2 id="11-scaleinplace">1.1. ScaleInPlace</h2>
<p>当你想要强调某个对象的放大或缩小效果，同时保持该对象在原位置进行缩放操作时，可以使用 <code>ScaleInPlace</code>。</p>
<p>例如，在讲解数学公式的推导过程中，需要突出显示某个公式的一部分，你可以将这部分进行原地缩放，以吸引观众的注意力。</p>
<p>它也适用于一些元素的局部放大展示，使观众能更清楚地看到细节。</p>
<p>该类实现的是原地缩放效果，对象的中心点不会发生位移，仅在大小上进行缩放。</p>
<p>可以通过调整缩放比例来控制缩放的程度，能够灵活地将对象放大或缩小到所需的尺寸。</p>
<p>它的参数主要有：</p>
<table>
<thead>
<tr>
<th><strong>参数名称</strong></th>
<th><strong>类型</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>mobject</td>
<td>Mobject</td>
<td>要进行缩放操作的对象</td>
</tr>
<tr>
<td>scale_factor</td>
<td>float</td>
<td>缩放比例因子</td>
</tr>
</tbody>
</table>
<h2 id="12-shrinktocenter">1.2. ShrinkToCenter</h2>
<p><code>ShrinkToCenter</code>适合用于物体消失时的动画效果，它能让对象从当前大小逐渐缩小直至消失在屏幕的中心位置。</p>
<p>例如，在展示一个元素被移除或销毁的过程中，<code>ShrinkToCenter</code> 可以生动地表现出该元素被 “收纳” 或 “吸收” 到屏幕中心的效果。</p>
<p>对于一些具有层级关系的元素，如果想要表示下层元素被上层元素吸收或覆盖时，也可以使用 <code>ShrinkToCenter</code> 让下层元素平滑地收缩到中心，模拟这种层级覆盖的视觉感受。</p>
<p>该类的特点是对象在收缩过程中向屏幕中心收缩，给人一种被 “吸进” 屏幕中心的视觉效果。</p>
<p>它的动画过程是渐进的，会逐渐缩小对象，直到对象完全消失或达到最小尺寸（可根据配置），这个过程的视觉效果可以根据持续时间和缩放速度的设置而有所不同。</p>
<p>它的参数主要有：</p>
<table>
<thead>
<tr>
<th><strong>参数名称</strong></th>
<th><strong>类型</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>mobject</td>
<td>Mobject</td>
<td>要进行向中心收缩操作的对象</td>
</tr>
</tbody>
</table>
<h1 id="2-使用示例">2. 使用示例</h1>
<p><code>ScaleInPlace</code>和<code>ShrinkToCenter</code>使用起来比较简单直观，也没有什么复杂的参数。</p>
<p>下面的示例主要演示在哪些实际的场景中可以使用这两个类。</p>
<h2 id="21-原子核的展示">2.1. 原子核的展示</h2>
<p>这个示例创建了一个代表原子核的蓝色圆形。</p>
<p>先将其显示，随后使用 <code>ScaleInPlace</code> 动画将其放大 3 倍，以此突出原子核，帮助观众更清晰地关注重点内容。</p>
<pre><code class="language-python">nucleus = Circle(
    radius=0.5,
    fill_opacity=1,
    color=BLUE,
)
self.play(Create(nucleus))
self.wait()
# 放大原子核，使其更加突出
self.play(ScaleInPlace(nucleus, 3))
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/83005/202501/83005-20250116113649465-1681027993.gif" alt="" loading="lazy"></p>
<h2 id="22-logo的展示">2.2. Logo的展示</h2>
<p>这个示例针对公司 <code>logo</code> 展示场景，通过 <code>ImageMobject</code> 加载 <code>logo</code> 并设为 <code>0.5</code> 倍初始大小后淡入。</p>
<p>等待 1 秒，利用 <code>ScaleInPlace</code> 动画将 <code>logo</code> 放大 <code>3</code> 倍，从而在开场时吸引观众目光。</p>
<pre><code class="language-python">logo = ImageMobject("./common/亚原logo.jpg")
logo.scale(0.5)  # 初始缩放比例
self.play(FadeIn(logo))
self.wait()
# 放大 logo 以吸引观众的注意力
self.play(ScaleInPlace(logo, 3))
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/83005/202501/83005-20250116113649406-1855237358.gif" alt="" loading="lazy"></p>
<h2 id="23-游戏中的生命值">2.3. 游戏中的生命值</h2>
<p>这个示例演示在游戏结束的情境下，创建红色正方形代表生命值方块。</p>
<p>先显示出来，1 秒后使用 <code>ShrinkToCenter</code> 动画使其收缩至中心消失，模拟了生命值损失的效果。</p>
<pre><code class="language-python">life_block = Square(
    side_length=2,
    fill_opacity=0.6,
    color=RED,
)
self.play(Create(life_block))
self.wait()
# 让生命值方块收缩到中心消失，模拟失去生命值的效果
self.play(ShrinkToCenter(life_block))
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/83005/202501/83005-20250116113649408-321095678.gif" alt="" loading="lazy"></p>
<h2 id="24-提示消息的消失">2.4. 提示消息的消失</h2>
<p>这个示例演示了信息提示场景，先创建白色文本作为提示信息并写出。</p>
<p>等待 2 秒后，运用 <code>ShrinkToCenter</code> 动画让文本收缩至中心消失，实现了提示信息自然消失的动画效果。</p>
<pre><code class="language-python">s = "这个一个提示信息"
info_text = Text(
    f"{s} !",
    t2g={s: [BLUE, GREEN, YELLOW]},
)
self.play(Write(info_text))
self.wait()
# 使提示文本收缩至中心消失
self.play(ShrinkToCenter(info_text))
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/83005/202501/83005-20250116113649442-1572539327.gif" alt="" loading="lazy"></p>
<h1 id="3-附件">3. 附件</h1>
<p>文中的代码只是关键部分的截取，完整的代码共享在网盘中（<code>scale.py</code>），</p>
<p>下载地址: <a href="https://url11.ctfile.com/d/45455611-64751047-a5be65?p=6872" target="_blank" rel="noopener nofollow">完整代码</a> (访问密码: 6872)</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.02805759142476852" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-16 11:37">2025-01-16 11:37</span>&nbsp;
<a href="https://www.cnblogs.com/wang_yb">wang_yb</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18674709" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18674709);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18674709', targetLink: 'https://www.cnblogs.com/wang_yb/p/18674709', title: 'manim边做边学--缩放变换' })">举报</a>
</div>
        