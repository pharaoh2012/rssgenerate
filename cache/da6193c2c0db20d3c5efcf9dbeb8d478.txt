
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/youlanjihua/p/18944508" title="发布于 2025-06-23 15:52">
    <span role="heading" aria-level="2">详解HarmonyOS NEXT仓颉开发语言中的全局弹窗</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p data-id="p124945a-TNT38by6">之前分享过仓颉开发语言中的自定义弹窗，那一次的自定义弹窗需要在对应页面先初始化再进行弹出，不是很方便。今天分享一下不依赖页面的全局弹窗。</p>
<p data-id="p124945a-WbniJHcG">仓颉提供了全局弹窗模块prompt_action，使用之前先将它导入：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>import ohos.prompt_action.*</code></pre>
</div>
<p data-id="p124945a-DIFVAsqj">该模块提供了三种预设好的弹窗形式，第一种是简单的文字提示，可以设置弹窗内容，弹窗持续时间、弹窗模式等属性，使用方式如下：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>PromptAction.showToast(message: '这是一个弹窗', duration: 4000, bottom: "80vp", showMode: ToastShowMode.Default)</code></pre>
</div>
<p data-id="p124945a-jvQXSwPF">你可以在任意页面任何地方随时调用，非常方便。看一下效果：</p>
<p><img data-type="block" data-src="https://dl-harmonyos.51cto.com/images/202506/e207646625ccd90eac8017cf27d10e113f0484.png" class="lazyload"></p>
<p data-id="p124945a-cKDFlq8K">第二种是对话弹窗，内容有标题、内容和按钮的提示弹窗，比上一种弹窗内容丰富了些，适用于大多数场景，使用方式如下：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>let buttons: Array&lt;ButtonInfo&gt; = [
  ButtonInfo("确认", Color.RED),
  ButtonInfo("取消", Color.BLACK)
]

PromptAction.showDialog(title: "标题", message: "删除不可取消，确认删除？", buttons: buttons, callback: { err: Option&lt;AsyncError&gt;, i: Option&lt;Int32&gt; =&gt;
  
  })</code></pre>
</div>
<p data-id="p124945a-IC4JfOnP">弹窗效果图如下：</p>
<p><img data-type="block" data-src="https://dl-harmonyos.51cto.com/images/202506/d93310d29cb74a6011a38163a6981beb68adb4.png" class="lazyload"></p>
<p data-id="p124945a-PMB7HFJm">第三种是菜单弹窗，支持传入1到6个按钮，使用方式和对话框类似：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>let buttons: Array&lt;ButtonInfo&gt; = [
  ButtonInfo("选项1", Color.BLACK),
  ButtonInfo("选项2", Color.BLACK)
]
PromptAction.showActionMenu(title: "标题", buttons: buttons, callback: { err: Option&lt;AsyncError&gt;, i: Option&lt;Int32&gt; =&gt;
  
  })</code></pre>
</div>
<p data-id="p124945a-m2uXS32u">效果图如下：</p>
<p><img data-type="block" data-src="https://dl-harmonyos.51cto.com/images/202506/93a3f4149e660515a9d344473ff36992162bde.png" class="lazyload"></p>
<p data-id="p124945a-auRnN2zG">如果这三种弹窗都不能满足你的要求，PromptAction还支持设置自定义内容，它会返回弹窗的id，我们可以根据id来关闭弹窗，具体使用方式如下：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>@State var customdialogId:Int32 = 0

@Builder
func CustomDialog() {
    Column(10) {
        Image(@r(app.media.startIcon))
        .width(50)
        .height(50)
        Text("这是自定义弹窗")
        .height(50.vp)
        Button("确定")
        .onClick({
            =&gt; PromptAction.closeCustomDialog(customdialogId)
        })
    }
    .margin(10.vp)
}

PromptAction.openCustomDialog(CustomDialogOptions(builder: bind(this.CustomDialog, this)),{ id =&gt;
            customdialogId = id
            })</code></pre>
</div>
<p data-id="p838747a-ivG5eeyg">&nbsp;</p>
<p><img data-type="block" data-src="https://dl-harmonyos.51cto.com/images/202506/99bbdcb23b30c4244c00455f465c81858fc088.png" class="lazyload"></p>
<p data-id="p124945a-fIpDNNRe">以上就是仓颉语言中全局弹窗的相关内容，感谢阅读。##HarmonyOS语言##仓颉##购物#</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-06-23 15:53">2025-06-23 15:52</span>&nbsp;
<a href="https://www.cnblogs.com/youlanjihua">幽蓝计划</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18944508);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18944508', targetLink: 'https://www.cnblogs.com/youlanjihua/p/18944508', title: '详解HarmonyOS NEXT仓颉开发语言中的全局弹窗' })">举报</a>
</div>
        