
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/zhongcx/p/18786652" title="发布于 2025-03-22 15:56">
    <span role="heading" aria-level="2">鸿蒙NEXT开发案例：程序员计算器</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<img src="https://img2024.cnblogs.com/blog/468667/202503/468667-20250322152257904-1741707717.gif" alt="">
<p>【环境准备】</p>
<p>• 操作系统：Windows 10</p>
<p>• 开发工具：DevEco Studio 5.0.1 Release&nbsp;Build Version: 5.0.5.306</p>
<p>• 目标设备：华为Mate60 Pro</p>
<p>• 开发语言：ArkTS</p>
<p>• 框架：ArkUI</p>
<p>• API版本：API 13</p>
<p>【项目背景与价值】</p>
<p>在程序员日常开发中，常常需要进行复杂的数学运算（如三角函数、复数计算、幂运算等），但传统计算器存在以下痛点：</p>
<p>1、表达式支持有限：多数不支持括号嵌套或多函数组合<br>2、科学函数分散：需要多次点击查找功能按钮<br>本项目基于鸿蒙NEXT的Web组件能力，结合JavaScript的eval函数，打造支持任意数学表达式的专业计算器。典型使用场景：</p>
<div class="cnblogs_Highlighter">
<pre class="brush:javascript;gutter:true;">// 复数运算
Math.sqrt(-4) * 2 → 4i
// 三角函数组合
Math.sin(Math.PI/2) + Math.cos(0) → 2
// 复杂表达式
(2+3)*Math.pow(2,5)/Math.sqrt(9) → 53.333
</pre>
</div>
<p>【技术实现方案】</p>
<p>1、系统架构设计</p>
<p>采用三层架构模式：<br>表现层：ArkUI构建可视化界面<br>逻辑层：Web组件执行JavaScript计算<br>通信层：JavaScriptProxy实现双向通信</p>
<p>2、关键技术选型</p>
<p><img src="https://img2024.cnblogs.com/blog/468667/202503/468667-20250322153222005-96226.png" alt="" loading="lazy"></p>
<p>【核心代码解析】</p>
<p>1、通信桥接实现</p>
<div class="cnblogs_Highlighter">
<pre class="brush:javascript;gutter:true;">// 计算服务类
class CalculatorService {
  // 结果回调方法
  postResult = (result: string) =&gt; {
    this.context.eventHub.emit('formulaEvaluated', result);
  }
}

// Web组件配置
Web({
  src: $rawfile('eval.html'),
  controller: this.webController
})
.javaScriptProxy({
  name: "harmonyBridge",
  object: this.calculatorService,
  methodList: ['postResult']
})
</pre>
</div>
<p>实现要点：<br>使用javaScriptProxy建立双向通道<br>通过命名空间harmonyBridge暴露原生方法</p>
<p>2、表达式计算流程</p>
<div class="cnblogs_Highlighter">
<pre class="brush:javascript;gutter:true;">&lt;!-- eval.html --&gt;
&lt;script&gt;
    function evaluateExpression(expr) {
        try {
            const result = eval(expr);
            harmonyBridge.postResult(String(result));
        } catch (e) {
            harmonyBridge.postResult(`错误: ${e.message}`);
        }
    }
&lt;/script&gt;
</pre>
</div>
<p>调用</p>
<div class="cnblogs_Highlighter">
<pre class="brush:javascript;gutter:true;">// 点击计算按钮时
this.webController.runJavaScript(`evaluateExpression('${this.formulaInput}')`);
</pre>
</div>
<p>安全机制：</p>
<p>try-catch包裹eval执行<br>错误信息统一处理<br>结果强制转换为字符串</p>
<p>3、输入优化设计</p>
<div class="cnblogs_Highlighter">
<pre class="brush:javascript;gutter:true;">// 智能插入推荐表达式
Text(' Math.sin() ')
  .onClick(() =&gt; {
    const pos = this.inputController.getCaretOffset().index;
    this.formulaInput = 
      this.formulaInput.slice(0, pos) + 
      ' Math.sin() ' + 
      this.formulaInput.slice(pos);
  })
</pre>
</div>
<p>交互亮点：</p>
<p>保留函数参数占位符()<br>自动维护光标位置</p>
<p>【总结】</p>
<p>本方案创新性地利用鸿蒙Web组件解决了ArkTS无法直接执行动态表达式的难题，主要优势体现在：</p>
<p>功能强大：完整支持JavaScript数学库<br>体验优秀：开发者友好的输入体验<br>扩展灵活：模块化架构设计</p>
<p>完整代码已开源：https://gitee.com/zhong-congxu/calculator20250322</p>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.5124133405138889" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-22 15:57">2025-03-22 15:56</span>&nbsp;
<a href="https://www.cnblogs.com/zhongcx">zhongcx</a>&nbsp;
阅读(<span id="post_view_count">103</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18786652" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18786652);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18786652', targetLink: 'https://www.cnblogs.com/zhongcx/p/18786652', title: '鸿蒙NEXT开发案例：程序员计算器' })">举报</a>
</div>
        