
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/hyxj/p/18906603" title="发布于 2025-06-01 23:22">
    <span role="heading" aria-level="2">QMediaPlayer+QVideoWidget+QAudioOutput实现一个简单视频播放器-Qt6.8</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        <img src="https://img2024.cnblogs.com/blog/3412317/202506/3412317-20250601232206572-179413121.png" alt="QMediaPlayer+QVideoWidget+QAudioOutput实现一个简单视频播放器-Qt6.8" class="desc_img">
        使用QMediaPlayer+QVideoWidget+QAudioOutput实现一个简单视频播放器-Qt6.8
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>此篇是我在观看<a href="https://www.cnblogs.com/seedoubleu/p/15665408.html" target="_blank">使用nginx搭建音视频点播服务器 - seedoubleu - 博客园</a>后,想着使用qt widget写的一个简单播放器</p>
<p>完成nginx搭建音视频点播服务器的话,我推荐使用ffplay进行验证.再推荐一个视频<a href="https://www.bilibili.com/video/BV1a1421k7Eo?spm_id_from=333.788.videopod.episodes&amp;vd_source=b0eea03428e9cfdb88b44ab08c9ab5f8" target="_blank" rel="noopener nofollow">【音视频】FFmpeg音视频入门到精通+实战课_哔哩哔哩_bilibili</a></p>
<p>同时推荐一个好用的视频下载工具(支持bilibili视频下载)<a href="https://github.com/KurtBestor/Hitomi-Downloader" target="_blank" rel="noopener nofollow">KurtBestor/Hitomi-Downloader: 🍰 Desktop utility to download images/videos/music/text from various websites, and more.</a></p>
<p>下图是最终写出来的界面(一共就俩界面文件,一个是displayVideo播放视频窗口,一个是videocontrolbar的视频控制栏(详细代码查看<a href="https://github.com/haoyouxiaoju/my_learnt/tree/main/DisplayVideo" target="_blank" rel="noopener nofollow">my_learnt/DisplayVideo at main · haoyouxiaoju/my_learnt</a>)</p>
<ul>
<li>如果有其他不懂的地方可以私信我,看到的话会回复</li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/3412317/202506/3412317-20250601231503842-1940511917.png" alt="" loading="lazy"></p>
<p>其中controlbar简单的使用designer拖拽出来!<br>
<img src="https://img2024.cnblogs.com/blog/3412317/202506/3412317-20250601231522462-1075369555.png" alt="" loading="lazy"></p>
<p>这里只写一些注意事项:</p>
<p>我使用的是qt6.8 同时项目也是cmake项目</p>
<ul>
<li>在使用qrc管理资源时,你可能会发现QFile没法找到qrc管理的文件这时候你得在cmakeLists.txt中查看</li>
</ul>
<pre><code># 启用 Qt 资源支持
set(CMAKE_AUTORCC ON)  # 必须开启(否则qrc文件无法参与编译)
</code></pre>
<ul>
<li>QVideoWidget是一个特殊的渲染widget,需要设置一下鼠标穿透</li>
</ul>
<pre><code>setAttribute(Qt::WA_TransparentForMouseEvents, true);
</code></pre>
<ul>
<li>同时使用过程中发现视频开头会黑屏</li>
</ul>
<pre><code>//写这个的原因是以为视频开头会黑屏,如果直接设置player的position为0不能解决
//通过尝试,设置105刚刚好
//可能跟视频的关键帧有关吧
QTimer* timer = new QTimer;
connect(timer, &amp;QTimer::timeout, [=]() {
	qDebug() &lt;&lt; "Media status:" &lt;&lt; player-&gt;mediaStatus();
	qDebug() &lt;&lt; "是否支持seek:" &lt;&lt; player-&gt;isSeekable(); // 此时再检查
	if (player-&gt;isSeekable() == true) {
		player-&gt;setPosition(105);
		qDebug() &lt;&lt; "durantion" &lt;&lt; player-&gt;duration();
		timer-&gt;stop();
        timer-&gt;deleteLater();
	}
	});
timer-&gt;start(1000); // 每 100ms 检查一次 
</code></pre>
<ul>
<li>这里的话是因为v_widget和controlBar没有挂靠在DisplayVideo,是popup所以在移动和resize DisplayVideo的时候要重新设置v_widget和controlBar,提示一下如果构造函数中new出来的widget没有挂靠在其他widget的话记得在析构函数中delete</li>
</ul>
<pre><code>void DisplayVideo::resizeEvent(QResizeEvent * event)
{
    QWidget::resizeEvent(event);
    v_widget-&gt;resize(event-&gt;size());
	bar-&gt;resize(QSize(event-&gt;size().width(), bar-&gt;height()));
    QPoint point = v_widget-&gt;mapToGlobal(QPoint(0, 0));
	bar-&gt;move(point.x(), point.y() + v_widget-&gt;height() - bar-&gt;height());
}

void DisplayVideo::moveEvent(QMoveEvent* event)
{
    QWidget::moveEvent(event);
    //if (bar-&gt;isVisible()) {
		bar-&gt;move(event-&gt;pos().x(), event-&gt;pos().y() + v_widget-&gt;height() - bar-&gt;height());
    //}
}
</code></pre>
<ul>
<li>设置视频播放速度使用QCombobox,在点击combobox时出现异常,controlbar会hide所以添加了事件过滤</li>
</ul>
<pre><code>// controlBar的构造函数添加
ui.comboBox-&gt;installEventFilter(this);

bool VideoControlBar::eventFilter(QObject* obj, QEvent* event)
{
	if (obj == ui.comboBox &amp;&amp; event-&gt;type() == QEvent::MouseButtonPress) {
		QMouseEvent* mouseEvent = static_cast&lt;QMouseEvent*&gt;(event);
		if (mouseEvent-&gt;button() == Qt::LeftButton) {
			// 阻止事件继续传播
			event-&gt;accept();
			ui.comboBox-&gt;showPopup();
			return true;
		}
	}
	return QWidget::eventFilter(obj, event);
}
</code></pre>
<ul>
<li>我现在还没找到解决方法一个问题就是设置background-color:rgba没有效果,如果你知道怎么解决,请告诉我</li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/3412317/202506/3412317-20250601231534540-1525795773.png" alt="" loading="lazy"></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.03871221396296296" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-06-01 23:22">2025-06-01 23:22</span>&nbsp;
<a href="https://www.cnblogs.com/hyxj">haoyouxiaoju</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18906603);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18906603', targetLink: 'https://www.cnblogs.com/hyxj/p/18906603', title: 'QMediaPlayer+QVideoWidget+QAudioOutput实现一个简单视频播放器-Qt6.8' })">举报</a>
</div>
        