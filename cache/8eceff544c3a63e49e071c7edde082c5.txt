
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/rainbond/p/18904881" title="发布于 2025-05-30 21:03">
    <span role="heading" aria-level="2">鲲鹏Arm+麒麟V10，国产化信创 K8s 离线部署保姆级教程</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>Rainbond V6 国产化部署教程，针对鲲鹏 CPU + 麒麟 V10 的离线环境，手把手教你从环境准备到应用上线，所有依赖包提前打包好，步骤写成<strong>傻瓜式</strong>操作指南。别说技术团队了，照着文档一步步来，让你领导来都能独立完成部署。</p>
<h2 id="一环境规划">一、环境规划</h2>
<p>准备至少两台机器。</p>
<table>
<thead>
<tr>
<th>架构</th>
<th>OS</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>Arm64</td>
<td>任意，Mac 也可以</td>
<td>下载离线包</td>
</tr>
<tr>
<td>Arm64</td>
<td>麒麟 V10</td>
<td>单机部署 K8s 和 Rainbond</td>
</tr>
</tbody>
</table>
<p><img src="https://static.goodrain.com/wechat/kunpeng-kylin-offline-deploy/1.png" alt="" loading="lazy"></p>
<h2 id="二准备离线包">二、准备离线包</h2>
<h3 id="21-准备-rke2-离线包k8s">2.1 准备 RKE2 离线包（K8s）</h3>
<p>下载 RKE2 <code>v1.30.4</code> 离线安装包。</p>
<pre><code class="language-bash">wget https://pkg.rainbond.com/rke2/v1.30.4+rke2r1/rke2-images-linux-arm64.tar
wget https://pkg.rainbond.com/rke2/v1.30.4+rke2r1/rke2.linux-arm64.tar.gz
wget https://pkg.rainbond.com/rke2/v1.30.4+rke2r1/sha256sum-arm64.txt
wget https://rancher-mirror.rancher.cn/rke2/install.sh
</code></pre>
<h3 id="22-准备-helm-离线包">2.2 准备 Helm 离线包</h3>
<p>下载 Helm 二进制离线包。</p>
<pre><code class="language-bash">wget https://get.helm.sh/helm-v3.18.1-linux-arm64.tar.gz
</code></pre>
<h3 id="23-准备-rainbond-离线包">2.3 准备 Rainbond 离线包</h3>
<p>使用脚本下载 Rainbond 离线镜像。</p>
<pre><code class="language-bash">cat &gt;download_rbd_images.sh &lt;&lt;'EOF'
#!/bin/bash

IMAGE_DOMAIN=registry.cn-hangzhou.aliyuncs.com
IMAGE_NAMESPACE=goodrain
VERSION=v6.3.0-release

image_list="${IMAGE_DOMAIN}/${IMAGE_NAMESPACE}/rainbond:${VERSION}
${IMAGE_DOMAIN}/${IMAGE_NAMESPACE}/rbd-chaos:${VERSION}
${IMAGE_DOMAIN}/${IMAGE_NAMESPACE}/rbd-mq:${VERSION}
${IMAGE_DOMAIN}/${IMAGE_NAMESPACE}/rainbond-operator:${VERSION}
${IMAGE_DOMAIN}/${IMAGE_NAMESPACE}/rbd-worker:${VERSION}
${IMAGE_DOMAIN}/${IMAGE_NAMESPACE}/rbd-api:${VERSION}
${IMAGE_DOMAIN}/${IMAGE_NAMESPACE}/rbd-init-probe:${VERSION}
${IMAGE_DOMAIN}/${IMAGE_NAMESPACE}/rbd-monitor:v2.20.0
${IMAGE_DOMAIN}/${IMAGE_NAMESPACE}/apisix-ingress-controller:v1.8.3
${IMAGE_DOMAIN}/${IMAGE_NAMESPACE}/apisix:3.9.1-debian
${IMAGE_DOMAIN}/${IMAGE_NAMESPACE}/local-path-provisioner:v0.0.30
${IMAGE_DOMAIN}/${IMAGE_NAMESPACE}/minio:RELEASE.2023-10-24T04-42-36Z
${IMAGE_DOMAIN}/${IMAGE_NAMESPACE}/rbd-db:8.0.19
${IMAGE_DOMAIN}/${IMAGE_NAMESPACE}/registry:2.6.2
${IMAGE_DOMAIN}/${IMAGE_NAMESPACE}/alpine:latest"

for image in ${image_list}; do
    docker pull "${image}"
done

docker save -o rainbond-offline-images.tar ${image_list}
EOF
</code></pre>
<p>获取 Rainbond Helm Chart 包。</p>
<pre><code class="language-bash">git clone -b main --depth=1 https://github.com/goodrain/rainbond-chart.git
</code></pre>
<h2 id="三离线部署准备">三、离线部署准备</h2>
<p>以下操作在离线的麒麟 V10 服务器上执行。</p>
<h3 id="31-导入离线包">3.1 导入离线包</h3>
<p>导入上述准备的离线包。</p>
<p><img src="https://static.goodrain.com/wechat/kunpeng-kylin-offline-deploy/2.png" alt="" loading="lazy"></p>
<h3 id="32-安装-helm-命令">3.2 安装 Helm 命令</h3>
<p>解压离线包并将二进制移动到可执行目录。</p>
<pre><code class="language-bash">tar zxvf helm-v3.18.1-linux-arm64.tar.gz &amp;&amp; cp linux-arm64/helm /usr/local/bin
</code></pre>
<h2 id="四离线部署-k8srke2-方式">四、离线部署 K8s（RKE2 方式）</h2>
<h3 id="41-配置-rke2-参数">4.1 配置 RKE2 参数</h3>
<ol>
<li>创建 RKE2 配置文件目录。</li>
</ol>
<pre><code class="language-bash">mkdir -p /etc/rancher/rke2/config.yaml.d
</code></pre>
<ol start="2">
<li>配置 RKE2 参数，需禁用默认 Ingress 这会与 Rainbond 网关冲突。</li>
</ol>
<pre><code class="language-bash">cat &gt;/etc/rancher/rke2/config.yaml.d/00-rbd.yaml &lt;&lt;EOL
disable:
- rke2-ingress-nginx
system-default-registry: registry.cn-hangzhou.aliyuncs.com
EOL
</code></pre>
<ol start="3">
<li>配置私有镜像仓库，<code>goodrain.me </code>是 Rainbond 默认安装的私有镜像仓库域名。</li>
</ol>
<pre><code class="language-bash">cat &gt;/etc/rancher/rke2/registries.yaml &lt;&lt;EOL
mirrors:
  "goodrain.me":
    endpoint:
      - "https://goodrain.me"
configs:
  "goodrain.me":
    auth:
      username: admin
      password: admin1234
    tls:
      insecure_skip_verify: true
EOL
</code></pre>
<h3 id="42-安装-rke2k8s-集群">4.2 安装 RKE2（K8s 集群）</h3>
<ol>
<li>将 RKE2 离线镜像包放到指定目录，启动时它会自动加载离线镜像包。</li>
</ol>
<pre><code class="language-bash">mkdir -p /var/lib/rancher/rke2/agent/images
cp /root/artifacts-rke2/rke2-images* /var/lib/rancher/rke2/agent/images
# 同时将 Rainbond 离线镜像包也放入该目录
cp /root/rainbond-offline-images.tar /var/lib/rancher/rke2/agent/images
</code></pre>
<ol start="2">
<li>准备安装目录。</li>
</ol>
<pre><code class="language-bash">mkdir /root/artifacts-rke2
</code></pre>
<ol start="3">
<li>将 <code>rke2、rke2-images、sha256sum</code> 移动到一个目录中，如下所示：</li>
</ol>
<pre><code class="language-bash">mv install.sh rke2* sha256sum* /root/artifacts-rke2
cd /root/artifacts-rke2
</code></pre>
<ol start="4">
<li>执行安装命令。</li>
</ol>
<pre><code class="language-bash">INSTALL_RKE2_ARTIFACT_PATH=/root/artifacts-rke2 sh install.sh
</code></pre>
<ol start="5">
<li>启动 RKE2 服务。</li>
</ol>
<pre><code class="language-bash">systemctl enable rke2-server.service &amp;&amp; systemctl start --no-block rke2-server.service
</code></pre>
<ol start="6">
<li>查看启动日志，大概需要 5-10 分钟才能完全启动。</li>
</ol>
<pre><code class="language-bash">journalctl -fu rke2-server
</code></pre>
<h3 id="43-配置-kubectlk8s-命令行工具">4.3 配置 Kubectl（K8s 命令行工具）</h3>
<ol>
<li>配置 Kubectl 访问。</li>
</ol>
<pre><code class="language-bash">mkdir /root/.kube
cp /etc/rancher/rke2/rke2.yaml /root/.kube/config
cp /var/lib/rancher/rke2/bin/kubectl /usr/local/bin
</code></pre>
<ol start="2">
<li>验证 K8s 集群状态。</li>
</ol>
<pre><code class="language-bash">kubectl get node
kubectl get pod -n kube-system
</code></pre>
<p><img src="https://static.goodrain.com/wechat/kunpeng-kylin-offline-deploy/3.png" alt="" loading="lazy"></p>
<h2 id="五离线部署-rainbond-v6">五、离线部署 Rainbond V6</h2>
<h3 id="51-配置-rainbond-安装参数">5.1 配置 Rainbond 安装参数</h3>
<ol>
<li>创建 Helm <code>values.yaml</code> 配置文件。</li>
</ol>
<pre><code class="language-bash">cat &gt;values.yaml &lt;&lt;EOL
Cluster:
  #集群入口IP，网关节点的公网IP或者内网IP，或者网关节点之上的负载均衡
  gatewayIngressIPs: 192.168.0.100

  nodesForGateway:
  # k8s节点外网IP，没外网IP填写内网IP
  - externalIP: 192.168.0.100
  # k8s节点内网IP
    internalIP: 192.168.0.100
  # k8s节点名称，通过 kubectl get node 获取
    name: ecs-c893
# - More nodes for gateway
  nodesForChaos:
  # k8s节点名称
  - name: ecs-c893
# - More nodes for chaos
  containerdRuntimePath: /var/run/k3s/containerd  # containerd.sock文件路径
Component:
  rbd_app_ui:
    env:
    - name: DISABLE_DEFAULT_APP_MARKET # 禁用默认在线开源应用商店
      value: "true"
EOL
</code></pre>
<h3 id="52-离线安装-rainbond">5.2 离线安装 Rainbond</h3>
<ol>
<li>执行命令离线安装 Rainbond。</li>
</ol>
<pre><code class="language-bash">helm install rainbond ./rainbond-chart --create-namespace -n rbd-system -f values.yaml
</code></pre>
<ol start="2">
<li>执行完安装命令后，在集群中执行以下命令查看安装状态。</li>
</ol>
<pre><code class="language-bash">watch kubectl get pod -n rbd-system
</code></pre>
<ol start="3">
<li>当名称包含 <code>rbd-app-ui</code> 的 Pod 为 Running 状态时即安装成功。如下所示，Pod <code>rbd-app-ui-678979c995-94kzb</code> 为 Running 状态时，表示 Rainbond 安装成功。</li>
</ol>
<p><img src="https://static.goodrain.com/wechat/kunpeng-kylin-offline-deploy/4.png" alt="" loading="lazy"></p>
<blockquote>
<p>如果你需要在离线环境下使用 Rainbond 的源码构建功能，你需要额外下载离线源码构建的离线包，请阅读 <a href="https://www.rainbond.com/docs/installation/offline" target="_blank" rel="noopener nofollow">Rainbond 离线环境下使用源码构建文档</a>。</p>
</blockquote>
<h2 id="六部署验证">六、部署验证</h2>
<h3 id="61-访问-rainbond-验证">6.1 访问 Rainbond 验证</h3>
<ol>
<li>
<p>使用 <code>gatewayIngressIPs</code> 配置的 IP 地址访问 Rainbond，例如: <code>http://192.168.0.100:7070</code>。</p>
</li>
<li>
<p>填写 Rainbond 注册信息并登录 Rainbond。</p>
</li>
<li>
<p>查看集群信息。</p>
</li>
</ol>
<p><img src="https://static.goodrain.com/wechat/kunpeng-kylin-offline-deploy/5.png" alt="" loading="lazy"></p>
<h3 id="62-快速部署测试应用">6.2 快速部署测试应用</h3>
<p>以 Nginx 为例，在工作空间 -&gt; 容器，通过 Nginx 镜像部署个应用。如下：</p>
<p><img src="https://static.goodrain.com/wechat/kunpeng-kylin-offline-deploy/6.png" alt="" loading="lazy"></p>
<h2 id="最后">最后</h2>
<p>按照本指南操作，即使是非技术背景的管理者也能独立完成国产化容器平台的落地。接下来，通过 Rainbond 图形化界面，无需编写代码即可将企业应用轻松迁移至 Rainbond。</p>
<ul>
<li>官网：<a href="https://www.rainbond.com" target="_blank" rel="noopener nofollow">https://www.rainbond.com</a></li>
<li>Github：<a href="https://github.com/goodrain/rainbond" target="_blank" rel="noopener nofollow">https://github.com/goodrain/rainbond</a></li>
</ul>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="1.382404926863426" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-30 21:03">2025-05-30 21:03</span>&nbsp;
<a href="https://www.cnblogs.com/rainbond">Rainbond开源</a>&nbsp;
阅读(<span id="post_view_count">136</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18904881);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18904881', targetLink: 'https://www.cnblogs.com/rainbond/p/18904881', title: '鲲鹏Arm+麒麟V10，国产化信创 K8s 离线部署保姆级教程' })">举报</a>
</div>
        