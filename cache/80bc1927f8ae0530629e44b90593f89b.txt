
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/gmmy/p/19056491" title="发布于 2025-08-25 10:50">
    <span role="heading" aria-level="2">2025年顶级AI模型html游戏设计大比拼，到底谁才是编码王者？</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>面对这样一道问题，我选择了gpt-5-thinking、gemini-2.5-pro、grok4、claude sonnet 4、deepseek-v3.1-思考模式、kimi-k2、Qwen3-235B-A22B-2507-思考模式以及Qwen3-Coder进行同台竞技，提示词使用了统一的模板：</p>
<div class="cnblogs_code">
<pre>生成一个html版本的20*20标准贪食蛇，使用常见的算法自动寻路（需要考虑多种算法混合让AI尽可能的得高分），启动即可看到效果(吃掉1个食物得1分，在右上角展示分数，游戏结束后自动停止并展示分数即可，着重寻路部分的算法设计，使用requestAnimationFrame执行蛇的移动。</pre>
</div>
<p>下面是各个AI的表现，首先是使用了A*+bfs的gpt-5-thinking，最终分数是40分：</p>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/198579/202508/198579-20250825100902224-1500590536.png" class="lazyload"></p>
<p>&nbsp;接下来是gemini-2.5-pro，由于aistudio不能运行网页，所以是下载到本地打开到浏览器执行的，可以看到gemini-2.5-pro很鸡贼的使用了环形回路来吃子，虽然理论上可以吃到最多子，但是时间成本太高（运行了半天才2分）。</p>
<div>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/198579/202508/198579-20250825101336537-2007056961.png" class="lazyload"></p>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/198579/202508/198579-20250825101447225-509907178.png" class="lazyload"></p>
<p>&nbsp;第三个是grok4，grok4最简洁，没有输出任何说明，只有代码。我把代码拿到后问了其他AI，它的算法主要还是A*，最终止步于79分</p>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/198579/202508/198579-20250825101716400-78302714.png" class="lazyload"></p>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/198579/202508/198579-20250825101929547-359175227.png" class="lazyload"></p>
<p>&nbsp;第四个是claude sonnet 4，也是A*+哈密顿路径，最终止步52分。</p>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/198579/202508/198579-20250825102028662-53275194.png" class="lazyload"></p>
<p>&nbsp;接下来上场的是deepseek-v3.1-思考模式，它同样使用了BFS，但是偶发性的每次初始化刷新会出现2个食物（这在其他几个AI的代码里没有出现过，算BUG），最终的分53</p>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/198579/202508/198579-20250825102915709-93932163.png" class="lazyload"></p>
<p>接着是kimi-k2，由于它的代码有点错乱（尝试两次均如此），遂我自行粘贴到html单页运行如下结果，它也是A*+哈密顿+贪心，最终得分2分。</p>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/198579/202508/198579-20250825102556086-1442551124.png" class="lazyload"></p>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/198579/202508/198579-20250825102947321-1320435495.png" class="lazyload"></p>
<p>然后是Qwen3-235B-A22B-2507-思考模式，同样的以BFS作为主要手段，另外它也有一个BUG就是第20列格子被遮挡了没有展示完全，最终得分80分：</p>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/198579/202508/198579-20250825104944110-1878758727.png" class="lazyload"></p>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/198579/202508/198579-20250825103050521-325444952.png" class="lazyload"></p>
<p>最后压轴的是Qwen3-Coder，它也主要采用了A*，最终得分67分：</p>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/198579/202508/198579-20250825104247466-284839913.png" class="lazyload"></p>
<p><img alt="image" loading="lazy" data-src="https://img2024.cnblogs.com/blog/198579/202508/198579-20250825103337466-554853608.png" class="lazyload"></p>
<p>&nbsp;以上内容均为单次提示词输出（kimi由于第二次输出的格式混乱故采用的第一次输出的内容自行拼接），所有运行的html代码也仅为单次运行结果。不排除大模型本身输出不确定性和游戏本身的随机性，结果仅供娱乐！！！</p>
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-08-25 10:50">2025-08-25 10:50</span>&nbsp;
<a href="https://www.cnblogs.com/gmmy">a1010</a>&nbsp;
阅读(<span id="post_view_count">130</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19056491);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19056491', targetLink: 'https://www.cnblogs.com/gmmy/p/19056491', title: '2025年顶级AI模型html游戏设计大比拼，到底谁才是编码王者？' })">举报</a>
</div>
        