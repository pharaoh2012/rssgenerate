
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/yeyunfei/p/18972476" title="发布于 2025-07-08 10:40">
    <span role="heading" aria-level="2">使用three.js，实现微信3D小游戏系列教程，框架篇（一）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        本文介绍了基于Three.js的三维导航路径算法实现方案，重点阐述了三维A*算法的核心逻辑与可视化方法。通过Node3D类构建三维节点模型，结合26方向邻居搜索和包含高度维度的启发式函数，实现了跨楼层路径规划与动态避障功能，最终实现了医院园区的3D导航功能
    </div>
<div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<strong>引言</strong>
<p class="marklang-paragraph">　　在三维图形和游戏开发领域，three.js 作为一个基于 WebGL 的 JavaScript 库，提供了强大的功能来创建和显示动画化的 3D 计算机图形。它使得开发者能够轻松地在网页上构建复杂的 3D 场景和互动游戏。本文将作为一系列教程的第一课，介绍如何基于 three.js 引擎架构，开始实现一个简单的 3D 小游戏。</p>
<p class="marklang-paragraph">闲话少叙，亮个相吧！</p>
<p class="marklang-paragraph"><strong>一、代码结构说明</strong></p>
<p class="marklang-paragraph">程序目录图：</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/800616/202507/800616-20250706183934334-1270349312.png" class="lazyload"></p>
<p class="marklang-paragraph">主程序主要分为配置、入口、库、模型、多线程库、主代码以及资源。</p>
<p class="marklang-paragraph">其中 game.json;project.config.json;project.private.config.json;这三个文件是微信小程序游戏的配置文件</p>
<p class="marklang-paragraph">主入口在game.js中。</p>
<p class="marklang-paragraph">workers是js多线程的文件放在这里面，主要用来计算敌人位移攻击的一些算法。</p>
<p class="marklang-paragraph">units放了一些通用方法 数学计算等</p>
<p class="marklang-paragraph">models放了模型文件，包括主角模型，敌人模型 ，地图等</p>
<p class="marklang-paragraph">js是主要实现游戏的代码文件</p>
<p class="marklang-paragraph">images以及audio是资源文件库</p>
<p class="marklang-paragraph">二、效果展示与框架</p>
<p class="marklang-paragraph">2.1、游戏启动，初始画面</p>
<p><img alt="" width="885" height="425" loading="lazy" data-src="https://img2024.cnblogs.com/blog/800616/202507/800616-20250706184853498-49624077.png" class="lazyload"></p>
<p>主角站在门口，等待控制闯关。敌人会自动寻向主角</p>
<p>初始化入口：game.js</p>
<p>　　　　//引入微信库小程序文件</p>
<div>
<div>　　　　import&nbsp;'./js/libs/weapp-adapter'</div>
<div>　　　　import&nbsp;'./js/libs/symbol'</div>
<div>　　　　//引入自定义主入口</div>
<div>　　　　import&nbsp;game3d&nbsp;from&nbsp;'./js/Main'</div>
</div>
<p>　　　　//创建main中game3d类的游戏对象</p>
<div>　　　　var&nbsp;mygame=new&nbsp;game3d()</div>
<div>main.js的主要逻辑代码</div>
<div>　　
<div class="cnblogs_code">
<pre><span>  constructor() {
        var _this = this<span>;
        this.currentUnitObject = null<span>;
        this.unit = 1;//关卡
        this.speed = 16;//移动速度
        this.wt3dobject = null<span>;
        this.controlLever = null<span>;
        this.xpcobj = null<span>;
        this.ZJQiPao = null;//主角的气泡
        this.qipaoParent = null;//母气泡
        this.woker = wx.createWorker('workers/enemyWoker.js'<span>);
        this.woker.onProcessKilled(function<span> () {
            console.log("线程被杀了"<span>);
            _this.woker = wx.createWorker('workers/enemyWoker.js'<span>);
        });
        this.music = new<span> Music()
        this<span>.createPublicObjects();
        this.refreshScene(this<span>.unit);
    }</span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<p>　　</p>
</div>
<p><strong>&nbsp;说明：由于gif图限制大小缘故，后面的gif录屏智能选择模糊版</strong></p>
<p><strong>&nbsp;2.2、控制主角移动</strong></p>
<p><img alt="" width="797" height="373" loading="lazy" data-src="https://img2024.cnblogs.com/blog/800616/202507/800616-20250706190517182-1920425886.gif" class="lazyload"></p>
<p>空过摇杆控制器控制主角跑动移动，这里先大概讲解如何实现控制器摇杆</p>
<p>三维场景中 有一个叫做hub模型 是指模型本身永远浮动在相机表面</p>
<p>创建模型：</p>
<div class="cnblogs_code">
<pre>   var jsonobj={"show":true,"name":"firstEye","uuid":"","objType":"plane","width":this.clBtnradius*0.9,"height":this.clBtnradius*0.9,"color":16777215,"pic":"images/eye.png","transparent":true,"opacity":1,"side":2,"materialType":"basic","position":{"x":-window.innerWidth/2+this.clBtnradius,"y":window.innerHeight/2-this.clBtnradius*3,"z":-150},"rotation":{"x":0,"y":0,"z":0},"scale":{"x":1,"y":1,"z":1},"showSortNub":7,"customType1":"","customType2":"","animation":null,"dbclickEvents":null,"wx":null,"wy":null,"BindDevId":null,"BindDevName":null,"devInfo":null,"BindMeteId":null,"BindMeteName":null<span>}
   w3Dobj.InitAddHudObject(jsonobj);</span></pre>
</div>
<p>绑定模型事件</p>
<div class="cnblogs_code">
<pre><span>  touchStart (_obj, face, objs,event)  {
    var _this=this<span>;
    if(_obj.name=="musicBack"<span>){//开启背景音乐
      _obj.visible=false<span>;
      this.w3Dobj.HudScene.children[9].visible=true<span>;
      this<span>.music.stopBgm();
    }else if(_obj.name=="noMusicBack"<span>){//关闭背景音乐</span></span></span></span></span></span></span></pre>
<pre><span>_obj.visible=false<span>; this.w3Dobj.HudScene.children[8].visible=true<span>; this<span>.music.playBgm(); }else if(_obj.name=="firstEye"<span>){ this.selectFristEyeindex=event.changedTouches[0<span>].identifier; var xpcobj= this.w3Dobj.commonFunc.findObject("xpc"<span>); this.w3Dobj.camera.ooldPosition=<span>{ x: _this.w3Dobj.camera.position.x, y: _this.w3Dobj.camera.position.y, z: _this.w3Dobj.camera.position.z } this.w3Dobj.controls.ooldtarget=<span>{ x: _this.w3Dobj.controls.target.x, y: _this.w3Dobj.controls.target.y, z: _this.w3Dobj.controls.target.z } this.w3Dobj.camera.position.x=<span>xpcobj.position.x; this.w3Dobj.camera.position.y=xpcobj.position.y+400<span>; this.w3Dobj.camera.position.z=<span>xpcobj.position.z; this.w3Dobj.controls.target.x=xpcobj.position.x+3000*<span>Math.sin(xpcobj.rotation.y); this.w3Dobj.controls.target.y=xpcobj.position.y+200<span>; this.w3Dobj.controls.target.z=xpcobj.position.z+3000*<span>Math.cos(xpcobj.rotation.y); return false<span>; }<span> }</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<p>&nbsp;</p>
<p>2.3、控制主角攻击</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/800616/202507/800616-20250706190638688-1198021157.gif" class="lazyload"></p>
<p>&nbsp;通过点击右侧招式 控制小人主角发大招，有冷却 运功时间</p>
<p>执行骨骼动画：</p>
<div class="cnblogs_code">
<pre>   //隐藏金钟罩
<span>                _this.hideJZZ();
                //显示其它功夫控制器
<span>                _this.showKongFuControl();
                clearInterval(_this.xpcobj.runTimeInterval);
                //移动主角
                _this.xpcobj.runTimeInterval = setInterval(() =&gt;<span> {
                    if<span>(_this.currentUnitObject){
                        _this.currentUnitObject.changeXPCPosition();
                    //修改摄像机
<span>                        _this.currentUnitObject.changeCamera();
                    }

                    //修改主角运动动画
                    if (Math.abs(_this.controlLever.speed.x) &lt;= 0.1 &amp;&amp; Math.abs(_this.controlLever.speed.y) &lt;= 0.1<span>) {
                        if (_this.xpcobj.currentAnimationNameName != "stand"<span>) {
                            _this.xpcobj.animation.doAnimation("stand"<span>)
                            _this.xpcobj.currentAnimationNameName = "stand"<span>;
                        }
                    } </span></span></span></span></span></span></span></span></span></pre>
</div>
<p>&nbsp;</p>
<p>2.4、敌人对战</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/800616/202507/800616-20250706190659742-1510464319.gif" class="lazyload"></p>
<p>这里涉及到敌人的移动，寻址。</p>
<p>我们要避开墙体</p>
<div class="cnblogs_code">
<pre>    /**
     * 计算线 在法向量上的平移
     * @param {any} x1
     * @param {any} y1
     * @param {any} x2
     * @param {any} y2
     * @param {any} moveLength &gt;0 上移动 &lt;0下移
     */<span>
    static LineTranslationByNormalvector(x1, y1, x2, y2,moveLength) {
        //计算角度
        var lineAngle = this.getAngle(x1, y1, x2, y2) / 180 *<span> Math.PI;
            var x1_new = x1 - moveLength *<span> Math.sin(lineAngle);
            var x2_new = x2 - moveLength *<span> Math.sin(lineAngle);
            var y1_new = y1 + moveLength *<span> Math.cos(lineAngle);
            var y2_new = y2 + moveLength *<span> Math.cos(lineAngle);
        return<span> [x1_new, y1_new, x2_new, y2_new]
    }</span></span></span></span></span></span></span></pre>
</div>
<div class="cnblogs_code">
<pre>/**
 * 计算两条线的焦点
 * @param {any} a
 * @param {any} b
 * @param {any} c
 * @param {any} d
 */<span>
    static segmentsIntr(a, b, c, d) {
    var denominator = (b.y - a.y) * (d.x - c.x) - (a.x - b.x) * (c.y -<span> d.y);
    if (denominator == 0<span>) {
        return false<span>;
    }
    // 线段所在直线的交点坐标 (x , y)      
    var x = ((b.x - a.x) * (d.x - c.x) * (c.y -<span> a.y)
        + (b.y - a.y) * (d.x - c.x) *<span> a.x
        - (d.y - c.y) * (b.x - a.x) * c.x) /<span> denominator;
    var y = -((b.y - a.y) * (d.y - c.y) * (c.x -<span> a.x)
        + (b.x - a.x) * (d.y - c.y) *<span> a.y
        - (d.x - c.x) * (b.y - a.y) * c.y) /<span> denominator;
    /** 2 判断交点是否在两条线段上 **/
        if<span> (
            // 交点在线段1上  
            (x - a.x) * (x - b.x) &lt;= 0.0000001 &amp;&amp; (y - a.y) * (y - b.y) &lt;= 0.0000001
            // 且交点也在线段2上  
            &amp;&amp; (x - c.x) * (x - d.x) &lt;= 0.0000001 &amp;&amp; (y - c.y) * (y - d.y) &lt;= 0.0000001<span>
        ) {

            // 返回交点p  
            return<span> {
                x: x,
                y: y,
                inline: true<span>,
                all: true<span>
            }
        } else if<span> (
            // 交点在线段1上  
            (x - a.x) * (x - b.x)&gt;= 0 &amp;&amp; (y - a.y) * (y - b.y) &gt;= 0
            // 且交点也在线段2上  
            &amp;&amp; (x - c.x) * (x - d.x) &gt;= 0 &amp;&amp; (y - c.y) * (y - d.y) &gt;= 0<span>
        ) {

            // 返回交点p  
            return<span> {
                x: x,
                y: y,
                inline: false<span>,
               all: true<span>
            }
        } else<span> {
            //否则不相交  
            return<span> {
                x: x,
                y: y,
                inline: false<span>,
               all: false<span>
            }

        }
    
}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<p>&nbsp;</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/800616/202507/800616-20250706190714057-333806395.gif" class="lazyload"></p>
<p>可以踢腿，可以发大招</p>
<p>&nbsp;执行发大招的骨骼动画，创建气体实例，让其沿着动作方向移动。</p>
<div class="cnblogs_code">
<pre> _this.xpcobj.animation.doAnimation("taiji_k", 1, function<span> (time, stepname) {
                                    if (stepname == "qishi6"<span>) {
                                        var qipao = wt3DObj.commonFunc.findObject("ZJqipao"<span>);
                                        _this.ZJQiPao =<span> qipao;
                                        qipao.visible = true<span>;
                                        var lhp = _this.xpcobj.children[4].children[0].children[0<span>].getWorldPosition()
                                        var rhp = _this.xpcobj.children[3].children[0].children[0<span>].getWorldPosition();
                                        qipao.position.x = (lhp.x + rhp.x) / 2<span>;
                                        qipao.position.y = (lhp.y + rhp.y) / 2 + 30<span>;
                                        qipao.position.z = (lhp.z + rhp.z) / 2<span>;
                                        qipao.scale.x = 1<span>;
                                        qipao.scale.y = 1<span>;
                                        qipao.scale.z = 1<span>;
                                       
                                        _this.currentUnitObject.QIPAOcollisionDetection(qipao);

                                    }
                                    // console.log(stepname);
                                })</span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<p>&nbsp;</p>
<p>2.5、过关到下一关</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/800616/202507/800616-20250706190748668-1408705355.gif" class="lazyload"></p>
<p>&nbsp;打过了第一关，来到第二关。</p>
<p>&nbsp;切换关卡</p>
<div class="cnblogs_code">
<pre><span> refreshScene(unit) {
        var _this=this<span>;
        //回收
<span>        wx.triggerGC();
        _this.unit=<span>unit;
            if (unit == 1<span>) {
                _this.currentUnitObject = new<span> unit01BSS(_this,THREE,TWEEN);
                _this.currentUnitObject.load();
            }else if(unit==2<span>){
                if<span>(  _this.currentUnitObject){
                    _this.currentUnitObject.destory(function<span>(){
                        _this.currentUnitObject = new<span> unit02BSS(_this,THREE,TWEEN);
                        _this.currentUnitObject.load();
                    })
                }else<span>{
                    _this.currentUnitObject = new<span> unit02BSS(_this,THREE,TWEEN);
                    _this.currentUnitObject.load();
                }
             
            }
   
    }</span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<p>&nbsp;</p>
<p><strong>三、设计游戏规则</strong></p>
<p>&nbsp;</p>
<p>开发一款游戏实属不易，尽管这款游戏尚未正式上线，但它已然是three.js在微信小游戏平台上的一次勇敢尝试与实践。 就当前阶段而言，这款游戏在画面设计、关卡设置以及整体可玩性和激励性方面，尚缺乏专业视角的打磨与指引。然而，我们深知罗马非一日建成，因此正稳步前行，逐步改进。 对于程序员而言，在现阶段的游戏设计中，他们主要聚焦于两大核心要素：一是游戏的可玩性，确保玩家能够沉浸其中，享受游戏带来的乐趣；二是游戏的性能，力求在保障游戏流畅运行的同时，为玩家提供稳定、高质量的游戏体验。这款游戏虽尚显稚嫩，但作为学习教程已绰绰有余，为我们后续的开发工作奠定了坚实的基础。</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>技术交流 1203193731@qq.com</p>
<p>如果你有什么要交流的心得 可邮件我</p>
<p>后面的课程将继续讲解</p>
<p>第二课：代码实现人物骨骼模型</p>
<p>第三课：小游戏控制杆的实现</p>
<p>第四课：地图的制作</p>
<p>第五课：敌人自主攻击</p>
<p>第六课：关卡设计、背景音乐、攻击音乐等</p>
<p>姑且按照上述的先安排后续系列教程吧。</p>
<p>&nbsp;</p>
<p class="marklang-paragraph">&nbsp;技术交流 1203193731@qq.com</p>
<p>如果你有什么要交流的心得 可邮件我</p>
<p>&nbsp;</p>
<p>其它相关文章：</p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/18964244" target="_blank">如何基于three.js(webgl)引擎架构，实现3D医院、3D园区导航，3D科室路径导航</a></p>
<p><a title="如何基于three.js(webgl)引擎架构，实现3D密集架库房,3D档案室（3d机器人取档、机器人盘点、人工查档、设备巡检）" href="https://www.cnblogs.com/yeyunfei/p/1802368" target="_blank">如何基于three.js(webgl)引擎架构，实现3D密集架库房,3D档案室（3d机器人取档、机器人盘点、人工查档、设备巡检）</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/17382314.html" target="_blank">如何使用webgl(three.js)实现煤矿隧道、井下人员定位、掘进面、纵采面可视化解决方案——第十九课（一）</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/17205445.html" target="_blank">如何使用webgl(three.js)实现3D消防、3D建筑消防大楼、消防数字孪生、消防可视化解决方案——第十八课（一）</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/16661093.html" target="_blank">webgl(three.js)3D光伏,3D太阳能能源,3D智慧光伏、光伏发电、清洁能源三维可视化解决方案——第十六课</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/16826146.html" target="_blank">如何用webgl(three.js)搭建一个3D库房,3D仓库3D码头,3D集装箱,车辆定位,叉车定位可视化孪生系统——第十五课</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/16616696.html" target="_blank">webgl(three.js)实现室内三维定位,3D定位,3D楼宇bim、实时定位三维可视化解决方案——第十四课（定位升级版）</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/15566365.html" target="_blank">使用three.js(webgl)搭建智慧楼宇、设备检测、数字孪生——第十三课</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/15952916.html" target="_blank">如何用three.js(webgl)搭建3D粮仓、3D仓库、3D物联网设备监控-第十二课</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/16011837.html" rel="noopener" target="_blank">如何用webgl(three.js)搭建处理3D隧道、3D桥梁、3D物联网设备、3D高速公路、三维隧道桥梁设备监控-第十一课</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/15676559.html" rel="noopener" target="_blank">如何用three.js实现数字孪生、3D工厂、3D工业园区、智慧制造、智慧工业、智慧工厂-第十课</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/10484241.html" rel="noopener" target="_blank">使用webgl(three.js)创建3D机房，3D机房微模块详细介绍(升级版二)</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/7899613.html" rel="noopener" target="_blank">如何用webgl(three.js)搭建一个3D库房-第一课</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/8811228.html" rel="noopener" target="_blank">如何用webgl(three.js)搭建一个3D库房,3D密集架,3D档案室,-第二课</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/8910482.html" rel="noopener" target="_blank">使用webgl(three.js)搭建一个3D建筑，3D消防模拟——第三课</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/9629405.html" rel="noopener" target="_blank">使用webgl(three.js)搭建一个3D智慧园区、3D建筑，3D消防模拟，web版3D,bim管理系统——第四课</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/10473050.html" rel="noopener" target="_blank">如何用webgl(three.js)搭建不规则建筑模型，客流量热力图模拟</a></p>
<p><span style="font-size: 14px"><a href="https://www.cnblogs.com/yeyunfei/p/11151890.html" rel="noopener" target="_blank">&nbsp;使用webgl(three.js)搭建一个3D智慧园区、3D建筑，3D消防模拟，web版3D,bim管理系统——第四课（炫酷版一）</a></span></p>
<h1 class="postTitle"><span style="font-size: 14px"><a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/yeyunfei/p/11579334.html" rel="noopener">使用webgl(three.js)搭建3D智慧园区、3D大屏，3D楼宇，智慧灯杆三维展示，3D灯杆，web版3D,bim管理系统——第六课</a></span></h1>
<p><span style="font-size: 14px"><a href="https://www.cnblogs.com/yeyunfei/p/15578120.html" rel="noopener" target="_blank">如何用webgl(three.js)搭建处理3D园区、3D楼层、3D机房管线问题（机房升级版）-第九课（一）</a></span></p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-08 10:41">2025-07-08 10:40</span>&nbsp;
<a href="https://www.cnblogs.com/yeyunfei">魂断蓝桥666</a>&nbsp;
阅读(<span id="post_view_count">140</span>)&nbsp;
评论(<span id="post_comment_count">1</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18972476);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18972476', targetLink: 'https://www.cnblogs.com/yeyunfei/p/18972476', title: '使用three.js，实现微信3D小游戏系列教程，框架篇（一）' })">举报</a>
</div>
        