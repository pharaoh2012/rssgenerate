
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lgnblog/p/19052482" title="发布于 2025-08-22 11:31">
    <span role="heading" aria-level="2">px 和 rem已经过时？</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<div id="page-content" class="rich_media_area_primary">
<div class="rich_media_area_primary_inner">
<div id="img-content" class="rich_media_wrp">
<div id="js_content" class="rich_media_content js_underline_content autoTypeSetting24psection">
<p data-line="2" data-pm-slice="0 0 []"><span>从&nbsp;<code><span>px</span></code><span>&nbsp;的绝对统治，到&nbsp;<code><span>rem</span></code><span>&nbsp;成为响应式设计的事实标准，我们似乎已经找到了完美的解决方案。</span></span></span></p>
<p data-line="4"><span>然而，如果你最近观察一些顶尖科技公司的前端代码库或设计系统，你会发现一个新的趋势正在悄然兴起：<code><span>px</span></code><span>&nbsp;和&nbsp;<code><span>rem</span></code><span>&nbsp;的使用场景正在被大幅压缩，取而代之的是以&nbsp;<code><span>vw</span></code><span>&nbsp;和&nbsp;<code><span>clamp()</span></code><span>&nbsp;为代表的现代 CSS 方案。</span></span></span></span></span></p>
<p data-line="6"><span>这并非简单的技术跟风，而是一场深刻的范式转移，它标志着我们对“响应式设计”的理解，从“在不同断点间切换”演进为“在任意尺寸下平滑过渡”。</span></p>
<h4 data-line="8"><span>拥抱真正的“流体布局”</span></h4>
<p data-line="10"><span>前端追求的是极致的用户体验和极致的开发效率，<code><span>rem</span></code><span>&nbsp;的“阶梯式”体验和高维护成本显然无法满足这一要求。于是，以&nbsp;<code><span>vw</span></code><span>&nbsp;和&nbsp;<code><span>clamp()</span></code><span>&nbsp;为核心的新方案应运而生。</span></span></span></span></p>
<p data-line="12">1. VW (视口宽度单位): 天生的流体基因</p>
<p data-line="14"><code><span>vw</span></code><span>&nbsp;(Viewport Width) 是一个与视口直接关联的单位，<code><span>1vw</span></code><span>&nbsp;等于视口宽度的 1%。这意味着，元素的尺寸会随着浏览器窗口的拉伸或收缩，进行实时、平滑、无级<span>的缩放。</span></span></span></p>
<div class="cnblogs_Highlighter">
<pre class="brush:css;gutter:true;">.title {
  /* 字体大小永远是视口宽度的 5% */
  font-size: 5vw;
}</pre>
</div>
<p data-line="22"><span>这行代码带来的体验是&nbsp;<code><span>rem</span></code><span>&nbsp;+ 媒体查询无论如何也无法模拟的：丝滑的、完全线性的缩放。</span></span></p>
<p data-line="24"><span>但是，<code><span>vw</span></code><span>&nbsp;也有一个致命缺陷：缺乏边界<span>。在超大屏幕上，<code><span>5vw</span></code><span>&nbsp;的字体会变得巨大无比；在极小的手机屏幕上，它又可能小到无法阅读。</span></span></span></span></p>
<p data-line="26">2. Clamp(): 终极解决方案，优雅的边界控制</p>
<p data-line="28"><span>CSS 的&nbsp;<code><span>clamp()</span></code><span>&nbsp;函数正是为了解决&nbsp;<code><span>vw</span></code><span>&nbsp;的边界问题而生的。它像一个“夹子”，将一个动态的值“夹”在一个最大值和最小值之间。</span></span></span></p>
<p data-line="30"><span>语法：<code><span>clamp(MIN, PREFERRED, MAX)</span></code></span></p>
<ul class="list-paddingleft-1">
<li><code><span>MIN</span></code><span>：最小值，兜底值。</span></li>
<li><code><span>PREFERRED</span></code><span>：理想值，通常是基于&nbsp;<code><span>vw</span></code><span>&nbsp;的动态值。</span></span></li>
<li><code><span>MAX</span></code><span>：最大值，上限值。</span></li>
</ul>
<p data-line="36"><span>让我们用&nbsp;<code><span>clamp()</span></code><span>&nbsp;来重写上面的例子：</span></span></p>
<p><img src="https://img2024.cnblogs.com/blog/1472868/202508/1472868-20250822113129813-844365120.png" alt="image" loading="lazy"></p>
<p>&nbsp;</p>
<p data-line="49"><span>这一行代码，浓缩了以往可能需要三到四个媒体查询才能实现的功能，而且做得更好。</span></p>
<p data-line="51"><code><span>px</span></code><span>&nbsp;仍然是定义绝对、固定尺寸（如&nbsp;<code><span>border-width</span></code><span>,&nbsp;<code><span>box-shadow</span></code><span>&nbsp;的偏移量）的最佳选择。</span></span></span></p>
<p data-line="53"><code><span>rem</span></code><span>&nbsp;在一些不追求极致流体体验、更注重全局可访问性缩放的场景（如文档型网站、后台管理系统）中，依然是一个简单、可靠的方案。</span></p>
<p data-line="55"><span>然而，在面向消费者（To C）的、对视觉和体验要求极高的产品中，<code><span>vw</span></code><span>&nbsp;+&nbsp;<code><span>clamp()</span></code><span>&nbsp;所代表的现代 CSS 布局方案，正凭借其无与伦比的流体体验、组件解耦能力和维护效率，成为新的行业标杆。</span></span></span></p>
<p data-line="57"><span>从&nbsp;<code><span>px</span></code><span>&nbsp;到&nbsp;<code><span>rem</span></code><span>&nbsp;再到&nbsp;<code><span>clamp()</span></code><span>&nbsp;的演进，不仅是 CSS 单位的更迭，更是前端开发理念的进化——从固定的像素点，到响应式的断点，再到如今的万物皆流体。</span></span></span></span>&nbsp;</p>
</div>
</div>
</div>
</div>
<div class="rich_media_area_extra">
<div class="rich_media_area_extra_inner">
<div id="page_bottom_area" class="has_extra_cnt">
<div>&nbsp;</div>
</div>
</div>
</div>
</div>
<div id="MySignature" role="contentinfo">
    <p>本文来自博客园，作者：<a href="https://www.cnblogs.com/lgnblog/" target="_blank">青石小巷</a>，转载请注明原文链接：<a href="https://www.cnblogs.com/lgnblog/p/19052482" target="_blank">https://www.cnblogs.com/lgnblog/p/19052482</a></p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-08-22 11:32">2025-08-22 11:31</span>&nbsp;
<a href="https://www.cnblogs.com/lgnblog">青石小巷</a>&nbsp;
阅读(<span id="post_view_count">280</span>)&nbsp;
评论(<span id="post_comment_count">1</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19052482);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19052482', targetLink: 'https://www.cnblogs.com/lgnblog/p/19052482', title: 'px 和 rem已经过时？' })">举报</a>
</div>
        