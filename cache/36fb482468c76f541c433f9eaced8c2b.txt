
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/InCerry/p/-/dotnet_week_25_2_1" title="发布于 2025-02-09 17:10">
    <span role="heading" aria-level="2">.NET周刊【2月第1期 2025-02-02】</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="国内文章">国内文章</h2>
<h3 id="dotnet-9-已知问题-默认开启-cet-导致进程崩溃">dotnet 9 已知问题 默认开启 CET 导致进程崩溃</h3>
<p><a href="https://www.cnblogs.com/lindexi/p/18700406" target="_blank">https://www.cnblogs.com/lindexi/p/18700406</a></p>
<p>本文记录 dotnet 9 的一个已知且当前已修问题。默认开启 CET 导致一些模块执行时触发崩溃。</p>
<h3 id="dotnet-使用-colorcode-做代码着色器">dotnet 使用 ColorCode 做代码着色器</h3>
<p><a href="https://www.cnblogs.com/lindexi/p/18687046" target="_blank">https://www.cnblogs.com/lindexi/p/18687046</a></p>
<p>本文记录我使用 ColorCode 开源库简单做一个代码着色器.</p>
<h3 id="windows-行为测试-删除-filestream-正在读写文件可以继续读写">Windows 行为测试 删除 FileStream 正在读写文件可以继续读写</h3>
<p><a href="https://www.cnblogs.com/lindexi/p/18672096" target="_blank">https://www.cnblogs.com/lindexi/p/18672096</a></p>
<p>本文在 Win11 系统下，测试使用 FileStream 对文件进行读写，读写过程中，删除正在读写的文件后的行为.</p>
<h3 id="tinyfox-发生重大改版">Tinyfox 发生重大改版</h3>
<p><a href="https://www.cnblogs.com/yunei/p/18695808" target="_blank">https://www.cnblogs.com/yunei/p/18695808</a></p>
<p>新版Tinyfox是一款全新的跨平台高性能OWIN服务引擎。它去除了OWIN协议，提升性能，简化操作。新版集成WebApi和WebSocket，新增动态HTML功能，使用户能轻松开发具有UI的网页。Tinyfox体积小、功能独立，支持多种.NET版本及操作系统。为支持.NET NativeAOT，它移除动态加载和反射相关代码。设计上强调易用性和开放性，用户可快速上手。开发者聚焦关键功能，确保框架高效稳固。</p>
<h3 id="互联网不景气了那就玩玩嵌入式吧用纯net开发并制作一个智能桌面机器人三用net-iot库控制舵机并多方法播放表情">互联网不景气了那就玩玩嵌入式吧，用纯.NET开发并制作一个智能桌面机器人（三）：用.NET IoT库控制舵机并多方法播放表情</h3>
<p><a href="https://www.cnblogs.com/GreenShade/p/18692804" target="_blank">https://www.cnblogs.com/GreenShade/p/18692804</a></p>
<p>本文探讨了.NET IoT及其应用，特别是机器人控制和相关硬件。详细介绍了树莓派的使用及所需电路板，阐明了舵机、I2C通讯、Lottie动画及FFmpeg等技术概念。提供了实用的指导，帮助读者理解机器人的构建和控制。文章清晰易懂，实用性强，涵盖了技术细节和应用实例，适合技术爱好者和开发者。介绍了资源获取渠道，降低了学习门槛。整体内容富有信息量，体现了技术深度与实用价值。</p>
<h3 id="新年开篇在本地部署deepseek大模型实现联网增强的ai应用">新年开篇:在本地部署DeepSeek大模型实现联网增强的AI应用</h3>
<p><a href="https://www.cnblogs.com/zt199510/p/18694574" target="_blank">https://www.cnblogs.com/zt199510/p/18694574</a></p>
<p>本文介绍如何在本地部署DeepSeek大语言模型以实现联网增强的AI应用。文章基于Microsoft Semantic Kernel框架，强调系统架构设计和核心组件的集成，如Ollama服务和自定义搜索技能。文中提供详细的代码实现，包括搜索技能的执行和主流程的编排，展示了进行联网搜索和处理响应的过程。文章讨论了混合智能架构和搜索增强功能，强调数据隐私和提升用户交互体验的应用场景。通过这些实现，开发者能够安全高效地构建智能应用。</p>
<h3 id="brainfly-用-c-类型系统构建-brainfuck-编译器">Brainfly: 用 C# 类型系统构建 Brainfuck 编译器</h3>
<p><a href="https://www.cnblogs.com/hez2010/p/18696074/brainfly-brainfuck-compiler-built-with-csharp" target="_blank">https://www.cnblogs.com/hez2010/p/18696074/brainfly-brainfuck-compiler-built-with-csharp</a></p>
<p>Brainfuck 是一门极简的编程语言，仅有八个字符，每个字符对应一个指令。其语法简单，能够在 C# 类型系统中实现编译器，利用 .NET 的泛型特性。示例代码展示了 C# 类型如何根据泛型参数特化，支持多种数据类型的操作。文章深入探讨了接口的虚静态成员，推动了对 C# 类型系统的理解。整体内容清晰且具有实践意义，适合对编程语言有兴趣的读者。</p>
<h3 id="译net-升级助手现在支持升级到集中式包管理">【译】.NET 升级助手现在支持升级到集中式包管理</h3>
<p><a href="https://www.cnblogs.com/MingsonZheng/p/18694980" target="_blank">https://www.cnblogs.com/MingsonZheng/p/18694980</a></p>
<p>.NET 升级助手最近增加了新功能和中央包管理 (CPM) 升级类型。该助手帮助用户将解决方案升级到更新的 .NET 版本。用户可通过 Visual Studio 扩展或命令行工具使用该助手。最新功能允许将整个解决方案或部分项目通过 Nuget 转换为 CPM。用户可自定义设置并选择升级项目。还可以通过命令行工具实现相同效果。升级后，项目文件会自动调整，现有的包引用和程序集引用会被删除。此外，包的管理和发现方式也有所改进。这些新功能显著提升了升级体验。</p>
<h3 id="理解abp的领域驱动设计">理解ABP的领域驱动设计</h3>
<p><a href="https://www.cnblogs.com/jackyfei/p/18262641" target="_blank">https://www.cnblogs.com/jackyfei/p/18262641</a></p>
<p>本文章讨论了ABP框架及其在领域驱动设计(DDD)中的应用。ABP框架为应用开发提供架构方法，DDD作为其核心，通过分层构建助力灵活、可维护的代码库。文章描述了领域层、应用层、表示层和基础设施层的关系，以及各层的职责。其中，领域层包含实体和值对象，应用层通过应用服务实现业务逻辑。文章还阐述了存储库、领域服务、规约和领域事件的概念，强调这些知识对构建基于DDD的解决方案的重要性。</p>
<h3 id="程序员常用高效实用工具推荐办公效率提升利器">程序员常用高效实用工具推荐，办公效率提升利器！</h3>
<p><a href="https://www.cnblogs.com/Can-daydayup/p/18692730" target="_blank">https://www.cnblogs.com/Can-daydayup/p/18692730</a></p>
<p>本文介绍了多款实用的开发工具，旨在提高开发者的工作效率和学习效果。内容涵盖了在线SSH管理工具、API管理工具、Redis可视化管理工具、屏幕录制工具、Linux服务器管理工具、在线文档工具，以及支持C#语言的AI辅助编程工具。这些工具各具特色，适合不同发展阶段的开发者选择使用，以满足其具体需求。</p>
<h3 id="并发编程---线程同步二">并发编程 - 线程同步（二）</h3>
<p><a href="https://www.cnblogs.com/hugogoos/p/18694925" target="_blank">https://www.cnblogs.com/hugogoos/p/18694925</a></p>
<p>本文探讨了C#中的线程同步方案，主要介绍了ThreadStatic和ThreadLocal的使用。ThreadStatic用于实现线程本地存储，使每个线程拥有独立字段副本，避免了资源共享问题。使用ThreadStatic时需注意，它仅作用于静态字段，且不应进行内联初始化。ThreadLocal则解决了ThreadStatic的一些缺陷，通过实例化，可以让所有线程获取相同的初始化值，因而更为推荐。文章以示例代码展示了这两种方法的不同效果，阐明了线程间如何正确处理局部变量的访问。</p>
<h3 id="译mongodb-ef-core-提供程序有什么新功能">【译】MongoDB EF Core 提供程序：有什么新功能？</h3>
<p><a href="https://www.cnblogs.com/MingsonZheng/p/18696241" target="_blank">https://www.cnblogs.com/MingsonZheng/p/18696241</a></p>
<p>这篇文章介绍了MongoDB的EF Core提供程序，专门为.NET开发人员设计。文章讨论了如何将属性添加到实体、执行复杂查询、事务管理和更改跟踪。以sample_mflix数据库为例，作者展示了动态添加新属性和使用EF Core的功能。这些新特性在Microsoft .NET和MongoDB团队支持下得以实现。代码示例提供了实际操作指导，便于开发者上手。整体来说，这篇文章清晰、直观，适合对MongoDB与EF Core感兴趣的读者。</p>
<h3 id="cnetnet-core技术前沿周刊--第-23-期2025年120-126">C#/.NET/.NET Core技术前沿周刊 | 第 23 期（2025年1.20-1.26）</h3>
<p><a href="https://www.cnblogs.com/Can-daydayup/p/18692724" target="_blank">https://www.cnblogs.com/Can-daydayup/p/18692724</a></p>
<p>这篇文章汇总了C#/.NET/.NET Core相关的技术文章和资源，包括设计模式、yield关键字、日志处理、WPF控件库等内容，帮助开发者提升技术视野和实用技能。它介绍了新的功能和最佳实践，以及开源项目，旨在为技术人员提供全面的支持和参考。</p>
<h3 id="译winforms分析一下我用-visual-basic-写的">【译】WinForms：分析一下（我用 Visual Basic 写的）</h3>
<p><a href="https://www.cnblogs.com/MingsonZheng/p/18692763" target="_blank">https://www.cnblogs.com/MingsonZheng/p/18692763</a></p>
<p>这篇文章介绍了针对WinForms应用程序的新Roslyn分析器，旨在帮助开发者解决代码中的潜在问题。文章强调了Roslyn编译器平台的开放性和可扩展性，并介绍了.NET 9中新增的异步API和分析器的作用。文中具体分析了如何选择正确的InvokeAsync重载，以避免异步代码出现不稳定的问题。这个分析器在安全性、稳定性和生产力等领域具有重要意义，未来还将引入更多规则和功能。</p>
<h3 id="译轻松评估-ai-应用程序的质量">【译】轻松评估 AI 应用程序的质量</h3>
<p><a href="https://www.cnblogs.com/MingsonZheng/p/18693290" target="_blank">https://www.cnblogs.com/MingsonZheng/p/18693290</a></p>
<p>构建 AI 应用程序时，评估小型语言模型（SLM）和大型语言模型（LLM）的响应质量至关重要。Microsoft.Extensions.AI.Evaluation 库为 .NET 应用程序提供评估工具，支持生成报告、缓存响应及集成现有测试框架。该库包括多个 NuGet 包，具备内置评估指标，可以自定义评估。通过此库，开发者能有效提高应用程序的质量、准确性和用户体验。使用该库可简化评估过程并减少成本，用户可快速集成并配置评估报告。</p>
<h3 id="译融入人工智能的-eshop--全面的智能应用示例">【译】融入人工智能的 eShop – 全面的智能应用示例</h3>
<p><a href="https://www.cnblogs.com/MingsonZheng/p/18695888" target="_blank">https://www.cnblogs.com/MingsonZheng/p/18695888</a></p>
<p>本文探讨了如何在业务应用程序中集成人工智能，特别是以增强型 eShopSupport 为例。该应用不仅展示了 AI 在客户支持和工作流程中的应用，还演示了语义搜索、自动分类和情感分析等功能。此外，文章指出 .NET Aspire 的跨服务协作能力及与 Python 微服务的互操作性。文章强调 Microsoft.Extensions.AI 提供的 API 和工具，帮助开发者构建智能应用程序，确保一致性与高效性。最后，文章提供了运行示例的步骤和要求。</p>
<h2 id="主题">主题</h2>
<h3 id="net-9-网络改进---net-博客">.NET 9 网络改进 - .NET 博客</h3>
<p><a href="https://devblogs.microsoft.com/dotnet/dotnet-9-networking-improvements/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/dotnet/dotnet-9-networking-improvements/</a></p>
<p>有关 .NET 9 中的网络改进的文章。</p>
<ul>
<li>HTTP 协议
<ul>
<li>连接池</li>
<li>Windows 上的代理自动更新</li>
</ul>
</li>
<li>QUIC
<ul>
<li>公共 API</li>
<li>QUIC 连接选项</li>
<li>流式容量 API</li>
<li>性能改进</li>
</ul>
</li>
<li>WebSocket 浏览器
<ul>
<li>PING/PONG</li>
</ul>
</li>
<li>.NET Framework 兼容性</li>
<li>诊断
<ul>
<li>HttpClientFactory 日志中的 URI 查询修订</li>
<li>分布式跟踪改进</li>
<li>实验性连接跟踪</li>
</ul>
</li>
<li>HttpClientFactory
<ul>
<li>键控 DI 支持</li>
<li>更改默认主处理程序</li>
<li>安全</li>
<li>SSLKEYLOGFILE 支持</li>
<li>使用客户端证书恢复 TLS</li>
<li>协商 API 一致性检查</li>
</ul>
</li>
<li>网络原语
<ul>
<li>Server-Sent Events 解析器</li>
<li>其他基元</li>
</ul>
</li>
</ul>
<h3 id="net-framework-上的-aspnet-core-服务发布公告aspnet-core-23---net-blog">.NET Framework 上的 ASP.NET Core 服务发布公告：ASP.NET Core 2.3 - .NET Blog</h3>
<p><a href="https://devblogs.microsoft.com/dotnet/servicing-release-advisory-aspnetcore-23/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/dotnet/servicing-release-advisory-aspnetcore-23/</a></p>
<p>适用于 .NET Framework 的 ASP.NET Core 2.3 服务版本。</p>
<p>本文解释了为什么 ASP.NET Core 2.1 作为 .NET Framework 的 ASP.NET Core 2.3 重新发布，以及为什么它变成了 2.3。</p>
<h3 id="为什么-tracebit-是用-c-编写的--追踪位">为什么 Tracebit 是用 C# 编写的 | 追踪位</h3>
<p><a href="https://tracebit.com/blog/why-tracebit-is-written-in-c-sharp" target="_blank" rel="noopener nofollow">https://tracebit.com/blog/why-tracebit-is-written-in-c-sharp</a></p>
<p>一篇关于为什么使用 C# 开发 Tracebit （提供安全相关服务）的文章。</p>
<p>本文列举了选择 C# 的各种好处，包括生产力、开源、跨平台、您需要的一切、工具和性能。</p>
<ul>
<li><a href="https://techfeed.io/entries/679fee870645414ce12c885a" target="_blank" rel="noopener nofollow">选择 C# 作为开发语言的初创公司博客成为海外热门话题 - TechFeed</a></li>
</ul>
<h2 id="文章幻灯片等">文章、幻灯片等</h2>
<h3 id="通过在控制台应用程序中安装-generichost-方便地使用最新功能介绍代码示例---qiita">通过在控制台应用程序中安装 GenericHost 方便地使用最新功能（介绍代码示例） - Qiita</h3>
<p><a href="https://qiita.com/spc_ksudoh/items/441e68ad4b2532aaa22a" target="_blank" rel="noopener nofollow">https://qiita.com/spc_ksudoh/items/441e68ad4b2532aaa22a</a></p>
<p>了解如何在控制台应用程序中部署通用主机。</p>
<h3 id="用-c-编写-net-垃圾回收器---第-2-部分">用 C# 编写 .NET 垃圾回收器 - 第 2 部分</h3>
<p><a href="https://minidump.net/writing-a-net-gc-in-c-part-2/" target="_blank" rel="noopener nofollow">https://minidump.net/writing-a-net-gc-in-c-part-2/</a></p>
<p>有关在 C# 中实现 .NET 垃圾回收器（.NET + 本机 AOT）的系列文章的第 2 部分。 说明如何实现分配内存但不释放内存的 GC。</p>
<h3 id="请求变量等的-http-文件更新---visual-studio-blog">请求变量等的 HTTP 文件更新 - Visual Studio Blog</h3>
<p><a href="https://devblogs.microsoft.com/visualstudio/http-file-updates-for-request-variables-and-more/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/visualstudio/http-file-updates-for-request-variables-and-more/</a></p>
<p>Visual Studio 2022 17.12 及更高版本支持的“.http”文件中的请求变量说明。</p>
<p>本文介绍了 '$shared' 环境，它具有可与请求变量通用的值。</p>
<h3 id="uno-platform-希望-microsoft-以两种方式改进-net-webassembly----visual-studio-杂志">Uno Platform 希望 Microsoft 以两种方式改进 .NET WebAssembly -- Visual Studio 杂志</h3>
<p><a href="https://visualstudiomagazine.com/Articles/2025/02/04/Uno-Platform-Wants-Microsoft-to-Improve-WebAssembly.aspx" target="_blank" rel="noopener nofollow">https://visualstudiomagazine.com/Articles/2025/02/04/Uno-Platform-Wants-Microsoft-to-Improve-WebAssembly.aspx</a></p>
<p>它讨论了 Uno 平台要求 Microsoft 改进 .NET 中的 WebAssembly 的两件事：垃圾回收和多线程。</p>
<ul>
<li><a href="https://platform.uno/blog/state-of-webassembly-2024-2025/" target="_blank" rel="noopener nofollow">WebAssembly 的现状 – 2024 年和 2025 年</a></li>
</ul>
<h3 id="-在-net-中创建网页的-pdf---qiita">. 在 .NET 中创建网页的 PDF - Qiita</h3>
<p><a href="https://qiita.com/omt_teruki/items/48c486c521bfa969776a" target="_blank" rel="noopener nofollow">https://qiita.com/omt_teruki/items/48c486c521bfa969776a</a></p>
<p>了解如何在 .NET 应用程序中创建 PDF 文件。 本文展示了如何通过使用 ChromeDriver 运行 Chromium 而不是使用 iText 或任何付费库来生成 Chromium。</p>
<h3 id="从无经验到专业-biprogy-的-net-实践学习培训计划---qiita">从无经验到专业！ BIPROGY 的 NET 实践学习培训计划 - Qiita</h3>
<p><a href="https://qiita.com/MasatsunaKawamata/items/962206a5fc8147ff21fd" target="_blank" rel="noopener nofollow">https://qiita.com/MasatsunaKawamata/items/962206a5fc8147ff21fd</a></p>
<p>有关 BIPROGY 的 .NET 培训计划的介绍性文章。</p>
<p>在本文中，我们将介绍正在进行的培训类型，以及基于培训的独特架构。</p>
<h3 id="更改主题时现在会保留字体---visual-studio-blog">更改主题时，现在会保留字体 - Visual Studio Blog</h3>
<p><a href="https://devblogs.microsoft.com/visualstudio/your-fonts-are-now-preserved-when-changing-theme/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/visualstudio/your-fonts-are-now-preserved-when-changing-theme/</a></p>
<p>说明自 Visual Studio 2022 最新更新以来，更改主题时如何保留字体<br>
本文还介绍了如何将此行为恢复到以前的行为。</p>
<h3 id="在源生成器中支持多个-net-sdk-版本创建源生成器---部分-14">在源生成器中支持多个 .NET SDK 版本：创建源生成器 - 部分 14</h3>
<p><a href="https://andrewlock.net/creating-a-source-generator-part-14-supporting-multiple-sdk-versions-in-a-source-generator/" target="_blank" rel="noopener nofollow">https://andrewlock.net/creating-a-source-generator-part-14-supporting-multiple-sdk-versions-in-a-source-generator/</a></p>
<p>有关如何创建支持多个版本的 .NET SDK（= Roslyn 的多个版本）的源生成器的文章。</p>
<p>本文介绍了从如何创建包到如何进行集成测试的所有内容。</p>
<h3 id="esp32-上的-c-物联网编程-0---qiita">ESP32 上的 C# 物联网编程 #0 - Qiita</h3>
<p><a href="https://qiita.com/linyixian/items/912cfca9e76b7c9bc287" target="_blank" rel="noopener nofollow">https://qiita.com/linyixian/items/912cfca9e76b7c9bc287</a></p>
<p>在 ESP32 上使用 .NET nanoFramework 运行代码的说明。</p>
<ul>
<li><a href="https://qiita.com/linyixian/items/53768ac741ce858758a7" target="_blank" rel="noopener nofollow">ESP32 上的 C# 物联网编程 #1 - Qiita</a></li>
<li><a href="https://qiita.com/linyixian/items/c8f96b5ff5f663468bd5" target="_blank" rel="noopener nofollow">ESP32 上的 C# 物联网编程 #2 - Qiita</a></li>
<li><a href="https://qiita.com/linyixian/items/df6906b1f0063aced4bd" target="_blank" rel="noopener nofollow">ESP32 上的 C# 物联网编程 #3 - Qiita</a></li>
<li><a href="https://qiita.com/linyixian/items/c19992c345fffd9b9e40" target="_blank" rel="noopener nofollow">ESP32 上的 C# 物联网编程 #4 - Qiita</a></li>
</ul>
<h3 id="自定义-ai-生成的-git-提交消息---visual-studio-blog">自定义 AI 生成的 git 提交消息 - Visual Studio Blog</h3>
<p><a href="https://devblogs.microsoft.com/visualstudio/customize-your-ai-generated-git-commit-messages/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/visualstudio/customize-your-ai-generated-git-commit-messages/</a></p>
<p>了解如何使用自定义说明控制 Visual Studio 提交消息的 AI 生成功能。</p>
<h3 id="c-12-中发展的集合作的基础知识和应用">C# 12 中发展的集合作的基础知识和应用</h3>
<p><a href="https://zenn.dev/ktnd111/articles/14a0f43a7cfc15" target="_blank" rel="noopener nofollow">https://zenn.dev/ktnd111/articles/14a0f43a7cfc15</a></p>
<p>现代书写风格的描述，如 C# 12 集合公式及其应用程序示例。</p>
<h3 id="我尝试使用-autogen-同时与多个模型交谈---qiita">我尝试使用 AutoGen 同时与多个模型交谈 - Qiita</h3>
<p><a href="https://qiita.com/Sheegyy/items/5b542f390a683dcfbd34" target="_blank" rel="noopener nofollow">https://qiita.com/Sheegyy/items/5b542f390a683dcfbd34</a></p>
<p>了解如何使用多个模型实现 AutoGen for .NET。</p>
<h3 id="c-定式---文件选择---拖放和文件选择对话框">C# 定式 - 文件选择 - 拖放和文件选择对话框</h3>
<p><a href="https://zenn.dev/chai0917/articles/331f5919307f1d" target="_blank" rel="noopener nofollow">https://zenn.dev/chai0917/articles/331f5919307f1d</a></p>
<p>在 Windows 上使用 .NET 实现文件选择。</p>
<p>本文介绍了如何使用文件选择对话框，以及如何通过拖放来实现它。</p>
<h3 id="我试着做一个-c-类型系统的-brainfck-编译器---qiita">我试着做一个 C# 类型系统的 Brainf*ck 编译器 - Qiita</h3>
<p><a href="https://qiita.com/hez2010/items/d02287771efbe65e5cd6" target="_blank" rel="noopener nofollow">https://qiita.com/hez2010/items/d02287771efbe65e5cd6</a></p>
<p>了解如何使用 C# 泛型等创建 Brainf*ck 编译器。</p>
<p>本文介绍了如何实现 Brainf*ck 编译器以及结果编译器的性能。</p>
<h3 id="立即使用-net-和-deepseek-r1-构建智能应用程序---net-博客">立即使用 .NET 和 DeepSeek R1 构建智能应用程序！ - .NET 博客</h3>
<p><a href="https://devblogs.microsoft.com/dotnet/start-building-an-intelligent-app-with-dotnet-and-deep-seek/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/dotnet/start-building-an-intelligent-app-with-dotnet-and-deep-seek/</a></p>
<p>有关如何从 .NET 应用程序使用 DeepSeek R1 的讨论文章。</p>
<p>本文介绍了如何通过 Microsoft.Extensions.AI 库使用 GitHub 模型上托管的 DeepSeek R1。</p>
<h3 id="c-jsoncontent-和请求标头">[C#] JsonContent 和请求标头</h3>
<p><a href="https://blog.neno.dev/entry/2025/02/01/185538" target="_blank" rel="noopener nofollow">https://blog.neno.dev/entry/2025/02/01/185538</a></p>
<p>发送带有 JsonContent 的请求（停止块请求）时，如何在请求头中添加 Content-Length。</p>
<p>本文还谈到了 Google Cloud Run 的行为，这是问题的背景。</p>
<h3 id="在-linqpad-中使用-utildif-检查-diff">在 LINQPad 中使用 Util.Dif 检查 diff</h3>
<p><a href="https://tech.guitarrapc.com/entry/2025/01/26/235900" target="_blank" rel="noopener nofollow">https://tech.guitarrapc.com/entry/2025/01/26/235900</a></p>
<p>一篇关于 'Util.Dif' 方法的文章，该方法在 LINQPad 中打印对象的 diff。</p>
<h3 id="尝试-linqpad-for-macos-beta">尝试 LINQPad for macOS （Beta)</h3>
<p><a href="https://tech.guitarrapc.com/entry/2025/01/27/235900" target="_blank" rel="noopener nofollow">https://tech.guitarrapc.com/entry/2025/01/27/235900</a></p>
<p>了解如何在 macOS 上试用 LINQPad for macOS （Beta），它的实际感觉如何，以及它的行为有何不同。</p>
<h3 id="当-dotnet-测试失败时自动重试">当 dotnet 测试失败时自动重试</h3>
<p><a href="https://tech.guitarrapc.com/entry/2025/01/30/235900" target="_blank" rel="noopener nofollow">https://tech.guitarrapc.com/entry/2025/01/30/235900</a></p>
<p>如果测试失败，如何自动重试测试，并显示“dotnet test”。</p>
<p>本文介绍如何使用 dotnet-test-rerun 和 dotnet-retest 自行重试。</p>
<h3 id="在-c-中获取-cpu-模型---techguitarrapccóm">在 C# 中获取 CPU 模型 - tech.guitarrapc.cóm</h3>
<p><a href="https://tech.guitarrapc.com/entry/2025/01/28/235900" target="_blank" rel="noopener nofollow">https://tech.guitarrapc.com/entry/2025/01/28/235900</a></p>
<p>了解如何从 C# 代码中获取当前正在运行的计算机的 CPU 模型。</p>
<h2 id="库存储库工具等">库、存储库、工具等</h2>
<h3 id="umlx5hllplayer用于语言学习的媒体播放器具有双字幕ai-生成字幕实时-ocr翻译单词查找等功能">umlx5h/LLPlayer：用于语言学习的媒体播放器，具有双字幕、AI 生成字幕、实时 OCR、翻译、单词查找等功能！</h3>
<p><a href="https://github.com/umlx5h/LLPlayer" target="_blank" rel="noopener nofollow">https://github.com/umlx5h/LLPlayer</a></p>
<ul>
<li><a href="https://qiita.com/qwerty/items/99072f27b3e58fd20d39" target="_blank" rel="noopener nofollow">[C#] [WPF] 我们创建了一个支持 AI 字幕生成的语言学习视频播放器 “LLPlayer” - Qiita</a></li>
</ul>
<h3 id="推特">推特</h3>
<p><a href="https://x.com/jamesnk/status/1887229715120902257?s=12" target="_blank" rel="noopener nofollow">https://x.com/jamesnk/status/1887229715120902257?s=12</a></p>
<p><img src="https://incerry-blog-imgs.oss-cn-hangzhou.aliyuncs.com/image-20250209170711774.jpg" alt="image-20250209170711774" loading="lazy"></p>
<h2 id="深入探讨">深入探讨</h2>
<h3 id="jitnet-10-中的反抽象--问题-108913--dotnet运行时">JIT：.NET 10 中的反抽象 · 问题 #108913 · dotnet/运行时</h3>
<p><a href="https://github.com/dotnet/runtime/issues/108913" target="_blank" rel="noopener nofollow">https://github.com/dotnet/runtime/issues/108913</a></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.044328965123842594" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-09 17:10">2025-02-09 17:10</span>&nbsp;
<a href="https://www.cnblogs.com/InCerry">InCerry</a>&nbsp;
阅读(<span id="post_view_count">6</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18706304" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18706304);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18706304', targetLink: 'https://www.cnblogs.com/InCerry/p/-/dotnet_week_25_2_1', title: '.NET周刊【2月第1期 2025-02-02】' })">举报</a>
</div>
        