
		<h1 class="postTitle">
			<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/naturl/p/18702230" title="发布于 2025-02-07 11:07">
    <span role="heading" aria-level="2">鸿蒙页面开发 -  组件复用样式 @Styles</span>
    

</a>

		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>这篇文章介绍一个装饰器 <code>@Styles</code></p>
<p><strong>他的主要作用是：</strong> 当多个组件都有相同的样式，如果每个组件单独设置，会造成大量重复的代码冗余。这时我们可以使用 <code>@Styles</code> 将这些相同样式封装成一个方法，供这些组件调用，达到复用样式的目的</p>
<h2 id="使用方法">使用方法</h2>
<p><code>@Styles</code> 使用分为两种情况，在组件内使用 或 在全局使用。定义在组件内，作用域就是这个组件，定义在全局，作用域就是这个 <code>.ets</code> 文件</p>
<h4 id="组件内使用">组件内使用</h4>
<p>我们先看下面的一个例子，页面上画了两个方块，分别设置了宽、高、背景颜色等：</p>
<pre><code class="language-typescript">@Entry
@Component
struct Index {
  build() {
    Column() {
      Text('方块1号')
        .width('50%')
        .height(100)
        .margin({ top: 20 })
        .backgroundColor('#ff04add7')
        .fontSize(20)
        .textAlign(TextAlign.Center)
      Text('方块2号')
        .width('50%')
        .height(100)
        .margin({ top: 20 })
        .backgroundColor('#ff04add7')
        .fontSize(20)
        .textAlign(TextAlign.Center)
    }
    .width('100%')
  }
}
</code></pre>
<p><img src="https://img2023.cnblogs.com/blog/1289125/202502/1289125-20250207105815545-587212910.png" alt="img_1.png" loading="lazy"></p>
<p>在这个例子中，两个 <code>Text</code> 的宽、高样式都是一样的，可以使用 <code>@Styles</code> 将这些样式抽离，做成公共样式，如下：</p>
<pre><code class="language-typescript">@Entry
@Component
struct Index {
  build() {
    Column() {
      Text('方块1号')
        .TextStyle()
        .fontSize(20)
        .textAlign(TextAlign.Center)
      Text('方块2号')
        .TextStyle()
        .fontSize(20)
        .textAlign(TextAlign.Center)
    }
    .width('100%')
  }

  @Styles
  TextStyle() {
    .width('50%')
    .height(100)
    .margin({ top: 20 })
    .backgroundColor('#ff04add7')
  }
}
</code></pre>
<p><strong style="color: rgba(255, 0, 0, 1)">注意事项：</strong> 通过阅读代码发现，类似 <code>fontSize</code>、<code>textAlign</code>等属性没有抽离出来，是因为 <code>@Styles</code> 仅支持<br>
<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/general-attributes-V5" target="_blank" rel="noopener nofollow">通用属性</a></p>
<p><code>fontSize</code> 对文本组件有效，非文本组件，像<code>Image</code>组件就不需要该属性。<code>TextAlign</code>也是同理，不是所有组件都支持该属性</p>
<p><strong>作用域：</strong> 在组件内定义的 <code>@Styles</code> 只能作用于当前组件</p>
<h4 id="全局使用">全局使用</h4>
<p><code>@Styles</code> 可以定义在组件内，也可以定义在全局。在全局定义需要加 <code>Function</code> 关键字，组件内定义不需要</p>
<pre><code class="language-typescript">@Entry
@Component
struct Index {
  build(){
    Column() {
      Text('方块1')
        .blockStyle()
        .textAlign(TextAlign.Center)
        .backgroundColor('#ff34e5df')
      Text('方块2')
        .blockStyle()
        .textAlign(TextAlign.Center)
        .backgroundColor('#ff3b77de')
      Text('方块3')
        .blockStyle()
        .textAlign(TextAlign.Center)
        .backgroundColor('#ff06f566')
    }
    .width('100%')
  }
}

@Styles function blockStyle(){
  .width('30%')
  .height(100)
}
</code></pre>
<p><strong>作用域：</strong> 在全局定义的 <code>@Styles</code> 作用于整个 <code>.ets</code> 文件</p>
<br>
<h4 id="使用-this">使用 this</h4>
<p>定义在组件内的 <code>@Styles</code> 可以通过 <code>this</code> 访问组件内的常量和状态变量，并可以在 <code>@Styles</code> 方法中通过事件来改变状态变量的值，如下：</p>
<pre><code class="language-typescript">@Entry
@Component
struct Index {
  @State heightValue: number = 100

  build() {
    Text('方块')
      .TextStyle()
      .textAlign(TextAlign.Center)
  }

  @Styles
  TextStyle(){
    .width('50%')
    .height(this.heightValue)
    .backgroundColor('#e1e1e1')
    .onClick(() =&gt; {
      this.heightValue = 200
    })
  }
}
</code></pre>
<p>效果如下：</p>
<p><img src="https://img2023.cnblogs.com/blog/1289125/202502/1289125-20250207105816072-837850158.gif" alt="" loading="lazy"></p>
<p><strong style="color: rgba(255, 0, 0, 1)">注意事项：</strong> 在 <code>@Styles</code> 中使用的事件，只支持<br>
<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/general-events-V5" target="_blank" rel="noopener nofollow">通用事件</a></p>
<h4 id="不支持传参">不支持传参</h4>
<p><img src="https://img2023.cnblogs.com/blog/1289125/202502/1289125-20250207105816485-775336359.png" alt="img.png" loading="lazy"></p>
<h2 id="总结">总结</h2>
<ol>
<li><code>@Styles</code> 可以在组件内或全局进行定义，全局定义时需要在方法名前面添加 <code>function</code> 关键字，组件内定义则不需要</li>
<li><strong>访问this</strong>：组件内的 <code>@Styles</code> 可以通过 <code>this</code> 访问组件的常量和状态变量，并可以在 <code>@Styles</code> 方法内部通过事件来改变状态变量的值</li>
<li><strong>优先级</strong>：组件内的 <code>@Styles</code> 优先级高于 全局<code>@Styles</code>。框架优先找当前组件内的 <code>@Styles</code>，如果找不到，则会全局查找</li>
<li><strong>作用域</strong>：组件内的 <code>@Styles</code> 只能在当前组件使用，全局的 <code>@Styles</code> 只能在当前 <code>.ets</code> 文件中使用，不支持 <code>export</code></li>
</ol>
<p><strong>一些弊端：</strong></p>
<ol>
<li><code>@Styles</code> 中只支持<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/general-attributes-V5" target="_blank" rel="noopener nofollow">通用属性</a> 和 <a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/general-events-V5" target="_blank" rel="noopener nofollow">通用事件</a></li>
<li><code>@Styles</code> 不支持传参</li>
<li>不支持跨文件使用</li>
</ol>
<h2 id="最后">最后</h2>
<p>如果大家有不理解的地方可以留言，或自行阅读文档 <a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-style-V5" target="_blank" rel="noopener nofollow">文档地址</a></p>

</div>
<div id="MySignature" role="contentinfo">
    <p>本文来自博客园，作者：<a href="https://www.cnblogs.com/naturl/" target="_blank">时光凉忆</a>，转载请注明原文链接：<a href="https://www.cnblogs.com/naturl/p/18702230" target="_blank">https://www.cnblogs.com/naturl/p/18702230</a></p>
</div>
<div class="clear"></div>

		</div>
		<div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.04702335484143518" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-07 11:10">2025-02-07 11:07</span>&nbsp;
<a href="https://www.cnblogs.com/naturl">时光凉忆</a>&nbsp;
阅读(<span id="post_view_count">18</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18702230" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18702230);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18702230', targetLink: 'https://www.cnblogs.com/naturl/p/18702230', title: '鸿蒙页面开发 -  组件复用样式 @Styles' })">举报</a>
</div>
	