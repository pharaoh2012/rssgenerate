
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/aqi00/p/18980438" title="发布于 2025-07-12 12:48">
    <span role="heading" aria-level="2">FFmpeg开发笔记（七十三）Windows给FFmpeg集成MPEG-5视频编解码器</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<span data-cke-copybin-start="1"><span data-cke-copybin-start="1">​</span></span><span id="cke_bm_852S">MPEG-5是新一代的国际音视频编解码标准，像我们熟悉的MP3、MP4等音视频格式就来自于MPEG系列。MP3格式的说明介绍参见《FFmpeg开发实战：从零基础到短视频上线》一书的“5.2 &nbsp;MP3音频”，MP4格式的说明介绍参见《FFmpeg开发实战：从零基础到短视频上线》一书的“2.1.2 &nbsp;音视频文件的封装格式”。</span>
<p><span id="cke_bm_852S"> MPEG-5现已开源MPEG-5 EVC的视频编解码器，其中视频解码器的开源库叫libxevd，视频编码器的开源库叫libxeve。如今EVC的编解码器libxevd和libxeve日渐成熟，从7.0版本开始的最新FFmpeg源码已经支持EVC的编解码器libxevd和libxeve。<br>
接下来以微软的视窗系统为例，介绍如何在Windows环境给FFmpeg集成MPEG-5 EVC视频编解码器libxevd和libxeve，具体的操作步骤说明如下：</span></p>
<h1>一、配置libxevd</h1>
<p>libxevd是一款MPEG-5的EVC视频解码器。它的源码托管页面在https://github.com/mpeg5/xevd/，最新版本是2024年4月发布的xevd-0.5.0，该版本的源码包下载地址是https://codeload.github.com/mpeg5/xevd/tar.gz/refs/tags/v0.5.0。<br>
libxevd的配置步骤说明如下。<br>
1、下载最新的xevd源码，再把xevd源码包复制到MSYS环境的/usr/local/src目录下。接着在MSYS控制台执行下面命令解压源码包：</p>
<div class="cke_widget_wrapper cke_widget_block cke_widget_codeSnippet cke_widget_selected" data-cke-display-name="代码段" data-cke-filter="off" data-cke-widget-id="18" data-cke-widget-wrapper="1">
<pre class="cke_widget_element" data-cke-widget-data="%7B%22code%22%3A%22tar%20zxvf%20xevd-0.5.0.tar.gz%5Cncd%20xevd-0.5.0%22%2C%22classes%22%3Anull%7D" data-cke-widget-keep-attr="0" data-cke-widget-upcasted="1" data-widget="codeSnippet"><code class="hljs">tar zxvf xevd-0.5.0.tar.gz
cd xevd-0.5.0</code></pre>
</div>
<p>2、在xevd目录下创建新文件version.txt，文件内容填入“v0.5.0”，表示解码器的版本为0.5.0。<br>
3、执行下面命令配置xevd：</p>
<div class="cke_widget_wrapper cke_widget_block cke_widget_codeSnippet cke_widget_selected" data-cke-display-name="代码段" data-cke-filter="off" data-cke-widget-id="17" data-cke-widget-wrapper="1">
<pre class="cke_widget_element" data-cke-widget-data="%7B%22code%22%3A%22mkdir%20build%5Cncd%20build%5Cncmake%20..%22%2C%22classes%22%3Anull%7D" data-cke-widget-keep-attr="0" data-cke-widget-upcasted="1" data-widget="codeSnippet"><code class="hljs">mkdir build
cd build
cmake ..</code></pre>
</div>
<p>配置完毕，会在build目录下找到XEVD.sln，这就是xevd的Visual Studio项目工程文件。</p>
<h1>二、编译libxevd</h1>
<p>在xevd工程的build目录下创建xevd.def，并往该文件填入以下内容（其中函数列表来自inc\xevd.h定义的函数）：</p>
<div class="cke_widget_wrapper cke_widget_block cke_widget_codeSnippet cke_widget_selected" data-cke-display-name="代码段" data-cke-filter="off" data-cke-widget-id="16" data-cke-widget-wrapper="1">
<pre class="cke_widget_element" data-cke-widget-data="%7B%22code%22%3A%22LIBRARY%20xevd%5CnEXPORTS%5Cn%C2%A0%20xevd_create%5Cn%C2%A0%20xevd_delete%5Cn%C2%A0%20xevd_decode%5Cn%C2%A0%20xevd_pull%5Cn%C2%A0%20xevd_config%5Cn%C2%A0%20xevd_info%22%2C%22classes%22%3Anull%7D" data-cke-widget-keep-attr="0" data-cke-widget-upcasted="1" data-widget="codeSnippet"><code class="hljs">LIBRARY xevd
EXPORTS
&nbsp; xevd_create
&nbsp; xevd_delete
&nbsp; xevd_decode
&nbsp; xevd_pull
&nbsp; xevd_config
&nbsp; xevd_info</code></pre>
</div>
<p>打开Visual Studio 2022，在欢迎页面单击右侧的“打开项目或解决方案”，在弹出的文件对话框中选择xevd-0.5.0\build目录下的XEVD.sln。<br>
打开xevd工程后，右击解决方案管理器的xevd_dynamic模块，右键菜单依次选择：属性→配置属性→链接器→输入，在窗口右侧的模块定义文件栏填写xevd.def的绝对路径。继续依次选择：配置属性→链接器→高级，在窗口右侧的导入库栏填写待生成xevd.lib的绝对路径。完成设置后，单击右下角的确定按钮，保存xevd.def和xevd.lib的路径配置。<br>
依次选择顶部菜单：生成→配置管理器，在打开的配置管理器窗口上，找到左上角的“活动解决方案配置”下拉框，把Debug模式改为Release模式，再单击窗口右下角的关闭按钮。<br>
依次选择顶部菜单：生成→生成→生成xevd_dynamic，Visual Studio就开始编译xevd_dynamic模块。编译过程可在Visual Studio界面下方观察，直到编译完成如下图所示。</p>
<p><span class="cke_widget_wrapper cke_widget_inline cke_widget_image cke_image_nocaption cke_widget_selected" data-cke-display-name="图像" data-cke-filter="off" data-cke-widget-id="15" data-cke-widget-wrapper="1"><span class="cke_reset cke_widget_drag_handler_container"><span class="cke_image_resizer" title="点击并拖拽以改变尺寸"><span class="cke_widget_edit_container" title="编辑图片"><img alt="" width="597" height="350" data-src="https://img2024.cnblogs.com/blog/729938/202507/729938-20250712124543104-170910566.png" class="lazyload"></span></span></span></span></p>
<p>此时可在xevd-0.5.0\build\src_main\Release目录下找到xevd.lib和xevd.dll，这两个文件就是编译生成的libxevd库文件。</p>
<h1>三、安装libxevd</h1>
<p>确保Windows系统已经按照《FFmpeg开发实战：从零基础到短视频上线》第一章“1.3 &nbsp;Windows系统安装FFmpeg”的说明安装配置了MSYS，再按照以下步骤在MSYS环境安装libxevd。<br>
1、在msys64的/usr/local目录下新建libxevd目录，并在该目录下创建lib子目录；<br>
2、把xevd工程中build\src_main\Release目录下的xevd.lib和xevd.dll复制到第一步创建的lib目录；<br>
3、在lib目录下创建pkgconfig子目录，并把xevd工程的build\xevd.pc复制到pkgconfig目录；然后打开xevd.pc，把开头四行改成下面这样。</p>
<div class="cke_widget_wrapper cke_widget_block cke_widget_codeSnippet cke_widget_selected" data-cke-display-name="代码段" data-cke-filter="off" data-cke-widget-id="14" data-cke-widget-wrapper="1">
<pre class="cke_widget_element" data-cke-widget-data="%7B%22code%22%3A%22prefix%3D%2Fusr%2Flocal%2Flibxevd%5Cnexec_prefix%3D%24%7Bprefix%7D%2Fbin%5Cnlibdir%3D%24%7Bprefix%7D%2Flib%5Cnincludedir%3D%24%7Bprefix%7D%2Finclude%22%2C%22classes%22%3Anull%7D" data-cke-widget-keep-attr="0" data-cke-widget-upcasted="1" data-widget="codeSnippet"><code class="hljs">prefix=/usr/local/libxevd
exec_prefix=${prefix}/bin
libdir=${prefix}/lib
includedir=${prefix}/include</code></pre>
</div>
<p>4、在msys64的/usr/local/libxevd目录下创建include目录，然后把xevd工程中inc\xevd.h和build\xevd_exports.h复制到刚才创建的include目录；<br>
经过以上步骤操作后的libxevd目录结构如下所示。</p>
<div class="cke_widget_wrapper cke_widget_block cke_widget_codeSnippet cke_widget_selected" data-cke-display-name="代码段" data-cke-filter="off" data-cke-widget-id="13" data-cke-widget-wrapper="1">
<pre class="cke_widget_element" data-cke-widget-data="%7B%22code%22%3A%22%2Fusr%2Flocal%2Flibxevd%5Cn%C2%A0%7C---------------%20lib%5Cn%C2%A0%7C%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%7C-----%20xevd.lib%5Cn%C2%A0%7C%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%7C-----%20xevd.dll%5Cn%C2%A0%7C%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%7C-----%20pkgconfig%5Cn%C2%A0%7C%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%7C-----%20xevd.pc%5Cn%C2%A0%7C---------------%20include%5Cn%C2%A0%7C%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%7C-----%20xevd.h%5Cn%C2%A0%7C%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%7C-----%20xevd_exports.h%22%2C%22classes%22%3Anull%7D" data-cke-widget-keep-attr="0" data-cke-widget-upcasted="1" data-widget="codeSnippet"><code class="hljs">/usr/local/libxevd
&nbsp;|--------------- lib
&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |----- xevd.lib
&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |----- xevd.dll
&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |----- pkgconfig
&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |----- xevd.pc
&nbsp;|--------------- include
&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |----- xevd.h
&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |----- xevd_exports.h</code></pre>
</div>
<h1>四、配置libxeve</h1>
<p>libxeve是一款MPEG-5的EVC视频编码器。它的源码托管页面在https://github.com/mpeg5/xeve/，最新版本是2024年6月发布的xeve-0.5.1，该版本的源码包下载地址是https://codeload.github.com/mpeg5/xeve/tar.gz/refs/tags/v0.5.1。<br>
注意：由于FFmpeg仅支持版本号大于等于0.5.1的libxeve，因此务必下载xeve-0.5.1，不可下载xeve-0.5.0。<br>
libxeve的配置步骤说明如下。<br>
1、下载最新的xeve源码，再把xeve源码包复制到MSYS环境的/usr/local/src目录下。接着在MSYS控制台执行下面命令解压源码包：</p>
<div class="cke_widget_wrapper cke_widget_block cke_widget_codeSnippet cke_widget_selected" data-cke-display-name="代码段" data-cke-filter="off" data-cke-widget-id="12" data-cke-widget-wrapper="1">
<pre class="cke_widget_element" data-cke-widget-data="%7B%22code%22%3A%22tar%20zxvf%20xeve-0.5.1.tar.gz%5Cncd%20xeve-0.5.1%22%2C%22classes%22%3Anull%7D" data-cke-widget-keep-attr="0" data-cke-widget-upcasted="1" data-widget="codeSnippet"><code class="hljs">tar zxvf xeve-0.5.1.tar.gz
cd xeve-0.5.1</code></pre>
</div>
<p>2、在xeve目录下创建新文件version.txt，文件内容填入“v0.5.1”，表示编码器的版本为0.5.1。<br>
3、执行下面命令配置xeve：</p>
<div class="cke_widget_wrapper cke_widget_block cke_widget_codeSnippet cke_widget_selected" data-cke-display-name="代码段" data-cke-filter="off" data-cke-widget-id="11" data-cke-widget-wrapper="1">
<pre class="cke_widget_element" data-cke-widget-data="%7B%22code%22%3A%22mkdir%20build%5Cncd%20build%5Cncmake%20..%22%2C%22classes%22%3Anull%7D" data-cke-widget-keep-attr="0" data-cke-widget-upcasted="1" data-widget="codeSnippet"><code class="hljs">mkdir build
cd build
cmake ..</code></pre>
</div>
<p>配置完毕，会在build目录下找到XEVE.sln，这就是xeve的Visual Studio项目工程文件。</p>
<h1>五、编译libxeve</h1>
<p>在xeve工程的build目录下创建xeve.def，并往该文件填入以下内容（其中函数列表来自inc\xeve.h定义的函数）：</p>
<div class="cke_widget_wrapper cke_widget_block cke_widget_codeSnippet cke_widget_selected" data-cke-display-name="代码段" data-cke-filter="off" data-cke-widget-id="10" data-cke-widget-wrapper="1">
<pre class="cke_widget_element" data-cke-widget-data="%7B%22code%22%3A%22LIBRARY%20xeve%5CnEXPORTS%5Cn%C2%A0%20xeve_create%5Cn%C2%A0%20xeve_delete%5Cn%C2%A0%20xeve_push%5Cn%C2%A0%20xeve_encode%5Cn%C2%A0%20xeve_config%5Cn%C2%A0%20xeve_param_default%5Cn%C2%A0%20xeve_param_ppt%5Cn%C2%A0%20xeve_param_check%5Cn%C2%A0%20xeve_param_parse%22%2C%22classes%22%3Anull%7D" data-cke-widget-keep-attr="0" data-cke-widget-upcasted="1" data-widget="codeSnippet"><code class="hljs">LIBRARY xeve
EXPORTS
&nbsp; xeve_create
&nbsp; xeve_delete
&nbsp; xeve_push
&nbsp; xeve_encode
&nbsp; xeve_config
&nbsp; xeve_param_default
&nbsp; xeve_param_ppt
&nbsp; xeve_param_check
&nbsp; xeve_param_parse</code></pre>
</div>
<p>打开Visual Studio 2022，在欢迎页面单击右侧的“打开项目或解决方案”，在弹出的文件对话框中选择xeve-0.5.1\build目录下的XEVE.sln。<br>
打开xeve工程后，右击解决方案管理器的xeve_dynamic模块，右键菜单依次选择：属性→配置属性→链接器→输入，在窗口右侧的模块定义文件栏填写xeve.def的绝对路径。继续依次选择：配置属性→链接器→高级，在窗口右侧的导入库栏填写待生成xeve.lib的绝对路径。完成设置后，单击右下角的确定按钮，保存xeve.def和xeve.lib的路径配置。<br>
依次选择顶部菜单：生成→配置管理器，在打开的配置管理器窗口上，找到左上角的“活动解决方案配置”下拉框，把Debug模式改为Release模式，再单击窗口右下角的关闭按钮。<br>
依次选择顶部菜单：生成→生成→生成xeve_dynamic，Visual Studio就开始编译xeve_dynamic模块。编译过程可在Visual Studio界面下方观察，直到编译完成如下图所示。</p>
<p><span class="cke_widget_wrapper cke_widget_inline cke_widget_image cke_image_nocaption cke_widget_selected" data-cke-display-name="图像" data-cke-filter="off" data-cke-widget-id="9" data-cke-widget-wrapper="1"><span class="cke_reset cke_widget_drag_handler_container"><span class="cke_image_resizer" title="点击并拖拽以改变尺寸"><span class="cke_widget_edit_container" title="编辑图片"><img alt="" width="596" height="350" data-src="https://img2024.cnblogs.com/blog/729938/202507/729938-20250712124609076-1155965612.png" class="lazyload"></span></span></span></span></p>
<p>此时可在xeve-0.5.1\build\src_main\Release目录下找到xeve.lib和xeve.dll，这两个文件就是编译生成的libxeve库文件。</p>
<h1>六、安装libxeve</h1>
<p>确保Windows系统已经按照《FFmpeg开发实战：从零基础到短视频上线》第一章“1.3 &nbsp;Windows系统安装FFmpeg”的说明安装配置了MSYS，再按照以下步骤在MSYS环境安装libxeve。<br>
1、在msys64的/usr/local目录下新建libxeve目录，并在该目录下创建lib子目录；<br>
2、把xeve工程中build\src_main\Release目录下的xeve.lib和xeve.dll复制到第一步创建的lib目录；<br>
3、在lib目录下创建pkgconfig子目录，并把xeve工程的build\xeve.pc复制到pkgconfig目录；然后打开xeve.pc，把开头四行改成下面这样。</p>
<div class="cke_widget_wrapper cke_widget_block cke_widget_codeSnippet cke_widget_selected" data-cke-display-name="代码段" data-cke-filter="off" data-cke-widget-id="8" data-cke-widget-wrapper="1">
<pre class="cke_widget_element" data-cke-widget-data="%7B%22code%22%3A%22prefix%3D%2Fusr%2Flocal%2Flibxeve%5Cnexec_prefix%3D%24%7Bprefix%7D%2Fbin%5Cnlibdir%3D%24%7Bprefix%7D%2Flib%5Cnincludedir%3D%24%7Bprefix%7D%2Finclude%22%2C%22classes%22%3Anull%7D" data-cke-widget-keep-attr="0" data-cke-widget-upcasted="1" data-widget="codeSnippet"><code class="hljs">prefix=/usr/local/libxeve
exec_prefix=${prefix}/bin
libdir=${prefix}/lib
includedir=${prefix}/include</code></pre>
</div>
<p>4、在msys64的/usr/local/libxeve目录下创建include目录，然后把xeve工程中inc\xeve.h和build\xeve_exports.h复制到刚才创建的include目录；<br>
经过以上步骤操作后的libxeve目录结构如下所示。</p>
<div class="cke_widget_wrapper cke_widget_block cke_widget_codeSnippet cke_widget_selected" data-cke-display-name="代码段" data-cke-filter="off" data-cke-widget-id="7" data-cke-widget-wrapper="1">
<pre class="cke_widget_element" data-cke-widget-data="%7B%22code%22%3A%22%2Fusr%2Flocal%2Flibxeve%5Cn%C2%A0%7C---------------%20lib%5Cn%C2%A0%7C%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%7C-----%20xeve.lib%5Cn%C2%A0%7C%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%7C-----%20xeve.dll%5Cn%C2%A0%7C%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%7C-----%20pkgconfig%5Cn%C2%A0%7C%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%7C-----%20xeve.pc%5Cn%C2%A0%7C---------------%20include%5Cn%C2%A0%7C%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%7C-----%20xeve.h%5Cn%C2%A0%7C%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%7C-----%20xeve_exports.h%22%2C%22classes%22%3Anull%7D" data-cke-widget-keep-attr="0" data-cke-widget-upcasted="1" data-widget="codeSnippet"><code class="hljs">/usr/local/libxeve
&nbsp;|--------------- lib
&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |----- xeve.lib
&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |----- xeve.dll
&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |----- pkgconfig
&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |----- xeve.pc
&nbsp;|--------------- include
&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |----- xeve.h
&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |----- xeve_exports.h</code></pre>
</div>
<h1>七、编译安装FFmpeg</h1>
<p>先下载最新的FFmpeg源码（版本号需大于等于7.0），再把FFmpeg源码包复制到MSYS环境的/usr/local/src目录下。接着在MSYS控制台执行下面命令解压源码包：</p>
<div class="cke_widget_wrapper cke_widget_block cke_widget_codeSnippet cke_widget_selected" data-cke-display-name="代码段" data-cke-filter="off" data-cke-widget-id="6" data-cke-widget-wrapper="1">
<pre class="cke_widget_element" data-cke-widget-data="%7B%22code%22%3A%22cd%20%2Fusr%2Flocal%2Fsrc%5Cnunzip%20ffmpeg-n7.1.1.zip%22%2C%22classes%22%3Anull%7D" data-cke-widget-keep-attr="0" data-cke-widget-upcasted="1" data-widget="codeSnippet"><code class="hljs">cd /usr/local/src
unzip ffmpeg-n7.1.1.zip</code></pre>
</div>
<p>确保MSYS环境已经按照《FFmpeg开发实战：从零基础到短视频上线》该书第八章的“8.1.1 &nbsp;给FFmpeg集成x264”和“8.1.5 &nbsp;给FFmpeg集成x265”安装了H.264的编码器libx264和H.265的编码器libx265，也按照该书第十章的“10.1.1 &nbsp;FFmpeg集成SDL”安装了Windows系统的SDL2库，并且按照之前的文章安装了H.266的编码器libvvenc，然后执行下面命令配置FFmpeg的编译环境：</p>
<div class="cke_widget_wrapper cke_widget_block cke_widget_codeSnippet cke_widget_selected" data-cke-display-name="代码段" data-cke-filter="off" data-cke-widget-id="5" data-cke-widget-wrapper="1">
<pre class="cke_widget_element" data-cke-widget-data="%7B%22code%22%3A%22cd%20ffmpeg-n7.1.1%5Cnexport%20PKG_CONFIG_PATH%3D%2Fusr%2Flocal%2Flibxevd%2Flib%2Fpkgconfig%3A%24PKG_CONFIG_PATH%5Cn.%2Fconfigure%20--prefix%3D%2Fusr%2Flocal%2Fffmpeg%20--arch%3Dx86_64%20--enable-shared%20--disable-static%20--disable-doc%20--enable-libx264%20--enable-libx265%20--enable-libvvenc%20--enable-liblc3%20--enable-librist%20--enable-libdav1d%20--enable-libaom%20--enable-libsvtav1%20--enable-libxevd%20--enable-libxeve%20--enable-sdl2%20--enable-gpl%20--enable-nonfree%20--enable-iconv%20--enable-zlib%20--cross-prefix%3Dx86_64-w64-mingw32-%20--target-os%3Dmingw32%22%2C%22classes%22%3Anull%7D" data-cke-widget-keep-attr="0" data-cke-widget-upcasted="1" data-widget="codeSnippet"><code class="hljs">cd ffmpeg-n7.1.1
export PKG_CONFIG_PATH=/usr/local/libxevd/lib/pkgconfig:$PKG_CONFIG_PATH
./configure --prefix=/usr/local/ffmpeg --arch=x86_64 --enable-shared --disable-static --disable-doc --enable-libx264 --enable-libx265 --enable-libvvenc --enable-liblc3 --enable-librist --enable-libdav1d --enable-libaom --enable-libsvtav1 --enable-libxevd --enable-libxeve --enable-sdl2 --enable-gpl --enable-nonfree --enable-iconv --enable-zlib --cross-prefix=x86_64-w64-mingw32- --target-os=mingw32</code></pre>
</div>
<p>配置完毕执行下面命令编译和安装FFmpeg，编译完成的ffmpeg库将会安装到configure指定的/usr/local/ffmpeg目录。</p>
<div class="cke_widget_wrapper cke_widget_block cke_widget_codeSnippet cke_widget_selected" data-cke-display-name="代码段" data-cke-filter="off" data-cke-widget-id="4" data-cke-widget-wrapper="1">
<pre class="cke_widget_element" data-cke-widget-data="%7B%22code%22%3A%22make%5Cnmake%20install%5Cncp%20%2Fusr%2Flocal%2Flibxevd%2Flib%2Fxevd.dll%20%2Fusr%2Flocal%2Fffmpeg%2Fbin%5Cncp%20%2Fusr%2Flocal%2Flibxeve%2Flib%2Fxeve.dll%20%2Fusr%2Flocal%2Fffmpeg%2Fbin%22%2C%22classes%22%3Anull%7D" data-cke-widget-keep-attr="0" data-cke-widget-upcasted="1" data-widget="codeSnippet"><code class="hljs">make
make install
cp /usr/local/libxevd/lib/xevd.dll /usr/local/ffmpeg/bin
cp /usr/local/libxeve/lib/xeve.dll /usr/local/ffmpeg/bin</code></pre>
</div>
<h1>八、查看FFmpeg的安装结果</h1>
<p>运行下面命令查看FFmpeg的安装版本：</p>
<div class="cke_widget_wrapper cke_widget_block cke_widget_codeSnippet cke_widget_selected" data-cke-display-name="代码段" data-cke-filter="off" data-cke-widget-id="3" data-cke-widget-wrapper="1">
<pre class="cke_widget_element" data-cke-widget-data="%7B%22code%22%3A%22ffmpeg%20-version%22%2C%22classes%22%3Anull%7D" data-cke-widget-keep-attr="0" data-cke-widget-upcasted="1" data-widget="codeSnippet"><code class="hljs">ffmpeg -version</code></pre>
</div>
<p>上面命令返回的FFmpeg版本信息如下：</p>
<div class="cke_widget_wrapper cke_widget_block cke_widget_codeSnippet cke_widget_selected" data-cke-display-name="代码段" data-cke-filter="off" data-cke-widget-id="2" data-cke-widget-wrapper="1">
<pre class="cke_widget_element" data-cke-widget-data="%7B%22code%22%3A%22ffmpeg%20version%207.1.1%20Copyright%20(c)%202000-2025%20the%20FFmpeg%20developers%5Cnbuilt%20with%20gcc%2012.2.0%20(Rev10%2C%20Built%20by%20MSYS2%20project)%5Cnconfiguration%3A%20--prefix%3D%2Fusr%2Flocal%2Fffmpeg%20--arch%3Dx86_64%20--enable-shared%20--disable-static%20--disable-doc%20--enable-libx264%20--enable-libx265%20--enable-libvvenc%20--enable-liblc3%20--enable-librist%20--enable-libdav1d%20--enable-libaom%20--enable-libsvtav1%20--enable-libxevd%20--enable-libxeve%20--enable-sdl2%20--enable-gpl%20--enable-nonfree%20--enable-iconv%20--enable-zlib%20--cross-prefix%3Dx86_64-w64-mingw32-%20--target-os%3Dmingw32%5Cnlibavutil%20%C2%A0%20%C2%A0%20%C2%A059.%2039.100%20%2F%2059.%2039.100%5Cnlibavcodec%20%C2%A0%20%C2%A0%2061.%2019.101%20%2F%2061.%2019.101%5Cnlibavformat%20%C2%A0%20%C2%A061.%20%C2%A07.100%20%2F%2061.%20%C2%A07.100%5Cnlibavdevice%20%C2%A0%20%C2%A061.%20%C2%A03.100%20%2F%2061.%20%C2%A03.100%5Cnlibavfilter%20%C2%A0%20%C2%A010.%20%C2%A04.100%20%2F%2010.%20%C2%A04.100%5Cnlibswscale%20%C2%A0%20%C2%A0%20%C2%A08.%20%C2%A03.100%20%2F%20%C2%A08.%20%C2%A03.100%5Cnlibswresample%20%C2%A0%205.%20%C2%A03.100%20%2F%20%C2%A05.%20%C2%A03.100%5Cnlibpostproc%20%C2%A0%20%C2%A058.%20%C2%A03.100%20%2F%2058.%20%C2%A03.100%22%2C%22classes%22%3Anull%7D" data-cke-widget-keep-attr="0" data-cke-widget-upcasted="1" data-widget="codeSnippet"><code class="hljs">ffmpeg version 7.1.1 Copyright (c) 2000-2025 the FFmpeg developers
built with gcc 12.2.0 (Rev10, Built by MSYS2 project)
configuration: --prefix=/usr/local/ffmpeg --arch=x86_64 --enable-shared --disable-static --disable-doc --enable-libx264 --enable-libx265 --enable-libvvenc --enable-liblc3 --enable-librist --enable-libdav1d --enable-libaom --enable-libsvtav1 --enable-libxevd --enable-libxeve --enable-sdl2 --enable-gpl --enable-nonfree --enable-iconv --enable-zlib --cross-prefix=x86_64-w64-mingw32- --target-os=mingw32
libavutil &nbsp; &nbsp; &nbsp;59. 39.100 / 59. 39.100
libavcodec &nbsp; &nbsp; 61. 19.101 / 61. 19.101
libavformat &nbsp; &nbsp;61. &nbsp;7.100 / 61. &nbsp;7.100
libavdevice &nbsp; &nbsp;61. &nbsp;3.100 / 61. &nbsp;3.100
libavfilter &nbsp; &nbsp;10. &nbsp;4.100 / 10. &nbsp;4.100
libswscale &nbsp; &nbsp; &nbsp;8. &nbsp;3.100 / &nbsp;8. &nbsp;3.100
libswresample &nbsp; 5. &nbsp;3.100 / &nbsp;5. &nbsp;3.100
libpostproc &nbsp; &nbsp;58. &nbsp;3.100 / 58. &nbsp;3.100</code></pre>
</div>
<p>根据以上返回的版本信息，可知已安装的FFmpeg版本号为7.1.1，同时configuration这行找到“--enable-libxevd --enable-libxeve”，说明FFmpeg已经启用了MPEG-5 EVC视频编解码器libxevd和libxeve。</p>
<p>更多详细的FFmpeg开发知识参见<span class="cke_widget_wrapper cke_widget_inline cke_widget_csdnlink cke_widget_selected" data-cke-display-name="a" data-cke-filter="off" data-cke-widget-id="1" data-cke-widget-wrapper="1"><a class="cke_widget_editable cke_widget_element" title="《FFmpeg开发实战：从零基础到短视频上线》" href="https://item.jd.com/14020415.html" data-cke-enter-mode="2" data-cke-saved-href="https://item.jd.com/14020415.html" data-cke-widget-data="%7B%22url%22%3A%22https%3A%2F%2Fitem.jd.com%2F14020415.html%22%2C%22text%22%3A%22%E3%80%8AFFmpeg%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98%EF%BC%9A%E4%BB%8E%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%88%B0%E7%9F%AD%E8%A7%86%E9%A2%91%E4%B8%8A%E7%BA%BF%E3%80%8B%22%2C%22desc%22%3A%22%22%2C%22icon%22%3A%22%22%2C%22isCard%22%3Afalse%2C%22hasResquest%22%3Atrue%2C%22iconDefault%22%3A%22https%3A%2F%2Fcsdnimg.cn%2Frelease%2Fblog_editor_html%2Frelease2.3.9%2Fckeditor%2Fplugins%2FCsdnLink%2Ficons%2Ficon-default.png%3Ft%3DP4F5%22%2C%22id%22%3A%22m1RJFY-1752295417528%22%2C%22classes%22%3Anull%7D" data-cke-widget-editable="text" data-cke-widget-keep-attr="0" data-cke-widget-upcasted="1" data-link-icon="https://csdnimg.cn/release/blog_editor_html/release2.3.9/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=P4F5" data-link-title="《FFmpeg开发实战：从零基础到短视频上线》" data-widget="csdnlink" rel="noopener nofollow">《FFmpeg开发实战：从零基础到短视频上线》</a>一书。</span></p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-12 12:49">2025-07-12 12:48</span>&nbsp;
<a href="https://www.cnblogs.com/aqi00">aqi00</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18980438);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18980438', targetLink: 'https://www.cnblogs.com/aqi00/p/18980438', title: 'FFmpeg开发笔记（七十三）Windows给FFmpeg集成MPEG-5视频编解码器' })">举报</a>
</div>
        