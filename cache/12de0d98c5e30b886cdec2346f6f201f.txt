
        <div class="postTitle">
            <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/YYJJ1/p/18734332" title="发布于 2025-02-24 16:16">
    <span role="heading" aria-level="2">使用C#连接MQTT 进行数据接收和数据处理，QoS1 持久会话模式 解决服务掉选数据丢失问题</span>
    

</a>

        </div>
        <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>1、准备工作</p>
<p>在开始写代码之前，我们先要准备下写程序的</p>
<p>　　基础信息：MQTT地址、OrgID(机构ID)、API访问密钥</p>
<p>　　连接模式：QoS1, 持久会话 ，防止服务掉选数据丢失问题，具体模式根据实际情况而定</p>
<p>2、我们先创建个C#的控制台应用程序，然后写入以下代码：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 创建MQTT客户端工厂</span>
       <span style="color: rgba(0, 0, 255, 1)">var</span> mqttFactory = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> MqttFactory();
       </span><span style="color: rgba(0, 0, 255, 1)">var</span> mqttClient =<span style="color: rgba(0, 0, 0, 1)"> mqttFactory.CreateMqttClient();
 
       </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 配置MQTT客户端选项</span>
       <span style="color: rgba(0, 0, 255, 1)">var</span> options = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> MqttClientOptionsBuilder()
           .WithClientId(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">org-机构id-quickstart</span><span style="color: rgba(128, 0, 0, 1)">"</span>)  <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 修改客户端ID</span>
           .WithTcpServer(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">服务器地址</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(128, 0, 128, 1)">1883</span>) <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 修改服务器地址，使用默认端口</span>
           .WithCredentials(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">org-机构id</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">秘钥</span><span style="color: rgba(128, 0, 0, 1)">"</span>) <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 修改用户名</span>
           .WithCleanSession(<span style="color: rgba(0, 0, 255, 1)">false</span>)  <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 添加这行，不清除会话</span>
           .Build(); <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 移除 TLS 配置，因为使用的是普通连接</span>
 
       <span style="color: rgba(0, 0, 255, 1)">try</span><span style="color: rgba(0, 0, 0, 1)">
       {
           </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 添加连接状态处理</span>
           mqttClient.UseDisconnectedHandler(<span style="color: rgba(0, 0, 255, 1)">async</span> e =&gt;<span style="color: rgba(0, 0, 0, 1)">
           {
               Console.WriteLine(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">已断开连接！正在尝试重新连接...</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
               </span><span style="color: rgba(0, 0, 255, 1)">await</span> Task.Delay(TimeSpan.FromSeconds(<span style="color: rgba(128, 0, 128, 1)">5</span><span style="color: rgba(0, 0, 0, 1)">));
               </span><span style="color: rgba(0, 0, 255, 1)">try</span><span style="color: rgba(0, 0, 0, 1)">
               {
                   </span><span style="color: rgba(0, 0, 255, 1)">await</span><span style="color: rgba(0, 0, 0, 1)"> mqttClient.ConnectAsync(options);
               }
               </span><span style="color: rgba(0, 0, 255, 1)">catch</span><span style="color: rgba(0, 0, 0, 1)">
               {
                   Console.WriteLine(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">重新连接失败</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
               }
           });
 
           </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 修改订阅主题以匹配您的格式</span>
           <span style="color: rgba(0, 0, 255, 1)">string</span> topic = <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">/device_sensor_data/机构id/+/+/+/+</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;
            
           </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 添加订阅处理</span>
           mqttClient.UseApplicationMessageReceivedHandler(e =&gt;<span style="color: rgba(0, 0, 0, 1)">
           {
               </span><span style="color: rgba(0, 0, 255, 1)">string</span> payload =<span style="color: rgba(0, 0, 0, 1)"> Encoding.UTF8.GetString(e.ApplicationMessage.Payload);
               </span><span style="color: rgba(0, 0, 255, 1)">string</span> topic = e.ApplicationMessage.Topic ?? <span style="color: rgba(128, 0, 0, 1)">""</span><span style="color: rgba(0, 0, 0, 1)">;
                
               </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 解析主题数据</span>
               <span style="color: rgba(0, 0, 255, 1)">string</span>[] topicParts = topic.Split(<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">/</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">);
               </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">将解析后的出具进行处理&lt;br&gt;</span>
<span style="color: rgba(0, 0, 0, 1)">           });
 
           </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 修改订阅配置</span>
           <span style="color: rgba(0, 0, 255, 1)">var</span> subscribeOptions = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> MqttClientSubscribeOptionsBuilder()
               .WithTopicFilter(topic, MqttQualityOfServiceLevel.AtLeastOnce)
               .Build();
 
           </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 连接后进行订阅</span>
           <span style="color: rgba(0, 0, 255, 1)">await</span><span style="color: rgba(0, 0, 0, 1)"> mqttClient.ConnectAsync(options);
           </span><span style="color: rgba(0, 0, 255, 1)">await</span><span style="color: rgba(0, 0, 0, 1)"> mqttClient.SubscribeAsync(subscribeOptions);
           Console.WriteLine(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">已成功连接并订阅主题 (QoS1, 持久会话)</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
 
 
           </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 保持程序运行</span>
           Console.WriteLine(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">按任意键退出...</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
           Console.ReadKey();
 
           </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 断开连接</span>
           <span style="color: rgba(0, 0, 255, 1)">await</span><span style="color: rgba(0, 0, 0, 1)"> mqttClient.DisconnectAsync();
       }
       </span><span style="color: rgba(0, 0, 255, 1)">catch</span><span style="color: rgba(0, 0, 0, 1)"> (Exception ex)
       {
           Console.WriteLine($</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">发生错误: {ex.Message}</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
       }</span></pre>
</div>
<p>4、以下是程序接收到数据后的截图</p>
<p><img src="https://img2024.cnblogs.com/blog/1394932/202502/1394932-20250224161536531-1491084436.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

        <div class="postDesc">posted on 
<span id="post-date" data-last-update-days="7.0846020768483795" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-24 16:16">2025-02-24 16:16</span>&nbsp;
<a href="https://www.cnblogs.com/YYJJ1">水。</a>&nbsp;
阅读(<span id="post_view_count">57</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18734332" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18734332);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18734332', targetLink: 'https://www.cnblogs.com/YYJJ1/p/18734332', title: '使用C#连接MQTT 进行数据接收和数据处理，QoS1 持久会话模式 解决服务掉选数据丢失问题' })">举报</a>
</div>
    