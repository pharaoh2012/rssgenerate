
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/mingupupu/p/19026683" title="发布于 2025-08-07 12:33">
    <span role="heading" aria-level="2">规格驱动开发MCP初探</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="规格驱动开发">规格驱动开发</h2>
<p>规范驱动开发，简而言之，是一种软件开发过程，在整个开发工作流程中，清晰、详细的规范作为核心驱动力。这些规范涵盖了软件系统的各个层面，包括功能需求、性能指标、接口定义和数据格式，如同建筑中的蓝图，明确地勾勒出最终软件应该呈现的样子，供开发者参考。</p>
<p>规范驱动开发的核心是通过标准化的规范文档，将模糊的需求转化为可执行、可追溯、可验证的开发过程。实质上，它将传统软件工程的严谨性融入到AI编程中，将开发从“感觉编码”（依赖直觉）转变为可控的工程过程。</p>
<p>规范驱动开发的关键在于“Spec文件夹”——每个功能模块对应一个Spec文件夹，其中包含3个核心文件，将需求、设计和任务“具体化”：</p>
<ol>
<li>requirements.md（需求文档）——使用EARS语法（Easy Approach to Requirements Syntax）编写用户故事和验收标准，避免模糊表述。</li>
<li>design.md（技术方案）——包括架构设计、流程逻辑、技术选型和潜在风险等细节。</li>
<li>tasks.md（任务清单）——将技术方案分解为可执行的具体任务（待办事项列表）。</li>
</ol>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202508/3288240-20250807123310125-439541948.png" class="lazyload"></p>
<h2 id="spec-coding-mcp-项目介绍">spec-coding-mcp 项目介绍</h2>
<p>将功能想法系统地转化为生产就绪的代码，通过规范驱动的开发方法。</p>
<p><img alt="image-20250806224711279" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202508/3288240-20250807123309531-82322713.png" class="lazyload"></p>
<p>项目地址：<a href="https://github.com/feiyun0112/spec-coding-mcp" target="_blank" rel="noopener nofollow">https://github.com/feiyun0112/spec-coding-mcp</a></p>
<p>把项目拉下来之后，如果没有.NET10也可以换成.NET8，在成功运行之后，就可以到MCP客户端中配置。</p>
<p>这里我选择的是Roo Code，是直接通过exe的方式配置的。</p>
<pre><code class="language-json">{
  "mcpServers": {
     "SpecCodingMcpServer": {
      "disabled": false,
      "timeout": 60,
      "type": "stdio",
      "command": "...\\bin\\Debug\\net8.0\\SpecCodingMcpServer.exe",
      "args": []
    }
  }
}
</code></pre>
<p>配置成功如下所示：</p>
<p><img alt="image-20250806225236137" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202508/3288240-20250807123309542-2086597245.png" class="lazyload"></p>
<p>输入 Start Spec Coding即可开始进行规格驱动开发。</p>
<p><img alt="image-20250806225336380" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202508/3288240-20250807123309530-64344755.png" class="lazyload"></p>
<p>理解需求：</p>
<p><img alt="image-20250806225352969" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202508/3288240-20250807123309572-712931659.png" class="lazyload"></p>
<p><img alt="image-20250806225412504" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202508/3288240-20250807123309516-319180601.png" class="lazyload"></p>
<p>编写需求文档：</p>
<p><img alt="image-20250806225429717" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202508/3288240-20250807123309538-1236960560.png" class="lazyload"></p>
<p><img alt="image-20250806225444883" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202508/3288240-20250807123309694-1462446994.png" class="lazyload"></p>
<p><img alt="image-20250806225540504" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202508/3288240-20250807123309512-1109446691.png" class="lazyload"></p>
<p><img alt="image-20250806225559210" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202508/3288240-20250807123309549-1889718922.png" class="lazyload"></p>
<p>就大概截这些图，会生成一个文件夹，文件夹下面有下面几个内容。</p>
<p><img alt="image-20250806225839928" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202508/3288240-20250807123309477-1713078160.png" class="lazyload"></p>
<p>需求文档：</p>
<p><img alt="image-20250806225811093" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202508/3288240-20250807123309559-343481035.png" class="lazyload"></p>
<p>任务列表：</p>
<p><img alt="image-20250806225904896" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202508/3288240-20250807123309575-2100712188.png" class="lazyload"></p>
<p>测试文档：</p>
<p><img alt="image-20250806225953471" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202508/3288240-20250807123309686-63457531.png" class="lazyload"></p>
<p>还有设计文档，但是这个我的变没了，补上另一次使用的：</p>
<p><img alt="image-20250806230123591" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202508/3288240-20250807123309776-1765908996.png" class="lazyload"></p>
<p>最后还会生成一个README:</p>
<p><img alt="image-20250806230207911" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3288240/202508/3288240-20250807123309546-199438289.png" class="lazyload"></p>
<p>整体体验下来的感觉就是如果一个功能要实现成什么样子你本身并不是很清楚，并且在使用AI很多次了还没成功实现，不妨试试规格驱动开发，还是有一定帮助的。当然现在的AI已经很强了，一般的需求好像直接也能做，不需要都要使用规格驱动开发。</p>
<p>下次来探索一下规格驱动开发MCP的提示词，这应该是这个项目的核心内容了。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-08-07 12:34">2025-08-07 12:33</span>&nbsp;
<a href="https://www.cnblogs.com/mingupupu">mingupupup</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19026683);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19026683', targetLink: 'https://www.cnblogs.com/mingupupu/p/19026683', title: '规格驱动开发MCP初探' })">举报</a>
</div>
        