
        <h2>
            <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lanboal/p/19064606" title="发布于 2025-08-29 15:30">
    <span role="heading" aria-level="2">Woody：开源Java应用性能诊断分析工具</span>
    

</a>

        </h2>
        <div class="postbody">
            <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="核心价值">核心价值</h2>
<p>Woody是一款专注于Java应用性能问题诊断的工具，旨在帮助开发者</p>
<ol>
<li>定位定位高GC频率问题，识别内存分配热点</li>
<li>分析CPUCPU使用率过高的代码路径</li>
<li>追踪接口耗时瓶颈，定位内部操作耗时占比</li>
<li>诊断锁竞争问题，支持精准优化</li>
<li>针对特定业务接口/请求的性能问题（CPU、内存、耗时）进行深度分析</li>
</ol>
<h2 id="代码仓库">代码仓库</h2>
<p><a href="https://github.com/happy-profiler/woody" target="_blank" rel="noopener nofollow">https://github.com/happy-profiler/woody</a><br>
目前发布第一版，后续会不断丰富功能，不断完善，欢迎感兴趣同行使用，提建议，bug，issue和pr。</p>
<h2 id="适用环境">适用环境</h2>
<ul>
<li><strong>JDK版本</strong>：支持JDK 1.8及以上</li>
<li><strong>操作系统</strong>：
<ul>
<li>macOS</li>
<li>Linux x64/arm64</li>
</ul>
</li>
<li>低版本JDK和其他操作系统暂不支持</li>
</ul>
<h2 id="核心特性">核心特性</h2>
<ul>
<li>基于命令行交互，集成async-profiler生成采样样本和火焰图</li>
<li>实现业务请求与火焰图样本的精确关联</li>
<li>支持手动过滤无关业务入口，提高采样精准率</li>
<li>极低性能损耗，适合生产环境使用</li>
<li>代码少量借鉴自Arthas</li>
</ul>
<h2 id="支持中间件">支持中间件</h2>
<ol>
<li>SpringMVC</li>
<li>Dubbo</li>
<li>Grpc</li>
<li>Kafka</li>
<li>RocketMQ</li>
</ol>
<blockquote>
<p>后续将持续扩展支持更多中间件</p>
</blockquote>
<h2 id="快速开始">快速开始</h2>
<ol>
<li>从项目release页面下载最新版本的<code>woody-boot-xxx.jar</code></li>
<li>启动工具：<pre><code class="language-bash">java -jar woody-boot-1.0.0.jar
</code></pre>
</li>
<li>选择目标Java进程编号，进入命令交互界面，输入stop结束退出</li>
</ol>
<p><img alt="在这里插入图片描述" loading="lazy" data-src="https://i-blog.csdnimg.cn/direct/3189eeb135b940858d2234a0cc3e72a9.png#pic_center" class="lazyload"></p>
<h2 id="命令参考">命令参考</h2>
<p>单横杠<code>-</code>表示命令操作，双横杠<code>--</code>表示参数，后续要接参数值</p>
<h3 id="prprofiling-resource--选择分析的业务入口">pr（profiling resource）- 选择分析的业务入口</h3>
<p>用于指定需要分析的业务入口资源，可同时选择多种中间件的多个入口。</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-ls</td>
<td>列举当前应用的所有业务入口资源</td>
</tr>
<tr>
<td>-lt</td>
<td>列举当前应用支持的业务资源类型</td>
</tr>
<tr>
<td>-s</td>
<td>选择业务入口资源</td>
</tr>
<tr>
<td>-us</td>
<td>移除已选中的业务入口资源</td>
</tr>
<tr>
<td>-lst</td>
<td>列举已选择的业务入口资源类型列表（未选择时为空）</td>
</tr>
<tr>
<td>-lss</td>
<td>列举已选择的业务入口资源</td>
</tr>
<tr>
<td>--type</td>
<td>指定中间件类型（支持上述5种类型）</td>
</tr>
<tr>
<td>--order</td>
<td>指定中间件业务入口的资源编号（多编号用英文逗号分隔）<br>不指定时表示选择该类型的所有入口资源</td>
</tr>
</tbody>
</table>
<p><img alt="在这里插入图片描述" loading="lazy" data-src="https://i-blog.csdnimg.cn/direct/62d672cd17d44bdd8a67b7c306cf41d2.png#pic_center" class="lazyload"></p>
<h3 id="peprofiling-event--选择采集事件类型">pe（profiling event）- 选择采集事件类型</h3>
<p>用于指定需要采集的性能事件类型，对应async-profiler的4种火焰图类型。</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-l</td>
<td>列举当前应用支持的事件类型<br>（注：部分应用可能不支持alloc，取决于JDK版本和操作系统）</td>
</tr>
<tr>
<td>-s</td>
<td>选择要采集的事件类型</td>
</tr>
<tr>
<td>--cpu</td>
<td>CPU事件，参数为采样间隔（ms）</td>
</tr>
<tr>
<td>--alloc</td>
<td>内存分配事件，参数为采样阈值（kb）</td>
</tr>
<tr>
<td>--wall</td>
<td>耗时事件，参数为采样间隔（ms）</td>
</tr>
<tr>
<td>--lock</td>
<td>锁竞争事件，参数为采样间隔（ms）</td>
</tr>
<tr>
<td>-c</td>
<td>清除已选中的事件类型</td>
</tr>
</tbody>
</table>
<blockquote>
<p>支持同时选择多个事件类型，将生成对应类型的火焰图</p>
</blockquote>
<p><img alt="在这里插入图片描述" loading="lazy" data-src="https://i-blog.csdnimg.cn/direct/7bc78d1a577c40eda23d65b2b81fde0b.png#pic_center" class="lazyload"></p>
<h3 id="pfprofiling--操作性能分析过程">pf（profiling）- 操作性能分析过程</h3>
<p>用于控制async-profiler的启动、停止和状态查询。</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>start</td>
<td>启动性能分析<br>（启动后需在30秒内触发已选择的业务入口请求，否则启动失败）</td>
</tr>
<tr>
<td>stop</td>
<td>结束性能分析</td>
</tr>
<tr>
<td>status</td>
<td>查询当前性能分析状态（未运行/已运行时长）</td>
</tr>
<tr>
<td>--duration</td>
<td>设置分析持续时间（秒），时间到后自动结束<br>（非必须，可通过stop命令提前结束）</td>
</tr>
<tr>
<td>--file</td>
<td>指定分析结束后生成的火焰图文件名<br>（默认生成在工具运行目录，多事件时会自动添加类型前缀）<br>（未指定时，采样结果将被缓存，供ts命令使用）</td>
</tr>
</tbody>
</table>
<p><img alt="在这里插入图片描述" loading="lazy" data-src="https://i-blog.csdnimg.cn/direct/deb7317be06048bda7727809b53810ac.png#pic_center" class="lazyload"></p>
<p><img alt="在这里插入图片描述" loading="lazy" data-src="https://i-blog.csdnimg.cn/direct/13e5cba97d144a5c8ddd66d80a5de8d1.png#pic_center" class="lazyload"></p>
<h3 id="tstrace-sample--检索分析业务请求和样本生成火焰图">ts（trace sample）- 检索分析业务请求和样本，生成火焰图</h3>
<p>用于检索性能分析样本，支持通过traceId定位特定请求，或查看资源消耗TopN的请求。</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-l</td>
<td>列出采样样本（需配合--id或--top参数）</td>
</tr>
<tr>
<td>-f</td>
<td>生成火焰图（需配合--id或--top参数）</td>
</tr>
<tr>
<td>-c</td>
<td>清除缓存的前次分析样本数据</td>
</tr>
<tr>
<td>--file</td>
<td>指定生成的火焰图文件名（配合-f参数使用）</td>
</tr>
<tr>
<td>--event</td>
<td>指定分析事件类型<br>（当pe命令选择多个事件时必须指定，单个事件时可省略）</td>
</tr>
<tr>
<td>--id</td>
<td>指定traceId（业务请求唯一标识），检索对应请求的样本</td>
</tr>
<tr>
<td>--top</td>
<td>指定数量N，检索资源消耗最多的前N个请求ID<br>（将显示样本数量、起止时间等信息）</td>
</tr>
</tbody>
</table>
<blockquote>
<p>traceId默认生成规则：1~Long.MAX_VALUE间的随机数<br><br>
可通过修改<code>ParametricIdGenerator</code>实现自定义traceId生成逻辑（从业务上下文/参数/入口对象提取），下个版本可通过命令及表达式从业务请求生成</p>
</blockquote>
<p><img alt="在这里插入图片描述" loading="lazy" data-src="https://i-blog.csdnimg.cn/direct/6e9b9e0a724042f5b87c7b8eb71c3f18.png#pic_center" class="lazyload"><br>
<img alt="在这里插入图片描述" loading="lazy" data-src="https://i-blog.csdnimg.cn/direct/641bb4a69ead4a89aaa7c16ed55d51c3.png#pic_center" class="lazyload"><br>
<img alt="在这里插入图片描述" loading="lazy" data-src="https://i-blog.csdnimg.cn/direct/d82c36e9447e4ee49ce79909831c4966.png" class="lazyload"></p>
<h2 id="如何本地编译及调试">如何本地编译及调试</h2>
<p>本地编译: clone工程，执行 <code>mvn clean package -DskipTests</code> ，boot模块生成的jar包就是工具包，直接运行即可</p>
<p>调试: 待分析应用添加远程debug参数和端口 <code>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005 -Xdebug</code> ，woody工程直接远程关联debug即可</p>
<h2 id="火焰图查看">火焰图查看</h2>
<p>火焰图的具体查看方法请参考相关文档或通过AI工具学习。</p>

</div>
<div class="clear"></div>

        </div>
        <p class="postfoot">
            posted on 
<span id="post-date" data-last-update-days="0.011111111111111112" data-date-updated="2025-08-29 15:46">2025-08-29 15:30</span>&nbsp;
<a href="https://www.cnblogs.com/lanboal">lanboal</a>&nbsp;
阅读(<span id="post_view_count">163</span>)&nbsp;
评论(<span id="post_comment_count">1</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19064606);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19064606', targetLink: 'https://www.cnblogs.com/lanboal/p/19064606', title: 'Woody：开源Java应用性能诊断分析工具' })">举报</a>

        </p>
    