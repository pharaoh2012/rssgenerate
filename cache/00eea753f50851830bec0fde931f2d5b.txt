
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/exmyth/p/18625325" title="发布于 2024-12-23 23:55">
    <span role="heading" aria-level="2">arm mattermost</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p dir="auto">It's not so hard, here is my working steps for arm64 device.</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto">
<pre class="notranslate"><span class="pl-c1">cd <span class="pl-k">~/build/mattermost
wget https://raw.githubusercontent.com/mattermost/mattermost/master/server/build/entrypoint.sh</span></span></pre>
<div class="zeroclipboard-container position-absolute right-0 top-0">&nbsp;</div>
</div>
<p dir="auto">Create a Dockerfile and edit version&nbsp;<code class="notranslate">9.2.1</code>&nbsp;to match your need.</p>
<div class="highlight highlight-source-dockerfile notranslate position-relative overflow-auto" dir="auto">
<pre class="notranslate"><span class="pl-k">FROM ubuntu:jammy

<span class="pl-c"><span class="pl-c"># Setting bash as our shell, and enabling pipefail option
<span class="pl-k">SHELL [<span class="pl-s">"/bin/bash", <span class="pl-s">"-o", <span class="pl-s">"pipefail", <span class="pl-s">"-c"]

<span class="pl-c"><span class="pl-c"># Some ENV variables
<span class="pl-k">ENV PATH=<span class="pl-s">"/mattermost/bin:${PATH}"
<span class="pl-k">ARG PUID=2000
<span class="pl-k">ARG PGID=2000
<span class="pl-k">ARG MM_PACKAGE=<span class="pl-s">"https://releases.mattermost.com/9.2.1/mattermost-9.2.1-linux-arm64.tar.gz?src=docker"

<span class="pl-c"><span class="pl-c"># # Install needed packages and indirect dependencies
<span class="pl-k">RUN apt-get update \
  &amp;&amp; DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \
  ca-certificates \
  curl \
  mime-support \
  unrtf \
  wv \
  poppler-utils \
  tidy \
  tzdata \
  &amp;&amp; rm -rf /var/lib/apt/lists/*

<span class="pl-c"><span class="pl-c"># Set mattermost group/user and download Mattermost
<span class="pl-k">RUN mkdir -p /mattermost/data /mattermost/plugins /mattermost/client/plugins \
  &amp;&amp; addgroup -gid ${PGID} mattermost \
  &amp;&amp; adduser -q --disabled-password --uid ${PUID} --gid ${PGID} --gecos <span class="pl-s">"" --home /mattermost mattermost \
  &amp;&amp; if [ -n <span class="pl-s">"$MM_PACKAGE" ]; then curl $MM_PACKAGE | tar -xvz ; \
  else echo <span class="pl-s">"please set the MM_PACKAGE" ; exit 127 ; fi \
  &amp;&amp; chown -R mattermost:mattermost /mattermost /mattermost/data /mattermost/plugins /mattermost/client/plugins

<span class="pl-c"><span class="pl-c"># We should refrain from running as privileged user
<span class="pl-k">USER mattermost

<span class="pl-c"><span class="pl-c">#Healthcheck to make sure container is ready
<span class="pl-k">HEALTHCHECK --interval=30s --timeout=10s \
  <span class="pl-k">CMD curl -f http://localhost:8065/api/v4/system/ping || exit 1

<span class="pl-c"><span class="pl-c"># Configure entrypoint and command
<span class="pl-k">COPY --chown=mattermost:mattermost --chmod=765 entrypoint.sh /
<span class="pl-k">ENTRYPOINT [<span class="pl-s">"/entrypoint.sh"]
<span class="pl-k">WORKDIR /mattermost
<span class="pl-k">CMD [<span class="pl-s">"mattermost"]

<span class="pl-k">EXPOSE 8065 8067 8074 8075

<span class="pl-c"><span class="pl-c"># Declare volumes for mount point directories
<span class="pl-k">VOLUME [<span class="pl-s">"/mattermost/data", <span class="pl-s">"/mattermost/logs", <span class="pl-s">"/mattermost/config", <span class="pl-s">"/mattermost/plugins", <span class="pl-s">"/mattermost/client/plugins"]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
<div class="zeroclipboard-container position-absolute right-0 top-0">&nbsp;</div>
</div>
<p dir="auto">Build arm64 docker image</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto">
<pre class="notranslate"><code class="notranslate">docker build . -t mattermost-arm:9.2.1
</code></pre>
<div class="zeroclipboard-container position-absolute right-0 top-0">&nbsp;</div>
</div>
<hr>
<p dir="auto">Mattermost working directory setup</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto">
<pre class="notranslate"><span class="pl-c1">cd /opt/mattermost
mkdir -p mattermost/{config,data,logs,plugins,bleve-indexes}
mkdir -p mattermost/client/plugins
chown 2000:2000 -R <span class="pl-c1">.</span></span></pre>
<div class="zeroclipboard-container position-absolute right-0 top-0">&nbsp;</div>
</div>
<p dir="auto">Create a&nbsp;<code class="notranslate">compose.yaml</code>&nbsp;file, edit&nbsp;<code class="notranslate">chat.example.com</code>&nbsp;to your domain name</p>
<div class="highlight highlight-source-yaml notranslate position-relative overflow-auto" dir="auto">
<pre class="notranslate"><span class="pl-ent">services:
  <span class="pl-ent">postgres:
    <span class="pl-ent">container_name: <span class="pl-s">postgres_mattermost
    <span class="pl-ent">image: <span class="pl-s">postgres:16-alpine
    <span class="pl-ent">restart: <span class="pl-s">unless-stopped
    <span class="pl-ent">volumes:
      - <span class="pl-s">./postgresql/data:/var/lib/postgresql/data
    <span class="pl-ent">environment:
      - <span class="pl-s">POSTGRES_USER=mattermost
      - <span class="pl-s">POSTGRES_PASSWORD=mattermost
      - <span class="pl-s">POSTGRES_DB=mattermost

  <span class="pl-ent">mattermost:
    <span class="pl-ent">depends_on:
      - <span class="pl-s">postgres
    <span class="pl-ent">container_name: <span class="pl-s">mattermost
    <span class="pl-ent">image: <span class="pl-s">mattermost-arm:9.2.1
    <span class="pl-ent">restart: <span class="pl-s">unless-stopped
    <span class="pl-ent">ports:
      - <span class="pl-s">127.0.0.1:8065:8065
    <span class="pl-ent">volumes:
      - <span class="pl-s">./mattermost/config:/mattermost/config
      - <span class="pl-s">./mattermost/data:/mattermost/data
      - <span class="pl-s">./mattermost/logs:/mattermost/logs
      - <span class="pl-s">./mattermost/plugins:/mattermost/plugins
      - <span class="pl-s">./mattermost/client/plugins:/mattermost/client/plugins
      - <span class="pl-s">./mattermost/bleve-indexes:/mattermost/bleve-indexes
    <span class="pl-ent">environment:
      <span class="pl-c"><span class="pl-c"># necessary Mattermost options/variables (see env.example)
      - <span class="pl-s">MM_SQLSETTINGS_DRIVERNAME=postgres
      - <span class="pl-s">MM_SQLSETTINGS_DATASOURCE=postgres://mattermost:mattermost@postgres:5432/mattermost?sslmode=disable&amp;connect_timeout=10

      <span class="pl-c"><span class="pl-c"># necessary for bleve
      - <span class="pl-s">MM_BLEVESETTINGS_INDEXDIR=/mattermost/bleve-indexes

      <span class="pl-c"><span class="pl-c"># additional settings
      - <span class="pl-s">MM_SERVICESETTINGS_SITEURL=https://chat.example.com</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
<div class="zeroclipboard-container position-absolute right-0 top-0">&nbsp;</div>
</div>
<p dir="auto">Spin up container</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto">
<pre class="notranslate"><code class="notranslate">docker compose up
</code></pre>
<div class="zeroclipboard-container position-absolute right-0 top-0">&nbsp;</div>
</div>
<p dir="auto">If it looks okay,&nbsp;<code class="notranslate">Ctrl+C</code>&nbsp;then run the container in detach mode.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto">
<pre class="notranslate"><code class="notranslate">docker compose up -d
</code></pre>
<div class="zeroclipboard-container position-absolute right-0 top-0">&nbsp;</div>
</div>
<p dir="auto">Edit:&nbsp;<a href="https://github.com/hibobmaster/useful-notes/tree/main/mattermost" rel="noopener nofollow">https://github.com/hibobmaster/useful-notes/tree/main/mattermost</a><br>You can use&nbsp;<code class="notranslate">hibobmaster/mattermost-arm</code>&nbsp;if you don't want to build it yourself.<br>Cheers!</p>
<p dir="auto">&nbsp;</p>
<p dir="auto">&nbsp;</p>
<p dir="auto">&nbsp;</p>
<p dir="auto">https://docs.docker.com/build/concepts/overview/#install-buildx</p>
<p dir="auto">&nbsp;</p>
<p dir="auto">https://github.com/docker/buildx?tab=readme-ov-file#manual-download</p>
<p dir="auto">&nbsp;</p>
<p dir="auto">&nbsp;</p>
<p>在构建Mattermost的ARM镜像时遇到“E: Package 'mime-support' has no installation candidate”的错误，通常是因为所使用的基础镜像或者APT源不支持ARM架构，或者该软件包在ARM架构的仓库中不可用。以下是一些可能的解决方案：</p>
<ol>
<li>
<p>更换基础镜像：</p>
<ul>
<li>确保你使用的基础镜像支持ARM架构。你可以尝试使用不同的基础镜像，例如<code class="inlineCode___uUrJ9">arm32v7/ubuntu</code>或<code class="inlineCode___uUrJ9">arm64v8/ubuntu</code>，这些镜像专为ARM架构设计。</li>
</ul>
</li>
<li>
<p>检查APT源：</p>
<ul>
<li>确保你的Dockerfile中的APT源是最新的，并且支持ARM架构。你可以尝试更换为支持ARM的镜像源。</li>
</ul>
</li>
<li>
<p>手动下载软件包：</p>
<ul>
<li>如果<code class="inlineCode___uUrJ9">mime-support</code>包在ARM架构的仓库中不可用，你可以尝试手动下载该软件包的ARM版本，并在Docker构建过程中安装。</li>
</ul>
</li>
<li>
<p>使用多架构支持的基础镜像：</p>
<ul>
<li>考虑使用多架构支持的基础镜像，这样可以确保在不同架构上都能正确构建和运行。</li>
</ul>
</li>
<li>
<p>使用替代软件包：</p>
<ul>
<li>如果<code class="inlineCode___uUrJ9">mime-support</code>不是必需的，可以考虑使用替代的软件包或者不安装该软件包。</li>
</ul>
</li>
<li>
<p>构建ARM64镜像：</p>
<ul>
<li>根据搜索结果中的一个用户分享的步骤<span class="docQuote___YIW6w" data-testid="msh-ref-entrance"><span class="docQuote___YIW6w" data-testid="msh-ref-entrance"><span class="anticon MuiBox-root css-0">，你可以按照以下步骤构建ARM64的Mattermost镜像：</span></span></span>
<div class="codeBlock___D3KDO">
<div class="codeType___Z1h6N"><span class="codeTypeName___aIPjW">dockerfile<button class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeSmall MuiButton-textSizeSmall MuiButton-colorPrimary MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeSmall MuiButton-textSizeSmall MuiButton-colorPrimary copyBtn___l3xJQ css-xox1ca" tabindex="0" type="button"></button></span></div>
<div class="highlight-code-light">
<pre class="language-dockerfile"><code class="language-dockerfile"><span class="token instruction"><span class="token keyword">FROM ubuntu:jammy
<span class="token instruction"><span class="token keyword">SHELL [<span class="token string">"/bin/bash", <span class="token string">"-o", <span class="token string">"pipefail", <span class="token string">"-c"]
<span class="token instruction"><span class="token keyword">ENV PATH=<span class="token string">"/mattermost/bin:${PATH}"
<span class="token instruction"><span class="token keyword">ARG PUID=2000
<span class="token instruction"><span class="token keyword">ARG PGID=2000
<span class="token instruction"><span class="token keyword">ARG MM_PACKAGE=<span class="token string">"https://releases.mattermost.com/9.2.1/mattermost-9.2.1-linux-arm64.tar.gz?src=docker"
<span class="token instruction"><span class="token keyword">RUN apt-get update <span class="token operator">\
  &amp;&amp; DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y <span class="token operator">\
  ca-certificates <span class="token operator">\
  curl <span class="token operator">\
  unrtf <span class="token operator">\
  wv <span class="token operator">\
  poppler-utils <span class="token operator">\
  tidy <span class="token operator">\
  tzdata <span class="token operator">\
  &amp;&amp; rm -rf /var/lib/apt/lists/*
<span class="token comment"># 其他Dockerfile指令...</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
</div>
</li>
<li>注意，这里去除了<code class="inlineCode___uUrJ9">mime-support</code>包，因为它可能在ARM架构的仓库中不可用。</li>
</ul>
</li>
<li>
<p>使用现有的ARM镜像：</p>
<ul>
<li>根据搜索结果，有用户分享了一个现有的ARM镜像<code class="inlineCode___uUrJ9">hibobmaster/mattermost-arm</code>，如果你不想自己构建，可以直接使用这个镜像<span class="docQuote___YIW6w" data-testid="msh-ref-entrance"><span class="anticon MuiBox-root css-0">。</span></span></li>
</ul>
</li>
</ol>
<p class="last-node">请根据你的具体需求和环境选择合适的解决方案。如果问题仍然存在，可能需要进一步检查你的Docker构建环境和网络配置。</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.014448528010416666" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2024-12-23 23:56">2024-12-23 23:55</span>&nbsp;
<a href="https://www.cnblogs.com/exmyth">牧之丨</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18625325" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18625325);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18625325', targetLink: 'https://www.cnblogs.com/exmyth/p/18625325', title: 'arm mattermost' })">举报</a>
</div>
        