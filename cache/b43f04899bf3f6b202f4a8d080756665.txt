
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/falychen/p/18763072" title="发布于 2025-03-10 16:58">
    <span role="heading" aria-level="2">WPF DataGrid多选行数据并绑定属性</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>　　在WPF的第三方控件UI库中，有些DataGrid实现了但是又有一些没实现多选行绑定数据。所有我现在通过附加属性来实现。</p>
<p>　　首先，实现DataGrid多选附加属性类</p>
<div class="cnblogs_code">
<pre>    <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
    <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> DataGrid多选附加属性
    </span><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span> DataGridSelectedItemsBehavior : Behavior&lt;DataGrid&gt;<span style="color: rgba(0, 0, 0, 1)">
    {
        </span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> IList SelectedItems
        {
            </span><span style="color: rgba(0, 0, 255, 1)">get</span> =&gt;<span style="color: rgba(0, 0, 0, 1)"> (IList)GetValue(SelectedItemsProperty);
            </span><span style="color: rgba(0, 0, 255, 1)">set</span> =&gt;<span style="color: rgba(0, 0, 0, 1)"> SetValue(SelectedItemsProperty, value);
        }

        </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">readonly</span> DependencyProperty SelectedItemsProperty =<span style="color: rgba(0, 0, 0, 1)">
            DependencyProperty.Register(
                nameof(SelectedItems),
                </span><span style="color: rgba(0, 0, 255, 1)">typeof</span><span style="color: rgba(0, 0, 0, 1)">(IList),
                </span><span style="color: rgba(0, 0, 255, 1)">typeof</span><span style="color: rgba(0, 0, 0, 1)">(DataGridSelectedItemsBehavior),
                </span><span style="color: rgba(0, 0, 255, 1)">new</span> PropertyMetadata(<span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">));

        </span><span style="color: rgba(0, 0, 255, 1)">protected</span> <span style="color: rgba(0, 0, 255, 1)">override</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> OnAttached()
        {
            </span><span style="color: rgba(0, 0, 255, 1)">base</span><span style="color: rgba(0, 0, 0, 1)">.OnAttached();
            AssociatedObject.SelectionChanged </span>+=<span style="color: rgba(0, 0, 0, 1)"> DataGrid_SelectionChanged;
        }

        </span><span style="color: rgba(0, 0, 255, 1)">protected</span> <span style="color: rgba(0, 0, 255, 1)">override</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> OnDetaching()
        {
            </span><span style="color: rgba(0, 0, 255, 1)">base</span><span style="color: rgba(0, 0, 0, 1)">.OnDetaching();
            AssociatedObject.SelectionChanged </span>-=<span style="color: rgba(0, 0, 0, 1)"> DataGrid_SelectionChanged;
        }

        </span><span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">void</span> DataGrid_SelectionChanged(<span style="color: rgba(0, 0, 255, 1)">object</span><span style="color: rgba(0, 0, 0, 1)"> sender, SelectionChangedEventArgs e)
        {
            SelectedItems </span>=<span style="color: rgba(0, 0, 0, 1)"> AssociatedObject.SelectedItems;
        }
    }</span></pre>
</div>
<p>&nbsp;</p>
<p>ViewModel实现，这里我使用了CommunityToolkit.Mvvm来与界面交互，你可以自行选择。</p>
<div class="cnblogs_code">
<pre>    public class MainViewModel : ObservableObject
    {

        [ObservableProperty]
        private ObservableCollection&lt;ClassA&gt; items = new();
        [ObservableProperty]
        private IList selectedItems = newArrayList();

        [RelayCommand]
        private void ExcuteConfirm()
        {
            foreach (var item in SelectedItems.Cast&lt;ClassA&gt;())
            {

            }
        }
    }</pre>
</div>
<p>&nbsp;</p>
<p>其中DataGrid要把SelectionMode设置为Extended(表示可以多个选中)，SelectionUnit设置为FullRow(表示完整行可以选中，单击单元格都会选中该行)。在XAML中使用之前你先看看你是否通过NuGet安装<strong><code class="whitespace-pre-wrap text-[13px] bg-[#1b1f230d] rounded-[3px] p-[3px]">Microsoft.Xaml.Behaviors.Wpf。</code></strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">&lt;!--</span><span style="color: rgba(0, 128, 0, 1)"> 引用命名空间 Local 是你附加属性类所在的文件位置</span><span style="color: rgba(0, 128, 0, 1)">--&gt;</span><span style="color: rgba(0, 0, 0, 1)">
xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
xmlns:local="clr-namespace:YourNamespace.Behaviors"
 
</span><span style="color: rgba(0, 128, 0, 1)">&lt;!--</span><span style="color: rgba(0, 128, 0, 1)"> DataGrid定义 </span><span style="color: rgba(0, 128, 0, 1)">--&gt;</span>
<span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">DataGrid </span><span style="color: rgba(255, 0, 0, 1)">ItemsSource</span><span style="color: rgba(0, 0, 255, 1)">="{{Binding Items}}"</span><span style="color: rgba(255, 0, 0, 1)"> SelectionMode</span><span style="color: rgba(0, 0, 255, 1)">="Extended"</span><span style="color: rgba(255, 0, 0, 1)"> SelectionUnit</span><span style="color: rgba(0, 0, 255, 1)">="FullRow"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">i:Interaction</span><span style="color: rgba(255, 0, 0, 1)">.Behaviors</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">local:DataGridSelectedItemsBehavior
            </span><span style="color: rgba(255, 0, 0, 1)">VisibleItems</span><span style="color: rgba(0, 0, 255, 1)">="{{Binding SelectedItems, Mode=OneWayToSource}}"</span><span style="color: rgba(0, 0, 255, 1)">/&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">i:Interaction.Behaviors</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">DataGrid</span><span style="color: rgba(0, 0, 255, 1)">&gt;<br></span></pre>
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="11.055499573436343" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-10 16:58">2025-03-10 16:58</span>&nbsp;
<a href="https://www.cnblogs.com/falychen">FalyEnd</a>&nbsp;
阅读(<span id="post_view_count">132</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18763072" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18763072);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18763072', targetLink: 'https://www.cnblogs.com/falychen/p/18763072', title: 'WPF DataGrid多选行数据并绑定属性' })">举报</a>
</div>
        