
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/du-hong/p/18657318" title="发布于 2025-08-29 11:30">
    <span role="heading" aria-level="2">Python零基础从入门到精通详细教程3-数据类型</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h3>1.简介</h3>
<p>上一篇宏哥讲解和分享了Python的变量和常量，今天宏哥按照计划讲解和分享一下Python的基本数据类型。我们先来看一下学习变量和基本数据类型的目的。Python是一种高级编程语言，它支持多种数据类型，用于存储和操作不同类型的数据。Python的数据类型主要分为两大类：基本数据类型和复合数据类型。</p>
<h4>1.1学习变量的目的</h4>
<ul>
<li>学习变量有助于我们在程序中存储和操作数据，提高代码的灵活性和可维护性。</li>
<li>通过使用变量，我们可以方便地引用和修改数据，使得程序能够动态地响应不同的输入和条件。</li>
</ul>
<h4>1.2学习数据类型的目的</h4>
<ul>
<li>学习基本数据类型有助于我们理解不同类型的数据在计算机中的表示和操作方式。</li>
<li>不同的数据类型适用于不同的场景，了解它们的特性有助于我们编写更加高效和健壮的代码。</li>
</ul>
<h3>2.什么是数据类型？</h3>
<p>数据类型‌是指在‌编程语言中用于定义变量或数据项的类别，这些类别决定了变量可以存储的什么样的数据类别和操作。数据类型是一组具有相似属性的一类数据的集合，数据类型决定了其存储到计算机中的方式。将数据进行类型划分，是为了更方便的处理数据。比如：你想让计算机进行数值运算，你就传数字给它，你想让它处理文字，就传字符串给它。</p>
<h3>3.数据类型分类</h3>
<p>Python的数据类型可以分为两大类：<strong>可变数据类型</strong>和<strong>不可变数据类型</strong>。可变数据类型允许在创建后修改其内容，而不可变数据类型则不允许。理解这两者的区别对编写高效、安全的代码至关重要。</p>
<h4 id="_0">3.1不可变数据类型</h4>
<ul>
<li><strong>整数（int）</strong>：如<code>42</code>、<code>-10</code>。</li>
<li><strong>浮点数（float）</strong>：如<code>3.14</code>、<code>-0.001</code>。</li>
<li><strong>布尔值（bool）</strong>：<code>True</code>或<code>False</code>。</li>
<li><strong>字符串（str）</strong>：如<code>"Hello, Python!"</code>。</li>
<li><strong>元组（tuple）</strong>：如<code>(1, 2, 3)</code>。</li>
</ul>
<h4 id="_2">3.2可变数据类型</h4>
<ul>
<li><strong>列表（list）</strong>：如<code>[1, 2, 3]</code>。</li>
<li><strong>字典（dict）</strong>：如<code>{"name": "Alice", "age": 25}</code>。</li>
<li><strong>集合（set）</strong>：如<code>{1, 2, 3}</code>。</li>
</ul>
<h3>4.基本数据类型详解</h3>
<p>基本数据类型是Python中最基础的数据类型，它们用于存储单个值。Python中的基本数据类型包括数值（整数、浮点数、复数）、字符串、布尔值等。这些数据类型是构建更复杂数据结构的基础，如列表、元组、字典等。</p>
<p>Python3 的六个标准数据类型中：</p>
<ul>
<li><strong>不可变数据（3 个）：</strong>Number（数字）、String（字符串）、Tuple（元组）；</li>
<li><strong>可变数据（3 个）：</strong>List（列表）、Dictionary（字典）、Set（集合）。</li>
</ul>
<p>此外还有一些高级的数据类型，如: 字节数组类型(bytes)。</p>
<p>在 Python 里为了应对不同的业务需求，也把数据分为不同的类型。如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202505/1232840-20250527093515137-2091495609.png" alt="" loading="lazy"></p>
<h4>4.1Number（数字型）</h4>
<p>Python3 支持&nbsp;<strong>int、float、bool、complex（复数）</strong>。在Python 3里，只有一种整数类型 int，表示为长整型，没有 python2 中的 Long。像大多数语言一样，数值类型的赋值和计算都是很直观的。内置的 type() 函数可以用来查询变量所指的对象类型。长整型也可以使用小写 l，但是还是建议您使用大写 L，避免与数字 1 混淆。Python使用 L 来显示长整型。</p>
<h5>4.1.1type或&nbsp;isinstance查看数据类型</h5>
<p>1.查看数据类型语法如下：</p>
<div class="cnblogs_code">
<pre>type(name)</pre>
</div>
<p>或者</p>
<div class="cnblogs_code">
<pre>isinstance(name,数据类型)</pre>
</div>
<div><strong><strong><strong>✅</strong></strong>示例代码：</strong></div>
<div>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-06-03
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: Python零基础从入门到精通详细教程3-数据类型
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span>
<span style="color: rgba(0, 0, 0, 1)">
a, b, c, d </span>= 20, 5.5, True, 4+3j
<span style="color: rgba(0, 0, 255, 1)">print</span>(type(a), type(b), type(c), type(d))</pre>
</div>
</div>
<div><strong><strong><strong>✅</strong></strong>运行结果：</strong></div>
<div>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202505/1232840-20250526101116295-718265405.png" alt="" loading="lazy"></p>
<p>此外还可以用 isinstance 来判断：</p>
<p><strong><strong><strong>✅</strong></strong>示例代码：</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-06-03
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: Python零基础从入门到精通详细教程3-数据类型
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span>
<span style="color: rgba(0, 0, 0, 1)">
a </span>= 111
<span style="color: rgba(0, 0, 255, 1)">print</span>(isinstance(a, int))</pre>
</div>
<p><strong><strong><strong><strong>✅</strong></strong>运行结果：</strong></strong></p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202505/1232840-20250526101616199-1161650184.png" alt="" loading="lazy"></p>
<p>isinstance 和 type 的区别在于：</p>
<ul>
<li>type()不会认为子类是一种父类类型。</li>
<li>isinstance()会认为子类是一种父类类型。</li>
</ul>
<p>宏哥用代码来验证一下这一区别如下：</p>
<p><strong><strong><strong>✅</strong></strong>示例代码：</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-06-03
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: Python零基础从入门到精通详细教程3-数据类型
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span><span style="color: rgba(0, 128, 0, 1)">
#</span><span style="color: rgba(0, 128, 0, 1)"> 定义一个类A,类 A 是一个空类，不包含任何属性和方法。</span>
<span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> A:
    </span><span style="color: rgba(0, 0, 255, 1)">pass</span>
<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 定义一个类B,类 B 继承自类 A，也为空，表示 B 是 A 的子类。</span>
<span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> B(A):
    </span><span style="color: rgba(0, 0, 255, 1)">pass</span>
<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 实例化A类，然后isinstance判断是否是A类的类型</span>
<span style="color: rgba(0, 0, 255, 1)">print</span><span style="color: rgba(0, 0, 0, 1)">(isinstance(A(), A))
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 实例化A类，然后type判断是否是A类的类型</span>
<span style="color: rgba(0, 0, 255, 1)">print</span>(type(A()) ==<span style="color: rgba(0, 0, 0, 1)"> A)
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 实例化B类，然后isinstance判断是否是A类的类型</span>
<span style="color: rgba(0, 0, 255, 1)">print</span><span style="color: rgba(0, 0, 0, 1)">(isinstance(B(), A))
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 实例化B类，type</span>
<span style="color: rgba(0, 0, 255, 1)">print</span>(type(B()) == A)</pre>
</div>
<p><strong><strong><strong><strong>✅</strong></strong>运行结果：</strong></strong></p>
<div>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202505/1232840-20250526103206953-475304618.png" alt="" loading="lazy"></p>
</div>
</div>
<h5>4.1.2数字类型（int, float）</h5>
<p>Python的数字类型包括整数和浮点数。整数用于表示没有小数部分的数字，而浮点数用于表示有小数部分的数字。Python会自动处理大整数，无需担心溢出问题。</p>
<p>1.<strong>整数（int）</strong>：是没有小数点的数字，例如：<code>42</code>,<code>-10</code>,<code>0。</code>用于存储整数值，可以是正数或负数，没有大小限制（在大多数现代Python实现中）。在这里提示在Python2.x中，整数根据保存数值的长度还分为 int（整数） long（长整数）。</p>
<p>2.<strong>浮点数（float）</strong>：<span>是可以有小数点的数字，例如：<code><span>3.14</span></code><span>,<code><span>-0.001</span></code><span>,<code><span>2.0</span></code><span>（注意，即使小数部分为0，也可以有小数点）。</span></span></span></span>用于存储带有小数点的数值，即实数。Python中的浮点数通常是双精度浮点数。</p>
<p><strong><strong><strong>✅</strong></strong>示例代码：</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-06-03
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: Python零基础从入门到精通详细教程3-数据类型
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span>
a = 10 <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 整数</span>
b = 3.14 <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 浮点数</span>
<span style="color: rgba(0, 0, 255, 1)">print</span>(a + b) <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 输出：13.14</span></pre>
</div>
<p><strong><strong><strong><strong><strong>✅</strong></strong>运行结果：</strong></strong></strong></p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202505/1232840-20250526103957844-870766112.png" alt="" loading="lazy"></p>
<h5>4.1.3布尔类型（bool）</h5>
<p><strong>布尔值（bool）</strong>：用于表示真（True）或假（False）的值。布尔类型只有两个值：`True`和`False`。它们常用于条件判断和逻辑运算。布尔值常用于控制程序流程。</p>
<p><strong>注意：</strong>Python3 中，bool 是 int 的子类，True 和 False 可以和数字相加，&nbsp;<span class="marked">True==1、False==0&nbsp;会返回&nbsp;<strong>True</strong>，但可以通过&nbsp;<span class="marked">is&nbsp;来判断类型。</span></span></p>
<p><span class="marked"><span class="marked"><strong>注意:</strong>&nbsp;在 Python 中，所有非零的数字和非空的字符串、列表、元组等数据类型都被视为 True，只有&nbsp;<strong>0、空字符串、空列表、空元组</strong>等被视为 False。因此，在进行布尔类型转换时，需要注意数据类型的真假性。</span></span></p>
<p>布尔类型可以用来控制程序的流程，比如判断某个条件是否成立，或者在某个条件满足时执行某段代码。</p>
<p>布尔类型特点：</p>
<ul>
<li>
<p>布尔类型只有两个值：True 和 False。</p>
</li>
<li>
<p>bool 是 int 的子类，因此布尔值可以被看作整数来使用，其中 True 等价于 1。</p>
</li>
<li>
<p>布尔类型可以和其他数据类型进行比较，比如数字、字符串等。在比较时，Python 会将 True 视为 1，False 视为 0。</p>
</li>
<li>
<p>布尔类型可以和逻辑运算符一起使用，包括 and、or 和 not。这些运算符可以用来组合多个布尔表达式，生成一个新的布尔值。</p>
</li>
<li>
<p>布尔类型也可以被转换成其他数据类型，比如整数、浮点数和字符串。在转换时，True 会被转换成 1，False 会被转换成 0。</p>
</li>
<li>可以使用&nbsp;<code>bool()</code>&nbsp;函数将其他类型的值转换为布尔值。以下值在转换为布尔值时为&nbsp;<code>False</code>：<code>None</code>、<code>False</code>、零 (<code>0</code>、<code>0.0</code>、<code>0j</code>)、空序列（如&nbsp;<code>''</code>、<code>()</code>、<code>[]</code>）和空映射（如&nbsp;<code>{}</code>）。其他所有值转换为布尔值时均为&nbsp;<code>True</code>。</li>
</ul>
<div class="cnblogs_code">
<pre>真 True 非0数--<span style="color: rgba(0, 0, 0, 1)">非零即真
 假 False
 
 等同于True的值：
 </span>-<span style="color: rgba(0, 0, 0, 1)">非零数值
 </span>-<span style="color: rgba(0, 0, 0, 1)">非空字符串
 
 等同于False的值：
 None；
 False；
 任何为0的数字类型，如0、</span><span style="color: rgba(128, 0, 128, 1)">0.0</span><span style="color: rgba(0, 0, 0, 1)">、0j；
 任何空序列，如</span><span style="color: rgba(128, 0, 0, 1)">""</span><span style="color: rgba(0, 0, 0, 1)">、()、[]；
 空字典，如{}；
 用户定义的类实例，如类中定义了__bool__()或者__len__()方法，并且该方法返回0或者布尔值False。</span></pre>
</div>
<p><strong><strong><strong>✅</strong></strong>示例代码：</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-06-03
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: Python零基础从入门到精通详细教程3-数据类型
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span>
x =<span style="color: rgba(0, 0, 0, 1)"> True
y </span>=<span style="color: rgba(0, 0, 0, 1)"> False
</span><span style="color: rgba(0, 0, 255, 1)">print</span>(x <span style="color: rgba(0, 0, 255, 1)">and</span> y) <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 输出：False</span></pre>
</div>
<p><strong><strong><strong><strong>✅</strong></strong>运行结果：</strong></strong></p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202505/1232840-20250526112631434-2121032575.png" alt="" loading="lazy"></p>
<h5>&nbsp;4.1.4复数</h5>
<p><strong>复数</strong>：是实数和虚数的组合，可以表示为 ( a + bj ) 的形式。主要用于科学计算，例如:平面场问题、波动问题、电感电容等问题。</p>
<p>在Python中，复数类型用complex表示。它可以通过以下方式创建：</p>
<ul>
<li>
<p>直接指定实部和虚部：complex(real, imag)</p>
</li>
<li>
<p>使用字符串：complex(string)</p>
</li>
<li>
<p>不指定实部和虚部，默认都为0：complex()</p>
</li>
</ul>
<p><strong><strong><strong>✅</strong></strong>示例代码：</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-06-03
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: Python零基础从入门到精通详细教程3-数据类型
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span>
x = complex(3, 4) <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 创建一个复数3+4j</span>
y = complex(<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">3+4j</span><span style="color: rgba(128, 0, 0, 1)">'</span>) <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 创建一个复数3+4j</span>
z = complex() <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 创建一个复数0+0j</span>
<span style="color: rgba(0, 0, 255, 1)">print</span>(x,y,z)</pre>
</div>
<p><strong><strong><strong><strong>✅</strong></strong>运行结果：</strong></strong></p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202505/1232840-20250526112545319-976798301.png" alt="" loading="lazy"></p>
<h4>4.2非数字型</h4>
<h5>4.2.1字符串（str）</h5>
<p><strong>字符串（str）</strong>：用于存储文本数据，即一系列字符。Python中的字符串是不可变的，意味着一旦创建，就不能更改字符串中的字符。</p>
<p>字符串是Python中用于表示文本的数据类型，可以用单引号、双引号或三引号定义。字符串支持多种操作，如切片、拼接和格式化。</p>
<p><strong><strong><strong>✅</strong></strong>示例代码：</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-06-03
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: Python零基础从入门到精通详细教程3-数据类型
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span>
s = <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Python</span><span style="color: rgba(128, 0, 0, 1)">"</span>
<span style="color: rgba(0, 0, 255, 1)">print</span>(s[0]) <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 输出：'P'</span>
<span style="color: rgba(0, 0, 255, 1)">print</span>(s + <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)"> 3.10</span><span style="color: rgba(128, 0, 0, 1)">"</span>) <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 输出：'Python 3.10'</span></pre>
</div>
<p><strong><strong><strong><strong><strong>✅</strong></strong>运行结果：</strong></strong></strong></p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202505/1232840-20250526113427107-88253184.png" alt="" loading="lazy"></p>
<h5>4.2.2列表（list）</h5>
<p><strong>列表（list）</strong>：有序的数据集合，可以包含不同类型的元素。列表是可变的，意味着可以添加、删除或修改其中的元素。</p>
<p>列表是Python中最常用的数据类型之一，可以存储多个元素，且元素可以是不同类型。列表是可变的，支持增删改查操作。能储存多个数据，通过索引能取一条或多条数据。</p>
<p><strong><strong><strong>✅</strong></strong>示例代码：</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-06-03
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: Python零基础从入门到精通详细教程3-数据类型
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span>
my_list = [1, <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">apple</span><span style="color: rgba(128, 0, 0, 1)">"</span>, 3.14<span style="color: rgba(0, 0, 0, 1)">]
my_list.append(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">banana</span><span style="color: rgba(128, 0, 0, 1)">"</span>) <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 添加元素</span>
<span style="color: rgba(0, 0, 255, 1)">print</span>(my_list) <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 输出：[1, 'apple', 3.14, 'banana']</span></pre>
</div>
<p><strong><strong><strong><strong>✅</strong></strong>运行结果：</strong></strong></p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202505/1232840-20250526113618396-86828352.png" alt="" loading="lazy"></p>
<h5>4.2.3元组（tuple）</h5>
<p><strong>元组（tuple）</strong>：与列表类似，但元组是不可变的。一旦创建，就不能更改元组中的元素。元组通常用于存储不应该改变的数据。</p>
<p>元组与列表类似，但它是不可变的。元组通常用于存储不可修改的数据。</p>
<p><strong><strong><strong>✅</strong></strong>示例代码：</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-06-03
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: Python零基础从入门到精通详细教程3-数据类型
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span>
my_tuple = (1, <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">apple</span><span style="color: rgba(128, 0, 0, 1)">"</span>, 3.14<span style="color: rgba(0, 0, 0, 1)">)
</span><span style="color: rgba(0, 0, 255, 1)">print</span>(my_tuple[1]) <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 输出：'apple'</span></pre>
</div>
<p><strong><strong><strong><strong>✅</strong></strong>运行结果：</strong></strong></p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202505/1232840-20250526113747342-1581238621.png" alt="" loading="lazy"></p>
<h5>4.2.4集合（set）</h5>
<p><strong>集合（set）</strong>：无序的、不包含重复元素的集合。集合主要用于数学上的集合操作，如并集、交集、差集和对称差集。</p>
<p>集合是一种无序且不重复的数据类型，常用于去重和集合运算（如并集、交集）。</p>
<p><strong><strong><strong>✅</strong></strong>示例代码：</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-06-03
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: Python零基础从入门到精通详细教程3-数据类型
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span>
my_set = {1, 2, 2, 3<span style="color: rgba(0, 0, 0, 1)">}
</span><span style="color: rgba(0, 0, 255, 1)">print</span>(my_set) <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 输出：{1, 2, 3}</span></pre>
</div>
<p><strong><strong><strong><strong>✅</strong></strong>运行结果：</strong></strong></p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202505/1232840-20250526113948467-1773735869.png" alt="" loading="lazy"></p>
<h5>4.2.5字典（dict）</h5>
<p><strong>字典（dict）</strong>：存储键值对（key-value pairs）的集合。字典是可变的，可以添加、删除或修改键值对。键必须是唯一的，而值则可以是任何数据类型。</p>
<p>字典是一种键值对结构，用于存储关联数据。字典的键必须是不可变类型（如字符串、数字或元组），而值可以是任意类型。</p>
<p><strong>示例代码：</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-06-03
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: Python零基础从入门到精通详细教程3-数据类型
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span>
my_dict = {<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">name</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Alice</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">age</span><span style="color: rgba(128, 0, 0, 1)">"</span>: 25<span style="color: rgba(0, 0, 0, 1)">}
</span><span style="color: rgba(0, 0, 255, 1)">print</span>(my_dict[<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">name</span><span style="color: rgba(128, 0, 0, 1)">"</span>]) <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 输出：'Alice'</span></pre>
</div>
<p><strong><strong><strong><strong>✅</strong></strong>运行结果：</strong></strong></p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202505/1232840-20250526114111278-1630312153.png" alt="" loading="lazy"></p>
<h4>4.3bytes 类型</h4>
<p data-ai-assistant-role="selection" data-spm-anchor-id="a2c6h.12873639.article-detail.i1.769a6aebfcL2sS">在 Python3 中，bytes 类型表示的是不可变的二进制序列（byte sequence）。</p>
<p>与字符串类型不同的是，bytes 类型中的元素是整数值（0 到 255 之间的整数），而不是 Unicode 字符。</p>
<p>bytes 类型通常用于处理二进制数据，比如图像文件、音频文件、视频文件等等。在网络编程中，也经常使用 bytes 类型来传输二进制数据。</p>
<p>创建 bytes 对象的方式有多种，最常见的方式是使用 b 前缀：</p>
<p>此外，也可以使用 bytes() 函数将其他类型的对象转换为 bytes 类型。bytes() 函数的第一个参数是要转换的对象，第二个参数是编码方式，如果省略第二个参数，则默认使用 UTF-8 编码。</p>
<p><strong><strong><strong>✅</strong></strong>示例代码：</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-06-03
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: Python零基础从入门到精通详细教程3-数据类型
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span>
x = bytes(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">hello</span><span style="color: rgba(128, 0, 0, 1)">"</span>, encoding=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">utf-8</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)
</span><span style="color: rgba(0, 0, 255, 1)">print</span>(x)</pre>
</div>
<p><strong><strong><strong><strong>✅</strong></strong>运行结果：</strong></strong></p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202505/1232840-20250526141601567-645719838.png" alt="" loading="lazy"></p>
<p>与字符串类型类似，bytes 类型也支持许多操作和方法，如切片、拼接、查找、替换等等。同时，由于 bytes 类型是不可变的，因此在进行修改操作时需要创建一个新的 bytes 对象。例如：</p>
<p><strong><strong><strong>✅</strong></strong>示例代码：</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-06-03
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: Python零基础从入门到精通详细教程3-数据类型
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span>
x = b<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">hello</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
y </span>= x[1:3]  <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 切片操作，得到 b"el"</span>
z = x + b<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">world</span><span style="color: rgba(128, 0, 0, 1)">"</span>  <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 拼接操作，得到 b"helloworld"</span>
<span style="color: rgba(0, 0, 255, 1)">print</span>(x,y,z)</pre>
</div>
<p><strong><strong><strong><strong>✅</strong></strong>运行结果：</strong></strong></p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202505/1232840-20250526141802538-1353433527.png" alt="" loading="lazy"></p>
<p>需要注意的是，bytes 类型中的元素是整数值，因此在进行比较操作时需要使用相应的整数值。例如：</p>
<p><strong><strong><strong>✅</strong></strong>示例代码：</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-06-03
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: Python零基础从入门到精通详细教程3-数据类型
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span>
x = b<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">hello</span><span style="color: rgba(128, 0, 0, 1)">"</span>
<span style="color: rgba(0, 0, 255, 1)">if</span> x[0] == ord(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">h</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">):
    </span><span style="color: rgba(0, 0, 255, 1)">print</span>(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">The first element is 'h'</span><span style="color: rgba(128, 0, 0, 1)">"</span>)</pre>
</div>
<p><strong><strong><strong><strong><strong>✅</strong></strong>运行结果：</strong></strong></strong></p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202505/1232840-20250526141846940-1637588526.png" alt="" loading="lazy"></p>
<p>其中 <strong>ord()</strong> 函数用于将字符转换为相应的整数值。后期文章可能会有介绍。</p>
<p><span style="color: rgba(255, 0, 0, 1)"><strong>注意事项：</strong></span></p>
<p>Python是动态类型语言，意味着你不需要在声明变量时指定其类型。变量的类型是在运行时根据赋给它的值自动确定的。</p>
<p>字符串、字节串、列表、元组和字典都是可迭代对象，可以使用循环遍历它们的元素。</p>
<p>字符串和字节串是不可变的，而列表和字典是可变的。这意味着你可以修改列表和字典的内容，但不能修改字符串和字节串的内容（尽管你可以创建新的字符串或字节串来反映更改）。</p>
<h4>4.4不同数据类型之间的计算</h4>
<ol>
<li>数字型之间可以直接计算</li>
<li>数字类型不能和字符串类型进行计算</li>
<li>bool类型 True代表1 False代表0</li>
</ol>
<p><strong><strong><strong>✅</strong></strong>示例代码：</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-06-16
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: Python零基础从入门到精通详细教程3-数据类型
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span>
<span style="color: rgba(0, 0, 0, 1)">
i </span>= 10<span style="color: rgba(0, 0, 0, 1)">
f </span>= 10.5<span style="color: rgba(0, 0, 0, 1)">
b </span>=<span style="color: rgba(0, 0, 0, 1)"> True
</span><span style="color: rgba(0, 0, 255, 1)">print</span>(i +<span style="color: rgba(0, 0, 0, 1)"> f)
</span><span style="color: rgba(0, 0, 255, 1)">print</span>(i +<span style="color: rgba(0, 0, 0, 1)"> b)
</span><span style="color: rgba(0, 0, 255, 1)">print</span>(f - b)</pre>
</div>
<p><strong><strong><strong><strong>✅</strong></strong>运行结果：</strong></strong></p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202505/1232840-20250528135550901-2070055017.png" alt="" loading="lazy"></p>
<h4>4.5字符串之间的计算</h4>
<ol>
<li>字符串使用+号进行计算是拼接的意思 会生成新的字符串</li>
<li>字符串使用*号进行计算是重复拼接的意思 会生成新的字符串</li>
</ol>
<p><strong><strong><strong>✅</strong></strong>示例代码：</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-06-16
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: Python零基础从入门到精通详细教程3-数据类型
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span>
<span style="color: rgba(0, 0, 0, 1)">
first_name </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">北京</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
last_name </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">宏哥</span><span style="color: rgba(128, 0, 0, 1)">"</span>
<span style="color: rgba(0, 0, 255, 1)">print</span>(first_name+<span style="color: rgba(0, 0, 0, 1)">last_name)
</span><span style="color: rgba(0, 0, 255, 1)">print</span>(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">-</span><span style="color: rgba(128, 0, 0, 1)">"</span> * 50<span style="color: rgba(0, 0, 0, 1)">)
</span><span style="color: rgba(0, 0, 255, 1)">print</span>(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">+</span><span style="color: rgba(128, 0, 0, 1)">"</span> * 50<span style="color: rgba(0, 0, 0, 1)">)
</span><span style="color: rgba(0, 0, 255, 1)">print</span>(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">=</span><span style="color: rgba(128, 0, 0, 1)">"</span> * 50)</pre>
</div>
<p><strong><strong><strong><strong><strong>✅</strong></strong>运行结果：</strong></strong></strong></p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202505/1232840-20250528135948028-273921994.png" alt="" loading="lazy"></p>
<h3>6.变量的输入</h3>
<p>上一篇讲解了变量，但是没有讲解如何在键盘中输入变量，这里宏哥补充一下。</p>
<h4>6.1input函数</h4>
<p>input函数：获取用户在键盘上的输入使用 ，输入的任何内容都会被当做<code>字符串</code>，回结果为字符串 str 类型</p>
<p>函数的定义：函数是把重复使用的代码提前写好，封装起来我们直接用的，不需要重复造轮子。</p>
<p><strong><strong><strong>✅</strong></strong>示例代码：</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-06-16
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: Python零基础从入门到精通详细教程3-数据类型
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> input输人的任何内容都会被当做字符串 回结果为字符串 str 类型</span>
name = input(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">请输入用户名：</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)
passwd </span>= input(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">请输入密码：</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)
</span><span style="color: rgba(0, 0, 255, 1)">print</span>(type(passwd))</pre>
</div>
<p><strong><strong><strong><strong><strong>✅</strong></strong>运行结果：</strong></strong></strong></p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202505/1232840-20250528140601686-822756096.png" alt="" loading="lazy"></p>
<h3>7.小结</h3>
<p>数据类型是每种编程语言必备属性，只有给数据赋予明确的数据类型，计算机才能对数据进行处理运算，因此，正确使用数据类型是十分必要的，不同的语言，数据类型类似，但具体表示方法有所不同，以下是<a class="hl hl-1" href="https://so.csdn.net/so/search?from=pc_blog_highlight&amp;q=Python" rel="noopener nofollow" target="_blank">Python</a>编程常用的数据类型：</p>
<p>1.&nbsp;数字类型</p>
<p>Python数字类型主要包括int（整型）、long（长整型）和float（浮点型），但是在Python3中就不再有long类型了。</p>
<p>int（整型）</p>
<p>既然是整型自然赋值时候的数据要是整数才行，整数简单理解为（正整数和负整数）</p>
<p>long（长整型）</p>
<p>Python长整型没有指定位宽，但是由于机器内存有限，使用长的长整数数值也不可能无限大。</p>
<p>float（浮点型）</p>
<p>浮点型也就是带有小数点的数。</p>
<p>complex（复数）</p>
<p>Python还支持复数，复数由实数部分和虚数部分构成，可以用&nbsp;a + bj,或者&nbsp;complex(a,b)&nbsp;表示，&nbsp;复数的实部&nbsp;a&nbsp;和虚部&nbsp;b&nbsp;都是浮点型。</p>
<p>2.&nbsp;字符串</p>
<p>在Python中，加了引号的字符都被认为是字符串，其声明有三种方式，分别是：单引号、双引号和三引号；Python中的字符串有两种数据类型，分别是str类型和unicode类型，str类型采用的ASCII编码，无法表示中文，unicode类型采用unicode编码，能够表示任意字符，包括中文和其他语言 ，一些情况下，选择其中一个会比另外一个更好，比如字符串本身就存在引号：。</p>
<p>3.&nbsp;布尔型</p>
<p>和其他编程语言一样，Python布尔类型也是用于逻辑运算，有两个值：True（真）和False（假）。</p>
<p>4.&nbsp;列表</p>
<p>列表是Python中使用最频繁的数据类型，集合中可以放任何数据类型，可对集合进行创建、查找、切片、增加、修改、删除、循环和排序操作。</p>
<p>5.&nbsp;元组</p>
<p>元组和列表一样，也是一种序列，与列表不同的是，元组是不可修改的，元组用”()”标识，内部元素用逗号隔开。</p>
<p>6.&nbsp;字典</p>
<p>字典是一种键值对的集合，是除列表以外Python之中最灵活的内置数据结构类型，列表是有序的对象集合，字典是无序的对象集合。</p>
<p>7.&nbsp;集合</p>
<p>集合是一个无序的、不重复的数据组合，它的主要作用有两个，分别是去重和关系测试。</p>
<p>以上是对Python的七种数据类型的简单介绍，具体使用方法，可以进行深入查找学习！</p>
<p>Python的数据类型是编程的基础，掌握它们的特性和使用方法能让你写出更高效、更健壮的代码。从基础的数字、字符串到复合的列表、字典，每种数据类型都有其独特的用途和优势。希望通过本文的讲解，你能对Python的数据类型有更深入的理解，并在实际编程中灵活运用。</p>
</div>
<div id="MySignature" role="contentinfo">
    <div id="MySignature" style="display: block">
	<div style="font-size: 13px; border: 1px dashed rgb(45, 161, 45); padding: 10px 15px; background-color: rgb(248, 248, 248)">
		<label style="font-weight: bold">
			&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家在移动端也能看到我分享的博文，现已注册个人微信公众号，扫描左下方二维码即可，欢迎大家关注，提前解锁更多测试干货！有时间会及时分享相关技术博文。
		</label>
		<br>
		<label style="font-weight: bold">
			&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家互动讨论相关技术问题，刚刚建立了咱们的专门的微信群交流互动群，群内会分享交流测试领域前沿知识。  请您扫描中间的微信二维码进群 
		</label>
		<br>
		<label style="font-weight: bold">
			&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家互动讨论相关技术问题，现已组建专门的微信群，由于微信群满100，请您扫描右下方宏哥个人微信二维码拉你进群
			<label style="font-weight: bold; color: red; font-size: 15px">
				（请务必备注：已关注公众号进群）平时上班忙（和你一样），所以加好友不及时，请稍安勿躁~
			</label>
			，欢迎大家加入这个大家庭，我们一起畅游知识的海洋。
		</label>
		<br>
		&nbsp;&nbsp;&nbsp;&nbsp;感谢您花时间阅读此篇文章,如果您觉得这篇文章你学到了东西也是为了犒劳下博主的码字不易不妨打赏一下吧，让博主能喝上一杯咖啡，在此谢过了！
		<br>
		&nbsp;&nbsp;&nbsp;&nbsp;如果您觉得阅读本文对您有帮助，请点一下左下角
		<a id="recommend" style="font-weight: bold; color: red; font-size: 15px; text-decoration: underline">
			“推荐”
		</a>
		按钮，您的
		<label style="font-weight: bold; color: red; font-size: 15px">
			“推荐”
		</label>
		将是我最大的写作动力！另外您也可以选择
		<a id="follow_me_btn" style="cursor: pointer; color: blue; text-decoration: underline">
			【
			<strong>
				关注我
			</strong>
			】
		</a>
		，可以很方便找到我！
		<br>
		&nbsp;&nbsp;&nbsp;&nbsp;本文版权归作者和博客园共有，来源网址：
		<a href="https://www.cnblogs.com/du-hong" style="color: red; text-decoration: underline" target="_blank">
			https://www.cnblogs.com/du-hong
		</a>
		欢迎各位转载，但是未经作者本人同意，转载文章之后必须在文章页面明显位置给出作者和原文连接，否则保留追究法律责任的权利！
	</div>
	<div style="text-align: center; margin-top: 10px">
		<p style=" font-weight: bolder; color: red; ">
			公众号(关注宏哥)&nbsp; &nbsp;&nbsp;&nbsp;
			&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
			微信群(扫码进群) &nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;客服微信
		</p>
		<img style="width: 200px;padding-right: 50px;" alt="个人微信公众号" src="https://img2018.cnblogs.com/common/1741949/201911/1741949-20191119095948011-608816619.png">
		<img style="width: 200px;padding-right: 65px;" alt="微信群" src="https://img2024.cnblogs.com/blog/1232840/202506/1232840-20250610113707419-637869921.png">
		<img style="width: 200px" alt="个人微信" src="https://img2018.cnblogs.com/common/1741949/201911/1741949-20191106101257091-849954564.png">
	</div>
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-08-29 11:30">2025-08-29 11:30</span>&nbsp;
<a href="https://www.cnblogs.com/du-hong">北京-宏哥</a>&nbsp;
阅读(<span id="post_view_count">69</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18657318);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18657318', targetLink: 'https://www.cnblogs.com/du-hong/p/18657318', title: 'Python零基础从入门到精通详细教程3-数据类型' })">举报</a>
</div>
        