
		<h1 class="postTitle">
			<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/fordsonliuzhiwen/p/18981007" title="发布于 2025-07-12 20:09">
    <span role="heading" aria-level="2">速通提示词工程Prompt Engineering</span>
    

</a>

		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="提示词工程简介">提示词工程简介</h1>
<ul>
<li>关注提示词开发和优化，帮助用户将大语言模型用于各场景和研究领域。</li>
<li>利用提示工程来提升大语言模型处理复杂任务场景的能力，如问答和算术推理能力。</li>
<li>通过提示工程设计、研发强大的工程技术，实现和大语言模型或其他生态工具的高效接轨。</li>
<li>通过提示工程来提高大语言模型的安全性。</li>
</ul>
<h2 id="1-大语言模型设置">1 大语言模型设置</h2>
<p><strong>Temperature</strong>：<code>temperature</code> 的参数值越小，模型就会返回越确定的一个结果。</p>
<p><strong>Top_p</strong>：同上 （<strong>一般建议</strong>：仅改变其中一个参数）</p>
<p><strong>Max Length</strong>：大模型生成的 token 数</p>
<p><strong>Stop Sequences</strong>：一个字符串，可以阻止模型生成 token</p>
<p><strong>Frequency Penalty</strong>：减少token中词重复（重复数量多的 Token 惩罚高）</p>
<p><strong>Presence Penalty</strong>：也减少token中词重复（重复次数无关的惩罚）</p>
<h2 id="2-提示词要素">2 提示词要素</h2>
<p>提示词可以包含：</p>
<ol>
<li><strong>指令</strong>：想要模型执行的特定任务或指令。</li>
<li><strong>上下文</strong>：包含外部信息或额外的上下文信息，引导语言模型更好地响应。</li>
<li><strong>输入数据</strong>：用户输入的内容或问题。</li>
<li><strong>输出指示</strong>：指定输出的类型或格式。</li>
</ol>
<h2 id="3-设计提示的通用技巧">3 设计提示的通用技巧</h2>
<p><strong>从简单开始</strong>：尝试将任务分解为更简单的子任务</p>
<p><strong>指令</strong>：以不同的关键词，上下文和数据试验不同的指令，看看什么样是最适合你特定用例和任务</p>
<p><strong>具体性</strong>：提示越具描述性和详细结果越好。如：提供示例。</p>
<p><strong>避免使用不明确的词</strong>：如：“几句话”， “一些” 等</p>
<p><strong>避免说不要做什么，而应该说要做什么</strong>。</p>
<h2 id="4-简单的提示词示例">4 简单的提示词示例</h2>
<p><strong>文本概括</strong>：[上下文] Explain the above in one sentence:</p>
<p><strong>信息提取</strong>：[上下文] Mention the large language model based product mentioned in the paragraph above:</p>
<p><strong>问答</strong>：[上下文] Question: What was OKT3 originally sourced from?  Answer:</p>
<p><strong>文本分类</strong>: Classify the text into neutral, negative or positive. Text: I think the food was okay. Sentiment:</p>
<p>（如果大模型返回的是大写的Neutral而非你想要的neutral：给出示例，或者更具体的命令。）</p>
<p><strong>对话</strong>：可以设定回复的风格并给出示例：The following is a conversation with an AI research assistant. The assistant tone is technical and scientific. Human: Hello, who are you?AI: Greeting! I am an AI research assistant. How can I help you today?Human: Can you tell me about the creation of blackholes?AI:</p>
<p><strong>代码生成</strong>：""" Table departments, columns = [DepartmentId, DepartmentName]Table students, columns = [DepartmentId, StudentId, StudentName]Create a MySQL query for all students in the Computer Science Department """</p>
<p><strong>推理</strong>：What is 9,000 * 9,000?</p>
<h1 id="高阶提示技术">高阶提示技术</h1>
<h2 id="1-零样本提示">1 零样本提示</h2>
<p>不提供任何示例。</p>
<pre><code>Q: 1 + 1 = ?
A: 2
</code></pre>
<h2 id="2-少样本提示">2 少样本提示</h2>
<p>提供一些示例。</p>
<p><strong>1-shot</strong>：</p>
<pre><code>Q: “whatpu”是坦桑尼亚的一种小型毛茸茸的动物。一个使用whatpu这个词的句子的例子是：我们在非洲旅行时看到了这些非常可爱的whatpus。“farduddle”是指快速跳上跳下。一个使用farduddle这个词的句子的例子是：

A: 当我们赢得比赛时，我们都开始庆祝与farduddle。
</code></pre>
<p><strong>few-shot</strong>：</p>
<pre><code>Q: 这太棒了！// Negative
这太糟糕了！// Positive
哇，那部电影太棒了！// Positive
多么可怕的节目！//

A: Negative
</code></pre>
<p><strong>但少样本在一些复杂问题表现不佳：</strong></p>
<p><em>提示：</em></p>
<pre><code>这组数字中的奇数加起来是一个偶数：4、8、9、15、12、2、1。
A：答案是False。
这组数字中的奇数加起来是一个偶数：17、10、19、4、8、12、24。
A：答案是True。
这组数字中的奇数加起来是一个偶数：16、11、14、4、8、13、24。
A：答案是True。
这组数字中的奇数加起来是一个偶数：17、9、10、12、13、4、2。
A：答案是False。
这组数字中的奇数加起来是一个偶数：15、32、5、13、82、7、1。
A：
</code></pre>
<p><em>输出：</em></p>
<pre><code>答案是True。
</code></pre>
<h2 id="3-链式思考cot提示">3 链式思考（CoT）提示</h2>
<p><strong>带示例的CoT</strong></p>
<p><em>提示：</em></p>
<pre><code>这组数中的奇数加起来是偶数：4、8、9、15、12、2、1。
A：将所有奇数相加（9、15、1）得到25。答案为False。
这组数中的奇数加起来是偶数：15、32、5、13、82、7、1。
A：
</code></pre>
<p><em>输出：</em></p>
<pre><code>将所有奇数相加（15、5、13、7、1）得到41。答案为False。
</code></pre>
<p><a href="https://arxiv.org/abs/2201.11903" target="_blank" rel="noopener nofollow">Wei等人（2022）</a>认为这是足够大的语言模型才会出现的新兴能力。</p>
<p><strong>0-Shot的CoT</strong>：“让我们逐步思考。”</p>
<p><em>提示：</em></p>
<pre><code>我去市场买了10个苹果。我给了邻居2个苹果和修理工2个苹果。然后我去买了5个苹果并吃了1个。我还剩下多少苹果？
让我们逐步思考。
</code></pre>
<p><em>输出：</em></p>
<pre><code>首先，您从10个苹果开始。
您给了邻居和修理工各2个苹果，所以您还剩下6个苹果。
然后您买了5个苹果，所以现在您有11个苹果。
最后，您吃了1个苹果，所以您还剩下10个苹果。
</code></pre>
<p><strong>自动思维链（Auto-CoT）</strong></p>
<p><strong>Auto-CoT</strong> 是一种 <strong>无需人工设计示例</strong> 的提示构造方法，它能够自动生成“思维链”提示，以引导语言模型像人一样逐步推理。这种方法由 Google 的研究者在论文《Large Language Models are Self-Consistent Reasoners》中提出，是对手动 CoT 的一种自动化替代方案。</p>
<ol>
<li>
<p><strong>自动聚类问题</strong><br>
把所有待解决的问题按“语义或结构”相似性分成几类（如加法类、排序类、计数类等）。</p>
</li>
<li>
<p><strong>每类用 Zero-shot CoT 生成示例</strong><br>
对每一类问题，选一个代表问题，对它使用 Zero-shot CoT（加一句提示：<em>“Let's think step by step.”</em>）生成一个包含中间推理步骤的解答。</p>
</li>
<li>
<p><strong>组装 few-shot 提示用于解新题</strong><br>
把每类生成的 CoT 示例拼成一个 few-shot prompt，然后用于引导模型解决其他同类（甚至跨类）的问题。</p>
</li>
</ol>
<h2 id="4-自我一致性">4 自我一致性</h2>
<p>通过少样本 CoT 采样多个不同的推理路径，并使用生成结果选择最一致的答案。这有助于提高 CoT 提示在涉及算术和常识推理的任务中的性能。</p>
<p><em>提示：</em></p>
<pre><code>...
Q：Michael有58个高尔夫球。星期二，他丢失了23个高尔夫球。星期三，他又丢失了2个。星期三结束时他还剩多少个高尔夫球？
A：Michael最初有58个球。星期二他丢失了23个，所以在那之后他有58-23 = 35个球。星期三他又丢失了2个，所以现在他有35-2 = 33个球。答案是33。
Q：Olivia有23美元。她用每个3美元的价格买了五个百吉饼。她还剩多少钱？
A：她用每个3美元的价格买了5个百吉饼。这意味着她花了15美元。她还剩8美元。
Q：当我6岁时，我的妹妹是我的一半年龄。现在我70岁了，我的妹妹多大？
A：
</code></pre>
<p><em>输出:</em></p>
<pre><code>1 当我6岁时，我的妹妹是我的一半年龄，也就是3岁。现在我70岁了，所以她是70-3 = 67岁。答案是67。
2 当叙述者6岁时，他的妹妹是他年龄的一半，也就是3岁。现在叙述者70岁了，他的妹妹应该是70-3 = 67岁。答案是67。
3 当我6岁时，我的妹妹是我的一半年龄，也就是3岁。现在我70岁了，所以她是70/2 = 35岁。答案是35。
(答案更可能是67)
</code></pre>
<h2 id="5-生成知识提示">5 生成知识提示</h2>
<p>简单来说，是用模型自己生成的知识来指导自己。</p>
<p><em>提示：</em></p>
<pre><code>...
输入：一个人一生中吸烟很多香烟的常见影响是患肺癌的几率高于正常水平。
知识：那些一生中平均每天吸烟不到一支香烟的人，患肺癌的风险是从不吸烟者的9倍。在每天吸烟1到10支香烟之间的人群中，死于肺癌的风险几乎是从不吸烟者的12倍。

输入：一块石头和一颗卵石大小相同。
知识：卵石是一种根据Udden-Wentworth沉积学尺度的颗粒大小为4到64毫米的岩屑。卵石通常被认为比颗粒（直径2到4毫米）大，比卵石（直径64到256毫米）小。

输入：高尔夫球的一部分是试图获得比其他人更高的得分。
知识：
</code></pre>
<p><em>知识：</em></p>
<pre><code>1 高尔夫球的目标是以最少的杆数打完一组洞。一轮高尔夫球比赛通常包括18个洞。每个洞在标准高尔夫球场上一轮只打一次。每个杆计为一分，总杆数用于确定比赛的获胜者。
2 高尔夫球是一项精密的球杆运动，竞争选手（或高尔夫球手）使用许多类型的球杆，用最少的杆数将球打入球场上一系列洞中。目标是以最低的分数完成比赛，该分数是通过将每个洞上所用的杆数相加计算出来的。得分最低的选手赢得比赛。
</code></pre>
<p><em>整合知识后提示</em>：</p>
<pre><code>问题：高尔夫球的一部分是试图获得比其他人更高的得分。是或否？
知识：高尔夫球的目标是以最少的杆数打完一组洞。一轮高尔夫球比赛通常包括18个洞。每个洞在标准高尔夫球场上一轮只打一次。每个杆计为一分，总杆数用于确定比赛的获胜者。
解释和答案： 
</code></pre>
<p><em>答案：</em></p>
<pre><code>不是，高尔夫球的目标不是获得比其他人更高的得分。相反，目标是以最少的杆数打完一组洞。总杆数用于确定比赛的获胜者，而不是总得分。
</code></pre>
<h2 id="6-链式提示">6 链式提示</h2>
<p>将任务分解为许多子任务。将子任务得到的结果作为新的提示词的一部分。</p>
<h2 id="7-思维树tot">7 思维树（ToT）</h2>
<p>增强模型在<strong>复杂问题解决</strong>和<strong>规划任务</strong>中的能力，比如数独解题、数学证明、策略规划等。</p>
<hr>
<p><strong>🌳 什么是 Tree of Thoughts（ToT）？</strong></p>
<p>Tree of Thoughts 是一种<strong>多步推理框架</strong>，核心思想是：</p>
<blockquote>
<p>把问题求解过程看作是“在思维空间中探索一棵决策树”，每个节点表示一个“思维状态”（thought/state），通过一步步扩展可能的思路来构造“思维路径”。</p>
</blockquote>
<p>相比于传统的一步到位或线性推理（如 Chain of Thought），ToT 更类似于搜索树（如蒙特卡洛搜索树），允许模型<strong>并行地探索多个解题路径</strong>，选择最优思路而不是固定前行。</p>
<hr>
<p><strong>🔧 ToT 的组成结构</strong></p>
<ol>
<li><strong>思维状态（Thought / State）</strong>：<br>
每个节点表示当前问题的一种思考进展，例如部分解或一个子推理步骤。</li>
<li><strong>思维扩展（Thought Generation）</strong>：<br>
模型从当前状态出发，生成多个可能的“下一步思维”，即子节点。</li>
<li><strong>思维评估（Thought Evaluation）</strong>：<br>
对每个子节点进行评分，选择更有希望的路径。评估方式可以是：
<ul>
<li>模型自评（Self-consistency, Voting 等）</li>
<li>Heuristic 打分函数</li>
<li>外部工具辅助评估</li>
</ul>
</li>
<li><strong>搜索策略（Search Strategy）</strong>：<br>
使用宽度优先（BFS）、深度优先（DFS）或其他启发式搜索方法，在整棵“思维树”中找到最优路径。</li>
</ol>
<hr>
<p><strong>🧩 举个例子：数独解题</strong></p>
<p><strong>用 CoT：</strong></p>
<ul>
<li>第一步填1，第二步填2，第三步填3……（一步错，后面全错）</li>
</ul>
<p><strong>用 ToT：</strong></p>
<ul>
<li>先尝试填1、2、3……生成多个解法路径</li>
<li>逐步展开每个路径</li>
<li>评估哪些路径合法，哪些应该剪枝</li>
<li>最终找到符合规则的完整解</li>
</ul>
<h2 id="8-检索增强生成rag">8 检索增强生成（RAG）</h2>
<p><strong>🧠 一句话理解 RAG：</strong></p>
<blockquote>
<p>RAG = <strong>检索（Retrieve）相关文档</strong> + <strong>生成（Generate）答案</strong><br>
模型不再“闭卷”作答，而是“开卷”查资料再作答。</p>
</blockquote>
<p><strong>🔧 RAG 的工作流程：</strong></p>
<p>可以分为两个主要阶段：</p>
<p><strong>检索阶段（Retrieval）</strong></p>
<ul>
<li>输入用户问题 <code>q</code></li>
<li>使用一个<strong>稠密检索器</strong>（如 FAISS、DPR）在<strong>外部知识库</strong>中找到与问题最相关的文档或段落</li>
<li>得到 <code>k</code> 个候选文本（上下文）</li>
</ul>
<blockquote>
<p>🗂 知识库可以是维基百科、私有文档、数据库、PDF等</p>
</blockquote>
<p><strong>生成阶段（Generation）</strong></p>
<ul>
<li>将问题 <code>q</code> 与检索到的上下文 <code>d1, d2, ..., dk</code> 一起输入到语言模型（如 GPT）</li>
</ul>
<p>模型根据上下文生成回答</p>
<h2 id="9-自动推理并使用工具-art-">9 自动推理并使用工具 (ART )</h2>
<p>Automatic Reasoning and Tool-use 的工作原理如下：</p>
<ul>
<li>接到一个新任务的时候，从任务库中选择多步推理和使用工具的示范。</li>
<li>在测试中，调用外部工具时，先暂停生成，将工具输出整合后继续接着生成。</li>
</ul>
<h2 id="10--自动提示工程师ape">10  自动提示工程师（APE）</h2>
<p>自动地找出最能让大模型“听懂问题并给出好答案”的提示词。</p>
<p>提示工程（Prompt Engineering）曾经高度依赖<strong>人类经验</strong>，但：</p>
<ul>
<li>提示设计空间巨大（同一个任务可以有上千种提示）</li>
<li>人力设计效率低、难以系统探索</li>
</ul>
<p>于是就有了 APE：<strong>让模型自己做提示工程师</strong>，系统地搜索“好提示”</p>
<ol>
<li>生成候选提示</li>
</ol>
<pre><code>例如：I want to find the best way to ask a language model to solve [TASK]. Suggest a good prompt for this task.
</code></pre>
<ol start="2">
<li>评估提示效果</li>
<li>选择最优提示</li>
</ol>
<h2 id="11-active-prompt">11 Active-Prompt</h2>
<ol>
<li>使用或不使用少量 CoT 示例查询 LLM。</li>
<li>对一组训练问题生成 <em>k</em> 个可能的答案。</li>
<li>基于 <em>k</em> 个答案计算不确定度度量（使用不一致性）。</li>
<li>选择最不确定的问题由人类进行注释。然后使用新的注释范例来推断每个问题。</li>
</ol>
<h2 id="12-方向性刺激提示">12 方向性刺激提示</h2>
<pre><code>Q:总结以上内容。重点：xx1; xx2; xx3; ...
</code></pre>
<h2 id="13-pal程序辅助语言模型">13 PAL（程序辅助语言模型）</h2>
<p>提示词引导模型在类似链式思考的同时输出python代码</p>
<p><em>提示：</em></p>
<pre><code>DATE_UNDERSTANDING_PROMPT = """
# Q: 2015 is coming in 36 hours. What is the date one week from today in MM/DD/YYYY?
# If 2015 is coming in 36 hours, then today is 36 hours before.
today = datetime(2015, 1, 1) - relativedelta(hours=36)
# One week from today,
one_week_from_today = today + relativedelta(weeks=1)
# The answer formatted with %m/%d/%Y is
one_week_from_today.strftime('%m/%d/%Y')
# Q: The first day of 2019 is a Tuesday, and today is the first Monday of 2019. What is the date today in MM/DD/YYYY?
# If the first day of 2019 is a Tuesday, and today is the first Monday of 2019, then today is 6 days later.
today = datetime(2019, 1, 1) + relativedelta(days=6)
# The answer formatted with %m/%d/%Y is
today.strftime('%m/%d/%Y')
...
# Q: {question}
""".
</code></pre>
<p><em>输出：</em></p>
<pre><code># If today is 27 February 2023 and I was born exactly 25 years ago, then I was born 25 years before.
today = datetime(2023, 2, 27)
# I was born 25 years before,
born = today - relativedelta(years=25)
# The answer formatted with %m/%d/%Y is
born.strftime('%m/%d/%Y')
</code></pre>
<p><em>执行：</em></p>
<pre><code>exec(llm_out)
print(born)
02/27/1998
</code></pre>
<h2 id="14-react框架">14 ReAct框架</h2>
<p>LLMs 以交错的方式生成 <em>推理轨迹</em> 和 <em>任务特定操作</em> 。生成推理轨迹使模型能够诱导、跟踪和更新操作计划，甚至处理异常情况。操作步骤允许与外部源（如知识库或环境）进行交互并且收集信息。</p>
<p>ReAct 框架允许 LLMs 与外部工具交互来获取额外信息，从而给出更可靠和实际的回应。</p>
<p>链式思考 (CoT) 显示了 LLMs 执行推理轨迹以生成涉及算术和常识推理的问题的答案的能力，但它因缺乏和外部世界的接触或无法更新自己的知识，而导致事实幻觉和错误传播等问题。</p>
<pre><code class="language-py">&gt; 正在输入新代理执行器链......
  我得查出奥利维亚·王尔德的男友是谁然后计算出他的年龄的 0.23 次方。
操作: 搜索
操作输入: “奥利维亚·王尔德的男友”
观察: 奥利维亚·王尔德与杰森·苏代基斯在多年前订婚，在他们分手后，她开始与哈里·斯泰尔斯约会 — 参照他们的关系时间线。
思考: 我需要找出哈里·斯泰尔斯的年龄。
操作: 搜索
操作输入: “哈里·斯泰尔斯的年龄”
观察: 29 岁
思考: 我需要计算 29 的 0.23 次方。
操作: 计算器
操作输入: 29^0.23
观察: 答案: 2.169459462491557
 
思考: 现在我知道最终答案了。
最终答案: 哈里·斯泰尔斯, 奥利维亚·王尔德的男朋友, 29 岁。他年龄的 0.23 次方是 2.169459462491557。
 
&gt; 结束链。
</code></pre>
<h2 id="15-自我反思reflexion">15 自我反思（Reflexion）</h2>
<p>将来自环境的反馈（自由形式的语言或者标量）转换为语言反馈，为下一轮中 LLM 智能体提供上下文。这有助于智能体快速有效地从之前的错误中学习，进而提升许多高级任务的性能。</p>
<p>总的来说，自我反思的关键步骤是a)定义任务，b)生成轨迹，c)评估，d)执行自我反思，e)生成下一条轨迹。</p>
<p>主要参考：</p>
<p>[1] <a href="https://www.promptingguide.ai/zh/techniques/" target="_blank" rel="noopener nofollow">https://www.promptingguide.ai/zh/techniques/</a></p>
<p>[2] <a href="https://chatgpt.com/" target="_blank" rel="noopener nofollow">https://chatgpt.com/</a></p>

</div>
<div class="clear"></div>

		</div>
		<div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.003472222222222222" data-date-updated="2025-07-12 20:14">2025-07-12 20:09</span>&nbsp;
<a href="https://www.cnblogs.com/fordsonliuzhiwen">Fordson</a>&nbsp;
阅读(<span id="post_view_count">80</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18981007);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18981007', targetLink: 'https://www.cnblogs.com/fordsonliuzhiwen/p/18981007', title: '速通提示词工程Prompt Engineering' })">举报</a>
</div>
	