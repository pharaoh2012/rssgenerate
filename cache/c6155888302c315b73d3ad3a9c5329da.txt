
		<h1 class="postTitle">
			<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/TheMagicalRainbowSea/p/18694860" title="发布于 2025-01-29 21:39">
    <span role="heading" aria-level="2">四.3 Redis 五大数据类型/结构的详细说明/详细使用（ hash 哈希表数据类型详解和使用）</span>
    

</a>

		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="四3-redis-五大数据类型结构的详细说明详细使用-hash-哈希表数据类型详解和使用">四.3 Redis 五大数据类型/结构的详细说明/详细使用（ hash 哈希表数据类型详解和使用）</h1>
<p>@</p><div class="toc"><div class="toc-container-header">目录</div><ul><li><a href="#四3-redis-五大数据类型结构的详细说明详细使用-hash-哈希表数据类型详解和使用" rel="noopener nofollow">四.3 Redis 五大数据类型/结构的详细说明/详细使用（ hash 哈希表数据类型详解和使用）</a></li><li><a href="#2hash-哈希表常用指令详细讲解说明" rel="noopener nofollow">2.hash 哈希表常用指令(详细讲解说明)</a><ul><li><a href="#21-hset-keyfieldvalue-给key集合中的---field键赋值-value" rel="noopener nofollow">2.1 <code>hset &lt;key&gt;&lt;field&gt;&lt;value&gt;</code> 给<code>&lt;key&gt;</code>集合中的   <code>&lt;field&gt;</code>键赋值 <code>&lt;value&gt;</code></a></li><li><a href="#22-hget-key1field从key1集合field取出-value" rel="noopener nofollow">2.2 <code>hget &lt;key1&gt;&lt;field&gt;</code>从<code>&lt;key1&gt;</code>集合<code>&lt;field&gt;</code>取出 value</a></li><li><a href="#23-hmset-key1field1value1field2value2--批量设置-hash-的值" rel="noopener nofollow">2.3 <code>hmset &lt;key1&gt;&lt;field1&gt;&lt;value1&gt;&lt;field2&gt;&lt;value2&gt;...</code>  批量设置 hash 的值</a></li><li><a href="#24-hmget-key1field1-field2-批量取出-hash-的-filed-值" rel="noopener nofollow">2.4 <code>hmget &lt;key1&gt;&lt;field1&gt; &lt;field2&gt;... </code>批量取出 hash 的 filed 值</a></li><li><a href="#25-hexistskey1field-查看哈希表--key-中给定域--field-是否存在" rel="noopener nofollow">2.5 <code>hexists&lt;key1&gt;&lt;field&gt;</code> 查看哈希表  key 中，给定域  field 是否存在</a></li><li><a href="#26--hkeys-key-列出该-hash-集合的所有-field" rel="noopener nofollow">2.6 <code> hkeys &lt;key&gt;</code> 列出该 hash 集合的所有 field</a></li><li><a href="#27-hvals-key-列出该-hash-集合的所有-value" rel="noopener nofollow">2.7 <code>hvals &lt;key&gt;</code> 列出该 hash 集合的所有 value</a></li><li><a href="#28-hincrby-keyfieldincrement为哈希表--key-中的域--field-的值加上增量-1-------1" rel="noopener nofollow">2.8 <code>hincrby &lt;key&gt;&lt;field&gt;&lt;increment&gt;</code>为哈希表  key 中的域  field 的值加上增量 1      -1</a></li><li><a href="#29-hsetnx-keyfieldvalue将哈希表--key-中的域--field-的值设置为--value-当且仅当域--field-不存在时还会成功" rel="noopener nofollow">2.9 <code>hsetnx &lt;key&gt;&lt;field&gt;&lt;value&gt;</code>将哈希表  key 中的域  field 的值设置为  value ，当且仅当域  field 不存在时，还会成功</a></li></ul></li><li><a href="#3-最后" rel="noopener nofollow">3. 最后：</a></li></ul></div><p></p>
<hr>
<p><strong>hash哈希表 ：一句话: Redis hash  是一个键值对集合，hash 适合用于存储对象，  类似 Java 里面的 Map&lt;String,Object&gt;</strong> 。</p>
<p><strong>Redis hash  存储结构简单示意图：</strong></p>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228923-1843834968.png" alt="在这里插入图片描述" loading="lazy"></p>
<blockquote>
<p>关于hash 哈希表的命令，在 Redis 当中有如下这些：</p>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228966-62194918.png" alt="在这里插入图片描述" loading="lazy"></p>
</blockquote>
<p><strong>这里我们介绍一些 hash 哈希表比较常用的一些命令，然后，举一反三，根据文档也可以对其它的命令上手学习使用了</strong> 。</p>
<h1 id="2hash-哈希表常用指令详细讲解说明">2.hash 哈希表常用指令(详细讲解说明)</h1>
<h2 id="21-hset-keyfieldvalue-给key集合中的---field键赋值-value">2.1 <code>hset &lt;key&gt;&lt;field&gt;&lt;value&gt;</code> 给<code>&lt;key&gt;</code>集合中的   <code>&lt;field&gt;</code>键赋值 <code>&lt;value&gt;</code></h2>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228815-679523903.png" alt="在这里插入图片描述" loading="lazy"></p>
<pre><code class="language-sh">127.0.0.1:6379&gt; hset monster_100 id "100" name "jack"
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228752-1477899958.png" alt="在这里插入图片描述" loading="lazy"></p>
<blockquote>
<p><strong>注意：</strong> 也可以使用该指令，在已存在的哈希表当中添加新的，键值对</p>
</blockquote>
<pre><code class="language-sh">127.0.0.1:6379&gt; hset monster_100 age "18"
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228922-1889292792.png" alt="在这里插入图片描述" loading="lazy"></p>
<h2 id="22-hget-key1field从key1集合field取出-value">2.2 <code>hget &lt;key1&gt;&lt;field&gt;</code>从<code>&lt;key1&gt;</code>集合<code>&lt;field&gt;</code>取出 value</h2>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228957-574960979.png" alt="在这里插入图片描述" loading="lazy"></p>
<pre><code class="language-sh">127.0.0.1:6379&gt; hget monster_100 name
"jack"
127.0.0.1:6379&gt; hget monster_100 id
"100"

</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228958-701528022.png" alt="在这里插入图片描述" loading="lazy"></p>
<h2 id="23-hmset-key1field1value1field2value2--批量设置-hash-的值">2.3 <code>hmset &lt;key1&gt;&lt;field1&gt;&lt;value1&gt;&lt;field2&gt;&lt;value2&gt;...</code>  批量设置 hash 的值</h2>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228955-652274730.png" alt="在这里插入图片描述" loading="lazy"></p>
<p>和 hset 是一样的。</p>
<pre><code class="language-sh">127.0.0.1:6379&gt; hmset monster_200 id "200" name "lihua"
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228947-232517044.png" alt="在这里插入图片描述" loading="lazy"></p>
<h2 id="24-hmget-key1field1-field2-批量取出-hash-的-filed-值">2.4 <code>hmget &lt;key1&gt;&lt;field1&gt; &lt;field2&gt;... </code>批量取出 hash 的 filed 值</h2>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228871-1446307907.png" alt="在这里插入图片描述" loading="lazy"></p>
<pre><code class="language-sh">127.0.0.1:6379&gt; hmget monster_100 "id" "name"
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228839-1066055093.png" alt="在这里插入图片描述" loading="lazy"></p>
<h2 id="25-hexistskey1field-查看哈希表--key-中给定域--field-是否存在">2.5 <code>hexists&lt;key1&gt;&lt;field&gt;</code> 查看哈希表  key 中，给定域  field 是否存在</h2>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228817-1215954698.png" alt="在这里插入图片描述" loading="lazy"></p>
<pre><code class="language-sh">127.0.0.1:6379&gt; hexists monster_100 "id"
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228751-1014873428.png" alt="在这里插入图片描述" loading="lazy"></p>
<h2 id="26--hkeys-key-列出该-hash-集合的所有-field">2.6 <code> hkeys &lt;key&gt;</code> 列出该 hash 集合的所有 field</h2>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228868-895986004.png" alt="在这里插入图片描述" loading="lazy"></p>
<pre><code class="language-sh">127.0.0.1:6379&gt; hkeys monster_100
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228952-1609150934.png" alt="在这里插入图片描述" loading="lazy"></p>
<h2 id="27-hvals-key-列出该-hash-集合的所有-value">2.7 <code>hvals &lt;key&gt;</code> 列出该 hash 集合的所有 value</h2>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228865-1656723952.png" alt="在这里插入图片描述" loading="lazy"></p>
<pre><code class="language-sh">127.0.0.1:6379&gt; hvals monster_100
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228973-244133556.png" alt="在这里插入图片描述" loading="lazy"></p>
<blockquote>
<p><strong>注意：</strong> 如果指定的 哈希表不存在，则返回：<code>empty array</code></p>
</blockquote>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228924-1612146574.png" alt="在这里插入图片描述" loading="lazy"></p>
<h2 id="28-hincrby-keyfieldincrement为哈希表--key-中的域--field-的值加上增量-1-------1">2.8 <code>hincrby &lt;key&gt;&lt;field&gt;&lt;increment&gt;</code>为哈希表  key 中的域  field 的值加上增量 1      -1</h2>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228963-1230581280.png" alt="在这里插入图片描述" loading="lazy"></p>
<pre><code class="language-sh">127.0.0.1:6379&gt; hincrby monster_100 age 1
(integer) 19
127.0.0.1:6379&gt; hget monster_100 age
"19"
127.0.0.1:6379&gt; hincrby monster_100 age 10
(integer) 29
127.0.0.1:6379&gt; hget monster_100 age
"29"
127.0.0.1:6379&gt; 

</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228959-1135595588.png" alt="在这里插入图片描述" loading="lazy"></p>
<blockquote>
<p><strong>注意：</strong>只有<code>"数字字符串"</code> 才可以运算 + 1</p>
</blockquote>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228969-356169902.png" alt="在这里插入图片描述" loading="lazy"></p>
<h2 id="29-hsetnx-keyfieldvalue将哈希表--key-中的域--field-的值设置为--value-当且仅当域--field-不存在时还会成功">2.9 <code>hsetnx &lt;key&gt;&lt;field&gt;&lt;value&gt;</code>将哈希表  key 中的域  field 的值设置为  value ，当且仅当域  field 不存在时，还会成功</h2>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228964-464517863.png" alt="在这里插入图片描述" loading="lazy"></p>
<pre><code class="language-sh">127.0.0.1:6379&gt; hsetnx monster_100 sex f
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228984-1306926458.png" alt="在这里插入图片描述" loading="lazy"></p>
<blockquote>
<p><strong>注意：</strong> 如果给定域已经存在于哈希表当中， 那么命令将放弃执行设置操作。</p>
</blockquote>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228956-1037801888.png" alt="在这里插入图片描述" loading="lazy"></p>
<h1 id="3-最后">3. 最后：</h1>
<blockquote>
<p>“在这个最后的篇章中，我要表达我对每一位读者的感激之情。你们的关注和回复是我创作的动力源泉，我从你们身上吸取了无尽的灵感与勇气。我会将你们的鼓励留在心底，继续在其他的领域奋斗。感谢你们，我们总会在某个时刻再次相遇。”</p>
<p><img src="https://img2024.cnblogs.com/blog/3084824/202501/3084824-20250129213228913-633794464.gif" alt="在这里插入图片描述" loading="lazy"></p>
</blockquote>

</div>
<div class="clear"></div>

		</div>
		<div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.024536607695601852" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-29 21:39">2025-01-29 21:39</span>&nbsp;
<a href="https://www.cnblogs.com/TheMagicalRainbowSea">Rainbow-Sea</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18694860" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18694860);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18694860', targetLink: 'https://www.cnblogs.com/TheMagicalRainbowSea/p/18694860', title: '四.3 Redis 五大数据类型/结构的详细说明/详细使用（ hash 哈希表数据类型详解和使用）' })">举报</a>
</div>
	