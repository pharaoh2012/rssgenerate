
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/huangSir-devops/p/18919321" title="发布于 2025-06-09 13:59">
    <span role="heading" aria-level="2">K8s新手系列之CronJob</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="概述">概述</h2>
<p>官方文档：<a href="https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/cron-jobs/" target="_blank" rel="noopener nofollow">https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/cron-jobs/</a></p>
<p>CronJob控制器以 Job控制器资源为其管控对象，并借助它管理pod资源对象，Job控制器定义的作业任务在其控制器资源创建之后便会立即执行，但CronJob可以以类似于Linux操作系统的周期性任务作业计划的方式控制其运行时间点及重复运行的方式。也就是说，CronJob可以在特定的时间点(反复的)去运行job任务。</p>
<blockquote>
<p>学习Job可以阅读这篇文章：<a href="https://www.cnblogs.com/huangSir-devops/p/18904493" target="_blank">https://www.cnblogs.com/huangSir-devops/p/18904493</a></p>
</blockquote>
<p><img src="https://img2024.cnblogs.com/blog/3468887/202506/3468887-20250608133233793-2033427120.png" alt="image" loading="lazy"></p>
<h2 id="cronjob作用">CronJob作用</h2>
<ul>
<li>按照指定时间周期（如每小时、每天、每周）创建 Job 对象。</li>
<li>Job 负责运行 Pod 执行具体任务，任务完成后 Pod 自动终止。</li>
</ul>
<h2 id="cronjob资源清单文件">CronJob资源清单文件</h2>
<pre><code>apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup-job
spec:
  schedule: "0 2 * * *"  # 每天凌晨2点执行
  concurrencyPolicy: Forbid  # 禁止并发执行
  startingDeadlineSeconds: 300  # 任务启动超时时间
  successfulJobsHistoryLimit: 3  # 保留成功的Job数量
  failedJobsHistoryLimit: 1  # 保留失败的Job数量
  jobTemplate:  # Job模板
    spec:
      template:
        spec:
          containers:
          - name: backup
            image: my-backup-image
            command: ["/bin/sh", "-c", "backup-script.sh"]
          restartPolicy: OnFailure  # 失败时重启
</code></pre>
<h3 id="字段说明">字段说明</h3>
<h4 id="schedulecron-表达式格式为-分钟-小时-日期-月份-星期">schedule：Cron 表达式，格式为 分钟 小时 日期 月份 星期</h4>
<ul>
<li>示例：
<ul>
<li>0 2 * * *：每天凌晨 2 点。</li>
<li>*/15 * * * *：每 15 分钟。</li>
<li>0 0 * * 0：每周日午夜。</li>
</ul>
</li>
</ul>
<h4 id="concurrencypolicy控制并发执行策略">concurrencyPolicy：控制并发执行策略</h4>
<ul>
<li>Allow（默认）：允许并发运行多个 Job。</li>
<li>Forbid：禁止并发，若前一个未完成则跳过本次调度。</li>
<li>Replace：替换未完成的 Job，启动新 Job。</li>
</ul>
<h4 id="startingdeadlineseconds">startingDeadlineSeconds</h4>
<p>任务启动超时时间，若超过此时间仍未启动，则标记为失败。</p>
<h4 id="jobtemplate">jobTemplate</h4>
<p>Job 的模板定义，包含 Pod 规范，与独立 Job 资源的 spec 字段相同。</p>
<h2 id="实战案例">实战案例</h2>
<pre><code>[root@master ~/cronjob]# cat cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello-cron
spec:
  # 每分钟执行一次
  schedule: "* * * * *"
  # 禁止并发执行
  concurrencyPolicy: Forbid
  # 任务启动超时时间
  startingDeadlineSeconds: 300
  # 保留成功的Job数量
  successfulJobsHistoryLimit: 10
  # 保留失败的Job数量
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: cj-busybox
            image: busybox
            args:
            - /bin/sh
            - -c
            - echo "Hello, CronJob!"
          restartPolicy: Never

# 创建cronjob
[root@master ~/cronjob]# kubectl apply -f cronjob.yaml
cronjob.batch/hello-cron created
</code></pre>
<p>查看资源</p>
<pre><code># 查看cronjob
# SUSPEND表示是否暂停调度（False表示正常运行）
# ACTIVE：当前活跃的 Job 数量（0表示没有正在运行的 Job）
# LAST SCHEDULE：上一次调度 Job 的时间（57s前）
[root@master ~/cronjob]# kubectl get cj
NAME         SCHEDULE    SUSPEND   ACTIVE   LAST SCHEDULE   AGE
hello-cron   * * * * *   False     0        57s             18m

# 查看job
[root@master ~/cronjob]# kubectl get job
NAME                  COMPLETIONS   DURATION   AGE
hello-cron-29156032   1/1           6s         9m8s
hello-cron-29156033   1/1           6s         8m8s
hello-cron-29156034   1/1           5s         7m8s
hello-cron-29156035   1/1           6s         6m8s
hello-cron-29156036   1/1           6s         5m8s
hello-cron-29156037   1/1           5s         4m8s
hello-cron-29156038   1/1           6s         3m8s
hello-cron-29156039   1/1           5s         2m8s
hello-cron-29156040   1/1           5s         68s
hello-cron-29156041   1/1           5s         8s

# 查看Pod
[root@master ~/cronjob]# kubectl get po
NAME                                                     READY   STATUS      RESTARTS   AGE
hello-cron-29156031-jnck2                                0/1     Completed   0          10m
hello-cron-29156032-cxbsk                                0/1     Completed   0          9m4s
hello-cron-29156033-bw6kf                                0/1     Completed   0          8m4s
hello-cron-29156034-kkwc2                                0/1     Completed   0          7m4s
hello-cron-29156035-bhzkv                                0/1     Completed   0          6m4s
hello-cron-29156036-vlxrz                                0/1     Completed   0          5m4s
hello-cron-29156037-v968r                                0/1     Completed   0          4m4s
hello-cron-29156038-gj9c5                                0/1     Completed   0          3m4s
hello-cron-29156039-7lnb4                                0/1     Completed   0          2m4s
hello-cron-29156040-lqtfv                                0/1     Completed   0          64s
hello-cron-29156041-bndq5                                0/1     Completed   0          4s
</code></pre>

</div>
<div id="MySignature" role="contentinfo">
    <p>本文来自博客园，作者：<a href="https://www.cnblogs.com/huangSir-devops/" target="_blank">huangSir-devops</a>，转载请注明原文链接：<a href="https://www.cnblogs.com/huangSir-devops/p/18919321" target="_blank">https://www.cnblogs.com/huangSir-devops/p/18919321</a>，微信Vac666666，欢迎交流</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.016500471707175925" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-06-09 14:00">2025-06-09 13:59</span>&nbsp;
<a href="https://www.cnblogs.com/huangSir-devops">huangSir-devops</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18919321);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18919321', targetLink: 'https://www.cnblogs.com/huangSir-devops/p/18919321', title: 'K8s新手系列之CronJob' })">举报</a>
</div>
        