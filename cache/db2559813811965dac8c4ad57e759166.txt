
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/codingtea/p/19062895" title="发布于 2025-08-28 16:21">
    <span role="heading" aria-level="2">通过matlab训练和验证深度学习的目标检测</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        <img src="https://img2024.cnblogs.com/blog/3687401/202508/3687401-20250828161735051-1913472114.png" alt="通过matlab训练和验证深度学习的目标检测" class="desc_img">
        本期介绍了如何利用MATLAB的Image Labeler工具标注数据并训练RCNN目标检测器（以AlexNet为骨干网络），最终实现对“慢行”和“停车让行”标志的高精度识别。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="视频演示">视频演示：</h1>
<p><a href="https://www.bilibili.com/video/BV1kwe2zTES3/" target="_blank" rel="noopener nofollow">通过matlab训练和验证深度学习的目标检测_哔哩哔哩_bilibili</a></p>
<p>大家好，这里是 <strong>Coding茶水间</strong> 👋。<br>
今天我们来学习如何使用 <strong>MATLAB</strong> 来进行 <strong>深度学习目标检测</strong>，并以 <strong>RCNN 算法</strong> 为例，完成一个交通标志检测的小项目。</p>
<hr>
<h1 id="一rcnn-算法简介">一、RCNN 算法简介</h1>
<p>在目标检测的发展历程中，<strong>RCNN（Region-based Convolutional Neural Network）</strong> 是一个非常重要的里程碑。它首次将 <strong>深度卷积神经网络（CNN）</strong> 引入到了目标检测任务中，大大提升了检测精度。</p>
<p><img alt="rcnn原理图" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3687401/202508/3687401-20250828161106452-358543006.png" class="lazyload"></p>
<p>RCNN 的主要创新在于：</p>
<ul>
<li><strong>使用 CNN 自动提取特征</strong>，替代了传统的人工特征工程。</li>
<li>将候选区域（Region Proposal）与 CNN 特征结合，用于分类和回归。</li>
</ul>
<p>虽然由于计算效率较低，RCNN 现在已经不再主流，但它作为目标检测的开山之作，为后续的 <strong>Fast RCNN、Faster RCNN、YOLO、SSD</strong> 等高效算法提供了重要的研究基础。</p>
<hr>
<h1 id="二实验准备">二、实验准备</h1>
<p>我们本次实验基于 <strong>MATLAB</strong>，并准备了一个 <strong>比较简单的交通标志数据集</strong>，数据集主要包含两类：</p>
<ul>
<li><strong>slow（慢行标志）</strong></li>
<li><strong>stop（停车让行标志）</strong></li>
</ul>
<p>每类数据约 10 张图片左右，本次主要大概跑一下RCNN模型从数据标注到训练和验证的大概流程，所以我们这个数据集并没有准备太多，实际应用中我们需要准备大量的数据集才能尽可能的让模型收敛。</p>
<p><img alt="慢性交通标志图片" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3687401/202508/3687401-20250828161145133-505724323.png" class="lazyload"></p>
<p><img alt="停车让行交通图片" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3687401/202508/3687401-20250828161155786-823185161.png" class="lazyload"></p>
<hr>
<h1 id="三数据标注">三、数据标注</h1>
<p>MATLAB 提供了便捷的标注工具 <strong>Image Labeler</strong>，我们可以通过以下步骤完成标注：</p>
<ol>
<li>打开 MATLAB，点击 <strong>APP → 更多应用 → Image Labeler</strong>。</li>
</ol>
<p><img alt="image labeler入口图标" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3687401/202508/3687401-20250828161224545-1194211276.png" class="lazyload"></p>
<ol start="2">
<li>在工具界面中点击 <strong>Load → Add images from folder</strong>，导入我们准备好的两类图片。</li>
</ol>
<p><img alt="导入图片" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3687401/202508/3687401-20250828161326457-540140393.png" class="lazyload"></p>
<ol start="3">
<li>在左上角新建类别标签：
<ul>
<li><code>slow</code> → 对应慢行标志</li>
<li><code>stop</code> → 对应停车让行标志</li>
</ul>
</li>
</ol>
<p><img alt="添加类别" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3687401/202508/3687401-20250828161347274-1266082695.png" class="lazyload"></p>
<ol start="4">
<li>逐张图片框选目标，并指定类别。</li>
</ol>
<p><img alt="绘制矩形框" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3687401/202508/3687401-20250828161407145-2122096482.png" class="lazyload"></p>
<ol start="5">
<li>点击 <strong>Export → To File</strong>，保存为 <code>label_data.mat</code> 文件。</li>
</ol>
<p><img alt="tofile" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3687401/202508/3687401-20250828161424021-363525985.png" class="lazyload"></p>
<p>标注结果包含：</p>
<ul>
<li><strong>数据源路径</strong></li>
<li><strong>目标类别</strong></li>
<li><strong>标注框的坐标信息</strong></li>
</ul>
<hr>
<h1 id="四模型训练">四、模型训练</h1>
<p>接下来进入 RCNN 训练阶段。MATLAB 提供了 <code>trainRCNNObjectDetector</code> 接口，我们只需完成数据准备和参数设置即可。</p>
<p><code>objectDetectorTrainingData</code>方法可以直接把标注好的数据读取解析出来。</p>
<h2 id="训练代码示例">训练代码示例</h2>
<pre><code>clc;
clear;
close all;

% 加载标注数据
load label_data

% 将标注数据转换为RCNN训练所需的格式
trainingData = objectDetectorTrainingData(gTruth);

% 加载预训练的AlexNet网络作为特征提取器
net = alexnet;

% 配置训练参数
options = trainingOptions('sgdm', ...
    'MiniBatchSize', 128, ...           % 每批处理128个样本
    'InitialLearnRate', 1e-3, ...       % 初始学习率为0.001
    'LearnRateSchedule', 'piecewise', ... % 分段学习率策略
    'LearnRateDropFactor', 0.1, ...     % 学习率下降因子为0.1
    'LearnRateDropPeriod', 100, ...     % 每100轮下降一次学习率
    'MaxEpochs', 10, ...                % 最大训练轮数为10
    'Plots', 'training-progress', ...   % 显示训练进度图
    'Verbose', true);                   % 显示训练详细信息

% 训练RCNN目标检测器
% 设置正负样本的重叠阈值：IOU&gt;0.5为正样本，IOU&lt;0.3为负样本
rcnn = trainRCNNObjectDetector(trainingData, net, options, ...
    'NegativeOverlapRange', [0 0.3], 'PositiveOverlapRange', [0.5 1]);


% 保存训练好的模型
save rcnn_stop_slow_detector.mat rcnn;

</code></pre>
<h2 id="训练效果">训练效果</h2>
<p>训练过程中，MATLAB 会显示：</p>
<ul>
<li><strong>准确率曲线</strong>：随着迭代次数增加，准确率逐渐接近 100%。</li>
<li><strong>损失曲线</strong>：随着训练推进，loss 趋近于 0。</li>
</ul>
<p><img alt="训练结果" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3687401/202508/3687401-20250828161602690-857417066.png" class="lazyload"></p>
<hr>
<h2 id="五模型验证">五、模型验证</h2>
<p>训练完成后，我们使用 <strong>未出现在训练集中的新图片</strong> 来验证效果。</p>
<pre><code class="language-matlab">clc;
clear;
close all;

load rcnn_stop_slow_detector
% 加载测试图像
I = imread('stop_sign_ch/stopstest.jpg');

% 使用训练好的检测器进行目标检测
[bboxes, scores, labels] = detect(rcnn, I);

% 筛选置信度大于0.9
high_conf_indices = scores &gt; 0.9;
bboxes = bboxes(high_conf_indices, :);
scores = scores(high_conf_indices);
labels = labels(high_conf_indices);

% 在图像上标注检测结果并显示
if ~isempty(bboxes)
    % 创建包含标签和分数的标注文本
    annotations = string(labels) + ": " + string(scores);
    
    % 在图像上绘制边界框和标注
    I = insertObjectAnnotation(I, 'rectangle', bboxes, annotations);
    
else
    fprintf('未检测到任何置信度大于0.9的目标\n');
end

% 显示带有检测结果的图像
figure
imshow(I)
title('RCNN检测结果 - Stop和Slow标志');
</code></pre>
<p>验证效果：</p>
<ul>
<li>对于 <strong>stop 标志</strong>，模型能够高置信度框选目标。</li>
<li>对于 <strong>slow 标志</strong>，模型同样能准确识别。</li>
</ul>
<p><img alt="慢性标志检测结果" loading="lazy" data-src="https://img2024.cnblogs.com/blog/3687401/202508/3687401-20250828161642986-105139448.png" class="lazyload"></p>
<hr>
<h2 id="六总结">六、总结</h2>
<p>通过本次实验，我们完成了：</p>
<ol>
<li>使用 <strong>Image Labeler</strong> 完成数据标注。</li>
<li>基于 <strong>RCNN</strong> 模型和 <strong>AlexNet 预训练网络</strong> 进行目标检测训练。</li>
<li>对新图片进行验证，效果准确。</li>
</ol>
<blockquote>
<p>虽然 RCNN 在实际应用中已逐渐被更快的算法（如 YOLO、Faster RCNN）取代，但学习 RCNN 的意义在于：</p>
<ul>
<li>掌握深度学习引入目标检测的核心思想</li>
<li>理解目标检测算法的发展历程</li>
<li>为后续研究 <strong>YOLO、SSD、Mask RCNN</strong> 等算法奠定基础</li>
</ul>
</blockquote>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-08-28 16:21">2025-08-28 16:21</span>&nbsp;
<a href="https://www.cnblogs.com/codingtea">Coding茶水间</a>&nbsp;
阅读(<span id="post_view_count">26</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19062895);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19062895', targetLink: 'https://www.cnblogs.com/codingtea/p/19062895', title: '通过matlab训练和验证深度学习的目标检测' })">举报</a>
</div>
        