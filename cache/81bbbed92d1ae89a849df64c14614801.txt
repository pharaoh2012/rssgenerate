
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/yayujs/p/18731206" title="发布于 2025-02-22 18:15">
    <span role="heading" aria-level="2">Svelte 最新中文文档教程（16）—— Context（上下文）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="前言">前言</h2>
<p>Svelte，一个语法简洁、入门容易，面向未来的前端框架。从 Svelte 诞生之初，就备受开发者的喜爱，根据统计，<strong>从 2019 年到 2024 年，连续 6 年一直是开发者最感兴趣的前端框架 No.1</strong>：</p>
<p><img src="https://yayujs-blog.oss-cn-beijing.aliyuncs.com/405488775-48df16b1-939c-489b-8d52-6071869893f0.png" alt="image.png" loading="lazy"></p>
<p>Svelte 以其独特的编译时优化机制著称，具有<strong>轻量级</strong>、<strong>高性能</strong>、<strong>易上手</strong>等特性，<strong>非常适合构建轻量级 Web 项目，也是我做个人项目的首选技术栈。</strong></p>
<p>目前 Svelte 基于 Svelte 5 发布了最新的官方文档，但却缺少对应的中文文档。为了帮助大家学习 Svelte，为爱发电翻译了官方文档。</p>
<p>我同时搭建了 Svelte 最新的中文文档站点：<a href="https://svelte.yayujs.com" target="_blank" rel="noopener nofollow">https://svelte.yayujs.com</a> ，如果需要辅助学习，也可以入手我的小册<a href="https://s.juejin.cn/ds/iycmvygA/" target="_blank" rel="noopener nofollow">《Svelte 开发指南》</a>，语法篇、实战篇、原理篇三大篇章带你系统掌握 Svelte！</p>
<p>虽说是翻译，但个人并不喜欢严格遵守原文，为了保证中文阅读流畅，会删减部分语句，对难懂的部分也会另做补充解释，希望能给大家带来一个好的中文学习体验。</p>
<p>欢迎围观我的<a href="https://yayujs.com" target="_blank" rel="noopener nofollow">“网页版朋友圈”</a>、加入<a href="https://www.yuque.com/yayu/nice-people/xou8qr" target="_blank" rel="noopener nofollow">“冴羽·成长陪伴社群”</a>，踏上前端大佬成长之路。</p>
<h2 id="context上下文">Context（上下文）</h2>

<p>大多数状态是组件级别的状态，其生命周期与组件相同。然而，也存在应用程序范围或页面范围的状态,这也需要进行相应的处理。</p>
<p>处理这种情况最简单的方法是创建全局状态并直接导入它。</p>
<pre><code class="language-ts">/// file: state.svelte.js
export const myGlobalState = $state({
	user: {
		/* ... */
	}
	/* ... */
});
</code></pre>
<pre><code class="language-svelte">&lt;!--- file: App.svelte ---&gt;
&lt;script&gt;
	import { myGlobalState } from './state.svelte.js';
	// ...
&lt;/script&gt;
</code></pre>
<p>这样做有几个缺点：</p>
<ul>
<li>只有当您的全局状态仅在客户端使用时,它才能安全地工作 - 例如，当您正在构建一个不在服务端渲染任何组件的单页应用时。如果您的状态最终在服务端被管理和更新，它可能会在 sessions 和（或）用户之间共享，从而导致 bug</li>
<li>这可能给人一种误导性的印象,即某个状态是全局的,而实际上它只应该在你的应用程序的某个特定部分使用</li>
</ul>
<p>为了解决这些缺点，Svelte 提供了一些 <code>context</code> 原语来缓解这些问题。</p>
<h2 id="设置和获取上下文">设置和获取上下文</h2>
<p>要将任意对象与当前组件关联，请使用 <code>setContext</code>。</p>
<pre><code class="language-svelte">&lt;script&gt;
	import { setContext } from 'svelte';

	setContext('key', value);
&lt;/script&gt;
</code></pre>
<p>然后，组件的子级（包括插槽内容）可以使用 <code>getContext</code> 访问上下文。</p>
<pre><code class="language-svelte">&lt;script&gt;
	import { getContext } from 'svelte';

	const value = getContext('key');
&lt;/script&gt;
</code></pre>
<p><code>setContext</code> 和 <code>getContext</code> 解决了上述问题：</p>
<ul>
<li>状态不是全局的，而是限定在组件范围内。这样就可以安全地在服务端渲染组件而不会泄露状态</li>
<li>很明显，状态不是全局的，而是限定在特定的组件树中，因此不能在应用的其他部分使用</li>
</ul>
<blockquote>
<p>[!NOTE] <code>setContext</code>/<code>getContext</code> 必须在组件初始化期间调用。</p>
</blockquote>
<p>上下文本身不是响应式的。如果你需要上下文中的响应式值，你可以传递一个 <code>$state</code> 对象到上下文中，其属性 <em>将会</em> 是响应式的。</p>
<pre><code class="language-svelte">&lt;!--- file: Parent.svelte ---&gt;
&lt;script&gt;
	import { setContext } from 'svelte';

	let value = $state({ count: 0 });
	setContext('counter', value);
&lt;/script&gt;

&lt;button onclick={() =&gt; value.count++}&gt;增加&lt;/button&gt;
</code></pre>
<pre><code class="language-svelte">&lt;!--- file: Child.svelte ---&gt;
&lt;script&gt;
	import { getContext } from 'svelte';

	const value = getContext('counter');
&lt;/script&gt;

&lt;p&gt;计数为 {value.count}&lt;/p&gt;
</code></pre>
<p>要检查给定的 <code>key</code> 是否已在父组件的上下文中设置，可以使用 <code>hasContext</code>。</p>
<pre><code class="language-svelte">&lt;script&gt;
	import { hasContext } from 'svelte';

	if (hasContext('key')) {
		// 执行某些操作
	}
&lt;/script&gt;
</code></pre>
<p>您还可以使用 <code>getAllContexts</code> 获取属于最近父组件的整个上下文映射。这在你以编程方式创建组件并想要将现有上下文传递给它时很有用。</p>
<pre><code class="language-svelte">&lt;script&gt;
	import { getAllContexts } from 'svelte';

	const contexts = getAllContexts();
&lt;/script&gt;
</code></pre>
<h2 id="封装上下文交互">封装上下文交互</h2>
<p>上述方法对如何使用它们并没有太多限制。当你的应用规模增长时，将设置和获取上下文封装到函数中并正确地为其添加类型是值得的。</p>
<pre><code class="language-ts">// @errors: 2304
import { getContext, setContext } from 'svelte';

let userKey = Symbol('user');

export function setUserContext(user: User) {
	setContext(userKey, user);
}

export function getUserContext(): User {
	return getContext(userKey) as User;
}
</code></pre>
<h2 id="svelte-中文文档">Svelte 中文文档</h2>
<p>本篇已收录在掘金专栏 <a href="https://juejin.cn/column/7459299646696374284" target="_blank" rel="noopener nofollow">《Svelte 中文文档》</a>，该系列预计 40 篇。</p>
<p>系统学习 Svelte，欢迎入手小册<a href="https://s.juejin.cn/ds/iycmvygA/" target="_blank" rel="noopener nofollow">《Svelte 开发指南》</a>。语法篇、实战篇、原理篇三大篇章带你系统掌握 Svelte！</p>
<p>此外我还写过 <a href="https://juejin.cn/column/7035531575974592520" target="_blank" rel="noopener nofollow">JavaScript 系列</a>、<a href="https://juejin.cn/column/7029490086710345742" target="_blank" rel="noopener nofollow">TypeScript 系列</a>、<a href="https://juejin.cn/column/7142674773930147853" target="_blank" rel="noopener nofollow">React 系列</a>、<a href="https://juejin.cn/column/7343569488744611849" target="_blank" rel="noopener nofollow">Next.js 系列</a>、<a href="https://juejin.cn/column/7039526067891077151" target="_blank" rel="noopener nofollow">冴羽答读者问</a>等 14 个系列文章， 全系列文章目录：<a href="https://github.com/mqyqingfeng/Blog" target="_blank" rel="noopener nofollow">https://github.com/mqyqingfeng/Blog</a></p>
<p>欢迎围观我的<a href="https://yayujs.com" target="_blank" rel="noopener nofollow">“网页版朋友圈”</a>、加入<a href="https://www.yuque.com/yayu/nice-people/xou8qr" target="_blank" rel="noopener nofollow">“冴羽·成长陪伴社群”</a>，踏上前端大佬成长之路。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="18.618119716866897" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-22 18:16">2025-02-22 18:15</span>&nbsp;
<a href="https://www.cnblogs.com/yayujs">冴羽</a>&nbsp;
阅读(<span id="post_view_count">24</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18731206" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18731206);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18731206', targetLink: 'https://www.cnblogs.com/yayujs/p/18731206', title: 'Svelte 最新中文文档教程（16）—— Context（上下文）' })">举报</a>
</div>
        