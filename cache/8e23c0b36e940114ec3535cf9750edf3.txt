
        <div class="postTitle">
            <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/mysticbinary/p/18842437" title="发布于 2025-04-23 14:58">
    <span role="heading" aria-level="2">协同过滤推荐算法的入门案例</span>
    

</a>

        </div>
        <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p></p><div class="toc"><div class="toc-container-header">目录</div><ul><li><a href="#数据介绍" rel="noopener nofollow">数据介绍</a></li><li><a href="#数据映射" rel="noopener nofollow">数据映射</a></li><li><a href="#计算相识度" rel="noopener nofollow">计算相识度</a><ul><li><a href="#补充" rel="noopener nofollow">补充</a></li><li><a href="#扩展" rel="noopener nofollow">扩展</a></li></ul></li><li><a href="#预测偏好" rel="noopener nofollow">预测偏好</a><ul><li><a href="#简单预测" rel="noopener nofollow">简单预测</a></li><li><a href="#采用加权多用户加权" rel="noopener nofollow">采用加权（多用户加权）</a></li></ul></li><li><a href="#总结" rel="noopener nofollow">总结</a></li></ul></div><p></p>
<hr>
<p>推荐算法的核心是预测用户可能喜欢的内容，并据此进行推荐。这里用一个非常简单的电影推荐案例，解释最常见的<strong>协同过滤</strong>原理。</p>
<p>协同过滤是通过分析用户或者事物之间的相似性（“协同”），来预测用户可能感兴趣的内容并将此内容推荐给用户。这里的相似性可以是人口特征（性别、年龄、居住地等）的相似性，也可以是历史浏览内容的相似性（比如都关注过和中餐相关的内容），还可以是个人通过一定机制给予某个事物的回应（比如一些教学网站会让用户对授课人进行评分）。</p>
<p>比如，用户A和B都是居住在北京的年龄在20-30岁的女性，并且都关注过化妆品和衣物相关的内容。这种情况下，协同过滤可能会认为，A和B相似程度很高。于是可能会把A关注B没有关注的内容推荐给B，反之亦然。</p>
<h1 id="数据介绍">数据介绍</h1>
<p>假设有3个用户（小明、小红、小刚）对4部电影的评分（1~5分），未评分的用“-”表示：</p>
<p>已经采集到的数据如下：</p>
<table>
<thead>
<tr>
<th>用户</th>
<th>复仇者</th>
<th>钢铁侠</th>
<th>爱情故事</th>
<th>雷神</th>
</tr>
</thead>
<tbody>
<tr>
<td>小明</td>
<td>5</td>
<td>4</td>
<td>-</td>
<td>2</td>
</tr>
<tr>
<td>小红</td>
<td>4</td>
<td>5</td>
<td>3</td>
<td>-</td>
</tr>
<tr>
<td>小刚</td>
<td>1</td>
<td>2</td>
<td>5</td>
<td>4</td>
</tr>
</tbody>
</table>
<p>目标：<br>
为小明推荐他可能感兴趣的电影（比如《雷神》评分低，可不推荐；《爱情故事》未评分，是否需要推荐？）</p>
<h1 id="数据映射">数据映射</h1>
<p>数组：<br>
[[ 5, 4, 0, 2]<br>
[ 4, 5, 3, 0]<br>
[ 1, 2, 5, 4]]</p>
<h1 id="计算相识度">计算相识度</h1>
<p>推荐的原理就是计算目标用户和其他用户的相识度，推荐相识度高的用户喜欢的作品给他。</p>
<p><strong>找到相似用户的步骤：</strong>（常用方法：余弦相似度）</p>
<ul>
<li>
<p>小明 vs 小红：共同评分的电影是《复仇者》《钢铁侠》。</p>
<ul>
<li>小明的评分向量：<code>[5, 4]</code></li>
<li>小红的评分向量：<code>[4, 5]</code></li>
<li>余弦相似度 = (5×4 + 4×5) / (√(5²+4²) × √(4²+5²)) ≈ 0.98（非常相似）</li>
</ul>
</li>
<li>
<p>小明 vs 小刚：共同评分的电影是《雷神》，但小明和小刚对《雷神》评分差异大（小明2分，小刚4分），相似度低。</p>
</li>
<li>
<p><strong>结论</strong>：小红和小明兴趣最接近。<br>
余弦相似度越接近1，说明两个向量的方向越一致，即“偏好模式”越相似。</p>
</li>
</ul>
<h2 id="补充">补充</h2>
<p>余弦相似度（Cosine Similarity）是一种衡量两个向量方向相似程度的指标，常用于推荐系统、文本分析等领域。它的核心思想是：<strong>通过计算两个向量之间的夹角余弦值，判断它们的方向是否接近。方向越接近，余弦值越接近1；方向相反则接近-1；垂直则为0。</strong></p>
<p><img src="https://img2024.cnblogs.com/blog/1552062/202504/1552062-20250423143419017-1870060827.png" alt="image" loading="lazy"></p>
<p>余弦相似度 = A * B / ||A|| * ||B|| = (5×4 + 4×5) / (√(5²+4²) × √(4²+5²)) ≈ 0.98（非常相似）</p>
<p>看图理解，下图数据和上面的案例无关，只做理解。<br>
<img src="https://img2024.cnblogs.com/blog/1552062/202504/1552062-20250423160125027-799363140.png" alt="image" loading="lazy"></p>
<p>A,B 所形成的夹角较小，表示更相似。<br>
A,C 所形成的夹角较大，就相对没那么相似。</p>
<p><img src="https://img2024.cnblogs.com/blog/1552062/202504/1552062-20250423160333096-1627921785.png" alt="image" loading="lazy"></p>
<h2 id="扩展">扩展</h2>
<ul>
<li>
<p>基于内容的推荐：分析电影特征（如类型、导演），推荐相似属性的电影（如喜欢《钢铁侠》→ 推荐科幻片）。</p>
</li>
<li>
<p>混合推荐：结合协同过滤和内容过滤，提高准确性。</p>
</li>
</ul>
<h1 id="预测偏好">预测偏好</h1>
<h2 id="简单预测">简单预测</h2>
<p>假设要预测小明对《爱情故事》的评分，已知：</p>
<ul>
<li>
<p>小红与小明相似度 0.98，对《爱情故事》评分为 3；</p>
</li>
<li>
<p>小刚与小明相似度 1.0，对《爱情故事》评分为 5。</p>
</li>
</ul>
<p>则直接取平均：(3+5)/2=4 （但未考虑相似度差异。）</p>
<h2 id="采用加权多用户加权">采用加权（多用户加权）</h2>
<p>加权平均的原理<br>
核心思想：<strong>相似度高的用户意见更重要，应赋予更高权重。</strong></p>
<p><img src="https://img2024.cnblogs.com/blog/1552062/202504/1552062-20250423145200545-1704885876.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/1552062/202504/1552062-20250423145233907-705466850.png" alt="image" loading="lazy"></p>
<p>预测小明对《爱情故事》电影的评分是 4.01分，评分较高，值得推荐。</p>
<h1 id="总结">总结</h1>
<p>案例很简单，主要用到如下数学概念：</p>
<ul>
<li>二维矩阵</li>
<li>余弦相似</li>
<li>加权平均</li>
</ul>

</div>
<div class="clear"></div>

        <div class="postDesc">posted on 
<span id="post-date" data-last-update-days="0.031408410925925924" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-24 08:24">2025-04-23 14:58</span>&nbsp;
<a href="https://www.cnblogs.com/mysticbinary">Mysticbinary</a>&nbsp;
阅读(<span id="post_view_count">126</span>)&nbsp;
评论(<span id="post_comment_count">1</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18842437);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18842437', targetLink: 'https://www.cnblogs.com/mysticbinary/p/18842437', title: '协同过滤推荐算法的入门案例' })">举报</a>
</div>
    