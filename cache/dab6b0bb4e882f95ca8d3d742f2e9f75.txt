
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/noear/p/18875326" title="发布于 2025-05-14 09:03">
    <span role="heading" aria-level="2">Java Solon v3.3.0 发布（国产优秀应用开发基座）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        Solon 是一款新一代的 Java 企业级应用开发框架，由杭州无耳科技有限公司开源，采用 Apache 2.0 协议。它从零开始构建，不依赖 Java-EE，具有灵活的接口规范和开放的生态系统，旨在替代 Spring 生态。Solon 追求快速、小巧、简洁，提倡克制、高效、开放，经过 7 年开源发展，累计代码提交 1.6 万次，近半年下载量达 1200 万次。相比 Spring，Solon 在计算性价比、开发效率、生产部署体验和兼容性方面表现更优，支持 Java 8 到 Java 24 及 GraalVM
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="solon-框架">Solon 框架！</h2>
<p>Solon 是新一代，Java 企业级应用开发框架。<strong>从零开始构建（No Java-EE），有灵活的接口规范与开放生态</strong>。采用商用友好的 Apache  2.0 开源协议，是“杭州无耳科技有限公司”开源的根级项目，是 Java 应用开发的生态基座（可替换 Spring 生态）。</p>
<ul>
<li>追求： 快速、小巧、简洁</li>
<li>提倡： 克制、高效、开放</li>
</ul>
<p>7年开源时长，累计代码提交1.6万次 ，近半年下载量1200万次。</p>
<ul>
<li>有透明可预期的<a href="https://solon.noear.org/article/687" target="_blank" rel="noopener nofollow">《版本发布与维护计划》</a></li>
<li>有“<a href="https://solon.noear.org/article/support" target="_blank" rel="noopener nofollow">【社区交流】</a>”和“<a href="https://solon.noear.org/article/biz" target="_blank" rel="noopener nofollow">【商业服务】</a>”双重技术支持</li>
</ul>
<h2 id="有什么特点相对-java-spring-方案">有什么特点（相对 Java Spring 方案）？</h2>
<table>
<thead>
<tr>
<th>特点</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>更高的计算性价比</td>
<td>并发高 700%；内存省 50%</td>
</tr>
<tr>
<td>更快的开发效率</td>
<td>代码少；入门简单；启动快 10 倍（调试快）</td>
</tr>
<tr>
<td>更好的生产与部署体验</td>
<td>打包小 90%</td>
</tr>
<tr>
<td>更大的兼容范围</td>
<td>非 java-ee 架构；同时支持 java8 ～ java24，graalvm native image</td>
</tr>
</tbody>
</table>
<p>最新的 techempower 测试数据：</p>
<ul>
<li><a href="https://www.techempower.com/benchmarks/#hw=ph&amp;test=json%C2%A7ion=data-r23" target="_blank" rel="noopener nofollow">https://www.techempower.com/benchmarks/#hw=ph&amp;test=json§ion=data-r23</a></li>
<li><a href="https://www.techempower.com/benchmarks/#hw=ph&amp;test=plaintext%C2%A7ion=data-r23" target="_blank" rel="noopener nofollow">https://www.techempower.com/benchmarks/#hw=ph&amp;test=plaintext§ion=data-r23</a></li>
</ul>
<h2 id="项目架构示意图全场景应用开发支持">项目架构示意图（全场景应用开发支持）</h2>
<img src="https://solon.noear.org/img/369a9093918747df8ab0a5ccc314306a.png" width="700">
<h2 id="最近更新了什么每个版本都会有满满的清单">最近更新了什么？（每个版本都会有满满的清单）</h2>
<p>Solon 快如闪电！智也非凡！从 v3.1 起，提供完整的 AI 应用开发支持（Solon AI 同时支持 java8 到 java24）。</p>
<ul>
<li>新增 solon-ai-repo-dashvector 插件</li>
<li>新增 seata-solon-plugin 插件</li>
<li>新增 solon-data Ds 注解（为统一数据源注入作准备）</li>
<li>插件 solon-ai 三次预览</li>
<li>插件 solon-ai-mcp 二次预览</li>
<li>调整 solon Cookie,Header,Param 的 <code>required</code> 默认改为 true (便与 mcp 复用)</li>
<li>调整 solon-ai 移除 ToolParam 注解，改用 <code>Param</code> 注解（通用参数注解）</li>
<li>调整 solon-ai ToolMapping 注解移到 <code>org.noear.solon.ai.annotation</code></li>
<li>调整 solon-ai FunctionToolDesc:param 改为 <code>paramAdd</code> 风格</li>
<li>调整 solon-ai MethodToolProvider 取消对 Mapping 注解的支持（利于跨生态体验的统一性）</li>
<li>调整 solon-ai-mcp McpClientToolProvider 更名为 McpClientProvider（实现的接口变多了））</li>
<li>优化 solon-ai 拆分为 solon-ai-core 和 solon-ai-model-dialects（方便适配与扩展）</li>
<li>优化 solon-ai 模型方言改为插件扩展方式</li>
<li>优化 nami 的编码处理</li>
<li>优化 nami-channel-http HttpChannel 表单提交时增加集合参数支持（自动拆解为多参数）</li>
<li>优化 solon Param 注解，添加字段支持</li>
<li>优化 solon 允许 MethodWrap 没有上下文的用况</li>
<li>优化 solon-web-sse 边界，允许 SseEmitter 未提交之前就可 complete</li>
<li>优化 solon-serialization JsonPropsUtil.apply 分解成本个方法，按需选择</li>
<li>优化 solon-ai 允许 MethodFunctionTool,MethodFunctionPrompt,MethodFunctionResource 没有 solon 上下文的用况</li>
<li>优化 solon-ai-core <code>model.options(o-&gt;{})</code> 可多次调用</li>
<li>优化 solon-ai-mcp McpClientProvider 同时实现 ResourceProvider, PromptProvider 接口</li>
<li>优化 solon-ai-repo-redis metadataIndexFields 更名为 <code>metadataFields</code> （原名标为弃用）</li>
<li>添加 nami NamiParam 注解支持</li>
<li>添加 nami 文件（<code>UploadedFile</code> 或 <code>File</code>）上传支持</li>
<li>添加 nami 对 solon Mapping 相关注解的支持</li>
<li>添加 nami 自动识别 File 或 UploadedFile 参数类型，并自动转为 FORM_DATA 提交</li>
<li>添加 solon Mapping:headers 属性（用于支持 Nami 用况）</li>
<li>添加 solon Body:description,Param:description,Header:description,Cookie:description 属性（用于支持 MCP 用况）</li>
<li>添加 solon UploadedFile 基于 File 构造方法</li>
<li>添加 solon-net-httputils HttpUtilsBuilder:proxy 方法（设置代理）</li>
<li>添加 solon-net-httputils HttpProxy 类</li>
<li>添加 solon-ai-core ChatSubscriberProxy 用于控制外部订阅者，只触发一次 onSubscribe</li>
<li>添加 solon-ai-mcp McpClientProperties:httpProxy 配置</li>
<li>添加 solon-ai-mcp McpClientToolProvider isStarted 状态位（把心跳开始，转为第一次调用这后）</li>
<li>添加 solon-ai-mcp McpClientToolProvider:readResourceAsText,readResource,getPromptAsMessages,getPrompt 方法</li>
<li>添加 solon-ai-mcp McpServerEndpointProvider:getVersion,getChannel,getSseEndpoint,getTools,getServer 方法</li>
<li>添加 solon-ai-mcp McpServerEndpointProvider:addResource,addPrompt 方法</li>
<li>添加 solon-ai-mcp McpServerEndpointProvider:Builder:channel 方法</li>
<li>添加 solon-ai-mcp ResourceMapping 和 PromptMapping 注解（支持资源与提示语服务）</li>
<li>添加 solon-ai-mcp McpServerEndpoint AOP 支持（可支持 solono auth 注解鉴权）</li>
<li>添加 solon-ai-mcp McpServerEndpoint 实体参数支持（可支持 solon web 的实体参数、注解相通）</li>
<li>添加 solon-ai-mpc <code>Tool.returnDirect</code> 属性透传（前后端都有 solon-ai 时有效，目前还不是规范）</li>
<li>修复 solon 由泛型桥接方法引起的泛型失真问题</li>
<li>修复 solon Utils.getFile 在 window 下绝对位置失效的问题</li>
<li>修复 solon-net-httputils OkHttpUtils 不支持 post 空提交的问题</li>
<li>修复 nami-channel-http 不支持 post 空提交的问题</li>
<li>修复 solon-serialization-fastjson2 在配置全局时间格式化后，个人注解格式化会失效的问题</li>
<li>修复 solon Utils.getFile 在 window 下绝对位置失效的问题</li>
<li>snack3 升为 3.2.133</li>
<li>dbvisitor 升为 6.0.0</li>
<li>sa-token 升为 1.42.0</li>
<li>mybatis-flex 升为 1.10.9</li>
<li>smart-http 升为 2.5.10</li>
</ul>
<h2 id="项目仓库地址">项目仓库地址？</h2>
<ul>
<li>gitee：<a href="https://gitee.com/opensolon/solon" target="_blank" rel="noopener nofollow">https://gitee.com/opensolon/solon</a></li>
<li>gitcode: <a href="https://gitcode.com/opensolon/solon" target="_blank" rel="noopener nofollow">https://gitcode.com/opensolon/solon</a></li>
<li>github：<a href="https://github.com/opensolon/solon" target="_blank" rel="noopener nofollow">https://github.com/opensolon/solon</a></li>
</ul>
<h2 id="官网">官网？</h2>
<ul>
<li><a href="https://solon.noear.org" target="_blank" rel="noopener nofollow">https://solon.noear.org</a></li>
</ul>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.004975996128472222" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-14 09:04">2025-05-14 09:03</span>&nbsp;
<a href="https://www.cnblogs.com/noear">带刺的坐椅</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18875326);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18875326', targetLink: 'https://www.cnblogs.com/noear/p/18875326', title: 'Java Solon v3.3.0 发布（国产优秀应用开发基座）' })">举报</a>
</div>
        