
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/zhaloe/p/18926223" title="发布于 2025-06-12 21:58">
    <span role="heading" aria-level="2">ArkUI-X在Android上使用Fragment开发指南</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>本文介绍将ArkUI框架的UIAbility跨平台部署至Android平台Fragment的使用说明，实现Android原生Fragment和ArkUI跨平台Fragment的混合开发，方便开发者灵活部署跨平台界面。</p>
<h2 id="android工程配置">Android工程配置</h2>
<p>Android工程的PackageName需要与OpenHarmony工程的BundleName一致；<br><br>
请在Android应用的gradle.properties文件，使能AndroidX：</p>
<pre><code class="language-plain">android.useAndroidX=true
</code></pre>
<p>请在Android应用的build.gradle文件增加AndroidX Fragment库的依赖项：</p>
<pre><code class="language-groovy">dependencies {
    implementation  'androidx.appcompat:appcompat:1.4.1'
}
</code></pre>
<h2 id="arkui-x和android平台集成所用关键类">ArkUI-X和Android平台集成所用关键类</h2>
<h3 id="应用工程android逻辑部分的stageapplication">应用工程Android逻辑部分的StageApplication</h3>
<p>应用需要继承arkui_android_adapter.jar包所提供的StageApplication。StageApplication用于初始化资源路径以及加载配置信息，例如：</p>
<pre><code class="language-java">package com.example.myapplication;
import ohos.stage.ability.adapter.StageApplication;

public class MyApplication extends StageApplication {
	
}
</code></pre>
<h3 id="应用工程android逻辑部分fragment的宿主activity">应用工程Android逻辑部分Fragment的宿主Activity</h3>
<p>原生Activity需要继承androidx.fragment.app.FragmentActivity，绑定StageFragment示例如下：</p>
<pre><code class="language-java">package com.example.myapplication;

import android.os.Bundle;

import androidx.fragment.app.FragmentActivity;
import androidx.fragment.app.FragmentManager;

import ohos.stage.ability.adapter.StageFragment;

public class MainActivity extends FragmentActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        StageFragment fragment = new HiFragment();
        FragmentManager manager = getSupportFragmentManager();
        manager.beginTransaction().add(R.id.frag,fragment).commit();
    }
}
</code></pre>
<p>其中activity_main.xml文件示例如下：</p>
<pre><code class="language-xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:layout_height="match_parent"&gt;

    &lt;LinearLayout
        android:id="@+id/frag"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="horizontal"&gt;
    &lt;/LinearLayout&gt;

&lt;/LinearLayout&gt;
</code></pre>
<p>如果当前StageFragment对应的UIAbility涉及页面跳转，Activity需要重写onBackPressed方法，以便在手机back键点击或手势侧滑时逐级返回页面，否则会退出跨平台承载的Activity页面。</p>
<pre><code class="language-java">@Override
public void onBackPressed() {
    if(fragment.onBackPressed()) {
        super.onBackPressed();
    }
}
</code></pre>
<h4 id="参数传递">参数传递</h4>
<p>StageFragment支持传递参数，参数的传递需要通过setArguments()进行设置，规则如下：<br><br>
key值为params<br>
value为json格式</p>
<pre><code class="language-json">{
    "params":[
        {
            "key":键,
            "type":参数类型值,
            "value":值
        },
        {
            
        }
    ]
}
</code></pre>
<p>支持的参数类型列表</p>
<table>
<thead>
<tr>
<th>参数类型</th>
<th>参数类型值</th>
</tr>
</thead>
<tbody>
<tr>
<td>boolean</td>
<td>1</td>
</tr>
<tr>
<td>int</td>
<td>5</td>
</tr>
<tr>
<td>double</td>
<td>9</td>
</tr>
<tr>
<td>string</td>
<td>10</td>
</tr>
</tbody>
</table>
<p>示例：</p>
<pre><code class="language-java">StageFragment fragment = new HiFragment();
Bundle args = new Bundle();
args.putString("params", "{\"params\":[{\"key\":\"path\",\"type\":10,\"value\":\"local\"}]}");
fragment.setArguments(args);
</code></pre>
<h3 id="应用工程android逻辑部分的stagefragment">应用工程Android逻辑部分的StageFragment</h3>
<p>Fragment需要继承arkui_android_adapter.jar包所提供的StageFragment，StageFragment主要功能是将Android中Fragment的生命周期与OpenHarmony中UIAbility的生命周期进行映射，例如：</p>
<pre><code class="language-java">package com.example.myapplication;
import ohos.stage.ability.adapter.StageFragment;

public class HiFragment extends StageFragment {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.setInstanceName("com.example.myapplication:entry:EntryAbility:");
        super.onCreate(savedInstanceState);
    }
}
</code></pre>
<p>为了将Fragment和UIAbility进行关联，需要重写StageFragment中的onCreate事件，在super.onCreate(savedInstanceState)之前设置instanceName，规则如下：</p>
<pre><code class="language-plain">bundleName:moduleName:abilityName:
</code></pre>
<p>其中bundleName的值来自于OpenHarmony应用中app.json5配置文件，moduleName、abilityName的值来自于OpenHarmony应用中的module.json5配置文件。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-06-12 21:58">2025-06-12 21:58</span>&nbsp;
<a href="https://www.cnblogs.com/zhaloe">龙儿筝</a>&nbsp;
阅读(<span id="post_view_count">7</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18926223);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18926223', targetLink: 'https://www.cnblogs.com/zhaloe/p/18926223', title: 'ArkUI-X在Android上使用Fragment开发指南' })">举报</a>
</div>
        