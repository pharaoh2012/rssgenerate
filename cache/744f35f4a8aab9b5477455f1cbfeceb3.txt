
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lulight/p/18745481" title="发布于 2025-03-01 21:56">
    <span role="heading" aria-level="2">【Azure Storage Account】利用App Service作为反向代理, 并使用.NET Storage Account SDK实现上传/下载操作</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h1>问题描述</h1>
<p>在使用Azure上的存储服务 Storage Account 的时候，有时需要代替 它原本提供的域名进行访问，比如默认的域名为：<span style="background-color: rgba(255, 255, 0, 1)">mystorageaccount</span>.blob.core.chinacloudapi.cn， 想转变为 <span style="background-color: rgba(255, 255, 0, 1)">myservice.file.com</span> 。</p>
<p><img src="https://img2024.cnblogs.com/blog/2127802/202503/2127802-20250301204929733-569635637.png" width="999" height="207" loading="lazy"></p>
<p>如果使用App Service作为反向代理，我们现在有如下三个疑问：</p>
<p>第一：如何来设置方向代理呢？</p>
<p>第二：是否还能成功访问Storage Account服务呢？&nbsp;</p>
<p>第三：.NET Storage Account SDK中如何使用自定义的域名连接服务呢？</p>
<p>&nbsp;</p>
<h1>问题解答</h1>
<p>根据问题中的三个疑问，我们一一测试及解答。</p>
<h2><span style="color: rgba(255, 102, 0, 1)">第一问，在App Service服务中如何实现反向代理呢？ </span></h2>
<p>参考之前的文章：</p>
<ol>
<li>【Azure 应用服务】在App Service for Windows中实现反向代理 : <a href="https://www.cnblogs.com/lulight/p/17120713.html" target="_blank">https://www.cnblogs.com/lulight/p/17120713.html</a></li>
<li>【应用服务 App Service】 App Service Rewrite 实例 - 反向代理转发功能 : <a href="https://www.cnblogs.com/lulight/p/13875393.html" target="_blank">https://www.cnblogs.com/lulight/p/13875393.html</a></li>
</ol>
<h3>第一步：<strong>applicationhost.xdt</strong>&nbsp;启用IIS代理功能</h3>
<p>选择一个 Windows 平台的App Service，进入Kudu站点，在 Site 目录下创建&nbsp;<strong>applicationhost.xdt</strong> 文件并复制下面的内容</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">&lt;?</span><span style="color: rgba(255, 0, 255, 1)">xml version="1.0"</span><span style="color: rgba(0, 0, 255, 1)">?&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">configuration </span><span style="color: rgba(255, 0, 0, 1)">xmlns:xdt</span><span style="color: rgba(0, 0, 255, 1)">=http://schemas.microsoft.com/XML-Document-Transform&gt;
    </span><span style="color: rgba(255, 0, 0, 1)">&lt;system.webServer</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">proxy </span><span style="color: rgba(255, 0, 0, 1)">xdt:Transform</span><span style="color: rgba(0, 0, 255, 1)">="InsertIfMissing"</span><span style="color: rgba(255, 0, 0, 1)"> enabled</span><span style="color: rgba(0, 0, 255, 1)">="true"</span><span style="color: rgba(255, 0, 0, 1)"> preserveHostHeader</span><span style="color: rgba(0, 0, 255, 1)">="false"</span><span style="color: rgba(255, 0, 0, 1)"> reverseRewriteHostInResponseHeaders</span><span style="color: rgba(0, 0, 255, 1)">="false"</span> <span style="color: rgba(0, 0, 255, 1)">/&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">system.webServer</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>
<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">configuration</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span></pre>
</div>
<ul>
<li><code>xdt:Transform="InsertIfMissing"</code>&nbsp;表示如果代理配置不存在，则插入这一配置。</li>
<li><code>enabled="true"</code>&nbsp;表示启用代理功能。</li>
<li><code>preserveHostHeader="false"</code>&nbsp;表示不保留原始请求的主机头信息。</li>
<li><code>reverseRewriteHostInResponseHeaders="false"</code>&nbsp;表示在响应头中不反向重写主机头信息。</li>
</ul>
<h3>第二步：web.config 配置&nbsp;rewrite rule</h3>
<p>第一步完成后，点击 WWWROOT 目录，添加新文件 web.config 并复制下面的内容</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">configuration</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>  
    <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">system.webServer</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>  
        <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">rewrite</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>  
            <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">rules</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>  
                <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">rule </span><span style="color: rgba(255, 0, 0, 1)">name</span><span style="color: rgba(0, 0, 255, 1)">="root"</span><span style="color: rgba(255, 0, 0, 1)"> stopProcessing</span><span style="color: rgba(0, 0, 255, 1)">="true"</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>  
                    <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">match </span><span style="color: rgba(255, 0, 0, 1)">url</span><span style="color: rgba(0, 0, 255, 1)">="^/?(.*)"</span> <span style="color: rgba(0, 0, 255, 1)">/&gt;</span>  
                    <span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">action </span><span style="color: rgba(255, 0, 0, 1)">type</span><span style="color: rgba(0, 0, 255, 1)">="Rewrite"</span><span style="color: rgba(255, 0, 0, 1)"> url</span><span style="color: rgba(0, 0, 255, 1)">="https://&lt;stroage account name&gt;.blob.core.chinacloudapi.cn/{R:1}"</span> <span style="color: rgba(0, 0, 255, 1)">/&gt;</span>  
                <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">rule</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>  
                
                <span style="color: rgba(0, 128, 0, 1)">&lt;!--</span><span style="color: rgba(0, 128, 0, 1)"> 需要对根目录的请求进行反向代理，否则对POST/PUT等操作会报错404无法找到Blob Containers </span><span style="color: rgba(0, 128, 0, 1)">--&gt;</span>
                <span style="color: rgba(0, 128, 0, 1)">&lt;!--</span><span style="color: rgba(0, 128, 0, 1)"> &lt;rule name="sa" stopProcessing="true"&gt;   </span><span style="color: rgba(0, 128, 0, 1)">--&gt;</span>
                    <span style="color: rgba(0, 128, 0, 1)">&lt;!--</span><span style="color: rgba(0, 128, 0, 1)"> &lt;match url="^sa/?(.*)" /&gt;   </span><span style="color: rgba(0, 128, 0, 1)">--&gt;</span>
                    <span style="color: rgba(0, 128, 0, 1)">&lt;!--</span><span style="color: rgba(0, 128, 0, 1)"> &lt;action type="Rewrite" url="https://&lt;storage account name&gt;.blob.core.chinacloudapi.cn/{R:1}" /&gt;   </span><span style="color: rgba(0, 128, 0, 1)">--&gt;</span>
                <span style="color: rgba(0, 128, 0, 1)">&lt;!--</span><span style="color: rgba(0, 128, 0, 1)"> &lt;/rule&gt;   </span><span style="color: rgba(0, 128, 0, 1)">--&gt;</span>
            <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">rules</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>  
        <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">rewrite</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>  
    <span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">system.webServer</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>  
<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">configuration</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span></pre>
</div>
<h2><br><span style="color: rgba(255, 102, 0, 1)">第二问，是否还能成功访问Storage Account服务呢？&nbsp;</span></h2>
<p>完成App Service的反向代理配置后，重启服务。然后进入Storage Account的共享访问签名生成页面。</p>
<p><img src="https://img2024.cnblogs.com/blog/2127802/202503/2127802-20250301211801190-1597154046.png" width="666" height="395" loading="lazy" style="border: 2px solid rgba(0, 0, 139, 1)"></p>
<p>&nbsp;</p>
<h3>第一步：使用原生的 SAS URL访问Blob文件</h3>
<p>原生的URL为：</p>
<blockquote>
<p>https://<span style="background-color: rgba(255, 255, 0, 1)">&lt; your storage account &gt;</span>.blob.core.chinacloudapi.cn/<span style="background-color: rgba(255, 255, 0, 1)">&lt;your container name&gt;/&lt;filename&gt;.txt</span>?</p>
<p>sp=r&amp;st=2025-03-01T13:16:47Z&amp;se=2025-03-01T21:16:47Z&amp;spr=https&amp;sv=2022-11-02&amp;sr=b&amp;sig=xxxx%xxxx%3D</p>

</blockquote>
<h3>第二步：用App Service的域名替换原生的Storage Account域名访问</h3>
<p>替换后的URL为：</p>
<blockquote>
<p>https://<span style="background-color: rgba(255, 255, 0, 1)">&lt;your app service custom domain name&gt;.chinacloudsites.cn</span>/&lt;your container name&gt;/&lt;filename&gt;.txt?</p>
<p>sp=r&amp;st=2025-03-01T13:16:47Z&amp;se=2025-03-01T21:16:47Z&amp;spr=https&amp;sv=2022-11-02&amp;sr=b&amp;sig=xxxx%xxxx%3D</p>

</blockquote>
<p>测试验证，两种域名均可访问。证明，反向代理配置成功！</p>
<p><img src="https://img2024.cnblogs.com/blog/2127802/202503/2127802-20250301212502835-802019414.png" width="999" height="175" loading="lazy"></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><span style="color: rgba(255, 102, 0, 1)">第三问：.NET Storage Account SDK中如何使用自定义的域名连接服务呢？</span></h2>
<p>是的，在默认的.NET Storage Account SDK中，默认使用的是连接字符串(Connection String)。</p>
<blockquote>
<p>DefaultEndpointsProtocol=https;AccountName=<span style="background-color: rgba(255, 255, 0, 1)">storagesample</span>;AccountKey=&lt;account-key&gt;;<span style="background-color: rgba(255, 255, 0, 1)">EndpointSuffix=core.chinacloudapi.cn</span></p>

</blockquote>
<p>以上的格式，无法修改EndpointSuffix为自定义的域名。所以，<strong>使用连接字符串肯定是不可以的。</strong></p>
<p><img src="https://img2024.cnblogs.com/blog/2127802/202503/2127802-20250301213122051-989696859.png" width="666" height="481" loading="lazy" style="border: 2px solid rgba(0, 0, 139, 1)"></p>
<p>代替的方案就是使用共享访问签名(SAS URL)来初始化<strong>BlobServiceClient</strong>对象。</p>
<p>参考“<a href="https://docs.azure.cn/zh-cn/storage/blobs/storage-quickstart-blobs-dotnet?tabs=visual-studio%2Cconnection-string%2Croles-azure-portal%2Csign-in-azure-cli%2Cidentity-visual-studio" target="_blank" rel="noopener nofollow">快速入门：适用于 .NET 的 Azure Blob 存储客户端库</a>” 文章中的代码，只需要修改初始化 Blob Service Client对象的那一段代码就可以，改动量非常小。</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">Use SAS URL        </span>
<span style="color: rgba(0, 0, 255, 1)">string</span> accountsas = <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">https://<span style="background-color: rgba(255, 255, 0, 1)">&lt;the app gateway domain name&gt;</span>/?sv=2022-11-02&amp;ss=bfqt&amp;srt=sco&amp;sp=rwdlacupitfx&amp;se=2025-02-28T13:55:27Z&amp;st=2025-02-28T05:55:27Z&amp;spr=https&amp;sig=PxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxD</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;

Uri sasuri </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Uri(accountsas);
</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Create a BlobServiceClient object which will be used to create a container client</span>
BlobServiceClient blobServiceClient = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> BlobServiceClient(sasuri);<br></span></pre>
</div>
<p><strong>注意：代码中使用的共享访问签名SAS URL是Storage Account级别的，不能使用第二问中的一个blob文件的SAS URL，否则会出现权限不够报错。</strong></p>
<p><img src="https://img2024.cnblogs.com/blog/2127802/202503/2127802-20250301214823017-389450866.png" width="666" height="484" loading="lazy" style="border: 2px solid rgba(0, 0, 139, 1)"></p>
<h3>运行效果展示：</h3>
<p>&nbsp;<img src="https://img2024.cnblogs.com/blog/2127802/202503/2127802-20250301215618960-421844603.gif" width="666" height="469" style="border: 2px solid rgba(0, 0, 139, 1)"></p>
<p>&nbsp;</p>
<h1>参考资料</h1>
<ol>
<li>在App Service for Windows中实现反向代理 :&nbsp;<a href="https://www.cnblogs.com/lulight/p/17120713.html" target="_blank">https://www.cnblogs.com/lulight/p/17120713.html</a></li>
<li>App Service Rewrite 实例 - 反向代理转发功能 :&nbsp;<a href="https://www.cnblogs.com/lulight/p/13875393.html" target="_blank">https://www.cnblogs.com/lulight/p/13875393.html</a></li>
<li>BlobServiceClient 构造函数 : <a href="https://learn.microsoft.com/zh-cn/dotnet/api/azure.storage.blobs.blobserviceclient.-ctor?view=azure-dotnet#azure-storage-blobs-blobserviceclient-ctor(system-uri-azure-storage-storagesharedkeycredential-azure-storage-blobs-blobclientoptions)" target="_blank" rel="noopener nofollow">https://learn.microsoft.com/zh-cn/dotnet/api/azure.storage.blobs.blobserviceclient.-ctor?view=azure-dotnet#azure-storage-blobs-blobserviceclient-ctor(system-uri-azure-storage-storagesharedkeycredential-azure-storage-blobs-blobclientoptions)</a></li>
<li id="quickstart-azure-blob-storage-client-library-for-net">快速入门：适用于 .NET 的 Azure Blob 存储客户端库 ：&nbsp;<a href="https://docs.azure.cn/zh-cn/storage/blobs/storage-quickstart-blobs-dotnet?tabs=visual-studio%2Cconnection-string%2Croles-azure-portal%2Csign-in-azure-cli%2Cidentity-visual-studio" target="_blank" rel="noopener nofollow">https://docs.azure.cn/zh-cn/storage/blobs/storage-quickstart-blobs-dotnet?tabs=visual-studio%2Cconnection-string%2Croles-azure-portal%2Csign-in-azure-cli%2Cidentity-visual-studio</a></li>
</ol>
<p>&nbsp;</p>
<h2>附录：如果在设置反向代理的时候，没有从根目录跳转，就会遇见如下错误：</h2>
<blockquote>
<p>The specified container does not exist.<br>RequestId:000000<br>Time:2025-02-28T05:57:16.7457335Z<br>Status: 404 (The specified container does not exist.)<br>ErrorCode: ContainerNotFound</p>
<p>Content:<br>&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;Error&gt;&lt;Code&gt;ContainerNotFound&lt;/Code&gt;&lt;Message&gt;The specified container does not exist.&nbsp;RequestId:00000&nbsp;Time:2025-02-28T05:57:16.7457335Z&lt;/Message&gt;&lt;/Error&gt;</p>
<p>Headers:<br>Date: Fri, 28 Feb 2025 05:57:16 GMT<br>Server: Windows-Azure-Blob/1.0,Microsoft-HTTPAPI/2.0<br>Set-Cookie: REDACTED<br>x-ms-request-id: e000000<br>x-ms-client-request-id: 5e<br>x-ms-version: 2020-08-04<br>x-ms-error-code: ContainerNotFound<br>X-Powered-By: REDACTED<br>Content-Length: 225<br>Content-Type: application/xml</p>

</blockquote>
<h2>附录：完整代码参考</h2>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> Azure;
</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> Azure.Identity;
</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> Azure.Storage.Blobs;
</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> Azure.Storage.Blobs.Models;
</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> System;
</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> System.IO;
</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> System.Text;
</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> System.Threading.Tasks;

</span><span style="color: rgba(0, 0, 255, 1)">namespace</span><span style="color: rgba(0, 0, 0, 1)"> BlobQuickstartV12
{
    </span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Program
    {
        </span><span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">async</span> Task Main(<span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)">[] args)
        {
            Console.WriteLine(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Hello World!</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
            Console.WriteLine(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Azure Blob storage v12 - .NET quickstart sample\n</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);

            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Retrieve the connection string for use with the application. The storage
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> connection string is stored in an environment variable on the machine
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> running the application called AZURE_STORAGE_CONNECTION_STRING. If the
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> environment variable is created after the application is launched in a
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> console or with Visual Studio, the shell or application needs to be closed
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> and reloaded to take the environment variable into account.
            
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">string connectionString = "Connection String";</span>
 
            <span style="color: rgba(0, 0, 255, 1)">string</span> accountsas = <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)"> SAS URL </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;
 
            Uri sasuri </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Uri(accountsas);
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Create a BlobServiceClient object which will be used to create a container client</span>
            BlobServiceClient blobServiceClient = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> BlobServiceClient(sasuri);

            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">Create a unique name for the container</span>
            <span style="color: rgba(0, 0, 255, 1)">string</span> containerName = <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">lbllmpackage</span><span style="color: rgba(128, 0, 0, 1)">"</span>;<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> "quickstartblobs" + Guid.NewGuid().ToString();

            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Create the container and return a container client object</span>
            BlobContainerClient containerClient =<span style="color: rgba(0, 0, 0, 1)"> blobServiceClient.GetBlobContainerClient(containerName);

            Console.WriteLine(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Listing blobs...</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);

            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> List all blobs in the container</span>
            <span style="color: rgba(0, 0, 255, 1)">await</span> <span style="color: rgba(0, 0, 255, 1)">foreach</span> (BlobItem blobItem <span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)"> containerClient.GetBlobsAsync())
            {
                </span><span style="color: rgba(0, 0, 255, 1)">try</span><span style="color: rgba(0, 0, 0, 1)">
                {
                    Console.WriteLine(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">\t</span><span style="color: rgba(128, 0, 0, 1)">"</span> +<span style="color: rgba(0, 0, 0, 1)"> blobItem.Name);


                    BlobClient bclient </span>=<span style="color: rgba(0, 0, 0, 1)"> containerClient.GetBlobClient(blobItem.Name);
                    </span><span style="color: rgba(0, 0, 255, 1)">await</span><span style="color: rgba(0, 0, 0, 1)"> bclient.CreateSnapshotAsync();
                }
                </span><span style="color: rgba(0, 0, 255, 1)">catch</span><span style="color: rgba(0, 0, 0, 1)"> (Exception ex)
                {
                    Console.WriteLine(ex.Message);
                }
            }

 
            </span><span style="color: rgba(0, 0, 255, 1)">var</span> prp =<span style="color: rgba(0, 0, 0, 1)"> containerClient.GetProperties();

            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Create a local file in the ./data/ directory for uploading and downloading</span>
            <span style="color: rgba(0, 0, 255, 1)">string</span> localPath = <span style="color: rgba(128, 0, 0, 1)">@"</span><span style="color: rgba(128, 0, 0, 1)">.\data\</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;
            </span><span style="color: rgba(0, 0, 255, 1)">string</span> fileName = <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">quickstart</span><span style="color: rgba(128, 0, 0, 1)">"</span> + Guid.NewGuid().ToString() + <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">.txt</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;
            </span><span style="color: rgba(0, 0, 255, 1)">string</span> localFilePath =<span style="color: rgba(0, 0, 0, 1)"> Path.Combine(localPath, fileName);

            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Write text to the file</span>
            <span style="color: rgba(0, 0, 255, 1)">await</span> File.WriteAllTextAsync(localFilePath, <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Hello, World! the message from .net</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);

            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Get a reference to a blob</span>
            BlobClient blobClient = containerClient.GetBlobClient(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">/test/</span><span style="color: rgba(128, 0, 0, 1)">"</span> +<span style="color: rgba(0, 0, 0, 1)"> fileName);

            Console.WriteLine(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Uploading to Blob storage as blob:\n\t {0}\n</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, blobClient.Uri);

            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Open the file and upload its data</span>
            <span style="color: rgba(0, 0, 255, 1)">using</span> FileStream uploadFileStream =<span style="color: rgba(0, 0, 0, 1)"> File.OpenRead(localFilePath);
            </span><span style="color: rgba(0, 0, 255, 1)">await</span> blobClient.UploadAsync(uploadFileStream, <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">);
            uploadFileStream.Close();

            Console.WriteLine(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Listing blobs...</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);

            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> List all blobs in the container</span>
            <span style="color: rgba(0, 0, 255, 1)">await</span> <span style="color: rgba(0, 0, 255, 1)">foreach</span> (BlobItem blobItem <span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)"> containerClient.GetBlobsAsync())
            {
                Console.WriteLine(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">\t</span><span style="color: rgba(128, 0, 0, 1)">"</span> +<span style="color: rgba(0, 0, 0, 1)"> blobItem.Name);
            }
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Download the blob to a local file
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Append the string "DOWNLOADED" before the .txt extension 
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> so you can compare the files in the data directory</span>
            <span style="color: rgba(0, 0, 255, 1)">string</span> downloadFilePath = localFilePath.Replace(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">.txt</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">DOWNLOADED.txt</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);

            Console.WriteLine(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">\nDownloading blob to\n\t{0}\n</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, downloadFilePath);

            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Download the blob's contents and save it to a file</span>
            BlobDownloadInfo download = <span style="color: rgba(0, 0, 255, 1)">await</span><span style="color: rgba(0, 0, 0, 1)"> blobClient.DownloadAsync();

            </span><span style="color: rgba(0, 0, 255, 1)">using</span> (FileStream downloadFileStream =<span style="color: rgba(0, 0, 0, 1)"> File.OpenWrite(downloadFilePath))
            {
                </span><span style="color: rgba(0, 0, 255, 1)">await</span><span style="color: rgba(0, 0, 0, 1)"> download.Content.CopyToAsync(downloadFileStream);
                downloadFileStream.Close();
            }
        }
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>[END]</p>
<p>&nbsp;</p>
</div>
<div id="MySignature" role="contentinfo">
    <div style="background: #1c5f55;height: 36px;width: 618px;padding: 14px 5px 0px 3px;">
  <p style="
    font-weight: bold;
    color: white;
">当在复杂的环境中面临问题，格物之道需：浊而静之徐清，安以动之徐生。 云中，恰是如此!</p>
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.3442330194803241" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-01 21:57">2025-03-01 21:56</span>&nbsp;
<a href="https://www.cnblogs.com/lulight">路边两盏灯</a>&nbsp;
阅读(<span id="post_view_count">6</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18745481" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18745481);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18745481', targetLink: 'https://www.cnblogs.com/lulight/p/18745481', title: '【Azure Storage Account】利用App Service作为反向代理, 并使用.NET Storage Account SDK实现上传/下载操作' })">举报</a>
</div>
        