
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/v-fan/p/18849732" title="发布于 2025-04-27 16:07">
    <span role="heading" aria-level="2">银河麒麟v10 sysctl内核参数加载顺序的思考</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="背景">背景</h2>
<p>最近很多伙伴想使用银河麒麟高级服务器系统v10来部署最新版本的k8s集群，可能遇到了各式各样的问题，于是准备使用kylinOS v10重温一遍kubeadm部署最新版本k8s的流程，也是替大家踩踩坑。</p>
<p>在进行服务器基础配置优化时，到内核参数修改这一步，引发了一些新的思考。</p>
<h2 id="过程">过程</h2>
<p>在修改内核参数时，我很熟练的执行了以下命令：</p>
<pre><code class="language-bash">cat &gt; /etc/sysctl.d/k8s.conf &lt;&lt; EOF
net.ipv4.ip_forward = 1
net.bridge.bridge-nf-call-iptables = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.conf.all.route_localnet = 1
vm.overcommit_memory=1
vm.panic_on_oom=0
vm.swappiness = 0
fs.inotify.max_user_watches=89100
fs.file-max=52706963
fs.nr_open=52706963
net.netfilter.nf_conntrack_max=2310720
net.ipv4.tcp_keepalive_time = 600
net.ipv4.tcp_keepalive_probes = 3
net.ipv4.tcp_keepalive_intvl =15
net.ipv4.tcp_max_tw_buckets = 36000
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_max_orphans = 327680
net.ipv4.tcp_orphan_retries = 3
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_max_syn_backlog = 16384
net.ipv4.tcp_max_syn_backlog = 16384
net.ipv4.tcp_timestamps = 0
net.core.somaxconn = 16384
EOF
</code></pre>
<p>然后：</p>
<pre><code class="language-bash">sysctl -p 
</code></pre>
<p>然后随便验证了一个ip_forward的参数，发现其值还是0：</p>
<pre><code class="language-bash">cat /proc/sys/net/ipv4/ip_forward
0
</code></pre>
<p>突然就想到，我执行<code>sysctl -p</code>在不加任何参数的情况下，是同步<code>/etc/sysctl.conf </code>文件的，而kylinOS v10默认的<code>/etc/sysctl.conf</code>文件中，ip_forward的值设置为0，所以其参数值并没有被修改。</p>
<h2 id="引发的思考">引发的思考</h2>
<p>既然我执行<code>sysctl -p </code>时仅同步<code>/etc/sysctl.conf</code>文件，那如果我<code>reboot</code>后，其最终生效的文件是哪个呢？</p>
<p>以前没有深究过系统重启后内核参数的加载顺序问题，正好趁这次机会，好好学习一下完整的加载流程。</p>
<h3 id="系统版本说明">系统版本说明</h3>
<pre><code class="language-bash"># nkvers 
############## Kylin Linux Version #################
Release:
Kylin Linux Advanced Server Release V10 (Trading)

Kernel:
4.19.90-89.18.v2401.ky10.x86_64

Build:
Kylin Linux Advanced Server
Release V10 SP3 2403/(Trading)-x86_64-Build03/20240813
#################################################
</code></pre>
<h2 id="内核参数加载顺序的深究">内核参数加载顺序的深究</h2>
<p>通过一些官方的相关文档和前辈的指导，基本摸清了重启后的加载顺序，详情如下。</p>
<h3 id="内核参数加载的相关服务">内核参数加载的相关服务</h3>
<p>系统重启后，与内核参数加载的服务，一共有两个，分别是<code>systemd-sysctl.service</code>和<code>tuned.service</code>。</p>
<p>查看服务状态：</p>
<pre><code class="language-bash"># systemctl status systemd-sysctl.service 
● systemd-sysctl.service - Apply Kernel Variables
   Loaded: loaded (/usr/lib/systemd/system/systemd-sysctl.service; static; vendor preset: disabled)

# systemctl status tuned.service 
● tuned.service - Dynamic System Tuning Daemon
   Loaded: loaded (/usr/lib/systemd/system/tuned.service; enabled; vendor preset: enabled)
</code></pre>
<p>一般情况下，这两个服务都会生效，有时<code>tuned.service</code>会被设置为<code>disable</code>，不让其开启自启，我们先来介绍以下这两个服务单元的生效规则和配置文件范围。</p>
<h4 id="systemd-sysctlservice服务">systemd-sysctl.service服务</h4>
<p>此服务时是系统初始化阶段<code>sysinit.target</code>隐式调用的，会在系统启动时，自动执行一次，其加载配置文件路径为：</p>
<pre><code class="language-bash">/run/sysctl.d/*.conf
/etc/sysctl.d/*.conf
/usr/local/lib/sysctl.d/*.conf
/usr/lib/sysctl.d/*.conf
/lib/sysctl.d/*.conf
/etc/sysctl.conf
</code></pre>
<h4 id="tunedservice服务">tuned.service服务</h4>
<p>此服务可设置为开机自启，也可取消，自由控制，其加载配置文件路径为：</p>
<pre><code class="language-bash">/usr/lib/tuned/balanced/tuned.conf
/usr/lib/tuned/desktop/tuned.conf
/usr/lib/tuned/latency-performance/tuned.conf
/usr/lib/tuned/network-latency/tuned.conf
/usr/lib/tuned/network-throughput/tuned.conf
/usr/lib/tuned/powersave/tuned.conf
/usr/lib/tuned/recommend.d/50-tuned.conf
/usr/lib/tuned/throughput-performance/tuned.conf
/usr/lib/tuned/virtual-guest/tuned.conf
/usr/lib/tuned/virtual-host/tuned.conf
</code></pre>
<h3 id="配置文件加载顺序">配置文件加载顺序</h3>
<p>理论上软件包应将自带的配置文件安装在/usr/lib/目录下，/etc目录仅供系统管理员使用。</p>
<p>一般情况下，当<code>tuned.service</code>服务设置为enable时，加载顺序是先加载<code>systemd-sysctl.service</code>服务对应的配置文件，再加载<code>tuned.service</code>服务的配置文件。</p>
<p><strong>多个文件中有相同内核参数的配置时，后加载的会将先加载的值覆盖掉，这是一个固定的规则！</strong></p>
<p>每个服务又有这么多的配置文件生效路径，那他们的加载顺序是怎样的呢？</p>
<h4 id="systemd-sysctlservice加载顺序">systemd-sysctl.service加载顺序</h4>
<ol>
<li>配置文件必须符合filename.conf格式，不同目录下的同名配置文件，仅以优先级最高的目录中的配置文件为准。目录优先级顺序如下：/etc &gt; /run &gt; /usr/local/lib &gt; /usr/lib &gt; /lib</li>
<li>读取完以上目录下的配置后，最后读取/etc/sysctl.conf。虽然/etc/sysctl.conf的读取优先级最低，但由于相同内核参数下，后加载会覆盖先加载的值，故最终生效的是/etc/sysctl.conf文件的值</li>
<li>除了同名的配置文件，其他所有的配置文件与目录无关，统一按照文件名的字典顺序处理。为了便于排序，建议给配置文件都加上两位十进制数字的文件名前缀，这样会先加载数字小的，后加载数字大的文件，同样，相同参数后加载会覆盖先加载的</li>
</ol>
<p><strong>示例：</strong></p>
<p>有以下几个配置文件：</p>
<pre><code class="language-bash">/usr/lib/sysctl.d/10-default-yama-scope.conf
/usr/lib/sysctl.d/50-pid-max.conf
/etc/sysctl.d/99-sysctl.conf
/usr/lib/sysctl.d/kylin.conf
</code></pre>
<p>读取顺序一定是：</p>
<p><code>/usr/lib/sysctl.d/10-default-yama-scope.conf</code> --&gt; <code>/usr/lib/sysctl.d/50-pid-max.conf</code> --&gt; <code>/etc/sysctl.d/99-sysctl.conf</code> --&gt; <code>/usr/lib/sysctl.d/kylin.conf</code> --&gt; <code>/etc/sysctl.conf</code></p>
<h4 id="tunedservice加载顺序">tuned.service加载顺序</h4>
<ol>
<li>
<p>如果tuned.service是enable状态，则其后于systemd-sysctl.service加载。</p>
</li>
<li>
<p>tuned分为多种模式，每种模式对应其配置文件，<code>tuned-adm active</code>可查看系统使用的哪种模式，<code>tuned-adm list profiles</code>查看系统支持的模式，<code>tuned-adm profile [name]</code>设置系统为某模式，例如，本系统为：</p>
<pre><code class="language-bash"># tuned-adm activeCurrent active profile: virtual-guest
</code></pre>
<p>则其对应加载的配置文件为：/usr/lib/tuned/virtual-guest/tuned.conf</p>
</li>
<li>
<p>对应的tuned.conf文件加载完毕后，tuned服务还会执行<code>sysctl --system</code>命令，如果配置的参数和之前加载的配置文件有相同内核参数，同样会覆盖。</p>
<p><code>sysctl --system</code>执行加载顺序如下：</p>
<pre><code class="language-bash"># sysctl --system | grep Applying
* Applying /usr/lib/sysctl.d/10-default-yama-scope.conf ...
* Applying /usr/lib/sysctl.d/50-coredump.conf ...
* Applying /usr/lib/sysctl.d/50-default.conf ...
* Applying /usr/lib/sysctl.d/50-libkcapi-optmem_max.conf ...
* Applying /usr/lib/sysctl.d/50-pid-max.conf ...
* Applying /etc/sysctl.d/99-sysctl.conf ...
* Applying /etc/sysctl.d/k8s.conf ...
* Applying /usr/lib/sysctl.d/kylin.conf ...
* Applying /etc/sysctl.conf ...
</code></pre>
</li>
</ol>
<h3 id="临时主动加载配置文件">临时主动加载配置文件</h3>
<p>系统中还可以使用<code>sysctl -p</code>来主动加载指定内核参数配置文件生效，其后不指定任何文件时，默认加载<code>/etc/sysctl.conf</code>，若指定文件，则表示加载指定文件，例如：</p>
<pre><code class="language-bash">sysctl -p /etc/sysctl.d/k8s.conf
</code></pre>
<h3 id="银河麒麟系统中需要注意的点">银河麒麟系统中需要注意的点</h3>
<p>银河麒麟系统中默认有个<code>/usr/lib/sysctl.d/kylin.conf</code>内核参数配置文件，其中已经配置诸多优化参数，其命名规则加载顺序较为靠后，所以在配置与其文件相同的参数项时，需要注意：</p>
<ol>
<li>将文件命名修改为在kylin.conf其后加载</li>
<li>也可以选择直接修改kylin.conf中的配置</li>
<li>直接配置到/etc/sysctl.conf中</li>
</ol>
<h2 id="总结">总结</h2>
<ul>
<li>tuned.service后于systemd-sysctl.service加载</li>
<li>不同目录同名配置文件取目录优先级高的，非同名统一按照文件名的字典顺序加载</li>
<li>优先级越高越先加载，越低越后加载，<code>/etc/sysctl.conf</code>最后加载</li>
<li>别忘记<code>/usr/lib/sysctl.d/kylin.conf</code>文件</li>
<li>别忘记相同参数覆盖的问题</li>
</ul>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.5053796016608796" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-27 16:08">2025-04-27 16:07</span>&nbsp;
<a href="https://www.cnblogs.com/v-fan">塔克拉玛攻城狮</a>&nbsp;
阅读(<span id="post_view_count">78</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18849732);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18849732', targetLink: 'https://www.cnblogs.com/v-fan/p/18849732', title: '银河麒麟v10 sysctl内核参数加载顺序的思考' })">举报</a>
</div>
        