
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Johny-zhao/p/18852664" title="发布于 2025-04-28 23:12">
    <span role="heading" aria-level="2">OpenStack 全套搭建部署指南（基于 Kolla-Ansible）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        部署OpenStack需要详细的步骤规划、正确的工具选择、细致的配置和充分的测试。如果用户是初次接触OpenStack，建议先从简单的DevStack开始，逐步熟悉各个组件后再进行生产环境的部署。
    </div>
<div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<div class="dad65929">
<div class="_4f9bf79 d7dc56a8 _43c05b5">
<div class="ds-markdown ds-markdown--block">
<h4><strong>一、环境准备</strong></h4>
<p class="ds-markdown-paragraph"><strong>1. 硬件要求</strong></p>
<ul>
<li>
<p class="ds-markdown-paragraph"><strong>控制节点</strong>：至少 4 核 CPU，8GB 内存，100GB 磁盘（推荐 SSD）。</p>
</li>
<li>
<p class="ds-markdown-paragraph"><strong>计算节点</strong>：根据虚拟机需求调整，建议 8 核 CPU，16GB 内存，200GB+ 磁盘。</p>
</li>
<li>
<p class="ds-markdown-paragraph"><strong>网络节点</strong>（可选）：若需独立网络服务，分配 2 核 CPU，4GB 内存。</p>
</li>
</ul>
<p class="ds-markdown-paragraph"><strong>2. 操作系统</strong></p>
<ul>
<li>
<p class="ds-markdown-paragraph"><strong>推荐系统</strong>：Ubuntu 22.04 LTS 或 CentOS 9 Stream。</p>
</li>
<li>
<p class="ds-markdown-paragraph"><strong>所有节点需满足以下条件</strong>：</p>
<div class="md-code-block md-code-block-light">
<pre><span class="token comment"># 关闭 SELinux（CentOS）  
<span class="token function">sudo setenforce <span class="token number">0  
<span class="token function">sudo <span class="token function">sed <span class="token parameter variable">-i <span class="token string">'s/^SELINUX=enforcing/SELINUX=permissive/' /etc/selinux/config  

<span class="token comment"># 关闭防火墙（测试环境）  
<span class="token function">sudo systemctl stop firewalld <span class="token operator">&amp;&amp; <span class="token function">sudo systemctl disable firewalld  <span class="token comment"># CentOS  
<span class="token function">sudo ufw disable  <span class="token comment"># Ubuntu  

<span class="token comment"># 配置时间同步（NTP/Chrony）  
<span class="token function">sudo timedatectl set-ntp <span class="token boolean">true  </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
</li>
</ul>
<p class="ds-markdown-paragraph"><strong>3. 主机名与网络规划</strong></p>
<ul>
<li>
<p class="ds-markdown-paragraph"><strong>主机名</strong>：确保所有节点的主机名可解析（如&nbsp;<code>controller</code>,&nbsp;<code>compute1</code>）。</p>
</li>
<li>
<p class="ds-markdown-paragraph"><strong>网络规划</strong>：</p>
<ul>
<li>
<p class="ds-markdown-paragraph"><strong>管理网络</strong>（Management Network）：10.0.0.0/24</p>
</li>
<li>
<p class="ds-markdown-paragraph"><strong>业务网络</strong>（Tunnel/Data Network）：10.0.1.0/24</p>
</li>
<li>
<p class="ds-markdown-paragraph"><strong>外部网络</strong>（External Network）：与物理网络桥接（如 192.168.1.0/24）。</p>
</li>
</ul>
</li>
</ul>
<hr>
<h4><strong>二、安装依赖与工具</strong></h4>
<p class="ds-markdown-paragraph"><strong>1. 安装 Python 和 Ansible</strong></p>
<div class="md-code-block md-code-block-light">
<pre><span class="token comment"># Ubuntu  
<span class="token function">sudo <span class="token function">apt update  
<span class="token function">sudo <span class="token function">apt <span class="token function">install <span class="token parameter variable">-y python3-dev python3-pip <span class="token function">git  
<span class="token function">sudo pip3 <span class="token function">install <span class="token parameter variable">-U pip ansible  

<span class="token comment"># CentOS  
<span class="token function">sudo dnf <span class="token function">install <span class="token parameter variable">-y python3-devel <span class="token function">git  
<span class="token function">sudo pip3 <span class="token function">install <span class="token parameter variable">-U pip ansible  </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<p class="ds-markdown-paragraph"><strong>2. 安装 Docker 和依赖</strong></p>
<div class="md-code-block md-code-block-light">
<pre><span class="token comment"># Ubuntu  
<span class="token function">sudo <span class="token function">apt <span class="token function">install <span class="token parameter variable">-y docker.io  
<span class="token function">sudo systemctl <span class="token builtin class-name">enable <span class="token parameter variable">--now <span class="token function">docker  

<span class="token comment"># CentOS  
<span class="token function">sudo dnf config-manager --add-repo<span class="token operator">=https://download.docker.com/linux/centos/docker-ce.repo  
<span class="token function">sudo dnf <span class="token function">install <span class="token parameter variable">-y docker-ce  
<span class="token function">sudo systemctl <span class="token builtin class-name">enable <span class="token parameter variable">--now <span class="token function">docker  

<span class="token comment"># 配置 Docker 镜像加速（可选）  
<span class="token function">sudo <span class="token function">tee /etc/docker/daemon.json <span class="token operator">&lt;&lt;<span class="token string">EOF  
{  
  "registry-mirrors": ["https://&lt;your-mirror&gt;.mirror.aliyuncs.com"]  
}  
EOF  
<span class="token function">sudo systemctl restart <span class="token function">docker  </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<p class="ds-markdown-paragraph"><strong>3. 安装 Kolla-Ansible</strong></p>
<div class="md-code-block md-code-block-light">
<pre><span class="token function">sudo pip3 <span class="token function">install git+https://opendev.org/openstack/kolla-ansible@stable/zed  
<span class="token function">sudo <span class="token function">mkdir <span class="token parameter variable">-p /etc/kolla  
<span class="token function">sudo <span class="token function">cp <span class="token parameter variable">-r /usr/local/share/kolla-ansible/etc_examples/kolla/* /etc/kolla/  
<span class="token function">sudo <span class="token function">cp /usr/local/share/kolla-ansible/ansible/inventory/* /etc/kolla/  </span></span></span></span></span></span></span></span></span></span></pre>
</div>
<hr>
<h4><strong>三、配置 Kolla-Ansible</strong></h4>
<p class="ds-markdown-paragraph"><strong>1. 生成全局配置文件</strong></p>
<div class="md-code-block md-code-block-light">
<pre><span class="token comment"># 生成密码文件  
<span class="token function">sudo kolla-ansible genpwd  

<span class="token comment"># 编辑全局配置（/etc/kolla/globals.yml）  
<span class="token function">sudo <span class="token function">vim /etc/kolla/globals.yml  

<span class="token comment"># 关键配置项  
kolla_base_distro: <span class="token string">"centos"  <span class="token comment"># 或 "ubuntu"  
kolla_internal_vip_address: <span class="token string">"10.0.0.100"  <span class="token comment"># 控制节点 VIP  
network_interface: <span class="token string">"eth0"                 <span class="token comment"># 管理网络接口  
neutron_external_interface: <span class="token string">"eth1"        <span class="token comment"># 外部网络接口  
enable_cinder: <span class="token string">"yes"  
enable_cinder_backend: <span class="token string">"lvm"  
glance_backend: <span class="token string">"file"  </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<p class="ds-markdown-paragraph"><strong>2. 配置 Inventory 文件</strong></p>
<div class="md-code-block md-code-block-light">
<pre><span class="token function">sudo <span class="token function">vim /etc/kolla/inventory/multinode  

<span class="token comment"># 示例配置  
<span class="token punctuation">[control<span class="token punctuation">]  
controller  

<span class="token punctuation">[network<span class="token punctuation">]  
controller  

<span class="token punctuation">[compute<span class="token punctuation">]  
compute1  

<span class="token punctuation">[monitoring<span class="token punctuation">]  
controller  

<span class="token punctuation">[storage<span class="token punctuation">]  
controller  </span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<hr>
<h4><strong>四、部署 OpenStack</strong></h4>
<p class="ds-markdown-paragraph"><strong>1. 执行预检查</strong></p>
<div class="md-code-block md-code-block-light">
<pre><span class="token function">sudo kolla-ansible <span class="token parameter variable">-i /etc/kolla/inventory/multinode bootstrap-servers  
<span class="token function">sudo kolla-ansible <span class="token parameter variable">-i /etc/kolla/inventory/multinode prechecks  </span></span></span></span></pre>
</div>
<p class="ds-markdown-paragraph"><strong>2. 开始部署</strong></p>
<div class="md-code-block md-code-block-light">
<pre><span class="token function">sudo kolla-ansible <span class="token parameter variable">-i /etc/kolla/inventory/multinode deploy  </span></span></pre>
</div>
<p class="ds-markdown-paragraph"><strong>3. 生成管理员凭据</strong></p>
<div class="md-code-block md-code-block-light">
<pre><span class="token function">sudo kolla-ansible post-deploy  
<span class="token builtin class-name">source /etc/kolla/admin-openrc.sh  <span class="token comment"># 加载环境变量  </span></span></span></pre>
</div>
<hr>
<h4><strong>五、验证与初始化</strong></h4>
<p class="ds-markdown-paragraph"><strong>1. 验证服务状态</strong></p>
<div class="md-code-block md-code-block-light">
<pre><span class="token comment"># 检查容器运行状态  
<span class="token function">sudo <span class="token function">docker <span class="token function">ps  

<span class="token comment"># 检查 OpenStack 服务  
openstack compute <span class="token function">service list  
openstack network agent list  </span></span></span></span></span></span></pre>
</div>
<p class="ds-markdown-paragraph"><strong>2. 创建初始资源</strong></p>
<div class="md-code-block md-code-block-light">
<pre><span class="token comment"># 创建外部网络  
openstack network create <span class="token parameter variable">--external --provider-physical-network physnet1 --provider-network-type flat public  
openstack subnet create <span class="token parameter variable">--network public --subnet-range <span class="token number">192.168.1.0/24 <span class="token parameter variable">--gateway <span class="token number">192.168.1.1 --allocation-pool <span class="token assign-left variable">start<span class="token operator">=<span class="token number">192.168.1.100,end<span class="token operator">=<span class="token number">192.168.1.200 public-subnet  

<span class="token comment"># 创建测试虚拟机  
<span class="token function">wget https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.img  
openstack image create <span class="token parameter variable">--file jammy-server-cloudimg-amd64.img --disk-format qcow2 --container-format bare ubuntu-jammy  
openstack flavor create <span class="token parameter variable">--ram <span class="token number">2048 <span class="token parameter variable">--disk <span class="token number">20 <span class="token parameter variable">--vcpus <span class="token number">2 m1.small  
openstack server create <span class="token parameter variable">--image ubuntu-jammy <span class="token parameter variable">--flavor m1.small <span class="token parameter variable">--network public test-vm  </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<hr>
<h4><strong>六、后续维护与扩展</strong></h4>
<p class="ds-markdown-paragraph"><strong>1. 添加计算节点</strong></p>
<div class="md-code-block md-code-block-light">
<pre><span class="token comment"># 在新节点安装依赖并加入 Inventory  
<span class="token function">sudo <span class="token function">vim /etc/kolla/inventory/multinode  
<span class="token punctuation">[compute<span class="token punctuation">]  
compute1  
compute2  

<span class="token comment"># 重新部署  
<span class="token function">sudo kolla-ansible <span class="token parameter variable">-i /etc/kolla/inventory/multinode deploy  </span></span></span></span></span></span></span></span></pre>
</div>
<p class="ds-markdown-paragraph"><strong>2. 升级 OpenStack</strong></p>
<div class="md-code-block md-code-block-light">
<pre><span class="token comment"># 更新 Kolla-Ansible  
<span class="token function">sudo pip3 <span class="token function">install <span class="token parameter variable">-U kolla-ansible  

<span class="token comment"># 执行升级  
<span class="token function">sudo kolla-ansible <span class="token parameter variable">-i /etc/kolla/inventory/multinode upgrade  </span></span></span></span></span></span></span></pre>
</div>
<p class="ds-markdown-paragraph"><strong>3. 备份与恢复</strong></p>
<div class="md-code-block md-code-block-light">
<pre><span class="token comment"># 备份数据库  
<span class="token function">sudo <span class="token function">docker <span class="token builtin class-name">exec <span class="token parameter variable">-it mariadb mysqldump <span class="token parameter variable">-uroot -p<span class="token variable"><span class="token variable">$(<span class="token function">grep <span class="token string">'database_password' /etc/kolla/passwords.yml <span class="token operator">| <span class="token function">awk <span class="token string">'{print $2}'<span class="token variable">) --all-databases <span class="token operator">&gt; openstack-backup.sql  

<span class="token comment"># 恢复数据库  
<span class="token function">sudo <span class="token function">docker <span class="token builtin class-name">exec <span class="token parameter variable">-i mariadb mysql <span class="token parameter variable">-uroot -p<span class="token variable"><span class="token variable">$(<span class="token function">grep <span class="token string">'database_password' /etc/kolla/passwords.yml <span class="token operator">| <span class="token function">awk <span class="token string">'{print $2}'<span class="token variable">) <span class="token operator">&lt; openstack-backup.sql  </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</div>
<hr>
<h4><strong>七、故障排查</strong></h4>
<p class="ds-markdown-paragraph"><strong>1. 查看容器日志</strong></p>
<div class="md-code-block md-code-block-light">
<pre><span class="token function">sudo <span class="token function">docker logs <span class="token operator">&lt;container_name<span class="token operator">&gt;  </span></span></span></span></pre>
</div>
<p class="ds-markdown-paragraph"><strong>2. 检查网络配置</strong></p>
<div class="md-code-block md-code-block-light">
<pre><span class="token comment"># 验证 Neutron Agent  
openstack network agent list  

<span class="token comment"># 检查 OVS 桥接  
<span class="token function">sudo ovs-vsctl show  </span></span></span></pre>
</div>
<hr>
<h3><strong>总结</strong></h3>
<ul>
<li>
<p class="ds-markdown-paragraph"><strong>核心工具</strong>：Kolla-Ansible 提供了容器化部署的标准化流程，适合生产环境。</p>
</li>
<li>
<p class="ds-markdown-paragraph"><strong>关键步骤</strong>：网络规划、Inventory 配置、全局参数调优。</p>
</li>
<li>
<p class="ds-markdown-paragraph"><strong>扩展性</strong>：通过添加计算/存储节点横向扩展资源。</p>
</li>
<li>
<p class="ds-markdown-paragraph"><strong>注意事项</strong>：</p>
<ul>
<li>
<p class="ds-markdown-paragraph">生产环境需启用 TLS 加密和防火墙规则。</p>
</li>
<li>
<p class="ds-markdown-paragraph">定期备份数据库和配置文件。</p>
</li>
</ul>
</li>
</ul>
</div>
</div>
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.04683855460185185" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-28 23:12">2025-04-28 23:12</span>&nbsp;
<a href="https://www.cnblogs.com/Johny-zhao">Johny_Zhao</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18852664);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18852664', targetLink: 'https://www.cnblogs.com/Johny-zhao/p/18852664', title: 'OpenStack 全套搭建部署指南（基于 Kolla-Ansible）' })">举报</a>
</div>
        