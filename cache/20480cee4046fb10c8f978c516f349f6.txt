
    <a name="top"></a>
    <h2><a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/jyzhao/p/18816251/li-yong-apex-da-zao-oracle-23ai-zhi-neng-kai-fa-pi" title="发布于 2025-04-09 11:20">
    <span role="heading" aria-level="2">利用 APEX 打造 Oracle 23ai 智能开发平台</span>
    

</a>
</h2>
    <small>
<span id="post-date" data-last-update-days="0.2099498754525463" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-09 11:21">2025-04-09 11:20</span>&nbsp;
<a href="https://www.cnblogs.com/jyzhao">AlfredZhao</a>&nbsp;
阅读(<span id="post_view_count">11</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18816251" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18816251);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18816251', targetLink: 'https://www.cnblogs.com/jyzhao/p/18816251/li-yong-apex-da-zao-oracle-23ai-zhi-neng-kai-fa-pi', title: '利用 APEX 打造 Oracle 23ai 智能开发平台' })">举报</a>
</small>
    <div class="entry">
        <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>Oracle 23ai 有很多新功能，但用户痛点是不会用。</p>
<p>因此计划开发一个适合小白的图形化界面<code>Oracle 23ai智能开发平台</code>，过程中也能学习APEX的玩法。</p>
<p>本篇先拿Oracle数据库向量操作相关功能起步，这个子项目就姑且起名为<code>Vectorizer</code>吧，初期先实现这四个基础功能模块：</p>
<ul>
<li>1.向量字段准备</li>
<li>2.字段选择与向量化</li>
<li>3.索引操作</li>
<li>4.查询结果</li>
</ul>
<p><img src="https://img2023.cnblogs.com/blog/635610/202504/635610-20250409112050135-1772120808.png" alt="login-界面" loading="lazy"></p>
<p><strong>功能模块细化描述：</strong><br>
1.给选定表添加一个向量字段；<br>
2.针对表中的某字段向量化存储到刚刚添加的向量字段中；<br>
3.创建hnsw索引；<br>
4.查询结果能够显示：1）向量化字段信息；2）hnsw索引情况信息；</p>
<h2 id="1向量字段准备">1.向量字段准备</h2>
<p>给选定表添加一个向量字段。</p>
<p>实现可以通过LOV列表选择指定用户、指定表，然后用户输入自己要新增的Vector类型的列名，指定Vector维度，默认值是<code>*</code>，用户也可以按需输入1~65535之间的任意整数值。</p>
<p><img src="https://img2023.cnblogs.com/blog/635610/202504/635610-20250409112051144-1663825540.png" alt="step1-向量字段准备" loading="lazy"></p>
<p>点击<code>添加vector列</code>的按钮即可实现给指定表添加一个向量字段类型的新列。在按钮下方的消息区域能够看到操作结果反馈，是否添加成功。</p>
<p><strong>这里有关APEX的设计是：</strong></p>
<ul>
<li>两个LOV列表之间是需要设置级联关系，实现自动刷新</li>
<li>这个按钮我使用的是添加动态操作，执行服务器端代码，选择PL/SQL</li>
<li>上面同时要注意设置好要提交的项和要返回的项</li>
<li>为了实现消息区域的自动刷新，添加了第2个动态操作，受影响的元素选定消息区域</li>
</ul>
<h2 id="2字段选择与向量化">2.字段选择与向量化</h2>
<p>针对表中的某字段向量化存储到刚刚添加的向量字段中。</p>
<p>这里通过LOV列表选择指定用户、指定表、选择内容列、选择向量列。然后点击<code>指定列向量化</code>按钮，将选定内容列的内容向量化并存储在选定向量列中。</p>
<p><img src="https://img2023.cnblogs.com/blog/635610/202504/635610-20250409112051306-693644728.png" alt="step2-字段选择与向量化" loading="lazy"></p>
<p>注意这里会有点慢，耐心等待消息区域出现类似上图的信息后，才算成功。</p>
<p><strong>这里关键的设计是：</strong></p>
<ul>
<li>调试期间，Embedding遇到超过限制的最大tokens问题</li>
<li>在PL/SQL代码中设计逐行更新</li>
<li>截断文本避免超过 token 限制</li>
</ul>
<h2 id="3索引操作">3.索引操作</h2>
<p>创建 HNSW（Hierarchical Navigable Small World）索引：</p>
<p>这里参数看着比较多，其实关键只需要指定你要建立的索引名、然后就是选择用户名、表名、向量列名即可，其他参数有需要就微调下，没特殊需求或不太了解就默认，我这里都给设了默认值。</p>
<p>选择好之后直接点击<code>创建HNSW索引</code>按钮。</p>
<p><img src="https://img2023.cnblogs.com/blog/635610/202504/635610-20250409112051716-397383486.png" alt="step3-索引操作创建HNSW" loading="lazy"></p>
<p><strong>这里关键的设计是：</strong></p>
<ul>
<li>创建报错 ORA-51961: 向量内存区域空间不足。</li>
<li>只需数据库中设置<code>VECTOR_MEMORY_SIZE</code>参数，指定专门的内存空间。</li>
<li>这里的按钮我采用了另外一种方式，添加处理，执行PL/SQL代码，处理设置了成功消息和错误消息</li>
<li>处理调用的存储过程在DB中封装成一个包，方便后续添加其他复杂的过程或函数</li>
</ul>
<h2 id="4查询结果">4.查询结果</h2>
<p>查询结果能够显示：1）向量化字段信息；2）hnsw索引情况信息；</p>
<p>目前只需要选择用户和表即可列出对应的向量字段&amp;向量索引信息：</p>
<p><img src="https://img2023.cnblogs.com/blog/635610/202504/635610-20250409112051243-1721278762.png" alt="step4-查询结果-向量相关信息" loading="lazy"></p>
<p><strong>这里关键的设计是：</strong></p>
<ul>
<li>选择内容列和选择向量列目前只是预留</li>
<li>选择表对应的页项<code>:P6_TABLE</code>添加了两个动态操作</li>
<li>分别刷新下面的两个交互式报表，实现查询信息实时联动</li>
</ul>

</div>
<div id="MySignature" role="contentinfo">
    AlfredZhao©版权所有「从Oracle起航，领略精彩的IT技术。」
</div>
<div class="clear"></div>

        <div class="clear"></div>
        
</div>
    <ul class="postmetadata">
        <vc:categories-tags blog-app="jyzhao" blog-id="186567" post-id="18816251"></vc:categories-tags>
    </ul>
