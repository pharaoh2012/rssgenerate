
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/InCerry/p/-/dotnet_week_25_3_3" title="发布于 2025-03-31 20:24">
    <span role="heading" aria-level="2">.NET周刊【3月第3期 2025-03-16】</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="国内文章">国内文章</h2>
<h3 id="在-visualstudio-一键-f5-启动调试-roslyn-分析器项目">在 VisualStudio 一键 F5 启动调试 Roslyn 分析器项目</h3>
<p><a href="https://www.cnblogs.com/lindexi/p/18730521" target="_blank">https://www.cnblogs.com/lindexi/p/18730521</a></p>
<p>本文将告诉大家如何在 VisualStudio 里面，一键使用习惯的 F5 键进行快速构建和启动调试 Roslyn 分析器项目.</p>
<h3 id="dotnet-源代码生成器分析器入门">dotnet 源代码生成器分析器入门</h3>
<p><a href="https://www.cnblogs.com/lindexi/p/18786647" target="_blank">https://www.cnblogs.com/lindexi/p/18786647</a></p>
<p>这是一篇来自于 C# dotnet 深水区的博客，期待能让大家能够看懂理解和编写源代码生成器和分析器。本博客量使用比较缓的知识爬坡方式编写，以便让大家更舒适地进入到源代码生成器和分析器的世界</p>
<h3 id="10年-net-coder-心语--封装的思维从隐藏稳定开始理解其本质意义">10年+ .NET Coder 心语 ── 封装的思维：从隐藏、稳定开始理解其本质意义</h3>
<p><a href="https://www.cnblogs.com/code-daily/p/18769455" target="_blank">https://www.cnblogs.com/code-daily/p/18769455</a></p>
<p>本文探讨了封装在面向对象编程中的重要性，强调了其隐藏和保护内部状态的核心功能。作者指出，封装不仅能够应对复杂性变更，还能通过清晰的接口简化外部交互。文章深入分析了封装如何将不稳定的实现细节与外部系统隔离，有助于提高系统的稳定性和可维护性。通过C#示例，作者展示了封装在实际开发中的应用及其对开发者思维的影响，揭示了封装的深层价值。</p>
<h3 id="winform-绘制太阳地球月球-运作规律">winform 绘制太阳，地球，月球 运作规律</h3>
<p><a href="https://www.cnblogs.com/axing/p/18762710" target="_blank">https://www.cnblogs.com/axing/p/18762710</a></p>
<p>文章展示了利用C#编程模拟天体运动的过程。先介绍作者因妻子而涉足地理知识，再引入Linus Torvalds的经典引用。接着，定义了<code>CelestialBody</code>类，包含初始化属性，如名称、半径和轨道周期，提供位置更新和计算当前位置的方法。随后，创建了太阳、地球和月球的实例，并使用定时器更新它们状态。整体内容逻辑清晰，且有实际应用场景，便于理解与实践。</p>
<h3 id="ai与net技术实操系列五向量存储与相似性搜索在-net-中的实现">AI与.NET技术实操系列(五)：向量存储与相似性搜索在 .NET 中的实现</h3>
<p><a href="https://www.cnblogs.com/code-daily/p/18761132" target="_blank">https://www.cnblogs.com/code-daily/p/18761132</a></p>
<p>本文探讨向量存储和相似性搜索在 .NET 开发中的应用。随着数据量激增，这些技术成为智能应用的关键。向量存储允许将复杂数据转化为高维向量，实现高效检索。相似性搜索则通过距离度量定位相关内容。文章介绍了基本概念、工作原理及在 .NET 中实现向量存储的工具，如Milvus。以文档相似性搜索系统为例，展示了系统设计及操作步骤，旨在激发开发者探索智能技术的兴趣。</p>
<h3 id="net-core-中如何实现缓存的预热">.NET Core 中如何实现缓存的预热？</h3>
<p><a href="https://www.cnblogs.com/liyongqiang-cc/p/18737994" target="_blank">https://www.cnblogs.com/liyongqiang-cc/p/18737994</a></p>
<p>在构建高性能的.NET Core应用时，缓存预热是提升响应速度和减轻数据库压力的重要技巧。缓存预热是在系统启动或缓存失效后，主动加载热点数据，从而避免用户首次请求时的延迟。它提升用户体验、降低数据库压力并提高系统稳定性。文章介绍了在.NET Core中实现缓存预热的方法，包括通过内存缓存和分布式缓存进行启动时预热和定时任务预热，并提供了相应的代码示例，清晰地阐述了如何操作。</p>
<h3 id="按钮权限的设计及实现">按钮权限的设计及实现</h3>
<p><a href="https://www.cnblogs.com/cyzf/p/18715235" target="_blank">https://www.cnblogs.com/cyzf/p/18715235</a></p>
<p>该文章是OverallAuth2.0系列的第一篇，介绍了一个功能强大的权限与可视化流程管理系统。文章详细讲解了按钮权限的实现流程及其与菜单的关系。作者通过图文并茂的方式，帮助读者理解按钮权限和数据按钮权限的区别。文章内容丰富，涵盖了表设计和权限控制的基本概念。提供了源码获取渠道，鼓励读者关注字微信公众号以获取更多资源。</p>
<h3 id="使用c创建一个mcp客户端">使用C#创建一个MCP客户端</h3>
<p><a href="https://www.cnblogs.com/mingupupu/p/18772576" target="_blank">https://www.cnblogs.com/mingupupu/p/18772576</a></p>
<p>这篇文章介绍了如何使用C#创建MCP客户端，弥补了相关教程的不足。通过简单的控制台程序，读者可以轻松实现获取网页内容的功能。文章详细展示了使用的主要包和示例代码，便于读者复现。具体代码说明了如何配置MCP客户端，包括读取环境变量、设置客户端信息及服务器配置。重点突出在TransportOptions的设置上，确保程序能够与MCP服务有效连接。整体内容逻辑清晰，实用性强。</p>
<h3 id="网络虚拟存储-iscsi实现方案">网络虚拟存储 Iscsi实现方案</h3>
<p><a href="https://www.cnblogs.com/kybs0/p/18766881" target="_blank">https://www.cnblogs.com/kybs0/p/18766881</a></p>
<p>本文介绍了通过iSCSI协议实现网络虚拟存储的多种方案，包括PowerShell脚本、WMI API、iscsicli脚本及开源组件Vanara.PInvoke.IScsiDsc。其中，PowerShell提供了丰富的管理cmdlet，WMI API虽然可用但未被维护。iscsicli命令行能快速调用，Vanara组件则封装了Win32API，方便开发者使用。Win32API为iSCSI提供了官方的发现库API，适合创建会话列表等操作。内容全面且融合多个技术点，适用于相关开发者。</p>
<h3 id="译visual-studio-中新的强大生产力特性">【译】Visual Studio 中新的强大生产力特性</h3>
<p><a href="https://www.cnblogs.com/MeteorSeed/p/18764506" target="_blank">https://www.cnblogs.com/MeteorSeed/p/18764506</a></p>
<p>本文介绍了Visual Studio最新版本中的多个新功能，包括自定义文件编码、缩进换行控制、保留字体偏好及重设水平滚动条等。这些功能旨在提高开发者的工作效率和用户体验。用户可以在设置中自定义编码及缩进选项，并在切换主题时保持字体选择。这些改进反映了对用户反馈的重视，意在不断优化开发环境。</p>
<h3 id="分享-3-个-net-开源的文件压缩处理库助力快速实现文件压缩解压功能">分享 3 个 .NET 开源的文件压缩处理库，助力快速实现文件压缩解压功能！</h3>
<p><a href="https://www.cnblogs.com/Can-daydayup/p/18771891" target="_blank">https://www.cnblogs.com/Can-daydayup/p/18771891</a></p>
<p>本文介绍了三个基于 C# 的 .NET 开源文件压缩库，帮助用户实现文件压缩和解压功能。SharpCompress 库支持多种格式的解压与部分格式的写入，适用于多个 .NET 版本。SharpZipLib 提供多种压缩方法和加密功能，便于在不同项目中使用。K4os.Compression.LZ4 是高效的压缩库，具有快速的压缩和解压速度。文中还提到优秀项目的精选，鼓励大家提交推荐。整体内容清晰且实用，适合开发者参考。</p>
<h3 id="cnetnet-core技术前沿周刊--第-29-期2025年31-39">C#/.NET/.NET Core技术前沿周刊 | 第 29 期(2025年3.1-3.9)</h3>
<p><a href="https://www.cnblogs.com/Can-daydayup/p/18763554" target="_blank">https://www.cnblogs.com/Can-daydayup/p/18763554</a></p>
<p>本周刊提供了C#/.NET/.NET Core领域的最新技术文章和资源，帮助开发者跟进技术潮流。它包含.NET 10的预览类型发布、C#中Dictionary的功能详解、求职简历的编写技巧、面试问题汇总、以及多种基于.NET的工具和模板。此外，还有一些AI相关的扩展库和应用模板的信息。这些内容帮助开发者提高技能和知识，适应瞬息万变的技术环境。</p>
<h3 id="adonet中sql绑定变量方式总结">ADO.NET中SQL绑定变量方式总结</h3>
<p><a href="https://www.cnblogs.com/tianqing/p/18774515" target="_blank">https://www.cnblogs.com/tianqing/p/18774515</a></p>
<p>本文讨论了ADO.NET中SQL绑定变量的使用，包括SqlParameter的安全性和性能优势。推荐使用SqlParameter以防止SQL注入，并支持多种数据类型。介绍了使用AddWithValue方法的注意事项，特别是隐式转换带来的性能问题。提到存储过程的结合使用，提高代码复用和执行效率。文中还讨论了批量绑定变量(TVP)，适合传递多个值以提高性能。提供了相关的C#代码示例以便更好地理解这些概念。</p>
<h3 id="重生之数据结构与算法----图的遍历">重生之数据结构与算法----图的遍历</h3>
<p><a href="https://www.cnblogs.com/lmy5215006/p/18763193" target="_blank">https://www.cnblogs.com/lmy5215006/p/18763193</a></p>
<p>本文介绍了图和树的遍历方式，重点讨论了深度优先遍历(DFS)。强调了图中存在环的特性，需记录已访问节点以避免死循环。具体实现包括邻接表和邻接矩阵的DFS方法，示例代码清晰。文章还提到树与图遍历之间的区别。图的路径可能有多种，需穷举所有路径。作者说明了如何记录正在访问的路径。内容简练，重点突出。</p>
<h3 id="线上测试木舟物联网平台之如何通过http网络组件接入设备">线上测试木舟物联网平台之如何通过HTTP网络组件接入设备</h3>
<p><a href="https://www.cnblogs.com/fanliang11/p/18766635" target="_blank">https://www.cnblogs.com/fanliang11/p/18766635</a></p>
<p>木舟(Kayak)是基于.NET6.0开发的微服务引擎，支持异步和响应式编程。平台具备物模型、设备和网络组件的管理功能，同时支持多种协议的适配。用户可以通过文中介绍的步骤创建组件，并实现设备数据的接入和上报。文章还展示了链路跟踪监控及网络组件的管理。通过自定义协议，用户可灵活处理消息编解码与身份鉴权。这些功能使得搭建微服务物联网平台变得快捷高效。</p>
<h3 id="记录一下-简单udp和sni-代理-done">记录一下 简单udp和sni 代理 done</h3>
<p><a href="https://www.cnblogs.com/fs7744/p/18773555" target="_blank">https://www.cnblogs.com/fs7744/p/18773555</a></p>
<p>这篇文章讨论了基于Kestrel实现的简单UDP和SNI代理的功能。文章首先提到，通过借鉴Kestrel的设计，实现过程比预期更快。接着，详细描述了UDP代理的基本功能和配置格式，特别强调了UDP响应的数量限制。文章还列出了实现UDP代理的关键代码，包括自定义的UdpConnectionContext类，并说明了为何选择简化的实现方式。整体内容技术性强，适合对.NET相关技术感兴趣的读者。</p>
<h3 id="重生之数据结构与算法----图论">重生之数据结构与算法----图论</h3>
<p><a href="https://www.cnblogs.com/lmy5215006/p/18757481" target="_blank">https://www.cnblogs.com/lmy5215006/p/18757481</a></p>
<p>该文章深入探讨了图结构及其存储方式，包括邻接表和邻接矩阵，阐明了它们在时间和空间上的取舍。文章讲解了图与多叉树的本质相似性，以及图的度(indegree和outdegree)概念。还提到了加权图的实现方式，显示了如何在邻接结构中添加权重。无向图的定义被简要解释。整体结构清晰，逻辑严谨，适合读者学习图的基本概念和存储策略。</p>
<h3 id="线上测试木舟平台发布">线上测试木舟平台发布</h3>
<p><a href="https://www.cnblogs.com/fanliang11/p/18766414" target="_blank">https://www.cnblogs.com/fanliang11/p/18766414</a></p>
<p>木舟物联网平台基于.NET6.0和surging微服务引擎构建，支持异步和响应式编程，包含物模型、设备、产品等管理功能，适配多种通信协议，包括TCP和MQTT。文章介绍了从组件创建到设备网关接入的整个流程，包括用户管理和链路监控等。提供了相关的访问地址和swagger文档，鼓励用户联系作者进行测试和协议接入。整体内容专业且实用，适合技术人员阅读。</p>
<h3 id="ai与net技术实操系列六基于图像分类模型对图像进行分类">AI与.NET技术实操系列(六)：基于图像分类模型对图像进行分类</h3>
<p><a href="https://www.cnblogs.com/code-daily/p/18764803" target="_blank">https://www.cnblogs.com/code-daily/p/18764803</a></p>
<p>本文讨论了如何在.NET环境下使用C#部署和调用AI图像分类模型。人工智能技术在各行业的应用日益广泛，图像分类是计算机视觉领域的重要技术之一。作者介绍了必要的软件和工具，包括Visual Studio和ML.NET，以及如何创建项目和安装依赖。文中详细阐述了图像分类模型的选择，尤其是使用预训练的tensorflow_inception_graph.pb模型。作者提供了完整的实施步骤，确保开发者能够直观高效地应用这些技术于实际项目中。</p>
<h3 id="重生之数据结构与算法----常见排序算法二">重生之数据结构与算法----常见排序算法(二)</h3>
<p><a href="https://www.cnblogs.com/lmy5215006/p/18769510" target="_blank">https://www.cnblogs.com/lmy5215006/p/18769510</a></p>
<p>本文介绍了几种排序算法，重点讨论了快速排序和归并排序。快速排序通过选择一个基准元素，将数组分隔为左右两部分并递归排序，最终实现排序。文章通过代码示例详细阐明了快速排序的实现过程及其时间和空间复杂度。快速排序的平均时间复杂度为O(n log n)，但在最坏情况下为O(n^2)。归并排序则通过将数组分为两半排序后合并，原理简单而有效。整体内容清晰明了，适合读者快速理解排序算法的核心思想与实现。</p>
<h3 id="重生之数据结构与算法----常见排序算法一">重生之数据结构与算法----常见排序算法(一)</h3>
<p><a href="https://www.cnblogs.com/lmy5215006/p/18764866" target="_blank">https://www.cnblogs.com/lmy5215006/p/18764866</a></p>
<p>文章讨论了排序算法的三个关键指标：时间/空间复杂度、排序稳定性和是否原地排序。选择排序作为基础算法，其时间复杂度为O(n^2)，空间复杂度为O(1)，但不稳定。文章接着提出了冒泡排序的缺陷，如不稳定性和高时间复杂度，并计划对选择排序进行优化以保持稳定性。示例中代码展示了如何实现选择排序。此内容适合对排序算法感兴趣的读者，提供了理论和实际代码示例。总体上，文章覆盖排序算法的基本知识和实现方法。</p>
<h3 id="一起来玩mcp_server_sqlite让ai帮你做增删改查">一起来玩mcp_server_sqlite，让AI帮你做增删改查！！</h3>
<p><a href="https://www.cnblogs.com/mingupupu/p/18773859" target="_blank">https://www.cnblogs.com/mingupupu/p/18773859</a></p>
<p>文章介绍了使用C#构建简单MCP客户端的效果，包括数据库操作的增删改查功能。作者强调使用此工具时要注意环境的安全性，不建议用于生产环境。文中提供了本地运行mcp_server_sqlite服务的步骤和相关配置细节，并链接到相关代码库供参考。整体内容简洁明了，适合对C#和数据库操作有基础的读者。由于存在与代码实现相关的具体示例，具备一定的实践价值。</p>
<h2 id="主题">主题</h2>
<h3 id="net-10-预览版-2-现已推出---net-博客">.NET 10 预览版 2 现已推出！ - .NET 博客</h3>
<p><a href="https://devblogs.microsoft.com/dotnet/dotnet-10-preview-2/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/dotnet/dotnet-10-preview-2/</a></p>
<p>.NET 10 预览版 2 已发布。</p>
<p>此版本包括运行时优化以及 C# 部分事件和构造函数的映射。</p>
<h3 id="今天我们庆祝-visual-studio-成立-28-周年---x-上的-microsoft-开发人员-msdev">今天我们庆祝 Visual Studio 成立 28 周年！ - X 上的 Microsoft 开发人员 (@msdev)</h3>
<p><a href="https://x.com/msdev/status/1901695033075528139" target="_blank" rel="noopener nofollow">https://x.com/msdev/status/1901695033075528139</a></p>
<p>自 Visual Studio 首次发布以来，已经过去了 28 年。</p>
<h3 id="发布-windows-app-sdk-170-17250310001--微软windowsappsdk">发布 Windows App SDK 1.7.0 (1.7.250310001) · 微软/WindowsAppSDK</h3>
<p><a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.7.0" target="_blank" rel="noopener nofollow">https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.7.0</a></p>
<p>Windows 应用 SDK 1.7.0 已发布。</p>
<ul>
<li>新徽章通知</li>
<li>新的 CameraCaptureUI API</li>
<li>新的身份验证 API</li>
<li>新的后台任务支持</li>
<li>新的 TitleBar 控件</li>
<li>MathML 支持</li>
<li>新的 AppWindow API</li>
<li>新岛屿 API</li>
</ul>
<p>此外，它还包括多个运行时增强功能和错误修复。</p>
<ul>
<li><a href="https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/stable-channel#version-170-17250310001" target="_blank" rel="noopener nofollow">版本 1.7.0 (1.7.250310001) - Windows 应用 SDK 的稳定通道发行说明 - Windows 应用</a></li>
<li><a href="https://github.com/microsoft/microsoft-ui-xaml/releases/tag/winui3/release/1.7.0" target="_blank" rel="noopener nofollow">在 WinAppSDK 1.7.0 中发布 WinUI 3 · microsoft/microsoft-ui-xaml · GitHub</a></li>
</ul>
<h3 id="visual-studio-hub获取最新新闻更新和见解的一站式目的地">Visual Studio Hub：获取最新新闻、更新和见解的一站式目的地</h3>
<p><a href="https://visualstudio.microsoft.com/hub/?rwnlp=ja" target="_blank" rel="noopener nofollow">https://visualstudio.microsoft.com/hub/?rwnlp=ja</a></p>
<p>Visual Studio Hub 现已上线，该站点汇集了 Visual Studio 中的新功能和使用方法、GitHub Copilot 相关资源、博客更新等。</p>
<ul>
<li><a href="https://devblogs.microsoft.com/visualstudio/visual-studio-hub/" target="_blank" rel="noopener nofollow">Visual Studio Hub 简介 - Visual Studio 博客</a></li>
</ul>
<h3 id="mstest-38增强-net-测试的-10-大功能---net-博客">MSTest 3.8：增强 .NET 测试的 10 大功能！ - .NET 博客</h3>
<p><a href="https://devblogs.microsoft.com/dotnet/mstest-3-8-highlights/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/dotnet/mstest-3-8-highlights/</a></p>
<p>了解 MSTest 3.8 中的新增功能。</p>
<ul>
<li>
<p>过滤器</p>
</li>
<li>
<p>使用 MSBuild 运行测试</p>
</li>
<li>
<p>改进的迭代体验</p>
</li>
<li>
<p>增强的元包</p>
</li>
<li>
<p>最新的 UWP 支持</p>
</li>
<li>
<p>改进的断言</p>
</li>
<li>
<p>数据驱动的测试改进</p>
</li>
<li>
<p>重新运行 Flaky 测试</p>
</li>
<li>
<p>条件测试</p>
</li>
<li>
<p>分析器</p>
</li>
</ul>
<h3 id="发布-v800--domaindrivendevswashbuckleaspnetcore">发布 v8.0.0 · domaindrivendev/Swashbuckle.AspNetCore</h3>
<p><a href="https://github.com/domaindrivendev/Swashbuckle.AspNetCore/releases/tag/v8.0.0" target="_blank" rel="noopener nofollow">https://github.com/domaindrivendev/Swashbuckle.AspNetCore/releases/tag/v8.0.0</a></p>
<p>Swashbuckle.AspNetCore v8.0.0 已发布。</p>
<p>此版本删除了对 .NET 6 的支持，并删除了 . ASP.NET 现在在面向 .NET Standard 2.0 时依赖于 Core 2.3。</p>
<p>它还包括对未来 OpenAPI 3.1 支持的支持。</p>
<h2 id="文章幻灯片等">文章、幻灯片等</h2>
<h3 id="使用开发容器探索新的-net-版本---net-博客">使用开发容器探索新的 .NET 版本 - .NET 博客</h3>
<p><a href="https://devblogs.microsoft.com/dotnet/dotnet-in-dev-container/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/dotnet/dotnet-in-dev-container/</a></p>
<p>介绍如何使用 Dev Containers 试用 .NET 的新版本。</p>
<p>本文介绍了容器镜像的类型、Dev Containers 的容器配置和自定义，以及如何运行它们。</p>
<h3 id="在-aspire-下启动-web-应用程序时防止随机端口---qiita">在 Aspire 下启动 Web 应用程序时防止随机端口 - Qiita</h3>
<p><a href="https://qiita.com/k-yamamoto/items/ebf64540190301d076ce" target="_blank" rel="noopener nofollow">https://qiita.com/k-yamamoto/items/ebf64540190301d076ce</a></p>
<p>了解如何在 .NET Aspire 上托管和运行 Web 应用程序时修复端口号。</p>
<h3 id="我认真考虑了从-systemdrawingbitmap-迁移到哪里">我认真考虑了从 System.Drawing.Bitmap 迁移到哪里</h3>
<p><a href="https://zenn.dev/nuits_jp/articles/2025-03-25-migration-system-drawing-bitmap" target="_blank" rel="noopener nofollow">https://zenn.dev/nuits_jp/articles/2025-03-25-migration-system-drawing-bitmap</a></p>
<p>一篇考虑从 System.Draiwng.Bitmap 迁移位置的文章。</p>
<p>本文介绍了评估和考虑将 Aspose、ImageSharp、LibTiff.Net、Magick.NET 和 SkiaSharp 等库作为迁移目标的结果。</p>
<h3 id="为开源-nuget-包创建软件物料清单-sbom">为开源 NuGet 包创建软件物料清单 (SBOM)</h3>
<p><a href="https://andrewlock.net/creating-a-software-bill-of-materials-sbom-for-an-open-source-nuget-package/" target="_blank" rel="noopener nofollow">https://andrewlock.net/creating-a-software-bill-of-materials-sbom-for-an-open-source-nuget-package/</a><br>
了解如何为开源 NuGet 包创建 SBOM。</p>
<p>本文介绍了 GitHub 的导出功能、Microsoft 的 SBOM 生成工具和 GitHub Actions(anchore/sbom-action; Syft)，并介绍了 CyclonDX 模块的用法和输出。</p>
<h3 id="semantic-kernel-agent-framework-的-rc2-已经发布">Semantic Kernel Agent Framework 的 RC2 已经发布。</h3>
<p><a href="https://zenn.dev/microsoft/articles/semantic-kernel-agent-rc2" target="_blank" rel="noopener nofollow">https://zenn.dev/microsoft/articles/semantic-kernel-agent-rc2</a></p>
<p>一篇关于试用 Semantic Kernel 的 Agent Framework RC2 的文章。</p>
<h3 id="我检查并总结了-wpf-中包含-windows-app-sdk-等时的运行时分发要点---qiita">我检查并总结了 WPF 中包含 Windows App SDK 等时的运行时分发要点 - Qiita</h3>
<p><a href="https://qiita.com/spc_ksudoh/items/40d952c9864c5c2d6995" target="_blank" rel="noopener nofollow">https://qiita.com/spc_ksudoh/items/40d952c9864c5c2d6995</a></p>
<p>如果您的 WPF 应用程序使用 Windows 应用 SDK，请告知分发安装程序所需的运行时。</p>
<h3 id="如何在-net-中为自定义-kubernetes-控制器编写集成测试">如何在 .NET 中为自定义 kubernetes 控制器编写集成测试</h3>
<p><a href="https://lioncoding.com/how-to-write-integration-tests-for-a-custom-kubernetes-controller-in-.net/" target="_blank" rel="noopener nofollow">https://lioncoding.com/how-to-write-integration-tests-for-a-custom-kubernetes-controller-in-.net/</a></p>
<p>了解如何为 .NET 中 Kubernetes 的自定义控制器实施集成测试。</p>
<p>本文以 kubernetes-reflector 为例来设置集成测试。</p>
<h3 id="修复密码生成器">修复密码生成器</h3>
<p><a href="https://richardcocks.github.io/2025-03-24-PasswordGen" target="_blank" rel="noopener nofollow">https://richardcocks.github.io/2025-03-24-PasswordGen</a></p>
<p>尝试改进 Copilot 生成的随机密码生成，并将其重写为安全快速的实现。</p>
<h3 id="pixieditor-20-状态-2025-年第一季度--pixi编辑器">PixiEditor 2.0 状态 2025 年第一季度 | Pixi编辑器</h3>
<p><a href="https://pixieditor.net/blog/2025/03/19/q1-status" target="_blank" rel="noopener nofollow">https://pixieditor.net/blog/2025/03/19/q1-status</a></p>
<p>一篇关于 2D 图像工具 PixiEditor 2.0 进展的文章。</p>
<p>本文提到了未来的各种新功能和计划，以及对 macOS 和 Linux 的支持。</p>
<h3 id="将-browserstack-app-automate-与-appium-ui-一起用于-net-maui-应用程序测试---net-博客">将 BrowserStack App Automate 与 Appium UI 一起用于 .NET MAUI 应用程序测试 - .NET 博客</h3>
<p><a href="https://devblogs.microsoft.com/dotnet/browserstack-appium-dotnet-maui/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/dotnet/browserstack-appium-dotnet-maui/</a></p>
<p>了解如何使用 BrowserStack App Automate 在 Appium 中对您的 .NET MAUI 应用程序进行 UI 测试。</p>
<h3 id="使用-ansible-在-ubuntu-上安装任何-net-sdk---techguitarrapccóm">使用 Ansible 在 Ubuntu 上安装任何 .NET SDK - tech.guitarrapc.cóm</h3>
<p><a href="https://tech.guitarrapc.com/entry/2025/03/20/235900" target="_blank" rel="noopener nofollow">https://tech.guitarrapc.com/entry/2025/03/20/235900</a></p>
<p>了解如何在 Ubuntu 上安装 Ansible 中指定的 .NET SDK 版本。</p>
<h3 id="使用-ai-驱动的-ienumerable-可视化工具进行调试---visual-studio-blog">使用 AI 驱动的 IEnumerable 可视化工具进行调试 - Visual Studio Blog</h3>
<p><a href="https://devblogs.microsoft.com/visualstudio/debugging-with-the-ai-powered-ienumerable-visualizer/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/visualstudio/debugging-with-the-ai-powered-ienumerable-visualizer/</a></p>
<p>推出 IEnumerable Visualizer，它添加了 Visual Studio 的 AI 集成等。</p>
<p>本文介绍了语法突出显示以及与 Copilot 的集成。</p>
<h3 id="c---二维码生成---wifi-设置">C# - 二维码生成 - WiFi 设置</h3>
<p><a href="https://zenn.dev/chai0917/articles/2ce144f596c5fb" target="_blank" rel="noopener nofollow">https://zenn.dev/chai0917/articles/2ce144f596c5fb</a></p>
<p>了解如何生成 QR 码。 本文讨论了使用 ZXing.Net 生成和读取。</p>
<h3 id="解决使用-transient-生成-idisposable-类时的内存泄漏---qiita">解决使用 Transient 生成 IDisposable 类时的内存泄漏 - Qiita</h3>
<p><a href="https://qiita.com/hiro_t/items/7a6b7cb8d0f91bc97573" target="_blank" rel="noopener nofollow">https://qiita.com/hiro_t/items/7a6b7cb8d0f91bc97573</a></p>
<p>如果在 Microsoft.Extensions.DependencyInjection 中将 IDisposable 类注册为 Transient，则在释放 Scope 之前，它不会为 Dispose。</p>
<h3 id="通用仓库模式作为库---qiita">通用仓库模式作为库 - Qiita</h3>
<p><a href="https://qiita.com/mxProject/items/ad81cb580f758f2530a9" target="_blank" rel="noopener nofollow">https://qiita.com/mxProject/items/ad81cb580f758f2530a9</a></p>
<p>关于创建库以实现通用存储库模式。</p>
<h3 id="如何使用-nuget-包发布解决方案模板">如何使用 NuGet 包发布解决方案模板</h3>
<p><a href="https://zenn.dev/jtechjapan_pub/articles/f20ec254186e0f" target="_blank" rel="noopener nofollow">https://zenn.dev/jtechjapan_pub/articles/f20ec254186e0f</a></p>
<p>了解如何在 NuGet 上创建和发布包含多个项目作为包的每个解决方案模板。</p>
<h3 id="关于在-net-10-中添加-timespanfrommilliseconds-方法的重载---qiita">关于在 .NET 10 中添加 TimeSpan.FromMilliseconds 方法的重载 - Qiita</h3>
<p><a href="https://qiita.com/RyotaMurohoshi/items/9339f22560510a8f1c2f" target="_blank" rel="noopener nofollow">https://qiita.com/RyotaMurohoshi/items/9339f22560510a8f1c2f</a></p>
<p>.NET 10 中添加的“TimeSpan.FromMilliseconds”方法的说明。</p>
<p>本文还讨论了与 .NET 9 中添加的 API 的兼容性。</p>
<h3 id="net-10-预览版-ef-core-似乎将添加-left-join-和-right-join---qiita">[.NET 10 预览版] EF Core 似乎将添加 LEFT JOIN 和 RIGHT JOIN - Qiita</h3>
<p><a href="https://qiita.com/yariri/items/31dc69aaac0e91ed0a42" target="_blank" rel="noopener nofollow">https://qiita.com/yariri/items/31dc69aaac0e91ed0a42</a></p>
<p>.NET 10 中 LINQ 中的“LeftJoin”和“RightJoin”新增功能的简要介绍。</p>
<h3 id="如何构建-c-自动化测试-github-actions-x-xunit">如何构建 C# 自动化测试 Github Actions x xUnit</h3>
<p><a href="https://zenn.dev/trifolium/articles/6f6fe5c8746798" target="_blank" rel="noopener nofollow">https://zenn.dev/trifolium/articles/6f6fe5c8746798</a></p>
<p>了解如何在 GitHub Actions 中使用 xUnit 自动执行测试。本文介绍了如何创建工作流、使用作、输出报表等。</p>
<h3 id="如何在-visual-studio-2022-中使用-c-xunit-实现单元测试">如何在 Visual Studio 2022 中使用 C# xUnit 实现单元测试</h3>
<p><a href="https://zenn.dev/trifolium/articles/c2fa1ded4d54ac" target="_blank" rel="noopener nofollow">https://zenn.dev/trifolium/articles/c2fa1ded4d54ac</a></p>
<p>有关如何使用 xUnit 实现单元测试的简要说明。</p>
<h3 id="原生-aot-故障排除技巧">原生 AOT 故障排除技巧</h3>
<p><a href="https://zenn.dev/shinta0806/articles/native-aot-tips" target="_blank" rel="noopener nofollow">https://zenn.dev/shinta0806/articles/native-aot-tips</a></p>
<p>Native AOT 的提示和如何处理您可能遇到的任何问题的提示。</p>
<h3 id="c-反向收集公式">[C#] 反向收集公式</h3>
<p><a href="https://zenn.dev/inuinu/articles/84c6d5ca85c41f" target="_blank" rel="noopener nofollow">https://zenn.dev/inuinu/articles/84c6d5ca85c41f</a></p>
<p>介绍如何按目的在 C# 中编写集合表达式的文章。</p>
<h3 id="从源代码构建-net-运行时">从源代码构建 .NET 运行时</h3>
<p><a href="https://medium.com/@meriffa/build-the-net-runtime-from-source-8a098fc73efc" target="_blank" rel="noopener nofollow">https://medium.com/@meriffa/build-the-net-runtime-from-source-8a098fc73efc</a></p>
<p>了解如何在 Debian Linux 上从源代码构建 .NET 运行时。 除了构建过程之外，本文还涉及 Visual Studio Code 中的调试。</p>
<h3 id="-适用于-net-的新解决方案文件格式-slnx">. 适用于 .NET 的新解决方案文件格式 (.slnx)</h3>
<p><a href="https://zenn.dev/nuskey/articles/e07f70b62105d5" target="_blank" rel="noopener nofollow">https://zenn.dev/nuskey/articles/e07f70b62105d5</a></p>
<p>了解基于 XML 的解决方案的新 .slnx 文件格式。</p>
<h3 id="教程使用-aspnet-core-创建最小-api---f">教程：使用 ASP.NET Core 创建最小 API - F#</h3>
<p><a href="https://zenn.dev/gkuroki/articles/fsharp-min-web-api" target="_blank" rel="noopener nofollow">https://zenn.dev/gkuroki/articles/fsharp-min-web-api</a></p>
<p>一篇用 F# 实现 Microsoft 的官方 ASP.NET Core 教程的文章。</p>
<h3 id="xbox--net-aspire转变本地开发实践---net-博客">Xbox + .NET Aspire：转变本地开发实践 - .NET 博客</h3>
<p><a href="https://devblogs.microsoft.com/dotnet/xboxs-usage-of-aspire-transforming-development-practices/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/dotnet/xboxs-usage-of-aspire-transforming-development-practices/</a></p>
<p>有关与 Xbox 服务团队一起使用 .NET Aspire 的文章。</p>
<p>本文介绍了如何设置 .NET Aspire 以及它如何帮助简化服务开发。</p>
<h3 id="尝试在-console-中创建菜单功能---qiita">尝试在 Console 中创建菜单功能 - Qiita</h3>
<p><a href="https://qiita.com/nookveg/items/1c6b63768209df8e52aa" target="_blank" rel="noopener nofollow">https://qiita.com/nookveg/items/1c6b63768209df8e52aa</a></p>
<p>说明如何实现允许您在控制台上显示和选择选项的机制。</p>
<h3 id="使用新的解决方案文件-slnx-格式---techguitarrapccóm">使用新的解决方案文件 SLNX 格式 - tech.guitarrapc.cóm</h3>
<p><a href="https://tech.guitarrapc.com/entry/2025/03/11/235900" target="_blank" rel="noopener nofollow">https://tech.guitarrapc.com/entry/2025/03/11/235900</a></p>
<p>了解如何将新的 .slnx 文件格式用于基于 XML 的解决方案。</p>
<p>本文还介绍了如何转换项目文件以及如何从 .sln 迁移。</p>
<h3 id="在-c-中禁用未使用的私有方法显示为灰色---techguitarrapccóm">在 C# 中禁用未使用的私有方法显示为灰色 - tech.guitarrapc.cóm</h3>
<p><a href="https://tech.guitarrapc.com/entry/2025/03/10/235900" target="_blank" rel="noopener nofollow">https://tech.guitarrapc.com/entry/2025/03/10/235900</a></p>
<p>如何禁用导致未使用的方法在 Visual Studio 中灰显的功能。<br>
5a07)</p>
<h3 id="在-net-应用程序中使用-posthog">在 .NET 应用程序中使用 PostHog</h3>
<p><a href="https://haacked.com/archive/2025/02/25/posthog-dotnet-1.0/" target="_blank" rel="noopener nofollow">https://haacked.com/archive/2025/02/25/posthog-dotnet-1.0/</a></p>
<p>了解如何将 PostHog 整合到您的 .NET 应用程序中。</p>
<h3 id="通过深入的反馈增强拉取请求审查---visual-studio-blog">通过深入的反馈增强拉取请求审查 - Visual Studio Blog</h3>
<p><a href="https://devblogs.microsoft.com/visualstudio/enhance-pull-request-reviews-with-in-depth-feedback/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/visualstudio/enhance-pull-request-reviews-with-in-depth-feedback/</a></p>
<p>了解一项新功能，该功能允许您从 Visual Studio 中对拉取请求进行评论和提供反馈。</p>
<h3 id="oh-my-teeth---qiita-的预约系统">Oh my teeth - Qiita 的预约系统</h3>
<p><a href="https://qiita.com/omt_teruki/items/3af841e478e6b907b8ec" target="_blank" rel="noopener nofollow">https://qiita.com/omt_teruki/items/3af841e478e6b907b8ec</a></p>
<p>您创建了一个具有 ASP.NET Core 后端和 React 前端的应用程序，作为服务的预留系统。</p>
<h3 id="将-cloudflare-turnstile-添加到-aspnet-core-网站">将 Cloudflare Turnstile 添加到 ASP.NET Core 网站</h3>
<p><a href="https://blog.elmah.io/adding-cloudflare-turnstile-to-an-asp-net-core-website/" target="_blank" rel="noopener nofollow">https://blog.elmah.io/adding-cloudflare-turnstile-to-an-asp-net-core-website/</a></p>
<p>了解如何将 Cloudflare Turnstile(一种类似 reCAPTCHA 的机制，用于确定一个人是人类还是机器人)添加到您的 ASP.NET Core 网站。</p>
<h3 id="为什么不能在-c-实例方法中使用函数指针--如何创建-higty-系统-">为什么不能在 C# 实例方法中使用函数指针 -如何创建 Higty 系统-</h3>
<p><a href="https://www.higlabo.ai/blog/higty-tech/c-why-function-pointers-cant-be-used-on-instance-methods" target="_blank" rel="noopener nofollow">https://www.higlabo.ai/blog/higty-tech/c-why-function-pointers-cant-be-used-on-instance-methods</a></p>
<p>[为什么不能在 C# 中的实例方法上使用函数指针]( 为 <a href="https://minidump.net/c-why-function-pointers-cant-be-used-on-instance-methods-8a99fc99b040/" target="_blank" rel="noopener nofollow">https://minidump.net/c-why-function-pointers-cant-be-used-on-instance-methods-8a99fc99b040/</a>)) 翻译的文章。</p>
<h3 id="结构的相等和性能优化--如何创建一个-higty-系统-">结构的相等和性能优化 -如何创建一个 Higty 系统-</h3>
<p><a href="https://www.higlabo.ai/blog/higty-tech/performance-implications-of-default-struct-equality-in-c" target="_blank" rel="noopener nofollow">https://www.higlabo.ai/blog/higty-tech/performance-implications-of-default-struct-equality-in-c</a></p>
<p>[C# 中默认结构相等的性能影响 - 开发人员支持] <a href="https://devblogs.microsoft.com/premier-developer/performance-implications-of-default-struct-equality-in-c/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/premier-developer/performance-implications-of-default-struct-equality-in-c/</a> 的翻译</p>
<h3 id="检查-net-9-json-架构生成器的行为">检查 .NET 9 JSON 架构生成器的行为</h3>
<p><a href="https://zenn.dev/microsoft/articles/dotnet-generate-jsonschema" target="_blank" rel="noopener nofollow">https://zenn.dev/microsoft/articles/dotnet-generate-jsonschema</a></p>
<p>有关如何在 .NET 9 中使用 JsonSchemaExporter 生成 JSON 架构的文章。</p>
<h3 id="net-随机排序数组的方法是标准的-shuffle---qiita">[.NET] 随机排序数组的方法是标准的 [Shuffle] - Qiita</h3>
<p><a href="https://qiita.com/RyotaMurohoshi/items/97db69239228341837a9" target="_blank" rel="noopener nofollow">https://qiita.com/RyotaMurohoshi/items/97db69239228341837a9</a></p>
<p>对 .NET 8 中添加的用于随机数组的“Random.Shuffle”方法的说明。</p>
<h3 id="c-传递给-taskrun-的方法也应该是异步的最好">C#： 传递给 Task.Run() 的方法也应该是异步的(最好)</h3>
<p><a href="https://zenn.dev/ruccho/articles/2234aac99f8ac4" target="_blank" rel="noopener nofollow">https://zenn.dev/ruccho/articles/2234aac99f8ac4</a></p>
<p>说明如何更好地使 Task.Run 执行的方法(如果可能)以及原因。</p>
<h3 id="在-github-actions-中为-nuget-包创建来源证明">在 GitHub Actions 中为 NuGet 包创建来源证明</h3>
<p><a href="https://andrewlock.net/creating-provenance-attestations-for-nuget-packages-in-github-actions/" target="_blank" rel="noopener nofollow">https://andrewlock.net/creating-provenance-attestations-for-nuget-packages-in-github-actions/</a></p>
<p>了解如何使用 GitHub 的证明生成为 NuGet 包生成证明。</p>
<h3 id="使用-github-copilot-和搜索查找所需的-ide-功能---visual-studio-博客">使用 GitHub Copilot 和搜索查找所需的 IDE 功能 - Visual Studio 博客</h3>
<p><a href="https://devblogs.microsoft.com/visualstudio/find-the-ide-features-you-need-with-github-copilot-and-search/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/visualstudio/find-the-ide-features-you-need-with-github-copilot-and-search/</a></p>
<p>了解如何使用 GitHub Copilot 和搜索功能在 Visual Studio 中查找 IDE 功能。</p>
<h3 id="在-visual-studio-中引入自动文档注释生成---visual-studio-博客">在 Visual Studio 中引入自动文档注释生成 - Visual Studio 博客</h3>
<p><a href="https://devblogs.microsoft.com/visualstudio/introducing-automatic-documentation-comment-generation-in-visual-studio/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/visualstudio/introducing-automatic-documentation-comment-generation-in-visual-studio/</a></p>
<p>介绍 GitHub Copilot 在 Visual Studio 2022 17.14 预览版 2 中引入的自动文档注释生成功能。</p>
<h3 id="绘制-winforms-checkbox-的大字形-兼容原始绘图--对齐--自动定位---qiita">绘制 WinForms CheckBox 的大字形 (兼容原始绘图 + 对齐 + 自动定位) - Qiita</h3>
<p><a href="https://qiita.com/kazne/items/e73125fd00c6749b6628" target="_blank" rel="noopener nofollow">https://qiita.com/kazne/items/e73125fd00c6749b6628</a></p>
<p>了解如何在 Windows 窗体中呈现 CheckBox 的复选框部分以使其看起来更大。</p>
<h3 id="通过我们新的多账户支持提高您的-github-生产力---visual-studio-博客">通过我们新的多账户支持提高您的 GitHub 生产力！ - Visual Studio 博客</h3>
<p><a href="https://devblogs.microsoft.com/visualstudio/boost-your-github-productivity-with-our-new-multi-account-support/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/visualstudio/boost-your-github-productivity-with-our-new-multi-account-support/</a></p>
<p>了解 Visual Studio 中对多个 GitHub 帐户的支持。</p>
<h2 id="库存储库工具等">库、存储库、工具等</h2>
<h3 id="b-editorbeutl-跨平台视频编辑合成软件">b-editor/beutl： 跨平台视频编辑(合成)软件。</h3>
<p><a href="https://github.com/b-editor/beutl" target="_blank" rel="noopener nofollow">https://github.com/b-editor/beutl</a><br>
基于 Avalonia 的开源视频编辑软件，可在多个平台上运行。</p>
<ul>
<li><a href="https://zenn.dev/indigo_san/articles/d8e030686e" target="_blank" rel="noopener nofollow">个人开发视频编辑软件“Beutl”介绍</a></li>
</ul>
<h3 id="modelcontextprotocolcsharp-sdk-官方-c-sdk用于模型上下文协议服务器和客户端由-microsoft-维护">modelcontextprotocol/csharp-sdk： 官方 C# SDK，用于模型上下文协议服务器和客户端，由 Microsoft 维护</h3>
<p><a href="https://github.com/modelcontextprotocol/csharp-sdk?tab=readme-ov-file" target="_blank" rel="noopener nofollow">https://github.com/modelcontextprotocol/csharp-sdk?tab=readme-ov-file</a></p>
<p>一个 C# SDK，用于实现由 Microsoft 维护的模型上下文协议服务器和客户端。</p>
<h2 id="c-net-交流群">C# .NET 交流群</h2>
<p>相信大家在开发中经常会遇到一些性能问题，苦于没有有效的工具去发现性能瓶颈，或者是发现瓶颈以后不知道该如何优化。之前一直有读者朋友询问有没有技术交流群，但是由于各种原因一直都没创建，现在很高兴的在这里宣布，我创建了一个专门交流.NET性能优化经验的群组，主题包括但不限于：</p>
<ul>
<li>如何找到.NET性能瓶颈，如使用APM、dotnet tools等工具</li>
<li>.NET框架底层原理的实现，如垃圾回收器、JIT等等</li>
<li>如何编写高性能的.NET代码，哪些地方存在性能陷阱</li>
</ul>
<p>希望能有更多志同道合朋友加入，分享一些工作中遇到的.NET问题和宝贵的分析优化经验。<strong>目前一群已满，现在开放二群。</strong>可以加我vx，我拉你进群: <strong>ls1075</strong> 另外也创建了<strong>QQ Group</strong>: 687779078，欢迎大家加入。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.32789611456597223" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-31 20:25">2025-03-31 20:24</span>&nbsp;
<a href="https://www.cnblogs.com/InCerry">InCerry</a>&nbsp;
阅读(<span id="post_view_count">46</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18802896" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18802896);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18802896', targetLink: 'https://www.cnblogs.com/InCerry/p/-/dotnet_week_25_3_3', title: '.NET周刊【3月第3期 2025-03-16】' })">举报</a>
</div>
        