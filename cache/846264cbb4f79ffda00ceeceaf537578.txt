
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/listen80/p/19026582" title="发布于 2025-08-07 11:25">
    <span role="heading" aria-level="2">手撸一个Vue(看不懂可以举报)</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="手撸一个vue">手撸一个Vue</h1>
<h2 id="背景">背景</h2>
<p>vue是啥，有哪些基本功能，模板，script, style, 双向绑定一大堆，太多东西了，太难了，直接开始动手吧</p>
<h2 id="仓库">仓库</h2>
<p><a href="https://github.com/listen80/two-way-binding" target="_blank" rel="noopener nofollow">https://github.com/listen80/two-way-binding</a></p>
<h2 id="体验一下pc上使用">体验一下（pc上使用）</h2>
<p><a href="https://listen80.github.io/two-way-binding/public/" target="_blank" rel="noopener nofollow">https://listen80.github.io/two-way-binding/public/</a></p>
<h2 id="单文件">单文件</h2>
<p>通过ajax获取类似.vue .html .tpl文件</p>
<pre><code class="language-js">const parser = new DOMParser();

export default (template) =&gt; {
    const doc = parser.parseFromString(`&lt;body&gt;${template}&lt;/body&gt;`, 'text/html');
    const body = doc.querySelector('body')
    return {
        template: body.querySelector('template')?.content,
        script: body.querySelector('script'),
        style: body.querySelector('style'),
    }
};
</code></pre>
<h2 id="构建vue实例">构建vue实例</h2>
<ol>
<li>把script文本变成script运行</li>
<li>把原始data变成reactive的形式，增加依赖收集</li>
<li>解析template,扣出来指令，属性，方法，子组件等为了区分指令前缀使用@而不是v-</li>
<li>挂载style样式增加</li>
<li>替换当前实例挂载的元素，目前为止所有的元素（html, script, style）都已经使用上来了</li>
</ol>
<pre><code class="language-js">  // ...上面还有
  /**
   * 创建组件，加载组件脚本、样式和模板，并进行渲染
   */
  create() {
    // 从配置选项中解构出目标元素和属性
    const { el, props = {} } = this.options
    // 从组件属性中解构出脚本、模板和样式
    const { script, template, style } = this.componentProperties
    // 1. 获取的ES6代码是模
    // 获取脚本标签中的 ES6 模块代码
    const es6ModuleCode = script.textContent;

    // 2. 将代码转为blob URL（模拟模块文件）
    // 创建一个包含 ES6 模块代码的 Blob 对象
    const blob = new Blob([es6ModuleCode], { type: 'text/javascript' });
    // 为 Blob 对象创建一个 URL
    const url = URL.createObjectURL(blob);

    // 3. 用动态import()加载该模块
    // 动态导入模块
    import(url).then(module =&gt; {
      // 将样式添加到文档中
      document.head.append(style)
      // console.log(module.default); // 输出 'ES6 Module'
      // 获取模块中的数据，若不存在则使用空对象
      const data = module.default.data || {};
      // 获取模块中的方法，若不存在则使用空对象
      const methods = module.default.methods || {};
      // 获取模块中的子组件，若不存在则使用空对象
      const components = module.default.components || {};
      // 将属性和数据合并到当前实例
      Object.assign(this, props, data);
      // 对当前实例进行数据观测
      observe(this);
      // this.data = data
      // 编译模板并渲染
      compile(template, this, methods, components);
      // 终于明白这里为什么是replace
      // 用模板替换目标元素
      el.replaceWith(template)
    }).catch(err =&gt; {
      // 捕获模块加载失败的错误并打印
      console.error('加载模块失败', err);
    });
  }
</code></pre>
<h2 id="总结">总结</h2>
<p>就这么结束了，是不是很简单，当然其中的细节很多，上文主要是描述核心思想点<br>
本demo是没有使用虚拟dom,是dom跟数据直接绑定的，跟进vue3.6 vapor<br>
水平有限，本文只是为了学习分享简单的示例，目的是为了了解运作机制，如果有纰漏请联系我</p>

</div>
<div id="MySignature" role="contentinfo">
    <p>本文来自博客园，作者：<a href="https://www.cnblogs.com/listen80/" target="_blank">彩虹刀法</a>，转载请注明原文链接：<a href="https://www.cnblogs.com/listen80/p/19026582" target="_blank">https://www.cnblogs.com/listen80/p/19026582</a></p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.0020833333333333333" data-date-updated="2025-08-07 11:28">2025-08-07 11:25</span>&nbsp;
<a href="https://www.cnblogs.com/listen80">彩虹刀法</a>&nbsp;
阅读(<span id="post_view_count">366</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19026582);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19026582', targetLink: 'https://www.cnblogs.com/listen80/p/19026582', title: '手撸一个Vue(看不懂可以举报)' })">举报</a>
</div>
        