
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/MeteorSeed/p/18996544" title="发布于 2025-07-23 10:00">
    <span role="heading" aria-level="2">jsonb 为什么会影响 System.Text.Json</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>　　我在将一个属性映射到 jsonb 类型时遇到这样一个问题 —— 我有一个抽象基类 BaseClass 和一个派生类 DerivedClass：</p>
<div class="cnblogs_code">
<pre>[JsonDerivedType(<span style="color: rgba(0, 0, 255, 1)">typeof</span>(DerivedClass), typeDiscriminator: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">derived</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)]
</span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> BaseClass
{
    </span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> BaseClass() { }
}
</span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> DerivedClass : BaseClass
{
    ....
}</span></pre>
</div>
<p>　　当持久化数据后，我可能得到这样的数据：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">{
  </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">$type</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">derived</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
  ...
}<br></span></pre>
</div>
<p>　　或</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">{
  </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">value</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 128, 1)">131121</span><span style="color: rgba(0, 0, 0, 1)">,
  </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">$type</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">derived</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
  ...
}</span></pre>
</div>
<p>　　第一个 json 中，类型鉴别器（$type）是 json 里的第一个属性；而第二个 json 字符串则不是这种情况。当我执行 Deserialize 方法时，第二个 json 字符串会抛出异常。</p>
<div class="cnblogs_code">
<pre>System.Text.Json.JsonException : The metadata property <span style="color: rgba(0, 0, 255, 1)">is</span> either not supported by the type or <span style="color: rgba(0, 0, 255, 1)">is</span> not the first property <span style="color: rgba(0, 0, 255, 1)">in</span> the deserialized JSON <span style="color: rgba(0, 0, 255, 1)">object</span>. Path: $.$type | LineNumber: <span style="color: rgba(128, 0, 128, 1)">0</span> | BytePositionInLine: <span style="color: rgba(128, 0, 128, 1)">47</span>.</pre>
</div>
<h1><span><span>问题原因</span></span></h1>
<h2><span><span>System.Text.Json 的多态反序列化限制</span></span></h2>
<p><span>　　当使用 [JsonDerivedType] 时，System.Text.Json 要求类型鉴别器（如 $type）必须是 json 中的第一个属性。如果鉴别器不在首位，反序列化会失败并抛出异常。</span></p>
<h2><span><span>PostgreSQL 的存储特性</span></span></h2>
<p><span>　　- <strong>json</strong>：以原始文本形式存储，完全保留输入的 json 字符串格式（包括空格、重复键、顺序等）。</span></p>
<p><span>　　- <strong>jsonb</strong>：以二进制形式存储，会对 json 进行解析和规范化（例如去重键、忽略多余空格、重新排序键）。</span></p>
<p><span>　　jsonb 类型会自动对 json 属性进行排序，导致存储后的属性顺序与序列化时不同。例如：{"$type":"derived","value": xxx } 存储到 jsonb 后可能变为：{"<span data-pm-slice="1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;p&quot;,&quot;attributes&quot;:{&quot;style&quot;:&quot;text-align: left;&quot;},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]">value<span>": xxx ,"$type":"derived"} 这种顺序变化会引发 System.Text.Json 的异常。</span></span></span></p>
<h1><span><span>解决方案</span></span></h1>
<p><span>　　其实微软在官方文档中已经给出了说明：</span></p>
<p><span><img src="https://img2024.cnblogs.com/blog/270073/202507/270073-20250721204010189-462391109.png" alt="" style="display: block; margin-left: auto; margin-right: auto"></span></p>
<p><span>　　通过设置<span>&nbsp;AllowOutOfOrderMetadataProperties&nbsp;<span>属性为 true，可解决此问题：</span></span></span></p>
<div class="cnblogs_code">
<pre>JsonSerializerOptions options = <span style="color: rgba(0, 0, 255, 1)">new</span>() { AllowOutOfOrderMetadataProperties = <span style="color: rgba(0, 0, 255, 1)">true</span> };</pre>
</div>
<p>　　如果您没有找到该属性，请升级到高版本。</p>
<p><img src="https://img2024.cnblogs.com/blog/270073/202507/270073-20250721204103673-1712864078.webp" alt="" style="display: block; margin-left: auto; margin-right: auto"></p>
<p>&nbsp;</p>
</div>
<div id="MySignature" role="contentinfo">
    <blockquote>
<p><strong>作者：</strong><a href="http://www.cnblogs.com/MeteorSeed">MeteorSeed</a></p>
<p><strong>我希望您喜欢这篇博文，并一如既往地感谢您阅读并与朋友和同事分享我的博文。</strong></p>
<p><strong>转载请注明出处。</strong></p>
</blockquote>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-23 10:00">2025-07-23 10:00</span>&nbsp;
<a href="https://www.cnblogs.com/MeteorSeed">MeteorSeed</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18996544);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18996544', targetLink: 'https://www.cnblogs.com/MeteorSeed/p/18996544', title: 'jsonb 为什么会影响 System.Text.Json' })">举报</a>
</div>
        