
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/noear/p/18853941" title="发布于 2025-04-29 16:28">
    <span role="heading" aria-level="2">qwen3 惊喜发布，用 ollama + solon ai (java) 尝个鲜</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        qwen3 惊喜发布了，帅！我们用 ollama 和 solon ai (java) 也来尝个鲜。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>qwen3 惊喜发布了，帅！我们用 ollama 和 solon ai (java) 也来尝个鲜。</p>
<h3 id="1先用-ollama-拉取模型">1、先用 ollama 拉取模型</h3>
<p>听说，在个人电脑上用 4b 的参数，效果就很好了。</p>
<pre><code>ollama run qwen3:4b
</code></pre>
<h3 id="2试试hello-qwen3">2、试试：Hello qwen3</h3>
<p>用 solon-initializr ( <a href="https://solon.noear.org/start/" target="_blank" rel="noopener nofollow">https://solon.noear.org/start/</a> )，生成一个 solon-ai 模板项目。之后:</p>
<ul>
<li>在应用属性里添加配置（app.yml）</li>
</ul>
<pre><code class="language-yaml">solon.ai.chat:
  qwen3:
    apiUrl: "http://127.0.0.1:11434/api/chat" # 使用完整地址（而不是 api_base）
    provider: "ollama"  # ollama 是有自己的专有接口格式，通过配置 provider 可识别方言
    model: "qwen3:4b"
</code></pre>
<ul>
<li>用配置器类构建通用聊天模型</li>
</ul>
<pre><code class="language-java">@Configuration
public class DemoConfig {
    @Bean
    public ChatModel chatModel(@Inject("${solon.ai.chat.qwen3}") ChatConfig config) {
        return ChatModel.of(config).build();
    }
}
</code></pre>
<ul>
<li>添加测试用的控制器</li>
</ul>
<pre><code class="language-java">@Controller
public class DemoController {
    @Inject
    ChatModel chatModel;

    @Mapping("hello")
    public String hello(String message) throws IOException {
        return chatModel.prompt(message).call().getMessage().getContent();
    }
}
</code></pre>
<ul>
<li>测试一下</li>
</ul>
<p>启动项目。打开浏览器地址：<code>http://localhost:8080/hello?message=hello</code>。效果良好：</p>
<img src="https://teamx.noear.org/img/de4f4652f2b04effbc8213303bb82ccc.png" width="500">
<h3 id="3尝试把输出改成-sse方便打字效果的聊天窗口开发">3、尝试把输出改成 sse，方便打字效果的聊天窗口开发</h3>
<pre><code class="language-java">@Controller
public class DemoController {
    @Inject
    ChatModel chatModel;

    @Produces(MimeType.TEXT_EVENT_STREAM_UTF8_VALUE) //这个很重要，申明用 sse 格式渲染
    @Mapping("hello")
    public Flux&lt;String&gt; hello(String message) throws IOException {
        return Flux.from(chatModel.prompt(message).stream())
                .filter(resp -&gt; resp.hasChoices())
                .map(resp -&gt; resp.getMessage().getContent());
    }
}
</code></pre>
<ul>
<li>测试一下</li>
</ul>
<p>启动项目。再次打开浏览器地址：<code>http://localhost:8080/hello?message=hello</code>。效果良好：</p>
<img src="https://teamx.noear.org/img/6a30182914834a8cafcf5a9aa49609f1.png" width="500">
<h3 id="4现在开始-rag以-联网搜索-作为知识库">4、现在开始 RAG，以 “联网搜索” 作为知识库</h3>
<p>这里把“联网搜索”，做为一个知识库使用（内部是动态搜索的）。用它作为 RAG 的外部检索支持。</p>
<ul>
<li>应用属性加一块配置</li>
</ul>
<pre><code class="language-yaml">solon.ai.chat:
  qwen3:
    apiUrl: "http://127.0.0.1:11434/api/chat" # 使用完整地址（而不是 api_base）
    provider: "ollama"  # ollama 是有自己的专有接口格式，通过配置 provider 可识别方言
    model: "qwen3:4b"
    
solon.ai.repo:
  websearch:
    apiUrl: "https://api.bochaai.com/v1/web-search" # 使用完整地址（而不是 api_base）
    apiKey: "sk-demo..."
</code></pre>
<ul>
<li>配置器类也调整下</li>
</ul>
<pre><code class="language-java">@Configuration
public class DemoConfig {
    @Bean
    public ChatModel chatModel(@Inject("${solon.ai.chat.qwen3}") ChatConfig config) {
        return ChatModel.of(config).build();
    }
    
    @Bean
    public Repository repository(@Inject("${solon.ai.repo.websearch}") AiConfig config) {
        return new WebSearchRepository(null, config);
    }
}
</code></pre>
<ul>
<li>再改改控制器（输出重新写回简单的方式，不然不好截图）</li>
</ul>
<pre><code class="language-java">@Controller
public class DemoController {
    @Inject
    ChatModel chatModel;

    @Inject
    Repository repository;

    @Mapping("hello")
    public String hello(String message) throws IOException {
        //检索
        List&lt;Document&gt; context = repository.search(new QueryCondition(message).limit(4));

        //消息增强
        ChatMessage chatMessage = UserMessage.augment(message, context);

        //提交大模型并简单返回（不然，截图不好截）
        return chatModel.prompt(chatMessage).call().getMessage().getContent();
    }
}
</code></pre>
<ul>
<li>测试一下</li>
</ul>
<p>启动项目。打开浏览器地址：<code>http://localhost:8080/hello?message=solon%20%E6%98%AF%E8%B0%81%E5%BC%80%E5%8F%91%E7%9A%84%EF%BC%9F</code>。效果良好：</p>
<img src="https://teamx.noear.org/img/dedc8ee5c5844effaf363b0ea2546e41.png" width="500">
<h3 id="5再试个-tool-call即-function-call">5、再试个 Tool Call（即 Function Call）</h3>
<p>修改下刚才的配置器，加个模型的默认工具。</p>
<pre><code class="language-java">@Configuration
public class DemoConfig {
    @Bean
    public ChatModel chatModel(@Inject("${solon.ai.chat.qwen3}") ChatConfig config) {
        return ChatModel.of(config)
                .defaultToolsAdd(new Tools())
                .build();
    }

    public static class Tools {
        @ToolMapping(description = "获取指定城市的天气情况")
        public String get_weather(@ToolParam(description = "根据用户提到的地点推测城市") String location) {
            return "晴，24度";
        }
    }
}
</code></pre>
<ul>
<li>测试一下</li>
</ul>
<p>启动项目。再次打开浏览器地址：<code>http://localhost:8080/hello?message=杭州今天的天气如何？</code>。效果良好：</p>
<img src="https://teamx.noear.org/img/7fa41920d764450ca53fccfe52481afd.png" width="500">

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.7764369402326389" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-29 16:28">2025-04-29 16:28</span>&nbsp;
<a href="https://www.cnblogs.com/noear">带刺的坐椅</a>&nbsp;
阅读(<span id="post_view_count">201</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18853941);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18853941', targetLink: 'https://www.cnblogs.com/noear/p/18853941', title: 'qwen3 惊喜发布，用 ollama + solon ai (java) 尝个鲜' })">举报</a>
</div>
        