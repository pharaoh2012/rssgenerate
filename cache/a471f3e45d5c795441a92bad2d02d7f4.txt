
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/huangmingji/p/18776994" title="发布于 2025-03-17 15:41">
    <span role="heading" aria-level="2">Semantic Kernel人工智能：1、从DeepSeek API调用到Semantic Kernel集成：深度解析聊天机器人开发全链路</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="引言ai时代下的聊天机器人开发范式演进">引言：AI时代下的聊天机器人开发范式演进</h1>
<p>在生成式AI技术爆发的当下，基于大语言模型（LLM）的聊天机器人开发已形成标准化技术链路。本文将结合DeepSeek API与微软Semantic Kernel框架，以C#语言实战演示从基础API调用到高级框架集成的完整开发流程。</p>
<h1 id="环境准备与基础配置">环境准备与基础配置</h1>
<ul>
<li>.NET 9 SDK</li>
<li>Visual Studio 2022或VSCode</li>
<li>DeepSeek API密钥  <a href="https://platform.deepseek.com/usage" target="_blank" rel="noopener nofollow">官网申请</a></li>
</ul>
<h1 id="deepseek-api基础调用">DeepSeek API基础调用</h1>
<p>DeepSeek API的Endpoint地址为：<code>https://api.deepseek.com/chat/completions</code>，相关文档可查看<a href="https://api-docs.deepseek.com/zh-cn/api/create-chat-completion" target="_blank" rel="noopener nofollow">官方文档</a></p>
<ol>
<li>单轮对话实现<br>
<a href="https://github.com/huangmingji/DeepSeek.ApiHttpClient/blob/main/src/DeepSeek.ApiHttpClient/DeepSeekClient.cs" target="_blank" rel="noopener nofollow">代码示例</a></li>
</ol>
<pre><code class="language-csharp">public async Task&lt;ResponseBody&gt; GetChatMessageContentsAsync(CancellationToken cancellationToken = new CancellationToken())
{
    var client = new HttpClient();
    var request = new HttpRequestMessage(HttpMethod.Post, _builder.Endpoint);
    request.Headers.Add("Accept", "application/json");
    request.Headers.Add("Authorization", $"Bearer {_builder.ApiKey}");

    _body.Stream = false;
    var content = new StringContent(_body.SerializeObject(), null, "application/json");
    request.Content = content;
    var response = await client.SendAsync(request, cancellationToken);
    var responseBody = await response.Content.ReadAsStringAsync(cancellationToken);
    return JsonConvert.DeserializeObject&lt;ResponseBody&gt;(responseBody) ?? new ResponseBody();
}
</code></pre>
<ol start="2">
<li>流式响应处理<br>
<a href="https://github.com/huangmingji/DeepSeek.ApiHttpClient/blob/main/src/DeepSeek.ApiHttpClient/DeepSeekClient.cs" target="_blank" rel="noopener nofollow">代码示例</a></li>
</ol>
<pre><code class="language-csharp">public async IAsyncEnumerable&lt;ResponseBody&gt; GetStreamingChatMessageContentsAsync([EnumeratorCancellation] CancellationToken cancellationToken = new CancellationToken())
{
    var client = new HttpClient();
    var request = new HttpRequestMessage(HttpMethod.Post, _builder.Endpoint);
    request.Headers.Add("Accept", "application/json");
    request.Headers.Add("Authorization", $"Bearer {_builder.ApiKey}");
    
    _body.Stream = true;
    var content = new StringContent(_body.SerializeObject(), null, "application/json");
    request.Content = content;
    var response = await client.SendAsync(request, cancellationToken);
    var stream = await response.Content.ReadAsStreamAsync(cancellationToken);
    var reader = new StreamReader(stream);
    while (!reader.EndOfStream)
    {
        var line = await reader.ReadLineAsync(cancellationToken);
        if (string.IsNullOrEmpty(line) || line.StartsWith(":")) continue;
        if (line.StartsWith("data: "))
        {
            var jsonData = line["data: ".Length ..];
            if (jsonData == "[DONE]") break;
            yield return JsonConvert.DeserializeObject&lt;ResponseBody&gt;(jsonData) ?? new ResponseBody();
        }
    }
}
</code></pre>
<h1 id="semantic-kernel框架集成">Semantic Kernel框架集成</h1>
<p><a href="https://learn.microsoft.com/zh-cn/semantic-kernel/overview/" target="_blank" rel="noopener nofollow">Semantic Kernel</a>是一种轻型开源开发工具包，可用于轻松生成 AI 代理并将最新的 AI 模型集成到 C#、Python 或 Java 代码库中。 它充当一个高效的中间件，可实现企业级解决方案的快速交付。<br>
DeepSeek API与Semantic Kernel框架集成，可快速实现基于大语言模型的聊天机器人开发。由于DeepSeek API与OpenAI API的兼容性，因此DeepSeek API与Semantic Kernel框架的集成非常简单。只需使用OpenAI的连接器，即可快速实现DeepSeek API与Semantic Kernel框架的集成。</p>
<ol>
<li>NuGet包安装</li>
</ol>
<pre><code class="language-bash">dotnet add package Microsoft.SemanticKernel
</code></pre>
<ol start="2">
<li>Semantic Kernel初始化</li>
</ol>
<pre><code class="language-csharp">var openAIClientCredential = new ApiKeyCredential(apiKey);
var openAIClientOption = new OpenAIClientOptions
{
    Endpoint = new Uri("https://api.deepseek.com"),

};
var builder = Kernel.CreateBuilder()
    .AddOpenAIChatCompletion(modelId, new OpenAIClient(openAIClientCredential, openAIClientOption));

var kernel = builder.Build();
</code></pre>
<ol start="3">
<li>聊天机器人开发</li>
</ol>
<pre><code class="language-csharp">var chatCompletionService = kernel.GetRequiredService&lt;IChatCompletionService&gt;();

Console.WriteLine("😀User &gt;&gt; "+ chatHistory.Last().Content);
var result = chatCompletionService.GetStreamingChatMessageContentsAsync(
    chatHistory
);
Console.Write("👨Assistant &gt;&gt; ");
await foreach (var item in result)
{
    Thread.Sleep(200);
    Console.Write(item.Content);
}
</code></pre>
<p><a href="https://github.com/huangmingji/DeepSeek.ApiHttpClient/blob/main/src/DeepSeek.ApiHttpClient.Demo/Program.cs" target="_blank" rel="noopener nofollow">代码示例</a></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.34442684395717593" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-17 16:05">2025-03-17 15:41</span>&nbsp;
<a href="https://www.cnblogs.com/huangmingji">黄明基</a>&nbsp;
阅读(<span id="post_view_count">170</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18776994" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18776994);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18776994', targetLink: 'https://www.cnblogs.com/huangmingji/p/18776994', title: 'Semantic Kernel人工智能：1、从DeepSeek API调用到Semantic Kernel集成：深度解析聊天机器人开发全链路' })">举报</a>
</div>
        