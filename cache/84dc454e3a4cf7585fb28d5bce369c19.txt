
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/InCerry/p/-/dotnet_week_25_7_2" title="发布于 2025-07-19 11:26">
    <span role="heading" aria-level="2">.NET周刊【7月第2期 2025-07-13】</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="国内文章">国内文章</h2>
<h3 id="net-下高性能-socket-的方案">.Net 下高性能 Socket 的方案</h3>
<p><a href="https://zhuanlan.zhihu.com/p/1924520585976849438" target="_blank" rel="noopener nofollow">https://zhuanlan.zhihu.com/p/1924520585976849438</a></p>
<p>简单介绍Socket的数据组成。详细介绍.Net高性能的类型：Span，Ros，Memory和ReadOnlyMemory，以及System.IO.Pipelines这个类库。最后给出高性能Socket写入代码，并附带Benchmark测试。</p>
<h3 id="使用-openauthnet-快速搭建-net-企业级权限工作流系统">使用 OpenAuth.Net 快速搭建 .NET 企业级权限工作流系统</h3>
<p><a href="https://www.cnblogs.com/Can-daydayup/p/18973829" target="_blank">https://www.cnblogs.com/Can-daydayup/p/18973829</a></p>
<p>本文介绍了OpenAuth.Net，一个基于.NET的开源权限管理与工作流系统，适合企业级应用开发。它结合了多种现代技术，具有多租户支持、规范代码风格和简洁的代码生成等特点。OpenAuth.Net支持可视化的表单和流程设计，并兼容多种数据库和ORM框架。文章还提供了环境安装及数据库初始化的详细步骤，说明了如何使用前端和后端代码。链接到项目官网和开源地址，便于读者获取更多资源与文档。</p>
<h3 id="net-9--react-开发的企业级后台权限管理系统文档齐全轻松上手">.NET 9 + React 开发的企业级后台权限管理系统，文档齐全，轻松上手</h3>
<p><a href="https://www.cnblogs.com/1312mn/p/18974282" target="_blank">https://www.cnblogs.com/1312mn/p/18974282</a></p>
<p>风汐管理系统是一个开源的RBAC权限管理解决方案，使用.NET 9和React 18构建。该系统独立设计，满足细粒度权限需求，支持多租户架构，实现数据隔离。其功能包括角色管理、权限管理、菜单管理、日志管理和系统监控，具备简洁高效的用户界面和模块化架构。系统采用前沿技术栈，确保良好的扩展性和可维护性，并具备高可读性代码结构。技术选型涵盖PostgreSQL、Redis以及多种辅助工具。整体设计注重安全性与性能，适合个人和企业用户使用。</p>
<h3 id="一款开源免费通用的-wpf-主题控件包">一款开源免费、通用的 WPF 主题控件包</h3>
<p><a href="https://www.cnblogs.com/Can-daydayup/p/18971544" target="_blank">https://www.cnblogs.com/Can-daydayup/p/18971544</a></p>
<p>Rubyer WPF 是一款开源的 WPF 主题控件包，支持中英文切换和亮暗模式。开发者可以通过参数配置轻松改变整体主题样式。该控件包包括多种主题控件，如按钮、表格和对话框等，适用于 .NET Framework 4.6、.NET Core 3.1、.NET 6 和 .NET 8。本文介绍了如何在 WPF 项目中安装和引入 Rubyer，并提供运行效果展示。项目源码已在 Gitee 上发布，鼓励人们参与并给予支持。该项目被收录于优秀的 C#/.NET 项目列表中，帮助开发者获取最新的动态和最佳实践。</p>
<h3 id="我是如何实现在线客服系统的极致稳定性与安全性的">我是如何实现在线客服系统的极致稳定性与安全性的</h3>
<p><a href="https://www.cnblogs.com/sheng_chao/p/18974643" target="_blank">https://www.cnblogs.com/sheng_chao/p/18974643</a></p>
<p>本文强调稳定性和安全性在在线客服系统中的重要性。作者分享了客服系统的架构设计，强调模块化和私有化部署的必要性，以适应不同客户需求。系统核心分为多个服务模块，通过清晰的通信机制支持高并发、低延迟的实时交互。提供一键安装脚本简化部署过程，适应多种运行环境。同时，系统还实现了多租户支持和数据安全设计，确保聊天数据的隐私和可控性。文章旨在为开发实时在线系统的工程师提供参考。</p>
<h3 id="c脚本化roslyn如何在c脚本中引入nuget包">C#脚本化(Roslyn)：如何在C#脚本中引入nuget包</h3>
<p><a href="https://www.cnblogs.com/yangtb/p/18881071" target="_blank">https://www.cnblogs.com/yangtb/p/18881071</a></p>
<p>本文讨论如何在C#脚本编辑器中使用Roslyn引用nuget包。首先，简介了获取nuget包及其依赖的方法，包括直接下载和解压nuget包，以及基于创建空C#项目的方法。通过创建一个项目，使用PackageReference标签引用所需包，确保输出程序集和资源文件。然后，利用dotnet编译生成所需文件。最后，示例代码验证了该方法的有效性，展示了如何通过Roslyn运行使用Newtonsoft.Json的C#脚本。</p>
<h3 id="c源生成器让你的代码飞起来的黑科技">C#源生成器：让你的代码飞起来的黑科技</h3>
<p><a href="https://www.cnblogs.com/token-ai/p/18979978" target="_blank">https://www.cnblogs.com/token-ai/p/18979978</a></p>
<p>本文介绍了C#源生成器的概念与优势。源生成器在编译时自动生成高质量的代码，显著提升性能，尤其在序列化场景中，性能提升高达117倍。传统反射方法在运行时分析类型结构，开销较大，而源生成器在编译前完成这些工作，优化了内存占用和效率。文中还展示了一个简单的源生成器示例，包括项目配置与代码实现，适合开发者进行实际操作。读者通过本文可以全面理解源生成器的使用与优势。</p>
<h3 id="原创c高级gdi实战从零开发一个流程图第06章繁琐没扩展性抽象抽象">[原创]《C#高级GDI+实战：从零开发一个流程图》第06章：繁琐？没扩展性？抽象！抽象！</h3>
<p><a href="https://www.cnblogs.com/lesliexin/p/18972184" target="_blank">https://www.cnblogs.com/lesliexin/p/18972184</a></p>
<p>本文主要讨论了如何通过抽象来改进形状的实现，特别是在C#中定义形状基类。作者指出，增加新形状会导致代码冗余和复杂性，因此提出了使用抽象类来提升可维护性和扩展性。首先创建了一个形状基类，包含通用属性，如ID和矩形区域。然后通过抽象方法Draw()让派生类具体实现绘制逻辑。此外，定义了虚方法GetCenterPoint()来统一获取形状的中心点。文章强调了使用抽象类的必要性，以便对未来的功能扩展提供基础支持。完整代码可供读者参考。</p>
<h3 id="我在厂里搞wine的日子">我在厂里搞wine的日子</h3>
<p><a href="https://www.cnblogs.com/yangtb/p/18973171" target="_blank">https://www.cnblogs.com/yangtb/p/18973171</a></p>
<p>本文记录了作者在使用Wine时遇到的希沃白板汉字识别卡的问题，主要关注COM组件和注册表缺失引起的错误。作者通过编写Demo代码进行调试，并分析了Wine日志以寻找问题根源。最终，作者建议通过从Windows系统复制缺失的注册表项来解决问题。文章提供技术细节，但对新手可能有一定难度。</p>
<h3 id="c-avalonia动态加载xaml和cs实例">C# Avalonia动态加载xaml和cs实例</h3>
<p><a href="https://www.cnblogs.com/dalgleish/p/18974674" target="_blank">https://www.cnblogs.com/dalgleish/p/18974674</a></p>
<p>这篇文章介绍了AvaloniaUI中的非编译XAML的使用。它展示了一个简单的窗口，包含一个按钮和动态加载的内容。文章提供了XAML和C#代码示例，说明如何在Avalonia框架中实现动态内容加载及支持多个.cs文件编译。该扩展允许开发者通过简单的事件处理机制来添加控件，并利用XAML绑定机制展示数据。整体内容具有技术深度，实际应用性强，并且逻辑清晰，便于理解。</p>
<h3 id="net-ai-模板">.NET AI 模板</h3>
<p><a href="https://www.cnblogs.com/powertoolsteam/p/18970200" target="_blank">https://www.cnblogs.com/powertoolsteam/p/18970200</a></p>
<p>随着人工智能技术的发展，AI应用开发成为.NET开发者的必备技能。微软推出的.NET AI模板预览版为开发者提供了构建智能聊天应用的工具和指南。本文介绍了如何安装和使用该模板，包括项目结构、核心功能和跨平台支持。模板允许自定义聊天界面、与Azure集成，并支持多数据源处理。通过简单配置，开发者可以快速上手AI开发，降低学习曲线，灵活扩展功能，提升开发效率。此模板为现代开发者提供了便捷的开发体验。</p>
<h3 id="通过-net-aspire-使用本地-ai-模型">通过 .NET Aspire 使用本地 AI 模型</h3>
<p><a href="https://www.cnblogs.com/powertoolsteam/p/18976279" target="_blank">https://www.cnblogs.com/powertoolsteam/p/18976279</a></p>
<p>本文介绍了如何在本地环境使用 .NET Aspire 框架结合 Ollama 来运行和测试 AI 模型。使用本地模型可以节省云资源，迭代速度更快，同时提高隐私保护。文章详细讲解了Ollama的安装、配置和使用。通过命令行安装Ollama集成包，并介绍了如何在 Program.cs 文件中配置Ollama托管集成。文章还解释了如何添加具体的AI模型以及如何与模型交互，确保模型在应用启动时下载完成，并方便与云服务切换。</p>
<h3 id="多agent协作入门群组聊天-agentgroupchat">多Agent协作入门：群组聊天-AgentGroupChat</h3>
<p><a href="https://www.cnblogs.com/edisontalk/p/-/quick-start-agent-orchestration-agentgroupchat" target="_blank">https://www.cnblogs.com/edisontalk/p/-/quick-start-agent-orchestration-agentgroupchat</a></p>
<p>本文介绍了如何利用Semantic Kernel中的AgentGroupChat对象创建多代理群组对话。作者以Reviewer和Writer为例，展示了两种代理如何协作审核和优化文案。文中包括快速入门案例，涉及.NET控制台项目的设置和配置，使用了特定的NuGet包。此外，还提供了API配置示例，以便与SiliconCloud的Qwen2.5-32B-Instruct模型交互。整体内容重点在于技术实现，适合对多代理协作有兴趣的开发者。</p>
<h3 id="ef-core框架是如何识别实体类的属性和主键的">【EF Core】框架是如何识别实体类的属性和主键的</h3>
<p><a href="https://www.cnblogs.com/tcjiaan/p/18980412" target="_blank">https://www.cnblogs.com/tcjiaan/p/18980412</a></p>
<p>本文探讨了 EF Core 如何通过约定机制识别实体属性并映射到数据库。作者解释了 DbContext 如何通过默认行为自动创建模型，并介绍了多个约定接口，如 IConvention 和 IPropertyAddedConvention。这些接口函数类似于事件回调，能在模型变更时被调用，确保模型结构始终更新。最后，篇幅提到当 EF Core 初始化时添加预置约定集合，由 ProviderConventionSetBuilder 类负责创建，增强了 EF 的灵活性和可扩展性。</p>
<h3 id="vkproxy新增一些功能">VKProxy新增一些功能</h3>
<p><a href="https://www.cnblogs.com/fs7744/p/18975208" target="_blank">https://www.cnblogs.com/fs7744/p/18975208</a></p>
<p>VKProxy是一款使用C#开发的基于Kestrel的L4/L7代理，新增了会话亲和性、禁止HTTP、静态内容和简单WAF功能。会话亲和性机制将请求序列绑定到相同目标以提高性能，支持HashCookie、ArrCookie、Cookie和CustomHeader四种策略，通过请求中的亲和性键管理会话。用户能在集群元数据中设置会话亲和性选项，通过配置项控制Cookie属性，确保更高效和安全的会话管理。</p>
<h3 id="c-avalonia-03---layoutpanels---simpleinkcanvas">C# Avalonia 03 - LayoutPanels - SimpleInkCanvas</h3>
<p><a href="https://www.cnblogs.com/dalgleish/p/18978564" target="_blank">https://www.cnblogs.com/dalgleish/p/18978564</a></p>
<p>本文介绍了如何在C# Avalonia中扩展InkCanvas类，以兼容Canvas的所有功能。首先，文章指出如何通过Content属性定义自定义内容区域，以及Render方法不能重写的限制。接着，作者实现了InkCanvas类，涉及InkEditingMode、InkStroke等枚举及类，并示例了如何在Render方法中绘制笔画和选框。该扩展为图形界面开发提供了实用工具，适合需要实现手写或绘图功能的应用。</p>
<h3 id="patch请求rest-api之mydeltasnet">PATCH请求REST API之MyDeltas.net</h3>
<p><a href="https://www.cnblogs.com/xiangji/p/18979384" target="_blank">https://www.cnblogs.com/xiangji/p/18979384</a></p>
<p>本文介绍了PATCH请求在REST API中的使用，特别是其实现方案如JSON Patch和MyDeltas.net。PATCH用于部分更新，提供更精准的语义。文中详细对比了MyDeltas和JSON Patch，强调MyDeltas生成的JSON更简洁，且更适合简单的实体类。MyDeltas支持系统的序列化与反序列化，提供了灵活的API，用于增量修改。文章讨论了如何通过nuget安装和使用MyDeltas的具体步骤，使得变更操作简单高效。整体上，文章逻辑清晰，内容具有实践意义。</p>
<h3 id="留个vkproxy性能测试记录">留个VKProxy性能测试记录</h3>
<p><a href="https://www.cnblogs.com/fs7744/p/18978275" target="_blank">https://www.cnblogs.com/fs7744/p/18978275</a></p>
<p>该文章讨论了OpenTelemetry对性能测试的影响，并计划先进行简单的性能测试。作者关注OpenTelemetry对Go语言的性能影响，认为可能会拖慢超过30%的性能，尽管持谨慎态度。文章提到使用C#的ASP.NET Core创建一个天气预报API控制器，展示了基本的代码实现和代理配置，强调了简单有效的基准项目。整体内容清晰地展现了性能测试的目的和实现方式。</p>
<h2 id="主题">主题</h2>
<h3 id="net-10-预览版-6-现已推出---net-博客">.NET 10 预览版 6 现已推出！ - .NET 博客</h3>
<p><a href="https://devblogs.microsoft.com/dotnet/dotnet-10-preview-6/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/dotnet/dotnet-10-preview-6/</a></p>
<p>.NET 10 预览版 6 现已推出。</p>
<ul>
<li>
<p>BCL</p>
<ul>
<li>拒绝重复 JSON 属性的选项</li>
<li>严格的 JSON 序列化选项</li>
<li>后量子密码学 (POC)</li>
</ul>
</li>
<li>
<p>运行</p>
<ul>
<li>改进了值类型参数的代码生成
<ul>
<li>改进的循环反转</li>
</ul>
</li>
</ul>
</li>
<li>
<p>开发软件</p>
<ul>
<li>特定于平台的 .NET 工具</li>
<li>一次性工具执行</li>
<li>“dnx”工具执行脚本</li>
<li>用于 CLI 自省的 '--cli-schema' 选项</li>
<li>基于文件的应用程序改进</li>
</ul>
</li>
<li>
<p>C#</p>
<ul>
<li>没有新功能</li>
</ul>
</li>
<li>
<p>F#</p>
<ul>
<li>没有新功能</li>
</ul>
</li>
<li>
<p>ASP.NET Core 和 Blazor</p>
<ul>
<li>从内存池中自动删除</li>
<li>Blazor WebAssembly 预加载</li>
<li>JavaScript 捆绑程序友好的 Blazor 生成输出</li>
<li>流式处理开始后的 NavigationManager.NotFound()。</li>
<li>改进的 Blazor 诊断</li>
<li>Blazor 服务器状态持久性</li>
<li>为 ASP.NET Core Identity 添加了密钥支持</li>
<li>与 IProblemDetailsService 集成以实现最少的 API 验证</li>
</ul>
</li>
<li>
<p>.NET MAUI</p>
<ul>
<li>MediaPicker 改进</li>
<li>拦截 WebView 请求</li>
<li>控件和布局修改</li>
</ul>
</li>
<li>
<p>适用于 Android 的 .NET</p>
<ul>
<li>Android API 级别 35 和 36 支持</li>
</ul>
</li>
<li>
<p>适用于 iOS、Mac Catalyst、macOS、tvOS 的 .NET</p>
<ul>
<li>Xcode 16.4 的绑定生成和构建可靠性等改进</li>
</ul>
</li>
<li>
<p>Windows 窗体</p>
<ul>
<li>提高质量和构建性能</li>
</ul>
</li>
<li>
<p>Windows 演示基础 (WPF)</p>
<ul>
<li>提高质量和构建性能</li>
</ul>
</li>
<li>
<p>EF Core</p>
<ul>
<li>提高质量和构建性能</li>
</ul>
</li>
<li>
<p>容器映像</p>
<ul>
<li>提高质量和构建性能</li>
</ul>
</li>
</ul>
<h3 id="使用-net-构建第一个-mcp-服务器并发布到-nuget---net-博客">使用 .NET 构建第一个 MCP 服务器并发布到 NuGet - .NET 博客</h3>
<p><a href="https://devblogs.microsoft.com/dotnet/mcp-server-dotnet-nuget-quickstart/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/dotnet/mcp-server-dotnet-nuget-quickstart/</a></p>
<p>了解如何使用 .NET 10 预览版 6 生成 MCP 服务器并将其发布到 NuGet。</p>
<p>本文介绍实现和发布，以及如何使用预览版 6 中引入的“dnx”命令使用上传到 NuGet 的 MCP 服务器。</p>
<h3 id="自定义-github-copilot-的-ai-响应---net-博客">自定义 GitHub Copilot 的 AI 响应 - .NET 博客</h3>
<p><a href="https://devblogs.microsoft.com/dotnet/customize-ai-responses-from-github-copilot/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/dotnet/customize-ai-responses-from-github-copilot/</a></p>
<p>了解如何使用 GitHub Copilot 的自定义说明。 本文介绍如何在 copilot-instructions.md 中自定义 GitHub Copilot 代理模式。</p>
<h3 id="net-maui-团队如何使用-github-copilot-提高工作效率---net-博客">.NET MAUI 团队如何使用 GitHub Copilot 提高工作效率 - .NET 博客</h3>
<p><a href="https://devblogs.microsoft.com/dotnet/maui-team-copilot-tips/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/dotnet/maui-team-copilot-tips/</a></p>
<p>在 .NET MAUI 团队上使用 GitHub Copilot 的见解。</p>
<p>文章介绍了 copilot-instructions.md、防火墙、Copilot Coding Agent 设置步骤、MCP 服务器设置等，以及实际项目中 PR 的合并率和时间。</p>
<h3 id="microsoft-能够在没有通知的情况下删除我们的一些软件包---解释是什么--nuget主页--讨论-14413">Microsoft 能够在没有通知的情况下删除我们的一些软件包 - 解释是什么？ · NuGet/主页 · 讨论 #14413</h3>
<p><a href="https://github.com/NuGet/Home/discussions/14413" target="_blank" rel="noopener nofollow">https://github.com/NuGet/Home/discussions/14413</a></p>
<p>Microsoft.Identity.Client 被标记为有问题，导致错误地删除依赖的 NuGet 包。 目前正在修复中，将于本周末提供详细说明。</p>
<ul>
<li><a href="https://status.nuget.org/" target="_blank" rel="noopener nofollow">NuGet | Status</a> - 历史记录显示当前响应状态</li>
<li><a href="https://aaronstannard.com/microsoft-delete-nuget-packages/" target="_blank" rel="noopener nofollow">因此Microsoft在没有通知的情况下从 NuGet.org 中删除了我们的一些软件包</a></li>
</ul>
<h2 id="发布">发布</h2>
<ul>
<li><a href="https://github.com/App-vNext/Polly" target="_blank" rel="noopener nofollow">App-vNext/Polly</a>    - <a href="https://github.com/App-vNext/Polly/releases/tag/8.6.2" target="_blank" rel="noopener nofollow">8.6.2</a></li>
<li><a href="https://github.com/aws/aws-sdk-net" target="_blank" rel="noopener nofollow">aws/aws-sdk-net</a>
<ul>
<li><a href="https://github.com/aws/aws-sdk-net/releases/tag/3.7.1078.0" target="_blank" rel="noopener nofollow">3.7.1078.0</a>， <a href="https://github.com/aws/aws-sdk-net/releases/tag/3.7.1079.0" target="_blank" rel="noopener nofollow">3.7.1079.0</a>， <a href="https://github.com/aws/aws-sdk-net/releases/tag/4.0.46.0" target="_blank" rel="noopener nofollow">4.0.46. 0</a>， <a href="https://github.com/aws/aws-sdk-net/releases/tag/4.0.47.0" target="_blank" rel="noopener nofollow">4.0.47.0</a></li>
</ul>
</li>
<li><a href="https://github.com/Azure/azure-sdk-for-net" target="_blank" rel="noopener nofollow">Azure/azure-sdk-for-net</a>
<ul>
<li><a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.Core_1.47.0" target="_blank" rel="noopener nofollow">Azure.Core_1.47.0</a>， <a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.Core_1.47.1" target="_blank" rel="noopener nofollow">Azure.Core_1.47.1</a>、<a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.Identity_1.14.2" target="_blank" rel="noopener nofollow">Azure.Identity_1.14.2</a>、<a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.Identity.Broker_1.2.1" target="_blank" rel="noopener nofollow">Azure.Identity.Broker_1.2.1</a>、<a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.Provisioning_1.2.1" target="_blank" rel="noopener nofollow">Azure.Provisioning_1.2.1</a>、<a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.Provisioning.Storage_1.1.2" target="_blank" rel="noopener nofollow">Azure.Provisioning.Storage_1.1.2</a>、<a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.ResourceManager.ManagedServiceIdentities_1.4.0" target="_blank" rel="noopener nofollow">Azure.ResourceManager.ManagedServiceIdentities_1.4. 0</a>， <a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.ResourceManager.MongoDBAtlas_1.0.0" target="_blank" rel="noopener nofollow">Azure.ResourceManager.MongoDBAtlas_1.0. 0</a>， <a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.Storage.Blobs_12.25.0" target="_blank" rel="noopener nofollow">Azure.Storage.Blobs_12.25. 0</a>， <a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.Storage.Blobs.Batch_12.22.0" target="_blank" rel="noopener nofollow">Azure.Storage.Blobs.Batch_12.22. 0</a>， <a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.Storage.Common_12.24.0" target="_blank" rel="noopener nofollow">Azure.Storage.Common_12.24. 0</a>， <a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.Storage.Files.DataLake_12.23.0" target="_blank" rel="noopener nofollow">Azure.Storage.Files.DataLake_12.23. 0</a>， <a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.Storage.Files.Shares_12.23.0" target="_blank" rel="noopener nofollow">Azure.Storage.Files.Shares_12.23. 0</a>， <a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.Storage.Queues_12.23.0" target="_blank" rel="noopener nofollow">Azure.Storage.Queues_12.23. 0</a>， <a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/System.ClientModel_1.5.1" target="_blank" rel="noopener nofollow">System.ClientModel_1.5.1</a></li>
</ul>
</li>
<li><a href="https://github.com/CommunityToolkit/Aspire" target="_blank" rel="noopener nofollow">社区工具包/Aspire</a>
<ul>
<li><a href="https://github.com/CommunityToolkit/Aspire/releases/tag/v9.6.0" target="_blank" rel="noopener nofollow">v9.6.0</a></li>
</ul>
</li>
<li><a href="https://github.com/DataDog/dd-trace-dotnet" target="_blank" rel="noopener nofollow">DataDog/dd-trace-dotnet</a>
<ul>
<li><a href="https://github.com/DataDog/dd-trace-dotnet/releases/tag/v3.21.0" target="_blank" rel="noopener nofollow">v3.21.0</a></li>
</ul>
</li>
<li><a href="https://github.com/dotnet/maui" target="_blank" rel="noopener nofollow">dotnet/毛伊岛</a>
<ul>
<li><a href="https://github.com/dotnet/maui/releases/tag/9.0.82" target="_blank" rel="noopener nofollow">9.0.82</a>， <a href="https://github.com/dotnet/maui/releases/tag/9.0.90" target="_blank" rel="noopener nofollow">9.0.90</a></li>
</ul>
</li>
<li><a href="https://github.com/dotnet/orleans" target="_blank" rel="noopener nofollow">dotnet/奥尔良</a>
<ul>
<li><a href="https://github.com/dotnet/orleans/releases/tag/v9.2.0" target="_blank" rel="noopener nofollow">v9.2.0</a></li>
</ul>
</li>
<li><a href="https://github.com/googleapis/google-cloud-dotnet" target="_blank" rel="noopener nofollow">googleapis/google-cloud-dotnet</a>
<ul>
<li><a href="https://github.com/googleapis/google-cloud-dotnet/releases/tag/Google.Cloud.AIPlatform.V1-3.38.0" target="_blank" rel="noopener nofollow">Google.Cloud.AIPlatform.V1-3.38.0</a> <a href="https://github.com/googleapis/google-cloud-dotnet/releases/tag/Google.Cloud.Compute.V1-3.10.0" target="_blank" rel="noopener nofollow">谷歌云计算.V1-3.10.0</a>、<a href="https://github.com/googleapis/google-cloud-dotnet/releases/tag/Google.Cloud.Config.V1-1.8.0" target="_blank" rel="noopener nofollow">Google.Cloud.Config.V1-1.8. 0</a>、<a href="https://github.com/googleapis/google-cloud-dotnet/releases/tag/Google.Cloud.NetworkServices.V1-1.3.0" target="_blank" rel="noopener nofollow">Google.Cloud.NetworkServices.V1-1.3。 0</a>、<a href="https://github.com/googleapis/google-cloud-dotnet/releases/tag/Google.Cloud.Security.PrivateCA.V1-3.10.0" target="_blank" rel="noopener nofollow">Google.Cloud.Security.PrivateCA.V1-3.10。 0</a>、<a href="https://github.com/googleapis/google-cloud-dotnet/releases/tag/Google.Cloud.Tools.DocUploader-0.3.0" target="_blank" rel="noopener nofollow">Google.Cloud.Tools.DocUploader-0.3。 0</a>、<a href="https://github.com/googleapis/google-cloud-dotnet/releases/tag/Google.Cloud.Tools.SbomGenerator-0.5.0" target="_blank" rel="noopener nofollow">Google.Cloud.Tools.SbomGenerator-0.5。 0</a>、<a href="https://github.com/googleapis/google-cloud-dotnet/releases/tag/Google.Maps.FleetEngine.Delivery.V1-2.3.0" target="_blank" rel="noopener nofollow">Google.Maps.FleetEngine.Delivery.V1-2.3。 0</a>、<a href="https://github.com/googleapis/google-cloud-dotnet/releases/tag/Google.Maps.FleetEngine.V1-2.3.0" target="_blank" rel="noopener nofollow">Google.Maps.FleetEngine.V1-2.3。 0</a></li>
</ul>
</li>
<li><a href="https://github.com/LuckyPennySoftware/AutoMapper" target="_blank" rel="noopener nofollow">LuckyPennySoftware/自动映射器</a>
<ul>
<li><a href="https://github.com/LuckyPennySoftware/AutoMapper/releases/tag/v15.0.1" target="_blank" rel="noopener nofollow">v15.0.1</a></li>
</ul>
</li>
<li><a href="https://github.com/microsoft/WindowsAppSDK" target="_blank" rel="noopener nofollow">microsoft/WindowsAppSDK</a>
<ul>
<li><a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.8-exp4" target="_blank" rel="noopener nofollow">v1.8-exp4</a></li>
</ul>
</li>
<li><a href="https://github.com/newrelic/newrelic-dotnet-agent" target="_blank" rel="noopener nofollow">newrelic/newrelic-dotnet-agent</a>
<ul>
<li><a href="https://github.com/newrelic/newrelic-dotnet-agent/releases/tag/v10.43.0" target="_blank" rel="noopener nofollow">v10.43.0</a></li>
</ul>
</li>
</ul>
<h2 id="文章幻灯片等">文章、幻灯片等</h2>
<h3 id="好像c14中的空检查只需要一行qiita">好像C#14中的空检查只需要一行—Qiita</h3>
<p><a href="https://qiita.com/sebayashi-tomoya/items/94d0af9a748590da2d5f" target="_blank" rel="noopener nofollow">https://qiita.com/sebayashi-tomoya/items/94d0af9a748590da2d5f</a></p>
<p>C# 14 中引入的 null 条件分配简介。</p>
<h3 id="c-14-扩展成员-又名扩展一切探索-net-10-预览版---第-3-部分">C# 14 扩展成员; 又名扩展一切：探索 .NET 10 预览版 - 第 3 部分</h3>
<p><a href="https://andrewlock.net/exploring-dotnet-10-preview-features-3-csharp-14-extensions-members/" target="_blank" rel="noopener nofollow">https://andrewlock.net/exploring-dotnet-10-preview-features-3-csharp-14-extensions-members/</a></p>
<p>C# 14 扩展成员的说明。 在本文中，我们将讨论扩展方法之间的区别，如何实际描述它们，如何直接调用扩展成员等。</p>
<h3 id="net时事--2025-年-7-月--net-tools-博客">.NET时事 | 2025 年 7 月 | .NET Tools 博客</h3>
<p><a href="https://blog.jetbrains.com/dotnet/2025/07/15/dotinsights-july-2025/" target="_blank" rel="noopener nofollow">https://blog.jetbrains.com/dotnet/2025/07/15/dotinsights-july-2025/</a></p>
<p>JetBrains 的 .NET 时事通讯，2025 年 7 月。</p>
<h3 id="为-uno-平台引入新的轻量级-datagrid">为 Uno 平台引入新的轻量级 DataGrid</h3>
<p><a href="https://platform.uno/blog/introducing-a-new-lightweight-datagrid-for-uno-platform/" target="_blank" rel="noopener nofollow">https://platform.uno/blog/introducing-a-new-lightweight-datagrid-for-uno-platform/</a></p>
<p>介绍在 WinUI 和 UnoPlatform 上运行的轻型 DataGrid (WinUI.DataGrid)。</p>
<h3 id="opencli-简介">OpenCLI 简介</h3>
<p><a href="https://patriksvensson.se/posts/2025/07/introducing-open-cli" target="_blank" rel="noopener nofollow">https://patriksvensson.se/posts/2025/07/introducing-open-cli</a></p>
<p>关于启动 OpenCLI，它定义了 CLI 的接口(例如参数和选项)。</p>
<ul>
<li><a href="https://opencli.org/" target="_blank" rel="noopener nofollow">规格 | OpenCLI</a></li>
<li>[spectreconsole/open-cli：OpenCLI 规范 (OCS) 定义了与 CLI 应用程序无关的标准、平台和语言接口，允许人类和计算机 了解如何在不访问源代码或文档的情况下调用 CLI 工具。(<a href="https://github.com/spectreconsole/open-cli" target="_blank" rel="noopener nofollow">https://github.com/spectreconsole/open-cli</a>)</li>
</ul>
<h3 id="mcp-c-sdk-中的-oauth简单安全标准--登德利马尔斯基">MCP C# SDK 中的 OAuth：简单、安全、标准 · 登德利马尔斯基</h3>
<p><a href="https://den.dev/blog/mcp-csharp-sdk-authorization/" target="_blank" rel="noopener nofollow">https://den.dev/blog/mcp-csharp-sdk-authorization/</a><br>
如何在 MCP C# SDK 中支持 OAuth 2.1 身份验证。</p>
<h3 id="net-10-的隐藏瑰宝将改变您的开发的鲜为人知的功能">.NET 10 的隐藏瑰宝：将改变您的开发的鲜为人知的功能</h3>
<p><a href="https://www.mobilize.net/blog/the-hidden-gems-of-.net-10-lesser-known-features-that-will-transform-your-development" target="_blank" rel="noopener nofollow">https://www.mobilize.net/blog/the-hidden-gems-of-.net-10-lesser-known-features-that-will-transform-your-development</a></p>
<p>介绍 .NET 10 鲜为人知的功能。 证书管理 ISOWeek.ToDateOnly、跨度支持字符串规范化、JIT 改进、框架提供的包的自动删除、本机选项卡补全、增加的指标和 HTTP/3 性能增强、改进的容器集成等。</p>
<h3 id="c-语言中不是常量但在运行时被优化为常量的东西---qiita">C# 语言中不是常量但在运行时被优化为常量的东西 - Qiita</h3>
<p><a href="https://qiita.com/rougemeilland/items/db5a57456079de9b5006" target="_blank" rel="noopener nofollow">https://qiita.com/rougemeilland/items/db5a57456079de9b5006</a></p>
<p>例如，通过 JIT 优化的值(const 常量除外)。</p>
<h3 id="c-recordclass-中-equals-的绊脚石故事---qiita">[C#] RecordClass 中 Equals() 的绊脚石故事 - Qiita</h3>
<p><a href="https://qiita.com/masamin/items/fe13ab4acdd3bcbbcae5" target="_blank" rel="noopener nofollow">https://qiita.com/masamin/items/fe13ab4acdd3bcbbcae5</a></p>
<p>如何比较事件与记录类型中的“等于”。</p>
<h3 id="最近的-net-asyncawait-可视化计划也用于-printf-调试---qiita">最近的 .NET async/await 可视化计划(也用于 printf 调试) - Qiita</h3>
<p><a href="https://qiita.com/cozyupk/items/50bfa7e5ba6d6bf5121e" target="_blank" rel="noopener nofollow">https://qiita.com/cozyupk/items/50bfa7e5ba6d6bf5121e</a></p>
<p>如何观察 async/await 的行为以查看它是如何工作的。</p>
<h3 id="automapper-商业发布的注意事项">AutoMapper 商业发布的注意事项</h3>
<p><a href="https://zenn.dev/karamem0/articles/2025_07_10_090000" target="_blank" rel="noopener nofollow">https://zenn.dev/karamem0/articles/2025_07_10_090000</a></p>
<p>新版本的 AutoMapper 已更改其商业用途的许可证和注释。</p>
<h3 id="您还可以在-c-中创建-aviutl2-插件-使用原生-aot">您还可以在 C# 中创建 aviutl2 插件！ 使用原生 AOT</h3>
<p><a href="https://zenn.dev/yamachu/articles/f3912ea418f530" target="_blank" rel="noopener nofollow">https://zenn.dev/yamachu/articles/f3912ea418f530</a></p>
<p>了解如何使用本机 AOT 在 C# 中为 AviUtl2 创建插件。</p>
<h2 id="库存储库工具等">库、存储库、工具等</h2>
<h3 id="cysharpaiapitracer本地开发环境的反向代理拦截对-openaianthropic-等-ai-服务的请求允许您跟踪请求和响应-内容">Cysharp/AIApiTracer：本地开发环境的反向代理，拦截对 OpenAI、Anthropic 等 AI 服务的请求，允许您跟踪请求和响应 内容。</h3>
<p><a href="https://github.com/Cysharp/AIApiTracer" target="_blank" rel="noopener nofollow">https://github.com/Cysharp/AIApiTracer</a></p>
<p>反向代理，用于跟踪 API 对 AI 服务的请求。</p>
<h2 id="c-net-交流群">C# .NET 交流群</h2>
<p>相信大家在开发中经常会遇到一些性能问题，苦于没有有效的工具去发现性能瓶颈，或者是发现瓶颈以后不知道该如何优化。之前一直有读者朋友询问有没有技术交流群，但是由于各种原因一直都没创建，现在很高兴的在这里宣布，我创建了一个专门交流.NET性能优化经验的群组，主题包括但不限于：</p>
<ul>
<li>如何找到.NET性能瓶颈，如使用APM、dotnet tools等工具</li>
<li>.NET框架底层原理的实现，如垃圾回收器、JIT等等</li>
<li>如何编写高性能的.NET代码，哪些地方存在性能陷阱</li>
</ul>
<p>希望能有更多志同道合朋友加入，分享一些工作中遇到的.NET问题和宝贵的分析优化经验。<strong>目前一群已满，现在开放二群。</strong>可以加我vx，我拉你进群: <strong>ls1075</strong> 另外也创建了<strong>QQ Group</strong>: 687779078，欢迎大家加入。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-19 11:26">2025-07-19 11:26</span>&nbsp;
<a href="https://www.cnblogs.com/InCerry">InCerry</a>&nbsp;
阅读(<span id="post_view_count">230</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18992690);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18992690', targetLink: 'https://www.cnblogs.com/InCerry/p/-/dotnet_week_25_7_2', title: '.NET周刊【7月第2期 2025-07-13】' })">举报</a>
</div>
        