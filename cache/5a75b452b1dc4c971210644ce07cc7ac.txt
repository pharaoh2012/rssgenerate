
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Beacon-wolf/p/18996479" title="发布于 2025-07-21 20:05">
    <span role="heading" aria-level="2">洛谷题解 | P3383 【模板】线性筛素数</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="题目思路">题目思路</h2>
<p>先思考最朴素的素数筛法。即对于每个数 <span class="math inline">\(n\)</span>，检查它是否能被任意小于 <span class="math inline">\(\sqrt{n}\)</span> 的整数整除。如果不能，则 <span class="math inline">\(n\)</span> 是素数。这种筛法显然是低效的。</p>
<p>逆向思考，上述素数筛思路为验证每个数是否为质数，那可不可以排除所有合数，这样剩下的自然是质数了？这就是埃氏筛。</p>
<p>埃氏筛的思想是：从 <span class="math inline">\(2\)</span> 开始，将除了它本身所有 <span class="math inline">\(2\)</span> 的倍数划掉，然后是 <span class="math inline">\(3\)</span>、<span class="math inline">\(4\)</span>、<span class="math inline">\(\dots\)</span> 重复此过程，直到<span class="math inline">\(\sqrt{n}\)</span>，剩下的数就是小于 <span class="math inline">\(n\)</span> 的所有素数。</p>
<p>这种筛法的复杂度为 <span class="math inline">\(\mathcal O(n \log \log n)\)</span>。那如何做到 <span class="math inline">\(\mathcal O(n)\)</span> 的复杂度？</p>
<p>观察发现，埃氏筛会重复筛除质数。如果每个合数仅被其最小质因数筛除一次，那就不会被重复筛除，也就是做到 <span class="math inline">\(\mathcal O(n)\)</span> 了。这便是欧拉筛。</p>
<p>维护一个质数数组，对于每个新数，首先检查它是否是质数，若是则加入数组。接着用当前质数数组中的数去标记合数，<strong>当发现当前数能被某个质数整除时立即终止标记过程</strong>。这一点十分关键，它保证每个合数仅被其最小质因数筛除，也就只被筛除一次。</p>
<p>有人可能还是不明白为什么是这时候退出。确保每个合数仅被其最小质因数筛除一次，就是 <span class="math inline">\(i \times prime_{j}\)</span> 不能拥有比 <span class="math inline">\(prime_{j}\)</span> 更小的质因子，也就是  <span class="math inline">\(i\)</span> 不能拥有比 <span class="math inline">\(prime_{j}\)</span> 更小的质因子。如果发现 <span class="math inline">\(i\)</span> 的最小质因子已经是 <span class="math inline">\(prime_{j}\)</span> 了，此时不退出，下一轮循环的 <span class="math inline">\(prime_{j}\)</span> 增大，<span class="math inline">\(i\)</span> 中就有比它更小的质因子，于是就无法确保每个合数仅被其最小质因数筛除一次了。</p>
<p>欧拉筛因为每个合数仅被其最小质因数筛除一次，所以复杂度是 <span class="math inline">\(\mathcal O(n)\)</span> 的。</p>
<h2 id="ac-代码">AC 代码</h2>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
int n,q,cnt = 0,prime[100000010];
bool isprime[100000010]; 
int main(){
	std::ios::sync_with_stdio(0);
	cin &gt;&gt; n &gt;&gt; q;
	memset(isprime,true,sizeof(isprime));
	for(int i = 2;i &lt;= n;i++){
		if(isprime[i]) prime[++cnt] = i;
		for(int j = 1;j &lt;= cnt &amp;&amp; i * prime[j] &lt;= n;j++){
			isprime[i * prime[j]] = false;
			if(i % prime[j] == 0) break; //关键优化：如果 i % prime[j] == 0，说明 i 的最小质因数是 prime[j]，此时终止内层循环，避免重复筛除
		}
	} 
	while(q--){
		int k;
		cin &gt;&gt; k;
		cout &lt;&lt; prime[k] &lt;&lt; endl;
	}
	return 0;
}
</code></pre>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-21 20:05">2025-07-21 20:05</span>&nbsp;
<a href="https://www.cnblogs.com/Beacon-wolf">Beacon_wolf</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18996479);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18996479', targetLink: 'https://www.cnblogs.com/Beacon-wolf/p/18996479', title: '洛谷题解 | P3383 【模板】线性筛素数' })">举报</a>
</div>
        