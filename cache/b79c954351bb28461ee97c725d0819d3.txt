
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/cnoneblog/p/18808240" title="发布于 2025-04-03 18:41">
    <span role="heading" aria-level="2">SQL语句（一）—— DDL</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>&nbsp; &nbsp; &nbsp; &nbsp;SQL 全称 Structured Query Language，结构化查询语言。操作关系型数据库的编程语言，定义了一套操作关系型数据库统一标准&nbsp;。</p>
<h4 id="%E4%B8%80%E3%80%81SQL%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86">一、SQL 基础知识</h4>
<h5 id="%EF%BC%88%E4%B8%80%EF%BC%89SQL%20%E9%80%9A%E7%94%A8%E8%AF%AD%E6%B3%95">（一）SQL 通用语法</h5>
<div>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在学习具体的SQL语句之前，先来了解一下SQL语言的通用语法。</p>
<p>①&nbsp;SQL语句可以单行或多行书写，以分号结尾。</p>
<p>②&nbsp;SQL语句可以使用空格/缩进来增强语句的可读性。</p>
<p>③&nbsp;MySQL数据库的SQL语句不区分大小写，关键字建议使用大写。</p>
</div>
<p>④ 注释：单行注释为&nbsp;“-- 注释内容”&nbsp;或 “# 注释内容”；多行注释为 “/* 注释内容 */”</p>
<h5 id="%EF%BC%88%E4%BA%8C%EF%BC%89SQL%20%E5%88%86%E7%B1%BB">（二）SQL 分类</h5>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SQL语言，根据其功能，主要分为四类：DDL、DML、DQL、DCL。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1、DDL：全称为 Data Definition Language，即数据定义语言。用来定义数据库对象（数据库、表、字段）</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;2、DML：全称为 Data Manipulation Language，即数据操作语言。用来对数据库表中的数据进行增删改。</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;3、DQL：全称为Data Query Language，即数据查询语言。用来查询数据库中表的记录。</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;4、DCL：全称为Data Control Language，即数据控制语言。用来创建数据库用户、控制数据库的访问权限。</p>
<h4 id="%E4%BA%8C%E3%80%81DDL%20%E2%80%94%E2%80%94%C2%A0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C">二、DDL ——&nbsp;数据库操作</h4>
<h6 id="1%E3%80%81%E6%9F%A5%E8%AF%A2%E6%89%80%E6%9C%89%E6%95%B0%E6%8D%AE%E5%BA%93">1、查询所有数据库</h6>
<blockquote>
<p>show databases;</p>
</blockquote>
<h6 id="%E2%80%8B%E7%BC%96%E8%BE%91"><img src="https://i-blog.csdnimg.cn/direct/f6f2c391d88648ed9f19d58c028b72d2.png" alt="" width="592" height="364"></h6>
<h6 id="2%E3%80%81%E6%9F%A5%E8%AF%A2%E5%BD%93%E5%89%8D%E6%95%B0%E6%8D%AE%E5%BA%93">2、查询当前数据库</h6>
<blockquote>
<p>select datebase();</p>
</blockquote>
<p><img src="https://i-blog.csdnimg.cn/direct/119bd67e5751432dbb85718b9d39a9d7.png" alt="" width="314" height="93"></p>
<h6 id="3%E3%80%81%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93">3、创建数据库</h6>
<blockquote>
<p>create database [ if not exists ] 数据库名 [ default charset 字符集 ] [ collate 排序规则 ] ;</p>
</blockquote>
<p>&nbsp; &nbsp; &nbsp; &nbsp; 这条指令的基本形式是&nbsp;create database 数据库名，方括号中的部分可加可不加。</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;if not exists：同一个数据库服务器中，不能创建两个名称相同的数据库，否则会报错。可以通过 if not exists 参数来解决这个问题，数据库不存在，则创建该数据库，如果存在，则不创建。</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;default charest 字符集：如果不指定，则使用默认的字符集utf8mb4，建议使用这个。</p>
<pre><code class="language-sql">create database my123;</code></pre>
<p><img src="https://i-blog.csdnimg.cn/direct/396fd6223401462ebc8f2725ea3443c9.png" alt="" width="486" height="244"></p>
<h6 id="4%E3%80%81%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE%E5%BA%93">4、删除数据库</h6>
<blockquote>
<p>drop database [ if exists ] 数据库名 ;</p>
</blockquote>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果删除一个不存在的数据库，将会报错。此时，可以加上参数 if exists ，如果数据库存在，再执行删除，否则不执行删除。</p>
<pre><code class="language-sql">drop database my123;</code></pre>
<p><img src="https://i-blog.csdnimg.cn/direct/e8bd11e0da1a41c2a4efc5ff7b018625.png" alt="" width="543" height="240"></p>
<h6 id="5%E3%80%81%E5%88%87%E6%8D%A2%E6%95%B0%E6%8D%AE%E5%BA%93">5、切换数据库</h6>
<blockquote>
<p>use 数据库名 ;</p>
</blockquote>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们要操作某一个数据库下的表时，就需要通过该指令，切换到对应的数据库下，否则是不能操作的。&nbsp;比如，切换到itcast数据库，执行如下SQL：</p>
<pre><code class="language-sql">use itcast;</code></pre>
<h4 id="%E4%B8%89%E3%80%81DDL%20%E2%80%94%E2%80%94%20%E8%A1%A8%E6%93%8D%E4%BD%9C">三、DDL —— 表操作</h4>
<h5 id="%EF%BC%88%E4%B8%80%EF%BC%89%E6%9F%A5%E8%AF%A2%E5%88%9B%E5%BB%BA">（一）查询创建</h5>
<h6 id="1%E3%80%81%E6%9F%A5%E8%AF%A2%E5%BD%93%E5%89%8D%E6%95%B0%E6%8D%AE%E5%BA%93%E6%89%80%E6%9C%89%E8%A1%A8">1、查询当前数据库所有表</h6>
<blockquote>
<p>show tables;</p>
</blockquote>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;比如，我们可以切换到 sys 这个系统数据库，并查看系统数据库中的所有表结构。</p>
<pre><code class="language-sql">use sys;
show tables;</code></pre>
<p><img src="https://i-blog.csdnimg.cn/direct/295f06761981414498338aedbd5174d0.png" alt="" width="615" height="445"></p>
<h6 id="2%E3%80%81%E6%9F%A5%E8%AF%A2%E5%BD%93%E5%89%8D%E6%95%B0%E6%8D%AE%E5%BA%93%E6%89%80%E6%9C%89%E8%A1%A8">2、查看指定表结构</h6>
<blockquote>
<p>desc 表名;</p>
</blockquote>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通过这条指令，我们可以查看到指定表的字段，字段的类型、是否可以为NULL，是否存在默认值等信息。</p>
<p><img src="https://i-blog.csdnimg.cn/direct/b1babce1476e4e31b3c73dfaf8cdf991.png" alt="" width="1393" height="366"></p>
<h6 id="3%E3%80%81%E6%9F%A5%E8%AF%A2%E6%8C%87%E5%AE%9A%E8%A1%A8%E7%9A%84%E5%BB%BA%E8%A1%A8%E8%AF%AD%E5%8F%A5">3、查询指定表的建表语句</h6>
<blockquote>
<p>show create table 表名 ;</p>
</blockquote>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通过这条指令，主要是用来查看建表语句的，而有部分参数我们在创建表的时候，并未指定也会查询到，因为这部分是数据库的默认值，如：存储引擎、字符集等。</p>
<p><img src="https://i-blog.csdnimg.cn/direct/f4c73f3052454070be0e7c52afaf92ab.png" alt="" width="1449" height="317"></p>
<h6 id="4%E3%80%81%E5%88%9B%E5%BB%BA%E8%A1%A8%E7%BB%93%E6%9E%84">4、创建表结构</h6>
<blockquote>
<p>CREATE TABLE 表名(<br>&nbsp;&nbsp;&nbsp;&nbsp;字段1 字段1类型 [COMMENT 字段1注释 ],<br>&nbsp;&nbsp;&nbsp;&nbsp;字段2 字段2类型 [COMMENT 字段2注释 ],<br>&nbsp;&nbsp;&nbsp;&nbsp;字段3 字段3类型 [COMMENT 字段3注释 ],<br>&nbsp;&nbsp;&nbsp;&nbsp;......<br>&nbsp;&nbsp;&nbsp;&nbsp;字段n 字段n类型 [COMMENT 字段n注释 ]&nbsp;<br>) [ COMMENT 表注释 ] ;&nbsp;</p>

</blockquote>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意：[...] 内为可选参数，最后一个字段后面没有逗号，因为这就是一条SQL语句，一条SQL语句只有一个逗号。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;比如，我们创建一张表 tb_user，对应的结构如下，那么建表语句为：</p>
<p><img src="https://i-blog.csdnimg.cn/direct/065bc8aaac0947e890bf95c3b752d5ed.png" alt="" width="871" height="248"></p>
<pre><code class="language-sql">create table tb_user(id int comment '编号',name varchar(50) comment '姓名',age int comment '年龄',gender varchar(1) comment '性别'
) comment '用户表';</code></pre>
<h5 id="%EF%BC%88%E4%BA%8C%EF%BC%89%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B">（二）数据类型</h5>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在上述的建表语句中，我们在指定字段的数据类型时，用到了int，varchar，那么在MySQL中除了以上的数据类型，还有哪些常见的数据类型呢？</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;接下来，我们详细介绍一下MySQL的数据类型。 MySQL中的数据类型有很多，主要分为三类：数值类型、字符串类型、日期时间类型。</p>
<h6 id="1%E3%80%81%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B">1、数值类型</h6>
<p><img src="https://i-blog.csdnimg.cn/direct/4def621e9eb24e629383bcc65d75bd35.png" alt="" width="763" height="1039"></p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; 对表格进行归纳，前 5 个数据类型 tinyint、smallint、mediumint、int/integer、bigint 表示整型数据，仅仅是取值范围不同。接下来&nbsp;2 个数据类型 float、double 表示浮点型数据。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最后一个 decimal 是精确的浮点型数据，其中的&nbsp;M 表示小数的位数有多少位，D 表示小数点后面有多少位。例如，decimal(10,2)，即小数的整体位数是 10&nbsp;位，小数点后面有 2&nbsp;位。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;同时，float 与 double 也可以对位数进行规定，如double(4,1)，但是我们常用的精确的浮点型数据类型还是decimal。</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; 同时如果希望是无符号数，则可在数据类型后面加上 unsigned，如 age tinyint unsigned。</p>
<h6 id="2%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B1%BB%E5%9E%8B">2、字符串类型</h6>
<p><img src="https://i-blog.csdnimg.cn/direct/dd3705e44112412683cc8de4d6bc6048.png" alt="" width="934" height="722"></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char 与 varchar 都可以描述字符串。char 表示定长字符串，指定长度多长，就占用多少个字符，和字段值的长度无关，例如char(10)。而&nbsp;varchar 表示变长字符串，指定的长度为最大占用长度，例如varchar(10)。</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; char 中未占用的字符，会用空格来补位；varchar 则是存多少个字符就占用多少个空间。即varchar在规定具体长度的同时，还需要根据当前字符串修改长度，所以相对而言char的性能会更高一些，用空间换时间。</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; 还有两个就是blob与text，只是前缀的不同导致长度的不同，其前缀为tiny、无、medium、long。blob中存储的文本形式是二进制形式的、而&nbsp;text&nbsp;中的就是文本。</p>
<h6 id="3%E3%80%81%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4%E7%B1%BB%E5%9E%8B">3、日期时间类型</h6>
<p><img src="https://i-blog.csdnimg.cn/direct/c39cb064dbfc4fa5ad5bcb6dcf5d40ca.png" alt="" width="933" height="573"></p>
<pre><code class="language-sql">--例如: 
-- 1). 生日字段 birthdaybirthday date-- 2). 创建时间 createtimecreatetime datetime</code></pre>
<h5 id="%EF%BC%88%E4%B8%89%EF%BC%89%E4%BF%AE%E6%94%B9">（三）修改</h5>
<h6 id="1%E3%80%81%E6%B7%BB%E5%8A%A0%E5%AD%97%E6%AE%B5">1、添加字段</h6>
<blockquote>
<p>alter table&nbsp;表名 add&nbsp;字段名 类型 [ comment&nbsp;注释 ] [ 约束 ];</p>
</blockquote>
<p>&nbsp; &nbsp; &nbsp; &nbsp;其中 “alter table 表名” 是选中具体的表，“add 字段名 类型” 是具体的操作，“comment 注释” 是给代码添加注释。代码中方括号的部分可以省略。</p>
<p><img src="https://i-blog.csdnimg.cn/direct/f8c9f164fc3d435d8a6947ad1a35109d.png" alt="" width="1707" height="691"></p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;添加字段的意思，就是在一张表中，再加一列。如为 emp 表增加一个新的字段”昵称”为 nickname，类型为varchar(20)。代码与执行结果如下：</p>
<pre><code class="language-sql">alter table emp add nickname varchar(20) comment '昵称';</code></pre>
<p><img src="https://i-blog.csdnimg.cn/direct/9e24fa86256a4ba59f2f1f5249525862.png" alt="" width="1931" height="738"></p>
<h6 id="2%E3%80%81%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B">2、修改数据类型</h6>
<blockquote>
<p>alter table 表名 modify 字段名 新数据类型;&nbsp;</p>
</blockquote>
<h6 id="3%E3%80%81%E4%BF%AE%E6%94%B9%E5%AD%97%E6%AE%B5%E5%90%8D%E5%92%8C%E5%AD%97%E6%AE%B5%E7%B1%BB%E5%9E%8B">3、修改字段名和字段类型</h6>
<blockquote>
<p>alter table 表名 change 旧字段名 新字段名 类型 (长度) [ comment 注释 ] [ 约束 ];&nbsp;</p>
</blockquote>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;将 emp 表的 nickname 字段修改为 username，类型为varchar(30)。代码与执行结果如下：</p>
<pre><code class="language-sql">alter table emp change nickname username varchar(30) comment '昵称';</code></pre>
<p><img src="https://i-blog.csdnimg.cn/direct/787ff1910d2a40249afe5dd7e63a2375.png" alt="" width="1935" height="736"></p>
<h6 id="4%E3%80%81%E5%88%A0%E9%99%A4%E5%AD%97%E6%AE%B5">4、删除字段</h6>
<blockquote>
<p>alter table&nbsp;表名 drop&nbsp;字段名;</p>
</blockquote>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;将 emp 表的字段 username 删除，代码与执行结果如下：</p>
<pre><code class="language-sql">alter table emp drop username;</code></pre>
<p><img src="https://i-blog.csdnimg.cn/direct/580bbb2c41504e55ac6db92f11c3ece6.png" alt="" width="1703" height="736"></p>
<h6 id="5%E3%80%81%E4%BF%AE%E6%94%B9%E8%A1%A8%E5%90%8D">5、修改表名</h6>
<blockquote>
<p>alter table&nbsp;表名 rename to&nbsp;新表名;</p>
</blockquote>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;将emp表的表名修改为 employee，具体代码如下：</p>
<pre><code class="language-sql">alter table emp rename to employee;</code></pre>
<h5 id="%EF%BC%88%E5%9B%9B%EF%BC%89%E5%88%A0%E9%99%A4">（四）删除</h5>
<h6 id="1%E3%80%81%E5%88%A0%E9%99%A4%E8%A1%A8%C2%A0">1、删除表&nbsp;</h6>
<blockquote>
<p>drop table&nbsp;[ if exists ] 表名;</p>
</blockquote>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可选项 if exists代表，只有表名存在时才会删除该表，表名不存在，则不执行删除操作(如果不加该参数项，删除一张不存在的表，执行将会报错)。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果tb_user表存在，则删除tb_user表，具体代码如下：</p>
<pre><code class="language-sql">drop table&nbsp;if exists tb_user;</code></pre>
<h6 id="2%E3%80%81%E5%88%A0%E9%99%A4%E6%8C%87%E5%AE%9A%E8%A1%A8%EF%BC%8C%E5%B9%B6%E9%87%8D%E6%96%B0%E5%88%9B%E5%BB%BA%E8%A1%A8">2、删除指定表，并重新创建表</h6>
<blockquote>
<p>truncate table 表名;</p>
</blockquote>
<p>&nbsp;注意: 在删除表的时候，表中的全部数据也都会被删除；这个操作就是将这张表进行重置。</p>
<p>本文参考文献&nbsp;<a title="sql 语句 DDL" href="http://www.hqwc.cn/news/910194.html" target="_blank" rel="noopener nofollow">http://www.hqwc.cn/news/910194.html</a></p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.5997957549699074" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-03 18:42">2025-04-03 18:41</span>&nbsp;
<a href="https://www.cnblogs.com/cnoneblog">1763392456</a>&nbsp;
阅读(<span id="post_view_count">49</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18808240" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18808240);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18808240', targetLink: 'https://www.cnblogs.com/cnoneblog/p/18808240', title: 'SQL语句（一）—— DDL' })">举报</a>
</div>
        