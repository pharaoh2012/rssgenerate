
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoyan2017/p/18912059" title="发布于 2025-06-05 11:50">
    <span role="heading" aria-level="2">flutter3-winseek客户端AI实例|Flutter3.32+DeepSeek流式ai对话模板Exe</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p><span style="font-size: 18px; font-family: 宋体, &quot;Songti SC&quot;; color: rgba(84, 0, 174, 1)">原创首发<span style="background-color: rgba(248, 215, 253, 1)">flutter3+deepseek+window_manager</span><strong>客户端Ai</strong>流式打字<em>Flutter-WinSeek</em>。</span></p>
<p><span style="font-size: 12px"><strong>flutter3-winseek-chat</strong>：基于<span style="color: rgba(255, 0, 0, 1); background-color: rgba(255, 255, 153, 1)">flutter3.32+dart3.8+deepseek+dio+getx+markdown+highlight</span>等技术搭建桌面客户端AI流式打字效果聊天对话Exe项目。支持<span style="background-color: rgba(204, 255, 255, 1)">侧边栏收缩、stream流输出、代码高亮/复制、对话本地存储</span>等功能。</span></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605101044570-770523700.png" alt=""></p>
<h3>使用技术</h3>
<ul>
<li><span style="font-size: 12px">编辑器：vscode</span></li>
<li><span style="font-size: 12px">技术框架：flutter3.32.0+dart3.8.0</span></li>
<li><span style="font-size: 12px">对话大模型：deepseek-v3</span></li>
<li><span style="font-size: 12px">流请求：dio^5.8.0+1</span></li>
<li><span style="font-size: 12px">窗口管理：window_manager^0.5.0</span></li>
<li><span style="font-size: 12px">托盘管理：system_tray^2.0.3</span></li>
<li><span style="font-size: 12px">路由/状态管理：get^4.7.2</span></li>
<li><span style="font-size: 12px">存储服务：get_storage^2.1.1</span></li>
<li><span style="font-size: 12px">markdown解析：flutter_markdown^0.7.7</span></li>
<li><span style="font-size: 12px">高亮组件：flutter_highlight^0.7.0</span></li>
<li><span style="font-size: 12px">环境变量配置：flutter_dotenv^5.2.1</span></li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605101939680-1372052953.gif" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605101951576-236683968.gif" alt=""></p>
<h3>功能特色</h3>
<ol>
<li><span style="font-size: 12px">最新跨平台Flutter3.32构建，接入DeepSeek-V3，丝滑般流式输出</span></li>
<li><span style="font-size: 12px">支持侧边栏收缩/展开</span></li>
<li><span style="font-size: 12px">支持上下文多轮对话、代码高亮、本地存储会话</span></li>
<li><span style="font-size: 12px">支持代码块横向滚动、复制代码功能</span></li>
<li><span style="font-size: 12px">支持图片100%宽度渲染、在线图片预览</span></li>
<li><span style="font-size: 12px">支持网络链接跳转、表格功能</span></li>
<li><span style="font-size: 12px">采用自定义无边框窗口、托盘图标</span></li>
</ol>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605102812567-589815858.gif" alt=""></p>
<h3>项目结构目录</h3>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605103005218-1658224469.png" alt=""></p>
<blockquote>
<h4><em>Flutter3-WinSeek客户端ai项目已经更新到我的原创作品集。</em></h4>
<p><span style="font-size: 12px"><a href="https://mall.bilibili.com/neul-next/detailuniversal/detail.html?isMerchant=1&amp;page=detailuniversal_detail&amp;saleType=10&amp;itemsId=12496479&amp;loadingShow=1&amp;noTitleBar=1&amp;msource=merchant_share" target="_blank" rel="noopener nofollow">flutter3.32+deepseek+dio客户端ai流式对话Exe</a></span></p>
</blockquote>
<p><span style="font-size: 12px">通过&nbsp;<span class="cnblogs_code">flutter create flutter_winseek</span>&nbsp;命令即可快速创建一个flutter空项目模板。</span><br><span style="font-size: 12px">通过&nbsp;<span class="cnblogs_code">flutter run -d windows</span>&nbsp;命令即可运行到windows桌面。</span></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605103549516-150050982.png" alt="" loading="lazy"></p>
<h3>.env环境变量配置</h3>
<p><span style="font-size: 12px">在flutter中使用&nbsp;<span class="cnblogs_code">flutter_dotenv</span>&nbsp;插件来配置环境变量。</span></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605104151148-834204953.png" alt="" loading="lazy"></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)"># 项目名称
APP_NAME </span>= <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Flutter3-WinSeek</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">

# DeepSeek API配置
DEEPSEEK_API_KEY </span>=<span style="color: rgba(0, 0, 0, 1)"> apikey
DEEPSEEK_BASE_URL </span>= https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">api.deepseek.com</span></pre>
</div>
<p><strong><span style="font-size: 12px">在页面获取环境变量</span></strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 获取.env环境变量baseUrl和apiKey</span>
String baseURL = dotenv.get('DEEPSEEK_BASE_URL'<span style="color: rgba(0, 0, 0, 1)">);
String apiKEY </span>= dotenv.get('DEEPSEEK_API_KEY');</pre>
</div>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605104504719-2085073956.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605104617425-628936768.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605104626714-745480355.png" alt=""></p>
<h3>项目布局模板</h3>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605104750285-68659816.png" alt="" loading="lazy"></p>
<p>项目整体分为<strong>侧边栏+自定义顶部导航+AI聊天对话区</strong>三个模块。</p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605105858927-1189439389.png" alt="" loading="lazy"></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> Scaffold(
  backgroundColor: Colors.grey[</span>50<span style="color: rgba(0, 0, 0, 1)">],
  body: DragToResizeArea(
    child: Row(
      children: [
        </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 侧边栏</span>
<span style="color: rgba(0, 0, 0, 1)">        AnimatedSize(
          duration: const Duration(milliseconds: </span>300<span style="color: rgba(0, 0, 0, 1)">),
          curve: Curves.easeInOut,
          child: Container(
            width: collapsed </span>? 0 : 260<span style="color: rgba(0, 0, 0, 1)">,
            decoration: BoxDecoration(
              border: Border(right: BorderSide(color: Colors.grey.withAlpha(</span>50<span style="color: rgba(0, 0, 0, 1)">)))
            ),
            child: Material(
              color: Color(</span>0xFFF3F3F3<span style="color: rgba(0, 0, 0, 1)">),
              child: Sidebar(),
            ),
          ),
        ),
        </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 主体容器</span>
<span style="color: rgba(0, 0, 0, 1)">        Expanded(
          child: Column(
            children: [
              </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 自定义导航栏</span>
<span style="color: rgba(0, 0, 0, 1)">              SizedBox(
                height: </span>30.0<span style="color: rgba(0, 0, 0, 1)">,
                child: Row(
                  children: [
                    IconButton(
                      onPressed: () {
                        setState(() {
                          collapsed </span>= !<span style="color: rgba(0, 0, 0, 1)">collapsed;
                        });
                      },
                      icon: Icon(collapsed </span>? Icons.format_indent_increase : Icons.format_indent_decrease, size: 16.0<span style="color: rgba(0, 0, 0, 1)">,),
                      tooltip: collapsed </span>? '展开' : '收缩'<span style="color: rgba(0, 0, 0, 1)">,
                    ),
                    Expanded(
                      child: DragToMoveArea(
                        child: SizedBox(
                          height: </span><span style="color: rgba(0, 0, 255, 1)">double</span><span style="color: rgba(0, 0, 0, 1)">.infinity,
                        ),
                      ),
                    ),
                    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 右上角操作按钮</span>
<span style="color: rgba(0, 0, 0, 1)">                    WinBtns(
                      leading: Row(
                        children: [
                          ...
                        ],
                      ),
                    ),
                  ],
                ),
              ),
              </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 右侧主面板</span>
<span style="color: rgba(0, 0, 0, 1)">              Expanded(
                child: Container(
                  child: widget.child,
                ),
              ),
            ],
          ),
        ),
      ],
    ),
  ),
);</span></pre>
</div>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605111218164-868085760.png" alt="" loading="lazy">&nbsp; &nbsp;<img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605111151334-924179006.png" alt="" loading="lazy"></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> ScrollConfiguration(
  behavior: CustomScrollBehavior(),
  child: Column(
    children: [
      Container(
        padding: EdgeInsets.all(</span>10.0<span style="color: rgba(0, 0, 0, 1)">),
        child: Column(
          spacing: </span>10.0<span style="color: rgba(0, 0, 0, 1)">,
          children: [
            ...
          ],
        ),
      ),
      Container(
        margin: EdgeInsets.only(bottom: </span>10.0<span style="color: rgba(0, 0, 0, 1)">),
        padding: EdgeInsets.symmetric(horizontal: </span>20.0<span style="color: rgba(0, 0, 0, 1)">),
        child: Row(
          spacing: </span>5.0<span style="color: rgba(0, 0, 0, 1)">,
          children: [
            Icon(Icons.history, size: </span>18.0<span style="color: rgba(0, 0, 0, 1)">,),
            Text(</span>'历史对话'<span style="color: rgba(0, 0, 0, 1)">),
            Spacer(),
            SizedBox(
              height: </span>25.0, width: 25.0<span style="color: rgba(0, 0, 0, 1)">,
              child: Transform.translate(
                offset: Offset(</span>3.0, 0<span style="color: rgba(0, 0, 0, 1)">),
                child: IconButton(
                  onPressed: () </span>=&gt;<span style="color: rgba(0, 0, 0, 1)"> handleClear(),
                  tooltip: </span>'清空会话'<span style="color: rgba(0, 0, 0, 1)">,
                  icon: Icon(Icons.delete_sweep_outlined, size: </span>14.0<span style="color: rgba(0, 0, 0, 1)">),
                  padding: EdgeInsets.zero,
                  style: ButtonStyle(backgroundColor: WidgetStateProperty.all(Colors.grey[</span>50<span style="color: rgba(0, 0, 0, 1)">])),
                ),
              )
            )
          ],
        ),
      ),
      Expanded(
        child: Obx(() {
          </span><span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)">(chatStore.sessions.isEmpty) {
            </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> Column(
              spacing: </span>5.0<span style="color: rgba(0, 0, 0, 1)">,
              children: [
                SizedBox(height: </span>20.0<span style="color: rgba(0, 0, 0, 1)">,),
                Image.asset(</span>'assets/images/empty.png', height: 40.0, width: 40.0<span style="color: rgba(0, 0, 0, 1)">,),
                Text(</span>'暂无对话'<span style="color: rgba(0, 0, 0, 1)">, style: TextStyle(color: Colors.black38), overflow: TextOverflow.ellipsis,),
              ],
            );
          }
          </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> ListView.separated(
            padding: EdgeInsets.symmetric(horizontal: </span>10.0<span style="color: rgba(0, 0, 0, 1)">),
            separatorBuilder: (context, index) </span>=&gt; SizedBox(height: 2.0<span style="color: rgba(0, 0, 0, 1)">),
            itemCount: chatStore.sessions.length,
            itemBuilder: (context, index) {
              </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> ...</span>
<span style="color: rgba(0, 0, 0, 1)">            },
          );
        }),
      ),
      Container(
        margin: EdgeInsets.symmetric(vertical: </span>10.0<span style="color: rgba(0, 0, 0, 1)">),
        padding: EdgeInsets.symmetric(horizontal: </span>10.0<span style="color: rgba(0, 0, 0, 1)">),
        child: InkWell(
          borderRadius: BorderRadius.circular(</span>10.0<span style="color: rgba(0, 0, 0, 1)">),
          child: Container(
            padding: EdgeInsets.symmetric(horizontal: </span>10.0, vertical: 5.0<span style="color: rgba(0, 0, 0, 1)">),
            child: Row(
              spacing: </span>5.0<span style="color: rgba(0, 0, 0, 1)">,
              children: [
                Image.asset(</span>'assets/images/avatar.png',height: 30.0,width: 30.0<span style="color: rgba(0, 0, 0, 1)">,fit: BoxFit.cover),
                Text(</span>'Andy'<span style="color: rgba(0, 0, 0, 1)">),
                Spacer(),
                Icon(Icons.arrow_forward_ios_rounded, color: Colors.grey, size: </span>10.0<span style="color: rgba(0, 0, 0, 1)">,)
              ],
            ),
          ),
          onTap: () {
            Get.toNamed(</span>'/setting'<span style="color: rgba(0, 0, 0, 1)">);
          },
        ),
      ),
    ],
  ),
);</span></pre>
</div>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605111652580-1354866121.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605111705211-2082171450.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605111723842-1415226583.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605111745236-489205488.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605111819761-1238005991.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605111833616-553844214.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605111857776-1134660934.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605111906956-1278098530.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605111916833-410781183.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605111924882-1122247900.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605111938036-2114214540.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605111951790-534600220.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605112003778-1116641465.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605112029250-971579160.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605112038681-1115760327.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605112053132-1384264171.png" alt=""></p>
<h3>flutter3 ai对话编辑框</h3>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605112222204-1519983777.png" alt="" loading="lazy"></p>
<p>当窗口最大化，编辑框最大宽度限制在<strong>750px</strong>。</p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605112346072-1087608888.png" alt="" loading="lazy"></p>
<p>编辑框组件封装在components目录下。</p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605112509730-925308911.png" alt="" loading="lazy"></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> Container(
  width: </span><span style="color: rgba(0, 0, 255, 1)">double</span><span style="color: rgba(0, 0, 0, 1)">.infinity,
  padding: EdgeInsets.symmetric(vertical: </span>10.0<span style="color: rgba(0, 0, 0, 1)">),
  child: Column(
    spacing: </span>6.0<span style="color: rgba(0, 0, 0, 1)">,
    children: [
      </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 技能栏</span>
      <span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)"> (widget.skillbar)
      ScrollConfiguration(
        behavior: CustomScrollBehavior(),
        child: SingleChildScrollView(
          scrollDirection: Axis.horizontal,
          padding: EdgeInsets.symmetric(horizontal: </span>15.0<span style="color: rgba(0, 0, 0, 1)">),
          child: Row(
            spacing: </span>4.0<span style="color: rgba(0, 0, 0, 1)">,
            children: [
              ...
            ]
          ),
        ),
      ),
      </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 编辑框</span>
<span style="color: rgba(0, 0, 0, 1)">      Container(
        margin: EdgeInsets.symmetric(horizontal: </span>15.0<span style="color: rgba(0, 0, 0, 1)">),
        padding: EdgeInsets.all(</span>10.0<span style="color: rgba(0, 0, 0, 1)">),
        decoration: BoxDecoration(
          color: Colors.white,
          border: Border.all(color: Colors.grey.withAlpha(</span>100), width: .5<span style="color: rgba(0, 0, 0, 1)">),
          borderRadius: BorderRadius.circular(</span>15.0<span style="color: rgba(0, 0, 0, 1)">),
          boxShadow: [
            BoxShadow(
              color: Colors.black.withAlpha(</span>20<span style="color: rgba(0, 0, 0, 1)">),
              offset: Offset(</span>0.0, 3.0<span style="color: rgba(0, 0, 0, 1)">),
              blurRadius: </span>6.0<span style="color: rgba(0, 0, 0, 1)">,
              spreadRadius: </span>0.0<span style="color: rgba(0, 0, 0, 1)">,
            ),
          ]
        ),
        child: Column(
          spacing: </span>10.0<span style="color: rgba(0, 0, 0, 1)">,
          children: [
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 输入框</span>
<span style="color: rgba(0, 0, 0, 1)">            ConstrainedBox(
              constraints: BoxConstraints(minHeight: </span>48.0, maxHeight: 150.0<span style="color: rgba(0, 0, 0, 1)">),
              child: TextField(
                ...
              ),
            ),
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 操作栏</span>
<span style="color: rgba(0, 0, 0, 1)">            Row(
              spacing: </span>10.0<span style="color: rgba(0, 0, 0, 1)">,
              children: [
                SizedBox(
                  height: </span>30.0<span style="color: rgba(0, 0, 0, 1)">,
                  child: TextButton(
                    onPressed: () {
                      setState(() {
                        isDeep </span>=!<span style="color: rgba(0, 0, 0, 1)"> isDeep;
                      });
                    },
                    style: ButtonStyle(
                      backgroundColor: WidgetStateProperty.all(isDeep </span>? Color(0xFF4F6BFE).withAlpha(30) : Colors.grey[200<span style="color: rgba(0, 0, 0, 1)">]),
                      padding: WidgetStateProperty.all(EdgeInsets.symmetric(horizontal: </span>10.0<span style="color: rgba(0, 0, 0, 1)">)),
                    ),
                    child: Row(
                      spacing: </span>4.0<span style="color: rgba(0, 0, 0, 1)">,
                      children: [
                        Icon(Icons.stream, color: isDeep </span>? Color(0xFF4F6BFE) : Colors.black, size: 18.0<span style="color: rgba(0, 0, 0, 1)">,),
                        Text(</span>'深度思考(R1)', style: TextStyle(color: isDeep ? Color(0xFF4F6BFE) : Colors.black, fontSize: 13.0<span style="color: rgba(0, 0, 0, 1)">),),
                      ],
                    ),
                  ),
                ),
                SizedBox(
                  height: </span>30.0<span style="color: rgba(0, 0, 0, 1)">,
                  child: TextButton(
                    onPressed: () {
                      setState(() {
                        isNetwork </span>=!<span style="color: rgba(0, 0, 0, 1)"> isNetwork;
                      });
                    },
                    style: ButtonStyle(
                      backgroundColor: WidgetStateProperty.all(isNetwork </span>? Color(0xFF4F6BFE).withAlpha(30) : Colors.grey[200<span style="color: rgba(0, 0, 0, 1)">]),
                      padding: WidgetStateProperty.all(EdgeInsets.symmetric(horizontal: </span>10.0<span style="color: rgba(0, 0, 0, 1)">)),
                    ),
                    child: Row(
                      spacing: </span>4.0<span style="color: rgba(0, 0, 0, 1)">,
                      children: [
                        Icon(Icons.travel_explore, color: isNetwork </span>? Color(0xFF4F6BFE) : Colors.black, size: 18.0<span style="color: rgba(0, 0, 0, 1)">,),
                        Text(</span>'联网', style: TextStyle(color: isNetwork ? Color(0xFF4F6BFE) : Colors.black, fontSize: 13.0<span style="color: rgba(0, 0, 0, 1)">),),
                      ],
                    ),
                  ),
                ),
                Spacer(),
                SizedBox(
                  height: </span>30.0<span style="color: rgba(0, 0, 0, 1)">,
                  width: </span>30.0<span style="color: rgba(0, 0, 0, 1)">,
                  child: PopupMenuButton(
                    icon: Icon(Icons.add),
                    padding: EdgeInsets.zero,
                    tooltip: </span>''<span style="color: rgba(0, 0, 0, 1)">,
                    offset: Offset(</span>-35.0, 0<span style="color: rgba(0, 0, 0, 1)">),
                    constraints: BoxConstraints(maxWidth: </span>160<span style="color: rgba(0, 0, 0, 1)">),
                    color: Colors.white,
                    itemBuilder: (BuildContext context) {
                      </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> [
                        PopupMenuItem(value: </span>'camera', height: 40.0, child: Row(spacing: 5.0, children: [Icon(Icons.camera_alt_outlined), Text('拍照识文字'<span style="color: rgba(0, 0, 0, 1)">)],)),
                        PopupMenuItem(value: </span>'image', height: 40.0, child: Row(spacing: 5.0, children: [Icon(Icons.image_outlined), Text('图片识文字'<span style="color: rgba(0, 0, 0, 1)">)],)),
                        PopupMenuItem(value: </span>'file', height: 40.0, child: Row(spacing: 5.0, children: [Icon(Icons.file_present_outlined), Text('文件'<span style="color: rgba(0, 0, 0, 1)">)],)),
                      ];
                    },
                    onSelected: (value) {
                      debugPrint(value);
                    },
                  ),
                ),
                SizedBox(
                  height: </span>30.0<span style="color: rgba(0, 0, 0, 1)">,
                  width: </span>30.0<span style="color: rgba(0, 0, 0, 1)">,
                  child: IconButton(
                    onPressed: disabled </span>? <span style="color: rgba(0, 0, 255, 1)">null</span> : () =&gt;<span style="color: rgba(0, 0, 0, 1)"> handleSubmit(),
                    icon: loading </span>?<span style="color: rgba(0, 0, 0, 1)">
                      SizedBox(height: </span>16.0, width: 16.0, child: CircularProgressIndicator(color: Colors.white, strokeWidth: 2.0<span style="color: rgba(0, 0, 0, 1)">,))
                      :
                      Icon(Icons.send, color: Colors.white, size: </span>18.0<span style="color: rgba(0, 0, 0, 1)">)
                    ,
                    style: ButtonStyle(
                      backgroundColor: WidgetStateProperty.all(disabled </span>? Color(0xFF4F6BFE).withAlpha(100) : Color(0xFF4F6BFE<span style="color: rgba(0, 0, 0, 1)">)),
                      padding: WidgetStateProperty.all(EdgeInsets.zero)
                    ),
                    disabledColor: Colors.red,
                  ),
                )
              ],
            ),
          ],
        ),
      ),
    ],
  )
);</span></pre>
</div>
<h3>flutter3集成deepseek api流输出</h3>
<p><span style="font-size: 12px">flutter通过dio请求deepseek对话大模型，实现stream流式输出打字。</span></p>
<p><span style="font-size: 12px"><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605113213605-1572176673.gif" alt=""></span></p>
<div class="cnblogs_code">
<pre>final response =<span style="color: rgba(0, 0, 0, 1)"> await dio.post(
  </span>'$baseURL/v1/chat/completions'<span style="color: rgba(0, 0, 0, 1)">,
  options: Options(
    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 响应超时</span>
    receiveTimeout: const Duration(seconds: 60<span style="color: rgba(0, 0, 0, 1)">),
    headers: {
      </span>"Content-Type": "application/json"<span style="color: rgba(0, 0, 0, 1)">,
      </span>"Authorization": "Bearer $apiKEY"<span style="color: rgba(0, 0, 0, 1)">,
    },
    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 设置响应类型为流式响应</span>
<span style="color: rgba(0, 0, 0, 1)">    responseType: ResponseType.stream,
  ),
  data: {
    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 多轮会话</span>
    'messages': widget.multiConversation ? chatStore.historySession : [{'role': 'user', 'content'<span style="color: rgba(0, 0, 0, 1)">: editorValue}],
    </span>'model': 'deepseek-chat', <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> deepseek-chat对话模型 deepseek-reasoner推理模型</span>
    'stream': <span style="color: rgba(0, 0, 255, 1)">true</span>, <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 流式输出</span>
    'max_tokens': 8192, <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 限制一次请求中模型生成 completion 的最大 token 数(默认使用 4096)</span>
    'temperature': 0.4, <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 严谨采样 越低越严谨(默认1)</span>
<span style="color: rgba(0, 0, 0, 1)">  }
);</span></pre>
</div>
<h3>flutter3自定义托盘管理</h3>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202506/1289798-20250605113306064-571902207.gif" alt=""></p>
<p><span style="font-size: 12px">项目中采用&nbsp;<span class="cnblogs_code">system_tray</span>&nbsp;组件来自定义系统托盘图标。</span></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 创建系统托盘图标</span>
Future&lt;<span style="color: rgba(0, 0, 255, 1)">void</span>&gt;<span style="color: rgba(0, 0, 0, 1)"> initSystemTray() async {
  String trayIco </span>= 'assets/images/tray.ico'<span style="color: rgba(0, 0, 0, 1)">;
  SystemTray systemTray </span>=<span style="color: rgba(0, 0, 0, 1)"> SystemTray();

  </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 初始化系统托盘</span>
<span style="color: rgba(0, 0, 0, 1)">  await systemTray.initSystemTray(
    title: </span>'system-tray'<span style="color: rgba(0, 0, 0, 1)">,
    iconPath: trayIco,
  );

  </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 右键菜单</span>
  final Menu menu =<span style="color: rgba(0, 0, 0, 1)"> Menu();
  await menu.buildFrom([
    MenuItemLabel(label: </span>'打开主界面', image: 'assets/images/tray.ico', onClicked: (menuItem) async =&gt;<span style="color: rgba(0, 0, 0, 1)"> await windowManager.show()),
    MenuItemLabel(label: </span>'隐藏窗口', image: 'assets/images/tray.ico', onClicked: (menuItem) async =&gt;<span style="color: rgba(0, 0, 0, 1)"> await windowManager.hide()),
    MenuItemLabel(label: </span>'设置中心', image: 'assets/images/tray.ico', onClicked: (menuItem) =&gt; Get.toNamed('/setting'<span style="color: rgba(0, 0, 0, 1)">)),
    MenuItemLabel(label: </span>'锁屏', image: 'assets/images/tray.ico', onClicked: (menuItem) =&gt;<span style="color: rgba(0, 0, 0, 1)"> {}),
    MenuItemLabel(label: </span>'关闭程序并退出', image: 'assets/images/tray.ico', onClicked: (menuItem) async =&gt;<span style="color: rgba(0, 0, 0, 1)"> await windowManager.destroy()),
  ]);
  await systemTray.setContextMenu(menu);

  </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 右键事件</span>
<span style="color: rgba(0, 0, 0, 1)">  systemTray.registerSystemTrayEventHandler((eventName) async {
    debugPrint(</span>'eventName: $eventName'<span style="color: rgba(0, 0, 0, 1)">);
    </span><span style="color: rgba(0, 0, 255, 1)">if</span> (eventName ==<span style="color: rgba(0, 0, 0, 1)"> kSystemTrayEventClick) {
      Platform.isWindows </span>?<span style="color: rgba(0, 0, 0, 1)"> await windowManager.show() : systemTray.popUpContextMenu();
    } </span><span style="color: rgba(0, 0, 255, 1)">else</span> <span style="color: rgba(0, 0, 255, 1)">if</span> (eventName ==<span style="color: rgba(0, 0, 0, 1)"> kSystemTrayEventRightClick) {
      Platform.isWindows </span>?<span style="color: rgba(0, 0, 0, 1)"> systemTray.popUpContextMenu() : await windowManager.show();
    }
  });
}</span></pre>
</div>
<p>好了，以上就是Flutter3.32接入DeepSeek搭建客户端ai流式对话项目的一些分享，希望对大家有所帮助~<span style="font-family: &quot;Helvetica Neue&quot;, Helvetica, Verdana, Arial, sans-serif">💪</span></p>
<p><strong>附上几个最新实战项目案例</strong></p>
<blockquote>
<p><span style="font-size: 12px"><a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoyan2017/p/18894117" target="_blank">flutter3-deepseek流式AI模板|Flutter3.27+Dio+DeepSeeek聊天ai助手</a></span></p>
<p><span style="font-size: 12px"><a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoyan2017/p/18853514" target="_blank">Uniapp-DeepSeek跨三端AI助手|uniapp+vue3+deepseek-v3流式ai聊天模板</a></span></p>
<p><span style="font-size: 12px"><a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoyan2017/p/18795796" target="_blank">vue3-webseek网页版AI问答|Vite6+DeepSeek+Arco流式ai聊天打字效果</a></span></p>
<p><span style="font-size: 12px"><a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoyan2017/p/18830611" target="_blank">Electron35-DeepSeek桌面端AI系统|vue3.5+electron+arco客户端ai模板</a></span></p>
<p><span style="font-size: 12px"><a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoyan2017/p/18773480" target="_blank">Vue3-DeepSeek-Chat流式AI对话|vite6+vant4+deepseek智能ai聊天助手</a></span></p>
<p><span style="font-size: 12px"><a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoyan2017/p/18700875" target="_blank">flutter3-dymall仿抖音直播商城|Flutter3.27短视频+直播+聊天App实例</a></span></p>
<p><span style="font-size: 12px"><a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoyan2017/p/18048244" target="_blank">flutter3-winchat桌面端聊天实例|Flutter3+Dart3+Getx仿微信Exe程序</a></span></p>
<p><span style="font-size: 12px"><a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoyan2017/p/18618163" target="_blank">Tauri2.0-Vue3OS桌面端os平台|tauri2+vite6+arco电脑版OS管理系统</a></span></p>
<p><span style="font-size: 12px"><a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoyan2017/p/18467237" target="_blank">tauri2.0-admin桌面端后台系统|Tauri2+Vite5+ElementPlus管理后台EXE程序</a></span></p>
<p><span style="font-size: 12px"><a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoyan2017/p/18290962" target="_blank">Vite5+Electron聊天室|electron31跨平台仿微信EXE客户端|vue3聊天程序</a></span></p>
<p><span style="font-size: 12px"><a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoyan2017/p/18165578" target="_blank">uniapp+vue3聊天室|uni-app+vite4+uv-ui跨端仿微信app聊天语音/朋友圈</a></span></p>
</blockquote>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202403/1289798-20240302010612930-1508501963.gif" alt="" width="150" height="150" class="medium-zoom-image"></p>
</div>
<div id="MySignature" role="contentinfo">
    本文为博主原创文章，未经博主允许不得转载，欢迎大家一起交流 QQ（282310962） wx（xy190310）
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.023671456291666667" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-06-05 11:50">2025-06-05 11:50</span>&nbsp;
<a href="https://www.cnblogs.com/xiaoyan2017">xiaoyan2017</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18912059);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18912059', targetLink: 'https://www.cnblogs.com/xiaoyan2017/p/18912059', title: 'flutter3-winseek客户端AI实例|Flutter3.32+DeepSeek流式ai对话模板Exe' })">举报</a>
</div>
        