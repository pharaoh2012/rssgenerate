
		<h1 class="postTitle">
			<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chingho/p/18728308" title="发布于 2025-02-21 09:34">
    <span role="heading" aria-level="2">一文掌握DeepSeek本地部署+Page Assist浏览器插件+C#接口调用+局域网访问！全攻略来了！</span>
    

</a>

		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p><strong>大家好，我是编程乐趣。</strong></p>
<p>DeepSeek大火，网络上也看到很多人分享本地部署心得。但想要更细了解，还是要自己本地部署一次。</p>
<p>我这次部署目标，就是在局域网服务器部署，并让局域网其他电脑可以直接访问。</p>
<p>选择方案也是当前非常流行的：<strong>Ollma+Page Assist浏览器插件。</strong></p>
<p><strong>一、安装Ollama</strong></p>
<p>Ollama作为本地部署大模型的方案，还是非常不错的。</p>
<p>1、跨平台：支持 macOS、Linux 和 Windows。</p>
<p>2、市面主流开源模型都支持：包括Llama 3.3, DeepSeek-R1, Phi-4, Gemma 2等54个开源模型。</p>
<p>3、REST API：Ollama提供对外API能力，想要自己开发客户端、或者集成到应用系统都是非常方便的。</p>
<p>4、生态完善：众多开源Web项目、开源桌面软件支持Ollama，还有终端工具、移动应用、开发工具库等开源项目。</p>
<p><strong>下载地址：<a href="https://ollama.com/download" target="_blank" rel="noopener nofollow">https://ollama.com/download</a></strong></p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202502/93789-20250221093219444-1915897060.png" alt="图片" loading="lazy"></p>
<p>安装Ollama还是比较简单的，下载安装包后，直接安装就行。我这边选择的是Windows版本。</p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202502/93789-20250221093219412-1723149416.png" alt="图片" loading="lazy"></p>
<p><strong>二、修改Ollama默认配置</strong></p>
<p><strong>Ollama安装后，我们还需要根据需求修改对应的配置。</strong></p>
<p>我们使用Ollama时，需要从网络下载大模型，默认存储在C盘，很容易导致C盘空间不足。</p>
<p>可以通过<strong>修改系统环境变量，来修改配置。</strong></p>
<p>添加环境变量：<strong>OLLAMA_MODELS</strong>，并指定模型路径。</p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202502/93789-20250221093219471-81572653.png" alt="图片" loading="lazy"></p>
<p>添加环境变量：<strong>OLLAMA_HOST</strong>，并允许外部访问，这边填写：<strong>0.0.0.0，代表允许任何电脑访问。</strong></p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202502/93789-20250221093219461-1735057106.png" alt="图片" loading="lazy"></p>
<p><strong>修改配置后，记得重启Ollama。</strong></p>
<p>我暂时就需要这两个，其他更多配置信息，大家可以查看官方文档：</p>
<p><strong><a href="https://github.com/ollama/ollama/tree/main/docs" target="_blank" rel="noopener nofollow">https://github.com/ollama/ollama/tree/main/docs</a></strong></p>
<p><strong>三、下载并安装模型</strong></p>
<p>Ollama支持模型非常多，我们这边选择的是：<strong>deepseek-r1</strong>。</p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202502/93789-20250221093219424-688809007.png" alt="图片" loading="lazy"></p>
<p>选择对应的模型，我们就可以看到模型的相信介绍、各种参数的模型。</p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202502/93789-20250221093219503-2071324533.png" alt="图片" loading="lazy"></p>
<p>各个版本模型对硬件要求，官方没有明确的说明，根据网友分享的大概整理如下，<strong>大家可以根据自己的电脑配置选择模型。</strong></p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202502/93789-20250221093219828-628578914.png" alt="图片" loading="lazy"></p>
<p><strong>安装模型也很简单，选择对应版本的模型，拷贝命令就行。</strong></p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202502/93789-20250221093219708-356732369.png" alt="图片" loading="lazy"></p>
<p>比如安装7b的命令如下：</p>
<pre><code>ollama&nbsp;run&nbsp;deepseek-r1:7b
</code></pre>
<p>在命令窗口输入以上命令，就会自动下载。</p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202502/93789-20250221093219701-1957092350.png" alt="图片" loading="lazy"></p>
<p>耐心等待，等出现success就代表安装成功了。</p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202502/93789-20250221093219709-256713143.png" alt="图片" loading="lazy"></p>
<p>安装成功后，我们就可以直接在命令窗口进行使用了。</p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202502/93789-20250221093219733-186151635.png" alt="图片" loading="lazy"></p>
<p>同时在浏览器访问：<strong><a href="http://127.0.0.1:11434" target="_blank" rel="noopener nofollow">http://127.0.0.1:11434</a></strong>，有如下提示也代表启动成功了。</p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202502/93789-20250221093219740-40486523.png" alt="图片" loading="lazy"></p>
<p><strong>四、API调用</strong></p>
<p>Ollama也为我们提供API接口功能，想要自己开发客户端、或者集成到应用系统都是非常方便的。</p>
<p>Ollama相关生态也非常完善，我们直接使用C#版本Ollama的SDK，就可以快速开发，下面一起看看简单例子。</p>
<p><strong>1、安装依赖包：OllamaSharp</strong></p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202502/93789-20250221093219792-1092402657.png" alt="图片" loading="lazy"></p>
<p><strong>2、示例代码</strong></p>
<pre><code>using Microsoft.Extensions.AI;
using OllamaSharp;

Uri modelEndpoint = new("http://localhost:11434");

//指定模型
string modelName = "deepseek-r1:14b";

var chatClient = new OllamaApiClient(modelEndpoint, modelName);

//提问
string question = "我是编程小白，应该如何学习编程？";
var response = chatClient.GetStreamingResponseAsync(question);

Console.WriteLine($"&gt;&gt;&gt; 你: {question}");
Console.Write("&gt;&gt;&gt;");
Console.WriteLine("&gt;&gt;&gt; DeepSeek: ");

//输出
await foreach (var item in response)
{
    Console.Write(item);
}

Console.ReadLine();
</code></pre>
<p><strong>3、效果如下</strong></p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202502/93789-20250221093219780-747292177.png" alt="图片" loading="lazy"></p>
<p>Ollama相关的API接口，也可以查看官方文档。</p>
<p><strong><a href="https://github.com/ollama/ollama/blob/main/docs/api.md" target="_blank" rel="noopener nofollow">https://github.com/ollama/ollama/blob/main/docs/api.md</a></strong></p>
<p><strong>五、Ollama的客户端</strong></p>
<p>在命令窗口使用DeepSeek，肯定是不方便的。自己开发客户端，又需要大量时间。</p>
<p><strong>Ollama的客户端是非常众多的，而且都是开源的项目，包括：Web网页版本、桌面应用、浏览器插件、移动端APP等。</strong></p>
<p><strong>每一个客户端提供的功能也非常丰富，并且都不一样，包括：OCR图片识别、语音识别、文档解析等。</strong></p>
<p>大家可以根据自己的需求自行选择。</p>
<p><strong><a href="https://github.com/ollama/ollama" target="_blank" rel="noopener nofollow">https://github.com/ollama/ollama</a></strong></p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202502/93789-20250221093219772-1457779007.png" alt="图片" loading="lazy"></p>
<p><strong>六、Page Assist浏览器插件</strong></p>
<p>我这边的是选择浏览器插件，比较灵活。</p>
<p>在Chrome应用商店，安装浏览器插件：<strong>Page Assist。</strong></p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202502/93789-20250221093219766-2077047487.png" alt="图片" loading="lazy"></p>
<p>安装后打开插件，把语音识别、界面语音修改为中文，方便我们使用。</p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202502/93789-20250221093219770-918358626.png" alt="图片" loading="lazy"></p>
<p>修改Ollama的配置：</p>
<p>1、Ollama URL修改为Ollama服务器的地址。</p>
<p>2、在Ollama 高级配置中，启用：启用或禁用自定义来源 URL，这样才能访问。</p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202502/93789-20250221093219716-1858572726.png" alt="图片" loading="lazy"></p>
<p>Ollama服务器需要关闭防火墙，或者在入站规则里开启端口：11434。</p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202502/93789-20250221093219760-268946388.png" alt="图片" loading="lazy"></p>
<p>完成以上配置后，我们就可以使用了。</p>
<p>使用的时候，选择对应的模型版本就可以了。</p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202502/93789-20250221093219902-315001039.png" alt="图片" loading="lazy"></p>
<p>好了，今天就分享到这边！</p>
<p>- End -</p>
<p>文章首发于公众号【编程乐趣】，欢迎大家关注。<br>
<img src="https://img2020.cnblogs.com/blog/93789/202105/93789-20210520132522800-1532644404.jpg" alt="图片" loading="lazy"></p>

</div>
<div class="clear"></div>

		</div>
		<div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.05016505475925926" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-21 09:35">2025-02-21 09:34</span>&nbsp;
<a href="https://www.cnblogs.com/chingho">chingho</a>&nbsp;
阅读(<span id="post_view_count">88</span>)&nbsp;
评论(<span id="post_comment_count">1</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18728308" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18728308);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18728308', targetLink: 'https://www.cnblogs.com/chingho/p/18728308', title: '一文掌握DeepSeek本地部署+Page Assist浏览器插件+C#接口调用+局域网访问！全攻略来了！' })">举报</a>
</div>
	