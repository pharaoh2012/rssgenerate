
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/InCerry/p/-/dotnet_week_25_4_1" title="发布于 2025-04-19 15:15">
    <span role="heading" aria-level="2">.NET周刊【4月第1期 2025-04-06】</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="国内文章">国内文章</h2>
<h3 id="35岁程序员的中年求职记四次碰壁后的深度反思">35岁程序员的中年求职记：四次碰壁后的深度反思</h3>
<p><a href="https://www.cnblogs.com/minily/p/18803259" target="_blank">https://www.cnblogs.com/minily/p/18803259</a></p>
<p>文章探讨程序员的35岁危机，指出这一问题确实存在，但也有其夸大的成分。35岁程序员通常具备丰富经验，能够更高效地解决复杂问题。文章分享了作者在长沙求职的经历，强调技术能力的重要性，尤其是在细分领域的专业性。同时，面试体验展示了企业对中年程序员的不同看法，部分企业更注重技术硬实力，导致中年程序员面临更高的压力。最后，结尾部分提及了对岗位的适配性和行业发展前景的观察。</p>
<h3 id="正在开发的net-sql拼写神器">正在开发的.net sql拼写神器</h3>
<p><a href="https://www.cnblogs.com/xiangji/p/18806891" target="_blank">https://www.cnblogs.com/xiangji/p/18806891</a></p>
<p>本文介绍了一个高性能的.NET SQL拼写工具，支持多种数据库和自定义方言。该工具以StringBuilder拼接SQL，适用于Dapper和ADO.NET。提供两种查询模式：SQL模式和逻辑模式。SQL模式支持原生SQL查询、逻辑查询、GroupBy和联表，逻辑模式通过逻辑运算(与、或)进行查询，执行速度更快且内存消耗低。整体功能强大，适合开发者使用。</p>
<h3 id="cursor预测程序员行业倒计时cto应做好50裁员计划">Cursor预测程序员行业倒计时：CTO应做好50%裁员计划</h3>
<p><a href="https://www.cnblogs.com/yexiaochai/p/18804067" target="_blank">https://www.cnblogs.com/yexiaochai/p/18804067</a></p>
<p>本文探讨了AI在代码生成领域的应用，特别是Cursor的崛起。Cursor是一款智能代码编辑器，通过开源生态，利用丰富的代码数据提升AI能力。开源社区协作提高了代码质量，而其他领域的数据获取却各有难题。Cursor提供自然语言生成代码、实时错误诊断等功能，显著提高开发效率。本文还描述了Cursor的融资情况与实际开发案例，展示如何运用Cursor满足技术要求。此外，介绍了Cursor的三种工作模式：Agent、Ask和Edit，以适应不同的开发需求。</p>
<h3 id="如何在-net-中-使用-antlr4">如何在 .NET 中 使用 ANTLR4</h3>
<p><a href="https://www.cnblogs.com/eventhorizon/p/18803075" target="_blank">https://www.cnblogs.com/eventhorizon/p/18803075</a></p>
<p>本文介绍如何在.NET环境中使用ANTLR4构建语法分析器。内容涵盖ANTLR4的安装、语法规则编写、语法分析器生成及使用。ANTLR4是强大的语法分析器生成工具，能生成多种语言的分析器。文章简要阐述语法分析的基础概念，包括词法分析和语法分析，并用四则运算示例演示ANTLR4的基本用法。文中的代码示例和相关资源均已上传至GitHub，供读者参考和使用。</p>
<h3 id="10年-net-coder-心语--继承的思维从思维模式到架构设计的深度解析">10年+ .NET Coder 心语 ── 继承的思维：从思维模式到架构设计的深度解析</h3>
<p><a href="https://www.cnblogs.com/code-daily/p/18801661" target="_blank">https://www.cnblogs.com/code-daily/p/18801661</a></p>
<p>本文探讨了面向对象编程中的继承概念，从生活实例分析继承的实际应用。强调从细节出发抽象共性，以及从整体框架逐步细化设计的重要性。文章讨论了‘is-a’关系在继承中的核心角色，倡导关注未来扩展性，借助抽象方法提升灵活性。还指出过深的继承层次会导致代码维护困难，建议保持简洁。最后提出组合(has-a)作为继承的替代方案，以解决某些特性表述问题。对软件开发者具有指导意义。</p>
<h3 id="使用mcp-c-sdk开发mcp-server--client">使用MCP C# SDK开发MCP Server + Client</h3>
<p><a href="https://www.cnblogs.com/edisonchou/p/-/introduction-to-mcp-csharp-sdk" target="_blank">https://www.cnblogs.com/edisonchou/p/-/introduction-to-mcp-csharp-sdk</a></p>
<p>本文介绍了模型上下文协议(MCP)的功能和使用。MCP作为一种开源标准协议，简化了AI模型与外部数据源和工具的连接。文章详细描述了MCP的工作原理，包括客户端和服务端之间的通信方式，以及如何通过MCP C# SDK创建MCP Server的具体步骤。示例代码展示了如何定义和使用工具，强调了MCP在开发AI应用中的便捷性。MCP的出现有助于提升AI模型的实用性，期待其在未来的推广应用。</p>
<h3 id="抽离blazorwebview中的net与javascript的互操作库">抽离BlazorWebview中的.Net与Javascript的互操作库</h3>
<p><a href="https://www.cnblogs.com/hkfyf/p/18804314" target="_blank">https://www.cnblogs.com/hkfyf/p/18804314</a></p>
<p>本文讨论了在Blazor中实现C#与JavaScript的互操作，而无需加载整个Blazor库。作者研究了asp.net core相关源码，并将Microsoft.JSInterop移植到.Net Framework。文章详细介绍了如何在WPF和MAUI安卓下使用带互操作的WebView，包括安装步骤、命名空间引入及XAML使用示例，同时提供了项目配置的具体要求。通过使用Microsoft.JSInterop和前端的@microsoft/dotnet-js-interop包，可实现JavaScript和C#之间的消息传递，增强了Blazor开发的灵活性和便利性。</p>
<h3 id="mqtt协议发布和订阅的实现一步步带你实现发布订阅服务">MQTT协议发布和订阅的实现，一步步带你实现发布订阅服务。</h3>
<p><a href="https://www.cnblogs.com/caoruipeng/p/18807042" target="_blank">https://www.cnblogs.com/caoruipeng/p/18807042</a></p>
<p>MQTT协议是基于TCP的应用层协议，主要用于物联网设备之间通信。它采用客户端-服务端架构，支持发布/订阅模式，适合低带宽和不稳定网络。MQTT优点包括轻量级、支持多种服务质量、持久会话等，但也存在安全性和复杂性问题。适用场景包括物联网、移动应用、远程监控等。MQTT的核心角色有发布者、代理服务器和订阅者。C#中，微软通过MQTTnet库实现MQTT协议，提供MqttServer和MqttClient类来启动服务器和处理客户端通信。</p>
<h3 id="net-core-利用openobserve-实现opentelemetry可观测性标准logstracesmetrics">.net core-利用OpenObserve 实现OpenTelemetry可观测性标准(Logs，Traces，Metrics)</h3>
<p><a href="https://www.cnblogs.com/honglinjia/p/18803657" target="_blank">https://www.cnblogs.com/honglinjia/p/18803657</a></p>
<p>OpenObserve 是一个开源可观测性平台，旨在替代 Elasticsearch 和 Datadog。本文介绍了如何搭建 OpenObserve，使用 Docker 进行本地部署，并提供了默认的登录信息。文章还详细说明了在 .NET Core 中使用 OpenTelemetry 进行日志配置的方法，包括所需的 NuGet 包和代码实现。通过示例代码，读者可了解如何设置日志记录、环境、服务版本等，实现数据接收和监控。</p>
<h3 id="c-office-com-加载项">C# Office COM 加载项</h3>
<p><a href="https://www.cnblogs.com/BluePointLilac/p/18802868" target="_blank">https://www.cnblogs.com/BluePointLilac/p/18802868</a></p>
<p>本文介绍了OfficeCOM加载项的开发流程。首先，文章强调实现IDTExtensibility2接口的重要性，并提到如何添加COM引用和处理与WPS的兼容性。接着，提供了C#代码示例，说明如何定义Office加载项类，并指出ProgID的命名规则及其与类的匹配关系。文章还详细描述了如何注册COM组件，包括使用RegAsm.exe注册和在注册表中添加信息以提升兼容性。文中包含的注意事项和代码示例对开发者非常实用，使得读者能够更快速地上手开发OfficeCOM加载项。</p>
<h3 id="spring-ai与deepseek实战三打造企业知识库">Spring AI与DeepSeek实战三：打造企业知识库</h3>
<p><a href="https://www.cnblogs.com/zlt2000/p/18801665" target="_blank">https://www.cnblogs.com/zlt2000/p/18801665</a></p>
<p>本文讨论了企业应用集成大语言模型(LLM)的两大痛点，包括知识局限性和生成幻觉。为解决这两大问题，建议使用RAG技术，结合信息检索和LLM，动态检索相关信息提升回答准确性。文章以AI智能搜索为场景，基于Spring AI与RAG的结合，构建实时知识库，实现智能搜索及个性化推荐。同时，讨论了向量数据库与知识图谱的选择、向量模型的构建核心代码以及Spring AI的应用。这为开发者提供了实用且深度的技术指导。</p>
<h3 id="wpf关于设备无关性的理解">wpf关于设备无关性的理解</h3>
<p><a href="https://www.cnblogs.com/HelloQLQ/p/18803102" target="_blank">https://www.cnblogs.com/HelloQLQ/p/18803102</a></p>
<p>WPF的像素单位与系统DPI有关，当前DPI为96时，1单位等于1px。计算DPI的方法为显示器分辨率和对角线尺寸的平方根除以对角线尺寸。即使DPI变化，按钮的物理尺寸保持1英寸。WinForm中设计的控件在不同DPI上会变化，因分辨率不同，96像素在85DPI系统上看起来更长。Windows通过放大DPI功能来调整显示，使得高DPI系统下控件和字体接近于标准DPI下的大小。总体来说，WPF维持了设备无关性，确保控件在各种DPI下的物理尺寸一致。</p>
<h3 id="c窗口过程消息处理wndproc">C#&nbsp;窗口过程消息处理&nbsp;WndProc</h3>
<p><a href="https://www.cnblogs.com/BluePointLilac/p/18802906" target="_blank">https://www.cnblogs.com/BluePointLilac/p/18802906</a></p>
<p>本文讨论了C#中WinForm和WPF的窗口消息处理机制。通过重写WndProc方法，开发者可以自定义处理特定消息，例如阻止窗口通过关闭按钮关闭。还介绍了WPF中的HwndSource和IMessageFilter接口，以捕获和预处理消息。示例代码展示了如何实现这些功能，提升了对消息循环的控制能力。作者强调使用消息过滤器时要注意性能问题。</p>
<h3 id="botsharp--mcp-三步实现智能体开发">BotSharp + MCP 三步实现智能体开发</h3>
<p><a href="https://www.cnblogs.com/shanyou/p/18809051" target="_blank">https://www.cnblogs.com/shanyou/p/18809051</a></p>
<p>MCP模型上下文协议是一种标准化接口，允许AI模型与外部数据和工具连接，实现数据访问和任务处理。MCP解决数据孤岛问题，以统一协议连接多种数据源，提升AI模型的应用价值。文章描述了MCP与.NET的结合，详细介绍了客户端和服务器的结构，强调MCP在ASP.NET Core中的实现，提供实战案例，如Pizza价格查询、下订单和支付功能的开发。使用MCP C# SDK简化集成，使开发更高效。</p>
<h3 id="设计模式脉络">设计模式脉络</h3>
<p><a href="https://www.cnblogs.com/xingchenheyue/p/18787234" target="_blank">https://www.cnblogs.com/xingchenheyue/p/18787234</a></p>
<p>软件的可扩展性是衡量其生命力的重要标准。可扩展性允许软件在未来业务变更时，做小范围修改以支持新需求。面向对象的方法提供了优越的扩展能力，通过类和对象的封装实现功能的稳定性与变化的灵活性。抽象类和接口则进一步提升了可扩展性，允许在类基础上舍去易变因素。设计模式作为实践经验的总结，强调如何运用这些抽象类，提高软件的可扩展性。后续文章将介绍23种设计模式及其内在联系，帮助开发者更好地理解和应用这些原则。</p>
<h3 id="分享-3-款基于-net-开源且免费的远程桌面工具">分享 3 款基于 .NET 开源且免费的远程桌面工具</h3>
<p><a href="https://www.cnblogs.com/Can-daydayup/p/18810585" target="_blank">https://www.cnblogs.com/Can-daydayup/p/18810585</a></p>
<p>本文介绍了三款基于.NET的开源远程桌面工具，分别是1Remote、mRemoteNG和Quasar。这些工具免费且功能强大，旨在提升远程工作和学习的效率。1Remote支持多种协议，适合快速开启远程会话；mRemoteNG提供标签式界面，支持多种语言，可以同时管理多个连接；Quasar则定位为轻量级管理工具，适用于用户支持及日常管理。同时，推荐关注C#/.NET领域的优秀项目和框架以便及时掌握动态。</p>
<h3 id="botsharp-50-mcp迈向更开放的ai-agent框架">BotSharp 5.0 MCP：迈向更开放的AI Agent框架</h3>
<p><a href="https://www.cnblogs.com/shanyou/p/18809988" target="_blank">https://www.cnblogs.com/shanyou/p/18809988</a></p>
<p>随着人工智能的发展，BotSharp作为一个功能强大的开源项目，专注于构建可定制的多智能体解决方案。其模块化架构和丰富插件生态为开发者提供了灵活性。BotSharp 5.0更新了MCP(Model Context Protocol)，增强了在.NET技术栈下的AI代理开发能力。新特性包括基于SDK的深度集成、安全通信和企业级开发优化，适合高合规性需求如金融和医疗。此版本显著降低了开发难度，提升了智能体间的协作能力，标志着对AI通信协议的标准化进程，为开发者带来更多可能性。未来，BotSharp将继续演进，以满足日益增长的AI应用需求。</p>
<h3 id="帮客户解决基于surging的物流速运网关内存泄漏问题">帮客户解决基于surging的物流速运网关内存泄漏问题</h3>
<p><a href="https://www.cnblogs.com/fanliang11/p/18806262" target="_blank">https://www.cnblogs.com/fanliang11/p/18806262</a></p>
<p>本文探讨了企业客户在线环境中遇到的内存无法释放的问题。通过分析，发现线程阻塞和消息积压是主要原因。文章详细说明了使用基于.NET6.0的surging微服务引擎开发的木舟物联网平台的功能，以及在调试过程中如何通过环境变量优化内存使用。作者给出了具体的代码修改建议，以提高系统性能。最后，作者提到运行结果和后续收入期待。</p>
<h3 id="c-socket教程入门socket的使用方法附可执行demo">C# Socket教程入门，Socket的使用方法，附可执行Demo</h3>
<p><a href="https://www.cnblogs.com/justin-Y/p/18801496" target="_blank">https://www.cnblogs.com/justin-Y/p/18801496</a></p>
<p>本文章介绍了如何在C#中使用Socket实现服务器与客户端的连接。文章分为服务端和客户端两部分，详细列举了创建Socket、绑定、监听及接受连接的过程。服务端使用serverSocket监听客户端请求，客户端通过clientSocket进行连接。文章通过具体的C#代码示例演示了如何配置Socket以及进行信息的发送与接收，结构清晰，并提供操作步骤。此外，文中引用了微软的官方文档作为参考，确保了信息的准确性和权威性。</p>
<h3 id="由-mcp-官方推出的-c-sdk使-net-应用程序服务和库能够快速实现与-mcp-客户端和服务器交互">由 MCP 官方推出的 C# SDK，使 .NET 应用程序、服务和库能够快速实现与 MCP 客户端和服务器交互！</h3>
<p><a href="https://www.cnblogs.com/Can-daydayup/p/18811795" target="_blank">https://www.cnblogs.com/Can-daydayup/p/18811795</a></p>
<p>本文介绍了MCP C# SDK，这是由MCP官方推出的C#软件开发工具包，旨在帮助.NET应用程序、服务和库与MCP客户端和服务器进行快速交互。MCP，即模型上下文协议，提供一种标准化的方式，为大型语言模型(LLMs)提供上下文信息。该协议具有良好的扩展性，支持多种传输类型，确保不同服务之间的兼容性。文章还提供了MCP的源代码和安装指南，鼓励开发者参与和支持开源项目。</p>
<h3 id="mysurvey-问卷调查-一个简单的biwenquickapi示例项目">MySurvey 问卷调查, 一个简单的Biwen.QuickApi示例项目</h3>
<p><a href="https://www.cnblogs.com/vipwan/p/18808244" target="_blank">https://www.cnblogs.com/vipwan/p/18808244</a></p>
<p>MySurvey 项目是基于 Biwen.QuickApi 库构建的问卷调查系统示例，展示如何快速开发现代 Web API。Biwen.QuickApi 是一个 .NET Web API 微型框架，支持快速定义 API 路由，自动生成 OpenAPI 文档，内置请求验证和响应处理。项目通过特性定义 API，不仅集成依赖注入，还支持中间件扩展，易于使用。目的是演示 Biwen.QuickApi 的实际应用，提供 RESTful API 和复杂业务逻辑的处理，确保 API 的安全性与可维护性，并集成生态系统组件。部署简单，适合开发者学习与实践。</p>
<h3 id="shadowsql之借dapper打造高性能orm及百变魔法">ShadowSql之借Dapper打造高性能ORM及百变魔法</h3>
<p><a href="https://www.cnblogs.com/xiangji/p/18808611" target="_blank">https://www.cnblogs.com/xiangji/p/18808611</a></p>
<p>本文介绍了ShadowSql和Dapper的结合，旨在提升ORM性能。首先配置Dapper执行器，通过ISqlEngine接口支持多种数据库。接着提供了读取整张表的示例，并展示了用SqlQuery和Query进行数据查询的不同方式。文章通过具体代码实例展示了如何使用Query和执行器，实现灵活的SQL查询和优化数据库操作。整体内容简洁明了，技术性强，具有较高的实用性和针对性。</p>
<h3 id="使用-autogen-studio-打造你的私有团队">使用 AutoGen Studio 打造你的私有团队</h3>
<p><a href="https://www.cnblogs.com/kklldog/p/18811189/auto-gen-studio-team" target="_blank">https://www.cnblogs.com/kklldog/p/18811189/auto-gen-studio-team</a></p>
<p>AI Agent是今年的热门概念，正在改变人机交互方式。微软的Autogen因其灵活性迅速获得关注，能够高效整合多个AI Agent，简化智能协作。Autogen是一种框架，用于利用多个代理开发大型语言模型应用，生成的代理能够执行复杂任务。Autogen Studio是微软的低代码工具，简化了多智能体应用的构建。文中介绍了如何使用Autogen Studio模拟软件开发团队，创建前端和后端开发者Agent，并定义任务如设计登录界面。最后，团队成员协同工作，成功创建了一个web服务，展示了前端设计效果。</p>
<h3 id="shadowsql之功能简介">ShadowSql之功能简介</h3>
<p><a href="https://www.cnblogs.com/xiangji/p/18807075" target="_blank">https://www.cnblogs.com/xiangji/p/18807075</a></p>
<p>ShadowSql概述其功能，主要包括数据表管理和SQL语句构建。框架支持插入、删除、更新和选择操作。Table负责映射，而DB管理表。AliasTable用于分辨联表和子查询的字段。TableView表示表或查询视图，SqlQuery和Query提供查询接口，支持逻辑运算。Cursor用于数据分页，Select和SelectFields用于筛选数据。此技术涵盖了SQL操作的复杂性，但仍需完善使用示例，以帮助理解。</p>
<h2 id="主题">主题</h2>
<h3 id="net-和-net-framework-2025-年-4-月服务版本更新---net-博客">.NET 和 .NET Framework 2025 年 4 月服务版本更新 - .NET 博客</h3>
<p><a href="https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-april-2025-servicing-updates/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-april-2025-servicing-updates/</a></p>
<p>.NET 8.0.15 和 9.0.4 已作为 2025 年 4 月的 .NET 和 .NET Framework 更新发布。</p>
<p>该版本修复了 ASP.NET Core 中的一个漏洞。 NET 框架。</p>
<ul>
<li><a href="https://github.com/dotnet/announcements/issues/352" target="_blank" rel="noopener nofollow">Microsoft 安全公告 CVE-2025-26682：.NET 拒绝服务漏洞 · 问题 #352 · dotnet/announcements</a>：与 HTTP/3 相关的拒绝服务漏洞</li>
</ul>
<h3 id="net-10-预览版-3-现已推出---net-博客">.NET 10 预览版 3 现已推出！ - .NET 博客</h3>
<p><a href="https://devblogs.microsoft.com/dotnet/dotnet-10-preview-3/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/dotnet/dotnet-10-preview-3/</a></p>
<p>.NET 10 预览版 3 已发布。</p>
<p>此版本包括多个库、运行时改进和 C# 的扩展成员。</p>
<h3 id="net-aspire-92-现已推出新的部署方式---net-博客">.NET Aspire 9.2 现已推出新的部署方式 - .NET 博客</h3>
<p><a href="https://devblogs.microsoft.com/dotnet/dotnet-aspire-92-is-now-available-with-new-ways-to-deploy/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/dotnet/dotnet-aspire-92-is-now-available-with-new-ways-to-deploy/</a></p>
<p>.NET Aspire 9.2 已发布。</p>
<p>此版本包括资源图、自定义资源 URL、资源深层链接、内置自定义 HTTP 命令，并添加了 Docker Compose 发布者。</p>
<p>Azure SQL Server 和 Azure PostgreSQL 之间的集成也发生了与托管标识相关的重大更改。</p>
<ul>
<li><a href="https://learn.microsoft.com/ja-jp/dotnet/aspire/whats-new/dotnet-aspire-9.2" target="_blank" rel="noopener nofollow">.NET.NET Aspire 9.2 中的新增功能 - .NET Aspire</a></li>
</ul>
<h3 id="我们如何最终在-net-9-中重写-nuget-restore---net-blog">我们如何最终在 .NET 9 中重写 NuGet Restore - .NET Blog</h3>
<p><a href="https://devblogs.microsoft.com/dotnet/rewriting-nuget-restore-in-dotnet-9/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/dotnet/rewriting-nuget-restore-in-dotnet-9/</a></p>
<p>您是如何决定重写 .NET 9 NuGet 还原算法的，它是如何导致发布的？</p>
<p>它首先介绍了 Microsoft 内部团队报告还原 NuGet 需要很长时间，然后介绍了 NuGet 的历史记录、包图的难点、性能优化和新算法的开发以及发布它们的过程。</p>
<h3 id="加入-net--c-团队参加-microsoft-build-2025---net-博客">加入 .NET &amp; C# 团队参加 Microsoft Build 2025 - .NET 博客</h3>
<p><a href="https://devblogs.microsoft.com/dotnet/join-us-at-build-2025/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/dotnet/join-us-at-build-2025/</a></p>
<p>在 Build 2025 上介绍 .NET 和 C# 会议、动手实践等。</p>
<h3 id="resharper-和-net-tools-20251-候选版本现已推出--net-工具博客">ReSharper 和 .NET Tools 2025.1 候选版本现已推出 | .NET 工具博客</h3>
<p><a href="https://blog.jetbrains.com/dotnet/2025/04/09/resharper-2025-1-release-candidate/" target="_blank" rel="noopener nofollow">https://blog.jetbrains.com/dotnet/2025/04/09/resharper-2025-1-release-candidate/</a></p>
<p>ReSharper 和 .NET Tools 2025.1 候选版本已经发布。</p>
<p>此版本包括对 C# 14 的增强语言支持、重构和格式设置、代码样式增强、性能改进、游戏开发增强、Qodana Team 代码质量增强和反编译器增强。</p>
<p>此外，dotMemory 与 Visual Studio 完全集成，dotTrace 引入了选项卡式快照分析，而 dotCover 包括一些小的改进和错误修复。</p>
<h3 id="opensilver-32-通过-maui-hybrid-将-wpf-应用程序引入-iosandroid-等">OpenSilver 3.2 通过 MAUI Hybrid 将 WPF 应用程序引入 iOS、Android 等</h3>
<p><a href="https://opensilver.net/announcements/3-2/" target="_blank" rel="noopener nofollow">https://opensilver.net/announcements/3-2/</a></p>
<p>OpenSilver 3.2 已发布。</p>
<p>此版本支持 .NET MAUI Hybrid，它现在可以在 iOS、Andorid 等上运行。 其他功能包括改进的与 WPF 的兼容性以及与 IDE 的更好集成。</p>
<h3 id="使用-c-构建模型上下文协议-mcp-服务器---net-博客">使用 C# 构建模型上下文协议 (MCP) 服务器 - .NET 博客</h3>
<p><a href="https://devblogs.microsoft.com/dotnet/build-a-model-context-protocol-mcp-server-in-csharp/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/dotnet/build-a-model-context-protocol-mcp-server-in-csharp/</a></p>
<p>了解如何使用适用于 C# 的 MCP SDK 在 C# 中实现 MCP 服务器。</p>
<h2 id="发布">发布</h2>
<ul>
<li><a href="https://github.com/AvaloniaUI/Avalonia" target="_blank" rel="noopener nofollow">AvaloniaUI/Avalonia</a>
<ul>
<li><a href="https://github.com/AvaloniaUI/Avalonia/releases/tag/11.2.7" target="_blank" rel="noopener nofollow">11.2.7</a></li>
</ul>
</li>
<li><a href="https://github.com/aws/aws-sdk-net" target="_blank" rel="noopener nofollow">aws/aws-sdk-net</a>
<ul>
<li><a href="https://github.com/aws/aws-sdk-net/releases/tag/3.7.1018.0" target="_blank" rel="noopener nofollow">3.7.1018.0</a>、<a href="https://github.com/aws/aws-sdk-net/releases/tag/3.7.1019.0" target="_blank" rel="noopener nofollow">3.7.1019.0</a>、<a href="https://github.com/aws/aws-sdk-net/releases/tag/3.7.1020.0" target="_blank" rel="noopener nofollow">3.7.1020. 0</a> <a href="https://github.com/aws/aws-sdk-net/releases/tag/3.7.1021.0" target="_blank" rel="noopener nofollow">3.7.1021.0</a>、<a href="https://github.com/aws/aws-sdk-net/releases/tag/3.7.1022.0" target="_blank" rel="noopener nofollow">3.7.1022.0</a></li>
</ul>
</li>
<li><a href="https://github.com/Azure/azure-sdk-for-net" target="_blank" rel="noopener nofollow">Azure/azure-sdk-for-net</a>
<ul>
<li><a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.Messaging.EventHubs_5.12.0" target="_blank" rel="noopener nofollow">Azure.Messaging.EventHubs_5.12.0</a>， <a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.Messaging.EventHubs_5.12.1" target="_blank" rel="noopener nofollow">Azure.Messaging.EventHubs_5.12. 1</a>，<a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.Messaging.EventHubs.Processor_5.12.0" target="_blank" rel="noopener nofollow">Azure.Messaging.EventHubs.Processor_5.12. 0</a>， <a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.Messaging.EventHubs.Processor_5.12.1" target="_blank" rel="noopener nofollow">Azure.Messaging.EventHubs.Processor_5.12. 1</a>，<a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.Messaging.ServiceBus_7.19.0" target="_blank" rel="noopener nofollow">Azure.Messaging.ServiceBus_7.19. 0</a>， <a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.ResourceManager.RecoveryServicesDataReplication_1.0.0" target="_blank" rel="noopener nofollow">Azure.ResourceManager.RecoveryServicesDataReplication_1.0. 0</a>， <a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Microsoft.Azure.WebJobs.Extensions.EventHubs_6.5.0" target="_blank" rel="noopener nofollow">Microsoft.Azure.WebJobs.Extensions.EventHubs_ 6.5.0</a>， <a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Microsoft.Azure.WebJobs.Extensions.EventHubs_6.5.1" target="_blank" rel="noopener nofollow">Microsoft.Azure.WebJobs.Extensions.EventHubs_6.5. 1</a>， <a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Microsoft.Azure.WebJobs.Extensions.ServiceBus_5.16.6" target="_blank" rel="noopener nofollow">Microsoft.Azure.WebJobs.Extensions.ServiceBus_5.16. 6</a></li>
</ul>
</li>
<li><a href="https://github.com/DataDog/dd-trace-dotnet" target="_blank" rel="noopener nofollow">DataDog/dd-trace-dotnet</a>
<ul>
<li><a href="https://github.com/DataDog/dd-trace-dotnet/releases/tag/v3.14.3" target="_blank" rel="noopener nofollow">v3.14.3</a></li>
</ul>
</li>
<li><a href="https://github.com/domaindrivendev/Swashbuckle.AspNetCore" target="_blank" rel="noopener nofollow">domaindrivendev/Swashbuckle.AspNetCore</a>
<ul>
<li><a href="https://github.com/domaindrivendev/Swashbuckle.AspNetCore/releases/tag/v8.1.1" target="_blank" rel="noopener nofollow">v8.1.1</a></li>
</ul>
</li>
<li><a href="https://github.com/dotnet/diagnostics" target="_blank" rel="noopener nofollow">dotnet/diagnostics</a>
<ul>
<li><a href="https://github.com/dotnet/diagnostics/releases/tag/v9.0.621003" target="_blank" rel="noopener nofollow">v9.0.621003</a></li>
</ul>
</li>
<li><a href="https://github.com/dotnet/dotnet-monitor" target="_blank" rel="noopener nofollow">dotnet/dotnet-monitor</a>
<ul>
<li><a href="https://github.com/dotnet/dotnet-monitor/releases/tag/v9.1.0-preview.2.25201.5" target="_blank" rel="noopener nofollow">v9.1.0-preview.2.25201.5</a></li>
</ul>
</li>
<li><a href="https://github.com/microsoft/WindowsAppSDK" target="_blank" rel="noopener nofollow">microsoft/WindowsAppSDK</a>
<ul>
<li><a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.6.7" target="_blank" rel="noopener nofollow">v1.6.7</a>， <a href="https://github.com/microsoft/WindowsAppSDK/releases/tag/v1.7.1" target="_blank" rel="noopener nofollow">v1.7.1</a></li>
</ul>
</li>
<li><a href="https://github.com/spectreconsole/spectre.console" target="_blank" rel="noopener nofollow">spectreconsole/spectre.console</a>
<ul>
<li><a href="https://github.com/spectreconsole/spectre.console/releases/tag/0.50.0" target="_blank" rel="noopener nofollow">0.50.0</a></li>
</ul>
</li>
</ul>
<h2 id="文章幻灯片等">文章、幻灯片等</h2>
<h3 id="将-github-模型与-semantic-kernel-结合使用">将 GitHub 模型与 Semantic Kernel 结合使用</h3>
<p><a href="https://dev.to/willvelida/using-github-models-with-semantic-kernel-2kmp" target="_blank" rel="noopener nofollow">https://dev.to/willvelida/using-github-models-with-semantic-kernel-2kmp</a></p>
<p>从 GitHub 模型调用 GPT-4.1 模型的说明 从语义内核.</p>
<h3 id="aws-bedrock-人类-claude-工具调用与-microsoft-语义内核的集成">AWS Bedrock 人类 claude 工具调用与 Microsoft 语义内核的集成</h3>
<p><a href="https://dev.to/stormhub/aws-bedrock-anthropic-claude-tool-call-integration-with-microsoft-semantic-kernel-29g3" target="_blank" rel="noopener nofollow">https://dev.to/stormhub/aws-bedrock-anthropic-claude-tool-call-integration-with-microsoft-semantic-kernel-29g3</a><br>
从 Sermantic 内核在 AWS Bedrock 中调用 Claude 的说明。</p>
<h3 id="-我使用-net-制作了一个简单的-mcp-服务器">. 我使用 .NET 制作了一个简单的 MCP 服务器</h3>
<p><a href="https://qiita.com/yariri/items/03c775385319c1f49314" target="_blank" rel="noopener nofollow">https://qiita.com/yariri/items/03c775385319c1f49314</a></p>
<p>如何在 MCP SDK for C# 中实现 MCP 服务器并从 Cursor 调用它。</p>
<h3 id="提醒在通用主机上appsettingsjson-nlog-设置">提醒在通用主机上appsettings.json NLog 设置</h3>
<p><a href="https://zenn.dev/voltaney/articles/generic-host-nlog" target="_blank" rel="noopener nofollow">https://zenn.dev/voltaney/articles/generic-host-nlog</a></p>
<p>了解如何将 NLog 合并到通用主机中并在 appsettings.json 中对其进行配置。</p>
<h3 id="使用-dynamicexpresso-从字符串执行方法">使用 DynamicExpresso 从字符串执行方法</h3>
<p><a href="https://zenn.dev/srtia2318/articles/introduce1-dynamicexpresso-lib-45433543cd1758" target="_blank" rel="noopener nofollow">https://zenn.dev/srtia2318/articles/introduce1-dynamicexpresso-lib-45433543cd1758</a></p>
<p>介绍用于从字符串执行动态表达式的库 DynamicExpresso。</p>
<h3 id="让我们用-semantic-kernel-轻松链接多个代理">让我们用 Semantic Kernel 轻松链接多个代理</h3>
<p><a href="https://zenn.dev/microsoft/articles/semantic-kernel-agents-006" target="_blank" rel="noopener nofollow">https://zenn.dev/microsoft/articles/semantic-kernel-agents-006</a></p>
<p>Semantic Kernel 具有多个协同工作的代理。</p>
<h3 id="c--net10-预览版-3-null-条件赋值">【C# . NET10 预览版 3] null 条件赋值</h3>
<p><a href="https://qiita.com/abetakahiro123/items/db05ae0cab986183cfab" target="_blank" rel="noopener nofollow">https://qiita.com/abetakahiro123/items/db05ae0cab986183cfab</a></p>
<p>null 条件赋值简介，在 .NET 10 预览版 3 的 C# 14 中引入。</p>
<h3 id="我尝试使用-c-基准测试">我尝试使用 C# 基准测试</h3>
<p><a href="https://qiita.com/yamabee2021/items/8c79610a63f48ef10c6e" target="_blank" rel="noopener nofollow">https://qiita.com/yamabee2021/items/8c79610a63f48ef10c6e</a></p>
<p>了解如何在 C# 中进行基准测试。</p>
<p>本文介绍了如何使用 Stopwatch、如何实现 Stopwatch 的担忧以及如何处理 BenchmarkDotNet。</p>
<h3 id="在-rider-中检查-linq-方法链的中间结果">在 Rider 中检查 LINQ 方法链的中间结果</h3>
<p><a href="https://qiita.com/RyotaMurohoshi/items/e8010bec07fa936ea4e4" target="_blank" rel="noopener nofollow">https://qiita.com/RyotaMurohoshi/items/e8010bec07fa936ea4e4</a></p>
<p>了解如何在 Rider 调试器中检查 C# LINQ 方法链中每个方法的返回值。</p>
<h3 id="vscode-中用于-c-开发的-omnisharp-与-c-开发工具包比较图">VSCode 中用于 C# 开发的 OmniSharp 与 C# 开发工具包比较图</h3>
<p><a href="https://qiita.com/tnishiki/items/6480fa0d37dd3774fbe1" target="_blank" rel="noopener nofollow">https://qiita.com/tnishiki/items/6480fa0d37dd3774fbe1</a></p>
<p>OmniSharp 与 Visual Studio Code 中的 C# 开发工具包的比较。</p>
<h3 id="深入了解-net-9-中的对冲请求--第-1-部分---viktor-ponamarev---medium">深入了解 .NET 9 中的对冲请求 — 第 1 部分 - Viktor Ponamarev - Medium</h3>
<p><a href="https://medium.com/@vikpoca/deep-dive-into-hedging-requests-in-net-9-part-1-d46f23bd503b" target="_blank" rel="noopener nofollow">https://medium.com/@vikpoca/deep-dive-into-hedging-requests-in-net-9-part-1-d46f23bd503b</a></p>
<p>在 .NET 9 及更早版本中支持对冲请求，这些请求在后续作后多次引发请求。</p>
<h3 id="net-10-预览版3-c-14-新功能摘要">[.NET 10 预览版3] C# 14 新功能摘要</h3>
<p><a href="https://qiita.com/yariri/items/6ccad66422ccded614d3" target="_blank" rel="noopener nofollow">https://qiita.com/yariri/items/6ccad66422ccded614d3</a></p>
<p>在 .NET 10 预览版 3 中介绍 C# 14 中的新增功能。</p>
<h3 id="使用现代-net-功能优化内存使用">使用现代 .NET 功能优化内存使用</h3>
<p><a href="https://mijailovic.net/2025/04/10/memory-optimizations/" target="_blank" rel="noopener nofollow">https://mijailovic.net/2025/04/10/memory-optimizations/</a></p>
<p>了解如何使用现代 .NET 功能来减少内存使用量。</p>
<h3 id="resharper-和-rider-20251-中的-c-语言支持--net-工具博客">ReSharper 和 Rider 2025.1 中的 C# 语言支持 | .NET 工具博客</h3>
<p><a href="https://blog.jetbrains.com/dotnet/2025/04/10/csharp-language-support-in-resharper-and-rider-2025-1/" target="_blank" rel="noopener nofollow">https://blog.jetbrains.com/dotnet/2025/04/10/csharp-language-support-in-resharper-and-rider-2025-1/</a></p>
<p>ReSharper 和 Rider 在 2025.1 中支持 C# 语言。</p>
<ul>
<li>结构化日志支持</li>
<li>字符串连接的上下文作</li>
<li>隐式使用重构</li>
<li>改进的多行待办事项注释</li>
<li>返回值的语言注入</li>
<li>冗余的重复代码</li>
<li>滥用 CancellationToken</li>
<li>插入 postfix 模板</li>
<li>参数更改重构</li>
<li>扩展类型上下文高亮显示</li>
<li>“Chop” 格式上下文作</li>
<li>Debug.Assert 中的更改</li>
<li>不准确的流读取</li>
<li>元组的组件名称</li>
<li>重构 Enum 成员名称</li>
<li>未绑定泛型 nameof</li>
<li>一级跨度类型</li>
<li>带有修饰符的简单 lambda 参数</li>
<li>默认文本建议</li>
</ul>
<h3 id="组织-openai-和-azure-ai-的-sdk">组织 OpenAI 和 Azure AI 的 SDK</h3>
<p><a href="https://qiita.com/takashiuesaka/items/037c1d7c11759f809a48" target="_blank" rel="noopener nofollow">https://qiita.com/takashiuesaka/items/037c1d7c11759f809a48</a></p>
<p>了解当前发布的适用于 Open AI 和 Azure AI .NET 的各种 SDK。</p>
<h3 id="在-winui-3-中更改-flyout-的样式">在 WinUI 3 中更改 Flyout 的样式</h3>
<p><a href="https://zenn.dev/voltaney/articles/winui3-flyout-style" target="_blank" rel="noopener nofollow">https://zenn.dev/voltaney/articles/winui3-flyout-style</a></p>
<p>了解如何在 WinUI 3 中更改浮出控件的样式。</p>
<h3 id="我尝试实现一个验证-plantuml-代码的-mcp-服务器">我尝试实现一个验证 PlantUML 代码的 MCP 服务器</h3>
<p><a href="https://qiita.com/kwhrkzk/items/a7ae51aa2e00406b9c8f" target="_blank" rel="noopener nofollow">https://qiita.com/kwhrkzk/items/a7ae51aa2e00406b9c8f</a></p>
<p>有关实现验证 PlantUML 的 MCP 服务器的文章。</p>
<h3 id="net-aspire-和-azure-functions-集成预览版---visual-studio-博客">.NET Aspire 和 Azure Functions 集成预览版 - Visual Studio 博客</h3>
<p><a href="https://devblogs.microsoft.com/visualstudio/net-aspire-and-azure-functions-integration-preview/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/visualstudio/net-aspire-and-azure-functions-integration-preview/</a></p>
<p>.NET Aspire 和 Azure Functions 简介，Visual Studio 集成预览版</p>
<h3 id="rider-20251-候选版本现已发布--net-工具博客">Rider 2025.1 候选版本现已发布！ | .NET 工具博客</h3>
<p><a href="https://blog.jetbrains.com/dotnet/2025/04/09/rider-2025-1-rc/" target="_blank" rel="noopener nofollow">https://blog.jetbrains.com/dotnet/2025/04/09/rider-2025-1-rc/</a></p>
<h3 id="与-msix-包中的-appdata-虚拟化相关的重定向行为">与 MSIX 包中的 AppData 虚拟化相关的重定向行为</h3>
<p><a href="https://zenn.dev/voltaney/articles/msix-appdata-virtualization" target="_blank" rel="noopener nofollow">https://zenn.dev/voltaney/articles/msix-appdata-virtualization</a></p>
<p>从打包的应用程序访问虚拟化 AppData 时的行为(有或没有路径)。</p>
<h3 id="如何在-winui-3-中同时支持打包和未打包">如何在 WinUI 3 中同时支持打包和未打包</h3>
<p><a href="https://zenn.dev/voltaney/articles/winui3-switch-package-type" target="_blank" rel="noopener nofollow">https://zenn.dev/voltaney/articles/winui3-switch-package-type</a></p>
<p>了解如何使 WinUI 3 应用程序与打包和未打包的分发格式兼容。</p>
<h3 id="visual-studio-中的多进程-cpu-使用率分析---visual-studio-博客">Visual Studio 中的多进程 CPU 使用率分析 - Visual Studio 博客</h3>
<p><a href="https://devblogs.microsoft.com/visualstudio/multi-process-cpu-usage-analysis-in-visual-studio/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/visualstudio/multi-process-cpu-usage-analysis-in-visual-studio/</a></p>
<h3 id="在-azure-容器应用动态会话中安全地运行-python-脚本-您也可以从-net-调用它">在 Azure 容器应用动态会话中安全地运行 Python 脚本。 您也可以从 .NET 调用它</h3>
<p><a href="https://qiita.com/k-yamamoto/items/bb947a8694a60b32df15" target="_blank" rel="noopener nofollow">https://qiita.com/k-yamamoto/items/bb947a8694a60b32df15</a></p>
<p>使用 .NET 中的容器应用动态会话运行 Python 的实现。</p>
<h3 id="mongodb-c-驱动程序中的可查询加密入门">MongoDB C# 驱动程序中的可查询加密入门</h3>
<p><a href="https://dev.to/mongodb/getting-started-with-queryable-encryption-in-the-mongodb-c-driver-2o7l" target="_blank" rel="noopener nofollow">https://dev.to/mongodb/getting-started-with-queryable-encryption-in-the-mongodb-c-driver-2o7l</a></p>
<p>了解如何将可查询加密与适用于 MongoDB 的 C# 驱动程序结合使用。</p>
<h3 id="c-互作字符串说明">C# 互作字符串说明</h3>
<p><a href="https://zenn.dev/shinta0806/articles/interop-strings" target="_blank" rel="noopener nofollow">https://zenn.dev/shinta0806/articles/interop-strings</a></p>
<p>有关在 Win32 P/Invoke 中传递字符串时如何处理字符串的说明。</p>
<h3 id="获取-ef-core-中序列的下一个值-executesqlrawasync-fromsql">获取 EF Core 中序列的下一个值 (ExecuteSqlRawAsync， FromSql)</h3>
<p><a href="https://qiita.com/jun1s/items/1c902b1f6c75497206e3" target="_blank" rel="noopener nofollow">https://qiita.com/jun1s/items/1c902b1f6c75497206e3</a></p>
<p>如何在 Entity Framework Core 和 SQL Server 中检索序列的下一个值。</p>
<h3 id="dotinsights--2025-年-4-月--net-工具博客">dotInsights | 2025 年 4 月 | .NET 工具博客</h3>
<p><a href="https://blog.jetbrains.com/dotnet/2025/04/02/dotinsights-april-2025/" target="_blank" rel="noopener nofollow">https://blog.jetbrains.com/dotnet/2025/04/02/dotinsights-april-2025/</a></p>
<p>JetBrains 2025 年 4 月的 .NET 相关信息综述。</p>
<h3 id="c-为什么你更喜欢-c-与其他语言相比---尼诺的花园">[C#] 为什么你更喜欢 C#？ <sub>与其他语言相比</sub> - 尼诺的花园。</h3>
<p><a href="https://blog.neno.dev/entry/2025/04/14/130323" target="_blank" rel="noopener nofollow">https://blog.neno.dev/entry/2025/04/14/130323</a></p>
<p>了解 C# 和 .NET 的现状、它与其他语言的比较以及您为什么更喜欢 C#。</p>
<h2 id="库存储库工具等">库、存储库、工具等</h2>
<h3 id="nuskey8csv-csharp-适用于-net-和-unity-的快速-csv-序列化器">nuskey8/csv-CSharp： 适用于 .NET 和 Unity 的快速 CSV 序列化器</h3>
<p><a href="https://github.com/nuskey8/Csv-CSharp" target="_blank" rel="noopener nofollow">https://github.com/nuskey8/Csv-CSharp</a></p>
<p>具有序列化器样式 API 的快速 CSV 解析器。</p>
<ul>
<li><a href="https://zenn.dev/nuskey/articles/library-csv-csharp" target="_blank" rel="noopener nofollow">Csv-CSharp</a></li>
</ul>
<h2 id="c-net-交流群">C# .NET 交流群</h2>
<p>相信大家在开发中经常会遇到一些性能问题，苦于没有有效的工具去发现性能瓶颈，或者是发现瓶颈以后不知道该如何优化。之前一直有读者朋友询问有没有技术交流群，但是由于各种原因一直都没创建，现在很高兴的在这里宣布，我创建了一个专门交流.NET性能优化经验的群组，主题包括但不限于：</p>
<ul>
<li>如何找到.NET性能瓶颈，如使用APM、dotnet tools等工具</li>
<li>.NET框架底层原理的实现，如垃圾回收器、JIT等等</li>
<li>如何编写高性能的.NET代码，哪些地方存在性能陷阱</li>
</ul>
<p>希望能有更多志同道合朋友加入，分享一些工作中遇到的.NET问题和宝贵的分析优化经验。<strong>目前一群已满，现在开放二群。</strong>可以加我vx，我拉你进群: <strong>ls1075</strong> 另外也创建了<strong>QQ Group</strong>: 687779078，欢迎大家加入。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="1.2156975299756945" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-19 15:16">2025-04-19 15:15</span>&nbsp;
<a href="https://www.cnblogs.com/InCerry">InCerry</a>&nbsp;
阅读(<span id="post_view_count">258</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18835608);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18835608', targetLink: 'https://www.cnblogs.com/InCerry/p/-/dotnet_week_25_4_1', title: '.NET周刊【4月第1期 2025-04-06】' })">举报</a>
</div>
        