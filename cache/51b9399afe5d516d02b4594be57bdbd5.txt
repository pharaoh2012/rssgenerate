
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/cj8988/p/18990084" title="发布于 2025-07-17 17:29">
    <span role="heading" aria-level="2">图片对嘴生成视频：HunyuanVideo-Avatar</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p><span style="font-size: 16px"><strong>之前几章有相应的介绍，一张图片和一个音频，生成一段对嘴视频。</strong></span></p>
<p>&nbsp;</p>
<h3><span style="color: rgba(0, 0, 0, 1); font-size: 16px"><strong><a href="https://www.cnblogs.com/cj8988/p/18984186" target="_blank"><span style="color: rgba(0, 0, 0, 1)">FLOAT</span></a>: <a href="https://www.cnblogs.com/cj8988/p/18984186" target="_blank"><span style="color: rgba(0, 0, 0, 1)">https://www.cnblogs.com/cj8988/p/18984186</span></a>&nbsp;<span style="color: rgba(0, 204, 255, 1)">（带表情，比较快，但是会裁剪为正方形尺寸）</span></strong></span></h3>
<h3><span style="color: rgba(0, 0, 0, 1); font-size: 16px"><strong><a href="https://github.com/toto222/DICE-Talk" rel="noopener nofollow" target="_blank"><span style="color: rgba(0, 0, 0, 1)">DICE-Talk</span></a>：<a href="https://www.cnblogs.com/cj8988/p/18957718" target="_blank"><span style="color: rgba(0, 0, 0, 1)">https://www.cnblogs.com/cj8988/p/18957718</span></a>&nbsp; &nbsp;<span style="color: rgba(0, 204, 255, 1)">（带表情，比较慢）</span></strong></span></h3>
<h3><span style="color: rgba(0, 0, 0, 1); font-size: 16px"><strong><a href="https://www.cnblogs.com/cj8988/p/18952604" target="_blank"><span style="color: rgba(0, 0, 0, 1)">ComfyUI_Sonic</span></a>：<a href="https://www.cnblogs.com/cj8988/p/18952604" target="_blank"><span style="color: rgba(0, 0, 0, 1)">https://www.cnblogs.com/cj8988/p/18952604</span></a>&nbsp;<span style="color: rgba(0, 204, 255, 1)">（基础版，效果好）</span></strong></span></h3>
<p>&nbsp;</p>
<p><span style="color: rgba(0, 0, 0, 1); font-size: 16px"><strong>本章在介绍一个类似的可以项目，<span style="color: rgba(255, 0, 255, 1)">我的8GPU电脑没有跑起来</span>~。</strong></span></p>
<p>&nbsp;</p>
<div>
<p><span>这是一个非常先进的&nbsp;<strong>“单样本说话人视频生成” (One-shot Talking Avatar)</strong>&nbsp;<span>项目，在数字人生成领域引起了广泛关注。</span></span></p>
<p>&nbsp;</p>
<p><span style="font-size: 18px"><strong>GitHub 地址</strong>:&nbsp;<a href="https://github.com/Tencent-Hunyuan/HunyuanVideo-Avatar" rel="noopener nofollow">https://github.com/Tencent-Hunyuan/HunyuanVideo-Avatar</a></span></p>
<p>&nbsp;</p>
<hr>
<h3 id="一核心概述-what-is-it">一、核心概述 (What is it?)</h3>
<p><span>简单来说，HunyuanVideo-Avatar 的核心功能是：<strong>仅需一张包含人物全身或半身的照片和一段音频，就能生成一个高质量、动作自然、口型同步的说话视频</strong><span>。</span></span></p>
<p><span>这里的关键词是&nbsp;<strong>"One-shot" (单样本)</strong><span>，意味着你不需要为特定人物录制几分钟甚至几小时的视频来进行模型训练，大大降低了生成数字人视频的门槛。它生成的不再是简单的“大头贴”式说话视频，而是包含自然头部姿态和身体动作的&nbsp;<strong>全身 (full-body)</strong>&nbsp;<span>视频。</span></span></span></p>
<p><span>该项目的技术基于一篇名为&nbsp;<strong>《HunyuanVideo-Avatar: One-shot Talking Avatar with Attentive Cross-modal Diffusion》</strong>&nbsp;<span>的学术论文，代表了腾讯在视频生成和数字人领域的前沿研究成果。</span></span></p>
<p>&nbsp;</p>
<hr>
<h3>&nbsp;</h3>
<h3>二、主要特点与优势 (Key Features)</h3>
<ol>
<li>
<p><strong>高质量与高分辨率</strong>：</p>
<ul>
<li>能够生成&nbsp;<strong>1024x1024</strong>&nbsp;分辨率的高清视频，细节丰富，人物面部和服装的纹理都非常清晰。</li>
</ul>
</li>
<li>
<p><strong>单样本驱动 (One-shot)</strong>：</p>
<ul>
<li>这是其最大的亮点。传统的数字人技术通常需要大量的特定人物数据进行训练，而 HunyuanVideo-Avatar 仅凭一张静态图片就能工作，极大地提升了易用性和效率。</li>
</ul>
</li>
<li>
<p><strong>全身视频生成 (Full-body Generation)</strong>：</p>
<ul>
<li>与许多只关注面部区域的 "Talking Head" 项目（如 SadTalker 的早期版本）不同，它能够生成包含上半身甚至全身的视频，并驱动身体产生与说话内容相匹配的、自然的微小动作和姿态变化。</li>
</ul>
</li>
<li>
<p><strong>精准的音唇同步 (Accurate Lip-sync)</strong>：</p>
<ul>
<li>生成的视频口型与输入音频高度同步，无论是中文还是英文，都能实现非常逼真的对口型效果。</li>
</ul>
</li>
<li>
<p><strong>自然的动作与表情 (Natural Motion &amp; Expression)</strong>：</p>
<ul>
<li>模型不仅能同步口型，还能根据音频的韵律和情感，生成自然的头部转动、眨眼、以及轻微的身体摇摆，让数字人看起来不那么“僵硬”，更具生命力。</li>
</ul>
</li>
<li>
<p><strong>代码和模型开源 (Open Source)</strong>：</p>
<ul>
<li>腾讯混元团队将项目的完整代码、预训练好的模型以及详细的使用指南都在 GitHub 上开源，供开发者和研究者使用、学习和改进，极大地推动了社区的发展。</li>
</ul>
</li>
</ol><hr>
<h3>&nbsp;</h3>
<h3 id="三技术原理解析-how-it-works">三、技术原理解析 (How it Works)</h3>
<p><span>HunyuanVideo-Avatar 的技术框架非常精巧，主要采用了一个&nbsp;<strong>两阶段（Two-stage）</strong>&nbsp;<span>的生成流程：</span></span></p>
<h4 id="阶段一音频到动作序列的生成-audio-to-motion-generation"><strong>阶段一：音频到动作序列的生成 (Audio-to-Motion Generation)</strong></h4>
<ul>
<li><strong>输入</strong>：一段音频。</li>
<li><strong>输出</strong>：一系列描述人体姿态的&nbsp;<strong>动作序列</strong>（例如，3DMM 面部参数和人体骨骼关键点）。</li>
<li><strong>作用</strong>：这个阶段将音频中的信息（如语音内容、节奏、停顿）解码为连续的、自然的身体和面部动作指令。它将“说什么”和“怎么动”分离开来，使得动作的生成更加可控和自然。</li>
</ul>
<h4 id="阶段二动作到视频的生成-motion-to-video-generation"><strong>阶段二：动作到视频的生成 (Motion-to-Video Generation)</strong></h4>
<ul>
<li><strong>输入</strong>：<ol>
<li>源人物图片 (Reference Image)。</li>
<li>阶段一生成的动作序列 (Motion Sequence)。</li>
</ol></li>
<li><strong>核心技术</strong>：<strong>注意力交叉模态扩散模型 (Attentive Cross-modal Diffusion Model)</strong>。</li>
<li><strong>工作流程</strong>：<ol>
<li>模型首先从源图片中提取人物的外观特征（如相貌、服装、背景）。</li>
<li>然后，它利用一个强大的&nbsp;<strong>视频扩散模型</strong>，在动作序列的引导下，逐帧生成视频。</li>
<li>这里的&nbsp;<strong>"注意力交叉模态 (Attentive Cross-modal)"</strong>&nbsp;是关键，意味着模型在生成每一帧时，会智能地“关注” (attend to) 两个方面的信息：
<ul>
<li><strong>动作模态</strong>：当前需要执行的姿态和口型是什么。</li>
<li><strong>外观模态</strong>：人物原本长什么样，穿什么衣服。</li>
</ul>
</li>
<li>通过这种方式，模型能够确保生成的人物既保持了源图片的一致性，又精确地执行了动作序列，最终合成连贯、逼真的视频。</li>
</ol></li>
</ul>
<hr>
<h3 id="四如何使用-how-to-use">四、如何使用 (How to Use)</h3>
<p><span>对于开发者来说，在本地运行该项目的大致步骤如下：</span></p>
<ol>
<li><strong>克隆仓库或者直接下载</strong>：<code>git clone <a href="https://github.com/Tencent-Hunyuan/HunyuanVideo-Avatar.git" target="_blank" rel="noopener nofollow">https://github.com/Tencent-Hunyuan/HunyuanVideo-Avatar.git</a></code></li>
<li><strong>创建环境</strong>：使用 Conda 或 venv 创建一个 Python 环境，并根据&nbsp;<code>requirements.txt</code>&nbsp;文件安装所有依赖库。</li>
</ol>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1. Create conda environment</span>
conda create -n HunyuanVideo-Avatar python==3.10

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2. Activate the environment</span>
conda activate HunyuanVideo-<span style="color: rgba(0, 0, 0, 1)">Avatar

</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3. Install PyTorch and other dependencies using conda</span><span style="color: rgba(0, 128, 0, 1)">
#</span><span style="color: rgba(0, 128, 0, 1)"> For CUDA 12.4</span>
conda install pytorch==2.4.0 torchvision==0.19.0 torchaudio==2.4.0 pytorch-cuda=12.4 -c pytorch -<span style="color: rgba(0, 0, 0, 1)">c nvidia

</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 4. Install pip dependencies</span>
python -m pip install -<span style="color: rgba(0, 0, 0, 1)">r requirements.txt

</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 5. Install flash attention v2 for acceleration (requires CUDA 11.8 or above)</span>
python -<span style="color: rgba(0, 0, 0, 1)">m pip install ninja
python </span>-m pip install git+https://github.com/Dao-AILab/flash-attention.git@v2.6.3</pre>
</div>
<p>&nbsp;</p>
<ol start="3">
<li><strong>下载模型</strong>：根据官方指引，下载预训练好的各个模型文件（包括音频到动作的模型、视频生成模型等），并放置到指定目录。<strong>地址（请做好心理准备，这个模型非常大）：<a href="https://huggingface.co/tencent/HunyuanVideo-Avatar/tree/main" rel="noopener nofollow">https://huggingface.co/tencent/HunyuanVideo-Avatar/tree/main</a></strong></li>
</ol>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;模型下载后放到 <strong>HunyuanVideo-Avatar/weights/</strong>文件夹下</p>
<p><img alt="" width="826" height="604" loading="lazy" data-src="https://img2024.cnblogs.com/blog/692485/202507/692485-20250717165803679-1477833921.png" class="lazyload"></p>
<ol start="4">
<li><strong>准备输入</strong>：准备一张你想要驱动的人物图片（最好是高清、正面的全身或半身照）和一段音频文件（如&nbsp;<code>.wav</code>&nbsp;或&nbsp;<code>.mp3</code>）。&nbsp;</li>
</ol>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">运行：
cd HunyuanVideo</span>-<span style="color: rgba(0, 0, 0, 1)">Avatar

bash .</span>/scripts/run_gradio.sh</pre>
</div>
<p>&nbsp;</p>
<p><span style="font-size: 16px"><strong>我的电脑8GPU,跑不起来，这里使用的是官方的UI截图。</strong></span></p>
<p>&nbsp;</p>
<p><img alt="" width="758" height="718" loading="lazy" data-src="https://img2024.cnblogs.com/blog/692485/202507/692485-20250717165624938-533025887.png" class="lazyload"></p>
<p>&nbsp;</p>
<ol start="5">
<li><strong>运行推理脚本</strong>：执行官方提供的推理命令，传入你的图片和音频路径，等待程序运行结束即可在输出目录找到生成的视频。</li>
</ol>
<p>&nbsp;<video width="640" height="360" preload="none" controls="controls" src="https://cdnhandler.fgonestudio.net/audios/123456.mp4"> 您的浏览器不支持 video 标签。 </video></p>
<p>&nbsp;</p>
<hr>
<h3>&nbsp;</h3>
<h3 id="五应用场景-potential-applications">五、应用场景 (Potential Applications)</h3>
<p><span>这项技术有着广阔的应用前景：</span></p>
<ul>
<li><strong>数字人/虚拟主播</strong>：快速、低成本地创建企业或个人的虚拟形象。</li>
<li><strong>个性化视频内容</strong>：生成个性化的祝福视频、新闻播报、产品介绍等。</li>
<li><strong>在线教育</strong>：创建虚拟教师，让教学内容更生动有趣。</li>
<li><strong>影视配音与制作</strong>：为角色进行本地化配音时，可以同步修改口型，提升观感。</li>
<li><strong>辅助沟通</strong>：为有语言障碍的人士生成可视化的表达。</li>
</ul>
<h3 id="总结">总结</h3>
<p><strong>HunyuanVideo-Avatar</strong>&nbsp;<span>是一个里程碑式的开源项目，它将高质量、全身、单样本的说话人视频生成技术带给了更广泛的开发者社区。它不仅展示了腾讯在 AI 生成内容（AIGC）领域的强大实力，也为数字人技术的普及和应用铺平了道路。如果你对 AI 视频生成、数字人技术感兴趣，这个项目绝对是值得学习和研究的典范。</span></p>
<p>&nbsp;</p>
<ul class="list-paddingleft-1">
<li><span style="font-size: 18px"><strong>主页：<a href="https://hunyuanvideo-avatar.github.io" target="_blank" rel="noopener nofollow">https://hunyuanvideo-avatar.github.io</a></strong></span></li>
<li><span style="font-size: 18px"><strong>试用：<a href="https://hunyuan.tencent.com/modelSquare/home/play?modelId=126" target="_blank" rel="noopener nofollow">https://hunyuan.tencent.com/modelSquare/home/play?modelId=126</a></strong></span></li>
<li><span style="font-size: 18px"><strong>代码：<a href="https://github.com/Tencent-Hunyuan/HunyuanVideo-Avatar" target="_blank" rel="noopener nofollow">https://github.com/Tencent-Hunyuan/HunyuanVideo-Avatar</a></strong></span></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
</div>
<div id="gtx-trans" style="position: absolute; left: 151px; top: 2675.88px">&nbsp;</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-17 17:29">2025-07-17 17:29</span>&nbsp;
<a href="https://www.cnblogs.com/cj8988">Joy_CShow</a>&nbsp;
阅读(<span id="post_view_count">7</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18990084);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18990084', targetLink: 'https://www.cnblogs.com/cj8988/p/18990084', title: '图片对嘴生成视频：HunyuanVideo-Avatar' })">举报</a>
</div>
        