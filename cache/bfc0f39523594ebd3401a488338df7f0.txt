
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/du-hong/p/18670673" title="发布于 2025-05-08 16:30">
    <span role="heading" aria-level="2">PC端自动化测试实战教程-5-pywinauto 操作PC端应用程序窗口 - 下篇（详细教程）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h3>1.简介</h3>
<p>上一篇宏哥主要讲解和介绍了如何获取PC端应用程序窗口信息和如何连接窗口对其进行操作的常用的几种方法。今天宏哥接着讲解和分享一下窗口的基本操作：最大化、最小化、恢复正常、关闭窗口、获取窗口状态和获取窗口坐标。以及窗口的其他打开方法和选择方法。</p>
<h3>2.窗口的基本操作</h3>
<p>窗口的一些基本操作方法：</p>
<ul>
<li>最大化 ：w.maximize()</li>
<li>最小化 ：w.minimize()</li>
<li>恢复正常 ：w.restore()</li>
<li>关闭窗口： w.close()</li>
<li>获取窗口状态： w.get_show_state() 返回1 最大化， 0正常，2最小化</li>
<li>获取窗口坐标： w.rectangle() 返回 (L35, T149, R1544, B913)</li>
</ul>
<h4>2.1代码设计</h4>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202501/1232840-20250114143829095-1055139465.png" alt="" loading="lazy"></p>
<h4>2.2参考代码</h4>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-01-31
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: PC端自动化测试实战教程-5-pywinauto 操作PC端应用程序窗口（详细教程）-下篇
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span>
<span style="color: rgba(0, 0, 255, 1)">from</span> pywinauto <span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> Application
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> time

</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 通过窗口打开</span>
app = Application(<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">uia</span><span style="color: rgba(128, 0, 0, 1)">'</span>).start(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">D:/software/Notepad/Notepad++/notepad++.exe</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)
app </span>= Application(<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">uia</span><span style="color: rgba(128, 0, 0, 1)">'</span>).connect(class_name=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Notepad++</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> win = app['窗口的标题']</span>
win = app[<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">新文件1 - Notepad++</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">]
win.type_keys(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">北京-宏哥</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)
time.sleep(</span>2<span style="color: rgba(0, 0, 0, 1)">)
win.maximize()   </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 最大化</span>
time.sleep(2<span style="color: rgba(0, 0, 0, 1)">)
win.restore()    </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 恢复</span>
time.sleep(2<span style="color: rgba(0, 0, 0, 1)">)
win.minimize()   </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 最小化</span><span style="color: rgba(0, 128, 0, 1)">
#</span><span style="color: rgba(0, 128, 0, 1)"> win.close()      # 关闭</span></pre>
</div>
<h4>2.3运行代码</h4>
<p>1.运行代码，右键Run'Test'，就可以看到控制台输出，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202501/1232840-20250114143858350-1724389020.png" alt="" loading="lazy"></p>
<p>2.运行代码后电脑端的动作（启动记事本）。如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202501/1232840-20250114143926856-205378307.gif" alt="" loading="lazy"></p>
<h3>3.窗口打开方法</h3>
<p>前面是通过窗口的的标题操作打开的窗口，再介绍一个最简单的方法是top_window()，例如：宏哥这里还是演示打开notepad++编辑器。</p>
<h4>3.1代码设计</h4>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202501/1232840-20250114150116710-1300909867.png" alt="" loading="lazy"></p>
<h4>3.2参考代码</h4>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-01-31
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: PC端自动化测试实战教程-5-pywinauto 操作PC端应用程序窗口（详细教程）-下篇
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span>
<span style="color: rgba(0, 0, 255, 1)">from</span> pywinauto <span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> Application
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> time

</span><span style="color: rgba(0, 0, 255, 1)">from</span> pywinauto <span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> Application
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> time
app </span>= Application(<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">uia</span><span style="color: rgba(128, 0, 0, 1)">'</span>).start(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">D:/software/Notepad/Notepad++/notepad++.exe</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> time.sleep(3)</span>
dlg =<span style="color: rgba(0, 0, 0, 1)"> app.top_window()
</span><span style="color: rgba(0, 0, 255, 1)">print</span>(dlg)</pre>
</div>
<h4>3.3运行代码</h4>
<p>1.运行代码，右键Run'Test'，就可以看到控制台输出，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202501/1232840-20250114145929855-179828505.png" alt="" loading="lazy"></p>
<p>2.运行代码后电脑端的动作（启动notepad++编辑器）。如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202501/1232840-20250114150036009-1607406036.gif" alt="" loading="lazy"></p>
<p>以上方法将返回具有应用程序顶级窗口的最高顺序的窗口。</p>
<p>注意: 它返回的是是应用程序的顶级窗口，如果窗口有覆盖的情况，那么你可以使用与传递给findwindows.find_windows()相同的参数，例如：</p>
<div class="cnblogs_code">
<pre>dlg = app.window(title_re=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Page Setup</span><span style="color: rgba(128, 0, 0, 1)">"</span>, class_name=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">#32770</span><span style="color: rgba(128, 0, 0, 1)">"</span>)</pre>
</div>
<p>如果对话框的标题很长 - 那么输入的属性访问可能会很长，在这种情况下通常更容易使用</p>
<div class="cnblogs_code">
<pre>app.window(title_re=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">.*部分标题.*</span><span style="color: rgba(128, 0, 0, 1)">"</span>) </pre>
</div>
<p>获取当前应用全部windows</p>
<div class="cnblogs_code">
<pre>dialogs = app.windows() </pre>
</div>
<p>这将返回应用程序的所有可见，启用的顶级窗口的列表。</p>
<p>总结：推荐使用&nbsp;<code>app.window(title_re="xxx")</code>&nbsp;方法操作指定窗口。</p>
<h3>4.小结</h3>
<h4>&nbsp;4.1遇到的坑</h4>
<p>在演示的过程中，想必细心的小伙伴或者童鞋们已经发现宏哥代码在窗口最小化之后，将窗口关闭的代码注释掉了，这是因为宏哥在演示的时候，直接报错：<strong>pywinauto.findbestmatch.MatchError: Could not find '新文件1 - Notepad++' in 'dict_keys([])'</strong>，本来宏哥觉得最小化之后，加上一段恢复窗口，再关闭就可以了，结果还是报一样的错误。因为一时没有好的解决办法，由于时间的关系，宏哥就将那段关闭窗口的代码注释掉了。如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202501/1232840-20250115143622614-1731646303.gif" alt="" loading="lazy"></p>
<p>解决办法：经过查找资料和百度还是没有什么好的解决办法，宏哥突然想到之前文章中提到过的访问技术是否正确，uia报错，就换win32。否则就会报错找不到元素。因此宏哥抱着试一下心态，结果成功了。</p>
<h5>4.1.1代码设计</h5>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202501/1232840-20250115144842996-2060918101.png" alt="" loading="lazy"></p>
<h5>4.1.2参考代码</h5>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-01-31
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: PC端自动化测试实战教程-5-pywinauto 操作PC端应用程序窗口（详细教程）-下篇
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span>
<span style="color: rgba(0, 0, 255, 1)">from</span> pywinauto <span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> Application
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> time

</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 通过窗口打开</span>
app = Application(<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">win32</span><span style="color: rgba(128, 0, 0, 1)">'</span>).start(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">D:/software/Notepad/Notepad++/notepad++.exe</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)
app </span>= Application(<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">win32</span><span style="color: rgba(128, 0, 0, 1)">'</span>).connect(class_name=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Notepad++</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> win = app['窗口的标题']</span>
win = app[<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">新文件1 - Notepad++</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">]
win.type_keys(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">北京-宏哥</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)
time.sleep(</span>2<span style="color: rgba(0, 0, 0, 1)">)
win.maximize()   </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 最大化</span>
time.sleep(2<span style="color: rgba(0, 0, 0, 1)">)
win.restore()    </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 恢复</span>
time.sleep(2<span style="color: rgba(0, 0, 0, 1)">)
win.minimize()   </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 最小化</span>
win.restore()    <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 恢复</span>
win.close()      <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 关闭</span></pre>
</div>
<h5>4.1.3运行代码</h5>
<p>1.运行代码，右键Run'Test'，就可以看到控制台输出，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202501/1232840-20250115145110285-925218193.png" alt="" loading="lazy"></p>
<p>2.运行代码后电脑端的动作（正常运行，由告警是32位和64位python的告警）。如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202501/1232840-20250115145042967-166131975.gif" alt="" loading="lazy"></p>
<h4>4.2pywinauto 中的uia是什么意思？</h4>
<p>在pywinauto库中，uia指的是UI Automation，这是Windows操作系统提供的一种技术框架，用于实现用户界面(UI)的自动化测试和辅助功能访问。UI Automation是微软从Windows Vista开始引入的核心技术，旨在为所有UI元素提供一致的编程接口，无论这些元素是由何种技术（如Win32、WPF、UWP等）实现的。</p>
<p>在pywinauto中，通过指定backend="uia"，用户可以选择使用UI Automation作为底层引擎来与应用程序的UI元素进行交互。这为自动化测试提供了更广泛的支持，尤其是在处理现代Windows应用（尤其是使用WPF和UWP技术构建的应用）时更为有效。UI Automation后端相比传统的win32后端，提供了更丰富和高级的元素属性、控制模式（Control Patterns）以及事件支持，使得自动化脚本可以更加灵活和强大。</p>
<p>使用UI Automation后端，开发者可以更容易地定位和操作UI元素，如获取元素的属性、模拟鼠标和键盘操作、监听UI事件等，这对于创建复杂的自动化测试场景尤其有用。</p>
<p>好了，关于&nbsp;操作PC端应用程序窗口基本操作非常简单，时间不早了今天就分享到这里，感谢你耐心地阅读！</p>
</div>
<div id="MySignature" role="contentinfo">
    <div id="MySignature" style="display: block">
<div style="font-size: 13px; border: 1px dashed rgb(45, 161, 45); padding: 10px 15px; background-color: rgb(248, 248, 248)">
<label style="font-weight: bold">
&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家在移动端也能看到我分享的博文，现已注册个人微信公众号，扫描左下方二维码即可，欢迎大家关注，有时间会及时分享相关技术博文。</label><br>
<label style="font-weight: bold">
&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家互动讨论相关技术问题，现已组建专门的微信群，由于微信群满100，请您扫描右下方宏哥个人微信二维码拉你进群<label style="font-weight: bold; color: red; font-size: 15px">（请务必备注：已关注公众号进群）平时上班忙（和你一样），所以加好友不及时，请稍安勿躁~</label>，欢迎大家加入这个大家庭，我们一起畅游知识的海洋。</label><br>
&nbsp;&nbsp;&nbsp;&nbsp;感谢您花时间阅读此篇文章,如果您觉得这篇文章你学到了东西也是为了犒劳下博主的码字不易不妨打赏一下吧，让博主能喝上一杯咖啡，在此谢过了！<br>
&nbsp;&nbsp;&nbsp;&nbsp;如果您觉得阅读本文对您有帮助，请点一下左下角<a id="recommend" style="font-weight: bold; color: red; font-size: 15px; text-decoration: underline">“推荐”</a>按钮，您的<label style="font-weight: bold; color: red; font-size: 15px">“推荐”</label>将是我最大的写作动力！另外您也可以选择<a id="follow_me_btn" style="cursor: pointer; color: blue; text-decoration: underline">【<strong>关注我</strong>】</a>，可以很方便找到我！<br>
&nbsp;&nbsp;&nbsp;&nbsp;本文版权归作者和博客园共有，来源网址：<a href="https://www.cnblogs.com/du-hong" style="color: red; text-decoration: underline" target="_blank">https://www.cnblogs.com/du-hong</a> 欢迎各位转载，但是未经作者本人同意，转载文章之后必须在文章页面明显位置给出作者和原文连接，否则保留追究法律责任的权利！
</div>
<div style="text-align: center; margin-top: 10px">
   <p style="
    font-weight: bolder;
    color: red;
">公众号(关注宏哥)&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;客服微信</p><img style="width: 200px; padding-right: 20%" alt="个人微信公众号" src="https://img2018.cnblogs.com/common/1741949/201911/1741949-20191119095948011-608816619.png">
   <img style="width: 200px" alt="个人微信" src="https://img2018.cnblogs.com/common/1741949/201911/1741949-20191106101257091-849954564.png">
</div>
</div>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.41143553199421296" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-08 16:30">2025-05-08 16:30</span>&nbsp;
<a href="https://www.cnblogs.com/du-hong">北京-宏哥</a>&nbsp;
阅读(<span id="post_view_count">77</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18670673);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18670673', targetLink: 'https://www.cnblogs.com/du-hong/p/18670673', title: 'PC端自动化测试实战教程-5-pywinauto 操作PC端应用程序窗口 - 下篇（详细教程）' })">举报</a>
</div>
        