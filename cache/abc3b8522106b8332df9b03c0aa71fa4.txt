
	<h1 class="postTitle"><a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/georgewing/p/19033038" title="发布于 2025-08-12 02:57">
    <span role="heading" aria-level="2">苹果容器Apple container是做什么用的？</span>
    

</a>
</h1>
	<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="一apple-container是什么">一、Apple container是什么</h1>
<p>container是苹果公司出的一款容器工具。以轻量级虚拟机方式创建、运行Linux容器。那么，Linux容器又是什么呢？</p>
<h2 id="linux容器是一种特殊的进程">Linux容器是一种特殊的进程</h2>
<p>进程是运行中的程序，而Linux容器是进程中的一种，那Linux容器的特殊是这个进程由命名空间和cgroups来创造出来了一个“边界”。</p>
<h4 id="程序进程又是什么">程序、进程又是什么</h4>
<p>程序是指令和数据的集合。进程是运行中的程序，而程序在不运行时都是安安静静地存放在磁盘中的。</p>
<h4 id="容器与虚拟机的对比图">容器与虚拟机的对比图</h4>
<p>相信大家可能在介绍容器的文章中已经见过下面这个图：</p>
<p><img alt="" loading="lazy" data-src="https://bvirvw3cnv.feishu.cn/space/api/box/stream/download/asynccode/?code=YTgyNDdiMmM2MzRlMjQ0NTM3YWIxNzgzZmFkYzhkN2ZfODhvNmRVNlF1M0p4dHZlTFVFeHI3ZVNNbjh1RTBNTXNfVG9rZW46TnpucWJzM1NQbzVyYjF4ZGlpS2NBS0pGbnVjXzE3NTQ5Mzg2MzM6MTc1NDk0MjIzM19WNA" class="lazyload"></p>
<p>这个图，让我们对容器的理解停留在软件层面上，容器比虚拟机要轻量。然后就止步，不能深入理解了。</p>
<h5 id="虚拟机与容器到底有什么区别">虚拟机与容器到底有什么区别</h5>
<p>以运行在Ubuntu 20.04的Linux为例来深入理解虚拟机与容器的区别。</p>
<p>先看看在虚拟机上启动Ubuntu 20.04都做了什么：</p>
<ol>
<li>
<p>用宿主机的虚拟化软件启动虚拟机。之后所有处理都在虚拟机上进行的。</p>
</li>
<li>
<p>启动GRUB等引导程序。</p>
</li>
<li>
<p>引导程序启动内核。</p>
</li>
<li>
<p>内核启动init程序。</p>
</li>
<li>
<p>init进程(一般就是systemd）启动各种服务。</p>
</li>
</ol>
<p>再来看在容器上启动Ubuntu 20.04。是怎样启动的，也就两步：</p>
<ol>
<li>
<p>有一个叫容器运行时的进程，要它创建容器</p>
</li>
<li>
<p>启动第1号进程</p>
</li>
</ol>
<p>没了。启动速度上，容器没有虚拟机步骤1到3；访问硬件速度上，也不需要像虚拟机需要把控制权交给物理机那样操作。</p>
<p>虚拟机启动时间要十几秒，容器启动时间在1秒内。差距太大了！这就是两者的真正区别。</p>
<p><img alt="" loading="lazy" data-src="https://bvirvw3cnv.feishu.cn/space/api/box/stream/download/asynccode/?code=Y2M2NWVhOWY5N2UxOWFkN2JlYmVjZDE0NDkwMDQzY2ZfSkdLdlY0cXg5QjhlVWd3REk5UEdiaENjOVdMdGFPUFdfVG9rZW46WVplQmJPV3hmb1lyRFF4ZGZIemNpZ1Zqbm5jXzE3NTQ5Mzg2MzM6MTc1NDk0MjIzM19WNA" class="lazyload"></p>
<h3 id="命名空间">命名空间</h3>
<p>内核的命名空间（namespace）机制是用于实现容器。也就是说，容器是通过利用命名空间机制来实现的。</p>
<p>实际上，容器利用独立的命名空间，将一个个进程从其他进程的运行环境中分离出来，就创建了一个独立的运行环境。每个容器就有自己独立的pid ns、user ns、mount ns。</p>
<h3 id="cgroups">Cgroups</h3>
<p>看容器启动Ubuntu 20.04的步骤2中，容器内的第1号进程只不过是PID namespace让我们见到的情形，可以说是个干扰我们的“障眼法”。实际上宿主机它作为第100号进程与其他进程之间也都是平等竞争关系的。也就是说，第100号进程可能被其他进程占用CPU、内存资源，也可能它把所有资源都吃光。这系统资源被进程抢来抢去的情况。一个命名空间机制是没法限制的，命名空间机制是“隔离”，而cgroups就是“限制”。</p>
<p>cgroup用于限制进程的系统资源（如CPU、内存）分配使用的上限。cgroup（全称：Linux control group）以进程的分组（group）为单位对各种资源进行控制(control)，这样限制的。</p>
<h5 id="docker实例">Docker实例</h5>
<p>对于Docker容器，在执行docker run命令的参数指定分配给容器的资源：</p>
<p><code>docker run -it --cpu-period=100000 --cpu-quota=20000 ubuntu /bin/bash</code></p>
<p>然后，查看cgroups文件系统下的CPU子系统中“docker”这个控制组里面的资源限制文件内容：</p>
<pre><code class="language-Shell">cat /sys/fs/cgroup/cpu/docker/5d5c9f67d/cpu.cfs_period_us
100000
cat /sys/fs/cgroup/cpu/docker/5d5c9f67d/cpu.cfs_quota_us 
20000
</code></pre>
<p>这意味着Docker容器分配给CPU只能使用20%的带宽。</p>
<p>因此，实际上在Docker的底层利用了内核的cgroup。</p>
<h1 id="二container的安装和启动">二、container的安装和启动</h1>
<p>从github发布页面下载<a href="https://github.com/apple/container/releases/download/0.3.0/container-0.3.0-installer-signed.pkg" target="_blank" rel="noopener nofollow">container-0.3.0-installer-signed.pkg</a></p>
<p>安装完成后，在iTerm终端用命令启动服务：</p>
<p><code>container system start</code></p>
<h2 id="下载linux镜像并运行">下载Linux镜像并运行</h2>
<p>我下载的是Ubuntu 20.04镜像：</p>
<p><code>container pull ubuntu:20.04</code></p>
<p>这是从Docker hub上拉取的官方镜像。</p>
<p>后台运行容器：</p>
<p><code>container run -d --name my-ubuntu ubuntu:20.04 tail -f /dev/null</code></p>
<p>进入容器终端：</p>
<p><code>container exec -it my-ubuntu /bin/bash</code></p>
<p>这样，就可以在容器内进行操作了。</p>
<h1 id="三了解就这么多足够了">三、了解就这么多，足够了</h1>
<p>苹果的container与现有的Docker容器方案不一样，可以在每个容器运行自己轻量级虚拟机。这款容器工具只能在Mac芯片上运行，使用场景有些小众了。虽然足够安全，性能上也很强。但毕竟是6月10号才出来的，现在才0.3版。</p>
<p>大家有Mac芯片电脑的可以用来跑个Linux。而不用花个大几万去云上虚拟机跑Linux了。</p>
<p>感谢大家的阅读我豆爸写的文章，我们下一篇文章再见。</p>

</div>
<div class="clear"></div>

	<div class="postDesc">posted on 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-08-12 02:58">2025-08-12 02:57</span>&nbsp;
<a href="https://www.cnblogs.com/georgewing">豆豆の爸爸</a>&nbsp;
阅读(<span id="post_view_count">27</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19033038);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19033038', targetLink: 'https://www.cnblogs.com/georgewing/p/19033038', title: '苹果容器Apple container是做什么用的？' })">举报</a>
</div>
