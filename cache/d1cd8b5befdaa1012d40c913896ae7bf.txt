
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/leadingcode/p/19037924" title="发布于 2025-08-14 16:13">
    <span role="heading" aria-level="2">这个Web新API让任何内容都能画中画！</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>大家好，我是 Immerse，一名独立开发者、内容创作者。</p>
<ul>
<li>关注公众号：#沉浸式趣谈，获取最新文章（更多内容只在公众号更新）</li>
<li>个人网站：<code>https://yaolifeng.com</code> 也同步更新。</li>
<li>转载请在文章开头注明出处和版权信息。</li>
</ul>
<p>我会在这里分享关于<code>编程</code>、<code>独立开发</code>、<code>AI干货</code>、<code>开源</code>、<code>个人思考</code>等内容。</p>
<p>如果本文对您有所帮助，欢迎动动小手指一键三连(<code>点赞</code>、<code>评论</code>、<code>转发</code>)，给我一些支持和鼓励，谢谢！</p>
<p>“画中画”（Picture-in-Picture, PiP）说白了，就是让你能一边看视频，一边干别的，互不耽误。就像给你的桌面贴了个能播放视频的“便利贴”，你可以随便拖动它，调整大小，它还总在最前面，贼方便。</p>
<p><img alt="" loading="lazy" data-src="https://yaolifeng.com/other/blogs/pip.png" class="lazyload"></p>
<p><strong>现在主流的搞法：老朋友 <code>requestPictureInPicture()</code></strong></p>
<p>其实，想让 <code>&lt;video&gt;</code> 元素实现画中画，现在已经有挺成熟的方法了，那就是直接在视频元素上调用 <code>requestPictureInPicture()</code> 这个 API。</p>
<p>用起来也挺简单，基本上就是：</p>
<ol>
<li>先搞个 <code>&lt;video&gt;</code> 标签，放上你的视频。</li>
<li>找个时机（比如用户点个按钮），用 JavaScript 拿到这个 video 元素，然后调用 <code>video.requestPictureInPicture()</code>。</li>
</ol>
<p>搞定！</p>
<p>给个简单的代码片段：</p>
<pre><code class="language-html">&lt;video id="myVideo" src="your_video.mp4" controls width="300"&gt;&lt;/video&gt;
&lt;button id="pipButton"&gt;开启画中画&lt;/button&gt;

&lt;script&gt;
    const video = document.getElementById('myVideo');
    const pipButton = document.getElementById('pipButton');

    pipButton.addEventListener('click', async () =&gt; {
        // 先检查浏览器支不支持，是个好习惯
        if (document.pictureInPictureEnabled) {
            try {
                // 如果视频没在画中画模式，就请求进入
                if (document.pictureInPictureElement !== video) {
                    await video.requestPictureInPicture();
                } else {
                    // 如果已经在画中画了，就退出
                    await document.exitPictureInPicture();
                }
            } catch (error) {
                console.error('操作画中画失败:', error);
            }
        } else {
            console.log('你的浏览器不支持画中画功能。');
        }
    });

    // 还可以监听进入和退出的事件，搞点事情
    video.addEventListener('enterpictureinpicture', () =&gt; {
        console.log('进入画中画啦！');
        pipButton.textContent = '退出画中画';
    });

    video.addEventListener('leavepictureinpicture', () =&gt; {
        console.log('退出画中画了。');
        pipButton.textContent = '开启画中画';
    });
&lt;/script&gt;
</code></pre>
<p>大部分现代浏览器（Chrome, Edge, Firefox, Safari 这些）对这个 API 支持得都还不错（当然，细节上可能有点小差异，用的时候最好还是查查 MDN 或者 Can I Use）。</p>
<p><strong>那 <code>documentPictureInPicture.requestWindow</code> 是个啥？</strong></p>
<p><code>window.documentPictureInPicture.requestWindow</code> 更像是个“升级版”或者说“野心更大”的亲戚。</p>
<p><code>requestPictureInPicture()</code> 这个老朋友，它的目标很明确，就是把 <strong><code>&lt;video&gt;</code> 元素</strong> 扔进画中画窗口。</p>
<p>而 <code>documentPictureInPicture.requestWindow()</code> 这个新来的呢，它的目标是 <strong>把任意的 HTML 内容</strong>（理论上是这样的，比如一个 <code>&lt;div&gt;</code>，里面可以包含视频、按钮、文字等等）放进那个悬浮的小窗口里！</p>
<p><strong>小结一下</strong></p>
<ul>
<li>目前最常用、最稳妥的实现方式是针对 <code>&lt;video&gt;</code> 元素的 <code>requestPictureInPicture()</code> API。兼容性相对较好，用起来也直接。</li>
<li>那个新出的 <code>documentPictureInPicture.requestWindow</code> API 呢，目标更宏大，想让任意 HTML 都能 PiP。</li>
</ul>
<p>对这个新技术感兴趣的朋友，可以去翻翻官方文档（下面附了链接），了解下最新进展。</p>
<p>不过动手实践的话，还是先从老朋友 <code>requestPictureInPicture()</code> 开始吧，至少不会被兼容性搞得头秃，哈哈。</p>
<p><strong>参考资料放这儿了：</strong></p>
<ul>
<li>关于 Document PiP (新 API): <a href="https://developer.chrome.com/docs/web-platform/document-picture-in-picture?hl=zh-cn" target="_blank" rel="noopener nofollow">https://developer.chrome.com/docs/web-platform/document-picture-in-picture?hl=zh-cn</a></li>
<li>MDN 上的 Document PiP: <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/DocumentPictureInPicture" target="_blank" rel="noopener nofollow">https://developer.mozilla.org/zh-CN/docs/Web/API/DocumentPictureInPicture</a></li>
<li>MDN 上的 <code>requestWindow</code> 方法: <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/DocumentPictureInPicture/requestWindow" target="_blank" rel="noopener nofollow">https://developer.mozilla.org/zh-CN/docs/Web/API/DocumentPictureInPicture/requestWindow</a></li>
<li>(当然，也别忘了查查 <code>HTMLVideoElement.requestPictureInPicture()</code> 这个老朋友的文档)</li>
</ul>
<h3 id="其他好文推荐">其他好文推荐</h3>
<p><a href="https://mp.weixin.qq.com/s/uqxi-r9y_SkP0mGLybsp8w" target="_blank" rel="noopener nofollow">2025 最新！独立开发者穷鬼套餐</a></p>
<p><a href="https://mp.weixin.qq.com/s/VUFLFQjlr6W7gEJaxfdTzA" target="_blank" rel="noopener nofollow">Windows 安装 Claude Code 的新姿势，保姆级教程</a></p>
<p><a href="https://mp.weixin.qq.com/s/RwH28NideOpfB90Ji09bpQ" target="_blank" rel="noopener nofollow">最近 Vibe Coding 的实践经验分享</a></p>
<p><a href="https://mp.weixin.qq.com/s/2cDJr9Hf2lcrvsMGgw_LtQ" target="_blank" rel="noopener nofollow">分享一款 AI 自动生成流程图的工具</a></p>
<p><a href="https://mp.weixin.qq.com/s/lV34CiMf32M8EaQY49NF2Q" target="_blank" rel="noopener nofollow">一个 Cursor mdc 自动生成器，基于 Gemini 2.5，很实用！</a></p>
<p><a href="https://mp.weixin.qq.com/s/lUqojQDTOmrxqYIle21cYw" target="_blank" rel="noopener nofollow">这个 361k Star 的项目，一定要收藏！</a></p>
<p><a href="https://mp.weixin.qq.com/s/6GdfVnmu30Ki1XeadzuuRg" target="_blank" rel="noopener nofollow">搞定 XLSX 预览？别瞎找了，这几个库（尤其最后一个）真香！</a></p>
<p><a href="https://mp.weixin.qq.com/s/k--Kg_0WvOFwmOUOzo4kDA" target="_blank" rel="noopener nofollow">1分钟把简历变成个人网站！这个免费工具太香了</a></p>
<p><a href="https://mp.weixin.qq.com/s/pR76UwvsJQyRE__LVx6Whg" target="_blank" rel="noopener nofollow">关于 MCP，这几个网站你一定要知道！</a></p>
<p><a href="https://mp.weixin.qq.com/s/gwTbX3hM_GPdDVg3W1ftAQ" target="_blank" rel="noopener nofollow">做 Docx 预览，一定要做这个神库！！</a></p>
<p><a href="https://mp.weixin.qq.com/s/f5pIdyY8grx9t6qYxMgR1w" target="_blank" rel="noopener nofollow">【完整汇总】近 5 年 JavaScript 新特性完整总览</a></p>
<p><a href="https://mp.weixin.qq.com/s/RGFQbqzmrY1NVkdUsQcMBw" target="_blank" rel="noopener nofollow">关于 Node，一定要学这个 10+万 Star 项目！</a></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-08-14 16:14">2025-08-14 16:13</span>&nbsp;
<a href="https://www.cnblogs.com/leadingcode">Immerse666</a>&nbsp;
阅读(<span id="post_view_count">82</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19037924);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19037924', targetLink: 'https://www.cnblogs.com/leadingcode/p/19037924', title: '这个Web新API让任何内容都能画中画！' })">举报</a>
</div>
        