
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/707c/p/18993722" title="发布于 2025-07-20 10:22">
    <span role="heading" aria-level="2">容器面试题</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="一docker面试题">一、docker面试题</h1>
<h2 id="1docker是什么和虚拟机的区别是什么">1、docker是什么，和虚拟机的区别是什么？</h2>
<ul>
<li>
<p>docker是一个基于容器技术开源平台，用于打包，分发，运行应用，容器提供轻量级，快速的虚拟环境</p>
</li>
<li>
<p>区别</p>
<ul>
<li>
<p>vm是整套的操作系统</p>
</li>
<li>
<p>docker是共享主机内核，资源消耗更低，启动的非常快</p>
</li>
<li>
<p>docker启动快</p>
</li>
<li>
<p>占用资源少</p>
</li>
<li>
<p>隔离性</p>
</li>
<li>
<p>可移植性</p>
</li>
</ul>
</li>
</ul>
<h2 id="2docker的核心组件有哪些">2、docker的核心组件有哪些？</h2>
<pre><code class="language-bash"># Docker Engine：运行容器的引擎；

# Docker Image：容器镜像，包含运行环境和应用；

# Docker Container：容器，镜像运行后的实例；

# Dockerfile：构建镜像的配置文件；

# Docker Hub/Registry：镜像仓库，用于镜像的分发和存储；

# Docker Compose：编排多个容器服务的工具。

</code></pre>
<h2 id="3docker镜像和容器的区别是什么">3、docker镜像和容器的区别是什么？</h2>
<ul>
<li>
<p>镜像是只读的模版，类似与快照</p>
</li>
<li>
<p>容器是运行镜像的实例，可以读写操作，是一个运行时环境</p>
</li>
</ul>
<h2 id="4dockerfile-是什么常用的指令有哪些">4、Dockerfile 是什么？常用的指令有哪些？</h2>
<ul>
<li>是定义构建镜像的脚本文件</li>
</ul>
<pre><code class="language-bash"># from 基础镜像

# run 运行命令

# copy/add 复制文件

# expose 声明端口
</code></pre>
<h2 id="5如何查看本地的镜像和容器">5、如何查看本地的镜像和容器</h2>
<pre><code class="language-bash"># docker images

# docker ps 
</code></pre>
<h2 id="6docker-volume-有什么作用如何使用">6、Docker Volume 有什么作用？如何使用？</h2>
<ul>
<li>用于主机和容器之间共享数据或者持久化数据的</li>
</ul>
<h2 id="7如何暴露容器的中端口给主机">7、如何暴露容器的中端口给主机</h2>
<ul>
<li>通过使用-p 宿主机端口:容器端口来实现</li>
</ul>
<h2 id="8简述-docker-compose-的作用和基本结构">8、简述 Docker Compose 的作用和基本结构？</h2>
<ul>
<li>用于定义和运行多个容器的应用</li>
</ul>
<pre><code class="language-yaml">version: "3"
services:
  web:
    image: nginx
    ports:
      - "8080:80"
  db:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root

</code></pre>
<h2 id="9镜像层image-layer是什么构建时如何复用">9、镜像层（image layer）是什么？构建时如何复用？</h2>
<ul>
<li>
<p>每条dockerfile指令都会生成一层，镜像是多层叠加使用的</p>
</li>
<li>
<p>层可以被缓存复用。减少构建时间</p>
</li>
<li>
<p>RUN可以将多个命令写在一行上面，减少层数</p>
</li>
</ul>
<h2 id="10docker-有哪些网络模式">10、Docker 有哪些网络模式？</h2>
<ul>
<li>
<p>桥接模式，容器的模式网络模式</p>
</li>
<li>
<p>主机网络，就是和主机公用网络</p>
</li>
<li>
<p>自定义网络</p>
</li>
</ul>
<h2 id="11如何优化-dockerfile">11、如何优化 Dockerfile？</h2>
<ul>
<li>
<p>使用轻量级别的镜像</p>
</li>
<li>
<p>减少层数</p>
</li>
<li>
<p>利用缓存机制</p>
</li>
<li>
<p>清理中间文件</p>
</li>
</ul>
<h2 id="12如何实现容器间的通信">12、如何实现容器间的通信</h2>
<ul>
<li>在同一个网络中创建容器，容器名即为主机名，可以互相通信</li>
</ul>
<h2 id="13docker-与-kubernetes-的关系是什么">13、Docker 与 Kubernetes 的关系是什么？</h2>
<ul>
<li>
<p>docker提供容器运行环境</p>
</li>
<li>
<p>kubernetes是容器编排平台，可以管理多个docker容器部署</p>
</li>
<li>
<p>k8s可以使用docker作为容器运行时，或者使用containerd</p>
</li>
</ul>
<h2 id="14docker-compose和kuberenets">14、docker compose和kuberenets</h2>
<p>-docker compose是本地开发，小型部署的容器编排工具</p>
<ul>
<li>kubernetes是面向生产环境，集群级别的容器编排平台</li>
</ul>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-20 10:22">2025-07-20 10:22</span>&nbsp;
<a href="https://www.cnblogs.com/707c">w7nn</a>&nbsp;
阅读(<span id="post_view_count">12</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18993722);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18993722', targetLink: 'https://www.cnblogs.com/707c/p/18993722', title: '容器面试题' })">举报</a>
</div>
        