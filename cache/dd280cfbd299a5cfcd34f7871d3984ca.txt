
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Nuraliye/p/18890329" title="发布于 2025-05-22 10:37">
    <span role="heading" aria-level="2">虚拟机搭建CDH6详细过程_三节点为例</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>准备工作<br>
一、安装虚拟机、centos<br>
1、安装VMwareWorkstation虚拟化软件<br>
首先我们使用VMwareWorkstation来快速的进行虚拟机的新建。<br>
本文使用的版本为VMwareWorkstation 16.1.2(版本16.1.2 build-17966106)<br>
2、主节点配置（master）<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522093112376-658133705.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522093121521-1440038298.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522093131323-1904249308.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522093138327-1306079281.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522093149132-1466107796.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522093249666-1977708843.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522093255898-993847986.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522093501496-333361295.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522093508001-1659453761.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522093514266-1674752760.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522093524237-1894540570.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094254502-1796631607.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094302539-220775824.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094315988-1588342058.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094323950-1004586224.png" alt="" loading="lazy"><br>
虚拟机新建完成，可以继续编辑虚拟机，将安装镜像挂载<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094342182-682384329.png" alt="" loading="lazy"><br>
3、设置虚拟机网络<br>
等虚拟机装机完成，点设置进行挂载<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094403794-1124629397.png" alt="" loading="lazy"><br>
Ifconfig  查虚拟机网络<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094418699-162426880.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094432907-995191628.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094442983-586262925.png" alt="" loading="lazy"><br>
网络 vmnet8<br>
子网  IP  192.168.67.0<br>
子网掩码  255.255.255.0<br>
网关  192.168.67.2<br>
进入虚拟机进行网卡设置<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094509117-1990620969.png" alt="" loading="lazy"><br>
[root@localhost /]# cat /etc/sysconfig/network-scripts/ifcfg-ens33<br>
TYPE="Ethernet"<br>
PROXY_METHOD="none"<br>
BROWSER_ONLY="no"<br>
BOOTPROTO=static<br>
DEFROUTE="yes"<br>
IPV4_FAILURE_FATAL="no"<br>
IPV6INIT="yes"<br>
IPV6_AUTOCONF="yes"<br>
IPV6_DEFROUTE="yes"<br>
IPV6_FAILURE_FATAL="no"<br>
IPV6_ADDR_GEN_MODE="stable-privacy"<br>
NAME="ens33"<br>
UUID="82f63c42-7f4b-4b07-a22d-5bb3be8e50d6"<br>
DEVICE="ens33"<br>
ONBOOT="yes"<br>
IPADDR=192.168.67.101<br>
NETMASK=255.255.255.0<br>
GATEWAY=192.168.67.2<br>
DNS1= 8.8.8.8<br>
DNS2=8.8.8.4<br>
重启网络<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094543840-1024827563.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094550691-695815918.png" alt="" loading="lazy"><br>
获取本地 百度 某个节点进行访问<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094605058-722620757.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094609996-142373886.png" alt="" loading="lazy"><br>
解决网络不通的问题<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094623908-2030114112.png" alt="" loading="lazy"><br>
ping: www.baidu.com: Name or service not known<br>
resolv.conf中的nameserver与ifcfg-ens33文件中DNS的设置相同：<br>
vi /etc/resolv.conf<br>
nameserver 8.8.8.8<br>
nameserver 8.8.8.4<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094638572-1540499690.png" alt="" loading="lazy"><br>
[root@localhost /]# history<br>
1  vi ifcfg-ens33<br>
2  service network restart<br>
3  ifconfig<br>
4  ping 192.168.67.101<br>
5  ping 183.2.172.177<br>
6  ping www.baidu.com<br>
7  vi /etc/resolv.conf<br>
8  cat /etc/resolv.conf<br>
9  cd /<br>
10  source /etc/resolv.conf<br>
11  echo $PATH<br>
12  history<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094655484-572669.png" alt="" loading="lazy"><br>
网络已通<br>
4、从节点（slave-1和slave-2）配置<br>
按上述步骤固定网络和疏通网络<br>
内存足够的话 克隆操作是最方便的，但是内存有限只能主节点内存配置高，其余节点少一些了。直接克隆主节点会报内存不足。<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094726409-1263760430.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094735648-1937890167.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094743471-451786563.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094753290-879503689.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094801347-401469035.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094807291-781339254.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094815765-301165122.png" alt="" loading="lazy"><br>
内存爆满，铲掉！重新配置<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094853610-308811439.png" alt="" loading="lazy"><br>
按照master  节点进行 网络配置<br>
[root@localhost /]# history<br>
1  vi /etc/sysconfig/network-scripts/ifcfg-ens33<br>
2  service network restart<br>
3  ping 192.168.92.102<br>
4  ping 192.168.67.102<br>
5  vi /etc/resolv.conf<br>
6  ping www.baidu.com<br>
7  ping 192.168.67.103<br>
8  ping 192.168.67.102<br>
9  ifconfig<br>
10  history<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094911908-1027484624.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094924857-189947302.png" alt="" loading="lazy"><br>
[root@localhost /]# history<br>
1  vi /etc/sysconfig/network-scripts/ifcfg-ens33<br>
2  service network restart<br>
3  vi /etc/resolv.conf<br>
4  ping 192.168.67.103<br>
5  ping www.baidu.com<br>
6  history<br>
上述操作完成 节点2和节点3 网络的固定和通网。<br>
5、xshell远程访问<br>
此时将三台虚拟机开启，最终的效果三台虚拟机正常运行，xshell可以远程同时操作这三台机器<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522094955804-1194813774.png" alt="" loading="lazy"><br>
连接SSH 管理虚拟机<br>
网络 vmnet8<br>
子网  IP  192.168.67.0<br>
子网掩码  255.255.255.0<br>
网关  192.168.67.2<br>
主节点 192.168.67.101 master<br>
节点1  192.168.67.102 slave-1<br>
节点2  192.168.67.103 slave-2<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095027513-2083387252.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095110982-727458295.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095118609-138669481.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095126656-1352974449.png" alt="" loading="lazy"><br>
其余俩节点类似配置登上去即可<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095141882-1146438668.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095150799-984264932.png" alt="" loading="lazy"><br>
6、设置主机名（每一个节点都需要执行）</p>
<h1 id="此处为例子根据实际情况自行设定名称此处将服务器名称改为master">此处为例子，根据实际情况自行设定名称，此处将服务器名称改为master</h1>
<p>hostnamectl set-hostname master</p>
<h1 id="设置第二个节点服务器的名称为slave-1">设置第二个节点服务器的名称为slave-1</h1>
<p>hostnamectl set-hostname slave-1</p>
<h1 id="设置第三个节点服务器的名称为slave-2">设置第三个节点服务器的名称为slave-2</h1>
<p>hostnamectl set-hostname slave-2<br>
输入 exit  退出登录，接着输入ssh root@192.168.67.101  输密码登录即可看到修改的服务器名已生效<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095216286-50335083.png" alt="" loading="lazy"><br>
[root@master ~]# history<br>
1  ifconfig<br>
2  hostnamectl set-hostname master<br>
3  exit<br>
4  history<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095235856-1975328200.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095243450-1373124631.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095251121-16140352.png" alt="" loading="lazy"><br>
也可以通过输入 hostname 来验证是否成功，上述登录登出只是为了直观感受（看着舒服）<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095343808-1523356679.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095349924-1046037892.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095402272-300144422.png" alt="" loading="lazy"><br>
7、修改hosts文件（每一个节点都需要执行）</p>
<h1 id="修改hosts文件每一个节点都需要执行">修改hosts文件（每一个节点都需要执行）</h1>
<h1 id="编辑hosts文件">编辑hosts文件</h1>
<p>vim /etc/hosts</p>
<h1 id="在hosts文件尾部追加如下内容">在hosts文件尾部追加如下内容</h1>
<p>192.168.67.101 master<br>
192.168.67.102 slave-1<br>
192.168.67.103 slave-2<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095431673-593153266.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095449183-1885668409.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095504737-981669986.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095513121-1595351910.png" alt="" loading="lazy"><br>
8、修改每台主机的/etc/sysconfig/network文件(每一个节点都需要执行)</p>
<h1 id="打开文件">打开文件</h1>
<p>vim /etc/sysconfig/network</p>
<h1 id="写入对应的服务器">写入对应的服务器</h1>
<p>HOSTNAME=master</p>
<p>注：其余节点服务器分别写入各自服务器名称<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095600372-203243985.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095608192-1604294425.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095616070-1031924329.png" alt="" loading="lazy"><br>
9、查看主机名是否生效（每一个节点都需要执行）<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095635688-1726678380.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095643273-1442896048.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095651952-80380759.png" alt="" loading="lazy"><br>
10、关闭防火墙（每一个节点都需要执行）</p>
<h1 id="直接全部粘贴复制执行就好">直接全部粘贴复制执行就好</h1>
<p>systemctl stop firewalld <br>
&amp;&amp; systemctl disable firewalld <br>
&amp;&amp; systemctl status firewalld<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095724445-525009713.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095731047-1333759135.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095738778-1465704860.png" alt="" loading="lazy"><br>
11、关闭Selinux（每一个节点都需要执行）</p>
<h1 id="编辑selinux文件">编辑selinux文件</h1>
<p>vim /etc/sysconfig/selinux</p>
<h1 id="修改如下内容将enforcing换成permissive">修改如下内容，将enforcing换成permissive</h1>
<p>SELINUX=permissive</p>
<h3 id="注意此处需要重启服务器不然不生效会导致后面搭建本地yum源的时候报403的错误">注意：此处需要重启服务器，不然不生效，会导致后面搭建本地yum源的时候报403的错误</h3>
<p>重启指令：reboot<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095804296-1316585374.png" alt="" loading="lazy"><br>
其余俩节点进行一样的修改<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095824774-906696291.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095834662-123937445.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095842566-402480866.png" alt="" loading="lazy"><br>
12、配置SSH免密登陆（每一个节点都需要执行）<br>
虚拟机新增三节点如下：<br>
192.168.67.101 master  主节点<br>
192.168.67.102 slave-1  节点1<br>
192.168.67.103 slave-2   节点2</p>
<h1 id="配置ssh免密登陆每一个节点都需要执行">配置SSH免密登陆（每一个节点都需要执行）</h1>
<p><a href="https://blog.csdn.net/Alan3344/article/details/84131661" target="_blank" rel="noopener nofollow">https://blog.csdn.net/Alan3344/article/details/84131661</a><br>
1、设置master免密远程登录其他节点，以root用户为例</p>
<h1 id="在master节点输入如下指令生成密钥">在master节点输入如下指令（生成密钥）：</h1>
<p>ssh-keygen -t rsa</p>
<h1 id="四次回车--密码给空">四次回车  密码给空</h1>
<h1 id="如下操作将公钥发送给每个节点">如下操作，将公钥发送给每个节点：</h1>
<p>ssh-copy-id master<br>
ssh-copy-id slave-1<br>
ssh-copy-id slave-2</p>
<h1 id="上述操作在三个节点上都操作一边即可实现免密码登录服务器">上述操作在三个节点上都操作一边，即可实现免密码登录服务器</h1>
<p><img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095951091-490943971.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522095956005-1229876834.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100004831-1705520447.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100015251-1197540444.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100027954-930073662.png" alt="" loading="lazy"><br>
操作跟主节点一致<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100046620-2129147055.png" alt="" loading="lazy"><br>
验证</p>
<h1 id="在master节点输入如下指令生成密钥-1">在master节点输入如下指令（生成密钥）：</h1>
<p>ssh-keygen -t rsa</p>
<h1 id="四次回车--密码给空-1">四次回车  密码给空</h1>
<h1 id="如下操作将公钥发送给每个节点-1">如下操作，将公钥发送给每个节点：</h1>
<p>ssh-copy-id master<br>
ssh-copy-id slave-1<br>
ssh-copy-id slave-2<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100120734-194802539.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100130458-1539151665.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100140333-1965114784.png" alt="" loading="lazy"><br>
13、设置NTP服务<br>
在主节点上</p>
<h1 id="编辑ntpconf文件">编辑ntp.conf文件</h1>
<p>vim /etc/ntp.conf</p>
<h1 id="注释掉如下内容">注释掉如下内容</h1>
<p>server 0.centos.pool.ntp.org iburst<br>
server 1.centos.pool.ntp.org iburst<br>
server 2.centos.pool.ntp.org iburst<br>
server 3.centos.pool.ntp.org iburst</p>
<h1 id="添加如下内容">添加如下内容</h1>
<p>server 127.127.1.0<br>
Fudge 127.127.1.0 stratum 10</p>
<h1 id="修改如下信息">修改如下信息</h1>
<p>restrict ${当前节点ip} nomodify notrap nopeer noquery<br>
restrict ${集群所在网段的网关} mask ${子网掩码} nomodify notrap<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100232805-93651172.png" alt="" loading="lazy"><br>
其余节点上（其余节点都需要执行）</p>
<h1 id="编辑ntpconf文件-1">编辑ntp.conf文件</h1>
<p>vim /etc/ntp.conf</p>
<h1 id="注释掉如下内容-1">注释掉如下内容</h1>
<p>server 0.centos.pool.ntp.org iburst<br>
server 1.centos.pool.ntp.org iburst<br>
server 2.centos.pool.ntp.org iburst<br>
server 3.centos.pool.ntp.org iburst</p>
<h1 id="添加如下内容-1">添加如下内容</h1>
<p>server ${主节点ip}<br>
Fudge ${主节点ip} stratum 10</p>
<h1 id="修改如下信息-1">修改如下信息</h1>
<p>restrict ${当前节点ip} nomodify notrap nopeer noquery<br>
restrict ${集群所在网段的网关} mask ${子网掩码} nomodify notrap<br>
--slave-1<br>
vim /etc/ntp.conf</p>
<h1 id="注释掉如下内容-2">注释掉如下内容</h1>
<p>server 0.centos.pool.ntp.org iburst<br>
server 1.centos.pool.ntp.org iburst<br>
server 2.centos.pool.ntp.org iburst<br>
server 3.centos.pool.ntp.org iburst</p>
<h1 id="新增如下内容">新增如下内容</h1>
<p>server 192.168.67.101<br>
Fudge 192.168.67.101 stratum 10<br>
restrict 192.168.67.102 nomodify notrap nopeer noquery<br>
restrict 192.168.67.2 mask 255.255.255.0 nomodify notrap<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100307209-462218741.png" alt="" loading="lazy"><br>
--slave-2<br>
vim /etc/ntp.conf</p>
<h1 id="注释掉如下内容-3">注释掉如下内容</h1>
<p>server 0.centos.pool.ntp.org iburst<br>
server 1.centos.pool.ntp.org iburst<br>
server 2.centos.pool.ntp.org iburst<br>
server 3.centos.pool.ntp.org iburst</p>
<h1 id="新增如下内容-1">新增如下内容</h1>
<p>server 192.168.67.101<br>
Fudge 192.168.67.101 stratum 10<br>
restrict 192.168.67.103 nomodify notrap nopeer noquery<br>
restrict 192.168.67.2 mask 255.255.255.0 nomodify notrap<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100332694-1353881387.png" alt="" loading="lazy"><br>
启动时间同步服务器（每一个节点都要执行）</p>
<h1 id="启动时间同步服务器每一个节点都要执行">启动时间同步服务器（每一个节点都要执行）</h1>
<h1 id="直接全部粘贴复制运行即可">直接全部粘贴复制运行即可</h1>
<p>systemctl start ntpd <br>
&amp;&amp; systemctl enable ntpd <br>
&amp;&amp; ntpdate -u 0.cn.pool.ntp.org <br>
&amp;&amp; hwclock --systohc <br>
&amp;&amp; date</p>
<h1 id="查看是否链接上主节点时间服务器">查看是否链接上主节点时间服务器</h1>
<p>Ntpstat<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100411426-1271379080.png" alt="" loading="lazy"><br>
上个步骤报错</p>
<h1 id="解决方案">解决方案</h1>
<p>原因是 上一步的 改动  动网了  上不了网了<br>
ping: www.baidu.com: Name or service not known<br>
vi /etc/resolv.conf<br>
nameserver 8.8.8.8<br>
nameserver 8.8.8.4</p>
<h1 id="不知何原因vi-etcresolvconf-配置总被失效只能每次发现问题时加上nameserver-8888才通网后续找个彻底修改的方法">不知何原因vi /etc/resolv.conf 配置总被失效，只能每次发现问题时加上nameserver 8.8.8.8才通网，后续找个彻底修改的方法。</h1>
<p>重新进行上一步骤，启动时间同步服务器<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100455396-84125239.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100505453-2060495943.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100514879-1446632466.png" alt="" loading="lazy"><br>
以上操作为服务器前期准备操作，接下来就是 下载相关软件进行部署<br>
二、安装软件清单和路径创建<br>
通过网盘分享的文件：cloudera.zip<br>
链接: <a href="https://pan.baidu.com/s/1xhISzC8sHE3sv8F_XoKQ3Q?pwd=7qe5" target="_blank" rel="noopener nofollow">https://pan.baidu.com/s/1xhISzC8sHE3sv8F_XoKQ3Q?pwd=7qe5</a> 提取码: 7qe5<br>
注：以上安装包是一个zip包，内包含安装CDH6.1所有的包，下载后解压即可<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100558524-1010799206.png" alt="" loading="lazy"><br>
1.上传安装包到master主节点<br>
注意：这里的安装目录最好以本文为主，这样后面的指令直接可以粘贴复制即可，不用修改<br>
2.在root目录下新建cloudera目录，并将下载的安装包放于里面</p>
<h1 id="在root目录下创建cloudera目录">在root目录下创建cloudera目录</h1>
<p>cd /root<br>
mkdir cloudera<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100621995-1927091409.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100636465-444135544.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100646175-1607622449.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100650451-276681595.png" alt="" loading="lazy"><br>
3.上传安装包于cloudera目录下，并解压<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100749158-810194765.png" alt="" loading="lazy"><br>
上传安装包后截图<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100802247-1748937689.png" alt="" loading="lazy"></p>
<h1 id="解压指令">解压指令</h1>
<p>unzip cloudera.zip</p>
<h1 id="这里解决一下一个bug文件名命名不对我懒得去更新压缩包内的内容了所有搭建者看到这就自己辛苦下">这里解决一下一个bug，文件名命名不对，我懒得去更新压缩包内的内容了，所有搭建者看到这就自己辛苦下</h1>
<p>cd /root/cloudera/cloudera-manager<br>
mv allkeys.asc.txt allkeys.asc<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100823986-703808501.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100832875-1758740032.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100840205-427662308.png" alt="" loading="lazy"><br>
4.查看所有安装包目录信息<br>
5.安装tree</p>
<h1 id="如果没有tree指令则先下载安装指令">如果没有tree指令，则先下载安装指令</h1>
<p>yum install tree</p>
<h1 id="查看root目录下cloudera目录的目录树">查看root目录下cloudera目录的目录树</h1>
<p>tree -C /root/cloudera<br>
6.tree安装失败处理方案<br>
--tree  下载失败<br>
mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup<br>
wget -O /etc/yum.repos.d/CentOS-Base.repo <a href="http://mirrors.aliyun.com/repo/Centos-7.repo" target="_blank" rel="noopener nofollow">http://mirrors.aliyun.com/repo/Centos-7.repo</a><br>
或者<br>
curl -o /etc/yum.repos.d/CentOS-Base.repo <a href="http://mirrors.aliyun.com/repo/Centos-7.repo" target="_blank" rel="noopener nofollow">http://mirrors.aliyun.com/repo/Centos-7.repo</a><br>
yum clean all</p>
<p>yum makecache<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100910271-544178396.png" alt="" loading="lazy"><br>
[root@master /]# history<br>
1  ifconfig<br>
2  hostnamectl set-hostname master<br>
3  exit<br>
4  history<br>
5  hostname<br>
6  vim /etc/hosts<br>
7  cat /etc/hosts<br>
8  vim /etc/sysconfig/network<br>
9  cat /etc/sysconfig/network<br>
10  hostname<br>
11  systemctl stop firewalld &amp;&amp; systemctl disable firewalld &amp;&amp; systemctl status firewalld<br>
12  vim /etc/sysconfig/selinux<br>
13  reboot<br>
14  history<br>
15  vim /etc/ntp.conf<br>
16  systemctl start ntpd &amp;&amp; systemctl enable ntpd &amp;&amp; ntpdate -u 0.cn.pool.ntp.org &amp;&amp; hwclock --systohc &amp;&amp; date<br>
17  vi /etc/resolv.conf<br>
18  systemctl start ntpd &amp;&amp; systemctl enable ntpd &amp;&amp; ntpdate -u 0.cn.pool.ntp.org &amp;&amp; hwclock --systohc &amp;&amp; date<br>
19  ntpstat<br>
20  cd /root<br>
21  mkdir cloudera<br>
22  ls<br>
23  ll<br>
24  cd cloudera/<br>
25  ls<br>
26  ll<br>
27  unzip cloudera.zip<br>
28  ll<br>
29  cd /root/cloudera/cloudera-manager<br>
30  mv allkeys.asc.txt allkeys.asc<br>
31  ll<br>
32  cd /<br>
33  yum install tree<br>
34  mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup<br>
35  wget -O /etc/yum.repos.d/CentOS-Base.repo <a href="http://mirrors.aliyun.com/repo/Centos-7.repo" target="_blank" rel="noopener nofollow">http://mirrors.aliyun.com/repo/Centos-7.repo</a><br>
36  yum clean all<br>
37  yum makecache<br>
38  yum install tree<br>
39  history<br>
[root@master /]#<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522100936421-419990603.png" alt="" loading="lazy"><br>
在其余俩节点可按喜好进行安装tree(本文安装了)<br>
7.安装常用工具（每一个节点都需要执行）<br>
yum install -y vim wget ntp net-tools<br>
三、在主节点安装本地yum源（只需要在主节点，也就是安装CM的节点）</p>
<h1 id="前面强调了把下载的安装包放于rootcloudera下面此处下面指令就全部粘贴复制运行即可否则需要更改路径信息">前面强调了把下载的安装包放于/root/cloudera下面，此处下面指令就全部粘贴复制运行即可，否则需要更改路径信息</h1>
<p>yum -y install httpd createrepo <br>
&amp;&amp; systemctl start httpd <br>
&amp;&amp; systemctl enable httpd <br>
&amp;&amp; cd /root/cloudera/cloudera-manager/ <br>
&amp;&amp; createrepo . <br>
&amp;&amp; mv /root/cloudera/cloudera-manager/ /var/www/html/<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522101035354-767807784.png" alt="" loading="lazy"><br>
四、安装JDK（只需要在主节点，也就是安装CM的节点）</p>
<h1 id="进入到安装路径下安装前面所示安装包路径则直接粘贴使用">进入到安装路径下，（安装前面所示安装包路径，则直接粘贴使用）</h1>
<p>cd /var/www/html/cloudera-manager/<br>
rpm -ivh oracle-j2sdk1.8-1.8.0+update141-1.x86_64.rpm<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522101053582-1540454198.png" alt="" loading="lazy"><br>
五、安装Mysql（只需要在主节点，也就是安装CM的节点）<br>
1.卸载mariadb</p>
<h1 id="以下指令全部粘贴复制就行">以下指令全部粘贴复制就行</h1>
<h1 id="卸载自带的mariadb">卸载自带的mariadb</h1>
<p>yum -y remove mariadb-libs<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522101117302-578402073.png" alt="" loading="lazy"><br>
2.解压下载MySQL的安装包</p>
<h1 id="解压下载的mysql包">解压下载的MySQL包</h1>
<p>cd /root/cloudera/mysql/<br>
tar -xvf mysql-5.7.27-1.el7.x86_64.rpm-bundle.tar<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522101137428-270305432.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522101145450-964983595.png" alt="" loading="lazy"><br>
3.安装MySQL<br>
<code>#直接全部粘贴复制运行 yum install -y libaio \ &amp;&amp; rpm -ivh mysql-community-common-5.7.27-1.el7.x86_64.rpm \ &amp;&amp; rpm -ivh mysql-community-libs-5.7.27-1.el7.x86_64.rpm \ &amp;&amp; rpm -ivh mysql-community-client-5.7.27-1.el7.x86_64.rpm \ &amp;&amp; rpm -ivh mysql-community-server-5.7.27-1.el7.x86_64.rpm \ &amp;&amp; rpm -ivh mysql-community-libs-compat-5.7.27-1.el7.x86_64.rpm</code><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522101301016-1654102545.png" alt="" loading="lazy"><br>
4.配置 my.cnf<br>
<code>#粘贴复制运行即可 echo character-set-server=utf8 &gt;&gt; /etc/my.cnf</code><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522101333715-2141035861.png" alt="" loading="lazy"><br>
5.创建数据库以及授权</p>
<h1 id="这只是一个创建数据库的sql脚本文件里面涉及到数据库的密码根据个人进行修改即可修改后全部粘贴复制运行就好">这只是一个创建数据库的SQL脚本文件，里面涉及到数据库的密码，根据个人进行修改即可，修改后全部粘贴复制运行就好</h1>
<p><code>( cat &lt;&lt;EOF set password for root@localhost = password('123456Aa.'); grant all privileges on *.* to 'root'@'%' identified by '123456Aa.'; flush privileges; CREATE DATABASE scm DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci; CREATE DATABASE amon DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci; CREATE DATABASE rman DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci; CREATE DATABASE hue DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci; CREATE DATABASE metastore DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci; CREATE DATABASE sentry DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci; CREATE DATABASE nav DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci; CREATE DATABASE navms DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci; CREATE DATABASE oozie DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci; GRANT ALL ON scm.* TO 'scm'@'%' IDENTIFIED BY '123456Aa.'; GRANT ALL ON amon.* TO 'amon'@'%' IDENTIFIED BY '123456Aa.'; GRANT ALL ON rman.* TO 'rman'@'%' IDENTIFIED BY '123456Aa.'; GRANT ALL ON hue.* TO 'hue'@'%' IDENTIFIED BY '123456Aa.'; GRANT ALL ON metastore.* TO 'hive'@'%' IDENTIFIED BY '123456Aa.'; GRANT ALL ON sentry.* TO 'sentry'@'%' IDENTIFIED BY '123456Aa.'; GRANT ALL ON nav.* TO 'nav'@'%' IDENTIFIED BY '123456Aa.'; GRANT ALL ON navms.* TO 'navms'@'%' IDENTIFIED BY '123456Aa.'; GRANT ALL ON oozie.* TO 'oozie'@'%' IDENTIFIED BY '123456Aa.'; SHOW DATABASES; EOF ) &gt;&gt; /root/c.sql</code><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522101411449-1611224166.png" alt="" loading="lazy"><br>
6.启动MySQL服务</p>
<h1 id="直接粘贴复制运行即可">直接粘贴复制运行即可</h1>
<p><code>systemctl enable mysqld &amp;&amp; systemctl start mysqld &amp;&amp; grep password /var/log/mysqld.log | sed 's/.*\(............\)$/\1/'</code><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522101448294-1190472292.png" alt="" loading="lazy"><br>
初始化密码为  8Tkxdu/dTAdj<br>
7.登陆MySQL并运行之前写好的SQL脚本</p>
<h1 id="登陆mysql">登陆MySQL</h1>
<p>mysql -uroot -p</p>
<h1 id="密码就输入上面打印出的初始化密码就好">密码就输入上面打印出的初始化密码就好</h1>
<h1 id="运行sql文件注意你的sql是否放在该目录下建议以文档为主懒得修改那么多">运行SQL文件（注意你的sql是否放在该目录下，建议以文档为主，懒得修改那么多）</h1>
<p>source /root/c.sql<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522101519765-874091605.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522101532368-711108926.png" alt="" loading="lazy"><br>
8.配置MySQL JDBC驱动<br>
输入exit  退出 mysql</p>
<h1 id="直接粘贴复制执行">直接粘贴复制执行</h1>
<p>mkdir -p /usr/share/java/ <br>
&amp;&amp; cd /root/cloudera/mysql-jdbc/;tar -zxvf mysql-connector-java-5.1.47.tar.gz <br>
&amp;&amp; cp /root/cloudera/mysql-jdbc/mysql-connector-java-5.1.47/mysql-connector-java-5.1.47-bin.jar /usr/share/java/mysql-connector-java.jar<br>
需要授权，赋予执行权限<br>
chmod 777&nbsp;mysql-connector-java.jar 或者&nbsp;chmod 775&nbsp;mysql-connector-java.jar<br>
CM搭建、集群部署<br>
一、在主节点上配置本地yum源</p>
<h1 id="配置本地yum源记得要修改ip修改后直接粘贴复制执行即可">配置本地yum源，记得要修改ip，修改后直接粘贴复制执行即可</h1>
<p><code>( cat &lt;&lt;EOF [cloudera-manager] name=Cloudera Manager 6.1.0 baseurl=http://${当前节点IP}/cloudera-manager/ gpgcheck=0 enabled=1 EOF ) &gt;&gt; /etc/yum.repos.d/cloudera-manager.repo \ &amp;&amp; yum clean all \ &amp;&amp; yum makecache</code><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522101657501-252329448.png" alt="" loading="lazy"><br>
二、安装&nbsp;Cloudera Manager<br>
<code>yum install -y cloudera-manager-daemons cloudera-manager-agent cloudera-manager-server</code><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522101739101-1534313551.png" alt="" loading="lazy"><br>
三、&nbsp;配置本地Parcel存储库</p>
<h1 id="以下指令依次粘贴执行就好第一条指令">以下指令依次粘贴执行就好，第一条指令</h1>
<p>`mv /root/cloudera/parcel/* /opt/cloudera/parcel-repo</p>
<h1 id="第二条指令">第二条指令</h1>
<p>cd /opt/cloudera/parcel-repo/</p>
<h1 id="第三条指令">第三条指令</h1>
<p>sha1sum CDH-6.1.0-1.cdh6.1.0.p0.770702-el7.parcel | awk '{ print $1 }' &gt; CDH-6.1.0-1.cdh6.1.0.p0.770702-el7.parcel.sha</p>
<h1 id="第四条指令">第四条指令</h1>
<p>chown -R cloudera-scm:cloudera-scm /opt/cloudera/parcel-repo/*`<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522101832730-1079715881.png" alt="" loading="lazy"><br>
四、初始化scm库</p>
<h1 id="注意修改你所配置的mysql对应scm库的密码">注意修改你所配置的mysql对应scm库的密码</h1>
<p><code>/opt/cloudera/cm/schema/scm_prepare_database.sh mysql scm scm 123456Aa.</code><br>
五、启动CM</p>
<h1 id="直接粘贴复制执行-1">直接粘贴复制执行</h1>
<p><code>systemctl start cloudera-scm-server \ &amp;&amp; sleep 2 \ &amp;&amp; tail -f /var/log/cloudera-scm-server/cloudera-scm-server.log | grep "INFO WebServerImpl:com.cloudera.server.cmf.WebServerImpl: Started Jetty server"</code><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102011280-1242932805.png" alt="" loading="lazy"><br>
六、登陆CM界面完成CDH部署<br>
<a href="http://$" target="_blank">http://$</a>{CM所在节点的IP}:7180<br>
账号/密码：admin/admin<br>
1.登录CM界面<br>
<a href="http://192.168.67.101:7180" target="_blank" rel="noopener nofollow">http://192.168.67.101:7180</a><br>
账号/密码：admin/admin<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102047441-340782846.png" alt="" loading="lazy"><br>
2.用户许可，同意，继续<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102102451-413058765.png" alt="" loading="lazy"><br>
3.选择使用版本，继续<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102122564-2047523049.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102126158-1520486616.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102138217-1998711265.png" alt="" loading="lazy"><br>
4.搜索主机，添加到群集<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102153345-193315432.png" alt="" loading="lazy"><br>
5.自定义存储库（选择配置好的yum源地址）<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102212444-2092096313.png" alt="" loading="lazy"><br>
6.同意jdk使用许可，继续<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102231496-287980265.png" alt="" loading="lazy"><br>
7.提供SSH登录凭据，继续<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102252393-1593237697.png" alt="" loading="lazy"><br>
8.安装Agents（每个节点均需）<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102307487-24710310.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102317166-1404434727.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102324475-1542708429.png" alt="" loading="lazy"><br>
9.安装parcels（每个节点均需）<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102345503-156836627.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102352801-979971290.png" alt="" loading="lazy"><br>
点继续，完成主机检查<br>
10.选择自定义安装的大数据组件<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102417289-542713076.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102427337-26341515.png" alt="" loading="lazy"><br>
11.选择自定义角色分配（均匀一些）<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102444098-821284560.png" alt="" loading="lazy"><br>
12.测试数据库连接<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102500039-595329644.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102509683-22074881.png" alt="" loading="lazy"><br>
点测试连接<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102525413-86059787.png" alt="" loading="lazy"><br>
未找到驱动<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102544086-1886255406.png" alt="" loading="lazy"><br>
问题原因：102、103未找到MySQL驱动<br>
只在主节点放驱动，未在slave-1  slave-2 放驱动<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102618813-956794990.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102632036-34778755.png" alt="" loading="lazy"><br>
解决方案：将MySQL驱动上传至102、103<br>
创建驱动目录，把文件上传到俩从节点  102  和 103<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102659054-1886330305.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102708702-42598214.png" alt="" loading="lazy"><br>
mkdir cloudera<br>
上传mysql-jdbc文件至/root/cloudera  目录下 即可<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102724335-708052393.png" alt="" loading="lazy"><br>
点测试连接，通过，继续下一步<br>
13.首次运行<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102752206-1871966724.png" alt="" loading="lazy"><br>
hive启动MetaStore报错<br>
报错信息：First failure: Command (Validate Hive Metastore schema (78)) has failed<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102810338-567257587.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102821646-1519637254.png" alt="" loading="lazy"><br>
创建HIVE  数据库失败<br>
First failure: Command (Validate Hive Metastore schema (78)) has failed<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102840161-1705659493.png" alt="" loading="lazy"><br>
返回返回返回  改回 只在master  节点安装<br>
解决方法：<br>
&nbsp;&nbsp; &nbsp;在cdh角色配置页中，将hive的Hive Metastore&nbsp;server配置为master机器<br>
--此解决方案失败，继续排查<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102904806-962135577.png" alt="" loading="lazy"><br>
sudo cp  /root/cloudera/mysql-jdbc/mysql-connector-java-5.1.47/mysql-connector-java-5.1.47-bin.jar /usr/share/java/mysql-connector-java.jar<br>
此方案也不行<br>
参考第三种方案<br>
<a href="https://blog.csdn.net/Mrerlou/article/details/121157908" target="_blank" rel="noopener nofollow">https://blog.csdn.net/Mrerlou/article/details/121157908</a><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522102928047-2135309807.png" alt="" loading="lazy"><br>
根据错误提示可以看到，初始化过程中没有连接mysql数据库，而是去连接默认的derby数据库，于是打开/etc/hive/conf/hive-site.xml，我们可以看到它并没有相关mysql元数据库的配置--这个方案是可行的，最后也是用了此方案，我配置信息配错了，可直接翻到最后查看准确的配置信息。<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522103010285-214679487.png" alt="" loading="lazy"><br>
所以需要在/etc/hive/conf/hive-site.xml（cloudera/parcels/CDH/lib/hive/conf的软链实体）中手动添加元数据库配置，添加如下内容：<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522103025597-815734678.png" alt="" loading="lazy"><br>
删库重来<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522103052717-1250091171.png" alt="" loading="lazy"><br>
不能解决此问题，继续排查<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522103107566-309094273.png" alt="" loading="lazy"><br>
chmod 777&nbsp;mysql-connector-java.jar或者&nbsp;chmod 775&nbsp;mysql-connector-java.jar<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522103134386-1127342193.png" alt="" loading="lazy"><br>
重新执行还是不行（崩溃ing）<br>
修改文件打开限制<br>
vi /etc/security/limits.conf</p>
<ul>
<li>soft nofile 65536</li>
<li>hard nofile 65536</li>
<li>soft nproc 131072</li>
<li>soft nproc 131072</li>
</ul>
<p>报错信息变了<br>
Failed to get schema version, Cause:Table 'metastore.VERSION' doesn't exist<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522103200127-13098898.png" alt="" loading="lazy"><br>
初始化脚本在<br>
cd /opt/cloudera/parcels/CDH/lib/hive/bin/<br>
执行初始化命令<br>
./schematool -initSchema -dbType mysql --verbose<br>
根据错误提示可以看到，初始化过程中没有连接mysql数据库，而是去连接默认的derby数据库，于是打开/etc/hive/conf/hive-site.xml，我们可以看到它并没有相关mysql元数据库的配置<br>
新增配置：<br>
<code>vi /etc/hive/conf/hive-site.xml</code><br>
<code>&lt;property&gt;   &lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt;   &lt;value&gt;jdbc:mysql://192.168.67.101:3306/metastore?createDatabaseIfNotExist=true&lt;/value&gt; &lt;/property&gt; &lt;property&gt;   &lt;name&gt;javax.jdo.option.ConnectionDriverName&lt;/name&gt;   &lt;value&gt;com.mysql.jdbc.Driver&lt;/value&gt; &lt;/property&gt; &lt;property&gt;   &lt;name&gt;javax.jdo.option.ConnectionUserName&lt;/name&gt;   &lt;value&gt;root&lt;/value&gt; &lt;/property&gt; &lt;property&gt;   &lt;name&gt;javax.jdo.option.ConnectionPassword&lt;/name&gt;   &lt;value&gt;123456Aa.&lt;/value&gt; &lt;/property&gt;</code><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522103301639-1569229491.png" alt="" loading="lazy"><br>
<code>cd /opt/cloudera/parcels/CDH/lib/hive/bin/</code><br>
<code>./schematool -initSchema -dbType mysql --verbose</code><br>
再次执行完就能看到schemaTool completed信息，可回到CM主页进行重跑。<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522103349695-174953004.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522103358157-2087740399.png" alt="" loading="lazy"><br>
14.安装服务完成<br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522103414158-1672324772.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522103422590-1401351085.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522103430115-1244339508.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522103438357-2074363830.png" alt="" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3609669/202505/3609669-20250522103449372-2017224369.png" alt="" loading="lazy"></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.022178274077546297" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-22 10:38">2025-05-22 10:37</span>&nbsp;
<a href="https://www.cnblogs.com/Nuraliye">Nuraliye</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18890329);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18890329', targetLink: 'https://www.cnblogs.com/Nuraliye/p/18890329', title: '虚拟机搭建CDH6详细过程_三节点为例' })">举报</a>
</div>
        