
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/vipstone/p/18987971" title="发布于 2025-07-16 17:22">
    <span role="heading" aria-level="2">面试官：如何实现企业级MCP分布式部署？</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>作为一个企业级的 MCP Server 服务，只运行在单机环境上是远远不够的，我们需要让它部署在多个机器上，并且支持分布式的调用，这其中当然还包括负载均衡和节点变更的动态感知等内容。</p>
<p>那么如何让你的 MCP 服务支持这些功能呢？接下来，我们一起来看。</p>
<h2 id="实现方案">实现方案</h2>
<p>MCP 生产级别的分布式部署方案主要包含以下两种实现：</p>
<ol>
<li><strong>MCP Server + Nacos 注册中心</strong>：最原始的实现方式，借助 Nacos 提供的健康检查机制，加上负载均衡器实现了分布式部署实现流程如下图所示：</li>
</ol>
<p><img src="https://img2024.cnblogs.com/blog/172074/202507/172074-20250716172152338-472556509.png" alt="1" loading="lazy"></p>
<ol start="2">
<li><strong>使用 Spring AI Alibaba MCP Gateway 实现分布式部署</strong>：Spring AI Alibaba MCP Gateway 是基于 Nacos 提供的 MCP server registry 实现，它为普通应用建立一个中间代理层，从而实现了分布式部署的效果。一方面将 Nacos 中注册的服务信息转换成 MCP 协议的服务器信息，以便 MCP 客户端可以无缝调用这些服务；另一方面可以实现协议转化，将 MCP 协议转换为对后端 HTTP、Dubbo 等服务的调用。基于 Spring AI Alibaba MCP Gateway，您无需对原有业务代码进行改造，新增或者删除 MCP 服务（在Nacos中）无需重启代理应用，它的执行流程如下：</li>
</ol>
<p><img src="https://img2024.cnblogs.com/blog/172074/202507/172074-20250716172200404-880995419.png" alt="2" loading="lazy"></p>
<p>显然第二种实现方式更简单，且功能更强大，那我们来看下 Spring AI Alibaba MCP Gateway 的具体配置和代码实现。</p>
<h2 id="具体配置和代码实现">具体配置和代码实现</h2>
<p>以 Nacos 3.0 版本为例，它的实现步骤如下：</p>
<ol>
<li>在 nacos 中进入 mcp 列表管理功能，创建一个 mcp server。</li>
</ol>
<p><img src="https://img2024.cnblogs.com/blog/172074/202507/172074-20250716172208618-1894930485.png" alt="3" loading="lazy"></p>
<ol start="2">
<li>在 mcp server 中添加 tools 相关内容，表明要暴露的 tools 信息。</li>
</ol>
<p><img src="https://img2024.cnblogs.com/blog/172074/202507/172074-20250716172215815-1767297056.png" alt="4" loading="lazy"></p>
<ol start="3">
<li>在 tools 信息中，需要配置一个 request template，格式与 higress 目前支持的格式完全兼容</li>
</ol>
<pre><code class="language-json">{
  "requestTemplate": {
    "url": "/v3/weather/weatherInfo?key={{ .config.credentials.api_key.data }}",
    "argsToUrlParam": true,
    "method": "GET"
  },
  "responseTemplate": {
    "body": "response value {{ .value }}"
  }
}
</code></pre>
<ol start="4">
<li>在工程中引入相关依赖</li>
</ol>
<pre><code class="language-xml">&lt;dependencies&gt;
  &lt;dependency&gt;
    &lt;groupId&gt;org.springframework&lt;/groupId&gt;
    &lt;artifactId&gt;spring-web&lt;/artifactId&gt;
  &lt;/dependency&gt;

  &lt;!-- Spring AI Alibaba MCP Gateway --&gt;
  &lt;dependency&gt;
    &lt;groupId&gt;com.alibaba.cloud.ai&lt;/groupId&gt;
    &lt;artifactId&gt;spring-ai-alibaba-mcp-gateway&lt;/artifactId&gt;
    &lt;version&gt;1.0.0.3-SANPSHOT&lt;/version&gt;
  &lt;/dependency&gt;

  &lt;!-- Spring AI Alibaba MCP Server --&gt;
  &lt;dependency&gt;
    &lt;groupId&gt;org.springframework.ai&lt;/groupId&gt;
    &lt;artifactId&gt;spring-ai-alibaba-starter-nacos-mcp-server&lt;/artifactId&gt;
    &lt;version&gt;1.0.0.3-SANPSHOT&lt;/version&gt;
  &lt;/dependency&gt;

&lt;/dependencies&gt;
</code></pre>
<ol start="5">
<li>配置 spring.ai.alibaba.mcp.nacos 相关信息</li>
</ol>
<pre><code class="language-yaml">spring:
      ai:
        alibaba:
          mcp:
            nacos:
              server-addr: 127.0.0.1:8848
              namespace: public
              username:
              password:
              gateway:
                service-names:
                 - echo-server
</code></pre>
<ol start="6">
<li>启动服务之后，会读取 nacos 中持有的 mcp server 相关配置信息，对外暴露出来，供 mcp client 进行调用</li>
</ol>
<p><img src="https://img2024.cnblogs.com/blog/172074/202507/172074-20250716172225277-1621606965.png" alt="5" loading="lazy"></p>
<p>这样就完成了企业级 MCP 分布式部署与动态更新的问题，其中包括流量的负载均衡、节点变更动态感知等关键技术的具体实现。</p>
<h2 id="小结">小结</h2>
<p>MCP 在面试中被问到的概率很大，因为它是热门的 AI 技术。这其中包括 MCP 生产级别的使用问题，如 MCP 如何进行安全验证？MCP 底层实现原理？底层实现协议？MCP 服务重启后客户端如何自动重连？MCP 如何进行企业级部署？等问题，当然这些问题视频版和图文版的解析，也会陆续发布到我的《AI 常见面试题》专栏里，类似的问题我应该会整理 70~80 道，让我们一起学习和掌握知识的核心原理，找到更好的工作，加油。</p>
<h4 id="参考文档">参考文档</h4>
<p>Spring AI Alibaba 官方博客</p>
<blockquote>
<p>本文已收录到我的技术小站 <a href="https://www.javacn.site" target="_blank" rel="noopener nofollow">www.javacn.site</a>，其中包含的内容有：Spring AI、LangChain4j、Dify、Spring AI Alibaba、智能体（AI Agent）、MCP、Function Call、RAG、向量数据库、Prompt、多模态、向量数据库、嵌入模型、AI 常见面试问题等内容。</p>
</blockquote>

</div>
<div id="MySignature" role="contentinfo">
    <div style="text-align: center; color: red">
关注下面二维码，订阅更多精彩内容。
<br>
<img style="margin-left: 0px" src="https://images.cnblogs.com/cnblogs_com/vipstone/848916/o_211225130402_gognzhonghao.jpg">
</div>

<div style="display: none">
    <img src="http://icdn.apigo.cn/gitchat/rabbitmq.png?imageView2/0/w/500/h/400">
</div>
<div style="margin-bottom: 50px; display: none">

<img title="微信打赏" src="http://icdn.apigo.cn/myinfo/wchat-pay.png" alt="微信打赏">
<br>

<div style="display: none">
<span style="display: block; position: absolute; height: 40px; top: 50%; margin-top: -20px">关注公众号（加好友）：</span>

<img style="margin-left: 144px" src="http://icdn.apigo.cn/gongzhonghao2.png?imageView2/0/w/120/h/120">
</div>
<p></p>

<div id="AllanboltSignature">
    <p style="border-top: #e0e0e0 1px dashed; border-right: #e0e0e0 1px dashed; border-bottom: #e0e0e0 1px dashed; border-left: #e0e0e0 1px dashed; padding-top: 10px; padding-right: 10px; padding-bottom: 10px; padding-left: 60px; background: url(&quot;https://images.cnblogs.com/cnblogs_com/lloydsheng/239039/o_copyright.gif&quot;) #e5f1f4 no-repeat 1% 50%; font-family: 微软雅黑; font-size: 11px" id="PSignature">
        <br> 作者：
        <a href="http://vipstone.cnblogs.com/" target="_blank">王磊的博客</a>
        <br> 出处：
        <a href="http://vipstone.cnblogs.com/" target="_blank">http://vipstone.cnblogs.com/</a>
        <br>
    </p>
</div></div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-16 17:22">2025-07-16 17:22</span>&nbsp;
<a href="https://www.cnblogs.com/vipstone">磊哥|www.javacn.site</a>&nbsp;
阅读(<span id="post_view_count">151</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18987971);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18987971', targetLink: 'https://www.cnblogs.com/vipstone/p/18987971', title: '面试官：如何实现企业级MCP分布式部署？' })">举报</a>
</div>
        