
		<h2>
			<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ydswin/p/18666134" title="发布于 2025-01-12 11:47">
    <span role="heading" aria-level="2">shell脚本快速检查192.168.1网段ip是否在用</span>
    

</a>

		</h2>
		<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>检查 <code>192.168.1</code> 网段中哪些 IP 地址正在使用，可以使用 Shell 脚本结合 <code>ping</code> 命令来并发扫描整个网段。以下是实现这一功能的完整脚本：</p>
<hr>
<h3 id="脚本检查-1921681-网段-ip-是否在用"><strong>脚本：检查 <code>192.168.1</code> 网段 IP 是否在用</strong></h3>
<pre><code class="language-bash">#!/bin/bash

# 定义网段
NETWORK="192.168.1"

# 定义超时时间（秒）
TIMEOUT=1

# 定义并行扫描的 IP 数量
PARALLEL=20

# 日志函数
function log_info() {
  echo -e "[INFO] $1"
}

function log_success() {
  echo -e "\033[32m[SUCCESS] $1\033[0m"
}

function log_error() {
  echo -e "\033[31m[ERROR] $1\033[0m"
}

# 检查单个 IP 是否在线
function check_ip() {
  local ip=$1
  if ping -c 1 -W "$TIMEOUT" "$ip" &amp;&gt; /dev/null; then
    log_success "IP $ip is online"
  else
    log_error "IP $ip is offline"
  fi
}

# 主函数
function main() {
  log_info "Scanning network $NETWORK.0/24..."

  # 使用循环遍历 1-254 的 IP 地址
  for i in {1..254}; do
    ip="$NETWORK.$i"
    check_ip "$ip" &amp;

    # 控制并行数量
    if [[ $(jobs -r -p | wc -l) -ge $PARALLEL ]]; then
      wait -n
    fi
  done

  # 等待所有后台任务完成
  wait
}

# 执行主函数
main
</code></pre>
<hr>
<h3 id="脚本说明"><strong>脚本说明</strong></h3>
<ol>
<li>
<p><strong>网段定义</strong></p>
<ul>
<li><code>NETWORK="192.168.1"</code>：定义要扫描的网段。</li>
</ul>
</li>
<li>
<p><strong>超时时间</strong></p>
<ul>
<li><code>TIMEOUT=1</code>：设置 <code>ping</code> 命令的超时时间为 1 秒。</li>
</ul>
</li>
<li>
<p><strong>并行扫描</strong></p>
<ul>
<li><code>PARALLEL=20</code>：设置同时扫描的 IP 数量为 20 个，以提高扫描效率。</li>
</ul>
</li>
<li>
<p><strong>日志输出</strong></p>
<ul>
<li>使用不同颜色的日志区分在线和离线的 IP 地址：
<ul>
<li>绿色：IP 在线。</li>
<li>红色：IP 离线。</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong><code>check_ip</code> 函数</strong></p>
<ul>
<li>使用 <code>ping</code> 命令检查单个 IP 是否在线。</li>
<li>如果 <code>ping</code> 成功，则 IP 在线；否则，IP 离线。</li>
</ul>
</li>
<li>
<p><strong>主函数 <code>main</code></strong></p>
<ul>
<li>遍历 <code>192.168.1.1</code> 到 <code>192.168.1.254</code> 的所有 IP 地址。</li>
<li>使用 <code>&amp;</code> 将 <code>check_ip</code> 放入后台执行，实现并行扫描。</li>
<li>使用 <code>jobs</code> 和 <code>wait</code> 控制并行任务数量。</li>
</ul>
</li>
</ol>
<hr>
<h3 id="使用方法"><strong>使用方法</strong></h3>
<ol>
<li>将脚本保存为 <code>scan_network.sh</code>。</li>
<li>赋予执行权限：<pre><code class="language-bash">chmod +x scan_network.sh
</code></pre>
</li>
<li>运行脚本：<pre><code class="language-bash">./scan_network.sh
</code></pre>
</li>
</ol>
<hr>
<h3 id="示例输出"><strong>示例输出</strong></h3>
<pre><code class="language-plaintext">[INFO] Scanning network 192.168.1.0/24...
[SUCCESS] IP 192.168.1.1 is online
[ERROR] IP 192.168.1.2 is offline
[SUCCESS] IP 192.168.1.3 is online
[ERROR] IP 192.168.1.4 is offline
...
</code></pre>
<hr>
<h3 id="优化建议"><strong>优化建议</strong></h3>
<ol>
<li>
<p><strong>增加 IP 范围参数</strong><br>
可以通过命令行参数指定扫描的 IP 范围，例如：</p>
<pre><code class="language-bash">./scan_network.sh 192.168.1.10 192.168.1.20
</code></pre>
<p>修改脚本：</p>
<pre><code class="language-bash">START_IP=${1:-1}
END_IP=${2:-254}

for i in $(seq "$START_IP" "$END_IP"); do
  ip="$NETWORK.$i"
  check_ip "$ip" &amp;
done
</code></pre>
</li>
<li>
<p><strong>保存结果到文件</strong><br>
可以将扫描结果保存到文件中，便于后续分析：</p>
<pre><code class="language-bash">LOG_FILE="scan_results.txt"
function log_success() {
  echo -e "\033[32m[SUCCESS] $1\033[0m"
  echo "[SUCCESS] $1" &gt;&gt; "$LOG_FILE"
}
function log_error() {
  echo -e "\033[31m[ERROR] $1\033[0m"
  echo "[ERROR] $1" &gt;&gt; "$LOG_FILE"
}
</code></pre>
</li>
<li>
<p><strong>使用 <code>fping</code> 替代 <code>ping</code></strong><br>
<code>fping</code> 是一个更高效的网络扫描工具，支持批量扫描。如果系统安装了 <code>fping</code>，可以替换 <code>ping</code> 命令：</p>
<pre><code class="language-bash">fping -c 1 -t "$TIMEOUT" "$ip" &amp;&gt; /dev/null
</code></pre>
</li>
</ol>
<hr>
<h3 id="总结"><strong>总结</strong></h3>
<p>该脚本通过并行 <code>ping</code> 扫描 <code>192.168.1</code> 网段，快速检测哪些 IP 地址在线。通过调整并行数量和超时时间，可以平衡扫描速度和准确性。如果需要更高效的扫描，可以考虑使用 <code>nmap</code> 或 <code>fping</code> 等专业工具。</p>

</div>
<div id="MySignature" role="contentinfo">
    <p>本文来自博客园，作者：<a href="https://www.cnblogs.com/ydswin/" target="_blank">dashery</a>，转载请注明原文链接：<a href="https://www.cnblogs.com/ydswin/p/18666134" target="_blank">https://www.cnblogs.com/ydswin/p/18666134</a></p>
</div>
<div class="clear"></div>

		<p class="postfoot">
			posted on 
<span id="post-date" data-last-update-days="0.013953660895833333" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-12 11:57">2025-01-12 11:47</span>&nbsp;
<a href="https://www.cnblogs.com/ydswin">dashery</a>&nbsp;
阅读(<span id="post_view_count">2</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18666134" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18666134);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18666134', targetLink: 'https://www.cnblogs.com/ydswin/p/18666134', title: 'shell脚本快速检查192.168.1网段ip是否在用' })">举报</a>

		</p>
	