
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/bgnd5257/p/18850372" title="发布于 2025-04-27 20:38">
    <span role="heading" aria-level="2">Java日期格式化中的“YYYY”陷阱：为什么跨年周会让你的年份突然+1？.md</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h4 id="结论先行">结论先行</h4>
<p><strong>在Java中使用 <code>YYYY-MM-dd</code> 格式化日期时，若日期所在的周跨年，年份可能会被错误计算为下一年（如2021年12月26日显示为2022年）。而使用 <code>yyyy-MM-dd</code> 会始终返回正确的年份。问题的根源是 <code>YYYY</code> 和 <code>yyyy</code> 对年份的定义不同：<code>YYYY</code> 是「基于周的年份」，而 <code>yyyy</code> 是「自然年份」。</strong></p>
<blockquote>
<p>文章持续更新，可以微信搜一搜「 <strong>半个脑袋儿</strong> 」第一时间阅读</p>
</blockquote>
<hr>
<h4 id="问题复现">问题复现</h4>
<p>尝试用以下代码格式化 <code>2021-12-26</code>：</p>
<pre><code class="language-java">import java.text.SimpleDateFormat;
import java.util.Date;

public class DateFormatDemo {
    public static void main(String[] args) {
        SimpleDateFormat sdf1 = new SimpleDateFormat("YYYY-MM-dd");
        SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd");
        
        Date date = new Date(121, 11, 26); // 2021年12月26日
        
        System.out.println(sdf1.format(date)); // 输出：2022-12-26
        System.out.println(sdf2.format(date)); // 输出：2021-12-26
    }
}
</code></pre>
<p>结果差异明显，<code>YYYY</code> 的年份跳到了2022年。</p>
<hr>
<h4 id="原因解析">原因解析</h4>
<h5 id="1-yyyy-是基于周的年份">1. <code>YYYY</code> 是「基于周的年份」</h5>
<ul>
<li><strong>定义</strong>：<code>YYYY</code> 遵循 ISO 8601 标准，表示「日期所在周所属的年份」。</li>
<li><strong>周的计算规则</strong>：
<ul>
<li>默认一周从 <strong>周日开始</strong>，到 <strong>周六结束</strong>（可通过 <code>Locale</code> 调整，如某些地区从周一开始）。</li>
<li>若某周跨年（即该周包含新年的第一天），则这一周会被归属到新年所在的年份。</li>
</ul>
</li>
</ul>
<p>以 <strong>2021年12月26日</strong> 为例：</p>
<ul>
<li>该周为 <strong>2021年12月26日（周日）至2022年1月1日（周六）</strong>。</li>
<li>由于这一周的大部分天数（4天）属于2022年，因此 <code>YYYY</code> 会将其归属到2022年。</li>
</ul>
<h5 id="2-yyyy-是自然年份">2. <code>yyyy</code> 是「自然年份」</h5>
<ul>
<li><strong>定义</strong>：<code>yyyy</code> 直接表示日期所在的自然年份，与周无关。</li>
<li>无论日期是否跨周或跨月，始终返回实际年份。</li>
</ul>
<hr>
<h4 id="如何避免踩坑">如何避免踩坑？</h4>
<ol>
<li>
<p><strong>优先使用 <code>yyyy</code></strong><br>
除非明确需要基于周的年份计算，否则格式化日期时应使用 <code>yyyy</code>。</p>
</li>
<li>
<p><strong>理解业务场景</strong></p>
<ul>
<li>财务系统、周报统计等可能需要 <code>YYYY</code>（如按周生成报表）。</li>
<li>普通日期场景（如订单时间、日志记录）应使用 <code>yyyy</code>。</li>
</ul>
</li>
<li>
<p><strong>注意 <code>Locale</code> 的影响</strong></p>
<ul>
<li>不同地区的周起始日不同（如美国默认周日开始，欧洲多从周一开始）。</li>
<li>可通过 <code>SimpleDateFormat.setLocale()</code> 或 <code>DateTimeFormatter.withLocale()</code> 指定区域。</li>
</ul>
</li>
<li>
<p><strong>Java 8+ 的替代方案</strong><br>
使用 <code>DateTimeFormatter</code> 时，<code>yyyy</code> 对应 <code>Y</code> 和 <code>u</code> 的行为更清晰：</p>
<pre><code class="language-java">LocalDate date = LocalDate.of(2021, 12, 26);
DateTimeFormatter formatter1 = DateTimeFormatter.ofPattern("YYYY-MM-dd");
DateTimeFormatter formatter2 = DateTimeFormatter.ofPattern("yyyy-MM-dd");

System.out.println(date.format(formatter1)); // 2022-12-26
System.out.println(date.format(formatter2)); // 2021-12-26
</code></pre>
</li>
</ol>
<hr>
<h4 id="总结">总结</h4>
<ul>
<li><strong><code>YYYY</code> 与 <code>yyyy</code> 的区别</strong>：基于周的年份 vs 自然年份。</li>
<li><strong>根本原因</strong>：跨年周的归属规则导致 <code>YYYY</code> 的年份偏移。</li>
<li><strong>最佳实践</strong>：若无特殊需求，始终使用 <code>yyyy-MM-dd</code> 格式化日期。</li>
</ul>
<p>一个小小的格式字符差异，可能导致跨年时的严重逻辑错误。切记：<strong>日期格式化无小事！</strong></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.6055892026574075" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-27 20:38">2025-04-27 20:38</span>&nbsp;
<a href="https://www.cnblogs.com/bgnd5257">半个脑袋儿</a>&nbsp;
阅读(<span id="post_view_count">71</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18850372);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18850372', targetLink: 'https://www.cnblogs.com/bgnd5257/p/18850372', title: 'Java日期格式化中的“YYYY”陷阱：为什么跨年周会让你的年份突然+1？.md' })">举报</a>
</div>
        