
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/HarmonyOSSDK/p/18923471" title="发布于 2025-06-11 11:21">
    <span role="heading" aria-level="2">多格式文件在线预览，提升移动设备文件处理效率与体验</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>随着移动设备处理文档的需求日益增加，传统的文件处理方式需要用户将文件下载到本地，再通过相应的软件打开，这种方式不仅效率低，而且需要安装多种软件以兼容不同文件格式，用户期望能够在App内直接预览各种格式的文件。</p>
<p>在线预览技术可以快速浏览和筛选文件，节省用户时间和精力，提升用户体验。随着文件数量的增多，用户需要预览的文件格式也越来越丰富，包括但不限于文档、PDF、图片、视频等，以满足用户多样化的需求。</p>
<p>HarmonyOS SDK<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V13/preview-introduction-V13?ha_source=hms1" title=" 文件预览服务" target="_blank" rel="noopener nofollow"> 文件预览服务</a>（Preview Kit）为应用提供便捷的文件快速预览服务。应用可以通过Preview Kit提供的预览API，快速启动预览界面，实现对各类文件的预览。</p>
<p>通过Preview Kit，用户可以对用户文件（包括图片、视频、音频、文本、html等）进行内容查看。同时用户还可以通过点击右上角的“使用其他应用打开”的按钮跳转到具体的应用进行展示，从而进行其他操作，如图片的旋转、放大等。</p>
<p>目前，Preview Kit实现pptx、docx、xlxs等主流办公文档类型的预览能力，主要是借助WPS的能力实现的，预览界面会有WPS提供的技术支持，并展示WPS的入口，统一按照文件预览的风格进行页面布局。</p>
<p><img src="https://img2024.cnblogs.com/blog/2396482/202506/2396482-20250611112133501-1351609307.gif" alt="image" loading="lazy"></p>
<h3 id="场景介绍">场景介绍</h3>
<p>Preview Kit能够对图片、视频、音频、文本、html进行预览查看，满足绝大多数办公开发的需求，包括：</p>
<p>•	预览展示：呈现文件的基本内容，如文本、图片等，支持选中多文件，在预览列表切换显示。</p>
<p>•	文件分享：将文件以分享的形式传给另一个软件。</p>
<p>•	使用其他软件打开：使用预览打开时，会获取到该文件类型的默认打开软件，然后点击“使用其他应用打开”进行跳转。</p>
<p>•	图片翻转放大：在非2in1设备时，预览能够对图片进行旋转放大等处理。</p>
<h4 id="支持的文件类型">支持的文件类型</h4>
<p>Preview Kit支持图片、视频、音频、文本、html以及文件夹进行查看，具体类型如下：</p>
<p><img src="https://img2024.cnblogs.com/blog/2396482/202506/2396482-20250611112141977-519759217.png" alt="image" loading="lazy"></p>
<h3 id="开发步骤">开发步骤</h3>
<ol>
<li>导入相关模块。</li>
</ol>
<pre><code>import { filePreview } from '@kit.PreviewKit';
import { BusinessError } from '@kit.BasicServicesKit';
</code></pre>
<ol start="2">
<li>判断是否可以预览。</li>
</ol>
<pre><code>let uri = 'file://docs/storage/Users/currentUser/Documents/1.txt';  
let uiContext = getContext(this);
filePreview.canPreview(uiContext, uri).then((result) =&gt; {    // 传入支持的文件类型且项目存在时会返回true
  console.info(`Succeeded in obtaining the result of whether it can be previewed. result = ${result}`);
}).catch((err: BusinessError) =&gt; {
  console.error(`Failed to obtain the result of whether it can be previewed, err.code = ${err.code}, err.message = ${err.message}`);
});
</code></pre>
<ol start="3">
<li>调用openPreview，实现打开文件预览的功能。</li>
</ol>
<p>通过Promise方式打开文件</p>
<pre><code>let uiContext = getContext(this);
let displayInfo: filePreview.DisplayInfo = {
  x: 100,
  y: 100,
  width: 800,
  height: 800
};
let fileInfo: filePreview.PreviewInfo = {
  title: '1.txt',
  uri: 'file://docs/storage/Users/currentUser/Documents/1.txt',
  mimeType: 'text/plain'
};
filePreview.openPreview(uiContext, fileInfo, displayInfo).then(() =&gt; {
  console.info('Succeeded in opening preview');
}).catch((err: BusinessError) =&gt; {
  console.error(`Failed to open preview, err.code = ${err.code}, err.message = ${err.message}`);
});
</code></pre>
<p>通过CallBack回调函数方式打开文件</p>
<pre><code>let uiContext = getContext(this);
let displayInfo: filePreview.DisplayInfo = {
  x: 100,
  y: 100,
  width: 800,
  height: 800
};
let fileInfo: filePreview.PreviewInfo = {
  title: '1.txt',
  uri: 'file://docs/storage/Users/currentUser/Documents/1.txt',
  mimeType: 'text/plain'
};
filePreview.openPreview(uiContext, fileInfo, displayInfo, (err) =&gt; {
  if (err &amp;&amp; err.code) {
    console.error(`Failed to open preview, err.code = ${err.code}, err.message = ${err.message}`);    
    return;
  }
  console.info('Succeeded in opening preview');
});
</code></pre>
<p>传入多个文件打开预览，仅移动端可用。</p>
<pre><code>let uiContext = getContext(this);
let fileInfo: filePreview.PreviewInfo = {
  title: '1.txt',
  uri: 'file://docs/storage/Users/currentUser/Documents/1.txt',
  mimeType: 'text/plain'
};
let fileInfo1: filePreview.PreviewInfo = {
  title: '2.txt',
  uri: 'file://docs/storage/Users/currentUser/Documents/2.txt',
  mimeType: 'text/plain'
};
let files: Array&lt;filePreview.PreviewInfo&gt; = new Array();
files.push(fileInfo);
files.push(fileInfo1);
filePreview.openPreview(uiContext, files, 0).then(() =&gt; {
  console.info('Succeeded in opening preview');
}).catch((err: BusinessError) =&gt; {
  console.error(`Failed to open preview, err.code = ${err.code}, err.message = ${err.message}`);
});
</code></pre>
<p>说明：示例代码中使用的uri均为示例作用，开发者实际使用时需要保证uri对应文件存在且拥有该文件的持久化权限。如发生预览失败问题，可参照Preivew Kit的<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V13/preview-faq-V13?ha_source=hms1" title="常见问题" target="_blank" rel="noopener nofollow">常见问题</a>进行处理。</p>
<p><strong>了解更多详情&gt;&gt;</strong></p>
<p>获取<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V13/preview-introduction-V13?ha_source=hms1" title="文件预览服务开发指导文档" target="_blank" rel="noopener nofollow">文件预览服务开发指导文档</a></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-06-11 11:22">2025-06-11 11:21</span>&nbsp;
<a href="https://www.cnblogs.com/HarmonyOSSDK">HarmonyOS_SDK</a>&nbsp;
阅读(<span id="post_view_count">22</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18923471);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18923471', targetLink: 'https://www.cnblogs.com/HarmonyOSSDK/p/18923471', title: '多格式文件在线预览，提升移动设备文件处理效率与体验' })">举报</a>
</div>
        