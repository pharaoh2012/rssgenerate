
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/weizwz/p/18837946" title="发布于 2025-04-21 09:12">
    <span role="heading" aria-level="2">Vitepress 建站资源汇总</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>整理下使用 Vitepress 搭建博客过程中使用过的一些资源和方案</p>
<h2 id="主要参考站点">主要参考站点</h2>
<p><a href="https://vitepress.dev/zh/guide/what-is-vitepress" target="_blank" rel="noopener nofollow">Vitepress 官方文档</a></p>
<p><a href="https://vitepress.yiov.top/" target="_blank" rel="noopener nofollow">VitePress快速上手中文教程</a>，这个站点扩展很全，包括静态部署选择，样式美化，第三方插件等，都是手把手教程，很细</p>
<p><a href="https://xaviw.github.io/XaviDocs/%E5%B7%A5%E5%85%B7%E7%B3%BB%E5%88%97/VitePress%E6%90%AD%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%90%AD%E5%BB%BA.html" target="_blank" rel="noopener nofollow">XaviDocs个人技术文档</a>，借鉴了部分 VitePress 的使用经验</p>
<p><a href="https://github.com/MaLuns/vitepress-theme-async" target="_blank" rel="noopener nofollow">vitepress主题 vitepress-theme-async 源码</a>，借鉴了部分对 Vitepress 的配置和操作逻辑，阅读这些代码对你理解 Vitepress 会有很大帮助</p>
<p><a href="https://www.oneyangcrown.top" target="_blank" rel="noopener nofollow">晚阳Crown</a>，借鉴了使用 Cloudflare R2 搭建图床以及使用 Cloudflare 管理域名的经验</p>
<h2 id="详细配置参考">详细配置参考</h2>
<p>下面会列出 Vitepress 使用细节的一些配置参考文章，包括域名、图床、搜索、评论系统、统计文章等模块</p>
<h3 id="暗黑模式切换动画">暗黑模式切换动画</h3>
<p>参考这篇文章</p>
<p><a href="https://note.weizwz.com/vitepress/basic/dark-animation" target="_blank" rel="noopener nofollow">VitePress 切换暗黑模式丝滑动画</a></p>
<h3 id="使用-docsearch-搜索">使用 DocSearch 搜索</h3>
<p>官方教程 <a href="https://vitepress.dev/zh/reference/default-theme-search#algolia-search" target="_blank" rel="noopener nofollow">Vitepress - Algolia Search</a></p>
<p>详细教程 <a href="https://vitepress.yiov.top/docsearch.html" target="_blank" rel="noopener nofollow">VitePress快速上手中文教程 - DocSearch</a></p>
<p>参考我的配置</p>
<pre><code class="language-ts">import type { DefaultTheme } from 'vitepress'

export const algolia: DefaultTheme.AlgoliaSearchOptions = {
  appId: "appid",
  apiKey: "apikey",
  indexName: 'weizwz',
  placeholder: '搜索文档',
  translations: {
    button: {
      buttonText: '搜索文档',
      buttonAriaLabel: '搜索文档'
    },
    modal: {
      searchBox: {
        resetButtonTitle: '清除查询条件',
        resetButtonAriaLabel: '清除查询条件',
        cancelButtonText: '取消',
        cancelButtonAriaLabel: '取消'
      },
      startScreen: {
        recentSearchesTitle: '搜索历史',
        noRecentSearchesText: '没有搜索历史',
        saveRecentSearchButtonTitle: '保存至搜索历史',
        removeRecentSearchButtonTitle: '从搜索历史中移除',
        favoriteSearchesTitle: '收藏',
        removeFavoriteSearchButtonTitle: '从收藏中移除'
      },
      errorScreen: {
        titleText: '无法获取结果',
        helpText: '你可能需要检查你的网络连接'
      },
      footer: {
        selectText: '选择',
        navigateText: '切换',
        closeText: '关闭',
        searchByText: '搜索提供者'
      },
      noResultsScreen: {
        noResultsText: '无法找到相关结果',
        suggestedQueryText: '你可以尝试查询',
        reportMissingResultsText: '你认为该查询应该有结果？',
        reportMissingResultsLinkText: '点击反馈'
      }
    }
  }
}
</code></pre>
<h3 id="添加图片查看器-fancybox">添加图片查看器 Fancybox</h3>
<p><a href="https://fancyapps.com/fancybox/" target="_blank" rel="noopener nofollow">Fancybox</a> 是一款非常流行且功能强大的 JavaScript 图片查看库，集成可参考这篇文章</p>
<p><a href="https://note.weizwz.com/vitepress/extend/vitepress-fancybox" target="_blank" rel="noopener nofollow">VitePress 添加图片查看器 Fancybox</a></p>
<h3 id="添加不蒜子统计">添加不蒜子统计</h3>
<p>参考这篇文章</p>
<p><a href="https://note.weizwz.com/vitepress/extend/busuanzi" target="_blank" rel="noopener nofollow">VitePress 添加不蒜子统计</a></p>
<h3 id="文章统计自定义首页归档页标签页">文章统计，自定义首页，归档页，标签页</h3>
<p>参考这篇文章</p>
<p><a href="https://note.weizwz.com/vitepress/extend/post-data" target="_blank" rel="noopener nofollow">VitePress 统计文章，新建归档页和标签页</a></p>
<p>其他相关参考资料：</p>
<p><a href="https://github.com/MaLuns/vitepress-theme-async/blob/dev/packages/vitepress-theme-async/composables/posts.data.ts" target="_blank" rel="noopener nofollow">vitepress-theme-async 主题文章统计</a></p>
<p><a href="https://note.weizwz.com/vitepress/basic/pages-components" target="_blank" rel="noopener nofollow">Vitepress 新建页面和注册组件</a></p>
<h3 id="静态部署">静态部署</h3>
<p>部署到 GitHub Pages ，参考文章</p>
<p><a href="https://vitepress.yiov.top/assets.html#%E9%83%A8%E7%BD%B2" target="_blank" rel="noopener nofollow">VitePress快速上手中文教程 - 部署</a></p>
<p>主要是建立 GitHub 部署工作流，项目根目录建立文件 <code>.github/workflows/main.yml</code>，我之前的配置如下：</p>
<pre><code class="language-yml"># 将静态内容部署到 GitHub Pages 的简易工作流程
name: Deploy static content to Pages

# env:
#   VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
#   VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  # 仅在推送到默认分支时运行。
  push:
    branches: ['main']，暂停部署到 GitHub pages

  # 这个选项可以使你手动在 Action tab 页面触发工作流
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages。
permissions:
  contents: read
  pages: write
  id-token: write

# 允许一个并发的部署
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  # 构建
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0
  # github page deploy
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm run build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload dist repository
          path: './dist'

  # 部署
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
    
      # vercel deploy
      # - name: Restore file modification time 🕒
        # run: find docs/post -name '*.md' | while read file; do touch -d "$(git log -1 --format="@%ct" "$file")" "$file"; done
        # run: "git ls-files -z | while read -d '' path; do touch -d \"$(git log -1 --format=\"@%ct\" \"$path\")\" \"$path\"; done"
      # - name: Install Vercel-cli🔧
      #   run: npm install --global vercel@latest
      # - name: Pull Vercel Environment Information
      #   run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      # - name: Build Project Artifacts
      #   run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      # - name: Deploy Project Artifacts to Vercel
      #   run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
</code></pre>
<p>这个配置，也是可以部署到 Vercel 的，注释掉 <code>github-pages</code> 部分，放开后面的 <code>vercel deploy</code> 部分即可。需要注意构建命令和输出目录，原始构建命令为 <code>npm run docs:build</code>，输出目录 <code>docs/.vitepress/dist</code></p>
<h3 id="添加-github-giscus-评论系统">添加 Github Giscus 评论系统</h3>
<p>Github Giscus 的好处简单易用，限制的地方在于需要仓库公开，代码必须托管在 Github 上。参考文章</p>
<p><a href="https://note.weizwz.com/vitepress/extend/vitepress-giscus" target="_blank" rel="noopener nofollow">VitePress 添加 Giscus 评论</a></p>
<p>其他链接：</p>
<p><a href="https://giscus.app/zh-CN" target="_blank" rel="noopener nofollow">Github Giscus官网</a></p>
<p><a href="https://xaviw.github.io/XaviDocs/%E5%B7%A5%E5%85%B7%E7%B3%BB%E5%88%97/VitePress%E6%90%AD%E5%BB%BA/%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD.html" target="_blank" rel="noopener nofollow">VitePress 添加评论功能</a></p>
<h3 id="使用-cloudflare-管理域名">使用 Cloudflare 管理域名</h3>
<p>详细教程：<a href="https://www.oneyangcrown.top/posts/cloudflare-hosted-domain-cdn-ssl-guide/" target="_blank" rel="noopener nofollow">Cloudflare托管域名</a></p>
<p>如果你的域名在阿里云或者腾讯云，找到域名解析，<strong>修改DNS服务器地址</strong>为 Cloudflare 上的即可</p>
<p><img src="https://img2024.cnblogs.com/blog/1086129/202504/1086129-20250421090036164-1587513908.png" alt="image" loading="lazy"></p>
<h3 id="使用-cloudflare-r2-配置图床">使用 Cloudflare R2 配置图床</h3>
<p>教程：<a href="https://www.oneyangcrown.top/posts/cloudflare-r2-free-image-hosting-guide/" target="_blank" rel="noopener nofollow">Cloudflare R2对象存储搭建高速免费图床完全指南</a></p>
<p>这篇文章很详细，先配置 R2，然后使用自定义域名。</p>
<p>注意，<strong>配置过程中创建的 API令牌，访问密钥等，需要我们储存起来</strong>，方便后续在 PicList 中使用；</p>
<p>第二个需要注意的是，<strong>图床我们一般使用 子域名</strong>。比如，你在 Cloudflare 上管理的域名为 <code>weizwz.com</code>，R2 的自定义域名你可以输入 <code>p.weizwz.com</code>，然后 Cloudflare 会自动给你添加 子域名解析，实在是在贴心了。</p>
<p><img src="https://img2024.cnblogs.com/blog/1086129/202504/1086129-20250421090132906-2105208090.png" alt="image" loading="lazy"></p>
<p>关于图床API的使用，就是上传和删除等操作，这里建议使用工具 <strong>PicList</strong>，<a href="https://piclist.cn/app.html" target="_blank" rel="noopener nofollow">官网文档</a> 很详细，包括下载和配置等</p>
<p>由于我们使用的是 Cloudflare R2，重点查看这里 <a href="https://piclist.cn/configure.html#%E5%86%85%E7%BD%AEaws-s3" target="_blank" rel="noopener nofollow">PicList 内置AWS S3 配置</a></p>
<p>上传配置里，我们可以设置水印，上传时压缩图片，还有图片转换为 webp 格式，进一步减小图片体积</p>
<p><img src="https://img2024.cnblogs.com/blog/1086129/202504/1086129-20250421090224981-2084897673.png" alt="image" loading="lazy"></p>
<p>同步配置，参考 <a href="https://piclist.cn/configure.html#%E5%90%8C%E6%AD%A5%E4%B8%8E%E9%85%8D%E7%BD%AE" target="_blank" rel="noopener nofollow">设置配置同步 </a>，可以在 github/gitee/gitea 中创建一个私有仓库，然后将 PicList 配置上传。</p>
<p>配置同步需要的 GitHub token，点击GitHub上的个人头像，<code>Settings</code>，拉到最下面点击 <code> Developer settings</code>，然后会跳转到新界面，按下图创建</p>
<p><img src="https://img2024.cnblogs.com/blog/1086129/202504/1086129-20250421090239747-705528045.png" alt="image" loading="lazy"></p>
<p>创建好后，复制 token，粘贴到 PicList 配置里，然后就可以上传你的配置到仓库了。</p>
<h3 id="使用-cloudflar-pages-托管网站">使用 Cloudflar Pages 托管网站</h3>
<p>参考文章：<a href="https://www.oneyangcrown.top/posts/cloudflare-pages-deploy-hexo-blog-guide/" target="_blank" rel="noopener nofollow">Cloudflare Pages免费部署Hexo博客</a></p>
<p>这篇文章中的博客是 Hexo 框架，因此需要修改构建配置，我的构建命令是 <code>pnpm i &amp;&amp; pnpm run build</code>，构建输出 <code>./dist</code>。这是因为我对 Vitepress 原始构建配置有修改，如果你没有修改这块的话，</p>
<p>构建命令应该是 <code>pnpm i &amp;&amp; vitepress build docs</code>，输入目录 <code>docs/.vitepress/dist</code></p>
<p><img src="https://img2024.cnblogs.com/blog/1086129/202504/1086129-20250421090331609-2094279035.png" alt="image" loading="lazy"></p>
<p>构建监听分支，默认主分支 main，当 main 分支有修改时，Cloudflare 将自动构建部署。</p>
<h3 id="使用-twikoo-评论系统">使用 Twikoo 评论系统</h3>
<p>Twikoo 评论，需要部署前后端，包括数据库，操作略有复杂，但是不限制代码托管和服务托管，自定义程度更高</p>
<p><a href="https://twikoo.js.org/" target="_blank" rel="noopener nofollow">Twikoo官方文档</a> ，非常详细</p>
<p>先建立 <a href="https://twikoo.js.org/mongodb-atlas.html" target="_blank" rel="noopener nofollow">MongoDB Atlas 数据库</a></p>
<p>然后选择云厂商部署，我这里选择的 <a href="https://twikoo.js.org/backend.html#vercel-%E9%83%A8%E7%BD%B2" target="_blank" rel="noopener nofollow">Vercel 部署</a>，因为操作相对简单，使用 <a href="https://github.com/twikoojs/twikoo-cloudflare" target="_blank" rel="noopener nofollow">Cloudflare workers 部署</a> 限制较多，部署成功后，修改默认域名为你的子域名，需要去你的域名管理那上修改 DNS 解析。</p>
<p><img src="https://img2024.cnblogs.com/blog/1086129/202504/1086129-20250421090424164-826667374.png" alt="image" loading="lazy"></p>
<p>以 Cloudflar 为例，添加 <code>CNAME</code> 类型，子域名 <code>twikoo</code>，内容 <code>cname.vercel-dns.com</code></p>
<p><img src="https://img2024.cnblogs.com/blog/1086129/202504/1086129-20250421090433172-1361932774.png" alt="image" loading="lazy"></p>
<p>后端部署完成后，需要前端项目也集成，修改我们的 Vitepress 项目，参考下面链接</p>
<p><a href="https://github.com/twikoojs/twikoo/issues/715" target="_blank" rel="noopener nofollow">VitePress 集成 twikoo 参考解决方案</a></p>
<p>总之步骤就是：<code>pnpm install twikoo</code> -&gt; 封装 <code>Twikoo.vue</code> 组件 -&gt; 插入 <code>Layout</code> 插槽</p>
<p>前后端都处理好后，界面就能正常展示了，但是我们还要处理下邮件功能</p>
<p><img src="https://img2024.cnblogs.com/blog/1086129/202504/1086129-20250421090446828-548147044.png" alt="image" loading="lazy"></p>
<p>首次打开设置按钮后，会有设置密码框，设置一个复杂密码并记住。然后进入配置管理，选择邮件通知</p>
<p><img src="https://img2024.cnblogs.com/blog/1086129/202504/1086129-20250421090454287-1877695106.png" alt="image" loading="lazy"></p>
<p>按照提示输入你的邮箱，邮箱授权码等即可。最后有个邮件测试，测试后，你能收到一封邮件，说明功能可用了</p>
<p><strong>暂时只有这些，后续有新的内容时再补充……</strong></p>

</div>
<div id="MySignature" role="contentinfo">
    <div id="copyrightWeizwz">
    <p><span class="post-copyright-meta">文章作者：</span><span class="post-copyright-info"><a href="https://www.cnblogs.com/weizwz/" target="_blank">唯之为之</a></span></p>
    <p><span class="post-copyright-meta">文章出处：</span><span class="post-copyright-info"><a href="https://www.cnblogs.com/weizwz/p/18837946" target="_blank">https://www.cnblogs.com/weizwz/p/18837946</a></span></p>
    <p><span class="post-copyright-meta">版权声明：</span><span class="post-copyright-info">本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh-hans" target="_blank">「CC BY-NC-SA 4.0 DEED」</a> 国际许可协议，转载请注明出处！</span></p>
    <p>内容粗浅，如有错误，欢迎大佬批评指正</p>
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.08176412710416667" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-21 09:12">2025-04-21 09:12</span>&nbsp;
<a href="https://www.cnblogs.com/weizwz">唯之为之</a>&nbsp;
阅读(<span id="post_view_count">46</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18837946);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18837946', targetLink: 'https://www.cnblogs.com/weizwz/p/18837946', title: 'Vitepress 建站资源汇总' })">举报</a>
</div>
        