
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/kobeBryant-8/p/18659724" title="发布于 2025-01-08 15:23">
    <span role="heading" aria-level="2">linux下服务器稳定性压力测试工具stress安装使用介绍</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p><strong>linux</strong>下服务器稳定性压⼒测试⼯具<strong>stress</strong>安装使⽤介绍</p>
<p>一、简介</p>
<p>1、stress⼯具是Linux下一款压⼒测试⼯具， 可以模拟系统⾼负载运⾏ ， 同时可协助我们进⾏软件稳 定性相关测试。</p>
<p>⼆、<strong>stress</strong>⼯具下载安装</p>
<p>1、本地tar包⽅式安装</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 128, 1)"> 1</span> 下载地址： https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">fossies.org/linux/privat/stress-1.0.4.tar.gz</span>
<span style="color: rgba(0, 128, 128, 1)"> 2</span> <span style="color: rgba(0, 0, 255, 1)">sudo</span> <span style="color: rgba(0, 0, 255, 1)">tar</span> -zxvf stress-<span style="color: rgba(128, 0, 128, 1)">1</span>.<span style="color: rgba(128, 0, 128, 1)">0</span>.<span style="color: rgba(128, 0, 128, 1)">4</span>.<span style="color: rgba(0, 0, 255, 1)">tar</span><span style="color: rgba(0, 0, 0, 1)">.gz
</span><span style="color: rgba(0, 128, 128, 1)"> 3</span> cd stress-<span style="color: rgba(128, 0, 128, 1)">1</span>.<span style="color: rgba(128, 0, 128, 1)">0</span>.<span style="color: rgba(128, 0, 128, 1)">4</span>/
<span style="color: rgba(0, 128, 128, 1)"> 4</span> ./<span style="color: rgba(0, 0, 0, 1)">condfigure
</span><span style="color: rgba(0, 128, 128, 1)"> 5</span> <span style="color: rgba(0, 0, 255, 1)">make</span>
<span style="color: rgba(0, 128, 128, 1)"> 6</span> <span style="color: rgba(0, 0, 255, 1)">make</span><span style="color: rgba(0, 0, 0, 1)"> check
</span><span style="color: rgba(0, 128, 128, 1)"> 7</span> <span style="color: rgba(0, 0, 255, 1)">make</span> <span style="color: rgba(0, 0, 255, 1)">install</span>
<span style="color: rgba(0, 128, 128, 1)"> 8</span> 安装完毕~
<span style="color: rgba(0, 128, 128, 1)"> 9</span> stress --<span style="color: rgba(0, 0, 0, 1)">version
</span><span style="color: rgba(0, 128, 128, 1)">10</span> 终端显⽰： stress <span style="color: rgba(128, 0, 128, 1)">1</span>.<span style="color: rgba(128, 0, 128, 1)">0</span>.<span style="color: rgba(128, 0, 128, 1)">4</span> 安装成功</pre>
</div>
<p>2、在线安装</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">sudo</span><span style="color: rgba(0, 0, 0, 1)"> apt update
</span><span style="color: rgba(0, 0, 255, 1)">sudo</span> apt <span style="color: rgba(0, 0, 255, 1)">install</span> stress</pre>
</div>
<p>三、<strong>stress</strong>⼯具参数说明</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 128, 1)">1</span> <span style="color: rgba(0, 0, 0, 1)">常⽤选项：
</span><span style="color: rgba(0, 128, 128, 1)">2</span> -<span style="color: rgba(0, 0, 0, 1)">v #显⽰软件版本信息
</span><span style="color: rgba(0, 128, 128, 1)">3</span> -c #产⽣多个处理sqrt（ ）函数的CPU进程 -<span style="color: rgba(0, 0, 0, 1)">t #执⾏运⾏多少秒
</span><span style="color: rgba(0, 128, 128, 1)">4</span> -i #产⽣多个处理sync（ ）函数的磁盘I/O进程 -m #产⽣多个处理malloc()内存分配函数的进程 -d #产⽣多个执⾏<span style="color: rgba(0, 0, 255, 1)">write</span>()函数的进程</pre>
</div>
<p>四、<strong>stress</strong>⼯具命令详解</p>
<p>1、消耗CPU资源</p>
<p>stress消耗cpu资源⽅式是通过调⽤sqrt函数计算由rand函数产⽣的随机数平⽅根实现。</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 128, 1)">1</span> stress -c <span style="color: rgba(128, 0, 128, 1)">4</span></pre>
</div>
<p><img src="https://img2024.cnblogs.com/blog/1747104/202501/1747104-20250108152033012-991480740.jpg"></p>
<p><img src="https://img2024.cnblogs.com/blog/1747104/202501/1747104-20250108151827359-2081519332.png" alt="" loading="lazy"></p>
<p>2、消耗内存资源</p>
<p>--vm-keep 下⾯命令产⽣两个⼦进程， 每个进程分配500M内存， ⼀直占⽤不释放。</p>
<div class="cnblogs_code">
<pre>stress --vm <span style="color: rgba(128, 0, 128, 1)">2</span> --vm-bytes 500M --vm-keep</pre>
</div>
<p><img src="https://img2024.cnblogs.com/blog/1747104/202501/1747104-20250108152032957-649105802.jpg"></p>
<p>--vm-hang N 下⾯命令产⽣两个⼦进程， 指⽰每个进程分配500M内存后休眠N秒， 然后释放内存， 重 复执⾏这个过程。</p>
<div class="cnblogs_code">
<pre>stress --vm -<span style="color: rgba(128, 0, 128, 1)">2</span> --vm-bytes 500M --vm-hang <span style="color: rgba(128, 0, 128, 1)">5</span></pre>
</div>
<p><img src="https://img2024.cnblogs.com/blog/1747104/202501/1747104-20250108151938296-1474464987.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>3、消耗硬盘空间及磁盘IO</p>
<p>下⾯命令产⽣2个进程不断在磁盘上创建500M⼤小的⽂件并写⼊内容， 2个进程反复调⽤sync函数将内 存上内容写到硬盘上。</p>
<div class="cnblogs_code">
<pre>stress -i <span style="color: rgba(128, 0, 128, 1)">2</span> -d <span style="color: rgba(128, 0, 128, 1)">2</span> --hdd-bytes 500M --timeout <span style="color: rgba(128, 0, 128, 1)">5</span></pre>
</div>
<p>五、测试思路</p>
<p>当需要测试⼀款应⽤或web服务在设备上运⾏的稳定性时， 通常情况下我们都是在理想情况下进⾏， 设备资源⽆任何波动变化；而实际使⽤情况并⾮如此， 不可能⼀台服务器只部署⼀个应⽤。</p>
<p>所以更需要考虑的是稳定性测试的第⼆和第三阶段， 在服务资源波动情况下， 我们的应⽤或web服务 能否稳定运⾏ ， 当受到外界⼲扰时能否做出正确的处理。 因此我们就需要借助⼯具或脚本来模拟资源使 ⽤情况， 进而更真实的贴合⽤⼾现场环境， 测试我们的程序稳定性。</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.21073766772685185" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-08 15:24">2025-01-08 15:23</span>&nbsp;
<a href="https://www.cnblogs.com/kobeBryant-8">半路出家_24</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18659724" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18659724);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18659724', targetLink: 'https://www.cnblogs.com/kobeBryant-8/p/18659724', title: 'linux下服务器稳定性压力测试工具stress安装使用介绍' })">举报</a>
</div>
        