
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/vipstone/p/18903521" title="发布于 2025-05-30 08:58">
    <span role="heading" aria-level="2">Dify搭建AI图片生成助手中的坑！</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>使用 Dify 搭建 AI 图片生成助手并不是什么难事，而且不需要你会编程知识，也能轻松实现。</p>
<p>但是，Dify 在搭建 AI 图片生成助手的过程中会遇到很多坑，例如以下这些：</p>
<ul>
<li>有些组件随着时间的推移，已经不能正常调用了；</li>
<li>有些组件在国内需要魔法才能使用；</li>
<li>有些组件需要复杂的本地部署才能正常调用；</li>
<li>有些组件虽然能用，但生成的速度、成本、质量，是无法应用于生产环境的。</li>
</ul>
<p>所以，接下来本文就带你来避开这些坑。</p>
<h2 id="1搭建ai图片生成助手">1.搭建AI图片生成助手</h2>
<p>在 Dify 中，搭建 AI 图片生成助手的步骤主要分为以下几步：</p>
<ol>
<li><strong>添加“文生图”组件</strong>（这一步有很多坑）。</li>
<li><strong>获取组件 API Key</strong>，通常需要去官网注册账号，申请 API Key。</li>
<li>在 Dify 中创建“Agent”应用。</li>
<li>添加提示词。</li>
<li>添加“文生图”工具。</li>
<li>编写提示词，生成图片。</li>
</ol>
<p>接下来我们分别来看。</p>
<h2 id="2添加文生图组件">2.添加文生图组件</h2>
<p>所谓“文生图”组件，指的是根据文字生成图片的组件（工具），Dify 中提供的和“图片”有关的插件如下：</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202505/172074-20250530085552759-33213318.png" alt="" loading="lazy"></p>
<p>这些组件大致可以这样<strong>分类：</strong></p>
<ol>
<li><strong>本地模型</strong></li>
<li><strong>云端模型</strong>
<ul>
<li><strong>需要魔法</strong></li>
<li><strong>不需要魔法</strong></li>
</ul>
</li>
</ol>
<p>当然，其中本地模型因为部署麻烦，所以我们这里不会使用（但企业级应用为了考虑数据隐私性可能会用），需要魔法的云端模型我们也不会用，执行速度慢，并且对于小白用户不友好。所以<strong>最符合预期的模型为不需要魔法的云端大模型</strong>。</p>
<p>不需要魔法的（好用一点的）云端大模型有以下这些：</p>
<ul>
<li><strong>Doubao</strong>：字节旗下大模型，非官方维护插件，对使用者来说无影响。</li>
<li><strong>智普 AI</strong>：清华团队开发的国内知名大模型，并且智普 AI 提供了可以免费生成图片的大模型（生成图片效果一般）。</li>
<li><strong>讯飞星火</strong>：讯飞公司旗下生成图片的大模型。</li>
<li><strong>Stability</strong>：国际知名图片生成大模型，不需要魔法可调用，<strong>但不支持中文提示词，以及只为新用户提供了 25 积分（一次图片生成大概会消耗 4 积分）</strong>。</li>
</ul>
<h3 id="21-避坑硅基流动siliconflow">2.1 避坑硅基流动（SiliconFlow）</h3>
<p>有人这里会说生成图片为什么不选择硅基流动（SiliconFlow）啊？它支持 Flux 和 Stable Diffusion 都是图片生成届注明的大模型，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202505/172074-20250530085605531-1782624723.png" alt="" loading="lazy"></p>
<p>当然，我刚开始的时候也是这么想的，把 SiliconFlow 插件添加上，申请一个 API Key 可以选择调用多个大模型，看起来是很美好的时候。</p>
<p>但是当我尝试的时候，发现<strong>这两种图片生成的大模型压根就调用不了</strong>，起初我以为是配置权限或 API Key 填写的某个环节出现了问题，各种折腾，到最后发现效果还是一样的，完全不用了。</p>
<p>于是就 Google 了一把，发现了问题，原来是早些时候确实是能正常调用的，但是在今年 2 月份，<strong>硅基流动为了规范化运营，已经把很多大模型给下线了，其中也包括咱们要使用的 Flux 和 Stable Diffusion，这是不能调用的关键</strong>，但 Dify 中的插件并没有将这两个工具去掉，所以调用就会出现各种奇怪的报错信息，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202505/172074-20250530085627832-1178337.png" alt="" loading="lazy"></p>
<h3 id="22-推荐图片模型">2.2 推荐图片模型</h3>
<p>不同的使用场景，推荐使用的图片模型是不同的，例如以下这些：</p>
<ul>
<li><strong>如果对生成图片的成本比较敏感</strong>：可以使用智普 AI 的免费文生图的模型。</li>
<li><strong>如果对生成图片的质量要求比较高</strong>：建议使用 Doubao 文生图模型，Doubao 3.0 版本之前生成图片的质量很差，但 3.0 版本之后，不知道是不是和即梦 AI 整合了，视觉生成质量有一个很多的提升，并且也为新用户送 500 次的免费调用次数，开发环境够用了。但在调用插件的时候也有一些坑，需要注意。</li>
</ul>
<h2 id="3调用doubao文生图工具">3.调用Doubao文生图工具</h2>
<p>调用 Doubao 图片生成有几个坑，这个需要给大家详细说一下，不然很容易出错。</p>
<p>首先在插件市场，安装 Doubao 插件：</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202505/172074-20250530085639118-1200853159.png" alt="" loading="lazy"></p>
<p>之后是去 Doubao 平台开通图片生成权限和添加生成 API Key，这两个步骤都很容易出错。</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202505/172074-20250530085651513-1739125065.png" alt="" loading="lazy"></p>
<p><strong>插件提供的访问地址不对，一定要去火山方舟平台</strong>，也就是这个地址：<a href="https://console.volcengine.com/ark/region:ark+cn-beijing/openManagement" target="_blank" rel="noopener nofollow">https://console.volcengine.com/ark/region:ark+cn-beijing/openManagement</a></p>
<p>我们需要以下三步：</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202505/172074-20250530085702901-607565652.png" alt="" loading="lazy"></p>
<p>实名认证完成之后，一定是选择下面栏目并开通服务：</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202505/172074-20250530085712423-1084115794.png" alt="" loading="lazy"></p>
<p>接下来是容易出错的地方，当你点击获取 API Key 有可能会到这个地址，但这个地址不对（<strong>是火山方舟不是火山引擎</strong>）：</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202505/172074-20250530085723314-2075877944.png" alt="" loading="lazy"></p>
<p><strong>如果获取的是这个地方的 API Key 就会在生成调用的时候，提示 401 没有权限</strong>，正常的操作是<strong>点击上面的“方舟大模型专用 API Key”，进入到这个页面，点击创建 API Key 才行</strong>：</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202505/172074-20250530085734971-1241029263.png" alt="" loading="lazy"></p>
<h2 id="4dify创建agent编排任务">4.Dify创建Agent编排任务</h2>
<p>创建 Agent 应用：</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202505/172074-20250530085745288-1237721912.png" alt="" loading="lazy"></p>
<blockquote>
<p><strong>什么是 Agent？</strong></p>
<p>Agent 是一种模拟人类行为和能力的 AI 系统，它通过自然语言处理与环境交互，能够理解输入信息并生成相应的输出。Agent 还具有 "感知" 能力，可以处理和分析各种形式的数据。此外，Agent 能够调用和使用各种外部工具和 API 来完成任务，扩展其功能范围。这种设计使 Agent 能够更灵活地应对复杂情况，在一定程度上模拟人类的思考和行为模式。</p>
<p>因此，很多人都会将 Agent 称为“智能体”。</p>
</blockquote>
<h3 id="41-撰写提示词">4.1 撰写提示词</h3>
<p>提示词（Prompt）是 Agent 的灵魂，直接影响到输出的效果。通常来说越具体的提示词输出的效果越好，但是过冗长的提示词也会导致一些负面效果。</p>
<p>调整提示词的工程，我们称之为提示词工程（Prompt Engineering）</p>
<p>在本次实验中，你不必担心没有掌握提示词工程，我们会在后面循序渐进地学习它。</p>
<p>让我们从最简单的提示词开始：</p>
<pre><code class="language-plain">根据用户的提示，使用工具绘画指定内容。
</code></pre>
<p>用户每次输入命令的时候，Agent 都会知晓这样的系统级的指令，从而了解要执行用户绘画的任务的时候需要调用一个叫 Doubao 的工具进行绘图。</p>
<h3 id="42-添加绘图工具">4.2 添加绘图工具</h3>
<p><img src="https://img2024.cnblogs.com/blog/172074/202505/172074-20250530085756236-721385888.png" alt="" loading="lazy"></p>
<h3 id="43-测试图片生成">4.3 测试图片生成</h3>
<p><img src="https://img2024.cnblogs.com/blog/172074/202505/172074-20250530085808036-1576727047.png" alt="" loading="lazy"></p>
<h2 id="5发布">5.发布</h2>
<p>点击右上角的发布按钮，发布后选择<strong>运行</strong>就可以获得一个在线运行的 Agent 的网页。</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202505/172074-20250530085818938-1095549489.png" alt="" loading="lazy"></p>
<p>复制这个网页的 URL，可以分享给其他好友使用。</p>
<h2 id="6优化指定图片风格">6.优化：指定图片风格</h2>
<p>我们可以在用户输入的命令中加上画风的指令，例如：二次元风格，画一个女孩，手中拿着一本打开的书</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202505/172074-20250530085829210-1612373979.png" alt="" loading="lazy"></p>
<p>但是如果我们希望风格默认都是二次元风格呢，那么我们加在系统提示词里就行了，因为我们之前了解到系统提示词是每次执行用户命令都会知晓的，优先级更高。</p>
<pre><code class="language-plain">根据用户的提示，使用工具绘画指定内容，画面是二次元风格
</code></pre>
<h2 id="7优化拒绝某些不当请求">7.优化：拒绝某些不当请求？</h2>
<p>在许多业务场景中，我们需要避免输出一些不合理的内容，但是 LLM 很多时候比较 “傻”，用户下指令时会照做不误，即使输出的内容是错的，这种模型为了努力回答用户而编造虚假内容的现象称为模型幻觉（Hallucinations），那么我们需要让模型必要的时候拒绝用户的请求。</p>
<p>此外，用户也可能提一些和业务无关的内容，我们也需要让 Agent 这个时候拒绝请求。</p>
<p>我们可以使用 markdown 格式给不同的提示词进行划分，将上述教 Agent 拒绝不合理内容的提示词写到 “约束” 标题下。当然，这样的格式仅仅是为了规范化，你可以有自己的格式。</p>
<pre><code class="language-plain">## 任务
根据用户的提示，使用工具绘画指定内容，画面是二次元风格。

## 约束
如果用户在请求和绘画无关的内容，回复：“对不起，我不明白你在说什么”
</code></pre>
<p>例如，我们尝试提问：今晚吃什么</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202505/172074-20250530085839856-1398915767.png" alt="" loading="lazy"></p>
<p>在一些更正式的业务场景中，我们可以调用敏感词库来拒绝用户的请求。</p>
<p>在<strong>添加功能 - 内容审查</strong>中添加关键词 “晚饭”，当用户输入关键词时，则 Agent 应用输出 “对不起，我不明白你在说什么”。</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202505/172074-20250530085851845-1219987922.png" alt="" loading="lazy"></p>
<h2 id="小结">小结</h2>
<p>Dify 是一个入门简单，但用好比较难的技术，这点和 Java 有点像，但没关系，跟我一起，快速上手学习 AI 技术，避免踩坑。一起动手试起来吧~</p>
<blockquote>
<p>本文已收录到我的技术小站 <a href="https://www.javacn.site" target="_blank" rel="noopener nofollow">www.javacn.site</a>，其中包含的内容有：Spring AI、LangChain4j、Dify、AI Agent、MCP、Function Call、RAG、向量数据库、Prompt、多模态、向量数据库、嵌入模型等内容。</p>
</blockquote>

</div>
<div id="MySignature" role="contentinfo">
    <div style="text-align: center; color: red">
关注下面二维码，订阅更多精彩内容。
<br>
<img style="margin-left: 0px" src="https://images.cnblogs.com/cnblogs_com/vipstone/848916/o_211225130402_gognzhonghao.jpg">
</div>

<div style="display: none">
    <img src="http://icdn.apigo.cn/gitchat/rabbitmq.png?imageView2/0/w/500/h/400">
</div>
<div style="margin-bottom: 50px; display: none">

<img title="微信打赏" src="http://icdn.apigo.cn/myinfo/wchat-pay.png" alt="微信打赏">
<br>

<div style="display: none">
<span style="display: block; position: absolute; height: 40px; top: 50%; margin-top: -20px">关注公众号（加好友）：</span>

<img style="margin-left: 144px" src="http://icdn.apigo.cn/gongzhonghao2.png?imageView2/0/w/120/h/120">
</div>
<p></p>

<div id="AllanboltSignature">
    <p style="border-top: #e0e0e0 1px dashed; border-right: #e0e0e0 1px dashed; border-bottom: #e0e0e0 1px dashed; border-left: #e0e0e0 1px dashed; padding-top: 10px; padding-right: 10px; padding-bottom: 10px; padding-left: 60px; background: url(&quot;https://images.cnblogs.com/cnblogs_com/lloydsheng/239039/o_copyright.gif&quot;) #e5f1f4 no-repeat 1% 50%; font-family: 微软雅黑; font-size: 11px" id="PSignature">
        <br> 作者：
        <a href="http://vipstone.cnblogs.com/" target="_blank">王磊的博客</a>
        <br> 出处：
        <a href="http://vipstone.cnblogs.com/" target="_blank">http://vipstone.cnblogs.com/</a>
        <br>
    </p>
</div></div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.007245331347222222" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-30 08:59">2025-05-30 08:58</span>&nbsp;
<a href="https://www.cnblogs.com/vipstone">磊哥|www.javacn.site</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18903521);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18903521', targetLink: 'https://www.cnblogs.com/vipstone/p/18903521', title: 'Dify搭建AI图片生成助手中的坑！' })">举报</a>
</div>
        