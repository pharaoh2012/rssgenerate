<!----> <meta itemprop="headline" content="大家觉得，在前端开发中，最难的技术是哪一个？"> <meta itemprop="keywords" content="前端,Vue.js,three.js"> <meta itemprop="datePublished" content="2025-02-07T03:28:03.000Z"> <meta itemprop="image" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-128.png~tplv-t2oaga2asx-image.image"> <div itemprop="author" itemscope="itemscope" itemtype="http://schema.org/Person"><meta itemprop="name" content="程序员三千_"> <meta itemprop="url" content="https://juejin.cn/user/1310273591836957"></div> <div itemprop="publisher" itemscope="itemscope" itemtype="http://schema.org/Organization"><meta itemprop="name" content="掘金"> <div itemprop="logo" itemscope="itemscope" itemtype="https://schema.org/ImageObject"><meta itemprop="url" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-white-180.png~tplv-t2oaga2asx-image.image"> <meta itemprop="width" content="180"> <meta itemprop="height" content="180"></div></div> <h1 class="article-title" data-v-38a6c62f="">
            大家觉得，在前端开发中，最难的技术是哪一个？
            <!----> <!----></h1> <div class="author-info-block block-hidden" data-v-38a6c62f=""><div class="author-info-box" data-v-38a6c62f=""><div class="author-name" data-v-38a6c62f=""><a href="/user/1310273591836957/posts" target="_blank" rel="" class="jj-link username username ellipsis" data-v-65b50b51="" data-v-1800aadb="" data-v-38a6c62f=""><span class="name" style="max-width:160px;" data-v-65b50b51="" data-v-1800aadb="">
    程序员三千_
  </span> <!----> <!----> <!----> </a></div> <div class="meta-box" data-v-38a6c62f=""><time datetime="2025-02-07T03:28:03.000Z" title="Fri Feb 07 2025 03:28:03 GMT+0000 (Coordinated Universal Time)" class="time" data-v-38a6c62f="">
                    2025-02-07
                  </time> <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="read-icon" data-v-38a6c62f=""><path d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor" data-v-38a6c62f=""></path><circle cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor" data-v-38a6c62f=""></circle></svg> <span class="views-count" data-v-38a6c62f="">
                    26,273
                  </span> <span class="read-time" data-v-38a6c62f=""><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" data-v-38a6c62f=""><rect width="16" height="16" fill="none" data-v-38a6c62f=""></rect><circle cx="8" cy="8" r="5.65625" stroke="#8A919F" data-v-38a6c62f=""></circle><path d="M7.69141 5.18652V8.30924H10.8141" stroke="#8A919F" stroke-linecap="round" stroke-linejoin="round" data-v-38a6c62f=""></path></svg>
                    阅读5分钟
                  </span> <!----></div></div> <div style="flex:1;" data-v-38a6c62f=""></div> <!----> <!----></div> <!----> <!----> <!----> <!----> <div id="article-root" itemprop="articleBody" class="main" data-v-38a6c62f=""><div class="article-viewer markdown-body result"><blockquote>
<p>“你不能把点点滴滴的事情在未来连接起来，你只能在回顾时看到它们的联系。所以你必须相信，未来的某一刻，你做的所有事情都会有意义。” ——乔布斯</p>
</blockquote>
<p>Hello，大家好，我是 三千。</p>
<p><strong>大家觉得，在前端开发中，最难的技术是哪一个？</strong></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;如果你之前完全没有接触过3D 可视化应用开发，那使用Three.js开发应用还是门槛挺高的，比如，加载一个模型，调光，选择模型弹框的功能，就能干出Three.js上百行的代码。同时还有很多复杂的3D概念需要理解。</p>
<h3 data-id="heading-0"><strong>前言</strong></h3>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/7e29f8a33b7f4b7e8ce09a7ddb37b152~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg56iL5bqP5ZGY5LiJ5Y2DXw==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1745533335&amp;x-signature=O6gsFo2ctvGAFHXJyinPYX9qs3Y%3D" alt="image.png" loading="lazy"></p>
<p>&nbsp; &nbsp; 今天给大家分享一个3D 开发框架：TresJS&nbsp;。它是一个基于 Vue.js 的声明式&nbsp;Three.js&nbsp;框架，将 Vue 的开发便利性与 Three.js 的强大功能完美结合，提供了模板语法和组件化的开发方式，与 Vue 生态无缝结合，无需额外学习复杂的 Three.js API，大大简化了复杂 3D 场景的构建。高扩展性，与 Three.js 的资源和技术完美兼容，并且在内部进行了大量优化，确保在构建复杂 3D 场景时，性能表现依然出色，无论是数据可视化、虚拟现实。还是3D动画效果，TresJS 都能轻松应对。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;下面我们通过一个例子，来看看它是怎么使用的。</p>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/e71ee43759084b59bf4e6a6bbd195906~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg56iL5bqP5ZGY5LiJ5Y2DXw==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1745533335&amp;x-signature=LJuaEcJ%2B0D9iS8nASzJXcGRAtFE%3D" alt="image.png" loading="lazy"></p>
<h3 data-id="heading-1">1、安装</h3>
<p>通过npm的方式，我们可以安装 TresJS：</p>
<p><code>pnpm add three @tresjs/core </code></p>
<ul>
<li>Typescript</li>
</ul>
<p>TresJS 是用 Typescript 编写的，是完全类型化的。如果您使用的是 Typescript，您就能充分享受类型的好处。 只需要保证你安装了 three 的类型定义。</p>
<p><code> npm install @types/three -D</code></p>
<h3 data-id="heading-2">2、设置体验画布</h3>
<p>在我们创建场景前，我们需要一个什么来展示它。使用原始的&nbsp;ThreeJS&nbsp;我们会需要创建一个&nbsp;canvas&nbsp;HTML 元素来挂载&nbsp;WebglRenderer&nbsp;并初始化一个场景。</p>
<p>通过&nbsp;TresJS&nbsp;你仅仅需要导入默认组件&nbsp;&nbsp;并把它添加到你的 Vue 组件的模板部分即可。</p>
<pre><code class="hljs language-xml" lang="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"ts"</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript">
<span class="hljs-keyword">import</span> { <span class="hljs-title class_">TresCanvas</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">'@tresjs/core'</span>
</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">TresCanvas</span> <span class="hljs-attr">window-size</span>&gt;</span>
    <span class="hljs-comment">&lt;!-- 这里是您的场景 --&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">TresCanvas</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>

</code></pre>
<p>这个&nbsp;<code>TresCanvas</code>&nbsp;组件会在场景幕后做一些设置的工作:</p>
<ul>
<li>它创建一个&nbsp;<a href="https://link.juejin.cn?target=https%3A%2F%2Fthreejs.org%2Fdocs%2Findex.html%23api%2Fzh%2Frenderers%2FWebGLRenderer" target="_blank" title="https://threejs.org/docs/index.html#api/zh/renderers/WebGLRenderer" ref="nofollow noopener noreferrer"><strong>WebGLRenderer</strong></a>&nbsp;用于自动更新每一帧。</li>
<li>它根据浏览器刷新率设置要在每一帧上调用的渲染循环。</li>
</ul>
<h3 data-id="heading-3">3、画布尺寸</h3>
<p>默认的情况下，<code>TresCanvas</code>&nbsp;组件会跟随<strong>父元素的宽高</strong>，如果出现空白页，请确保父元素的大小合适。</p>
<pre><code class="hljs language-xml" lang="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"ts"</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript">
<span class="hljs-keyword">import</span> { <span class="hljs-title class_">TresCanvas</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">'@tresjs/core'</span>
</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">TresCanvas</span>&gt;</span>
    <span class="hljs-comment">&lt;!-- 这里是您的场景 --&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">TresCanvas</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css">
<span class="hljs-selector-tag">html</span>,
<span class="hljs-selector-tag">body</span> {
  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;
  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;
  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;
  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;
}
<span class="hljs-selector-id">#app</span> {
  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;
  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;
}
</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>
</code></pre>
<p>如果您的场景不是用户界面的一部分，您也可以通过像这样的使用&nbsp;<code>window-size</code>&nbsp;prop 来强制画布使用整个窗口的宽度和高度:</p>
<pre><code class="hljs language-xml" lang="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"ts"</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript">
<span class="hljs-keyword">import</span> { <span class="hljs-title class_">TresCanvas</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">'@tresjs/core'</span>
</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">TresCanvas</span> <span class="hljs-attr">window-size</span>&gt;</span>
    <span class="hljs-comment">&lt;!-- 这里是您的场景 --&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">TresCanvas</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>
</code></pre>
<h3 data-id="heading-4">4、创建一个场景</h3>
<p>我们只需要 4 个核心元素来创建 3D 体验:</p>
<ul>
<li>一个将摄像机和对象固定在一起的<a href="https://link.juejin.cn?target=https%3A%2F%2Fthreejs.org%2Fdocs%2Findex.html%3Fq%3Dscene%23api%2Fzh%2Fscenes%2FScene" target="_blank" title="https://threejs.org/docs/index.html?q=scene#api/zh/scenes/Scene" ref="nofollow noopener noreferrer"><strong>场景</strong></a>。</li>
<li>一个用于将场景渲染到 DOM 中的<a href="https://link.juejin.cn?target=https%3A%2F%2Fthreejs.org%2Fdocs%2Findex.html%3Fq%3Drenderer%23api%2Fzh%2Frenderers%2FWebGLRenderer" target="_blank" title="https://threejs.org/docs/index.html?q=renderer#api/zh/renderers/WebGLRenderer" ref="nofollow noopener noreferrer"><strong>渲染器</strong></a>。</li>
<li>一个<a href="https://link.juejin.cn?target=https%3A%2F%2Fthreejs.org%2Fdocs%2Findex.html%3Fq%3Dcamera%23api%2Fzh%2Fcameras%2FCamera" target="_blank" title="https://threejs.org/docs/index.html?q=camera#api/zh/cameras/Camera" ref="nofollow noopener noreferrer"><strong>相机</strong></a></li>
<li>一个<a href="https://link.juejin.cn?target=https%3A%2F%2Fthreejs.org%2Fdocs%2Findex.html%3Fq%3Dobject%23api%2Fzh%2Fcore%2FObject3D" target="_blank" title="https://threejs.org/docs/index.html?q=object#api/zh/core/Object3D" ref="nofollow noopener noreferrer"><strong>对象</strong></a></li>
</ul>
<p>使用&nbsp;<strong>TresJS</strong>&nbsp;时，您只需将&nbsp;<code>&lt;TresCanvas /&gt;</code>&nbsp;组件添加到 Vue 组件的模板中，它就会自动为您创建<code>Renderer</code>（<code>canvas</code>&nbsp;作为 DOM 元素）和<code>Scene</code>。</p>
<pre><code class="hljs language-xml" lang="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">TresCanvas</span> <span class="hljs-attr">window-size</span>&gt;</span>
    <span class="hljs-comment">&lt;!-- 这里是您的场景 --&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">TresCanvas</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>
</code></pre>
<p>然后，您可以使用&nbsp;<code>&lt;TresPerspectiveCamera /&gt;</code>&nbsp;组件来添加一个&nbsp;<a href="https://link.juejin.cn?target=https%3A%2F%2Fthreejs.org%2Fdocs%2Findex.html%23api%2Fzh%2Fcameras%2FPerspectiveCamera" target="_blank" title="https://threejs.org/docs/index.html#api/zh/cameras/PerspectiveCamera" ref="nofollow noopener noreferrer"><strong>透视相机</strong></a></p>
<pre><code class="hljs language-xml" lang="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">TresCanvas</span> <span class="hljs-attr">window-size</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">TresPerspectiveCamera</span> /&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">TresCanvas</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>
</code></pre>
<h3 data-id="heading-5">5、添加一个🍩</h3>
<p>那个场景看起来有点空，让我们添加一个基本对象。如果我们使用普通的&nbsp;<strong>ThreeJS</strong>，我们需要创建一个&nbsp;<a href="https://link.juejin.cn?target=https%3A%2F%2Fthreejs.org%2Fdocs%2Findex.html%23api%2Fzh%2Fobjects%2FMesh" target="_blank" title="https://threejs.org/docs/index.html#api/zh/objects/Mesh" ref="nofollow noopener noreferrer"><strong>网格</strong></a>&nbsp;对象，并在其上附加一个&nbsp;<a href="https://link.juejin.cn?target=https%3A%2F%2Fthreejs.org%2Fdocs%2Findex.html%23api%2Fzh%2Fmaterials%2FMaterial" target="_blank" title="https://threejs.org/docs/index.html#api/zh/materials/Material" ref="nofollow noopener noreferrer"><strong>材质</strong></a>&nbsp;和一个&nbsp;<a href="https://link.juejin.cn?target=https%3A%2F%2Fthreejs.org%2Fdocs%2Findex.html%23api%2Fzh%2Fcore%2FBufferGeometry" target="_blank" title="https://threejs.org/docs/index.html#api/zh/core/BufferGeometry" ref="nofollow noopener noreferrer"><strong>几何体</strong></a>，如下所示:</p>
<pre><code class="hljs language-csharp" lang="csharp"><span class="hljs-keyword">const</span> geometry = <span class="hljs-keyword">new</span> THREE.TorusGeometry(<span class="hljs-number">1</span>, <span class="hljs-number">0.5</span>, <span class="hljs-number">16</span>, <span class="hljs-number">32</span>)
<span class="hljs-keyword">const</span> material = <span class="hljs-keyword">new</span> THREE.MeshBasicMaterial({ color: <span class="hljs-string">'orange'</span> })
<span class="hljs-keyword">const</span> donut = <span class="hljs-keyword">new</span> THREE.Mesh(geometry, material)
scene.<span class="hljs-keyword">add</span>(donut)
</code></pre>
<p><strong>网格</strong>是 three.js 中的基本场景对象，用于保存在 3D 空间中表示形状所需的几何体和材质。</p>
<p>现在让我们看看如何使用 TresJS 轻松实现相同的事情。为此，我们将使用&nbsp;<code>&lt;TresMesh /&gt;</code>&nbsp;组件，在默认插槽之间，我们将传递一个&nbsp;<code>&lt;TresTorusGeometry /&gt;</code>&nbsp;和一个<code>&lt;TresMeshBasicMaterial /&gt;</code>。</p>
<pre><code class="hljs language-xml" lang="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">TresCanvas</span> <span class="hljs-attr">window-size</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">TresPerspectiveCamera</span> /&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">TresMesh</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">TresTorusGeometry</span> <span class="hljs-attr">:args</span>=<span class="hljs-string">"[1, 0.5, 16, 32]"</span> /&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">TresMeshBasicMaterial</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"orange"</span> /&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">TresMesh</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">TresCanvas</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>
</code></pre>
<ul>
<li>注意，我们不需要导入任何东西，这是因为&nbsp;<strong>TresJS</strong>&nbsp;会为<strong>您使用的 PascalCase 的带有 Tres 前缀的 Three 对象自动生成一个 Vue 组件</strong>。例如，如果要使用&nbsp;<code>&lt;TresAmbientLight /&gt;</code>&nbsp;组件。</li>
</ul>

<pre><code class="hljs language-xml" lang="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"ts"</span>&gt;</span><span class="javascript">
<span class="hljs-keyword">import</span> { <span class="hljs-title class_">TresCanvas</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">'@tresjs/core'</span>
</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">TresCanvas</span>
    <span class="hljs-attr">clear-color</span>=<span class="hljs-string">"#82DBC5"</span>
    <span class="hljs-attr">window-size</span>
  &gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">TresPerspectiveCamera</span>
      <span class="hljs-attr">:position</span>=<span class="hljs-string">"[3, 3, 3]"</span>
      <span class="hljs-attr">:look-at</span>=<span class="hljs-string">"[0, 0, 0]"</span>
    /&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">TresMesh</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">TresTorusGeometry</span> <span class="hljs-attr">:args</span>=<span class="hljs-string">"[1, 0.5, 16, 32]"</span> /&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">TresMeshBasicMaterial</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"orange"</span> /&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">TresMesh</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">TresAmbientLight</span> <span class="hljs-attr">:intensity</span>=<span class="hljs-string">"1"</span> /&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">TresCanvas</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>
</code></pre>
<p>从这里开始，您可以开始向场景中添加更多对象，并调整组件的属性来查看它们如何影响场景。</p>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/136f35a110bc4c9a9c4a7ba50ebd4819~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg56iL5bqP5ZGY5LiJ5Y2DXw==:q75.awebp?rk3s=f64ab15b&amp;x-expires=1745533335&amp;x-signature=5gPbZe4DxI4m2G8as4a5cnUmmEY%3D" alt="image.png" loading="lazy"></p>
<h3 data-id="heading-6">6、思路总结</h3>
<p><strong>最后我们用人话总结一下上面的思路：</strong></p>
<ul>
<li>1、最外层我们定义一个TresCanvas，在里面我们可以添加场景</li>
<li>2、然后定义一个透视相机，用于观察3D场景，position里去定义相机x,y,z轴的位置，look-at里定义相机观察的目标点</li>
<li>3、相机定义完之后，我们开始渲染3d对象，TresTorusGeometry用来定义环面集合体的半径和环向参数。TresMeshBasicMaterial定义几何体的基本材质和颜色。</li>
<li>4、最后用TresAmbientLight设置一下环境光的强度。</li>
</ul>
<h3 data-id="heading-7">结语</h3>
<p>以上就是今天与大家分享的全部内容，你的支持是我更新的最大动力，我们下期见！</p>
<p><strong>打工人肝 文章/视频 不易，期待你一键三连的鼓励 ！！！</strong></p>
<blockquote>
<p>😐 这里是【程序员三千】，💻 一个喜欢捣鼓各种编程工具新鲜玩法的啊婆主。</p>
<p>🏠 已入驻：抖爸爸、b站、小红书（都叫【程序员三千】）</p>
<p>💽 编程/AI领域优质资源推荐 👉 <a href="https://link.juejin.cn?target=https%3A%2F%2Fwww.yuque.com%2Fxiaosanye-ohrmg%2Fvy5zr1%2Fwgg95lrgz2ioh208%239Q0m" target="_blank" title="https://www.yuque.com/xiaosanye-ohrmg/vy5zr1/wgg95lrgz2ioh208#9Q0m" ref="nofollow noopener noreferrer">www.yuque.com/xiaosanye-o…</a></p>
</blockquote></div></div>