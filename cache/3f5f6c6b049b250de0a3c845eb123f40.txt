
		<div class="posthead">
			<h2>
				<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/L178/p/18977971" title="发布于 2025-07-10 23:52">
    <span role="heading" aria-level="2">事件循环机制</span>
    

</a>

			</h2>
 			
		</div>
		<div class="postbody"><div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="事件循环机制">事件循环机制</h1>
<p><a href="https://www.jsv9000.app/" title="事件循环练习" target="_blank" rel="noopener nofollow">事件循环练习</a></p>
<p>由于js是单线程，为防止代码阻塞，将代码分为同步和异步，同步代码会直接放入执行栈中执行，异步代码（如setTimeout）放入宿主环境（浏览器，Node）中，时机到了（点击事件即点击后，setTimeout即时间结束后）以后将回调函数放入任务队列中，执行栈中的代码执行完后就会去任务队列中查看有无异步代码要执行。反复循环查看执行，这个过程就是事件循环。<br>
<img src="https://img2024.cnblogs.com/blog/3390382/202507/3390382-20250710231513760-232140412.png" alt="image" loading="lazy"></p>
<p>js又把异步任务分为宏任务（由宿主环境发起，如script，事件，网络请求Ajax/Fetch，setTimeout()/setInterval()）和微任务（由JS引擎发起，如Promise，Promise本身同步，then/catch回调函数异步）</p>
<p><img src="https://img2024.cnblogs.com/blog/3390382/202507/3390382-20250710231543392-596173098.png" alt="image" loading="lazy"></p>
<h2 id="注意️">注意⚠️</h2>
<ul>
<li>排前面的 script 先执行，执行其内部的【同】，再执行其【微】，接着就轮到下一个大的宏，也就是执行下一个 script，【同】、【微】......顺序执行完后，再从头开始，看第一个 script 是否有需要执行的【宏】，再去下一个 script 中找 【宏】，等大家宏结束后，进入下一轮循环。</li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/3390382/202507/3390382-20250710231820269-408097562.png" alt="image" loading="lazy"></p>
<ul>
<li>async函数里面的属于同步代码，await后的代码属于异步微任务</li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/3390382/202507/3390382-20250710231842588-1856885379.png" alt="image" loading="lazy"></p>
<h2 id="practice">Practice</h2>
<h3 id="1️⃣">1️⃣</h3>
<pre><code>console.log('A');·
setTimeout(() =&gt; console.log('B'), 0);
Promise.resolve().then(() =&gt; console.log('C'));
Promise.resolve().then(() =&gt; setTimeout(() =&gt; console.log('D'), 0));
console.log('E');
</code></pre>
<details>
<summary>点击查看答案</summary>
<pre><code>A → E → C → B → D
</code></pre>
</details>
<h3 id="2️⃣">2️⃣</h3>
<pre><code>const promise = new Promise((resolve, reject) =&gt; {
console.log(1);
console.log(2);
});
promise.then(() =&gt; {
console.log(3);
});
console.log(4);
</code></pre>
<details>
<summary>点击查看答案</summary>
<pre><code> 1 → 2 → 4
</code></pre>
</details>
<h3 id="3️⃣">3️⃣</h3>
<pre><code>async function async1() {
  console.log('1');
  await async2();
  console.log('2');
}
async function async2() { console.log('3'); }
setTimeout(() =&gt; console.log('4'), 0);
async1();
new Promise(resolve =&gt; {
  console.log('5');
  resolve();
}).then(() =&gt; console.log('6'));
console.log('7');
</code></pre>
<details>
<summary>点击查看答案</summary>
<pre><code> 1 → 3 → 5 → 7 → 2 → 6 → 4
</code></pre>
</details>
<h3 id="4️⃣">4️⃣</h3>
<pre><code>new Promise((resolve) =&gt; {
  console.log(1);
  resolve(3);
  Promise.resolve().then(() =&gt; {
    console.log(4);
  });
}).then((num) =&gt; {
  console.log(num);
});

setTimeout(() =&gt; {
  console.log(6);
});

Promise.resolve().then(() =&gt; {
  console.log(5);
});
console.log(2);
</code></pre>
<details>
<summary>点击查看答案</summary>
<pre><code> 1 → 2 → 4 → 3 → 5 → 6
</code></pre>
</details>
<h3 id="5️⃣">5️⃣</h3>
<pre><code>console.log('start');
setTimeout(() =&gt; {
  console.log('Timeout1');
}, 1000);

Promise.resolve().then(() =&gt; {
  console.log('Promise1');
});

Promise.resolve().then(() =&gt; {
  console.log('Promise2');
  setTimeout(() =&gt; {
    Promise.resolve().then(() =&gt; {
      console.log('Promise3');
    })
    console.log('Timeout2');
  }, 0);
});
console.log('end');
</code></pre>
<details>
<summary>点击查看答案</summary>
<pre><code> start → end → Promise1 → Promise2 → Timeout2 → Promise3 → Timeout1
</code></pre>
</details>
<pre><code>function app() {
  setTimeout(() =&gt; {
    console.log("1-1");3
    Promise.resolve().then(() =&gt; {
      console.log("2-1");5
    });
  });
  console.log("1-2"); 1
  Promise.resolve().then(() =&gt; {
    console.log("1-3"); 2
    setTimeout(() =&gt; {
      console.log("3-1"); 4
    });
  });
}
</code></pre>
<details>
<summary>点击查看答案</summary>
<pre><code> 1-2 → 1-3 → 1-1 → 3-1 → 2-1
</code></pre>
</details>
</div>
<div class="clear"></div>
</div>
		<div class="postfoot">
		Posted on 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-10 23:53">2025-07-10 23:52</span>&nbsp;
<a href="https://www.cnblogs.com/L178">Minutiae</a>&nbsp;
阅读(<span id="post_view_count">5</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18977971);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18977971', targetLink: 'https://www.cnblogs.com/L178/p/18977971', title: '事件循环机制' })">举报</a>

			
			
		</div>
	