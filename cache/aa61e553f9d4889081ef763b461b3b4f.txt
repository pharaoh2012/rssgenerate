
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/huangSir-devops/p/18814665" title="发布于 2025-04-08 16:36">
    <span role="heading" aria-level="2">shell处理字符串</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="概念">概念</h2>
<p>字符串是shell编程中最常用最有用的数据类型（除了数字和字符串，也没啥其它类型好用了），字符串可以用单引号，也可以用双引号，也可以不用引号。</p>
<h3 id="单引号声明字符串">单引号声明字符串</h3>
<ul>
<li>单引号里的任何字符都会原样输出，单引号字符串中的变量是无效的；</li>
<li>单引号字符串中不能出现单独一个的单引号（对单引号使用转义符后也不行），但可成对出现，作为字符串拼接使用。</li>
</ul>
<h3 id="双引号声明字符串">双引号声明字符串</h3>
<ul>
<li>双引号里可以有变量</li>
<li>双引号里可以出现转义字符</li>
</ul>
<p>示例：</p>
<pre><code>#单引号和双引号使用变量的区别
root@master:~$ name='huangSir'
root@master:~$ echo '$name'
$name
root@master:~$ echo "$name"
huangSir

#单引号中嵌套单引号
root@master:~$ echo ''hello world''
hello world
#双引号中嵌套单引号
root@master:~$ echo "'hello world'"
'hello world'

#单引号和双引号使用转义字符的区别
root@master:~$ echo '\"hello world\"'
\"hello world\"
root@master:~$ echo "\"hello world\""
"hello world"
</code></pre>
<h2 id="字符串的各种操作">字符串的各种操作</h2>
<p>在 Shell 脚本中，字符串是常见的数据类型，可以通过多种方式对字符串进行处理，包括拼接、截取、替换、比较等操作。</p>
<h3 id="字符串拼接">字符串拼接</h3>
<p>字符串拼接可以直接拼接，中间无需任何特殊字符</p>
<pre><code>root@master:~$ str1="hello"
root@master:~$ str2="world"
root@master:~$ str3="$str1 $str2"
root@master:~$ echo $str3
hello world
root@master:~$ str3="${str1} like  ${str2}"
root@master:~$ echo $str3
hello like world
</code></pre>
<h3 id="获取字符串长度-str">获取字符串长度 <code>${#str}</code></h3>
<p>统计字符长度（变量中有多少个字符）</p>
<pre><code>#空格也算字符
root@master:~$ str="I Like Shell"
root@master:~$ echo ${#str}
12
</code></pre>
<h3 id="截取字符串-strindexindex">截取字符串 <code>${str:index:index}</code></h3>
<pre><code>root@master:~$ str="hello world"
# 从索引下标为5开始，向后截取，索引下标为5的舍弃
root@master:~$ echo ${str:5}
world
# 从索引下标为2开始，向后截取5个字符
root@master:~$ echo ${str:2:5}
llo w
# 从索引下标为2开始，截取到倒数第6个字符
root@master:~$ echo ${str:2:-6}
llo
从索引下标为2开始，截取到倒数第7个字符
root@master:~$ echo ${str:2:-7}
ll
</code></pre>
<h3 id="字符串替换">字符串替换</h3>
<p><code>${str/newStr/oldStr}</code><br>
将<code>newStr</code>替换为<code>oldStr</code>,仅替换第一个遇到的<code>oldStr</code></p>
<pre><code>root@master:~$ str="hello world"
root@master:~$ echo ${str/l/o}
heolo world
</code></pre>
<p><code>${str//newStr/oldStr}</code><br>
将<code>newStr</code>替换为<code>oldStr</code>,替换所有的<code>oldStr</code></p>
<pre><code>root@master:~$ str="hello world"
root@master:~$ echo ${str//l/o}
heooo worod
</code></pre>
<h3 id="字符串大小写转换">字符串大小写转换</h3>
<p>需要bash4+的版本</p>
<p>大写转换：<code>${str^^}</code></p>
<pre><code>root@master:~$ str="hello world"
root@master:~$ echo ${str^^}
HELLO WORLD
</code></pre>
<p>小写转换：<code>${str,,}</code></p>
<pre><code>root@master:~$ str="HELLO WORLD"
root@master:~$ echo ${str,,}
hello world
</code></pre>
<h3 id="字符串分割为数组">字符串分割为数组</h3>
<pre><code>root@master:~$ str="apple:banana:orange"
#按照:分割
root@master:~$ IFS=':' read -ra arr &lt;&lt;&lt; "$str"
root@master:~$ echo ${arr[0]}
apple
root@master:~$ echo ${arr[1]}
banana
</code></pre>
<h3 id="删除前缀或后缀">删除前缀或后缀</h3>
<ul>
<li><code>${str#word}</code>：从变量左边开始删除，按照最短匹配删除</li>
<li><code>${str##word}</code>：从变量左边开始删除，按照最长匹配删除</li>
<li><code>${str%word}</code>：从变量右边开始删除，按照最短匹配删除</li>
<li><code>${str%%word}</code>：从变量右边开始删除，按照最长匹配删除<br>
示例：</li>
</ul>
<pre><code>root@master:~$ str="file.txt.tar.gz"
root@master:~$ echo ${str#*.}
txt.tar.gz
root@master:~$ echo ${str##*.}
gz
root@master:~$ echo ${str%.*}
file.txt.tar
root@master:~$ echo ${str%%.*}
file
</code></pre>
<h3 id="判断是否包含子串">判断是否包含子串</h3>
<pre><code>if [[ $str == *World* ]]; then
  echo "包含World"
fi
# 或使用正则表达式
if [[ $str =~ .*World.* ]]; then
  echo "匹配成功"
fi
</code></pre>
<h3 id="判断字符串是否为空">判断字符串是否为空</h3>
<p><code>[[ -z "$str" ]]</code>：为空返回真<br>
<code>[[ -n "$str" ]]</code>：非空返回真</p>
<pre><code>root@master:~$ name=
root@master:~$ [[ -z "$name" ]] &amp;&amp; echo true || echo false
true
root@master:~$ [[ -n "$name" ]] &amp;&amp; echo true || echo false
false
</code></pre>
<h3 id="判断两个字符串是否相等">判断两个字符串是否相等</h3>
<p><code>[[ $str1 == $str2 ]]</code>：相等判断<br>
<code>[[ $str1 != $str2 ]]</code>: 不等判断</p>
<pre><code>root@master:~$ [[ "hello" == "hello" ]] &amp;&amp; echo true || echo false
true
root@master:~$ [[ "hello" != "hello" ]] &amp;&amp; echo true || echo false
false

</code></pre>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.02070366614236111" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-08 16:37">2025-04-08 16:36</span>&nbsp;
<a href="https://www.cnblogs.com/huangSir-devops">huangSir-devops</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18814665" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18814665);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18814665', targetLink: 'https://www.cnblogs.com/huangSir-devops/p/18814665', title: 'shell处理字符串' })">举报</a>
</div>
        