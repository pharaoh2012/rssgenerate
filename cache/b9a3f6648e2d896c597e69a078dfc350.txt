
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wuty/p/18895523" title="发布于 2025-05-25 16:47">
    <span role="heading" aria-level="2">关于 Newtonsoft.Json 和 System.Text.Json 混用导致的的序列化不识别的问题</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>最近，我在做一个我们一个产品的OTA的功能，在调试跟后台对接Json数据的时候，发现序列化的数据一直跟期待的不一致。这让我很纳闷，明明一个简单的序列化和反序列化的问题，怎么数据就不对了。于是乎，就直接导入组件，一步步排查了。</p>
<p>1、由于我是直接调用我们小伙伴的组件，进行Json序列化的，小伙伴的Json 序列化的参数名是调用&nbsp;System.Text.Json.Serialization.JsonPropertyName 进行Json的一个转义，如下图</p>
<p><img src="https://img2024.cnblogs.com/blog/1063618/202505/1063618-20250525163120174-2008434921.png" alt="" loading="lazy"></p>
<p>&nbsp;2、我查看了我们的下载的组件，由于去年做了一个优化的功能，在Net6以上的版本，用的是&nbsp;</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">using</span> System.Text.Json</pre>
</div>
<p>NetFramework版本，用的是&nbsp;</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">using</span> Newtonsoft.Json;</pre>
</div>
<p><img src="https://img2024.cnblogs.com/blog/1063618/202505/1063618-20250525163547042-814544731.png" alt="" loading="lazy"></p>
<p>&nbsp;而我当前的项目用的是NetFramework的版本，应该是调用的&nbsp;Newtonsoft.Json。</p>
<p>调用结果如下图，终于知道问题所在。</p>
<p><img src="https://img2024.cnblogs.com/blog/1063618/202505/1063618-20250525163914107-1551168303.png" alt="" width="1441" height="722" loading="lazy"></p>
<p>&nbsp;由于我们的类里边的转义是调用的System.Text.Json.Serialization.JsonPropertyName，在用&nbsp; Newtonsoft.Json.JsonConvert.SerializeObject 的时候，是不会被识别并转成序列化属性名参数的字段的</p>
<p>对应的参数如下</p>
<p><strong>System.Text.Json.Serialization.JsonPropertyName&nbsp; ==&gt;&nbsp; &nbsp;System.Text.Json.JsonSerializer.Serialize</strong></p>
<p><strong>Newtonsoft.Json.JsonProperty&nbsp; ==&gt;&nbsp;Newtonsoft.Json.JsonConvert.SerializeObject</strong></p>
<p><strong>总结：</strong></p>
<p>1、在对于序列话和反序列化中，一定要按照一套的序列化方案实现。由于每一个Json序列化的组件都有可能自己定义修改，存在不兼容的问题</p>
<p>2、序列化的协议，和定义的字段，最好跟序列化的字段保持一致，能够避免序列化异常的问题</p>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.060376412472222224" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-25 16:47">2025-05-25 16:47</span>&nbsp;
<a href="https://www.cnblogs.com/wuty">wuty007</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18895523);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18895523', targetLink: 'https://www.cnblogs.com/wuty/p/18895523', title: '关于 Newtonsoft.Json 和 System.Text.Json 混用导致的的序列化不识别的问题' })">举报</a>
</div>
        