
		<h1 class="postTitle">
			<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/linx/p/18867615" title="发布于 2025-05-09 09:31">
    <span role="heading" aria-level="2">Web前端入门第 48 问：纯 CSS 使用 column 属性实现瀑布流布局</span>
    

</a>

		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>什么是瀑布流？</p>
<p>看一张图，以下图片来源于花瓣网截图：</p>
<p><img src="https://img2024.cnblogs.com/blog/596097/202505/596097-20250509092800684-826238898.png" alt="" width="500" loading="lazy"></p>
<p>如上图所示，瀑布流就是让内容按列显示，自动填充空白。</p>
<h2 id="使用-column-实现瀑布流">使用 column 实现瀑布流</h2>
<p>源码：</p>
<pre><code class="language-html">&lt;div class="masonry"&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;style&gt;
:root{
  --item-bg-1: #ff4757;
  --item-bg-2: #cea442;
  --item-bg-3: #18005f;
  --counter-bg: #dedede;
}

.masonry {
  column-count: 1;
  column-gap: 20px;
  /* 重置计数器 */
  counter-reset: item-counter;
  
}
/* 使用媒体查询处理不同视口宽度显示不同列数 */
@media screen and (min-width: 400px) {
  .masonry {
    column-count: 2;
  }
}

@media screen and (min-width: 600px) {
  .masonry {
    column-count: 3;
  }
}

@media screen and (min-width: 800px) {
  .masonry {
    column-count: 4;
  }
}

@media screen and (min-width: 1200px) {
  .masonry {
    column-count: 5;
  }
}

.item {
  box-sizing: border-box;
  break-inside: avoid;
  margin: 0 0 20px;
  /* css 计数器 */
  counter-increment: item-counter;
  position: relative;
}
/* 显示计数器 */
.item:before {
  position: absolute;
  top: 0;
  left: 0;
  padding: 8px 0;
  min-width: 2em;
  text-align: center;
  background-color: var(--counter-bg);
  content: counter(item-counter);
}
/* 给 item 设置不同的高度和背景色 */
.item:nth-child(7n+1) {
  height: 151px;
  background-color: var(--item-bg-1);
}
.item:nth-child(7n+2) {
  height: 187px;
  background-color: var(--item-bg-2);
}
.item:nth-child(7n+3) {
  height: 289px;
  background-color: var(--item-bg-3);
}
.item:nth-child(7n+4) {
  height: 123px;
  background-color: var(--item-bg-1);
}
.item:nth-child(7n+5) {
  height: 234px;
  background-color: var(--item-bg-2);
}
.item:nth-child(7n+6) {
  height: 188px;
  background-color: var(--item-bg-3);
}
.item:nth-child(7n+7) {
  height: 149px;
  background-color: var(--item-bg-1);
}
&lt;/style&gt;
</code></pre>
<p>效果：</p>
<p>视口宽度大于 1200px 时，显示 5 列：</p>
<p><img src="https://img2024.cnblogs.com/blog/596097/202505/596097-20250509092815263-1259562384.png" alt="" width="500" loading="lazy"></p>
<p>视口宽度在 600px-800px 之间时，显示 3 列：</p>
<p><img src="https://img2024.cnblogs.com/blog/596097/202505/596097-20250509092821343-604264189.png" alt="" width="300" loading="lazy"></p>
<h2 id="column-相关属性">column 相关属性</h2>
<h3 id="column-count">column-count</h3>
<p><code>column-count</code> 声明显示多少列。默认值为 <code>auto</code>，由浏览器自己决定。</p>
<p><img src="https://img2024.cnblogs.com/blog/596097/202505/596097-20250509092828956-1837380820.png" alt="" width="800" loading="lazy"></p>
<h3 id="column-fill">column-fill</h3>
<p><code>column-fill</code> 控制元素内容分成列时的平衡方式。有效值：<code>auto</code>（按顺序填充列）、<code>balance</code>（仅最后一页内容平均分配到各列）、<code>balance-all</code>（全部分页内容平均分配到各列）。</p>
<p><img src="https://img2024.cnblogs.com/blog/596097/202505/596097-20250509092834266-633660709.png" alt="" width="800" loading="lazy"></p>
<h3 id="column-gap">column-gap</h3>
<p><code>column-gap</code> 设置列间隔。默认值 <code>normal</code> 表示列间距占用 1em 宽度。</p>
<p><img src="https://img2024.cnblogs.com/blog/596097/202505/596097-20250509092838974-26393389.png" alt="" width="800" loading="lazy"></p>
<h3 id="column-rule">column-rule</h3>
<p><code>column-rule</code> 简写属性，包含 column-rule-width、column-rule-style 和 column-rule-color 。</p>
<p><code>column-rule-width</code> 设置线条宽度。<br>
<code>column-rule-style</code> 与 border-style 一样，支持值：none 、 hidden 、 dotted 、 dashed 、 solid 、 double 、 groove 、 ridge 、 inset 、 outset。<br>
<code>column-rule-color</code> 设置线条颜色。</p>
<p><img src="https://img2024.cnblogs.com/blog/596097/202505/596097-20250509092847070-1714997648.png" alt="" width="800" loading="lazy"></p>
<h3 id="column-span">column-span</h3>
<p><code>column-span</code> 设置<strong>子元素</strong>是否跨列显示。有效值：<code>none</code>（不跨列）、<code>all</code>（跨列）。</p>
<p><img src="https://img2024.cnblogs.com/blog/596097/202505/596097-20250509092852756-102607016.png" alt="" width="600" loading="lazy"></p>
<h3 id="column-width">column-width</h3>
<p><code>column-width</code> 设置列的宽度。浏览器会自动调整宽度大小，如果设置的宽度连两列都放不下，会自动变为一列显示（如图三）。</p>
<p><img src="https://img2024.cnblogs.com/blog/596097/202505/596097-20250509092856971-1892230639.png" alt="" width="800" loading="lazy"></p>
<h3 id="columns">columns</h3>
<p><code>columns</code> 简写属性，可组合设置 column-width 和 column-count 属性。</p>
<p><img src="https://img2024.cnblogs.com/blog/596097/202505/596097-20250509092901707-1451738839.png" alt="" width="800" loading="lazy"></p>
<h2 id="grid-实现瀑布流">grid 实现瀑布流</h2>
<p>源码：</p>
<pre><code class="language-html">&lt;div class="masonry"&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
  &lt;div class="item"&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;style&gt;
:root{
  --item-bg-1: #ff4757;
  --item-bg-2: #cea442;
  --item-bg-3: #18005f;
  --counter-bg: #dedede;
}

.masonry {
  display: grid;
  grid-gap: 20px;
  grid-auto-flow: dense row;
  grid-template-columns: repeat(9, 1fr);
  grid-auto-rows: minmax(50px, auto);
  /* 重置计数器 */
  counter-reset: item-counter;
}

.item {
  box-sizing: border-box;
  /* css 计数器 */
  counter-increment: item-counter;
  position: relative;
}
/* 显示计数器 */
.item:before {
  position: absolute;
  top: 0;
  left: 0;
  padding: 8px 0;
  min-width: 2em;
  text-align: center;
  background-color: var(--counter-bg);
  content: counter(item-counter);
}
/* 给 item 设置不同的高度和背景色 */
.item:nth-child(7n+1) {
  grid-row: 1 / 4;
  background-color: var(--item-bg-1);
}
.item:nth-child(7n+2) {
  grid-row: 1 / 3;
  background-color: var(--item-bg-2);
}
.item:nth-child(7n+3) {
  grid-row: 1 / 4;
  background-color: var(--item-bg-3);
}
.item:nth-child(7n+4) {
  grid-row: 4 / 7;
  background-color: var(--item-bg-1);
}
.item:nth-child(7n+5) {
  grid-row: 3 / 9;
  background-color: var(--item-bg-2);
}
.item:nth-child(7n+6) {
  grid-row: 4 / 8;
  background-color: var(--item-bg-3);
}
.item:nth-child(7n+7) {
  grid-row: 7 / 11;
  background-color: var(--item-bg-1);
}
&lt;/style&gt;
</code></pre>
<p>效果：</p>
<p><img src="https://img2024.cnblogs.com/blog/596097/202505/596097-20250509092909582-1424649626.png" alt="" width="800" loading="lazy"></p>
<h2 id="写在最后">写在最后</h2>
<p>在多列布局方面 column 属性相比于 flex 和 grid 而言，显得更有优势。</p>
<p>虽说 grid 也能做出瀑布流效果，不过需要指定每个网格单元的占用大小。</p>
<p>column 虽然不用控制每个子项的大小，但它的子元素排列顺序是从上到下排列，并不是从左往右，这种情况如果数据存在分页加载时候，就会出现内容重新排列导致内容闪动。</p>
<p>在瀑布流布局这个需求场景下，CSS 多多少少还是有点弱鸡~~必要时候还是只有祭出 JS 。</p>
<p><strong>其他相关资料：</strong></p>
<p><code>break-*</code> 控制多列布局如何中断换列： <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/break-inside" target="_blank" rel="noopener nofollow">https://developer.mozilla.org/zh-CN/docs/Web/CSS/break-inside</a></p>

</div>
<div id="MySignature" role="contentinfo">
    <p>&nbsp;</p>
<p style="font-size: 18px;font-weight: bold;">文章收录于微信公众号【<span style="color:rgb(255, 71, 87)">前端路引</span>】，欢迎 <span style="color:#4ec259">微信扫一扫</span> 查看更多文章。</p>
<p>
  <img style="max-width: 320px;" src="https://images.cnblogs.com/cnblogs_com/linx/2447020/o_250228035031_%E5%85%AC%E4%BC%97%E5%8F%B7%E4%BA%8C%E7%BB%B4%E7%A0%81.png">
</p>
<p>本文来自博客园，作者：<a href="https://www.cnblogs.com/linx/" target="_blank">前端路引</a>，转载请注明原文链接：<a href="https://www.cnblogs.com/linx/p/18867615" target="_blank">https://www.cnblogs.com/linx/p/18867615</a></p>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

		</div>
		<div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.3650806864201389" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-09 09:32">2025-05-09 09:31</span>&nbsp;
<a href="https://www.cnblogs.com/linx">前端路引</a>&nbsp;
Views(<span id="post_view_count">31</span>)&nbsp;
Comments(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18867615);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18867615', targetLink: 'https://www.cnblogs.com/linx/p/18867615', title: 'Web前端入门第 48 问：纯 CSS 使用 column 属性实现瀑布流布局' })">举报</a>
</div>
	