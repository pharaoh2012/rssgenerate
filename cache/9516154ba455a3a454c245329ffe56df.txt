
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/youlanjihua/p/18888969" title="发布于 2025-05-21 14:17">
    <span role="heading" aria-level="2">详解鸿蒙仓颉开发语言中的日志打印问题</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p data-id="p124945a-XKN5VzTv">一门新的开发语言在诞生初期，由于它本身的特性和使用人数暂时较少，会容易出现一些大家不太容易理解的问题，或者说有一些坑。今天就详细分享一下仓颉开发语言中的日志打印相关内容，带大家踩一踩坑。</p>
<p data-id="p124945a-BL7KSigp"><strong>AppLog</strong></p>
<p data-id="p124945a-QqJN1Yrm">在新创建的项目中，Button的点击事件就写好了一行打印日志的代码：</p>
<p data-id="p838747a-PclafNWA">&nbsp;</p>
<p data-id="pa028eb2-uMKijLu4"><img src="https://harmonyos.oss-cn-beijing.aliyuncs.com/images/202505/47389500844e717d62f411380b2783d47d022a.png" data-type="block"></p>
<p data-id="p124945a-N5CASf5r">和ArkTs不同，仓颉语言中没有了console.log,这里用的是AppLog.info。</p>
<p data-id="p124945a-8eaunPph">这时候问题就出现了，很多同学发现点击按钮之后并没有打印任何东西，幽蓝君也一样，当时因为这个问题困扰了很久</p>
<p data-id="pa028eb2-5ZEMk3Y1"><img src="https://harmonyos.oss-cn-beijing.aliyuncs.com/images/202505/d1cbaab911c90bd0d6c9808268bb854db697c9.png" data-type="block"></p>
<p data-id="p124945a-sxGJo2uS">最终发现AppLog打印的内容只能在真机看到，模拟器上是看不到的。</p>
<p data-id="pa028eb2-0jTTUMTA"><img src="https://harmonyos.oss-cn-beijing.aliyuncs.com/images/202505/28f7e1c611adc1abacd075166692066cebbd41.png" data-type="block"></p>
<p data-id="p124945a-AoJlZHq1">那么AppLog到底是什么呢，为什么会出现这种问题。</p>
<p data-id="p124945a-yqvURqlx">仓颉语言无法通过command点进去看代码，我们不知道AppLog的任何信息。不过幽蓝君还是从代码提示中看出了一点端倪：</p>
<p data-id="pa028eb2-Cra89Uky"><img src="https://harmonyos.oss-cn-beijing.aliyuncs.com/images/202505/0430109040c0994ef051305f0bc726111203eb.png" data-type="block"></p>
<p data-id="p124945a-ZWjuR37l">可以看出AppLog也还是基于Hilog的封装，而DevEco的控制台打印的就是Hilog的内容。而且作为初始化代码中推荐的打印方式，在模拟器无法打印，我只能理解为这是一个坑。</p>
<p data-id="pa028eb2-ywKmiyE9"><img src="https://harmonyos.oss-cn-beijing.aliyuncs.com/images/202505/b3d661b8017b37283a70586e6a956e5bc9e939.png" data-type="block"></p>
<p data-id="p124945a-SozyeHH2"><strong>Hilog</strong></p>
<p data-id="p124945a-Gf2HU6IM">刚才说了AppLog是基于Hilog的封装，所以在仓颉中你依然可以使用Hilog，这是鸿蒙系统中最基础的打印方式，console和AppLog都是从Hilog封装而来。没有真机设备的同学可以使用这种方式：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>Hilog.info(0x0000, 'hello hilog', 'this is an info level log');</code></pre>
</div>
<p data-id="p124945a-z6VmXSA0">这时候模拟器中可以正常打印日志了。</p>
<p data-id="pa028eb2-FAJrIysX"><img src="https://harmonyos.oss-cn-beijing.aliyuncs.com/images/202505/1904978534781c793d4863b3464eaa7aee31b4.png" data-type="block"></p>
<p data-id="p124945a-28cdqKC6"><strong>print</strong></p>
<p data-id="p124945a-8hNqKWAO">告诉大家一个秘密，使用VSCode创建的仓颉项目，和DevEco创建的项目大有不同，而且默认的打印日志方式是println：</p>
<p data-id="pa028eb2-LoV36bHs"><img src="https://harmonyos.oss-cn-beijing.aliyuncs.com/images/202505/d849d9d9786dce72020993cabee61dc6f4871e.png" data-type="block"></p>
<p data-id="p124945a-TlwD8Lf1">这种方式在vscode是可以正常打印的。println是基于print的封装，所以在这里使用print也同样有效。&nbsp;</p>
<p data-id="p124945a-mtNeLGyF">println和print在DevEco中也能写出来，但是是不能打印的，因为DevEco只能打印Hilog的内容,而print和Hilog没什么关系。</p>
<p data-id="p124945a-JUWPVznE">以上就是仓颉开发语言中的日志打印，希望对大家有所帮助。</p>
<p data-id="p124945a-fVwTovhS">#HarmonyOS语言##仓颉##购物#</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.33310893809375" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-21 14:17">2025-05-21 14:17</span>&nbsp;
<a href="https://www.cnblogs.com/youlanjihua">幽蓝计划</a>&nbsp;
阅读(<span id="post_view_count">19</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18888969);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18888969', targetLink: 'https://www.cnblogs.com/youlanjihua/p/18888969', title: '详解鸿蒙仓颉开发语言中的日志打印问题' })">举报</a>
</div>
        