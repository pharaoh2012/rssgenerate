<!----> <meta itemprop="headline" content="探索 Antfu ESLint 配置：一款极为便捷的 ESLint 设置方案"> <meta itemprop="keywords" content="前端,JavaScript"> <meta itemprop="datePublished" content="2024-12-23T01:21:15.000Z"> <meta itemprop="image" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-128.png~tplv-t2oaga2asx-image.image"> <div itemprop="author" itemscope="itemscope" itemtype="http://schema.org/Person"><meta itemprop="name" content="不要额外加糖"> <meta itemprop="url" content="https://juejin.cn/user/3081263002689614"></div> <div itemprop="publisher" itemscope="itemscope" itemtype="http://schema.org/Organization"><meta itemprop="name" content="掘金"> <div itemprop="logo" itemscope="itemscope" itemtype="https://schema.org/ImageObject"><meta itemprop="url" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-white-180.png~tplv-t2oaga2asx-image.image"> <meta itemprop="width" content="180"> <meta itemprop="height" content="180"></div></div> <h1 class="article-title" data-v-b21437b8="">
            探索 Antfu ESLint 配置：一款极为便捷的 ESLint 设置方案
            <!----> <!----></h1> <div class="author-info-block block-hidden" data-v-b21437b8=""><div class="author-info-box" data-v-b21437b8=""><div class="author-name" data-v-b21437b8=""><a href="/user/3081263002689614/posts" target="_blank" rel="" class="jj-link username username ellipsis" data-v-65b50b51="" data-v-1800aadb="" data-v-b21437b8=""><span class="name" style="max-width:160px;" data-v-65b50b51="" data-v-1800aadb="">
    不要额外加糖
  </span> <!----> <!----> <!----> </a></div> <div class="meta-box" data-v-b21437b8=""><time datetime="2024-12-23T01:21:15.000Z" title="Mon Dec 23 2024 01:21:15 GMT+0000 (Coordinated Universal Time)" class="time" data-v-b21437b8="">
                    2024-12-23
                  </time> <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="read-icon" data-v-b21437b8=""><path d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor" data-v-b21437b8=""></path><circle cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor" data-v-b21437b8=""></circle></svg> <span class="views-count" data-v-b21437b8="">
                    5,832
                  </span> <span class="read-time" data-v-b21437b8=""><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" data-v-b21437b8=""><rect width="16" height="16" fill="none" data-v-b21437b8=""></rect><circle cx="8" cy="8" r="5.65625" stroke="#8A919F" data-v-b21437b8=""></circle><path d="M7.69141 5.18652V8.30924H10.8141" stroke="#8A919F" stroke-linecap="round" stroke-linejoin="round" data-v-b21437b8=""></path></svg>
                    阅读8分钟
                  </span> <!----></div></div> <div style="flex:1;" data-v-b21437b8=""></div> <!----> <!----></div> <!----> <!----> <!----> <img src="//lf-web-assets.juejin.cn/obj/juejin-web/xitu_juejin_web/img/banner.a5c9f88.jpg" style="width:100%;height:auto;display:block;" data-v-b21437b8=""> <div id="article-root" itemprop="articleBody" class="main" data-v-b21437b8=""><div class="article-viewer markdown-body cache result"><h2 data-id="heading-0">探索 Antfu ESLint 配置：一款极为便捷的 ESLint 设置方案</h2>
<h3 data-id="heading-1">前言</h3>
<p>在前不久的 12 月 07 日，第七届 FEDAY 会议在厦门万象影城举办，会议嘉宾中有万众瞩目的天之骄子 —— <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fantfu" target="_blank" title="https://github.com/antfu" ref="nofollow noopener noreferrer">Anthony Fu</a> ，他分享了一篇 <code>ESLint 通用配置方案：化繁为简</code>，有兴趣的小伙伴可以在 b 站上搜索相关视频。</p>
<p>我曾经不久问过周围的小伙伴：<code>你的项目中使用 ESLint 嘛？</code>，给我的回答普遍是 <code>不想用</code>、<code>太烦人</code>、<code>没必要</code> 等等，我一下就火起来了，怎么能不使用 <code>ESLint</code> 呢，你们难道没有代码洁癖嘛？鲁迅曾经说过：<code>没有代码洁癖的程序员不是好厨师！</code>，恰逢 <code>ESLint v9</code> 也已经发布了将近 8 个月的时间了，官方也宣布在 2024-10-05 结束了对 <code>ESLint v8.x</code> 的支持，不再维护。为此我特地花了一天的时间来写这篇文章，为的就是 <code>洗脑</code> 他们，都给我用起来！准备接受神圣的洗礼吧！</p>
<h3 data-id="heading-2">ESLint v9</h3>
<p>在学习使用 <code>@antfu/eslint-config</code> 配置之前，我们先来了解一下 <code>ESLint v9</code> ，为什么这么版本一经发布就引起了前端圈的热议。<code>ESLint v9</code> 带来了多项 <code>Breaking Changes （破坏性更新）</code> ，对于用户来说新版本的迁移带来了更多的调整，官方文档中也发布了<a href="https://link.juejin.cn?target=https%3A%2F%2Feslint.org%2Fblog%2F2023%2F11%2Fwhats-coming-in-eslint-9.0.0%2F" target="_blank" title="https://eslint.org/blog/2023/11/whats-coming-in-eslint-9.0.0/" ref="nofollow noopener noreferrer">迁移指南</a>。</p>
<h4 data-id="heading-3">Flat Config</h4>
<p>在 <code>ESLint v9</code> 中，扁平化配置成为了新版本中的默认配置。早在 2019 年的版本中就提出了扁平化配置的理念以及实现，在 v9 版本中以及成为默认配置，有兴趣的小伙伴可以在官网文档中了解更多<a href="https://link.juejin.cn?target=https%3A%2F%2Feslint.org%2Fblog%2F2023%2F10%2Fflat-config-rollout-plans%2F" target="_blank" title="https://eslint.org/blog/2023/10/flat-config-rollout-plans/" ref="nofollow noopener noreferrer">扁平化配置</a>详情。</p>
<ul>
<li>默认情况下，<code>ESLint CLI</code> 将搜索 <code>eslint.config.(js | cjs | mjs)</code> 而不是 <code>.eslintrc.*</code> 文件。如果未找到 <code>eslint.config.js</code> 文件，CLI 会将其视为错误，并且不会运行。</li>
<li>如果你想使用 <code>.eslintrc.*</code>，你需要将 <code>ESLINT_USE_FLAT_CONFIG</code> 环境变量设置为 <code>false</code>。执行此操作时，您将在控制台中收到弃用警告。</li>
</ul>
<p>传统格式 <code>.eslintrc.json</code></p>
<pre><code class="hljs language-json" lang="json"><span class="hljs-punctuation">{</span>
  <span class="hljs-attr">"extends"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>
    <span class="hljs-string">"eslint:recommended"</span><span class="hljs-punctuation">,</span>
    <span class="hljs-string">"plugin:@typescrit-eslint/recommended"</span>
  <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">"plugins"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>
  	<span class="hljs-string">"vue"</span><span class="hljs-punctuation">,</span>
  	<span class="hljs-string">"n"</span>
  <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">"rules"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>
    <span class="hljs-attr">"@typescript-eslint/no-unused-vars"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"off"</span>
  <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">"overrides"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span>
<span class="hljs-punctuation">}</span>
</code></pre>
<p>扁平化配置 <code>eslint.config.js</code></p>
<pre><code class="hljs language-js" lang="js"><span class="hljs-keyword">import</span> typescript <span class="hljs-keyword">from</span> <span class="hljs-string">'@eslint-typescript/eslint-plugin'</span>
<span class="hljs-keyword">import</span> eslint <span class="hljs-keyword">from</span> <span class="hljs-string">'@eslint/js'</span>
<span class="hljs-keyword">import</span> n <span class="hljs-keyword">from</span> <span class="hljs-string">'eslint-plugin-n'</span>
<span class="hljs-keyword">import</span> vue <span class="hljs-keyword">from</span> <span class="hljs-string">'eslint-plugin-vue'</span>

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> [
  eslint.<span class="hljs-property">configs</span>.<span class="hljs-property">recommended</span>,
  ...typescript.<span class="hljs-property">configs</span>.<span class="hljs-property">recommended</span>,
  {
    <span class="hljs-attr">plugins</span>: {
      vue,
      <span class="hljs-attr">node</span>: n
    },
    <span class="hljs-attr">rules</span>: { <span class="hljs-string">'@typescript-eslint/no-unused-vars'</span>: <span class="hljs-string">'off'</span> }
  }
]
</code></pre>
<h4 data-id="heading-4">移除 formatters</h4>
<p>为了不断减少 <code>ESLint</code> 的安装大小，从 <code>ESLint</code> 的核心中删除大部分格式化程序。如果你目前正在使用这些格式化程序，则需要安装独立包以用于 <code>ESLint v9</code>。</p>
<h4 data-id="heading-5">放弃对 Node.js &lt; v18.18.0、v19 的支持</h4>
<p>以上只列举了三个对于普通开发者来说最重要的三个破坏性更新，如果你想了解更多，可以从文档中的<a href="https://link.juejin.cn?target=https%3A%2F%2Feslint.org%2Fblog%2F2023%2F11%2Fwhats-coming-in-eslint-9.0.0%2F" target="_blank" title="https://eslint.org/blog/2023/11/whats-coming-in-eslint-9.0.0/" ref="nofollow noopener noreferrer">迁移指南</a>处了解。</p>
<h3 data-id="heading-6">@antfu/eslint-config</h3>
<p>接下来，轮到我们的主角登场。我们先来看看，antfu 对他这个插件的描述。大家也可以到<a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fantfu%2Feslint-config" target="_blank" title="https://github.com/antfu/eslint-config" ref="nofollow noopener noreferrer">插件仓库</a>查看说明文档。</p>
<h4 data-id="heading-7">特征</h4>
<ul>
<li>自动修复格式（旨在在<strong>没有</strong> Prettier 的情况下独立使用）</li>
<li>合理的默认值，最佳实践，只需一行配置</li>
<li>专为 TypeScript、JSX、Vue、JSON、YAML、Toml、Markdown 等而设计。开箱即用。</li>
<li>固执己见，但非常可定制</li>
<li>ESLint Flat 配置，轻松编写！</li>
<li>可选的 React、Svelte、UnoCSS、Astro、Solid 支持</li>
<li><strong>样式原则</strong>：最小读取，稳定差异，一致
<ul>
<li>排序的导入，悬空的逗号</li>
<li>单引号，无分号</li>
<li>使用 <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Feslint-stylistic%2Feslint-stylistic" target="_blank" title="https://github.com/eslint-stylistic/eslint-stylistic" ref="nofollow noopener noreferrer">ESLint Stylistic</a> （<code>ESLint v9</code> 中放弃了大部分的样式格式化功能，这是 antfu 自行组织的代码格式化插件仓库）</li>
</ul>
</li>
<li>默认遵循 <code>.gitignore</code></li>
<li>需要 <code>ESLint v9.5.0+</code></li>
</ul>
<h4 data-id="heading-8">安装</h4>
<p>使用 CLI 工具</p>
<pre><code class="hljs language-bash" lang="bash">npm dlx @antfu/eslint-config@latest
</code></pre>
<p>或手动安装</p>
<pre><code class="hljs language-bash" lang="bash">npm i -D eslint @antfu/eslint-config
</code></pre>
<h4 data-id="heading-9">使用</h4>
<p>在根目录下创建 <code>eslint.config.mjs</code></p>
<pre><code class="hljs language-js" lang="js"><span class="hljs-keyword">import</span> antfu <span class="hljs-keyword">from</span> <span class="hljs-string">'@antfu/eslint-config'</span>

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title function_">antfu</span>()
</code></pre>
<p>在 <code>package.json</code> 中添加 <code>script</code></p>
<pre><code class="hljs language-json" lang="json"><span class="hljs-attr">"scripts"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>
  <span class="hljs-attr">"lint"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"eslint ."</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">"lint:fix"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"eslint . --fix"</span>
<span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>
</code></pre>
<p><code>lint</code>：用于进行 <code>ESLint</code> 语法检查；</p>
<p><code>lint:fix</code>：用于修复 <code>ESLint</code> 语法错误</p>
<p><img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/fe8e584d64db4184b1416821f0e26e1d~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5LiN6KaB6aKd5aSW5Yqg57OW:q75.awebp?rk3s=f64ab15b&amp;x-expires=1742837462&amp;x-signature=0qJIWxJuZ5nr%2BGGSxLP9WDF%2Bccw%3D" alt="script.gif" loading="lazy"></p>
<p>澄清一下：其实 <code>ESLint</code> 的编译速度还是挺快的，是我的老电脑内存不太够！</p>
<p>为了让编辑器能够帮助我们实时修复 <code>ESLint</code> 带来的语法问题，我们可以借助编辑器的保存时自动执行 <code>npm run lint:fix</code>。但是受不住我们的一些 <code>善良</code> 同事，新项目拉下了先把 <code>ESLint</code> 禁用了，提交时直接把所有有语法问题的代码给提交了，这时候需要使用到后面提到的 <code>husky</code> 钩子，防一手 <code>善良</code> 同事，毕竟编辑器的行为与个人有关。</p>
<p><strong>WebStorm</strong></p>
<p><img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/23ffcdfd029e4728bc5a1068fa518a00~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5LiN6KaB6aKd5aSW5Yqg57OW:q75.awebp?rk3s=f64ab15b&amp;x-expires=1742837462&amp;x-signature=4EJ43nHEh291mismz1SnP%2FL%2B%2BGY%3D" alt="1734771944218.jpg" loading="lazy"></p>
<p><strong>VSCode</strong></p>
<p><img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/5d65ae3ea83b4cb4b865a4521c41d85c~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5LiN6KaB6aKd5aSW5Yqg57OW:q75.awebp?rk3s=f64ab15b&amp;x-expires=1742837462&amp;x-signature=UFmUc3KQDA2BEv323jpjo%2BMtY%2BE%3D" alt="1734772247685.jpg" loading="lazy"></p>
<p><strong><code>固执己见</code> 的插件：antfu 称插件最初只是自己的私人定制，但在业界能被越来越多的人使用，以及认可。插件的风格并不适合所有的人以及企业，我们可以根据自己的项目需求进行 <code>定制</code>。</strong></p>
<pre><code class="hljs language-js" lang="js"><span class="hljs-keyword">import</span> antfu <span class="hljs-keyword">from</span> <span class="hljs-string">'@antfu/eslint-config'</span>

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title function_">antfu</span>({
  <span class="hljs-comment">// 设置项目的类型，默认为 app</span>
  <span class="hljs-attr">type</span>: <span class="hljs-string">'lib'</span>,

  <span class="hljs-comment">// 开始代码样式格式化</span>
  <span class="hljs-comment">// stylistic: true,</span>

  <span class="hljs-comment">// 或者你可以更加细粒度的设置</span>
  <span class="hljs-attr">stylistic</span>: {
    <span class="hljs-attr">indent</span>: <span class="hljs-number">2</span>, <span class="hljs-comment">// 4, or 'tab'</span>
    <span class="hljs-attr">quotes</span>: <span class="hljs-string">'single'</span>, <span class="hljs-comment">// or 'double'</span>
  },

  <span class="hljs-comment">// TypeScript 和 Vue 是自动检测的，你也可以显式启用它们</span>
  <span class="hljs-attr">typescript</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-comment">// vue: true,</span>

  <span class="hljs-comment">// 规则覆盖</span>
  <span class="hljs-attr">vue</span>: {
    <span class="hljs-attr">overrides</span>: {
      <span class="hljs-string">'vue/operator-linebreak'</span>: [<span class="hljs-string">'error'</span>, <span class="hljs-string">'before'</span>],
    },
  },

  <span class="hljs-comment">// 如果没有限制文件类型，则会为每一个文件进行规则重写</span>
  <span class="hljs-attr">overrides</span>: {},

  <span class="hljs-comment">// 关闭对 JSON 和 YAML 的支持</span>
  <span class="hljs-attr">jsonc</span>: <span class="hljs-literal">false</span>,
  <span class="hljs-attr">yaml</span>: <span class="hljs-literal">false</span>,

  <span class="hljs-comment">// 忽略某些文件或目录</span>
  <span class="hljs-attr">ignores</span>: [
    <span class="hljs-string">'**/fixtures'</span>,
    <span class="hljs-comment">// ...globs</span>
  ],

  <span class="hljs-comment">// 使用外部格式化程序来格式化 ESLint 尚无法处理的文件</span>
  <span class="hljs-comment">// 需要借助外部插件 eslint-plugin-format</span>
  <span class="hljs-comment">// 因此需要安装插件，否则会报错</span>
  <span class="hljs-comment">// 运行 npx eslint 会提示你缺少的插件</span>
  <span class="hljs-attr">formatters</span>: {
    <span class="hljs-attr">css</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">html</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">markdown</span>: <span class="hljs-literal">true</span>,
  },

  <span class="hljs-comment">// eslint-config 只对 Vue 和 TypeScript 有天然的支持</span>
  <span class="hljs-comment">// 如果你需要对第三方框架进行支持，需要自行开启</span>
  <span class="hljs-comment">// 开启后 运行 npx eslint 会提示你缺少的插件</span>
  <span class="hljs-comment">// 如 React Svelte Astro Solid UnoCSS</span>
  <span class="hljs-comment">// react: true,</span>
})

</code></pre>
<p><strong>command</strong></p>
<p>插件还提供触发器，我们能使用注释的方法，对特定的内容进行格式化（注意三斜杠）。</p>
<p><code>to-function</code>：将箭头函数转换为普通函数</p>
<p><code>to-arrow</code>：将普通函数转换为箭头函数</p>
<p><img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/59cc13eaa0bc4b35967def5544d02983~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5LiN6KaB6aKd5aSW5Yqg57OW:q75.awebp?rk3s=f64ab15b&amp;x-expires=1742837462&amp;x-signature=NIetBuXkyBOM68GDmhsuSSzYznA%3D" alt="function.gif" loading="lazy"></p>
<p><code>to-for-each</code>：将 <code>for-in/for-of</code> 循环转换为 <code>.forEach（）</code></p>
<p><code>to-for-of</code>：将 <code>.forEach（）</code> 转换为 <code>for-of</code> 循环</p>
<p><img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/f1f808e27aed4c30bf9173af7e97daba~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5LiN6KaB6aKd5aSW5Yqg57OW:q75.awebp?rk3s=f64ab15b&amp;x-expires=1742837462&amp;x-signature=%2FVGAD50ihKVZBWYpw35nIrbtcdA%3D" alt="for.gif" loading="lazy"></p>
<p><code>keep-sorted</code>： 对对象/数组/接口进行排序</p>
<p><img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/0d0986119477495a88331274854404b4~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5LiN6KaB6aKd5aSW5Yqg57OW:q75.awebp?rk3s=f64ab15b&amp;x-expires=1742837462&amp;x-signature=CqJ3K%2FWOBkfSUiKqHNuufXXcFbA%3D" alt="sort.gif" loading="lazy"></p>
<p><strong>错误样式</strong></p>
<p>有一天我问小朱，“你为什么不用 <code>ESLint</code>，有统一的代码风格看起来不是很舒服嘛，还有帮助于编码”。</p>
<p>小朱：“ <code>ESLint</code> 的报错太烦了，整屏红色的波浪线密密麻麻，看起来让人想去世”。</p>
<p>我：“哥们，你 2：1 吧！这种编辑器行为是可以关，你尽管写，后面保存的时候统一格式化一下就好咯”。</p>
<p>小朱：“还可以这样，你真是我滴神”。说完，他就给我跪下了。</p>
<p><strong>WebStorm</strong></p>
<p><img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/3b479866367e43ea96b532a5492efb4e~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5LiN6KaB6aKd5aSW5Yqg57OW:q75.awebp?rk3s=f64ab15b&amp;x-expires=1742837462&amp;x-signature=4Qz3i0a5arEMI38ppPUknKWCWt0%3D" alt="1734776147159.jpg" loading="lazy"></p>
<p><strong>VSCode</strong></p>
<p><img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/3b8fc22b7bd94bbd8fdf57d61edf18f9~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5LiN6KaB6aKd5aSW5Yqg57OW:q75.awebp?rk3s=f64ab15b&amp;x-expires=1742837462&amp;x-signature=tvG2yuMwwHMiq17t9lUYyd5Ojig%3D" alt="1734776945160.jpg" loading="lazy"></p>
<h4 data-id="heading-10">ESLint Config Inspector</h4>
<p>大家是否会觉得插件将所有的规则都封装底层，我们并不知道这个插件具体的规则，或许我们还需要去查看文档甚至是源代码。神奇的 antfu 为此也是打造了一个 <code>ESLint Config Inspector</code> ：<code>ESLint</code> 配置检查器，来帮助我们检查所有的 <code>ESLint</code> 规则。</p>
<p><strong>使用</strong></p>
<pre><code class="hljs language-bash" lang="bash">npx @eslint/config-inspector@latest

<span class="hljs-comment"># 或者</span>
 eslint --inspect-config
</code></pre>
<p>运行成功后，会帮助我们自动起一个服务，访问 <code>http://localhost:7777/</code> 即可查看。</p>
<p><img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/cc8be621f34c493b80c74f23ae4b1c38~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5LiN6KaB6aKd5aSW5Yqg57OW:q75.awebp?rk3s=f64ab15b&amp;x-expires=1742837462&amp;x-signature=hPvyURCnpt2XKB5RQEs5kKhvCrs%3D" alt="1734857379545.jpg" loading="lazy"></p>
<p><img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/30e4e7b6089b41f890319fd4d0a18142~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5LiN6KaB6aKd5aSW5Yqg57OW:q75.awebp?rk3s=f64ab15b&amp;x-expires=1742837462&amp;x-signature=Tpt%2FYodzQH2JH0dmrF9BWMvMvN8%3D" alt="1734857822469.jpg" loading="lazy"></p>
<p>在这里你可以看到每一个配置的规则、使用到的插件、以及所作用的文件。</p>
<p><img src="https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/05a0f90a70f34af39083d289e2254b04~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5LiN6KaB6aKd5aSW5Yqg57OW:q75.awebp?rk3s=f64ab15b&amp;x-expires=1742837462&amp;x-signature=FFTISUzu2zB8WuQKr5P4Iycue4U%3D" alt="1734857945727.jpg" loading="lazy"></p>
<p>你也可以在 <code>Rules</code> 选项页查看到所有的规则，包括在那个插件的规则、使用状态。</p>
<p>当然，也可以在搜索框中输入文件名，就能查看到该文件具体使用到了什么规则。查看器也是热更新的，当你修改 <code>ESLint</code> 配置后，查看器会马上重新更新渲染。</p>
<h3 data-id="heading-11">Husky 钩子</h3>
<p>我们已经学会了插件绝大数的功能，现在我们能对项目做出一套完美的限制了。直到有一天，你从远程仓库拉去了同事的代码，你开开心心的 <code>npm i</code> 、<code>npm run dev</code> （这套操作已经深刻的烙印到每个前端人的心中）。突然你的控制台冒出了一百多条的报错，什么情况，你找了该同事了解情况，得知他不仅把编辑器的报错行为关闭了，还把保存自动修复也给关闭了，然后直接提交了。</p>
<p>你心里一万匹草泥马奔腾而过，怒骂了一声：“这是什么 2: 1 同事”。于是你回到工位，开始百度，如何让 2: 1 同事的报错代码不能提交到远程仓库。屏幕中出现了 <strong>Husky</strong> 五个大字。</p>
<h4 data-id="heading-12">什么是  Husky</h4>
<p><code>Husky</code> 允许你在 Git 钩子（hooks）中运行脚本，通过 Husky，你可以在执行 Git 操作（如提交、推送等）时自动触发特定的任务，例如运行 <code>ESLint</code> 来检查代码风格或执行测试。这有助于确保代码质量和一致性，特别是在团队开发环境中。</p>
<h4 data-id="heading-13">安装</h4>
<pre><code class="hljs language-bash" lang="bash">npm i -D husky lint-staged
</code></pre>
<h4 data-id="heading-14">初始化</h4>
<pre><code class="hljs language-bash" lang="bash">npx husky install
</code></pre>
<p>初始化成功后，在项目的根目录下出就会出现 <code>.husky/pre-commit</code></p>
<pre><code class="hljs language-bash" lang="bash"><span class="hljs-meta">#!/bin/sh</span>
. <span class="hljs-string">"<span class="hljs-subst">$(dirname <span class="hljs-string">"<span class="hljs-variable">$0</span>"</span>)</span>/_/husky.sh"</span>

npx lint-staged
</code></pre>
<p>在 <code>package.json</code> 中添加</p>
<pre><code class="hljs language-json" lang="json"><span class="hljs-attr">"scripts"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>
  <span class="hljs-attr">"prepare"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"husky install"</span>
<span class="hljs-punctuation">}</span>
<span class="hljs-attr">"lint-staged"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>
    <span class="hljs-attr">"*"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"eslint --fix"</span>
  <span class="hljs-punctuation">}</span>
</code></pre>
<p>这样我们就能在 <code>git commit</code> 钩子触发前去统一格式化 <code>ESLint</code> 。</p>
<h3 data-id="heading-15">总结</h3>
<p><code>ESLint</code> 在前端世界是不可缺少的一环，也行市面上也已经出现了许许多多的替代品，但目前为止，<code>ESLint</code> 的生态还是不可比拟的。<code>@antfu/eslint-config</code> 也帮助我们省去大部分配置规则的时间，但规则并不是适合所有人，如果使用者有更多的想法，也可以 <code>fork</code> 仓库下来自己打造一套属于自己的 <code>eslint-config</code>。</p>
<p>最后，你们怎么知道我在 FEDAY 和 antfu 合影了。</p></div></div>