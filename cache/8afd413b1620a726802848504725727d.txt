
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/CareySon/p/18757020/Logging_best_practice_for_developer" title="发布于 2025-03-07 09:48">
    <span role="heading" aria-level="2">开发者必知的日志记录最佳实践</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<div class="sc-knuRna gXzDJr" data-cangjie-key="4" data-cangjie-leaf-block="true" data-type="paragraph"><span data-cangjie-key="6:0" data-cangjie-leaf="true" data-testid="6:0">  对程序来说，良好的日志风格能够极大的降低排错的成本，增强程序的健壮性与可运维性，但大多数开发同学并没有将日志的重要性提的和代码本身一样高，本文讨论我个人记录日志的一些最佳实践</span></div>
<h1 id="4ever-bi-7" class="sc-jmNpzm cvaOwL" data-cangjie-key="7" data-cangjie-leaf-block="true" data-type="heading-1"><span data-cangjie-key="9:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="9:0">基本原则</span></h1>
<h2 id="4ever-bi-10" class="sc-dUWWNf ixQzcY" data-cangjie-key="10" data-cangjie-leaf-block="true" data-type="heading-2"><span data-cangjie-key="12:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="12:0">将日志作为程序的第二个UI</span></h2>
<div class="sc-knuRna gXzDJr" data-cangjie-key="13" data-cangjie-leaf-block="true" data-type="paragraph"><span data-cangjie-key="15:0" data-cangjie-leaf="true" data-testid="15:0">  软件的第一UI当然是使用方或API调用方，而日志作为第二UI，用于开发、运维、合作方进行线上应用状态的检测与问题排查。日志的质量是代码质量的一部分。</span></div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="16" data-cangjie-leaf-block="true" data-type="paragraph">&nbsp;</div>
<h2 id="4ever-bi-19" class="sc-dUWWNf ixQzcY" data-cangjie-key="19" data-cangjie-leaf-block="true" data-type="heading-2"><span data-cangjie-key="21:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="21:0">写日志时，考虑看日志的人无法访问代码</span></h2>
<div class="sc-knuRna gXzDJr" data-cangjie-key="22" data-cangjie-leaf-block="true" data-type="paragraph"><span data-cangjie-key="24:0" data-cangjie-leaf="true" data-testid="24:0">  通常来说，看日志的角色不仅仅是开发代码的人员，包括线上值班人员、售后人员、其他合作方系统的人员，可能都需要依赖日志排查问题。今天的IT系统日志更容易收集后中心化，使得不同角色可以更容易访问日志。对于API，尤其是涉及其他多个子系统调用的复杂API，良好的日志可以为调用方、线上值班提供丰富的问题排查依据，在代码中打印日志时要考虑无法访问代码的角色。</span></div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="22" data-cangjie-leaf-block="true" data-type="paragraph">&nbsp;</div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="25" data-cangjie-leaf-block="true" data-type="paragraph">&nbsp;</div>
<h2 id="4ever-bi-28" class="sc-dUWWNf ixQzcY" data-cangjie-key="28" data-cangjie-leaf-block="true" data-type="heading-2"><span data-cangjie-key="30:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="30:0">日志的主要用户是Human，次要用户是机器，所以可读性很重要</span></h2>
<div class="sc-knuRna gXzDJr" data-cangjie-key="31" data-cangjie-leaf-block="true" data-type="paragraph"><span data-cangjie-key="33:0" data-cangjie-leaf="true" data-testid="33:0">  可读性包含的内容很多，下面会解释一些原则，但最基本的原则是缩进、空格等需要让阅读者易于阅读。同时日志格式也保证易于模式化解析（简单的字符串匹配，而不是复杂的正则）</span></div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="34" data-cangjie-leaf-block="true" data-type="paragraph">&nbsp;</div>
<h2 id="4ever-bi-37" class="sc-dUWWNf ixQzcY" data-cangjie-key="37" data-cangjie-leaf-block="true" data-type="heading-2"><span data-cangjie-key="39:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="39:0">考虑日志的目的是什么</span></h2>
<div class="sc-knuRna gXzDJr" data-cangjie-key="40" data-cangjie-leaf-block="true" data-type="paragraph"><span data-cangjie-key="42:0" data-cangjie-leaf="true" data-testid="42:0">  日志的目的不仅仅是线上Debug，也可以是记录性能或是收集后做数据分析，考虑日志在系统的目的，写日志时具备一定针对性。</span></div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="43" data-cangjie-leaf-block="true" data-type="paragraph">&nbsp;</div>
<h1 id="4ever-bi-46" class="sc-jmNpzm cvaOwL" data-cangjie-key="46" data-cangjie-leaf-block="true" data-type="heading-1"><span data-cangjie-key="48:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="48:0">最佳实践</span></h1>
<div class="sc-knuRna gXzDJr" data-cangjie-key="49" data-cangjie-leaf-block="true" data-type="paragraph">&nbsp;</div>
<h2 id="4ever-bi-52" class="sc-dUWWNf ixQzcY" data-cangjie-key="52" data-cangjie-leaf-block="true" data-type="heading-2"><span data-cangjie-key="54:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="54:0">为日志添加上下文</span></h2>
<div class="sc-knuRna gXzDJr" data-cangjie-key="55" data-cangjie-leaf-block="true" data-type="paragraph"><span data-cangjie-key="57:0" data-cangjie-leaf="true" data-testid="57:0">  非常General的日志是非常糟糕的，不仅无助于定位问题，更容易造成混淆。比如下面这个日志：</span></div>
<div data-cangjie-void="true" data-cangjie-key="58" data-cangjie-edge-selectable="true">
<div>
<div class="sc-iIPllB klIvEt" data-testid="code-editor" data-type="code">
<div class="sc-gXmSlM fyeKjx" data-cangjie-not-editable="true">
<div class="sc-iTONeN edeJyO">&nbsp;</div>
</div>
<div>
<div class="sc-gicCDI iMpyQr">
<div class="cm-editor ͼ1 ͼ2 ͼ4 ͼ15">
<div aria-live="polite">
<pre class="language-java highlighter-hljs"><code>2021-11-30 16:44:52,725 [WARN] Connection failed!</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="61" data-cangjie-leaf-block="true" data-type="paragraph">&nbsp;</div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="64" data-cangjie-leaf-block="true" data-type="paragraph"><span data-cangjie-key="66:0" data-cangjie-leaf="true" data-testid="66:0">无法定位是哪段代码，连接什么失败，也不知道失败的参数是什么，更好的日志格式如下：</span></div>
<div data-cangjie-void="true" data-cangjie-key="67" data-cangjie-edge-selectable="true">
<div>
<div class="sc-iIPllB klIvEt" data-testid="code-editor" data-type="code">
<div class="sc-gXmSlM fyeKjx" data-cangjie-not-editable="true">
<div class="sc-jIZahH jRzSFu">&nbsp;</div>
</div>
<div>
<div class="sc-gicCDI iMpyQr">
<div class="cm-editor ͼ1 ͼ2 ͼ4 ͼ15">
<div class="cm-scroller" tabindex="-1">
<div class="cm-layer cm-layer-above cm-cursorLayer" aria-hidden="true">
<pre class="language-java highlighter-hljs"><code>2021-11-30 16:44:52,725 [WARN][C97E2488-170A-4D01-8B90-BE562FD78342] Connection to XXX Service failed with message [msg=xxx, param1=xxx, param2=xxx]</code></pre>
</div>
<div class="cm-layer cm-selectionLayer" aria-hidden="true">&nbsp;</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="70" data-cangjie-leaf-block="true" data-type="paragraph"><span data-cangjie-key="72:0" data-cangjie-leaf="true" data-testid="72:0">类似问题还比如:</span></div>
<div data-cangjie-void="true" data-cangjie-key="73" data-cangjie-edge-selectable="true">
<div>
<div class="sc-iIPllB klIvEt" data-testid="code-editor" data-type="code">
<div class="sc-gXmSlM fyeKjx" data-cangjie-not-editable="true">
<div class="sc-jIZahH jRzSFu">&nbsp;</div>
<div class="sc-iTONeN edeJyO">
<pre class="language-java highlighter-hljs"><code>//don't do that
java.lang.IndexOutOfBoundsException

//do that
IndexOutOfBoundsException: index 25 is greater than list size 20.</code></pre>
</div>
</div>
<div>
<div class="sc-gicCDI iMpyQr">&nbsp;</div>
</div>
</div>
</div>
</div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="76" data-cangjie-leaf-block="true" data-type="paragraph">&nbsp;</div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="79" data-cangjie-leaf-block="true" data-type="paragraph"><span data-cangjie-key="81:0" data-cangjie-leaf="true" data-testid="81:0">对于日志，尽量避免太general的日志，记得我们的原则，知道我们的第二个UI的目标受众是谁，看日志的人大多数可能无法访问代码。</span></div>
<h2 id="4ever-bi-82" class="sc-dUWWNf ixQzcY" data-cangjie-key="82" data-cangjie-leaf-block="true" data-type="heading-2"><span data-cangjie-key="84:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="84:0">端到端的日志&amp;并发线程日志问题</span></h2>
<div class="sc-knuRna gXzDJr" data-cangjie-key="85" data-cangjie-leaf-block="true" data-type="paragraph"><span data-cangjie-key="87:0" data-cangjie-leaf="true" data-testid="87:0">每个请求都需要有一个唯一标识符与之对应，通常是一个GUID，主要用于两个用途</span></div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="88" data-cangjie-leaf-block="true" data-type="paragraph"><span data-cangjie-key="90:0" data-cangjie-leaf="true" data-testid="90:0">1.在不同系统或微服务间唯一标识一个请求</span></div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="91" data-cangjie-leaf-block="true" data-type="paragraph"><span data-cangjie-key="93:0" data-cangjie-leaf="true" data-testid="93:0">2.同一个应用内不同并发线程唯一标识一个请求</span></div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="94" data-cangjie-leaf-block="true" data-type="paragraph">&nbsp;</div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="97" data-cangjie-leaf-block="true" data-type="paragraph"><span data-cangjie-key="99:0" data-cangjie-leaf="true" data-testid="99:0">比如我们可以通过下面一个GUID追踪的一个请求完整的过程</span></div>
<div data-cangjie-void="true" data-cangjie-key="100" data-cangjie-edge-selectable="true">
<div>
<div class="sc-iIPllB klIvEt" data-testid="code-editor" data-type="code">
<div class="sc-gXmSlM fyeKjx" data-cangjie-not-editable="true">
<div class="sc-jIZahH jRzSFu">&nbsp;</div>
<div class="sc-iTONeN edeJyO">&nbsp;</div>
</div>
<div>
<div class="sc-gicCDI iMpyQr">
<div class="cm-editor ͼ1 ͼ2 ͼ4 ͼ15">&nbsp;</div>
</div>
</div>
</div>
</div>
</div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="103" data-cangjie-leaf-block="true" data-type="paragraph">
<pre class="language-java highlighter-hljs"><code>careyson@CareySonMac log % grep "C97E2488-170A-4D01-8B90-BE562FD78342" xxx.log
2021-11-30 16:44:52,725 [WARN] ModifyDBInstanceVersionImpl(46) - [C97E2488-170A-4D01-8B90-BE562FD78342,yunji-dbsingle2,ModifyDBInstanceVersion] XXX Start
2021-11-30 16:44:53,009 [WARN] ModifyDBInstanceVersionImpl(46) - [C97E2488-170A-4D01-8B90-BE562FD78342,yunji-dbsingle2,ModifyDBInstanceVersion] Begin Instance Rule Check [source version=, target version=]
2021-11-30 16:44:53,010 [WARN] ModifyDBInstanceVersionImpl(46) - [C97E2488-170A-4D01-8B90-BE562FD78342,yunji-dbsingle2,ModifyDBInstanceVersion] rule check passed. [source version=, target version=]
2021-11-30 16:44:53,011 [WARN] ModifyDBInstanceVersionImpl(46) - [C97E2488-170A-4D01-8B90-BE562FD78342,yunji-dbsingle2,ModifyDBInstanceVersion] Starting check  config
2021-11-30 16:44:53,078 [WARN] ModifyDBInstanceVersionImpl(46) - [C97E2488-170A-4D01-8B90-BE562FD78342,yunji-dbsingle2,ModifyDBInstanceVersion] Check  config Complete
2021-11-30 16:44:53,079 [WARN] ModifyDBInstanceVersionImpl(46) - [C97E2488-170A-4D01-8B90-BE562FD78342,yunji-dbsingle2,ModifyDBInstanceVersion] Starting get Source Custins info
.....</code></pre>
</div>
<h2 id="4ever-bi-106" class="sc-dUWWNf ixQzcY" data-cangjie-key="106" data-cangjie-leaf-block="true" data-type="heading-2"><span data-cangjie-key="108:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="108:0">变量值与常量值分开</span></h2>
<div class="sc-knuRna gXzDJr" data-cangjie-key="109" data-cangjie-leaf-block="true" data-type="paragraph"><span data-cangjie-key="111:0" data-cangjie-leaf="true" data-testid="111:0">将变量值与常量值分开可以使得日志更容易阅读，无论在代码还是日志本身的搜索也会变的简单，如果用工具抽取参数值也变的简单，下面是一个示例:</span></div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="112" data-cangjie-leaf-block="true" data-type="paragraph">&nbsp;</div>
<div data-cangjie-void="true" data-cangjie-key="115" data-cangjie-edge-selectable="true">
<div>
<div class="sc-iIPllB klIvEt" data-testid="code-editor" data-type="code">
<div class="sc-gXmSlM fyeKjx" data-cangjie-not-editable="true">&nbsp;</div>
<div>
<div class="sc-gicCDI iMpyQr">
<div class="cm-editor ͼ1 ͼ2 ͼ4 ͼ15">
<div class="cm-scroller" tabindex="-1">
<div class="cm-layer cm-selectionLayer" aria-hidden="true">
<pre class="language-java highlighter-hljs"><code>// don't do that
ClientAgent.makeRequest()
log.info("Made request to {} on our application.", url)
 
// do that
ClientAgent.makeRequest()
log.info("Made request to XXX Service. [url={}]", url)</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="118" data-cangjie-leaf-block="true" data-type="paragraph"><span data-cangjie-key="120:0" data-cangjie-leaf="true" data-testid="120:0">如果URL是一个很长的串，那么阅读的体验将会非常糟糕。</span></div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="121" data-cangjie-leaf-block="true" data-type="paragraph">&nbsp;</div>
<h2 id="4ever-bi-124" class="sc-dUWWNf ixQzcY" data-cangjie-key="124" data-cangjie-leaf-block="true" data-type="heading-2"><span data-cangjie-key="126:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="126:0">区分Warn与Error</span></h2>
<div class="sc-knuRna gXzDJr" data-cangjie-key="127" data-cangjie-leaf-block="true" data-type="paragraph"><span data-cangjie-key="129:0" data-cangjie-leaf="true" data-testid="129:0">日志按照严重性同样也会分级，业界标准使用最多的还是Info、Warn与Error。Info通常没什么说的，程序符合预期正常工作，在过程中记录相关信息，就是Info，Warn和Error值得提一下。</span></div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="130" data-cangjie-leaf-block="true" data-type="paragraph"><span data-cangjie-key="132:0" data-cangjie-leaf="true" data-testid="132:0">Warn意味着程序正常工作，但存在一些问题，这种问题通常在我们预期之内。</span></div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="133" data-cangjie-leaf-block="true" data-type="paragraph"><span data-cangjie-key="135:0" data-cangjie-leaf="true" data-testid="135:0">Error意味着程序异常，且这种异常不在我们预期内。</span></div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="136" data-cangjie-leaf-block="true" data-type="paragraph">&nbsp;</div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="139" data-cangjie-leaf-block="true" data-type="paragraph"><span data-cangjie-key="141:0" data-cangjie-leaf="true" data-testid="141:0">下面是一个程序中调用其他服务的简单例子：</span></div>
<div data-cangjie-void="true" data-cangjie-key="142" data-cangjie-edge-selectable="true">
<div>
<div class="sc-iIPllB klIvEt" data-testid="code-editor" data-type="code">
<div class="sc-gXmSlM fyeKjx" data-cangjie-not-editable="true">
<div class="sc-jIZahH jRzSFu">&nbsp;</div>
</div>
<div>
<div class="sc-gicCDI iMpyQr">
<div class="cm-editor ͼ1 ͼ2 ͼ4 ͼ15">
<div class="cm-scroller" tabindex="-1">
<div class="cm-layer cm-layer-above cm-cursorLayer" aria-hidden="true">
<pre class="language-java highlighter-hljs"><code>try{
    ClientAgent.makeRequest()
    log.info("Made request to XXX Service. [url={}]",url)
}catch(e:RDSException){
    log.warn("Request to XXX Service was rejected because parameter beyond some business boundary [url={}, param={}, result={}]",url,result)
}catch(e:Exception){
    log.error("Request to XXX Service failed. [url={}, exception={}]",url,exception)
}</code></pre>
</div>
<div class="cm-layer cm-selectionLayer" aria-hidden="true">&nbsp;</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="145" data-cangjie-leaf-block="true" data-type="paragraph">&nbsp;</div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="148" data-cangjie-leaf-block="true" data-type="paragraph">&nbsp;</div>
<h2 id="4ever-bi-151" class="sc-dUWWNf ixQzcY" data-cangjie-key="151" data-cangjie-leaf-block="true" data-type="heading-2"><span data-cangjie-key="153:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="153:0">如果可能，出错时附上KB或错误代号</span></h2>
<div class="sc-knuRna gXzDJr" data-cangjie-key="154" data-cangjie-leaf-block="true" data-type="paragraph"><span data-cangjie-key="156:0" data-cangjie-leaf="true" data-testid="156:0">写程序的人通常对程序所代表的业务有一定了解，但其他日志用户可能并没有背景知识以及业务限制，在有限的日志中通常很难说清楚，如果有对应KB或帮助文档，以及错误代号，可以附在日志中，帮助日志用户快速了解背景。比如下面这个例子：</span></div>
<div data-cangjie-void="true" data-cangjie-key="157" data-cangjie-edge-selectable="true">
<div>
<div class="sc-iIPllB klIvEt" data-testid="code-editor" data-type="code">
<div class="sc-gXmSlM fyeKjx" data-cangjie-not-editable="true">
<div class="sc-jIZahH jRzSFu">&nbsp;</div>
</div>
<div>
<div class="sc-gicCDI iMpyQr">
<div class="cm-editor ͼ1 ͼ2 ͼ4 ͼ15">
<div class="cm-scroller" tabindex="-1">
<div class="cm-layer cm-selectionLayer" aria-hidden="true">
<pre class="language-java highlighter-hljs"><code>log.error("some error C5D1 happend due to bussiness limit, for more information, please see https://help.aliyun.com/product/26090.html")</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="160" data-cangjie-leaf-block="true" data-type="paragraph">&nbsp;</div>
<h2 id="4ever-bi-163" class="sc-dUWWNf ixQzcY" data-cangjie-key="163" data-cangjie-leaf-block="true" data-type="heading-2"><span data-cangjie-key="165:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="165:0">避免记录敏感信息</span></h2>
<div class="sc-knuRna gXzDJr" data-cangjie-key="166" data-cangjie-leaf-block="true" data-type="paragraph"><span data-cangjie-key="168:0" data-cangjie-leaf="true" data-testid="168:0">  日志并不会像数据库那样有高安全等级，也就是访问日志的安全权限通常远远低于其他应用，且今天的日志更多是上传后中心化，更无法控制日志的扩散范围，因此对于敏感信息请不要记录，包括密码信息、Security Token信息、敏感身份信息等。</span></div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="169" data-cangjie-leaf-block="true" data-type="paragraph">&nbsp;</div>
<h2 id="4ever-bi-172" class="sc-dUWWNf ixQzcY" data-cangjie-key="172" data-cangjie-leaf-block="true" data-type="heading-2"><span data-cangjie-key="174:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="174:0">使用英文记录日志</span></h2>
<div class="sc-knuRna gXzDJr" data-cangjie-key="175" data-cangjie-leaf-block="true" data-type="paragraph"><span data-cangjie-key="177:0" data-cangjie-leaf="true" data-testid="177:0">  英文记录不仅仅是标准化和易于阅读的问题，而是今天的IT系统，日志可能经过多个系统中心化，这些系统只要有一个不支持UTF格式，就可能导致乱码，使用英文可以尽量避免这些麻烦。</span></div>
<div class="sc-knuRna gXzDJr" data-cangjie-key="187" data-cangjie-leaf-block="true" data-type="paragraph">&nbsp;</div>
<h1 id="4ever-bi-190" class="sc-jmNpzm cvaOwL" data-cangjie-key="190" data-cangjie-leaf-block="true" data-type="heading-1"><span data-cangjie-key="192:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="192:0">小结</span></h1>
<div class="sc-knuRna gXzDJr" data-cangjie-key="193" data-cangjie-leaf-block="true" data-type="paragraph"><span data-cangjie-key="195:0" data-cangjie-leaf="true" data-testid="195:0">  对于程序来说，代码质量除了代码本身，还包括日志。将日志当做程序的第二UI认真对待，不仅能使得我们的程序调试与开发成本大幅下降，还能使得程序的运维排错更加简洁，Bug更早发现。 </span></div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.047360454702546295" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-07 09:49">2025-03-07 09:48</span>&nbsp;
<a href="https://www.cnblogs.com/CareySon">CareySon</a>&nbsp;
阅读(<span id="post_view_count">73</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18757020" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18757020);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18757020', targetLink: 'https://www.cnblogs.com/CareySon/p/18757020/Logging_best_practice_for_developer', title: '开发者必知的日志记录最佳实践' })">举报</a>
</div>
        