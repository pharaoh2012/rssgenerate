
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/shanyou/p/18946949" title="发布于 2025-06-24 22:30">
    <span role="heading" aria-level="2">微软开源 Azure Functions MCP Extension</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p><a href="https://github.com/Azure/azure-functions-mcp-extension" target="_blank" rel="noopener nofollow"><font face="微软雅黑 Light" size="3">Azure Functions MCP Extension</font></a><font face="微软雅黑 Light" size="3"> 是微软推出的开源扩展库，旨在将 Azure Functions 与<strong>模型上下文协议（Model Context Protocol, MCP）</strong> 深度集成，简化远程 MCP 服务器的构建，实现 AI Agent 与外部工具、数据源的高效交互。</font></p><font face="微软雅黑 Light" size="3"><hr></font><h2><font face="微软雅黑 Light" size="3"> 一、核心功能与技术原理</font></h2><ol><li><p><strong><font face="微软雅黑 Light" size="3">MCP 协议标准化集成</font></strong></p><ul><li><font face="微软雅黑 Light" size="3">MCP 是由 Anthropic 提出的开源协议（基于 JSON-RPC 2.0），用于统一大语言模型（LLM）与外部资源（如 API、数据库）的通信接口。 
</font></li><li><font face="微软雅黑 Light" size="3">Azure Functions MCP Extension 通过 [McpToolTrigger] 和 [McpToolProperty] 等属性装饰器，将函数定义为 MCP 可调用的工具，无需额外编写通信管道代码。 </font></li></ul></li><li><p><strong><font face="微软雅黑 Light" size="3">声明式函数定义</font></strong></p><ul><li><font face="微软雅黑 Light" size="3">开发者只需在函数签名中添加属性注解，即可暴露工具功能。例如： </font><pre><pre><code><font face="微软雅黑 Light" size="3">[Function(nameof(SaveSnippet))]
[BlobOutput("snippets/{name}")]
public string SaveSnippet(
    [McpToolTrigger("SaveSnippet", "保存代码片段")] ToolInvocationContext context,
    [McpToolProperty("name", "string", "片段名称")] string name,
    [McpToolProperty("snippet", "string", "代码内容")] string snippet
) {
    return snippet;  
}
</font></code></pre></pre><font face="微软雅黑 Light" size="3">此函数可通过 MCP 客户端调用。 </font></li></ul></li><li><p><strong><font face="微软雅黑 Light" size="3">动态元数据暴露</font></strong></p><ul><li><font face="微软雅黑 Light" size="3">通过 builder.EnableMcpToolMetaData() 在启动时自动生成工具描述，供 LLM 理解何时调用函数及参数格式。 </font></li></ul></li><li><p><strong><font face="微软雅黑 Light" size="3">实时通信支持</font></strong></p><ul><li><font face="微软雅黑 Light" size="3">基于服务器发送事件（SSE）实现实时响应，客户端通过 URL https://&lt;domain&gt;/runtime/webhooks/mcp/sse 连接，并使用系统密钥认证（x-functions-key）。 </font></li></ul></li></ol><font face="微软雅黑 Light" size="3"><hr></font><h2><font face="微软雅黑 Light" size="3"> 二、开源生态与社区支持</font></h2><ol><li><p><strong><font face="微软雅黑 Light" size="3">官方资源库</font></strong></p><ul><li><font face="微软雅黑 Light"><font size="3"><strong>GitHub 示例</strong>：微软提供多语言示例仓库（如 .NET、Python、TypeScript），涵盖远程 MCP 服务器实现、身份认证方案等。 
</font></font></li></ul><table border="1" cellspacing="0" cellpadding="2">
<tbody>
<tr>
<td valign="top">语言(Stack)</td>
<td valign="top">仓库地址</td><td valign="top">说明</td>
</tr>
<tr>
<td valign="top">C# (.NET)</td>
<td valign="top"><a href="https://github.com/Azure-Samples/remote-mcp-functions-dotnet" rel="noopener nofollow">remote-mcp-functions-dotnet</a></td><td valign="top">基于.NET构建的MCP服务器，支持与Azure Blob存储、Cosmos DB等服务的集成。</td>
</tr>
<tr>
<td valign="top">Python</td>
<td valign="top"><a href="https://github.com/Azure-Samples/remote-mcp-functions-python" rel="noopener nofollow">remote-mcp-functions-python</a></td><td valign="top">通过Azure API Management（APIM）网关管理MCP工具调用</td>
</tr>
<tr>
<td valign="top">TypeScript (Node.js)</td>
<td valign="top"><a href="https://github.com/Azure-Samples/remote-mcp-functions-typescript" rel="noopener nofollow">remote-mcp-functions-typescript</a></td><td valign="top">Node.js环境下的MCP服务器实现，支持HTTP+SSE传输协议。</td>
</tr>
<tr>
<td valign="top">Java</td>
<td valign="top"><a href="https://github.com/Azure-Samples/remote-mcp-functions-java" rel="noopener nofollow">remote-mcp-functions-java</a></td><td valign="top"></td>
</tr>
</tbody>
</table>
<p><br></p><ul><li><font face="微软雅黑 Light"><font size="3"><strong>文档与工具</strong>：包括 MCP Foundry Playground、Azure MCP 文档 及社区论坛。 </font></font></li></ul></li><li><p><strong><font face="微软雅黑 Light" size="3">跨平台与云服务集成</font></strong></p><ul><li><font face="微软雅黑 Light" size="3">支持 Azure Cosmos DB、Azure Storage、Azure Monitor 等服务的无缝接入，覆盖数据库查询、日志分析等场景。 
</font></li><li><font face="微软雅黑 Light" size="3">与 Azure AI 代理服务、Copilot Studio 集成，强化 AI Agent 的任务编排能力。 </font></li></ul></li><li><p><strong><font face="微软雅黑 Light" size="3">开发者工具链</font></strong></p><ul><li><font face="微软雅黑 Light"><font size="3"><strong>VS Code 扩展</strong>：提供 MCP 连接插件，开发者可通过输入系统密钥直接绑定远程 MCP 服务器。 
</font></font></li><li><font face="微软雅黑 Light"><font size="3"><strong>C# SDK</strong>：微软与 Anthropic 合作发布官方 SDK，简化 MCP 服务器开发。 </font></font></li></ul></li></ol><font face="微软雅黑 Light" size="3"><hr></font><h2><font face="微软雅黑 Light" size="3"> 三、应用场景</font></h2><ol><li><p><strong><font face="微软雅黑 Light" size="3">AI Agent 工具调用标准化：<font face="微软雅黑 Light"><font size="3">解决 OpenAI Function Calling、Google Gemini 等模型工具调用接口碎片化问题，统一为 MCP 协议，降低多模型切换成本。 <strong>无服务器架构优势</strong></font></font></font></strong></p></li><li><p><strong><font face="微软雅黑 Light" size="3"><font face="微软雅黑 Light"><font size="3"><strong><font face="微软雅黑 Light" size="3">依托 Azure Functions 的事件驱动模型，实现自动扩缩容，避免本地部署的版本管理问题。 </font></strong></font></font></font></strong></p></li></ol><font face="微软雅黑 Light" size="3"><hr></font><h2><font face="微软雅黑 Light" size="3">⚙️ 四、部署与开发实践</font></h2><ol><li><p><strong><font face="微软雅黑 Light" size="3">快速启动步骤</font></strong></p><ul><li><font face="微软雅黑 Light" size="3">克隆示例仓库（如 Azure-Samples/remote-mcp-functions-dotnet）。 
</font></li><li><font face="微软雅黑 Light" size="3">配置 local.settings.json 添加系统密钥（functions-mcp-extension-system-key）。 
</font></li><li><font face="微软雅黑 Light" size="3">通过 VS Code 连接 SSE 端点，启用 Copilot 代理模式测试工具调用。 </font></li></ul></li><li><p><strong><font face="微软雅黑 Light" size="3">开源许可证</font></strong></p><ul><li><font face="微软雅黑 Light" size="3">项目采用 <strong>MIT 许可证</strong>（宽松，允许商业闭源使用）。 </font></li></ul></li></ol><font face="微软雅黑 Light" size="3"><hr></font><h2><font face="微软雅黑 Light" size="3"> 总结</font></h2><p><font face="微软雅黑 Light" size="3">Azure Functions MCP Extension 通过<strong>协议标准化</strong>、<strong>声明式编程</strong>和<strong>无服务器架构</strong>，显著降低了 AI Agent 与业务系统集成的复杂度。其开源生态提供了丰富的示例和工具链，适合企业快速构建生产级 AI 应用。开发者可进一步探索其与 Azure AI Gateway、APIM 的整合方案，实现更复杂的自动化工作流。</font></p>
</div>
<div id="MySignature" role="contentinfo">
    <p>欢迎大家扫描下面二维码成为我的客户，扶你上云</p>
<img src="https://images.cnblogs.com/cnblogs_com/shanyou/57459/o_220125090408_%E9%82%80%E8%AF%B7%E4%BA%8C%E7%BB%B4%E7%A0%81-258px.jpeg" width="170">
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.001388888888888889" data-date-updated="2025-06-24 22:32">2025-06-24 22:30</span>&nbsp;
<a href="https://www.cnblogs.com/shanyou">张善友</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18946949);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18946949', targetLink: 'https://www.cnblogs.com/shanyou/p/18946949', title: '微软开源 Azure Functions MCP Extension' })">举报</a>
</div>
        