
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/BNTang/p/18875497" title="发布于 2025-05-14 10:42">
    <span role="heading" aria-level="2">中国版 Cursor：CodeBuddy</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>我正在参加CodeBuddy「首席试玩官」内容创作大赛，本文所使用的 CodeBuddy 免费下载链接：<a href="https://copilot.tencent.com/?fromSource=gwzcw.9661261.9661261.9661261&amp;utm_medium=cpc&amp;utm_id=gwzcw.9661261.9661261.9661261&amp;from_column=20421&amp;from=20421" target="_blank" rel="noopener nofollow">腾讯云代码助手 CodeBuddy - AI 时代的智能编程伙伴</a></p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513141251400-1910422402.png" alt="" loading="lazy"></p>
<p>一句话即可让 AI 助手生成网页。</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513164104992-1419949500.png" alt="" loading="lazy"></p>
<p>还能生成小游戏。</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513174323428-1603920604.png" alt="" loading="lazy"></p>
<p>甚至可以生成脚本。</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513192016617-316901964.png" alt="" loading="lazy"></p>
<h2 id="传统开发环境的痛点">传统开发环境的痛点</h2>
<p>传统集成开发环境（IDE）通常需要手动创建目录、安装依赖，配置繁琐，门槛较高。无论是独立开发者还是爱好者，不借助 AI，开发环境都显得复杂且不友好。</p>
<h2 id="codebuddy-简介">CodeBuddy 简介</h2>
<p>本文介绍腾讯云代码助手 CodeBuddy。</p>
<p>CodeBuddy 是一款编程扩展插件，非独立软件。官网：<a href="https://copilot.tencent.com/" target="_blank" rel="noopener nofollow">https://copilot.tencent.com/</a></p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513141155928-23133617.png" alt="" loading="lazy"></p>
<h2 id="codebuddy-安装流程">CodeBuddy 安装流程</h2>
<p>点击“免费使用”。</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513141437361-1856901257.png" alt="" loading="lazy"></p>
<p>进入页面后，选择你的开发工具。以 VSCode 为例，点击“在 Visual Studio Code 中安装”。</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513142757721-2077693624.png" alt="" loading="lazy"></p>
<p>弹出窗口后，点击“打开 Visual Studio Code”。</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513141659742-865374103.png" alt="" loading="lazy"></p>
<p>VS Code 会自动打开。</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513142520091-1076692115.png" alt="" loading="lazy"></p>
<p>点击“Install”按钮完成安装。</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513142917776-1474362757.png" alt="" loading="lazy"></p>
<p>你也可以在扩展市场搜索“腾讯云代码助手”进行安装。</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513143041341-1987403902.png" alt="" loading="lazy"></p>
<p>安装完成后，左侧会出现插件图标。</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513143139995-486536830.png" alt="" loading="lazy"></p>
<h2 id="codebuddy-基本界面与功能">CodeBuddy 基本界面与功能</h2>
<p>点击图标进入 CodeBuddy 界面。首次使用需登录（注册腾讯云账号）。先看 Chat 功能，可以像聊天一样让它修改代码。</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513144115368-1449282759.png" alt="" loading="lazy"></p>
<p>如需使用智能体 Agent，点击 Craft。</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513144245783-2062323711.png" alt="" loading="lazy"></p>
<h2 id="mcp-协议与服务扩展">MCP 协议与服务扩展</h2>
<p>支持主流 MCP 协议。</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513144503679-516599352.png" alt="" loading="lazy"></p>
<p>内置 MCP 仓库。</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513144540739-822002041.png" alt="" loading="lazy"></p>
<p>可在 MCP 市场中快速安装和查找服务。如未找到所需服务，可点击右上角加号手动添加。</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513144647457-1282603224.png" alt="" loading="lazy"></p>
<p>例如添加文件系统：</p>
<pre><code class="language-json">"filesystem": {
    "command": "npx",
    "args": [
        "-y",
        "@modelcontextprotocol/server-filesystem",
        "D:\\"
    ]
}
</code></pre>
<p>保存后，即可在 MCP 已安装列表中看到。</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513145156968-1289696645.png" alt="" loading="lazy"></p>
<h2 id="craft-模式与-mcp-协作案例">Craft 模式与 MCP 协作案例</h2>
<p>下面通过案例演示 Craft 模式和 MCP 的协作。</p>
<p>我希望将 CodeBuddy 从左侧移动到右侧面板，方便查看左侧文件。</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513145340549-1121512485.png" alt="" loading="lazy"></p>
<p>我更习惯在右侧操作，便于查看文件。第一个案例：“在 <code>./web-demo/</code> 下生成响应式个人博客首页，包含导航栏、文章列表和页脚。”</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513145804227-1762414867.png" alt="" loading="lazy"></p>
<p>可以看到操作流程。无需手动操作，自动完成。建议在设置中勾选“自动修改文件”，无需每次确认。</p>
<p>点击右上角设计按钮，展开设置，勾选“自动修改文件”。</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513150000078-212037631.png" alt="" loading="lazy"></p>
<p>发现 CodeBuddy 在 <code>./web-demo/</code> 下又新建了一个 <code>web-demo</code> 文件夹。</p>
<p>这其实是多余的。<br>
我本意是在 <code>./web-demo/</code> 下直接生成响应式博客首页，无需再新建文件夹。<br>
于是我删除多余文件夹，将代码移至 <code>./web-demo/</code> 下。移动后查看页面效果。VS Code 运行 HTML 方法此处略过。</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513150622734-1100718679.png" alt="" loading="lazy"></p>
<p>页面如上图，简洁明了。测试响应式时，浏览器缩放页面，元素会自适应屏幕比例。</p>
<p>整体响应式表现良好。实际操作体验更佳。如果想让页面更美观，可以继续尝试，比如“请丰富页面，加入漂亮的卡片，美化 UI 设计”。</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513151043413-2088316824.png" alt="" loading="lazy"></p>
<p>经过“请丰富页面，加入漂亮的卡片，美化 UI 设计”后，我又补充“页面不够炫酷，可以用临时图片占位文章封面”。最终页面如下：</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513164104992-1419949500.png" alt="" loading="lazy"></p>
<p>同样支持响应式缩放。建议大家实际体验。</p>
<h2 id="小游戏开发体验">小游戏开发体验</h2>
<p>接下来测试小游戏开发。我准备了 5 张素材图片：</p>
<pre><code class="language-json">assets\人物.gif
assets\怪物.gif
assets\怪物被踩扁.gif
assets\灌木背景循环.png
assets\金币.gif
</code></pre>
<p>我的提示词是：“在 <code>./game-demo</code> 下生成一个横版过关小游戏，包括 index.html、game.js、assets 素材文件夹。”</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513193123442-1248012300.png" alt="" loading="lazy"></p>
<p>第一次生成的游戏未用素材，运行效果如下：</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513194234141-1150135097.png" alt="" loading="lazy"></p>
<p>第二次提示“assets 目录下已准备好素材，请使用”。仅用两次就完成了小游戏开发。</p>
<p>最终代码目录如下：</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513174616589-761744545.png" alt="" loading="lazy"></p>
<p>运行效果：</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513174323428-1603920604.png" alt="" loading="lazy"></p>
<p>基本功能已实现，但代码仍有优化空间，继续下一个案例。</p>
<h2 id="mcp--craftb站热门视频管理应用案例">MCP + Craft：B站热门视频管理应用案例</h2>
<p>提示词如下：</p>
<p>“使用 MCP，从 <a href="https://api.bilibili.com/x/web-interface/popular?ps=30" target="_blank" rel="noopener nofollow">https://api.bilibili.com/x/web-interface/popular?ps=30</a> 拉取前30条热门视频数据，提取 title 和 pubdate 字段，保存到 ./data/videos.json，然后在 ./bilibili-popular-app 下生成一个 React + Express 管理应用，直接读取 data/videos.json，使用 Ant Design 风格，包含视频列表展示、标记已看、删除和分页功能。”</p>
<p>我还配置了一个 MCP，名为 <code>fetcher</code>，用于抓取数据。</p>
<pre><code class="language-json">"fetcher": {
    "command": "npx",
    "args": ["-y", "fetcher-mcp"]
},
</code></pre>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513195536692-913010024.png" alt="" loading="lazy"></p>
<p>因此，最后一个案例结合了 MCP 和 Craft 智能体。</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513194645919-1374844351.png" alt="" loading="lazy"></p>
<p>运行时，先通过 fetcher 抓取数据，写入 ./data/videos.json。</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513194716078-319076697.png" alt="" loading="lazy"></p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513194845187-205972915.png" alt="" loading="lazy"></p>
<p>接着进入第二阶段：创建 React + Express 管理应用。</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513194819004-155135413.png" alt="" loading="lazy"></p>
<p>后续遇到问题直接对话修复，最后分别运行 server 与 client，效果如下：</p>
<p><img src="https://img2023.cnblogs.com/blog/2105804/202505/2105804-20250513195020483-1596477874.png" alt="" loading="lazy"></p>
<h2 id="总结与展望">总结与展望</h2>
<p>本文介绍了腾讯云代码助手 CodeBuddy，结合 Craft 智能体，制作了个人网页和小游戏，通过 MCP 服务抓取数据，并基于数据实现了前后端一体的管理面板。</p>
<p>所有案例均通过对话完成，门槛低且高效。生成代码仍有优化空间。</p>
<p>作为国内首家支持 MCP 服务的 AI 代码助手，MCP 协议前景广阔，腾讯代码助手值得期待。</p>
<p>通过 CodeBuddy 生成的代码已上传至 GitHub，感兴趣可查看：</p>
<p>GitHub 地址：<a href="https://github.com/BNTang/CodeBuddy" target="_blank" rel="noopener nofollow">https://github.com/BNTang/CodeBuddy</a></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.017531014039351853" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-14 10:43">2025-05-14 10:42</span>&nbsp;
<a href="https://www.cnblogs.com/BNTang">BNTang</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18875497);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18875497', targetLink: 'https://www.cnblogs.com/BNTang/p/18875497', title: '中国版 Cursor：CodeBuddy' })">举报</a>
</div>
        