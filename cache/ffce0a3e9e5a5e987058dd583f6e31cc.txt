
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ayuday/p/18913656" title="发布于 2025-06-06 10:23">
    <span role="heading" aria-level="2">stylus - 新生代CSS预处理框架</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        Stylus 是一种 CSS 预处理器，它扩展了 CSS 的功能，使得编写样式变得更简洁和高效。Stylus 允许使用嵌套、变量、混入等编程功能，这些功能可以极大地提高开发效率和代码的可维护性。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="stylus是什么">stylus是什么</h1>
<p>Stylus 是一种 CSS 预处理器，它扩展了 CSS 的功能，使得编写样式变得更简洁和高效。Stylus 允许使用嵌套、变量、混入等编程功能，这些功能可以极大地提高开发效率和代码的可维护性。<br>
<img src="https://img2024.cnblogs.com/blog/356003/202506/356003-20250606100847470-630078366.png" alt="image" loading="lazy"></p>
<h2 id="stylus中文文档">stylus中文文档</h2>
<p><a href="https://stylus.uihtm.com" target="_blank" rel="noopener nofollow">https://stylus.uihtm.com</a></p>
<h1 id="stylus背景介绍">Stylus背景介绍</h1>
<p>Stylus，2010年产生，来自于Node.js社区，主要用来给Node项目进行CSS预处理支持，在此社区之内有一定支持者，在广泛的意义上人气还完全不如Sass和LESS。</p>
<p>Stylus被称为是一种革命性的新语言，提供一个高效、动态、和使用表达方式来生成CSS，以供浏览器使用。Stylus同时支持缩进和CSS常规样式书写规则。</p>
<h1 id="什么是css预处理器">什么是CSS预处理器</h1>
<p>CSS预处理器定义了一种新的语言，其基本思想是，用一种专门的编程语言，为CSS增加了一些编程的特性，将CSS作为目标生成文件，然后开发者就只要使用这种语言进行编码工作。通俗的说，CSS预处理器用一种专门的编程语言，进行Web页面样式设计，然后再编译成正常的CSS文件，以供项目使用。CSS预处理器为CSS增加一些编程的特性，无需考虑浏览器的兼容性问题，例如你可以在CSS中使用变量、简单的逻辑程序、函数等等在编程语言中的一些基本特性，可以让你的CSS更加简洁、适应性更强、可读性更佳，更易于代码的维护等诸多好处。</p>
<p>CSS预处理器技术已经非常的成熟，而且也涌现出了很多种不同的CSS预处理器语言，比如说：Sass（SCSS）、LESS、Stylus、Turbine、Swithch CSS、CSS Cacheer、DT CSS等。如此之多的CSS预处理器，那么“我应该选择哪种CSS预处理器？”也相应成了最近网上的一大热门话题，在Linkedin、Twitter、CSS-Trick、知呼以及各大技术论坛上，很多人为此争论不休。相比过计我们对是否应该使用CSS预处理器的话题而言，这已经是很大的进步了。</p>
<p>到目前为止，在众多优秀的CSS预处理器语言中就属Sass、LESS和Stylus最优秀，讨论的也多，对比的也多。本文将分别从他们产生的背景、安装、使用语法、异同等几个对比之处向你介绍这三款CSS预处理器语言。相信前端开发工程师会做出自己的选择——我要选择哪款CSS预处理器。</p>
<h1 id="stylus使用">stylus使用</h1>
<h2 id="安装stylus">安装stylus</h2>
<pre><code>## 安装stylus包：
npm i -g stylus
</code></pre>
<ul>
<li>生成css文件：stylus common.styl -o common.css<br>
其中common.styl是.styl文件的名字，common.css是我们所熟知的css文件。xx.styl文件写下的代码会在xx.css中正确编译。</li>
<li>监听文件变化：stylus -w common.styl -o common.css<br>
这样我们在common.styl 写下的代码会实时编译进 common.css，便捷高效</li>
</ul>
<h1 id="总结">总结</h1>
<h2 id="stylus-的优势">Stylus 的优势</h2>
<p>简洁性和可读性: Stylus 的嵌套功能使得 CSS 代码更加简洁易读。通过缩进代替大括号，减少了样式文件的复杂度，使得维护和阅读代码变得更加直观。<br>
功能强大: Stylus 提供了丰富的功能，如变量、混入、函数等，使得 CSS 编写更具编程能力。这些特性不仅减少了重复代码，还提高了样式表的复用性和可维护性。<br>
高效的开发体验: Stylus 支持自动编译和实时监控文件变化，帮助开发者快速看到样式更改的效果。这种高效的开发流程减少了开发时间，提高了生产力。</p>
<h2 id="stylus实例">stylus实例</h2>
<p>html代码</p>
<pre><code class="language-html">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;title&gt;手风琴&lt;/title&gt;
    &lt;link rel="stylesheet" href="./common.css"&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;ul class="accordion"&gt;
        &lt;li&gt;1&lt;/li&gt;
        &lt;li&gt;2&lt;/li&gt;
        &lt;li&gt;3&lt;/li&gt;
        &lt;li&gt;4&lt;/li&gt;
        &lt;li&gt;5&lt;/li&gt;
        &lt;li&gt;6&lt;/li&gt;
    &lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>传统css部分：</p>
<pre><code class="language-css">* {
  margin: 0;
  padding: 0;
}
ul,
li {
  list-style: none;
}
.accordion {
  display: flex;
  width: 600px;
  height: 200px;
}
.accordion li {
  flex: 1;
  cursor: pointer;
  transition: all 300ms;
  text-align: center;
  line-height: 200px;
}
.accordion li:nth-child(1) {
  background-color: #51100b;
}
.accordion li:nth-child(2) {
  background-color: #7e1212;
}
.accordion li:nth-child(3) {
  background-color: #8b3a3a;
}
.accordion li:nth-child(4) {
  background-color: #9b5757;
}
.accordion li:nth-child(5) {
  background-color: #cf8080;
}
.accordion li:nth-child(6) {
  background-color: #f1bfbf;
}
.accordion li:hover {
  flex: 2;
  background-color: #fff;
}

</code></pre>
<p>效果图：<br>
<img src="https://img2024.cnblogs.com/blog/356003/202506/356003-20250606101428017-1514091119.png" alt="image" loading="lazy"></p>
<h2 id="stylus改写样式">Stylus改写样式</h2>
<p>stylus 让css拥有各项编程能力，在嵌套 + 模块化能力上有明显体现<br>
设置全局样式，Stylus 允许省略分号和大括号，利用缩进来表示嵌套结构， 当然如果你愿意，也可以使用大括号和分号</p>
<pre><code>*
    margin 0
    padding 0

ul,li
    list-style none
</code></pre>
<h3 id="设置容器样式">设置容器样式：</h3>
<p>Stylus 支持样式的嵌套，使得样式表更具层次感和组织性</p>
<ul>
<li>使用弹性布局和子元素flex比例分配实现等比例以及两倍比例</li>
<li>使用hover状态，修改相应li的flex：2</li>
<li>li上设置css，transition过渡动画</li>
<li>使用：nth-child设置不同元素的颜色</li>
</ul>
<pre><code class="language-css">  li
        flex 1
        cursor pointer
        transition all 300ms
        text-align center
        line-height 200px
        &amp;:nth-child(1)
            background-color rgb(81, 16, 11)
        &amp;:nth-child(2)
            background-color rgb(126, 18, 18)
        &amp;:nth-child(3)
            background-color rgb(139, 58, 58)
        &amp;:nth-child(4)
            background-color rgb(155, 87, 87)
        &amp;:nth-child(5)
            background-color rgb(207, 128, 128)
        &amp;:nth-child(6)
            background-color rgb(241, 191, 191)
        &amp;:hover
            flex 2
            background-color rgb(255, 255, 255)

</code></pre>
<p>以上，我们通过stylus就快速完成了这个手风琴效果</p>
<h2 id="高级-css-选择器">高级 CSS 选择器：</h2>
<ul>
<li>
<ul>
<li>兄弟选择器：选择紧随其后的兄弟元素。用于设置 article 元素之间的间距。</li>
</ul>
</li>
<li>~ 相邻同层选择器：选择在指定元素之后的同层兄弟元素，用于控制内容的显示。</li>
<li>:checked 伪类选择器：用于选中状态的元素，适用于 checkbox 和 radio 元素。</li>
<li>:nth-child(n) 和 :nth-of-type(n) ：选择第 n 个子元素或同类型的第 n 个子元素。</li>
</ul>
<h2 id="实践建议">实践建议</h2>
<p>熟练掌握 Stylus 的语法和功能: 理解并运用 Stylus 的各种特性，如嵌套、变量、混入等，可以显著提升你的样式表的编写效率和质量。<br>
关注代码可维护性: 尽管 Stylus 提供了强大的功能，但编写清晰、易于维护的代码依然至关重要。使用模块化的方式组织样式，避免样式冲突，提升代码的可读性。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.03586665494675926" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-06-06 10:23">2025-06-06 10:23</span>&nbsp;
<a href="https://www.cnblogs.com/ayuday">ayuday</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18913656);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18913656', targetLink: 'https://www.cnblogs.com/ayuday/p/18913656', title: 'stylus - 新生代CSS预处理框架' })">举报</a>
</div>
        