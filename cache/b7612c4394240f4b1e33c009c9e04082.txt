
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/SCRC/p/19042271" title="发布于 2025-08-16 17:02">
    <span role="heading" aria-level="2">【CRAIC】工业缺陷检测实训平台 模型训练指导手册 V1.4</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h2><a id="__0"></a>工业缺陷检测实训平台 模型训练指导手册</h2>
<ul>
<li>产品版本：创新版</li>
<li>文档版本：01</li>
</ul>
<h3><a id="_4"></a>版权声明</h3>
<p>版权所有©EDUCN 2025。保留一切权利。未得到本公司的书面许可，任何人不得以任何方式或形式对本手册内的任何部分进行复制、摘录、备份、修改、传播、翻译成其他语言、将其全部或部分用于商业用途。</p>
<h3><a id="_7"></a>免责声明</h3>
<p>本手册内容依据现有信息制作，由于产品版本升级或其他原因，其内容有可能变更。海云捷迅保留在没有任何通知或者提示的情况下对手册内容进行修改的权利。本手册仅作为使用指导，海云捷迅在编写本手册时已尽力保证其内容准确可靠，但并不确保手册内容完全没有错误或遗漏，本手册中的所有信息也不构成任何明示或暗示的担保。</p>
<ul>
<li>网址：https://www.awcloud.com</li>
<li>邮箱：fpga-china@awcloud.com</li>
</ul>
<h3><a id="_12"></a>目录</h3>
<ol>
<li><a href="#1-%E6%A8%A1%E5%9E%8B%E8%AE%AD%E7%BB%83%E6%B5%81%E7%A8%8B%E8%AF%B4%E6%98%8E" rel="noopener nofollow">模型训练流程说明</a>
<ul>
<li>1.1 <a href="#11-%E5%9F%BA%E4%BA%8E%E9%93%9D%E7%89%87%E7%BC%BA%E9%99%B7%E7%9A%84%E6%A8%A1%E5%9E%8B%E8%AE%AD%E7%BB%83%E6%B5%81%E7%A8%8B" rel="noopener nofollow">基于铝片缺陷的模型训练流程</a></li>
<li>1.2 <a href="#12-%E7%B3%BB%E7%BB%9F%E6%A3%80%E6%B5%8B%E6%B5%81%E7%A8%8B" rel="noopener nofollow">系统检测流程</a></li>
</ul>
</li>
<li><a href="#2-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%9C%80%E6%B1%82" rel="noopener nofollow">开发环境需求</a></li>
<li><a href="#3-%E5%9B%BE%E5%83%8F%E9%87%87%E9%9B%86" rel="noopener nofollow">图像采集</a>
<ul>
<li>3.1 <a href="#31-%E6%96%B9%E6%B3%95%E4%B8%80%E9%80%9A%E8%BF%87%E5%B7%A5%E4%B8%9A%E7%BC%BA%E9%99%B7%E6%A3%80%E6%B5%8B%E5%AE%9E%E8%AE%AD%E5%B9%B3%E5%8F%B0%E7%BB%88%E7%AB%AF%E9%87%87%E9%9B%86%E5%9B%BE%E5%83%8F" rel="noopener nofollow">方法一:通过工业缺陷检测实训平台终端采集图像。</a></li>
<li>3.2 <a href="#32-%E6%96%B9%E6%B3%95%E4%BA%8C%E9%80%9A%E8%BF%87%E4%B8%AA%E4%BA%BA%E7%94%B5%E8%84%91%E9%87%87%E9%9B%86%E5%9B%BE%E5%83%8F" rel="noopener nofollow">方法二:通过个人电脑采集图像</a></li>
</ul>
</li>
<li><a href="#4-%E6%95%B0%E6%8D%AE%E9%9B%86%E5%87%86%E5%A4%87" rel="noopener nofollow">数据集准备</a>
<ul>
<li>4.1 <a href="#41-%E5%AE%89%E8%A3%85%E5%B9%B6%E8%BF%90%E8%A1%8C%E6%A0%87%E6%B3%A8%E8%BD%AF%E4%BB%B6" rel="noopener nofollow">安装并运行标注软件</a></li>
<li>4.2 <a href="#42-%E8%BF%9B%E8%A1%8C%E5%9B%BE%E7%89%87%E6%A0%87%E6%B3%A8%E8%BD%AF%E4%BB%B6" rel="noopener nofollow">进行图片标注软件</a></li>
<li>4.3 <a href="#43-%E6%95%B0%E6%8D%AE%E9%9B%86%E6%95%B4%E7%90%86" rel="noopener nofollow">数据集整理</a></li>
<li>4.4 <a href="#44-%E6%95%B0%E6%8D%AE%E9%9B%86%E6%89%93%E5%8C%85" rel="noopener nofollow">数据集打包</a></li>
</ul>
</li>
<li><a href="#5-%E6%A8%A1%E5%9E%8B%E8%AE%AD%E7%BB%83" rel="noopener nofollow">模型训练</a>
<ul>
<li>5.1 <a href="#51-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87" rel="noopener nofollow">环境准备</a></li>
<li>5.2 <a href="#52-%E8%AE%AD%E7%BB%83%E6%B5%81%E7%A8%8B" rel="noopener nofollow">训练流程</a></li>
</ul>
</li>
<li><a href="#6-%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B0" rel="noopener nofollow">模型评估</a>
<ul>
<li>6.1 <a href="#61-%E6%A8%A1%E5%9E%8B%E7%B2%BE%E5%BA%A6%E8%AF%84%E4%BC%B0%E5%8F%AF%E8%B7%B3%E8%BF%87" rel="noopener nofollow">模型精度评估(可跳过)</a></li>
<li>6.2 <a href="#62-%E6%A8%A1%E5%9E%8B%E9%A2%84%E6%B5%8B%E5%8F%AF%E8%B7%B3%E8%BF%87" rel="noopener nofollow">模型预测(可跳过)</a></li>
<li>6.3 <a href="#63-%E6%A8%A1%E5%9E%8B%E5%AF%BC%E5%87%BA" rel="noopener nofollow">模型导出</a></li>
</ul>
</li>
<li><a href="#7-%E6%A8%A1%E5%9E%8B%E8%BD%AC%E6%8D%A2" rel="noopener nofollow">模型转换</a></li>
<li><a href="#8-%E6%A8%A1%E5%9E%8B%E9%83%A8%E7%BD%B2" rel="noopener nofollow">模型部署</a>
<ul>
<li>8.1 <a href="#81-%E4%B8%8A%E4%BC%A0%E6%A8%A1%E5%9E%8B%E6%96%87%E4%BB%B6ssd_mobilenet_v1_optnb-%E5%88%B0%E6%8E%A7%E5%88%B6%E7%BB%88%E7%AB%AF%E6%A0%91%E8%8E%93%E6%B4%BE" rel="noopener nofollow">上传模型文件SSD_MOBILENET_V1_OPT.NB 到控制终端(树莓派)</a></li>
<li>8.2 <a href="#82-%E6%8B%B7%E8%B4%9D%E6%A8%A1%E5%9E%8B%E6%96%87%E4%BB%B6%E5%88%B0fpga-%E5%BC%80%E5%8F%91%E6%9D%BF" rel="noopener nofollow">拷贝模型文件到FPGA 开发板</a></li>
<li>8.3 <a href="#83-%E8%BF%9B%E5%85%A5fpga-%E5%BC%80%E5%8F%91%E6%9D%BF%E9%83%A8%E7%BD%B2%E6%A8%A1%E5%9E%8B%E6%96%87%E4%BB%B6" rel="noopener nofollow">进入FPGA 开发板部署模型文件</a></li>
</ul>
</li>
<li><a href="#9-%E8%BF%90%E8%A1%8C%E4%B8%8E%E6%B5%8B%E8%AF%95" rel="noopener nofollow">运行与测试</a></li>
</ol>
<h3><a id="1__39"></a>1 模型训练流程说明</h3>
<p>环境准备、图像采集、数据标注、模型评估、模型训练、数据集制作、模型部署、运行与测试<br> <img src="https://i-blog.csdnimg.cn/direct/77bc95873df546a19e81514fbc110b3b.png" alt="在这里插入图片描述"></p>
<h4><a id="11__42"></a>1.1 基于铝片缺陷的模型训练流程</h4>
<h5><a id="111__44"></a>1.1.1 图像采集与数据集制作</h5>
<ol>
<li><strong>图像采集</strong>
<ul>
<li>使用高分辨率的工业相机或摄像机捕获铝材表面的图像。</li>
<li>确保在稳定的光照条件下进行图像采集，调试相机聚焦、光圈，以获得高质量的图像数据。</li>




</ul>




 </li>
<li><strong>数据标注</strong>
<ul>
<li>使用labelImg 工具对采集到的图像进行标注。</li>
<li>标注内容包括铝材表面的各类缺陷，如脏污、褶皱、划伤等。</li>
<li>标注过程中，为每个缺陷区域创建边界框，并为其分配相应的类别标签。</li>
<li>标注完成后，将标注信息保存为VOC 格式(XML 文件)。</li>




</ul>




 </li>
<li><strong>数据集制作</strong><br> 将标注好的图像和对应的标注文件组织成数据集，数据集应包含训练集、验证集和测试集。</li>




</ol>
<h5><a id="112_PaddleDetection__56"></a>1.1.2 PaddleDetection 平台训练</h5>
<ol>
<li><strong>环境准备</strong><br> 安装PaddlePaddle 框架和PaddleDetection 库，配置好训练所需的环境和依赖项。</li>
<li><strong>模型参数配置</strong><br> 在PaddleDetection 的配置文件中，设置模型的类型、训练参数、数据路径等。</li>
<li><strong>模型训练</strong><br> 运行PaddleDetection 的训练脚本，开始训练模型。训练过程中，可以实时监控模型的训练效果，如损失函数的变化、准确率等。</li>
<li><strong>模型验证</strong><br> 使用训练好的模型进行推理验证，根据评估结果，调整模型的参数或结构，以优化模型的性能。</li>




</ol>
<h5><a id="113__66"></a>1.1.3 模型转换与部署</h5>
<ol>
<li><strong>模型转换</strong><br> 使用所提供的opt 工具将PaddleDetection 训练得到的模型转换为FPGA 开发板可支持的格式(*.nb)，转换过程中，可能需要对模型进行优化，以减小模型的大小、提高模型的运行速度等。</li>
<li><strong>FPGA 开发板部署</strong><br> 将转换后的模型部署到FPGA 开发板上。配置FPGA 开发板的环境和参数，确保模型能够正常运行。</li>
<li><strong>运行与测试</strong><br> 将检测铝片放在工业缺陷检测实训平台设备上，对部署在FPGA 开发板上的模型进行验证和测试。通过实际运行和对比结果，评估模型在FPGA 开发板上的性能和表现。</li>




</ol>
<h4><a id="12__74"></a>1.2 系统检测流程</h4>
<p><img src="https://i-blog.csdnimg.cn/direct/e8309f445e5a42d19d9b9279d0483bdb.png" alt="在这里插入图片描述"></p>
<ol>
<li>检测是否存在对应的sqlite 数据库，不存在则创建，并创建defect_list 表，用于保存检测铝片信息，包括铝片uuid，铝片保存路径，铝片缺陷名字，铝片推理时间，铝片识别准确率以及数据插入时间</li>
<li>初始化相机，获取相机信息。</li>
<li>通过计算黑白图片中黑白像素所占比例来判断铝片进入摄像头视野情况，进入视野里铝片面积越大，则白色像素所占比例越大，反之越小。</li>
<li>设置一个固定的白色像素占比值来判断铝片是否大部分面积暴露在摄像头视野下，大于该固定值才进行模型推理。</li>
<li>针对运动中的铝片，设置一个lv 参数来判断摄像头拍摄到的铝片是否是同一个铝片，初始值为0，lv由0–&gt;1 表示视野由小变大，如果不是同一铝片则在defect_list 表插入一条数据，用于统计所有检测铝片个数。</li>
<li>调用推理接口，用于推理当前视野下铝片是否存在缺陷。如果存在缺陷，设置一个lx 参数用来表示是否是同一个缺陷铝片，方法和lv 使用一致，然后调用机械臂自动抓取铝片接口，用于将识别到的缺陷铝片抓取出来。</li>
<li>针对检测到的缺陷铝片进行画框，添加文字，并根据检测信息，在defect_list 表中插入数据，并将检测结果保存在检测结果目录以及历史检测目录下；如果是正常铝片，则在defect_list 表里插入正常图片信息，并将图片保存在历史检测目录下。</li>
<li>设置一个固定的白色像素占比值来判断是否铝片很少部分或者不存在铝片暴露在摄像头视野下，小于该固定值就不再进行推理，将lv 和lx 都置为0，表示视野由大变小。</li>
<li>前端页面显示视频流信息。</li>




</ol>
<h3><a id="2__87"></a>2 开发环境需求</h3>
<ol>
<li>个人电脑端需安装Python 环境，建议安装3.7、3.8 版本；–用于数据标注的labelimg 软件运行、数据集制作等。</li>
<li>电脑安装MobaXterm(建议)、XShell、XFTP 等相关软件(或者其它类似工具)；–主要用于Windows 平台上与远程服务器进行交互(该软件操作方法请通过网络自学，不提供额外支持)。</li>




</ol>
<h3><a id="3__91"></a>3 图像采集</h3>
<p>图像采集可以通过工业缺陷检测实训平台上的MVS 软件或个人电脑端的MVS 软件完成采集。</p>
<h4><a id="31__94"></a>3.1 方法一:通过工业缺陷检测实训平台终端采集图像。</h4>
<blockquote>
<p>需要首先保证电脑和工业缺陷实训平台在同一局域网络，并且可以成功登录进入工业缺陷检测实训平台</p>




 
</blockquote>
<h5><a id="311__98"></a>3.1.1 链接树莓派</h5>
<p>打开MobaXterm 软件，点击<code>Start local terminal</code>，输入如下命令进行链接</p>
<pre><code class="prism language-ssh">ssh root@172.16.68.111
</code></pre>
<h5><a id="312__104"></a>3.1.2 连接成功后如图所示</h5>
<pre><code>Spet MubExec Tunneing Packaoes Settings Help
4.root Dofoot~ +
(Xserver,SSH client and network tools) ?Mobaxterm Profess ional v24.2?
Your computer drives are access ible through the /drives path
Your USnLAS is yet treoze ot ow
Each command status is specified by a special symbol(orx)
Registered to huxy (1 user)
Last logn: wed pr 2 17:34:46202 rm 1267616.6.
前A3/04/2025 13:54.30/home/mobaxterm
xrandr:cannot find output"HDMI-1"
root Dofbot:~#
</code></pre>
<h5><a id="313__120"></a>3.1.3 停止检测服务，解除相机占用</h5>
<pre><code class="prism language-ssh">systemctl stop detect-api.service
root@Dofbot:#systemctl stop detect-api root@Dofbot:~#
</code></pre>
<h5><a id="314_MVS__126"></a>3.1.4 进入MVS 路径</h5>
<pre><code class="prism language-ssh">cd /opt/MVS/bin
</code></pre>
<h5><a id="315_MVS__130"></a>3.1.5 启动MVS 客户端</h5>
<p>执行命令启动MVS 客户端，并按照图片指示的操作顺序，逐步打开相机</p>
<pre><code class="prism language-ssh">./MVS
root@Dofbot:/opt/Mvs/bin# pwd
/opt/MVS/bin
Ot pt tt
</code></pre>
<ol>
<li>双击打开相机</li>
<li>点击开始采集图标，显示相机实时拍摄到的画面<br> <img src="https://i-blog.csdnimg.cn/direct/23888c8205bb487f95655a08cc8d8259.png" alt="在这里插入图片描述"></li>




</ol>
<h5><a id="316__141"></a>3.1.6 调整环境设置</h5>
<p>将缺陷铝片手动放置在传送带上，调整铝片位置于相机正下方和画面正中间。同时调整光源亮度和相机光圈、焦圈，使画面尽可能清晰。完成后效果如图所示：<br> <img src="https://i-blog.csdnimg.cn/direct/b5fd248d82434ff08d7a4b22550e6dcc.png" alt="在这里插入图片描述"></p>
<h5><a id="317__145"></a>3.1.7 设置图片保存路径</h5>
<p>注意通过此处的路径是树莓派中的路径，不是个人电脑的本地路径，采集完成后需要手动拷贝到本地。可以使用默认路径:/opt/MVS/bin/Temp/Data<br> <img src="https://i-blog.csdnimg.cn/direct/d52d785d562443d0aaaf02e2b55ca455.png" alt="在这里插入图片描述"></p>
<h5><a id="318__149"></a>3.1.8 进行图像采集</h5>
<p>点击抓拍图像按钮进行图像采集，点一次保存一张，保存路径是之前设置的路径，如果没有设置，就是默认路径/opt/MVS/bin/Temp/Data<br> <img src="https://i-blog.csdnimg.cn/direct/fd1ac08323b64250beeb0d5a8f657cb1.png" alt="在这里插入图片描述"></p>
<h5><a id="319__153"></a>3.1.9 结束图像采集</h5>
<p>采集到足量图片后(每类缺陷图片采集数量建议不少于100 张)，退出MVS 软件<br> <img src="https://i-blog.csdnimg.cn/direct/dde879e149114c0284ec02fb12366214.png" alt="在这里插入图片描述"></p>
<h5><a id="3110_XFTP__157"></a>3.1.10 打开XFTP 软件</h5>
<p>根据下图输入树莓派的链接信息，点击确定建立连接</p>
<ol>
<li>主机(H) 172.16.68.111</li>
<li>协议® SFTP，端口号(O) 22</li>
<li>用户名(U): root，密码(P: 为空)<br> <img src="https://i-blog.csdnimg.cn/direct/e6cf07279a064b37bab3d100d17d7616.png" alt="在这里插入图片描述"></li>




</ol>
<h5><a id="3111__164"></a>3.1.11 通过安全警告</h5>
<p>显示SSH 安全警告时点击“接受并保存”<br> <img src="https://i-blog.csdnimg.cn/direct/542db030aa104b64a3b2ae2cac0a43f0.png" alt="在这里插入图片描述"></p>
<h5><a id="3112__168"></a>3.1.12 拷贝/下载图像</h5>
<p><img src="https://i-blog.csdnimg.cn/direct/1c2bb380c92d47058392d4b4fbfb89fe.png" alt="在这里插入图片描述"></p>
<ol>
<li>左侧为个人电脑保存采集到的缺陷铝片的实际路径</li>
<li>右侧为树莓派中通过MVS客户端采集图片时设置的图片保存路径，如果没有进行设置就是默认路径</li>
<li>选中需要下载的文件，点击右键，再选择传输</li>




</ol>
<h4><a id="32__174"></a>3.2 方法二:通过个人电脑采集图像</h4>
<p>将工业相机连接至个人Windows 系统的电脑，电脑端安装MVS 客户端进行采集，将采集的图片保存至个人电脑。操作方法和以上方法基本一致，也可以参考《用户手册》第六章节，此处不做详细介绍。</p>
<h3><a id="4__177"></a>4 数据集准备</h3>
<h4><a id="41__179"></a>4.1 安装并运行标注软件</h4>
<p>常用的制作数据集的软件有labelme，labelimg 等，这里主要介绍labelimg 的使用。在个人电脑上启动安装有Python 环境的终端，执行如下命令完成Labelimg 软件安装。</p>
<pre><code class="prism language-ssh">pip install PyQt5 pyqt5-tools lxml labelimg -i https://pypi.tuna.tsinghua.edu.cn/simple
</code></pre>
<p>安装完成后，执行labelimg 命令，打开labelimg 软件。</p>
<pre><code class="prism language-ssh">labelimg
</code></pre>
<p>执行上述命令后，会自动弹出labelimg 的界面，其中：<br> <img src="https://i-blog.csdnimg.cn/direct/2e755ec9bc4245ce809e4cb9fcda137b.png" alt="在这里插入图片描述"></p>
<ul>
<li><code>Open Dir</code>：选择图像采集后保存到本地的文件夹，images 文件夹。</li>
<li><code>Change Save Dir</code>：选择标注信息存放的文件夹，annotations 文件夹(不存在则创建)。</li>
<li>在view 菜单栏中打开<code>auto save mode</code> 格式，这个可以帮助我们自动地保存标记好的图片。</li>
<li>点击<code>creat RectBox</code> 开始标记，在labelImg 中输入标签，如果感觉这个比较难检测，可以点击右上角的<code>difficult</code><br> <img src="https://i-blog.csdnimg.cn/direct/10b8fc741a7843f285edaf5aacbaf105.png" alt="在这里插入图片描述"><br> 快捷键：W(创建方框)，A(上一张)，D(下一张)。<br> 标注完成后会得到一些标签<br> <img src="https://i-blog.csdnimg.cn/direct/6957da02b30d451e8aecfe5738a0c706.png" alt="在这里插入图片描述"><br> xml 文件里面包含已标注图片的部分信息解释如下：</li>
<li><code>folder</code>：图片所在目录</li>
<li><code>filename</code>：图片名称</li>
<li><code>path</code>：图片所在路径</li>
<li><code>size</code>：图片大小</li>
<li><code>object</code>：标注信息
<ul>
<li><code>name</code>：标注类别</li>
<li><code>bndbox</code>：标注框坐标<br> <img src="https://i-blog.csdnimg.cn/direct/bb2c5b75494c4323b39d7bc7caf0af5a.png" alt="在这里插入图片描述"></li>




</ul>




 </li>




</ul>
<h4><a id="42__208"></a>4.2 进行图片标注软件</h4>
<p>本文档提供的标注示例共五类，分别为正常(zheng_chang )、脏污(zang_wu )、划痕/擦伤 (ca_shang)、褶皱(zhe_zhou)、针孔(zhen_kong)。标注时可以删除某一分类，需要label_list 文件同步更新。但是请勿新增分类，如需新增，请联系我司商务或售后。<br> <img src="https://i-blog.csdnimg.cn/direct/0236d9180c264547bfbad38fbc4a2ff9.png" alt="标注示例-正常（zheng_chang）："><br> <img src="https://i-blog.csdnimg.cn/direct/df1aba000e2c420e9b0ea4965720ad97.png" alt="标注示例-脏污（zang_wu）："><br> <img src="https://i-blog.csdnimg.cn/direct/382f009584c14965a2e6a461dd2572e4.png" alt="标注示例-划痕/擦伤（ca_shang）："><br> <img src="https://i-blog.csdnimg.cn/direct/f230d007967e429c91ed360ce71e8f23.png" alt="标注示例-褶皱(zhe_zhou):"><br> <img src="https://i-blog.csdnimg.cn/direct/e9478c10a98142779df5e8c5bfc79518.png" alt="标注示例-针孔(zhen_kong):"></p>
<h4><a id="43__216"></a>4.3 数据集整理</h4>
<p>图片标注完成后，将其进行整理为如图所示两个文件夹，其中images 文件夹存放所有图片文件，annotations 文件夹存放所有标签文件。<strong>(注：图片文件应和标签文件一一对应)</strong><br> <img src="https://i-blog.csdnimg.cn/direct/e17ce8aaee7542cd9663b1807ddf6e8d.png" alt="在这里插入图片描述"><br> 再新建一个名为ImageSet 的空文件夹，再将提供的参赛资料中的label_list、dataset_processing_one.py、dataset_processing_two.等文件拷贝进来，得到如下结果：<br> <img src="https://i-blog.csdnimg.cn/direct/19e6b48f209b425f8354d8090330e783.png" alt="在这里插入图片描述"><br> 在包含python 的终端中打开这个文件夹，并执行命令：</p>
<pre><code class="prism language-ssh">python dataset_processing_one.py
</code></pre>
<p>会在ImageSets 文件夹下生成4 个文件，分别为test、train、trainval、val。<br> <img src="https://i-blog.csdnimg.cn/direct/675184ea9a2c433b9803397da4a6172b.png" alt="在这里插入图片描述"></p>
<p>在终端中执行命令：</p>
<pre><code class="prism language-ssh">python dataset_processing_two.py
</code></pre>
<p>会在目录下生成4 个文件，分别为trainval、train、val、test。</p>
<h4><a id="44__234"></a>4.4 数据集打包</h4>
<p>最后检查数据集各部分内容是否正确(对照下图进行检查)，<strong>如果检查无误则将整个目录进行打包(建议使用zip 格式)</strong>，供训练过程中上传使用。<br> <img src="https://i-blog.csdnimg.cn/direct/234df6bd267d4511bd439013a3d2f417.png" alt="在这里插入图片描述"></p>
<h3><a id="5__238"></a>5 模型训练</h3>
<p>方法一：采用<a href="https://aistackdc.com/" rel="noopener nofollow">智算中心AIStackDC</a>(PaddlePaddle 框架)，在其算力平台进行训练(参照以下步骤)。<br> 方法二：自行搭建环境进行训练(该训练方式需要用户自己探索学习，不提供相关支持服务)。</p>
<h4><a id="51__242"></a>5.1 环境准备</h4>
<p>本章节主要介绍AIStackDC 平台进行模型训练的方法，AIStackDC 是一个高效、灵活的算力资源租赁平台。平台提供从“实例的租赁-&gt;模型的部署-&gt;实例管理-&gt;技术支持“的一站式算力租用服务，能够满足个人用户以及包括企业、院校、研究机构在内的各类组织对高性能计算资源的需求。用户可根据个人的具体需求(如GPU 型号、显存要求、预算、技术支持等)灵活配置，通过AIStackDC 的直观操作界面，快速完成容器实例租用流程，进行模型训练、推理、大数据处理、模拟实验等，让整个使用过程更加顺畅和高效。</p>
<h4><a id="52__245"></a>5.2 训练流程</h4>
<h5><a id="521__247"></a>5.2.1 项目创建</h5>
<ol>
<li>
<p>登录<a href="https://aistackdc.com/home" rel="noopener nofollow">https://aistackdc.com/home</a>，进入AIStackDC 官网，进入控制台(注册过程略)。<img src="https://i-blog.csdnimg.cn/direct/31eb2ed30f80471b84ea681642a00ada.png" alt="在这里插入图片描述"></p>




 </li>
<li>
<p>选择“容器实例”，新建实例。<img src="https://i-blog.csdnimg.cn/direct/593a95c9dcfc45a685c3cecc29d5b03d.png" alt="在这里插入图片描述"></p>




 </li>
<li>
<p>根据个人需求选择显卡配置和计费规则，并点击镜像选择框，选择PaddlePaddle 2.1.2 框架相关的镜像<img src="https://i-blog.csdnimg.cn/direct/4e381decdad84ad98bd41dc51d764d73.png" alt="在这里插入图片描述"></p>




 </li>
<li>
<p>选择SSH 密钥对：选择实例需要使用的密钥对用于远程链接，如果没有，点击“创建SSH 密钥对”根据提示进行创建，创建完成后密钥对会自动下载到本地以供后续使用<img src="https://i-blog.csdnimg.cn/direct/d30ae94b7cff41909fa55889a2087942.png" alt="在这里插入图片描述"></p>




 </li>
<li>
<p>完成实例创建后，页面跳转至下图页面所示，实例会进入“创建中”的状态，等待示例状态更新为“运行中”，表示实例成功创建<br> <img src="https://i-blog.csdnimg.cn/direct/a8b3f95a21e24383a0b96add6ef0369c.png" alt="在这里插入图片描述"></p>




 </li>




</ol>
<h5><a id="522__258"></a>5.2.2 连接容器实例</h5>
<h6><a id="5221_JupyterLab__260"></a>5.2.2.1 平台JupyterLab 连接(建议)</h6>
<p>点击平台JupyterLab 按钮，进入JupyterLab 连接页面，再点击左下角Terminal 进入终端<br> <img src="https://i-blog.csdnimg.cn/direct/ba41bf5009f14e3d80db0a66878385c8.png" alt="在这里插入图片描述"><br> <img src="https://i-blog.csdnimg.cn/direct/cc47decaedad4bd9b60fc8eddc7dcbf3.png" alt="在这里插入图片描述"><br> 链接成功后如图所示<img src="https://i-blog.csdnimg.cn/direct/d12b17b2747a4b63a063e6475bd20954.png" alt="在这里插入图片描述"></p>
<h6><a id="5222__266"></a>5.2.2.2 远程软件连接</h6>
<p>点击远程链接按钮，根据弹窗信息在MobaXterm 软件中建立链接<img src="https://i-blog.csdnimg.cn/direct/5cdb04e95c77408783b19176b5ea9495.png" alt="在这里插入图片描述"><br> 链接成功后如图所示<img src="https://i-blog.csdnimg.cn/direct/216d59d848dd4334821bdbfbad47621e.png" alt="在这里插入图片描述"></p>
<h5><a id="523__270"></a>5.2.3 依赖安装</h5>
<ol>
<li>在终端中输入以下命令，进行源码下载，下载成功后如下图所示。</li>




</ol>
<pre><code class="prism language-ssh">git clone https://gitee.com/paddlepaddle/PaddleDetection.git -b release/2.2
</code></pre>
<ol start="2">
<li>跳转进入目录并分别完成以下依赖安装。依次执行以下命令。</li>
</ol>
<pre><code class="prism language-ssh">cd PaddleDetection/
pip install paddleslim==2.1.1
sed -i -e 's/sklearn/scikit-learn/g' requirements.txt
pip install -r requirements.txt
python setup.py install
pip install pycocotools
pip install lap
pip install --user --upgrade pyarrow==11.0.0
pip install "protobuf&lt;3.21.0" --upgrade
</code></pre>
<ol start="3">
<li>执行history 命令，检查以上所有命令是否全部执行。</li>
</ol>
<pre><code class="prism language-ssh">history
</code></pre>
<h5><a id="524__292"></a>5.2.4 数据集上传</h5>
<ol>
<li>
<p>双击左侧目录树逐级进入目录“PaddleDetection/dataset”，选择数据集准备过程中最后打包的数据集进行上传，或选择需要训练的数据集上传。<img src="https://i-blog.csdnimg.cn/direct/5ff3cc6fc9894f6d95553f3a796b5670.png" alt="在这里插入图片描述"><br> <img src="https://i-blog.csdnimg.cn/direct/258ca7a1c6ab4b4281e11b3a82458631.png" alt="在这里插入图片描述"></p>




 </li>
<li>
<p>等待上传完成<img src="https://i-blog.csdnimg.cn/direct/cce58937e73d497787ce804e7994cb8f.png" alt="在这里插入图片描述"></p>




 </li>
<li>
<p>上传成功后如下图所示<img src="https://i-blog.csdnimg.cn/direct/59ca3d38f95c490c8934d98539bd8548.png" alt="在这里插入图片描述"></p>




 </li>
<li>
<p>执行如下命令解压数据集目录</p>




 </li>




</ol>
<pre><code class="prism language-ssh">cd /dataset
unzip isdd-dataset-voc.zip
</code></pre>
<p><img src="https://i-blog.csdnimg.cn/direct/e5c1dbc9ef694c2dba9042dab166a173.png" alt="在这里插入图片描述"></p>
<ol start="5">
<li>
<p>解压完成后如图所示<img src="https://i-blog.csdnimg.cn/direct/1de0bd04b24d4e709e96e63f4f628a78.png" alt="在这里插入图片描述"></p>
</li>
<li>
<p>进入“PaddleDetection/configs/datasets/”，修改“voc.yml”配置文件参数，修改后执行“ctl+s”保存(<strong>isdd-dataset-voc 名称以用户打包数据集名称为准，num_classes:5 为所训练的缺陷类型数量，需要与label_list 文件中行数一致</strong>)</p>
</li>
</ol>
<pre><code class="prism language-ssh">cd /root/data/PaddleDetection/configs/datasets/
sed -i -e 's/20/5/g' voc.yml
sed -i -e 's/voc/isdd-dataset-voc/g' voc.yml
</code></pre>
<p><img src="https://i-blog.csdnimg.cn/direct/61aabfbcae73417fb93c27ee2510b6c3.png" alt="在这里插入图片描述"></p>
<h5><a id="525__317"></a>5.2.5 量化训练</h5>
<p>进入PaddleDetection 目录，执行如下命令进行训练</p>
<pre><code class="prism language-ssh">cd /root/data/PaddleDetection
# 注意：以下命令为一条命令
python tools/train.py -c configs/ssd/ssd_mobilenet_v1_300_120e_voc.yml --slim_config configs/slim/quant/ssd_mobilenet_v1_qat.yml --eval
</code></pre>
<p><img src="https://i-blog.csdnimg.cn/direct/b515863bcd6e4834a16246038a94f679.png" alt="在这里插入图片描述"></p>
<p>观察训练过程，当mAP(准确率)大于65%或者Best test bbox ap(最佳准确率)大于0.65 时，才能达到基础使用效果。<br> <img src="https://i-blog.csdnimg.cn/direct/3a142f9d470149f985aaaf501f81db13.png" alt="在这里插入图片描述"></p>
<p>如上图所示本次训练Best test bbox ap 准确率达到了0.743，此时可以键盘操作ctrl+c 手动结束训练。训练结束后会在“PaddleDetection/”目录下生成“output”文件夹，文件夹中数据为训练的结果文件夹。<br> <img src="https://i-blog.csdnimg.cn/direct/36094fad184046aca37cd860a811b84f.png" alt="在这里插入图片描述"></p>
<h5><a id="526__332"></a>5.2.6 继续训练(可跳过)</h5>
<p>在日常训练过程中，可能由于一些原因导致训练中断，可以使用-r 选项，并指定最优迭代(output/ssd_mobilenet_v1_qat/best_model)或者期望继续训练的迭代 (output/ssd_mobilenet_v1_qat/60)恢复训练</p>
<pre><code class="prism language-ssh">cd /root/data/PaddleDetection
# 注意：以下命令为一条命令
python tools/train.py -c configs/ssd/ssd_mobilenet_v1_300_120e_voc.yml --slim_config configs/slim/quant/ssd_mobilenet_v1_qat.yml -r output/ssd_mobilenet_v1_qat/best_model --eval
</code></pre>
<p><img src="https://i-blog.csdnimg.cn/direct/81125e9218c3497ab0afa20a4bba5c20.png" alt="在这里插入图片描述"></p>
<h3><a id="6__341"></a>6 模型评估</h3>
<h4><a id="61__343"></a>6.1 模型精度评估(可跳过)</h4>
<pre><code class="prism language-ssh"># 评估动作默认使用训练结束后保存的model_final.pdparams，此处因为准确度已达到100%结束了训练， 故使用-o 手动指定使用训练过程中的best_model
# -c 参数表示指定使用哪个配置文件
# -o 参数表示指定配置文件中的全局变量(覆盖配置文件中的设置)
# 注：以下命令为一条命令。
python tools/eval.py -c configs/ssd/ssd_mobilenet_v1_300_120e_voc.yml --slim_config configs/slim/quant/ssd_mobilenet_v1_qat.yml -o weights=output/ssd_mobilenet_v1_qat/best_model use_gpu=true
</code></pre>
<p><img src="https://i-blog.csdnimg.cn/direct/712653cb1db74ed7a1417963e8d24cf9.png" alt="在这里插入图片描述"><br> <img src="https://i-blog.csdnimg.cn/direct/f8f62c40368f4f9ab89dde9c26c7d07e.png" alt="在这里插入图片描述"></p>
<h4><a id="62__354"></a>6.2 模型预测(可跳过)</h4>
<pre><code class="prism language-ssh"># -c 参数表示指定使用哪个配置文件 
# -o 参数表示指定配置文件中的全局变量(覆盖配置文件中的设置) 
# --infer_img 参数指定预测图像路径 
# 其中infer_img=/root/data/PaddleDetection/dataset/isdd-dataset-voc/images/225huaheng.jpg 为 所用测试图片路径，具体以自己使用测试的图片路径为准 
# 注：以下命令为一条命令。
python tools/infer.py -c configs/ssd/ssd_mobilenet_v1_300_120e_voc.yml --slim_config configs/slim/quant/ssd_mobilenet_v1_qat.yml -o weights=output/ssd_mobilenet_v1_qat/best_model use_gpu=true infer_img=/root/data/PaddleDetection/dataset/isdd-dataset-voc/images/225huaheng.jpg
</code></pre>
<p><img src="https://i-blog.csdnimg.cn/direct/76df3c413a5840ca8817f90b204580ac.png" alt="在这里插入图片描述"></p>
<p>预测结束后会在output 文件夹中生成一张与预测图像同名的图像，其中画有预测结果。可双击预览查看<br> <img src="https://i-blog.csdnimg.cn/direct/e47068a4c36946409eaa438ba9b7e595.png" alt="在这里插入图片描述"></p>
<h4><a id="63__368"></a>6.3 模型导出</h4>
<ol>
<li>执行以下指令。</li>




</ol>
<pre><code class="prism language-ssh">cd /root/data/PaddleDetection
# 注意：以下命令为一条命令
python tools/export_model.py -c configs/ssd/ssd_mobilenet_v1_300_120e_voc.yml --slim_config configs/slim/quant/ssd_mobilenet_v1_qat.yml -o weights=output/ssd_mobilenet_v1_qat/best_model
</code></pre>
<p><img src="https://i-blog.csdnimg.cn/direct/3a4e5330e3664419aa0eb11251353442.png" alt="在这里插入图片描述"></p>
<ol start="2">
<li>导出成功后，会出现“PaddleDetection/output_inference”文件夹，进入文件夹可以查看到导出的模型数据。<br> <img src="https://i-blog.csdnimg.cn/direct/cb50b4ab498a43c1835f25a74bb70c6c.png" alt="在这里插入图片描述"></li>




</ol>
<h3><a id="7__380"></a>7 模型转换</h3>
<p>Opt 工具是Paddle Lite 提供的可以将Paddle 格式模型转换为Paddle Lite 格式的模型优化工具。模型要想通过Paddle Lite 在移动端部署，需要将模型转换为Paddle Lite 支持的格式naive buffer(即.nb 格式)。该格式是Paddle Lite 自研的格式。Opt 工具的主要工作是提供了模型的离线优化方法，包括子图融合、混合调度、Kernel 优选等，从而使得在模型部署之前能够得到一个轻量的，最优的可执行模型。</p>
<ol>
<li>
<p>上传opt 工具到PaddleDetection 文件夹<br> 将提供的参赛资料中的opt 工具下载到本地，通过左侧目录树工具切换到如图 /root/data/PaddleDection 目录，点击上传按钮，选择自己本地的opt 文件，点击打开进行上传<br> <img src="https://i-blog.csdnimg.cn/direct/4a0fc26d160d4ba083b2e364b910c183.png" alt="在这里插入图片描述"><br> 该工具较大,请耐心等待文件上传完成｡在页面正下方可以观察到文件上传进度,等待上传完成后在 /root/data/PaddleDection 目录可以看到传输完成的文件<img src="https://i-blog.csdnimg.cn/direct/55dd4dceec5648939e470cd3cc5d8995.png" alt="在这里插入图片描述"></p>




 </li>
<li>
<p>给文件赋予可执行权限，执行完成可以看到文件颜色发生变化</p>




 </li>




</ol>
<pre><code class="prism language-ssh">cd /root/data/PaddleDetection
# 注意：以下命令为一条命令
chmod +x opt
</code></pre>
<p><img src="https://i-blog.csdnimg.cn/direct/3cb503e0d32f4ce6bf65d3980497dc42.png" alt="在这里插入图片描述"></p>
<ol start="3">
<li>模型格式转换，将paddle 的模型格式转化为FPGA 可执行格式(*.nb)。</li>
</ol>
<pre><code class="prism language-ssh">cd /root/data/PaddleDetection
# 注意：以下命令为一条命令
./opt --model_dir=./output_inference/ssd_mobilenet_v1_qat --valid_targets=intel_fpga,arm --optimize_out_type=naive_buffer --optimize_out=ssd_mobilenet_v1_opt
</code></pre>
<p><img src="https://i-blog.csdnimg.cn/direct/219b0cc5277d4c93a199b65241149414.png" alt="在这里插入图片描述"></p>
<ol start="4">
<li>
<p>转换成功后当前目录会出现ssd_mobilenet_v1_opt.nb 文件<br> <img src="https://i-blog.csdnimg.cn/direct/f39ab09d54b9454ca8e79c63dfa91e6b.png" alt="在这里插入图片描述"></p>




 </li>
<li>
<p>下载模型文件到本地<br> 右键单击文件，点击下载按钮<br> <img src="https://i-blog.csdnimg.cn/direct/a39a536e17b24c0e8eb51f97e772a38d.png" alt="在这里插入图片描述"></p>




 </li>




</ol>
<h3><a id="8__411"></a>8 模型部署</h3>
<blockquote>
<p>需要首先保证电脑和工业缺陷实训平台在同一局域网络，并且可以成功登录进入工业缺陷检测实训平台</p>




 
</blockquote>
<blockquote>
<p>控制终端(树莓派)IP 地址默认为:172.16.68.111 用户名root 密码为空</p>




 
</blockquote>
<blockquote>
<p>fpga 开发板IP 地址默认为:172.16.68.110 用户名root 密码awcloud</p>




 
</blockquote>
<h4><a id="81_SSD_MOBILENET_V1_OPTNB__419"></a>8.1 上传模型文件SSD_MOBILENET_V1_OPT.NB 到控制终端(树莓派)</h4>
<h5><a id="811_XFTP__421"></a>8.1.1 打开XFTP 软件</h5>
<p>根据下图输入树莓派的链接信息，点击确定建立连接<img src="https://i-blog.csdnimg.cn/direct/15d7b897b5eb45a881fdac02f2f57652.png" alt="在这里插入图片描述"></p>
<ol>
<li>主机(H) 172.16.68.111</li>
<li>协议® SFTP，端口号(O) 22</li>
<li>用户名(U): root，密码(P: 为空)</li>




</ol>
<h5><a id="812__428"></a>8.1.2 通过安全警告</h5>
<p>显示SSH 安全警告时点击“接受并保存”<br> <img src="https://i-blog.csdnimg.cn/direct/b7bc9b2f8dbc4be692d8cced60fd82c1.png" alt="在这里插入图片描述"></p>
<h5><a id="813__432"></a>8.1.3 上传模型文件</h5>
<p>在左侧窗口找到下载下来的模型文件，双击进行上传。传输完成后右侧目录会显示上传的模型文件<br> <img src="https://i-blog.csdnimg.cn/direct/23ccefb3b9f14aaaa1cf894db547f944.png" alt="在这里插入图片描述"></p>
<h4><a id="82_FPGA__436"></a>8.2 拷贝模型文件到FPGA 开发板</h4>
<h5><a id="821__438"></a>8.2.1 连接控制端(树莓派)</h5>
<p>打开MobaXterm 软件，点击<code>Start local terminal</code>，输入如下命令进行链接</p>
<pre><code class="prism language-ssh">ssh root@172.16.68.111
</code></pre>
<h5><a id="822__444"></a>8.2.2 连接成功后如图所示</h5>
<h5><a id="823_FPGA__446"></a>8.2.3 通过控制端(树莓派)将文件传输到FPGA 开发板</h5>
<p>执行scp 命令将文件传输FPGA 开发板/root 目录中，</p>
<pre><code class="prism language-ssh">scp ssd_mobilenet_v1_opt.nb root@172.16.68.110:/root/
</code></pre>
<p>看到提示root@172.16.68.110’s password:时，直接输入密码awcloud，输入时不会有交互提示，输入完成后回车即可</p>
<h4><a id="83_FPGA__453"></a>8.3 进入FPGA 开发板部署模型文件</h4>
<h5><a id="831_FPGA__455"></a>8.3.1 通过控制端(树莓派)连接到FPGA 开发板</h5>
<p>执行ssh 命令连接fpga 开发板</p>
<pre><code class="prism language-ssh">ssh root@172.16.68.110
</code></pre>
<p>看到提示root@172.16.68.110’s password:时，直接输入密码awcloud，输入时不会有交互提示，输入完成后回车即可</p>
<h5><a id="832__462"></a>8.3.2 部署模型文件</h5>
<p>执行命令备份原始模型文件，并将上传的模型文件拷贝到执行路径中</p>
<pre><code class="prism language-ssh">cd /opt/ssd_detection_demo/ssd_mobilenet_v1/
mv ssd_mobilenet_v1_opt.nb ssd_mobilenet_v1_opt.nb.bak
cp /root/ssd_mobilenet_v1_opt.nb . # 注意这里有一个英文的. 表示当前路径，必须存在，并且前面要有一个空格
</code></pre>
<h5><a id="833_label_list__470"></a>8.3.3 检查label_list 文件</h5>
<p>检查并确保label_list 文件内容与训练过程中使用的label_list.txt 文件内容是一致的</p>
<pre><code class="prism language-ssh">cd /opt/ssd_detection_demo/labels
cat label_list
</code></pre>
<h5><a id="834_FPGA__477"></a>8.3.4 重启FPGA 开发板的推理服务，</h5>
<pre><code class="prism language-ssh">systemctl restart detect.service
</code></pre>
<h3><a id="9__482"></a>9 运行与测试</h3>
<p>打开工业缺陷检测实训平台的前端页面，运行传送带，进片的铝片的检测识别，关注页面展示的检测结果，以及机械臂的抓取状态，验证和测试训练效果。</p>
</div>
<div id="MySignature" role="contentinfo">
    <p>本文来自博客园，作者：<a href="https://www.cnblogs.com/SCRC/" target="_blank">SCRC</a>，转载请注明原文链接：<a href="https://www.cnblogs.com/SCRC/p/19042271" target="_blank">https://www.cnblogs.com/SCRC/p/19042271</a></p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.06527777777777778" data-date-updated="2025-08-16 18:36">2025-08-16 17:02</span>&nbsp;
<a href="https://www.cnblogs.com/SCRC">SCRC</a>&nbsp;
阅读(<span id="post_view_count">50</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19042271);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19042271', targetLink: 'https://www.cnblogs.com/SCRC/p/19042271', title: '【CRAIC】工业缺陷检测实训平台 模型训练指导手册 V1.4' })">举报</a>
&nbsp;<a href="javascript:void(0)" id="import-indicator" data-is-imported="true">来源</a>
</div>
        