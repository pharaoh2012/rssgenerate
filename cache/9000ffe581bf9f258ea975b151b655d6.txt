
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/youlanjihua/p/18922122" title="发布于 2025-06-10 14:47">
    <span role="heading" aria-level="2">鸿蒙Next仓颉语言开发实战教程：下拉刷新和上拉加载更多</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p data-id="p124945a-9bRHAgMt">在移动应用中，各种列表页面离不开下拉刷新和上拉加载更多，我们的商城应用也是如此。今天介绍一下在仓颉开发语言中如何实现这一功能。</p>
<p data-id="p124945a-q9qqGZwE"><strong>下拉刷新</strong></p>
<p><img src="https://harmonyos.oss-cn-beijing.aliyuncs.com/images/202506/07a188e3029cdf9d403916c25e4e67faefce96.png" data-type="block"></p>
<p data-id="p124945a-WUNGPaJQ">仓颉开发语言直接提供了下拉刷新的组件，叫做Refresh，使用起来也非常方便:</p>
<div>
<pre class="language-plain highlighter-hljs"><code>@State var headerLoading : Bool = false; 

Refresh(RefreshParams(refreshing: @Binder(this.headerLoading))) {
List{
        ForEach(this.carList,
        itemGeneratorFunc:{
            
            item:CarItem, index: Int64 =&gt; ListItem {
            }
            })
	}
}
.onRefreshing({ =&gt; 
    Timer.once(Duration.second*2,{=&gt;
            this.headerLoading = false
           })
    AppLog.info('onRefreshing')
    })
.onStateChange({state =&gt;
     AppLog.info('onStateChange')
    })</code></pre>
</div>
<p data-id="p124945a-c2lXEeHl">上述代码演示了Refresh的基本使用，并且使用计时器模拟网络加载效果，两秒后自动加载完成，其中onRefreshing是进入刷新状态的回调，onStateChange为刷新状态改变的回调。</p>
<p data-id="p124945a-lgIwcEPm">计时器的用法也还需要大家再次熟悉一下，Timer.once表示一次性的计时器，Duration.second*2表示执行间隔是2秒，这种写法还是比较独特的。</p>
<p data-id="p124945a-PJYXhp82"><strong>上拉加载更多</strong></p>
<p data-id="p124945a-NWpa7fSh">关于上拉加载更多，仓颉的文档中并没有这部分的内容，幽蓝君参考ArkTs写了一个解决方案，仅供大家参考。</p>
<p><img src="https://harmonyos.oss-cn-beijing.aliyuncs.com/images/202506/9488aca4966ee33bdca80939992d37825292ec.png" data-type="block"></p>
<p data-id="p124945a-K1SvjwdX">实现思路是在List最后一行添加加载动画组件，默认隐藏，当List滑动到最后一行则显示加载动画并开始请求数据，具体代码如下：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>@State var footerLoading:Bool = false

List{
    ForEach(this.carList,
        itemGeneratorFunc:{
            
            item:CarItem, index: Int64 =&gt; ListItem {
            }
            })
    
    ListItem {
        if(this.footerLoading){
            Row(12){
                LoadingProgress()
                .height(40)
                .width(40)
                
                Text('加载中...')
                .fontSize(14)
                .fontColor(Color.GRAY)
            }
            .width(100.percent)
            .height(50)
            .alignItems(VerticalAlign.Center)
            .justifyContent(FlexAlign.Center)
        }
    }
}
.onScrollIndex({startNum,endNum =&gt;
    if(Int64(endNum) &gt;= this.carList.size - 1){
            this.footerLoading = true
            Timer.once(Duration.second*3,{=&gt;
                        this.footerLoading = false
                    })
    }
    CJTools.log('endNum-list:' + this.carList.size.toString())
    })</code></pre>
</div>
<p data-id="p124945a-shc9hOxh">上面代码需要注意的是如何判断列表滑动到了底部，主要是判断数组的长度，在仓颉中数组的长度属性是size，类型是Int64。</p>
<p data-id="p124945a-5EqBUkAV">以上就是今天的内容分享，感谢阅读。##HarmonyOS语言##仓颉##购物#</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-06-10 14:47">2025-06-10 14:47</span>&nbsp;
<a href="https://www.cnblogs.com/youlanjihua">幽蓝计划</a>&nbsp;
阅读(<span id="post_view_count">120</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18922122);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18922122', targetLink: 'https://www.cnblogs.com/youlanjihua/p/18922122', title: '鸿蒙Next仓颉语言开发实战教程：下拉刷新和上拉加载更多' })">举报</a>
</div>
        