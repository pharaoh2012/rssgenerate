
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/johnnyzen/p/18648346" title="发布于 2025-01-02 17:22">
    <span role="heading" aria-level="2">[密码管理/信息安全] KeePass Java 客户端 : KeePassJava2</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="序续keepass密码管理工具">序:续《KeePass：密码管理工具》</h1>
<ul>
<li><a href="https://www.cnblogs.com/johnnyzen/p/18629045" target="_blank">[密码管理/信息安全] 密码管理工具：KeePass vs LastPass vs 1Password - 博客园/千千寰宇</a> 【推荐】</li>
</ul>
<h1 id="概述">概述</h1>
<h2 id="keepass-java-客户端--keepassjava2-">KeePass Java 客户端 ( KeePassJava2 )</h2>
<ul>
<li><code>KeePassJava2</code> 是一个用<code>Java</code>编写的API，用于操作<code>KeePass</code>密码数据库</li>
</ul>
<blockquote>
<ul>
<li>KeePassJava2 是一个高度灵活且高效的Java库，专门设计用于与KeePass <code>2.x</code>密码数据库交互。</li>
<li>它全面支持阅读和写入KeePass文件版本<code>3</code>和<code>4</code>，并能读取版本<code>1.x</code>的数据库。</li>
<li>该库精心构建，确保了在<code>Java 8</code>及更高版本，包括<code>Java</code>/<code>Android</code>环境中的广泛应用。</li>
<li>通过不依赖特定的Java Cryptography Extension (JCE)策略文件，KeePassJava2保持轻量级且易于集成，实现了跨平台的兼容性。</li>
<li>其<strong>开放源码许可</strong>（<code>Apache 2.0</code>）鼓励广泛的应用和定制。</li>
</ul>
</blockquote>
<blockquote>
<blockquote>
<p>Slogan : "Java API for KeePass Password Databases - Read/Write 2.x (File versions 3 and 4), Read 1.x"</p>
</blockquote>
</blockquote>
<ul>
<li><code>KeePassJava2</code>作为一个库，并不直接运行一个独立的应用程序，因此没有传统意义上的“<strong>启动文件</strong>”。</li>
</ul>
<blockquote>
<p>它的使用<strong>通常是嵌入到其他Java应用中</strong>。<br>
开发者会在其应用的主类中或特定的服务初始化部分，通过引入KeePassJava2的依赖和调用相关API来开启密码数据库的管理和访问功能。<br>
比如，典型的启动逻辑可能出现在应用的入口点或者服务加载阶段，涉及创建KdbxCreds对象和加载数据库的操作。</p>
</blockquote>
<h2 id="keepassjava2-的模块结构">KeePassJava2 的模块结构</h2>
<p><img src="https://raw.githubusercontent.com/jorabin/KeePassJava2/master/ModuleStructure.svg" alt="" loading="lazy"></p>
<h2 id="keepassjava2-与-keepass-的项目渊源">KeePassJava2 与 KeePass 的项目渊源</h2>
<ul>
<li>
<p>KeePassJava2 项目的名称由 KeePass 的作者 Dominik Reichl 友情授权。与 KeePass 项目无正式联系。</p>
</li>
<li>
<p>KeePass 实际上是由 Dominik 编写的代码定义的，这些代码是他创建和维护该项目时编写的。</p>
</li>
</ul>
<h2 id="keepass-的核心概念database密码库--group多层分组--entry-密码条目">KeePass 的核心概念：Database(密码库) &gt; Group([多层]分组) &gt; Entry (密码条目)</h2>
<ul>
<li><strong>密码数据库(Database)</strong>被建模为三层抽象</li>
<li>数据库(Database)是记录的集合，其物理表示形式只需能够呈现为流即可。</li>
<li>条目(Entry)保存数据库中有价值的信息，而组允许将条目构建为集合(Collection)，就像文件夹结构一样。</li>
<li>数据库有一个根组(RootGroup)，通过跟踪根组的子组(Sub Group)可以浏览数据库的树形结构。</li>
<li>条目属于组(Group)。条目可以在组之间移动，组也可以在组之间移动。</li>
<li>但是，在一个数据库中创建的条目和组不能在未转换的情况下移动到另一个数据库：</li>
</ul>
<pre><code class="language-java">database.newEntry(entryToCopy);
database.newGroup(groupToCopy);
</code></pre>
<h2 id="keepass-文件版本v1v2v31v4x">KeePass 文件版本(v1/v2/v3.1/v4.x)</h2>
<ul>
<li>3.1 vs. 4</li>
</ul>
<p><img src="https://raw.githubusercontent.com/jorabin/KeePassJava2/master/KdbxDiagram.svg" alt="" loading="lazy"></p>
<h1 id="使用示范">使用示范</h1>
<ul>
<li>JDK 版本</li>
</ul>
<blockquote>
<p>从release 2.2开始，它需要Java 1.8。早期版本需要Java 1.7。</p>
</blockquote>
<h2 id="step0-使用-keepass-终端创建密码库和密码条目">Step0 使用 KeePass 终端创建密码库和密码条目</h2>
<blockquote>
<p>略</p>
</blockquote>
<p><img src="https://img2024.cnblogs.com/blog/1173617/202501/1173617-20250102174408448-514473645.png" alt="" loading="lazy"></p>
<h2 id="step1-引入依赖">Step1 引入依赖</h2>
<pre><code class="language-xml">    &lt;dependencies&gt;
        &lt;!-- https://github.com/jorabin/KeePassJava2 --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.linguafranca.pwdb&lt;/groupId&gt;
            &lt;artifactId&gt;KeePassJava2&lt;/artifactId&gt;
            &lt;version&gt;2.2.1&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.linguafranca.pwdb&lt;/groupId&gt;
            &lt;artifactId&gt;test&lt;/artifactId&gt;
            &lt;version&gt;2.2.1&lt;/version&gt;
        &lt;/dependency&gt;
	&lt;/dependencies&gt;

    &lt;repositories&gt;
        &lt;repository&gt;
            &lt;id&gt;oss.sonatype.org-snapshot&lt;/id&gt;
            &lt;url&gt;https://oss.sonatype.org/content/repositories/snapshots&lt;/url&gt;
            &lt;releases&gt;
                &lt;enabled&gt;false&lt;/enabled&gt;
            &lt;/releases&gt;
            &lt;snapshots&gt;
                &lt;enabled&gt;true&lt;/enabled&gt;
            &lt;/snapshots&gt;
        &lt;/repository&gt;
    &lt;/repositories&gt;
</code></pre>
<h2 id="step2-读取密码库文件filedatabase分组group密码条目entry">Step2 读取密码库文件(File/Database)、分组(Group)、密码条目(Entry)</h2>
<pre><code class="language-java">package com;

import lombok.SneakyThrows;
import lombok.extern.slf4j.Slf4j;
import org.linguafranca.pwdb.Credentials;
import org.linguafranca.pwdb.Database;
import org.linguafranca.pwdb.Entry;
import org.linguafranca.pwdb.Group;
import org.linguafranca.pwdb.kdb.KdbCredentials;
import org.linguafranca.pwdb.kdbx.KdbxCredentials;
import org.linguafranca.pwdb.kdbx.KdbxCreds;
import org.linguafranca.pwdb.kdbx.KdbxStreamFormat;
import org.linguafranca.pwdb.kdbx.dom.DomDatabaseWrapper;
//import org.linguafranca.pwdb.kdbx.jackson.JacksonDatabase;
import org.linguafranca.pwdb.kdbx.jaxb.JaxbDatabase;
import org.linguafranca.pwdb.kdbx.simple.SimpleDatabase;
import org.linguafranca.pwdb.kdbx.simple.model.KeePassFile;
import org.linguafranca.pwdb.security.CipherAlgorithm;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.util.*;

/**
 * KeePass 数据读取
 * @note
 *  KeePassJava2 项目的名称由 KeePass 的作者 Dominik Reichl 友情授权。与 KeePass 项目无正式联系。
 *  KeePass 实际上是由 Dominik 编写的代码定义的，这些代码是他创建和维护该项目时编写的。
 * @reference-doc
 *  [1] https://github.com/jorabin/KeePassJava2
 *  [2] https://github.com/jorabin/KeePassJava2/blob/master/example/src/main/java/org/linguafranca/pwdb/kdbx/QuickStart.java
 */
@Slf4j
public class KeePassExample {
    @SneakyThrows
    public static void main(String[] args) {
        String keepassFilePath = "D:\\Program-Data\\KeePass-Data\\xxxx-resource-accounts.kdbx";
        byte [] passwordBytes = "123".getBytes();

        //KdbxCreds credentials = new KdbxCreds("JNY#1638".getBytes());//[x]
        KdbCredentials credentials = new KdbCredentials.Password( passwordBytes );

        //InputStream inputStream = KeePassExample.class.getClass().getClassLoader().getResourceAsStream("test1.kdbx");
        InputStream keepassFileInputStream = new FileInputStream( new File(keepassFilePath) );

        /**
         * 密码数据库被建模为三层抽象
         * 数据库(Database)是记录的集合，其物理表示形式只需能够呈现为流即可。
         * 条目(Entry)保存数据库中有价值的信息，而组允许将条目构建为集合(Collection)，就像文件夹结构一样。
         * 数据库有一个根组(RootGroup)，通过跟踪根组的子组(Sub Group)可以浏览数据库的树形结构。
         *  条目属于组(Group)。条目可以在组之间移动，组也可以在组之间移动。
         *  但是，在一个数据库中创建的条目和组不能在未转换的情况下移动到另一个数据库：
         *    database.newEntry(entryToCopy);
         *    database.newGroup(groupToCopy);
         */
        Database database = DomDatabaseWrapper.load(new KdbxCreds( passwordBytes ), keepassFileInputStream);
        //不同的 Database 实现具有不同的特性，主要提现在速度上 | 例如 对于 JAXB 和 Simple 来说，加载时间是主要因素，而对于 DOM 实现来说，数据库遍历是主要因素
        //Database database = SimpleDatabase.load(credentials, keepassFileInputStream);
        //Database database = JaxbDatabase.load(credentials, keepassFileInputStream);
        //Database database = DomDatabaseWrapper.load(credentials, keepassFileInputStream);
        //Database database = JacksonDatabase.load(credentials, keepassFileInputStream);

        KdbxStreamFormat streamFormat = (KdbxStreamFormat) database.getStreamFormat();
        int databaseVersion = streamFormat.getStreamConfiguration().getVersion();//4
        CipherAlgorithm cipherAlgorithm = streamFormat.getStreamConfiguration().getCipherAlgorithm();//"AES"


        String databaseName = database.getName();
        Group rootGroup = database.getRootGroup();
        List&lt;Group&gt; generalGroupList = rootGroup.findGroups("General");//rootGroup.getGroups();
        Group generalGroup = generalGroupList.get(0);
        List&lt;Group&gt; groups = generalGroup.getGroups();
        int groupsSize = groups.size();
        log.info("GeneralGroup's groups size:{}", groupsSize);
        if(groupsSize &gt; 0){
            groups.stream().forEach(group -&gt; {
                String groupName = group.getName();
                List&lt;Entry&gt; entries = group.getEntries();// group.findEntries("mysql", true);
                int entriesSize = group.getEntriesCount();
                entries.stream().forEach(entry -&gt; {
                    log.info("entry.path:{}", entry.toString() );///xxxx-resource-accounts-database/General/cn-dev/xxx-mysql
                    UUID uuid = entry.getUuid();
                    String path = entry.getPath();
                    String title = entry.getTitle();
                    String username = entry.getUsername();
                    String password = entry.getPassword();
                    String url = entry.getUrl();
                    String notes = entry.getNotes();
                    String cdcUserCustomField = entry.getProperty("CDC_USER");//自定义扩展字段
                    String cdcPasswordCustomField = entry.getProperty("CDC_PASSWORD");//自定义扩展字段
                    byte[] xxxCustomFileField = entry.getBinaryProperty("");
                });
            });
        }
    }
}
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/1173617/202501/1173617-20250102172602480-1452674706.png" alt="" loading="lazy"></p>
<h1 id="x-参考文献">X 参考文献</h1>
<ul>
<li><a href="https://www.cnblogs.com/johnnyzen/p/18629045" target="_blank">[密码管理/信息安全] 密码管理工具：KeePass vs LastPass vs 1Password - 博客园/千千寰宇</a> 【推荐】</li>
<li>KeePass 【推荐】</li>
</ul>
<blockquote>
<ul>
<li><a href="https://keepass.info/index.html" target="_blank" rel="noopener nofollow">https://keepass.info/index.html</a></li>
<li><a href="https://keepass.info/translations.html" target="_blank" rel="noopener nofollow">https://keepass.info/translations.html</a> (汉化包)</li>
<li><a href="https://github.com/jorabin/KeePassJava2" target="_blank" rel="noopener nofollow">https://github.com/jorabin/KeePassJava2</a></li>
<li><a href="https://github.com/jorabin/KeePassJava2/blob/KeePassJava2-2.2.1/example/src/main/java/org/linguafranca/pwdb/kdbx/QuickStart.java" target="_blank" rel="noopener nofollow">https://github.com/jorabin/KeePassJava2/blob/KeePassJava2-2.2.1/example/src/main/java/org/linguafranca/pwdb/kdbx/QuickStart.java</a></li>
<li><a href="https://github.com/jorabin/KeePassJava2/blob/KeePassJava2-2.2.1/example/src/test/java/org/linguafranca/pwdb/kdbx/SimpleQuickStartTest.java" target="_blank" rel="noopener nofollow">https://github.com/jorabin/KeePassJava2/blob/KeePassJava2-2.2.1/example/src/test/java/org/linguafranca/pwdb/kdbx/SimpleQuickStartTest.java</a></li>
</ul>
</blockquote>
<ul>
<li>github topic</li>
</ul>
<blockquote>
<ul>
<li><a href="https://github.com/topics/keepass" target="_blank" rel="noopener nofollow">https://github.com/topics/keepass</a></li>
<li><a href="https://github.com/PhilippC/keepass2android" target="_blank" rel="noopener nofollow">https://github.com/PhilippC/keepass2android</a> : 4.9k star 2025.1.2</li>
</ul>
<blockquote>
<ul>
<li><a href="https://play.google.com/store/apps/details?id=keepass2android.keepass2android&amp;pli=1" target="_blank" rel="noopener nofollow">https://play.google.com/store/apps/details?id=keepass2android.keepass2android&amp;pli=1</a></li>
</ul>
</blockquote>
<ul>
<li><a href="https://github.com/jorabin/KeePassJava2" target="_blank" rel="noopener nofollow">https://github.com/jorabin/KeePassJava2</a> : 254 star 2025.1.2</li>
<li><a href="https://mvnrepository.com/artifact/de.slackspace/openkeepass" target="_blank" rel="noopener nofollow">https://mvnrepository.com/artifact/de.slackspace/openkeepass</a> : 153 个 star（相比 KeePassJava2 项目的 254 个 star ，star数偏少），且项目更新慢</li>
</ul>
</blockquote>
<ul>
<li><a href="https://blog.csdn.net/gitblog_00029/article/details/139255871" target="_blank" rel="noopener nofollow">探秘KeePassJava2：强大的跨平台密码管理器API - CSDN</a></li>
<li><a href="https://blog.csdn.net/gitblog_01047/article/details/141742946" target="_blank" rel="noopener nofollow">KeePassJava2: 强大的Java密码管理库 - CSDN</a></li>
<li><a href="https://blog.csdn.net/gitblog_00013/article/details/141743138" target="_blank" rel="noopener nofollow">KeePassJava2 使用指南 - CSDN</a></li>
<li><a href="https://blog.bfw.wiki/user6/15648032137538300066.html" target="_blank" rel="noopener nofollow">如何在Java中使用 KeePass数据库(kdbx) - blog.bfw.wiki</a></li>
</ul>
<blockquote>
<p><a href="https://mvnrepository.com/artifact/de.slackspace/openkeepass" target="_blank" rel="noopener nofollow">https://mvnrepository.com/artifact/de.slackspace/openkeepass</a> : 153 个 star（相比 KeePassJava2 项目的 254 个 star ，star数偏少），且项目更新慢</p>
</blockquote>

</div>
<div id="MySignature" role="contentinfo">
    <div class="essaySuffix-box">
    <div class="essaySuffix-box-left" style=" margin: 6px auto; ">
        <img src="https://blog-static.cnblogs.com/files/johnnyzen/cnblogs-qq-group-qrcode.gif?t=1679679148" alt="QQ沟通交流群" onload="changeImg(this,200,100)">
    </div>
<div class="essaySuffix-box-right">
    <span class="essaySuffix-right-title">本文作者</span>：
        <strong><span><a href="https://github.com/Johnny-ZTSD" target="_blank">千千寰宇</a></span></strong>
    <br>
    <span style="font-weight: bold; white-space:nowrap;">本文链接</span>：
        <a href="https://www.cnblogs.com/johnnyzen" target="_blank" id="articleLinkElement"> https://www.cnblogs.com/johnnyzen</a>
    <br>
    <span class="essaySuffix-right-title">关于博文</span>：评论和私信会在第一时间回复，或<a href="https://msg.cnblogs.com/msg/send/johnnyzen" target="_blank">直接私信</a>我。
    <br>
    <span class="essaySuffix-right-title">版权声明</span>：本博客所有文章除特别声明外，均采用 <a title="https://creativecommons.org/licenses/by-nc-nd/4.0/" href="http://blog.sina.com.cn/s/blog_896327b90102y6c6.html" alt="BY-NC-SA" target="_blank">BY-NC-SA</a> 
    许可协议。转载请注明出处！<br>
    <span class="essaySuffix-right-title">日常交流</span>：大数据与软件开发-QQ交流群: 774386015<strong>
        <span style="color: #ff0000; font-size: 12pt;">【<a id="post-up" onclick="votePost(getArticleNumber(),'Digg')" href="javascript:void(0);">入群二维码</a>】</span></strong>参见左下角。您的支持、鼓励<span style="color: #ff0000; font-size: 12pt;"></span>是博主技术写作的重要动力！
    <br>
</div>
<div style="clear: both;">
</div>
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.35818987334722224" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-02 17:44">2025-01-02 17:22</span>&nbsp;
<a href="https://www.cnblogs.com/johnnyzen">千千寰宇</a>&nbsp;
阅读(<span id="post_view_count">11</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18648346" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18648346);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18648346', targetLink: 'https://www.cnblogs.com/johnnyzen/p/18648346', title: '[密码管理/信息安全] KeePass Java 客户端 : KeePassJava2' })">举报</a>
</div>
        