
        <h2>
            <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xbdedu/p/18663596" title="发布于 2025-01-10 10:56">
    <span role="heading" aria-level="2">【开源】C#上位机必备高效数据转换助手</span>
    

</a>

        </h2>
        <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h3 data-first-child="">一、前言</h3>
<p data-pid="GJd_DHTh">大家好！我是付工。</p>
<p data-pid="ppOTOOB3">我们在进行上位机开发时，从设备端获取到的数据之后，需要进行一定的数据处理及转换，才能生成我们需要用的数据。</p>
<p data-pid="vtwLEcgS">这其中就涉及到了各种数据类型之间的相关转换，很多非科班出身的电气工程师，经常会因为弄不清楚各种数据类型之间的转换关系，导致无法获取到自己想要的数据。</p>
<p data-pid="puw2UcTb">因此，我开源了一个数据转换库的项目，放在Gitee上，希望对大家有所帮助。</p>
<h3>二、网络架构</h3>
<img src="https://picx.zhimg.com/80/v2-cdbce55f7255c491fdd9f9163dfb3c39_720w.webp" width="754" height="697" class="origin_image zh-lightbox-thumb lazy" data-caption="" data-size="normal" data-rawwidth="754" data-rawheight="697" data-original-token="v2-2ad3445000164ec0ba907c9431d4b584" data-original="https://picx.zhimg.com/v2-cdbce55f7255c491fdd9f9163dfb3c39_r.jpg" data-actualsrc="https://picx.zhimg.com/v2-cdbce55f7255c491fdd9f9163dfb3c39_1440w.jpg" data-lazy-status="ok">
<p data-pid="RV6-1yOd">整个数据转换库总共包含15个类，包含了各种常用各种数据类型之间的互相转换，每个转换类中的方法都增加了注释，使用起来会很方便。</p>
<div class="highlight">
<pre><code class="language-csharp"><span class="c1">/// &lt;summary&gt;
<span class="c1">/// 根据起始地址和长度自定义截取字节数组
<span class="c1">/// &lt;/summary&gt;
<span class="c1">/// &lt;param name="data"&gt;字节数组&lt;/param&gt;
<span class="c1">/// &lt;param name="start"&gt;开始字节&lt;/param&gt;
<span class="c1">/// &lt;param name="length"&gt;截取长度&lt;/param&gt;
<span class="c1">/// &lt;returns&gt;字节数组&lt;/returns&gt;
<span class="c1"><span class="na">[Description("根据起始地址和长度自定义截取字节数组")]
<span class="k">public <span class="k">static <span class="kt">byte<span class="p">[] <span class="n">GetByteArrayFromByteArray<span class="p">(<span class="kt">byte<span class="p">[] <span class="n">data<span class="p">, <span class="kt">int <span class="n">start<span class="p">, <span class="kt">int <span class="n">length<span class="p">)
<span class="p">{
    <span class="k">if <span class="p">(<span class="n">start <span class="p">&lt; <span class="m">0<span class="p">) <span class="k">throw <span class="k">new <span class="n">ArgumentException<span class="p">(<span class="s">"开始索引不能为负数"<span class="p">);
    <span class="k">if <span class="p">(<span class="n">length <span class="p">&lt;= <span class="m">0<span class="p">) <span class="k">throw <span class="k">new <span class="n">ArgumentException<span class="p">(<span class="s">"长度必须为正数"<span class="p">);
    <span class="k">if <span class="p">(<span class="n">data<span class="p">.<span class="n">Length <span class="p">&lt; <span class="p">(<span class="n">start <span class="p">+ <span class="n">length<span class="p">)) 
    <span class="k">throw <span class="k">new <span class="n">ArgumentException<span class="p">(<span class="s">"字节数组长度不够或开始索引太大"<span class="p">);
    <span class="kt">byte<span class="p">[] <span class="n">result <span class="p">= <span class="k">new <span class="kt">byte<span class="p">[<span class="n">length<span class="p">];
    <span class="n">Array<span class="p">.<span class="n">Copy<span class="p">(<span class="n">data<span class="p">, <span class="n">start<span class="p">, <span class="n">result<span class="p">, <span class="m">0<span class="p">, <span class="n">length<span class="p">);
    <span class="k">return <span class="n">result<span class="p">;
<span class="p">}
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
<h3>三、项目应用</h3>
<p data-pid="xt-pkBtj">在项目上进行应用，可以通过以下两种方式：</p>
<p data-pid="Hy29H5yf">1、Nuget安装</p>
<p data-pid="KP3oqBHj">通过Nuget包管理器中年搜索xbd.DataConvertLib，点击安装即可，如下所示：</p>
<img src="https://picx.zhimg.com/80/v2-f83ac75ba4b36e005dfcc986c251789d_720w.webp" width="750" height="217" class="origin_image zh-lightbox-thumb lazy" data-caption="" data-size="normal" data-rawwidth="750" data-rawheight="217" data-original-token="v2-2d43de72831d88a8b926a85e6129d434" data-original="https://picx.zhimg.com/v2-f83ac75ba4b36e005dfcc986c251789d_r.jpg" data-actualsrc="https://picx.zhimg.com/v2-f83ac75ba4b36e005dfcc986c251789d_1440w.jpg" data-lazy-status="ok">
<p data-pid="3CneK_BE">2、Gitee下载</p>
<p data-pid="9uP_kfqn">Gitee下载链接：</p>
<p data-pid="weBBh084"><a class=" external" href="https://link.zhihu.com/?target=https%3A//gitee.com/fujiajin/xbd.DataConvertTool" rel="noopener nofollow" target="_blank" data-za-detail-view-id="1043"><span class="invisible">https://<span class="visible">gitee.com/fujiajin/xbd.<span class="invisible">DataConvertTool</span></span></span></a></p>
<p data-pid="ymLT6Agh">下载之后即包含完整源码，可以集成到项目中或将dll文件和xml文件添加到项目中。</p>
<img src="https://pic1.zhimg.com/80/v2-9323fcb276d41ae349f7fa012ab87a62_720w.webp" width="596" height="605" class="origin_image zh-lightbox-thumb lazy" data-caption="" data-size="normal" data-rawwidth="596" data-rawheight="605" data-original-token="v2-d94dbc8ed4289b095fa4fee95d75fd0e" data-original="https://pic1.zhimg.com/v2-9323fcb276d41ae349f7fa012ab87a62_r.jpg" data-actualsrc="https://pic1.zhimg.com/v2-9323fcb276d41ae349f7fa012ab87a62_1440w.jpg" data-lazy-status="ok">
<h3>四、使用方法</h3>
<p data-pid="DjQ6xc0y">虽然转换库包含了不同的类，每个类中又包含了很多方法，但是不用担心，只要掌握了以下几个原则，使用起来会很简单。</p>
<p data-pid="dBxqfP0j">原则一：首先要确定使用哪个类，类的命名是根据返回值来决定的，这个返回值就是你希望得到的类型。</p>
<ul>
<li data-pid="CEfFxAFy">如果返回布尔值或布尔数组，使用BitLib。</li>
<li data-pid="r8pRyuWL">如果返回字节数组，使用ByteArrayLib。</li>
<li data-pid="ZwuCCJ1e">如果返回短整型或短整型数组，使用ShortLib。</li>
<li data-pid="kFqHY6yb">以此类推。</li>
</ul>
<p data-pid="0GMCSdAv">原则二：确定好类之后，接下来就是确定方法。</p>
<ul>
<li data-pid="eqVMIT8o">绝大多数方法的命名是按照 Get...From... 来定义的</li>
<li data-pid="skZ9j2v3">要明确知道需要什么类型，有什么类型的数据</li>
</ul>
<p data-pid="RMoOeYso">示例：我们希望从一个字节数组中，某个索引开始截取转换成一个浮点数。</p>
<p data-pid="u5CRKUqr">我们希望得到一个浮点数，因此类名选择FloatLib。</p>
<p data-pid="Kn4_Hqdz">我们有的是一个字节数组，因此方法名选择GetFloatFromByteArray。</p>
<img src="https://picx.zhimg.com/80/v2-d56207ddf7049466ead10a08207376af_720w.webp" width="655" height="74" class="origin_image zh-lightbox-thumb lazy" data-caption="" data-size="normal" data-rawwidth="655" data-rawheight="74" data-original-token="v2-d56207ddf7049466ead10a08207376af" data-original="https://picx.zhimg.com/v2-d56207ddf7049466ead10a08207376af_r.jpg" data-actualsrc="https://picx.zhimg.com/v2-d56207ddf7049466ead10a08207376af_1440w.jpg" data-lazy-status="ok">
<p data-pid="Irzzvbd_">在实际应用中，Visual Studio会有智能提示，我们只需要选择即可。</p>
<h3>五、软件工具</h3>
<p data-pid="umLiOYG3">大家下载的源码中，运行的界面是基于这个转换库开发的一个测试工具，主要是使用反射和特性来实现的。</p>
<img src="https://pica.zhimg.com/80/v2-98b0db706fa835ea946f23a4074dc078_720w.webp" width="709" height="776" class="origin_image zh-lightbox-thumb lazy" data-caption="" data-size="normal" data-rawwidth="709" data-rawheight="776" data-original-token="v2-010a7bbd4296efa597e4770859dcbdb0" data-original="https://pica.zhimg.com/v2-98b0db706fa835ea946f23a4074dc078_r.jpg" data-actualsrc="https://pica.zhimg.com/v2-98b0db706fa835ea946f23a4074dc078_1440w.jpg" data-lazy-status="ok">
<p data-pid="-gUUdaAc">这上面罗列了通信库的所有的类和每个类对应的方法，每个类和方法都有对应的注释，然后通过表格输入正确的数据，点击执行结果，即可得到对应的结果。</p>
<p data-pid="y2Fbg94C">比如：我们想要将2.5浮点数转成一个字节数组，那么选择ByteArrayLib的GetByteArrayFromFloat方法，第一个参数填写2.5，第二个参数填写大小端，即可得到结果为[64,32,0,0]。</p>
<img src="https://pic1.zhimg.com/80/v2-c520e5e0eb1cc23c44a46f7a97b2b18e_720w.webp" width="710" height="775" class="origin_image zh-lightbox-thumb lazy" data-caption="" data-size="normal" data-rawwidth="710" data-rawheight="775" data-original-token="v2-32c3a0f7bfeb60b2520909e5ab4882fa" data-original="https://pic1.zhimg.com/v2-c520e5e0eb1cc23c44a46f7a97b2b18e_r.jpg" data-actualsrc="https://pic1.zhimg.com/v2-c520e5e0eb1cc23c44a46f7a97b2b18e_1440w.jpg" data-lazy-status="ok">
<p data-pid="B2euhebK">开源不易，希望大家多多支持。</p>
</div>
<div class="clear"></div>

        <p class="postfoot">
            posted on 
<span id="post-date" data-last-update-days="0.056474632245370374" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-10 10:57">2025-01-10 10:56</span>&nbsp;
<a href="https://www.cnblogs.com/xbdedu">付工上位机</a>&nbsp;
阅读(<span id="post_view_count">126</span>)&nbsp;
评论(<span id="post_comment_count">1</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18663596" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18663596);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18663596', targetLink: 'https://www.cnblogs.com/xbdedu/p/18663596', title: '【开源】C#上位机必备高效数据转换助手' })">举报</a>

        </p>
    