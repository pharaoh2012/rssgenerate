
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/kybs0/p/18658281" title="发布于 2025-01-08 19:00">
    <span role="heading" aria-level="2">.NET 窗口置于最顶层</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>本文介绍如何将窗口置于最顶层，以及解决在顶层显示时对锁屏登录界面的影响等问题。用于实现类似Launcher、系统工具等应用需要窗口层级比Windows开始菜单以及置顶任务栏还要高的场景</p>
<p><strong>一般情况下的窗口置顶</strong>，可以设置WPF窗口属性Topmost=true</p>
<p>也可以使用WIN32-SetWindowPos函数<a href="https://learn.microsoft.com/zh-cn/windows/win32/api/winuser/nf-winuser-setwindowpos" rel="noopener nofollow">SetWindowPos 函数 (winuser.h) - Win32 apps | Microsoft Learn</a>，设置窗口层级：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 128, 1)"> 1</span>     <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span><span style="color: rgba(0, 128, 0, 1)">设置窗口位置</span><span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
<span style="color: rgba(0, 128, 128, 1)"> 2</span>     <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="hwnd"&gt;</span><span style="color: rgba(0, 128, 0, 1)">窗口句柄</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
<span style="color: rgba(0, 128, 128, 1)"> 3</span>     <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="hWndInsertAfter"&gt;</span><span style="color: rgba(0, 128, 0, 1)">跟随的窗口句柄</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
<span style="color: rgba(0, 128, 128, 1)"> 4</span>     <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="x"&gt;</span><span style="color: rgba(0, 128, 0, 1)">X轴坐标</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
<span style="color: rgba(0, 128, 128, 1)"> 5</span>     <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="y"&gt;</span><span style="color: rgba(0, 128, 0, 1)">Y轴坐标</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
<span style="color: rgba(0, 128, 128, 1)"> 6</span>     <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="width"&gt;</span><span style="color: rgba(0, 128, 0, 1)">宽</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
<span style="color: rgba(0, 128, 128, 1)"> 7</span>     <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="height"&gt;</span><span style="color: rgba(0, 128, 0, 1)">高</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
<span style="color: rgba(0, 128, 128, 1)"> 8</span>     <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="uFlags"&gt;</span><span style="color: rgba(0, 128, 0, 1)">标志位</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
<span style="color: rgba(0, 128, 128, 1)"> 9</span>     <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;returns&gt;&lt;/returns&gt;</span>
<span style="color: rgba(0, 128, 128, 1)">10</span>     [DllImport(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">user32.dll</span><span style="color: rgba(128, 0, 0, 1)">"</span>, SetLastError = <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">)]
</span><span style="color: rgba(0, 128, 128, 1)">11</span>     <span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">extern</span> <span style="color: rgba(0, 0, 255, 1)">bool</span> SetWindowPos(IntPtr hwnd, IntPtr hWndInsertAfter, <span style="color: rgba(0, 0, 255, 1)">int</span> x, <span style="color: rgba(0, 0, 255, 1)">int</span> y, <span style="color: rgba(0, 0, 255, 1)">int</span> width, <span style="color: rgba(0, 0, 255, 1)">int</span> height, <span style="color: rgba(0, 0, 255, 1)">uint</span> uFlags);</pre>
</div>
<p>hWndInsertAfter，需要置顶可以传入参数HWND_TOPMOST(-1)。设置后会在任务栏上方显示（注意：不是开始菜单显示时的任务栏，开始菜单显示后任务栏层级是超级高的，置顶层级需要再次提升，下面会讲到）</p>
<p>如果你软件的置顶需求是常驻，需要解决与其它置顶窗口的层级冲突、抢他们的层级，可以加个定时器：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 128, 1)"> 1</span>     <span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> nint _handle;
</span><span style="color: rgba(0, 128, 128, 1)"> 2</span>     <span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">void</span> MainWindow_Loaded(<span style="color: rgba(0, 0, 255, 1)">object</span><span style="color: rgba(0, 0, 0, 1)"> sender, RoutedEventArgs e)
</span><span style="color: rgba(0, 128, 128, 1)"> 3</span> <span style="color: rgba(0, 0, 0, 1)">    {
</span><span style="color: rgba(0, 128, 128, 1)"> 4</span>         _handle = <span style="color: rgba(0, 0, 255, 1)">new</span> WindowInteropHelper(<span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">).Handle;
</span><span style="color: rgba(0, 128, 128, 1)"> 5</span>         SetWindowPos(_handle, -<span style="color: rgba(128, 0, 128, 1)">1</span>, <span style="color: rgba(128, 0, 128, 1)">0</span>, <span style="color: rgba(128, 0, 128, 1)">0</span>, <span style="color: rgba(128, 0, 128, 1)">0</span>, <span style="color: rgba(128, 0, 128, 1)">0</span>, <span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">);
</span><span style="color: rgba(0, 128, 128, 1)"> 6</span>         <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">定时器置顶</span>
<span style="color: rgba(0, 128, 128, 1)"> 7</span>         <span style="color: rgba(0, 0, 255, 1)">var</span> timer = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Timer();
</span><span style="color: rgba(0, 128, 128, 1)"> 8</span>         timer.Interval = <span style="color: rgba(128, 0, 128, 1)">100</span><span style="color: rgba(0, 0, 0, 1)">;
</span><span style="color: rgba(0, 128, 128, 1)"> 9</span>         timer.Elapsed +=<span style="color: rgba(0, 0, 0, 1)"> Timer_Elapsed;
</span><span style="color: rgba(0, 128, 128, 1)">10</span> <span style="color: rgba(0, 0, 0, 1)">        timer.Start();
</span><span style="color: rgba(0, 128, 128, 1)">11</span> <span style="color: rgba(0, 0, 0, 1)">    }
</span><span style="color: rgba(0, 128, 128, 1)">12</span>     <span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">void</span> Timer_Elapsed(<span style="color: rgba(0, 0, 255, 1)">object</span>?<span style="color: rgba(0, 0, 0, 1)"> sender, System.Timers.ElapsedEventArgs e)
</span><span style="color: rgba(0, 128, 128, 1)">13</span> <span style="color: rgba(0, 0, 0, 1)">    {
</span><span style="color: rgba(0, 128, 128, 1)">14</span>         SetWindowPos(_handle, -<span style="color: rgba(128, 0, 128, 1)">1</span>, <span style="color: rgba(128, 0, 128, 1)">0</span>, <span style="color: rgba(128, 0, 128, 1)">0</span>, <span style="color: rgba(128, 0, 128, 1)">0</span>, <span style="color: rgba(128, 0, 128, 1)">0</span>, <span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">);
</span><span style="color: rgba(0, 128, 128, 1)">15</span>     }</pre>
</div>
<p>当然，这种窗口置顶方案，遇上比你更流氓的软件就GG了，会抢来抢去。</p>
<p><strong>最上层置顶（比Windows开始菜单以及置顶任务栏还要高）</strong>，根据我们MVP毅仔提供的方案&nbsp;<a href="https://blog.walterlv.com/post/run-desktop-application-above-windows-application.html" rel="noopener nofollow">让你的程序置顶到比系统界面都更上层，就像任务管理器/放大镜一样绝对置顶 - walterlv</a>，我们简单补充整理：</p>
<p>1. 添加app.manifest，并修改requestedExecutionLevel为管理员启动权限、添加UI置顶权限，详细的可以了解&nbsp;<a href="https://learn.microsoft.com/zh-cn/cpp/build/reference/manifestuac-embeds-uac-information-in-manifest?view=msvc-170" rel="noopener nofollow">/MANIFESTUAC（将 UAC 信息嵌入到清单中） | Microsoft Learn</a></p>
<p>&lt;requestedExecutionLevel level="requireAdministrator" uiAccess="true" /&gt;</p>
<p>这里的窗口置顶可以设置比系统界面更高的置顶，也就是说可以比一些系统级别的置顶还要高，效果同任务管理器的绝对置顶。UiAccess可以帮应用程序绕过用户界面保护级别、并将输入引导到桌面上的更高权限窗口</p>
<p>2. 给Windows设置属性ShowInTaskbar="True"、Topmost="True",</p>
<p>3. 添加程序签名</p>
<p><img src="https://img2024.cnblogs.com/blog/685541/202501/685541-20250107172128269-50492474.png" alt="" loading="lazy"></p>
<p>4. 将程序放在安装目录下C:\Program Files、C:\Program Files (x86)。确保应用程序是从受信任的位置启动的，因为 Windows 对 UIAccess 应用程序的启动位置有严格限制。</p>
<p>启动后，窗口层级就比Windows开始菜单以及设置置顶的任务管理器，都要高。窗口层级关系如下，桌面&lt;一般应用窗口&lt;Windows开始菜单&lt;置顶的任务管理器&lt;当前置顶应用Demo：</p>
<p><img src="https://img2024.cnblogs.com/blog/685541/202501/685541-20250107174328318-735055864.png" alt="" width="918" height="598" loading="lazy"></p>
<p>层级设置没问题。我们来说下这个方案的几个问题</p>
<p><span style="color: rgba(0, 0, 0, 1)"><strong>1. Windows锁屏/登录界面，置顶窗口也会显示，影响了用户操作</strong></span></p>
<p>解决：监听锁屏/解锁屏的事件，添加窗口Topmost修改</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 128, 1)"> 1</span>     <span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> MainWindow()
</span><span style="color: rgba(0, 128, 128, 1)"> 2</span> <span style="color: rgba(0, 0, 0, 1)">    {
</span><span style="color: rgba(0, 128, 128, 1)"> 3</span> <span style="color: rgba(0, 0, 0, 1)">        InitializeComponent();
</span><span style="color: rgba(0, 128, 128, 1)"> 4</span>         <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">当前登录的用户变化</span>
<span style="color: rgba(0, 128, 128, 1)"> 5</span>         SystemEvents.SessionSwitch +=<span style="color: rgba(0, 0, 0, 1)"> SystemEvents_SessionSwitch;
</span><span style="color: rgba(0, 128, 128, 1)"> 6</span> <span style="color: rgba(0, 0, 0, 1)">    }
</span><span style="color: rgba(0, 128, 128, 1)"> 7</span>     <span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">void</span> SystemEvents_SessionSwitch(<span style="color: rgba(0, 0, 255, 1)">object</span><span style="color: rgba(0, 0, 0, 1)"> sender, SessionSwitchEventArgs e)
</span><span style="color: rgba(0, 128, 128, 1)"> 8</span> <span style="color: rgba(0, 0, 0, 1)">    {
</span><span style="color: rgba(0, 128, 128, 1)"> 9</span>         <span style="color: rgba(0, 0, 255, 1)">switch</span><span style="color: rgba(0, 0, 0, 1)"> (e.Reason)
</span><span style="color: rgba(0, 128, 128, 1)">10</span> <span style="color: rgba(0, 0, 0, 1)">        {
</span><span style="color: rgba(0, 128, 128, 1)">11</span>             <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">解锁屏</span>
<span style="color: rgba(0, 128, 128, 1)">12</span>             <span style="color: rgba(0, 0, 255, 1)">case</span><span style="color: rgba(0, 0, 0, 1)"> SessionSwitchReason.SessionUnlock:
</span><span style="color: rgba(0, 128, 128, 1)">13</span>                 Topmost = <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">;
</span><span style="color: rgba(0, 128, 128, 1)">14</span>                 <span style="color: rgba(0, 0, 255, 1)">break</span><span style="color: rgba(0, 0, 0, 1)">;
</span><span style="color: rgba(0, 128, 128, 1)">15</span>             <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">锁屏</span>
<span style="color: rgba(0, 128, 128, 1)">16</span>             <span style="color: rgba(0, 0, 255, 1)">case</span><span style="color: rgba(0, 0, 0, 1)"> SessionSwitchReason.SessionLock:
</span><span style="color: rgba(0, 128, 128, 1)">17</span>                 Topmost = <span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">;
</span><span style="color: rgba(0, 128, 128, 1)">18</span>                 <span style="color: rgba(0, 0, 255, 1)">break</span><span style="color: rgba(0, 0, 0, 1)">;
</span><span style="color: rgba(0, 128, 128, 1)">19</span> <span style="color: rgba(0, 0, 0, 1)">        }
</span><span style="color: rgba(0, 128, 128, 1)">20</span>     }</pre>
</div>
<p>锁屏后窗口层级隐藏效果：</p>
<p><img src="https://img2024.cnblogs.com/blog/685541/202501/685541-20250107173749606-1714571771.gif" alt="" loading="lazy"></p>
<p><strong><span style="color: rgba(0, 0, 0, 1)">2. 任务栏图标如果有需求需要隐藏的话，设置窗口ShowInTaskbar=false无法隐藏图标</span></strong></p>
<p><span style="color: rgba(0, 0, 0, 1)">这种情况下，我磨了下代码，可以这么操作：</span></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 128, 1)">1</span>     <span style="color: rgba(0, 0, 255, 1)">int</span> exStyle =<span style="color: rgba(0, 0, 0, 1)"> GetWindowLong(hWnd, GWL_EXSTYLE);
</span><span style="color: rgba(0, 128, 128, 1)">2</span>     <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 设置窗口样式为工具窗口, 不在任务栏显示</span>
<span style="color: rgba(0, 128, 128, 1)">3</span>     exStyle |=<span style="color: rgba(0, 0, 0, 1)"> WS_EX_TOOLWINDOW;
</span><span style="color: rgba(0, 128, 128, 1)">4</span> <span style="color: rgba(0, 0, 0, 1)">    SetWindowLong(hWnd, GWL_EXSTYLE, exStyle);
</span><span style="color: rgba(0, 128, 128, 1)">5</span>     <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">二次设置任务栏不显示</span>
<span style="color: rgba(0, 128, 128, 1)">6</span>     ShowInTaskbar = <span style="color: rgba(0, 0, 255, 1)">false</span>;</pre>
</div>
<p>使用SetWindowLong来设置窗口为工具窗口样式，然后更新窗口属性ShowInTaskbar=false：</p>
<p>WS_EX_TOOLWINDOW 样式 - 此扩展窗口样式用于创建工具窗口。Windows 不将此类工具窗口视为常规应用程序窗口，因此默认情况下不在任务栏中显示</p>
<p>ShowInTaskbar = false -&nbsp;WPF是通过设置ShowInTaskbar来实现不在任务栏中显示。</p>
<p><span style="color: rgba(255, 0, 0, 1)">注意：需要俩个同时设置，有uiAccess的置顶应用才能隐藏任务栏</span></p>
<p><span style="color: rgba(0, 0, 0, 1)">我猜测，是uiAccess会影响窗口样式的应用方式，而WS_EX_TOOLWINDOW结合ShowInTaskbar，明确告诉 WPF 不要在任务栏中显示此窗口，进一步确保了图标不显示出来。</span></p>
<p><span style="color: rgba(0, 0, 0, 1)">此类场景置顶代码如下：</span></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 128, 1)"> 1</span>     <span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> SetTopmost()
</span><span style="color: rgba(0, 128, 128, 1)"> 2</span> <span style="color: rgba(0, 0, 0, 1)">    {
</span><span style="color: rgba(0, 128, 128, 1)"> 3</span>         IntPtr hWnd =<span style="color: rgba(0, 0, 0, 1)"> _hWnd;
</span><span style="color: rgba(0, 128, 128, 1)"> 4</span>         <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 将窗口设置为顶层窗口</span>
<span style="color: rgba(0, 128, 128, 1)"> 5</span>         Topmost = <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">;
</span><span style="color: rgba(0, 128, 128, 1)"> 6</span> 
<span style="color: rgba(0, 128, 128, 1)"> 7</span>         <span style="color: rgba(0, 0, 255, 1)">int</span> exStyle =<span style="color: rgba(0, 0, 0, 1)"> GetWindowLong(hWnd, GWL_EXSTYLE);
</span><span style="color: rgba(0, 128, 128, 1)"> 8</span>         <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 设置窗口样式为工具窗口, 不在任务栏显示</span>
<span style="color: rgba(0, 128, 128, 1)"> 9</span>         exStyle |=<span style="color: rgba(0, 0, 0, 1)"> WS_EX_TOOLWINDOW;
</span><span style="color: rgba(0, 128, 128, 1)">10</span> <span style="color: rgba(0, 0, 0, 1)">        SetWindowLong(hWnd, GWL_EXSTYLE, exStyle);
</span><span style="color: rgba(0, 128, 128, 1)">11</span>         <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">二次设置任务栏不显示</span>
<span style="color: rgba(0, 128, 128, 1)">12</span>         ShowInTaskbar = <span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">;
</span><span style="color: rgba(0, 128, 128, 1)">13</span>     }</pre>
</div>
<p>也可以看github仓库完整代码&nbsp;&nbsp;<a href="https://github.com/kybs00/WindowsShowTopDemo" rel="noopener nofollow">kybs00/WindowsShowTopDemo</a>，需要快速验证置顶可以用这个<a href="https://files.cnblogs.com/files/kybs0/WindowsShowTopDemo.zip?t=1736333847&amp;download=true" target="_blank">WindowShowTopDemo.exe</a>：</p>
<p><strong>3. 根据小伙伴反馈，应用设置了uiAccess后，在此进程打开其它软件，其它软件内部调用SetParent实现相关功能时会失败</strong></p>
<p>这个我验证了下分屏软件SetParent确实有此问题，分屏内部使用了SetParent来实现多个屏幕区域的组合。</p>
<p>我单独创建Demo验证SetParent是正常的，详见<a href="https://www.cnblogs.com/kybs0/p/18664127">.NET SetParent - 唐宋元明清2188 - 博客园</a></p>
<p>小伙伴遇到的SetParent异常需要根据业务继续分析，不过保底可以通过创建子进程、以进程通信去启动相关应用，来规避。</p>
<p>&nbsp;</p>
</div>
<div id="MySignature" role="contentinfo">
    <div>作者：<a href="http://www.cnblogs.com/kybs0/" target="_blank">唐宋元明清2188</a></div>
<div>出处：<a href="http://www.cnblogs.com/kybs0/" target="_blank">http://www.cnblogs.com/kybs0/</a></div>
<div>让学习成为习惯，假设明天就有重大机遇等着你，你准备好了么</div>
<div>本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须在文章页面给出原文连接，否则保留追究法律责任的权利。 </div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="1.1392790415902778" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-10 17:04">2025-01-08 19:00</span>&nbsp;
<a href="https://www.cnblogs.com/kybs0">唐宋元明清2188</a>&nbsp;
阅读(<span id="post_view_count">449</span>)&nbsp;
评论(<span id="post_comment_count">2</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18658281" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18658281);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18658281', targetLink: 'https://www.cnblogs.com/kybs0/p/18658281', title: '.NET 窗口置于最顶层' })">举报</a>
</div>
        