
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Vsonic12138/p/18746050" title="发布于 2025-03-02 15:12">
    <span role="heading" aria-level="2">ESP AT指令使用记录</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        介绍了ESP-AT指令的使用，搭配STM32与ESP01S连接巴法云。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="一前言">一、前言</h1>
<p>本篇文章主要用于记录自己在使用AT指令时候的流程，记录一些资料与程序等。如果能帮到你，请给我点个赞。</p>
<h1 id="二背景知识">二、背景知识</h1>
<h2 id="esp-at是什么">ESP-AT是什么？</h2>
<ol>
<li>
<p>ESP-AT 是乐鑫开发的可直接用于量产的物联网应用固件，旨在降低客户开发成本，快速形成产品。通过 ESP-AT 指令，您可以快速加入无线网络、连接云平台、实现数据通信以及远程控制等功能，真正的通过无线通讯实现万物互联。</p>
</li>
<li>
<p>ESP-AT 是基于 ESP-IDF 或 ESP8266_RTOS_SDK 实现的软件工程。它 <strong>使 ESP 模组作为从机，MCU 作为主机</strong> 。MCU 发送 AT 命令给 ESP 模组，控制 ESP 模组执行不同的操作，并接收 ESP 模组返回的 AT 响应。ESP-AT 提供了大量功能不同的 AT 命令，如 Wi-Fi 命令、TCP/IP 命令、Bluetooth LE 命令、Bluetooth 命令、MQTT 命令、HTTP 命令、Ethernet 命令等。</p>
</li>
<li>
<p>AT 命令以 “AT” 开始，代表 Attention，以新的一行 (CR LF) 为结尾。输入的每条命令都会返回 OK 或 ERROR 的响应，表示当前命令的最终执行结果。注意，所有 AT 命令均为串行执行，每次只能执行一条命令。因此，在使用 AT 命令时，应等待上一条命令执行完毕后，再发送下一条命令。如果上一条命令未执行完毕，又发送了新的命令，则会返回 busy p... 提示。</p>
</li>
</ol>
<p><img src="https://img2024.cnblogs.com/blog/3089600/202503/3089600-20250302131800199-164590561.png" alt="image" loading="lazy"></p>
<p>可以看到乐鑫公司为ESP模组开发了一个AT指令框架，这样ESP就可以作为从机，一个附属模块来进行开发，同样的也可以基于这个框架来搭建属于自己的AT指令。目前市面上也存在着大量的第三方AT指令，一般都是一些云平台（腾讯云、阿里云等）魔改的AT指令，烧写相应的固件即可使用这些魔改的AT指令。</p>
<h2 id="at指令资料">AT指令资料</h2>
<p>除了乐鑫官方的ESP-AT手册以外，目前提供较完整的ESP-AT指令的第三方还有<strong>安信可（Ai-Thinker）</strong><br>
<a href="https://espressif-docs.readthedocs-hosted.com/projects/esp-at/zh-cn/release-v2.2.0.0_esp8266/Get_Started/What_is_ESP-AT.html" title="乐鑫官方ESP-AT手册" target="_blank" rel="noopener nofollow">乐鑫官方ESP-AT手册</a><br>
<a href="https://www.ai-thinker.com/product/esp" title="安信可ESP产品资料" target="_blank" rel="noopener nofollow">安信可ESP产品资料</a><br>
其中安信可提供了非常全面的ESP-AT示例，还包括烧入软件等等。通过上述链接，即可进入进行资料的查询<br>
<img src="https://img2024.cnblogs.com/blog/3089600/202503/3089600-20250302132628521-430368414.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/3089600/202503/3089600-20250302132657081-1875136083.png" alt="image" loading="lazy"></p>
<h2 id="单片机选择">单片机选择</h2>
<p>固件基本上支持很多的ESP系列的MCU，不过我们既然选择使用了AT指令，肯定是想让ESP模组作为从机，或者说一个WIFI模块来使用的，我这里推荐ESP01S</p>
<p><img src="https://img2024.cnblogs.com/blog/3089600/202503/3089600-20250302133247463-1062261959.png" alt="image" loading="lazy"></p>
<p>这个模组基于ESP8266芯片设计，引出了几个必要的引脚，体积小巧。在购买的时候需要注意购买ESP01S即可，是ESP01的升级款。且购买的店家最好确认一下，之前安信可售卖的质量比较好，后面没有再进行出售了，比较可惜。</p>
<h1 id="三esp01s-at指令链接巴法云具体流程">三、ESP01S AT指令链接巴法云具体流程</h1>
<h2 id="选择固件烧入">选择固件烧入</h2>
<p>常见的AT固件，在安信可的资料当中已经列出了，根据具体的需求选择对应的AT固件进行下载即可</p>
<p><img src="https://img2024.cnblogs.com/blog/3089600/202503/3089600-20250302133528302-846942652.png" alt="image" loading="lazy"></p>
<p>我这里选择固件号为 1471 的固件，足够使用了。且使用方式与官方的ESP-AT指令集保持一致。</p>
<h2 id="引脚连接测试固件烧入">引脚连接测试、固件烧入</h2>
<p>到开发工具当中下载好烧入工具</p>
<p><img src="https://img2024.cnblogs.com/blog/3089600/202503/3089600-20250302140008668-930251940.png" alt="image" loading="lazy"></p>
<p>准备好如下两份文件即可开始进行固件的烧入<br>
<img src="https://img2024.cnblogs.com/blog/3089600/202503/3089600-20250302140357531-602461255.png" alt="image" loading="lazy"></p>
<p>准备一个USB-TTL，安装好对应的驱动（CH340或者CP210X）</p>
<p>需要注意烧入固件的时候需要配置为UART烧入模式，参见下表</p>
<table>
<thead>
<tr>
<th>模式</th>
<th>CH_PD(EN)</th>
<th>RST</th>
<th>GPIO15</th>
<th>GPIO0</th>
<th>GPIO2</th>
<th>TXD0</th>
</tr>
</thead>
<tbody>
<tr>
<td>UART下载模式</td>
<td>高</td>
<td>高</td>
<td>低</td>
<td>低</td>
<td>高</td>
<td>高</td>
</tr>
<tr>
<td>Flash运行模式</td>
<td>高</td>
<td>高</td>
<td>低</td>
<td>高</td>
<td>高</td>
<td>高</td>
</tr>
<tr>
<td>Chip测试模式</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>低</td>
</tr>
</tbody>
</table>
<p>可以看到IO0是需要拉低电平的，我们将IO0接到GND上，如果USB-TTL只有一个GND，只要拿个洞洞板上面焊接一排排针，然后将GND通过杜邦线接上去，这样就有很多个GND可以使用了。<br>
类似这样，焊接一排排针即可：<br>
<img src="https://img2024.cnblogs.com/blog/3089600/202503/3089600-20250302142215620-1901106159.png" alt="image" loading="lazy"></p>
<p>接好线之后，解压固件，打开前面下载的烧入软件：</p>
<p><img src="https://img2024.cnblogs.com/blog/3089600/202503/3089600-20250302140455864-1555125342.png" alt="image" loading="lazy"></p>
<p>按照下图进行选择：</p>
<p><img src="https://img2024.cnblogs.com/blog/3089600/202503/3089600-20250302141003773-1319945000.png" alt="image" loading="lazy"></p>
<p>首先擦除（ERASE），然后再下载即可。</p>
<p>擦除完成：<br>
<img src="https://img2024.cnblogs.com/blog/3089600/202503/3089600-20250302142502728-1891732385.png" alt="擦除完成" loading="lazy"></p>
<p>烧入完成：<br>
<img src="https://img2024.cnblogs.com/blog/3089600/202503/3089600-20250302142624758-647727818.png" alt="image" loading="lazy"></p>
<p>之后将之前拉低电平的IO0拔掉，即可按照正常的串口连接方式进行测试：<br>
<img src="https://img2024.cnblogs.com/blog/3089600/202503/3089600-20250302142702614-591832145.png" alt="image" loading="lazy"></p>
<p>打开串口软件，选择好串口，波特率默认115200，烧入AT，选择发送新行，有收到“OK”回复。说明固件烧入成功。<br>
<img src="https://img2024.cnblogs.com/blog/3089600/202503/3089600-20250302142829295-1600616243.png" alt="image" loading="lazy"></p>
<h2 id="at指令连接巴法云平台">AT指令连接巴法云平台</h2>
<p>1471号固件的时候方式参照乐鑫官方的ESP-AT指令集：<br>
<a href="https://docs.espressif.com/projects/esp-at/zh_CN/latest/esp32/AT_Command_Set/index.html" title="乐鑫 ESP-AT指令集" target="_blank" rel="noopener nofollow">乐鑫 ESP-AT指令集</a></p>
<p>我们需要的是MQTT，参考基础<strong>AT 命令集</strong> <strong>WIFI AT 命令集</strong> <strong>MQTT AT 命令集</strong>即可。<br>
<img src="https://img2024.cnblogs.com/blog/3089600/202503/3089600-20250302143115512-386221756.png" alt="image" loading="lazy"></p>
<h3 id="基础-at-命令集">基础 AT 命令集</h3>
<p>只要使用下面两个即可：<br>
<img src="https://img2024.cnblogs.com/blog/3089600/202503/3089600-20250302143949554-1843881005.png" alt="image" loading="lazy"></p>
<h3 id="wifi-at-命令集">WIFI AT 命令集</h3>
<p>使用下面的指令即可：<br>
<img src="https://img2024.cnblogs.com/blog/3089600/202503/3089600-20250302145135309-287469883.png" alt="image" loading="lazy"></p>
<h3 id="mqtt-at-命令集">MQTT AT 命令集</h3>
<p>巴法云的MQTT服务器的连接比较简单，按照巴法云的连接手册，只需要</p>
<ul>
<li>密钥</li>
<li>baseurl</li>
<li>端口<br>
这三个即可，具体参考巴法云接入文档：<br>
<a href="https://cloud.bemfa.com/docs/src/mqtt.html" title="巴法云MQTT接入文档" target="_blank" rel="noopener nofollow">巴法云MQTT接入文档</a></li>
</ul>
<p><strong>注意!!!!!</strong><br>
巴法云支持MQTT协议当中的Qos0和Qos1，不要配置成Qos2了。<br>
<img src="https://img2024.cnblogs.com/blog/3089600/202503/3089600-20250302150559117-1672756489.png" alt="image" loading="lazy"></p>
<p>MQTT指令集大部分都是需要的：<br>
<img src="https://img2024.cnblogs.com/blog/3089600/202503/3089600-20250302144512692-1284108747.png" alt="image" loading="lazy"></p>
<h3 id="具体流程">具体流程</h3>
<h4 id="连接wifi">连接WIFI</h4>
<ol>
<li>测试AT指令是否完好</li>
<li>设置ESP为AP模型</li>
<li>扫描WIFI</li>
<li>连接WIFI<br>
<img src="https://img2024.cnblogs.com/blog/3089600/202503/3089600-20250302145248619-1891690595.png" alt="image" loading="lazy"></li>
</ol>
<h4 id="连接巴法云服务器订阅主题">连接巴法云服务器，订阅主题</h4>
<ol>
<li>配置好ClientID服务器地址、端口</li>
<li>订阅配置好的MQTT主题</li>
</ol>
<p><img src="https://img2024.cnblogs.com/blog/3089600/202503/3089600-20250302150137192-985310000.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/3089600/202503/3089600-20250302150221941-1962088184.png" alt="image" loading="lazy"></p>
<p>成功连接并且订阅到服务器主题！！！！<br>
<img src="https://img2024.cnblogs.com/blog/3089600/202503/3089600-20250302150305863-356069401.png" alt="image" loading="lazy"></p>
<h4 id="发布接受信息">发布、接受信息</h4>
<p>使用如下AT指令即可</p>
<pre><code class="language-bash">AT+MQTTPUB=&lt;LinkID&gt;,&lt;"topic"&gt;,&lt;"data"&gt;,&lt;qos&gt;,&lt;retain&gt;
</code></pre>
<h1 id="四结合stm32主机控制esp01s从机与巴法云进行数据上传">四、结合STM32（主机）控制ESP01S（从机）与巴法云进行数据上传</h1>
<p>测试完成之后，我们就可以搭配着STM32来通过串口进行自动化的MQTT连接了。具体思路如下：</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.04486191578819444" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-02 15:13">2025-03-02 15:12</span>&nbsp;
<a href="https://www.cnblogs.com/Vsonic12138">笑眯眯办大事</a>&nbsp;
阅读(<span id="post_view_count">8</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18746050" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18746050);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18746050', targetLink: 'https://www.cnblogs.com/Vsonic12138/p/18746050', title: 'ESP AT指令使用记录' })">举报</a>
</div>
        