
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xingrenh/p/18942223" title="发布于 2025-06-22 10:02">
    <span role="heading" aria-level="2">Claude Code 初体验 - Windows</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        <img src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622100029139-1561400597.png" alt="Claude Code 初体验 - Windows" class="desc_img">
        本文记录了在 Windows 系统搭建 Claude Code 的使用环境的实践过程。Cursor：懂代码； Claude：懂电脑（=懂代码+系统级电脑操作）；Cursor：写代码； Claude：写代码 -&gt; 配环境 -&gt; 跑流程。Claude 具有系统级操作能力：文件系统操作、包管理、版本控制、脚本执行 等ubuntu系统级的能力，它“会用电脑”，不只是“懂代码”。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p><strong>1. 前言</strong></p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622093326524-489307867.png" class="lazyload"></p>
<p>Cursor 和 Claude Code 都是编程神器，它们的主要区别是什么呢？</p>
<p>Cursor 主要对不同的AI模型进行整合，提供友好的代码编辑体验，包括OpenAI 的 GPT 系列、Google&nbsp;的Gemini系列、Anthropic 的 Claude 系列等。</p>
<p>假如使用 Claude系列模型，</p>
<p>Cursor需要把数据在 Cursor服务器绕一圈，然后到达Anthropic服务器；</p>
<p>但Claude Code 数据直接达到自家的Anthropic服务器，没有拦截，没有预处理，没有后处理。</p>
<p>既然Cursor中也能使用 Claude模型，为什么还要去麻烦搭建Claude Code 的专有环境来使用呢？</p>
<p>因为Claude 更系统、更宏观，在复杂场景具有更强的整合处理能力：</p>
<p><strong>Cursor：懂代码；Claude：懂电脑（=懂代码+系统级电脑操作）</strong></p>
<p><strong>Cursor：写代码；Claude：写代码 -&gt; 配环境 -&gt; 跑流程</strong></p>
<p><strong>Claude 具有系统级操作能力：文件系统操作、包管理、版本控制、脚本执行 等ubuntu系统级的所有能力，它“会用电脑”，不只是“懂代码”。</strong></p>
<p>由于 Claude Code 不支持在 Windows 中直接使用，因此需要以 ubuntu 作为代理来使用。配置的操作步骤比Cursor麻烦很多。</p>
<p>依据 &nbsp;Claude Code官方文档：Intro to Claude - Anthropic&nbsp;，实操过程记录如下。</p>
<hr>
<p><strong>2. 安装 VSCode</strong></p>
<p>从官网下载vs code 并安装：<a href="https://code.visualstudio.com/download#" target="_blank" rel="noopener nofollow">https://code.visualstudio.com/download#</a></p>
<p>然后 vs code 中安装扩展： WSL 、 Claude Code for VSCode</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622093125777-782621032.png" class="lazyload"></p>
<hr>
<p><strong>3. 安装 Ubuntu</strong></p>
<p>启用WSL</p>
<p>确保电脑的虚拟化已经启用：</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622093405682-532186699.png" class="lazyload"></p>
<p>安装 wsl :</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622093416639-2051943755.png" class="lazyload"></p>
<p>关闭所有VPN网络（一般关闭后无法正常访问谷歌）， 然后以管理员身份 打开 PowerShell ，执行命令：wsl –install ，该命令会安装 Ubuntu 应用，安装成功后会弹出欢迎窗口:</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622093438942-944979762.png" class="lazyload"></p>
<p>关闭这个窗口，然后从 开始菜单中，输入 ubuntu 找到对应的应用启动：</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622093452629-414137719.png" class="lazyload"></p>
<hr>
<p><strong>4. 启动 Ubuntu</strong></p>
<p>首次启动ubuntu后，看到的是命令交互窗口：</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622093510611-869322889.png" class="lazyload"></p>
<p>根据提示，输入一组新的账号、密码，输入完后按 Enter即可。</p>
<p>注意：输入密码时屏幕上不会有任何显示（没有星号，光标也不动），这是正常的。</p>
<hr>
<p><strong>5. 更新 Ubuntu</strong></p>
<p>依次执行以下命令：</p>
<blockquote>
<p>sudo apt update &amp;&amp; sudo apt upgrade -y</p>
</blockquote>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622093645253-189429704.png" class="lazyload"></p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622093652637-460010608.png" class="lazyload"></p>
<blockquote>
<p>curl -fsSL <a href="https://deb.nodesource.com/setup_lts.x" target="_blank" rel="noopener nofollow">https://deb.nodesource.com/setup_lts.x</a> | sudo -E bash –</p>
</blockquote>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622093719499-1839782851.png" class="lazyload"></p>
<blockquote>
<p>sudo apt-get install -y nodejs</p>
</blockquote>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622093805511-294816711.png" class="lazyload"></p>
<p>验证安装是否成功，看到版本号表示成功：</p>
<blockquote>
<p>node -v</p>
</blockquote>
<blockquote>
<p>npm -v</p>
</blockquote>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622093916066-1810666266.png" class="lazyload"></p>
<hr>
<p><strong>6. 在 Ubuntu 安装 Claude Code</strong></p>
<p>依次执行以下命令：</p>
<blockquote>
<p>sudo npm install -g @anthropic-ai/claude-code</p>
</blockquote>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622094003035-627498871.png" class="lazyload"></p>
<p>added 3 packages in 9s 表示成功安装，检测一下安装的版本</p>
<blockquote>
<p>claude --version</p>
</blockquote>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622094033016-1990779793.png" class="lazyload"></p>
<p>同时，把 npm 更新到最新版本:</p>
<blockquote>
<p>sudo npm install -g npm@latest</p>
</blockquote>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622094106140-862977778.png" class="lazyload"></p>
<hr>
<p><strong>7. 在 Ubuntu 启动 Claude Code</strong></p>
<p>使用命令 claude 直接启动，</p>
<p>启动发生了错误：</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622094237041-1826336090.png" class="lazyload"></p>
<p>如果遇到这个错误，表示网络不可用。此时我们需要配置 ubuntu 的网络：</p>
<p>启动VPN网络，&nbsp;并设置为 允许局域网连接 ：</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622095827213-169296628.png" class="lazyload"></p>
<p>然后再次启动 claude， 看到成功了，通过键盘上下键选择喜欢的主题，然后回车确认：</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622094415405-1272820897.png" class="lazyload"></p>
<p>然后默认会自动弹出网页，如下图：</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622094430793-1918387647.png" class="lazyload"></p>
<p>如果不能自动弹出，则把下图第一个红色框选位置的链接拷贝到网页打开会看到上图。</p>
<p>(注意：这个网页能够正常显示认证码的前提是，在这个浏览器已经在VPN模式下成功登录了anthropic 官方网站并已购买付费服务)。</p>
<p>将地址拷贝出来粘贴到下图命令位置中，回车后看到提示登陆成功“Login successful”：</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622094514987-436476233.png" class="lazyload"></p>
<p>然后通过快捷键 Ctl+C （如果不行，就操作2次）恢复到正常命令模式：</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622094548442-145812508.png" class="lazyload"></p>
<p>然后设置永久代理，执行以下命令：</p>
<blockquote>
<p>sed -i '/resolv.conf/d' ~/.bashrc<br>
&nbsp; &nbsp; sed -i '/https_proxy/d' ~/.bashrc<br>
&nbsp; &nbsp; sed -i '/http_proxy/d' ~/.bashrc<br>
&nbsp; &nbsp; sed -i '/all_proxy/d' ~/.bashrc<br>
&nbsp; &nbsp; echo "export hostip=$(ip route | grep default | awk '{print $3}')" &gt;&gt; ~/.bashrc<br>
&nbsp; &nbsp; echo "export https_proxy="<a href="http://$" target="_blank">http://$</a>{hostip}:7890"" &gt;&gt; ~/.bashrc<br>
&nbsp; &nbsp; echo "export http_proxy="<a href="http://$" target="_blank">http://$</a>{hostip}:7890"" &gt;&gt; ~/.bashrc<br>
&nbsp; &nbsp; echo "export all_proxy="socks5://${hostip}:7890"" &gt;&gt; ~/.bashrc</p>
</blockquote>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622094638163-2023315206.png" class="lazyload"></p>
<hr>
<p><strong>8. 在 Ubuntu 创建 VSCode 启动入口</strong></p>
<p>为了在 ubuntu 可以通过命令 vscode 直接打开 windows系统安装的 vscode ,需要执行以下命令：</p>
<p>清理掉所有失败的别名配置：</p>
<blockquote>
<p>sed -i '/alias code=/d' ~/.bashrc</p>
</blockquote>
<p>创建一个名为&nbsp;vscode&nbsp;的“快捷方式”:</p>
<blockquote>
<p>ln -s "/mnt/c/Users/wanbi/AppData/Local/Programs/Microsoft VS Code/bin/code" ~/.npm-global/bin/vscode</p>
</blockquote>
<p>验证“快捷方式”是否创建成功：</p>
<blockquote>
<p>ls -l ~/.npm-global/bin/vscode</p>
</blockquote>
<p>用新的命令启动 VS Code：</p>
<blockquote>
<p>vscode .</p>
</blockquote>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622094759442-1773008103.png" class="lazyload"></p>
<hr>
<p><strong>9. 在 VSCode 安装 WSL</strong></p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622094815386-561068916.png" class="lazyload"></p>
<hr>
<p><strong>10. 完整启动步骤</strong></p>
<p>10.1. 启用VPN网络（确保可以正常访问谷歌）；</p>
<p>10.2. 打开&nbsp;Ubuntu 终端；</p>
<p>10.3. cd&nbsp;到项目文件夹 (cd &nbsp;/mnt/d/test/pro1)，它对应到windows系统的D:\test\pro1，注意： cd &nbsp;/mnt/d/test/pro1 命令中盘符d一定要小写，否则ubuntu找不到路径；</p>
<p>10.4. 运行命令：&nbsp;vscode .</p>
<p>此时我们看到 vscode 以一种特殊的模式打开了，左下角会显示蓝色标记 “WSL:Ubuntu”:</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622094839711-565677851.png" class="lazyload"></p>
<p>10.5. 再次安装 Claude Code for VSCode</p>
<p>但是此时，我们刚才在 windows环境下手动直接启动vscode的时候，看到已经安装好的插件，此时发生了变化，多了按钮 “Install In WSL:Ubuntu”,因为 vscode 对于通过WSL扩展进来的ubuntu环境进行了隔离，他们互不干扰，属于不同的环境，我们点击它安装即可。</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622094857159-472022524.png" class="lazyload"></p>
<p>10.6. 启动 Claude Code</p>
<p>这时候，我们在代码文件右上角看到了图标按钮 “Run Claude Code”：</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622094915263-830533406.png" class="lazyload"><br>
<img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622094935146-1840543296.png" class="lazyload"></p>
<p>然后在红色框框位置，就可以对它施号发令了。</p>
<hr>
<p><strong>11. 初体验 Claude Code</strong></p>
<p>在一个空项目中，对于需求“<strong>帮我实现一个登陆功能，要界面美观大方活泼</strong>“，分别用 Claude Code 和 Cursor来实现。</p>
<p><strong>11.1. Claude Code</strong><br>
新建一个空的WPF项目，目录位于C:\Users\wanbi\source\repos\WpfApp7，<br>
然后启动 ubuntu ：</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622095018094-2123804175.png" class="lazyload"></p>
<p>通过命令 进入该项目目录，然后启动vscode:</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622095037685-1928805376.png" class="lazyload"></p>
<p>在VSCode中，对它说一句 “<strong>帮我实现一个登陆功能，要界面美观大方活泼</strong>“，然后它的处理结果演示（右侧是ClaudeCode的处理过程）：</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622095112227-705591347.png" class="lazyload"></p>
<p>在VS中看到的可视化效果如下：</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622095127844-1177736642.png" class="lazyload"></p>
<p>编译结果：在不干预任何代码的情况下，连续出了4个错误，才成功跑起来：</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622095145293-1058782324.gif" class="lazyload"></p>
<p><strong>与预期的差异：</strong></p>
<p>整个安装过程比使用Cursor复杂相当的多，本来预想的是对于一个空项目，它可以完全无误地、创造性地有更多发挥的空间，可以一次性运行成功，但是连续出错4次，并且运行后的功能细节差很多，不能拖动，没有实现边角透明，录入提示连基本的对齐都没做到，甚至没有一个可以点击的登陆按钮，对于4次犯错，其实问题比较基础，但是每次它都调整的比较慢，用时比较久。比起整个复杂的部署过程，还是有些失望的。</p>
<p><strong>11.2. Cursor</strong></p>
<p>相同的命令让Cursor来实现：“帮我实现一个登陆功能，要界面美观大方活泼“（右侧是Cursor的处理过程）：</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622095213375-864041818.png" class="lazyload"><br>
<img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622095226682-316437687.png" class="lazyload"></p>
<p>结果：启动前出错2次，启动后出错1次，窗口可拖拽，实现的功能包含了更多的细节。</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1040413/202506/1040413-20250622095255047-692826657.gif" class="lazyload"></p>
<p>​</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-06-22 10:03">2025-06-22 10:02</span>&nbsp;
<a href="https://www.cnblogs.com/xingrenh">行人--</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18942223);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18942223', targetLink: 'https://www.cnblogs.com/xingrenh/p/18942223', title: 'Claude Code 初体验 - Windows' })">举报</a>
</div>
        