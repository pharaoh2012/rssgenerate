
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ayuday/p/18898519" title="发布于 2025-05-27 14:12">
    <span role="heading" aria-level="2">algolia使用配置教程-为SSG静态站增加algolia搜索功能</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        要构建SSG静态站点时，一般为了方便增加algolia搜索框，但这里algolia配置使用时用很多的坑，折腾了我好几天，网上没有一个可用的教程。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>要构建SSG静态站点时，一般为了方便增加algolia搜索框，但这里algolia配置使用时用很多的坑，折腾了我好几天，网上没有一个可用的教程。<br>
自己弄了几天，终于搞明白里面的道道了，现在分享出来给大家，避免踩坑。<br>
前面注册的就不用了。</p>
<p>比如：用的docusaurus、vitepress构建SSG静态站点，安装algolia依赖的，都会有algolia的设置。此处不讲这些简单的。<br>
先看效果图：<br>
<img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527134517304-143112412.png" alt="image" loading="lazy"></p>
<h2 id="algolia设置步骤">algolia设置步骤</h2>
<ul>
<li>docusaurus、vitepress设置appid、key、抓取配置等</li>
<li>algolia新建app</li>
<li>创建爬虫</li>
<li>设置索引</li>
</ul>
<h2 id="实操说明">实操说明</h2>
<p>下面以我自构建的一个<a href="https://gulpjs.uihtm.com" title="gulp文档" target="_blank" rel="noopener nofollow">gulp文档</a>静态站点：<a href="https://gulpjs.uihtm.com" target="_blank" rel="noopener nofollow">https://gulpjs.uihtm.com</a> 为演示，一步步怎么设置完成的。</p>
<h2 id="静态站配置algolia密钥索引名appid">静态站配置algolia密钥、索引名、appid</h2>
<p>本站点是使用docusaurus来构建静态站点的，在<code>docusaurus.config.js</code>配置文件里有一个设置algolia的<code>appId</code>、<code>apiKey</code>、<code>indexName</code><br>
<img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527131310206-1360146990.png" alt="image" loading="lazy"></p>
<pre><code>algolia: {
      appId: 'XQC8CUNYC9',
      apiKey: '1fe23b551c6d578e296aeb91ef858c2e',
      indexName: 'deploy-gulpjs',
      contextualSearch: true,
      searchParameters: {
        facetFilters: ['language:zh-CN']
      }
    }
</code></pre>
<p>这里的<code>appId</code>、<code>apiKey</code>、<code>indexName</code>对应的是algolia后台：<a href="https://dashboard.algolia.com/" target="_blank" rel="noopener nofollow">https://dashboard.algolia.com/</a> 面板里的。<br>
先在后台创建应用才能得到appid、apikey，</p>
<h3 id="创建应用">创建应用</h3>
<p><img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527132016688-654023617.png" alt="image" loading="lazy"></p>
<p>选择地域区，随便选一个</p>
<p><img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527132114292-2011917703.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527132148833-700695463.png" alt="image" loading="lazy"></p>
<p>创建完点击应用就可以对相应应用设置</p>
<p><img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527131601459-2120648623.png" alt="image" loading="lazy"></p>
<h3 id="apikey在这里search-api-key">apikey在这里：<code>Search API Key</code></h3>
<p><img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527131647134-1139517445.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527131703110-1735913989.png" alt="image" loading="lazy"></p>
<h2 id="algolia-索引index创建">algolia 索引index创建</h2>
<p>点击这里的serach就会到index页面，</p>
<p><img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527132424374-1234819523.png" alt="image" loading="lazy"></p>
<p>默认索引里的，<code>records</code>，<code>record size</code>是空的0，点击<code>event data</code>进去，再点<code>Crawler</code>爬取设置</p>
<p><img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527132745300-422293633.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527132856582-1190724479.png" alt="image" loading="lazy"></p>
<h2 id="设置爬虫">设置爬虫</h2>
<p>创建爬虫，爬虫可以创建多个的，其实只需要一个就够了。到时验证域名，点击爬虫名称，进入爬取设置</p>
<p><img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527133154703-953369517.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527133005570-1905783243.png" alt="image" loading="lazy"></p>
<p>点击<code>Resume crawling</code> 会自动爬取域名里的网址，爬取前可以设置，爬取的开始域名，最有url数和爬取周期</p>
<p><img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527133415231-1439038150.png" alt="image" loading="lazy"></p>
<p>这里就是爬取完的显示，这是有爬取完成的url数量，url里的记录数，</p>
<hr>
<p><strong>注意这里</strong>的Indices,</p>
<ul>
<li>这里有个名称为：<code>deploy-gulpjs</code>，的索引名。是填到静态站点配置里的，</li>
<li>索引是可以有多个</li>
<li>如果没设置edtor，爬取出来的索引是随机名，后面可以重命名</li>
<li>注意索引有没有records记录</li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527133300972-1725362639.png" alt="image" loading="lazy"></p>
<p>在爬取过程，有一个deploy-gulpjs.tmp的名称，在爬完后自动消失。</p>
<p><img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527134230086-1680446645.jpg" alt="image" loading="lazy"></p>
<h2 id="自定义爬虫设置">自定义爬虫设置</h2>
<p>在这里点击<code>editor</code>,可以设置测试爬取内容等配置。<br>
<img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527135843381-1576734498.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527135744332-1191629512.png" alt="image" loading="lazy"></p>
<p>可以编辑里面的json参数设置爬取。代码里的<code>indexName: "deploy-gulpjs"</code>,就是我设置爬取后生成的索引名称，还有一点是站点语言，一般</p>
<pre><code>new Crawler({
  appId: "xxxxxx",
  indexPrefix: "",
  rateLimit: 8,
  maxUrls: null,
  schedule: "on the 12 day of the month",
  startUrls: ["https://gulpjs.uihtm.com"],
  renderJavaScript: false,
  sitemaps: ["https://gulpjs.uihtm.com/sitemap.xml"],
  ignoreCanonicalTo: true,
  discoveryPatterns: ["https://gulpjs.uihtm.com/**"],
  actions: [
    {
      indexName: "deploy-gulpjs",
      pathsToMatch: ["https://gulpjs.uihtm.com/**"],
      recordExtractor: ({ $, helpers }) =&gt; {
        const lvl0 =
          $(
            ".menu__link.menu__link--sublist.menu__link--active, .navbar__item.navbar__link--active",
          )
            .last()
            .text() || "Documentation";

        const records = helpers.docsearch({
          recordProps: {
            lvl0: {
              selectors: "",
              defaultValue: "gulpjs",
            },
            lvl1: ["header h1", "article h1"],
            lvl2: "article h2",
            lvl3: "article h3",
            lvl4: "article h4",
            lvl5: "article h5, article td:first-child",
            lvl6: "article h6",
            content: "article p, article li, article td:last-child",
          },
          aggregateContent: true,
          recordVersion: "v3",
        });
        // 设置中文
        records.forEach((record) =&gt; {
          record.lang = "zh-CN";
        });
        return records;
      },
    },
  ],
  safetyChecks: { beforeIndexPublishing: { maxLostRecordsPercentage: 30 } },
  initialIndexSettings: {
    deployGulpjs: {
      attributesForFaceting: [
        "type",
        "lang",
        "language",
        "version",
        "docusaurus_tag",
      ],
      attributesToRetrieve: [
        "hierarchy",
        "content",
        "anchor",
        "url",
        "url_without_anchor",
        "type",
      ],
      attributesToHighlight: ["hierarchy", "content"],
      attributesToSnippet: ["content:10"],
      camelCaseAttributes: ["hierarchy", "content"],
      searchableAttributes: [
        "unordered(hierarchy.lvl0)",
        "unordered(hierarchy.lvl1)",
        "unordered(hierarchy.lvl2)",
        "unordered(hierarchy.lvl3)",
        "unordered(hierarchy.lvl4)",
        "unordered(hierarchy.lvl5)",
        "unordered(hierarchy.lvl6)",
        "content",
      ],
      distinct: true,
      attributeForDistinct: "url",
      customRanking: [
        "desc(weight.pageRank)",
        "desc(weight.level)",
        "asc(weight.position)",
      ],
      ranking: [
        "words",
        "filters",
        "typo",
        "attribute",
        "proximity",
        "exact",
        "custom",
      ],
      highlightPreTag: '&lt;span class="algolia-docsearch-suggestion--highlight"&gt;',
      highlightPostTag: "&lt;/span&gt;",
      minWordSizefor1Typo: 3,
      minWordSizefor2Typos: 7,
      allowTyposOnNumericTokens: false,
      minProximity: 1,
      ignorePlurals: true,
      advancedSyntax: true,
      attributeCriteriaComputedByMinProximity: true,
      removeWordsIfNoResults: "allOptional",
    },
  },
  apiKey: "xxxxxxx",
});
</code></pre>
<p>看你的静态站点html是设置什么语言，<code>lang="zh-CN"</code>,那对应要json参数设置爬取<br>
<img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527140224826-165719033.png" alt="image" loading="lazy"></p>
<pre><code>// 设置中文
records.forEach((record) =&gt; {
  record.lang = "zh-CN";
});
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527140351631-1247193897.png" alt="image" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527140410263-1104450219.png" alt="image" loading="lazy"></p>
<h2 id="重点索引设置">重点，索引设置</h2>
<p>索引设置里的<code>Searchable attributes</code> 、<code>Facets</code>、<code>Language</code><br>
<img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527140540380-1665323386.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527140659819-1089809545.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527140651266-1203006731.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527140800777-65278679.png" alt="image" loading="lazy"></p>
<p>最后有这样的数据出来就大功告成了。<br>
<img src="https://img2024.cnblogs.com/blog/356003/202505/356003-20250527140900000-1539135372.png" alt="image" loading="lazy"></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.5054854946331019" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-27 14:12">2025-05-27 14:12</span>&nbsp;
<a href="https://www.cnblogs.com/ayuday">ayuday</a>&nbsp;
阅读(<span id="post_view_count">40</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18898519);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18898519', targetLink: 'https://www.cnblogs.com/ayuday/p/18898519', title: 'algolia使用配置教程-为SSG静态站增加algolia搜索功能' })">举报</a>
</div>
        