
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xtdhb/p/18663761/asmile-orm" title="发布于 2025-01-11 11:11">
    <span role="heading" aria-level="2">ASmile-ORM “蝇”量级数据库框架介绍及示例</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>简单、易上手、高效、实用、灵活的 ORM 框架，代码友好，开源、易扩展；</p>
<p>nuget： Install-Package ASmile.ORM</p>
<p>目前支持，SQLIte 、SQLServer、MySql、Oracle 数据库；</p>
<p>不做铺垫，直接上示例，</p>
<p><strong>首先，创建数据库对象：　　</strong></p>
<div class="cnblogs_code">
<pre>DBContext db = <span style="color: rgba(0, 0, 255, 1)">new</span> DBContextDebug(EmDbType.SQLServer, <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Server=.;Database=asmile-examples;Trusted_Connection=True;</span><span style="color: rgba(128, 0, 0, 1)">"</span>);　</pre>
</div>
<p>&nbsp;</p>
<p><strong>新增&nbsp; 1， 使用代码生成器生成的 实体类新增</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">var</span> r =<span style="color: rgba(0, 0, 0, 1)">
db.Insert(</span><span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Test01
{
    ID </span>= <span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">,
    Name </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">张三</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
    Age </span>= <span style="color: rgba(128, 0, 128, 1)">19</span><span style="color: rgba(0, 0, 0, 1)">,
    Birthday </span>= <span style="color: rgba(0, 0, 255, 1)">new</span> DateTime(<span style="color: rgba(128, 0, 128, 1)">1999</span>, <span style="color: rgba(128, 0, 128, 1)">9</span>, <span style="color: rgba(128, 0, 128, 1)">9</span><span style="color: rgba(0, 0, 0, 1)">),
    Balance </span>= <span style="color: rgba(128, 0, 128, 1)">8765.43m</span><span style="color: rgba(0, 0, 0, 1)">,
    Remark </span>= <span style="color: rgba(128, 0, 0, 1)">""</span><span style="color: rgba(0, 0, 0, 1)">
});
PrintLog($</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">新增完成，\nSqlContent:\n{r.SqlContent}</span><span style="color: rgba(128, 0, 0, 1)">"</span>);</pre>
</div>
<p>&nbsp;</p>
<p>控制台结果（仅调试时使用）：</p>
<p><img src="https://img2024.cnblogs.com/blog/367544/202501/367544-20250110104904918-1444869848.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>&nbsp;<strong>新增 2 ，使用匿名对象</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">var</span> r =<span style="color: rgba(0, 0, 0, 1)">
db.Insert(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Test01</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
</span><span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)">
{
    ID </span>= <span style="color: rgba(128, 0, 128, 1)">2</span><span style="color: rgba(0, 0, 0, 1)">,
    Name </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">李四</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
    Age </span>= <span style="color: rgba(128, 0, 128, 1)">19</span><span style="color: rgba(0, 0, 0, 1)">,
    Birthday </span>= <span style="color: rgba(0, 0, 255, 1)">new</span> DateTime(<span style="color: rgba(128, 0, 128, 1)">1990</span>, <span style="color: rgba(128, 0, 128, 1)">5</span>, <span style="color: rgba(128, 0, 128, 1)">5</span><span style="color: rgba(0, 0, 0, 1)">),
    Balance </span>= <span style="color: rgba(128, 0, 128, 1)">9000</span><span style="color: rgba(0, 0, 0, 1)">,
    AddTime </span>=<span style="color: rgba(0, 0, 0, 1)"> DateTime.Now,
    Remark </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">匿名对象新增</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
});
PrintLog($</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">新增完成，\nSqlContent:\n{r.SqlContent}</span><span style="color: rgba(128, 0, 0, 1)">"</span>);</pre>
</div>
<p>&nbsp;</p>
<p><img src="https://img2024.cnblogs.com/blog/367544/202501/367544-20250110105336456-554689178.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p><strong>&nbsp;新增 3 ，只对指定字段进行赋值，其它保持数据默认值，如果匿名对象或者实体类对象未对字段属性赋值，则会忽略该字段</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">var</span> r =<span style="color: rgba(0, 0, 0, 1)">
db.Insert(
</span><span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Test01
{
    ID </span>= <span style="color: rgba(128, 0, 128, 1)">3</span><span style="color: rgba(0, 0, 0, 1)">,
    Name </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">王五</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">Age = 19,</span>
    Birthday = <span style="color: rgba(0, 0, 255, 1)">new</span> DateTime(<span style="color: rgba(128, 0, 128, 1)">1990</span>, <span style="color: rgba(128, 0, 128, 1)">5</span>, <span style="color: rgba(128, 0, 128, 1)">5</span><span style="color: rgba(0, 0, 0, 1)">),
    Balance </span>= <span style="color: rgba(128, 0, 128, 1)">9000</span><span style="color: rgba(0, 0, 0, 1)">,
    AddTime </span>=<span style="color: rgba(0, 0, 0, 1)"> DateTime.Now,
    Remark </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">年龄未赋值</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
});
PrintLog($</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">新增完成，\nSqlContent:\n{r.SqlContent}</span><span style="color: rgba(128, 0, 0, 1)">"</span>);</pre>
</div>
<p>&nbsp;</p>
<p><img src="https://img2024.cnblogs.com/blog/367544/202501/367544-20250110105845485-712451119.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/367544/202501/367544-20250110110004670-793265258.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p><strong>新增 4 ，批量新增，目前批量新增的效率仅对 Sqlserver 与 MySql 有效，且非空字段必须赋值</strong></p>
<div class="cnblogs_code">
<pre>List&lt;Test01&gt; addList = <span style="color: rgba(0, 0, 255, 1)">new</span> List&lt;Test01&gt;<span style="color: rgba(0, 0, 0, 1)">();
</span><span style="color: rgba(0, 0, 255, 1)">for</span> (<span style="color: rgba(0, 0, 255, 1)">int</span> i = <span style="color: rgba(128, 0, 128, 1)">0</span>; i &lt; <span style="color: rgba(128, 0, 128, 1)">20</span>; i++<span style="color: rgba(0, 0, 0, 1)">)
{
    addList.Add(</span><span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Test01
    {
        ID </span>= <span style="color: rgba(128, 0, 128, 1)">4</span> +<span style="color: rgba(0, 0, 0, 1)"> i,
        Name </span>= $<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Name {i + 1}</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
        Age </span>= <span style="color: rgba(128, 0, 128, 1)">22</span><span style="color: rgba(0, 0, 0, 1)">,
        Birthday </span>= <span style="color: rgba(0, 0, 255, 1)">new</span> DateTime(<span style="color: rgba(128, 0, 128, 1)">2000</span>, <span style="color: rgba(128, 0, 128, 1)">8</span>, <span style="color: rgba(128, 0, 128, 1)">8</span><span style="color: rgba(0, 0, 0, 1)">),
        Balance </span>= <span style="color: rgba(128, 0, 128, 1)">1999.56m</span><span style="color: rgba(0, 0, 0, 1)">,
        AddTime </span>=<span style="color: rgba(0, 0, 0, 1)"> DateTime.Now,
        Remark </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">批量新增</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
    });
}
db.InsertBulk(addList);
PrintLog($</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">批量新增完成</span><span style="color: rgba(128, 0, 0, 1)">"</span>);</pre>
</div>
<p>&nbsp;</p>
<p><img src="https://img2024.cnblogs.com/blog/367544/202501/367544-20250110111330654-1391444062.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p><strong>修改 1 ，实体对象，主键更新</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">将 ID = 5 的 姓名 该为 刘德华</span>
<span style="color: rgba(0, 0, 255, 1)">var</span> r =<span style="color: rgba(0, 0, 0, 1)">
db.Update(</span><span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Test01
{
    ID </span>= <span style="color: rgba(128, 0, 128, 1)">5</span><span style="color: rgba(0, 0, 0, 1)">,
    Name </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">刘德华</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
    Remark </span>= <span style="color: rgba(128, 0, 0, 1)">""</span><span style="color: rgba(0, 0, 0, 1)">
});
PrintLog($</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">修改完成，\nSqlContent:\n{r.SqlContent}</span><span style="color: rgba(128, 0, 0, 1)">"</span>);</pre>
</div>
<p>&nbsp;</p>
<p><img src="https://img2024.cnblogs.com/blog/367544/202501/367544-20250110111652588-87592489.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p><strong>修改 2，通过 lamda表达式条件修改</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">通过 lamda表达式修改，</span>
<span style="color: rgba(0, 0, 255, 1)">var</span> r =<span style="color: rgba(0, 0, 0, 1)">
db.Update(
</span><span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Test01
{
    Balance </span>= <span style="color: rgba(128, 0, 128, 1)">500</span><span style="color: rgba(0, 0, 0, 1)">,
    Name </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">刘玄德</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
    Remark </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">lamda修改</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
}, s </span>=&gt; s.Name == <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Name 3</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
PrintLog($</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">修改完成，\nSqlContent:\n{r.SqlContent}</span><span style="color: rgba(128, 0, 0, 1)">"</span>);</pre>
</div>
<p>&nbsp;</p>
<p><img src="https://img2024.cnblogs.com/blog/367544/202501/367544-20250110112647788-1083464086.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p><strong>修改 3 ，SQL文本赋值方式更新</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">SQL文本赋值方式更新</span>
<span style="color: rgba(0, 0, 255, 1)">var</span> r =<span style="color: rgba(0, 0, 0, 1)">
db.UpdateByExpr</span>&lt;Test01&gt;(s =&gt; s.Age &lt; <span style="color: rgba(128, 0, 128, 1)">20</span><span style="color: rgba(0, 0, 0, 1)">,
</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Balance = Balance + 250</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
);
PrintLog($</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">修改完成，\nSqlContent:\n{r.SqlContent}</span><span style="color: rgba(128, 0, 0, 1)">"</span>);</pre>
</div>
<p>&nbsp;</p>
<p><img src="https://img2024.cnblogs.com/blog/367544/202501/367544-20250110113330149-1621317697.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p><strong>&nbsp;删除 1 ，按实体类，主键删除</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">按实体类主键删除</span>
<span style="color: rgba(0, 0, 255, 1)">var</span> r =<span style="color: rgba(0, 0, 0, 1)">
db.Delete(</span><span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Test01 
{ 
    ID </span>= <span style="color: rgba(128, 0, 128, 1)">7</span><span style="color: rgba(0, 0, 0, 1)">
});
PrintLog($</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">删除完成，\nSqlContent:\n{r.SqlContent}</span><span style="color: rgba(128, 0, 0, 1)">"</span>);</pre>
</div>
<p>&nbsp;<img src="https://img2024.cnblogs.com/blog/367544/202501/367544-20250110115144321-1168774710.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p><strong>&nbsp;删除 2 ，按 lamda 表示条件删除</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">使用lamda表达式条件删除</span>
<span style="color: rgba(0, 0, 255, 1)">var</span> r =<span style="color: rgba(0, 0, 0, 1)">
db.Delete</span>&lt;Test01&gt;(s=&gt;s.Name == <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Name 10</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
PrintLog($</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">删除完成，\nSqlContent:\n{r.SqlContent}</span><span style="color: rgba(128, 0, 0, 1)">"</span>);</pre>
</div>
<p>&nbsp;<img src="https://img2024.cnblogs.com/blog/367544/202501/367544-20250110115441013-1366123261.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p><strong>查询 1&nbsp; ，lamda 表达式，查询首行记录，返回实体对象</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> lamda 表达式 查询首行数据</span>
<span style="color: rgba(0, 0, 255, 1)">var</span> r = db.Query&lt;Test01&gt;(s =&gt; s.ID == <span style="color: rgba(128, 0, 128, 1)">5</span><span style="color: rgba(0, 0, 0, 1)">);
</span><span style="color: rgba(0, 0, 255, 1)">var</span> m =<span style="color: rgba(0, 0, 0, 1)"> r.ToEntity();
PrintLog($</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">查询完成，\nSqlContent:\n{r.SqlContent}</span><span style="color: rgba(128, 0, 0, 1)">"</span>);</pre>
</div>
<p>&nbsp;</p>
<p><img src="https://img2024.cnblogs.com/blog/367544/202501/367544-20250110120636725-1653219138.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p><strong>&nbsp;查询 2 ，lamda 表达式 查询列表</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> lamda 表达式 查询列表</span>
<span style="color: rgba(0, 0, 255, 1)">var</span> r = db.Query&lt;Test01&gt;(s =&gt; s.WEx_Like(s.Name, <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Name%</span><span style="color: rgba(128, 0, 0, 1)">"</span>) &amp;&amp; s.ID &lt; <span style="color: rgba(128, 0, 128, 1)">16</span><span style="color: rgba(0, 0, 0, 1)">);
</span><span style="color: rgba(0, 0, 255, 1)">var</span> m =<span style="color: rgba(0, 0, 0, 1)"> r.ToList();
PrintLog($</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">查询完成，\nSqlContent:\n{r.SqlContent}</span><span style="color: rgba(128, 0, 0, 1)">"</span>);</pre>
</div>
<p>&nbsp;<img src="https://img2024.cnblogs.com/blog/367544/202501/367544-20250110121145108-150488310.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p><strong>&nbsp;查询 3，Query对象 灵活查询</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Query对象 灵活查询</span>
<span style="color: rgba(0, 0, 255, 1)">var</span> query = db.CreateQuery&lt;Test01&gt;<span style="color: rgba(0, 0, 0, 1)">();
</span><span style="color: rgba(0, 0, 255, 1)">string</span> name = <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">name%</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;
</span><span style="color: rgba(0, 0, 255, 1)">if</span> (name != <span style="color: rgba(128, 0, 0, 1)">""</span><span style="color: rgba(0, 0, 0, 1)">)
{
    query.WhereAnd(s </span>=&gt; s.WEx_Like(s.Name, $<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">{name}</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">));
}
</span><span style="color: rgba(0, 0, 255, 1)">var</span> r =<span style="color: rgba(0, 0, 0, 1)"> db.Query(query);
</span><span style="color: rgba(0, 0, 255, 1)">var</span> m =<span style="color: rgba(0, 0, 0, 1)"> r.ToList();
PrintLog($</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">查询完成，\nSqlContent:\n{r.SqlContent}</span><span style="color: rgba(128, 0, 0, 1)">"</span>);</pre>
</div>
<p><img src="https://img2024.cnblogs.com/blog/367544/202501/367544-20250110122042958-1592670253.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p><strong>&nbsp;查询 4 ，使用 Query 委托对象 灵活查询</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 使用 Query 委托对象 灵活查询</span>
<span style="color: rgba(0, 0, 255, 1)">string</span> name = <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">name%</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;
</span><span style="color: rgba(0, 0, 255, 1)">var</span> r = db.Query&lt;Test01&gt;(query =&gt;<span style="color: rgba(0, 0, 0, 1)">
{
    </span><span style="color: rgba(0, 0, 255, 1)">if</span> (name != <span style="color: rgba(128, 0, 0, 1)">""</span><span style="color: rgba(0, 0, 0, 1)">)
    {
        query.WhereAnd(s </span>=&gt; s.WEx_Like(s.Name, $<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">{name}</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">));
    }
});
</span><span style="color: rgba(0, 0, 255, 1)">var</span> m =<span style="color: rgba(0, 0, 0, 1)"> r.ToList();
PrintLog($</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">查询完成，\nSqlContent:\n{r.SqlContent}</span><span style="color: rgba(128, 0, 0, 1)">"</span>);</pre>
</div>
<p>&nbsp;</p>
<p><strong>查询 5 ，分页查询，与上述查询方法相同，赋值 参数 PageNo 与 PageSize&nbsp;</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 分页查询</span>
<span style="color: rgba(0, 0, 255, 1)">string</span> name = <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">name%</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;
</span><span style="color: rgba(0, 0, 255, 1)">var</span> r = db.Query&lt;Test01&gt;(query =&gt;<span style="color: rgba(0, 0, 0, 1)">
{
    query.PageNo </span>= <span style="color: rgba(128, 0, 128, 1)">2</span><span style="color: rgba(0, 0, 0, 1)">;
    query.PageSize </span>= <span style="color: rgba(128, 0, 128, 1)">6</span><span style="color: rgba(0, 0, 0, 1)">;
    </span><span style="color: rgba(0, 0, 255, 1)">if</span> (name != <span style="color: rgba(128, 0, 0, 1)">""</span><span style="color: rgba(0, 0, 0, 1)">)
    {
        query.WhereAnd(s </span>=&gt; s.WEx_Like(s.Name, $<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">{name}</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">));
    }
    query.OrderBy(s </span>=&gt; s.Name); <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 姓名排序</span>
<span style="color: rgba(0, 0, 0, 1)">});
</span><span style="color: rgba(0, 0, 255, 1)">var</span> m =<span style="color: rgba(0, 0, 0, 1)"> r.ToList();
PrintLog($</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">查询完成，\nSqlContent:\n{r.SqlContent}</span><span style="color: rgba(128, 0, 0, 1)">"</span>);</pre>
</div>
<p><img src="https://img2024.cnblogs.com/blog/367544/202501/367544-20250110122715547-911287904.png" alt="" loading="lazy"></p>
<p>如果是首页，sqlserver 会 简化sql 语句，如：</p>
<p><img src="https://img2024.cnblogs.com/blog/367544/202501/367544-20250110122842611-1455631512.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p><strong>查询 6&nbsp;使用sql文本查询（内置 sql 工具）</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">使用sql文本查询（内置 sql 工具）</span>
<span style="color: rgba(0, 0, 255, 1)">var</span> r =<span style="color: rgba(0, 0, 0, 1)">
db.Query(sql </span>=&gt;<span style="color: rgba(0, 0, 0, 1)">
{
    </span><span style="color: rgba(0, 0, 255, 1)">int</span> minAge = <span style="color: rgba(128, 0, 128, 1)">15</span><span style="color: rgba(0, 0, 0, 1)">;
    </span><span style="color: rgba(0, 0, 255, 1)">int</span> maxAge = <span style="color: rgba(128, 0, 128, 1)">22</span><span style="color: rgba(0, 0, 0, 1)">;
    sql.AddSQLParam(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">select * from Test01 where age &gt; {0} and age &lt; {1}</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, minAge, maxAge);
});
</span><span style="color: rgba(0, 0, 255, 1)">var</span> rData = r.ToDataTable();  <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 返回 DataTable 格式</span>
<span style="color: rgba(0, 0, 255, 1)">var</span> rList = r.ToList&lt;Test01&gt;(); <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 这里 List 泛型可以使用任何类            </span>
PrintLog($<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">查询完成，\nSqlContent:\n{r.SqlContent}</span><span style="color: rgba(128, 0, 0, 1)">"</span>);</pre>
</div>
<p>&nbsp;&nbsp;</p>
<p><strong>存储过程 1 ，匿名对象参数</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">存储过程查询</span>
List&lt;Test01&gt; rList =<span style="color: rgba(0, 0, 0, 1)">
da.ExecProcedure(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">P_Query01</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)">
{
    Name </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">张三</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
}).ToList</span>&lt;Test01&gt;<span style="color: rgba(0, 0, 0, 1)">();

PrintLog($</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">存储过程执行完成</span><span style="color: rgba(128, 0, 0, 1)">"</span>);</pre>
</div>
<p>&nbsp;</p>
<p><strong>存储过程 2， 执行</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">存储过程执行</span>
da.ExecProcedure(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">P_Exec01</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)">
{
    Name </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">张三</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
}).ExecProc();

PrintLog($</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">存储过程执行完成</span><span style="color: rgba(128, 0, 0, 1)">"</span>);</pre>
</div>
<p>&nbsp;</p>
<p><strong>存储过程 3， 执行带返回参数的过程</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">-- 带输出参数的过程<br>Create</span> <span style="color: rgba(0, 0, 255, 1)">Proc</span><span style="color: rgba(0, 0, 0, 1)"> P_Exec02
    </span><span style="color: rgba(0, 128, 0, 1)">@Name</span> <span style="color: rgba(0, 0, 255, 1)">varchar</span>(<span style="color: rgba(128, 0, 0, 1); font-weight: bold">20</span><span style="color: rgba(0, 0, 0, 1)">),
    </span><span style="color: rgba(0, 128, 0, 1)">@OutMsg</span> <span style="color: rgba(0, 0, 255, 1)">varchar</span>(<span style="color: rgba(128, 0, 0, 1); font-weight: bold">50</span>)  <span style="color: rgba(128, 128, 128, 1)">=</span> <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)"> out
</span><span style="color: rgba(0, 0, 255, 1)">as</span>

<span style="color: rgba(0, 0, 255, 1)">delete</span> <span style="color: rgba(0, 0, 255, 1)">from</span> Test01 <span style="color: rgba(0, 0, 255, 1)">where</span> <span style="color: rgba(255, 0, 0, 1)">[</span><span style="color: rgba(255, 0, 0, 1)">Name</span><span style="color: rgba(255, 0, 0, 1)">]</span> <span style="color: rgba(128, 128, 128, 1)">=</span> <span style="color: rgba(0, 128, 0, 1)">@Name</span>

<span style="color: rgba(0, 0, 255, 1)">set</span> <span style="color: rgba(0, 128, 0, 1)">@OutMsg</span> <span style="color: rgba(128, 128, 128, 1)">=</span> <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">删除了，</span><span style="color: rgba(255, 0, 0, 1)">'</span> <span style="color: rgba(128, 128, 128, 1)">+</span> <span style="color: rgba(0, 128, 0, 1)">@Name</span></pre>
</div>
<p>&nbsp;</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 定义输出参数对象</span>
<span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> OutData
{
    </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">string</span> OutMsg { <span style="color: rgba(0, 0, 255, 1)">set</span>; <span style="color: rgba(0, 0, 255, 1)">get</span>; } <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 输出参数</span>
}</pre>
</div>
<p>&nbsp;</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(128, 128, 128, 1)">//</span><span style="color: rgba(0, 0, 0, 1)">执行存储过程并返回输出参数值
</span><span style="color: rgba(255, 0, 255, 1)">var</span> retProc <span style="color: rgba(128, 128, 128, 1)">=</span><span style="color: rgba(0, 0, 0, 1)">
da.ExecProcedure("P_Exec02", new
{
    Name </span><span style="color: rgba(128, 128, 128, 1)">=</span><span style="color: rgba(0, 0, 0, 1)"> "张三"
});
OutData outData </span><span style="color: rgba(128, 128, 128, 1)">=</span><span style="color: rgba(0, 0, 0, 1)"> new OutData();
retProc.ExecProc(outData);
</span><span style="color: rgba(255, 0, 255, 1)">var</span> msg <span style="color: rgba(128, 128, 128, 1)">=</span><span style="color: rgba(0, 0, 0, 1)"> outData.OutMsg;

PrintLog($"存储过程执行完成, {msg}");</span></pre>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><strong>存储过程 4，执行存储过程并返回输出参数值，匿名对象返回</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(128, 128, 128, 1)">//</span><span style="color: rgba(0, 0, 0, 1)"> 执行存储过程并返回输出参数值，匿名对象返回
</span><span style="color: rgba(255, 0, 255, 1)">var</span> retProc <span style="color: rgba(128, 128, 128, 1)">=</span><span style="color: rgba(0, 0, 0, 1)">
da.ExecProcedure("P_Exec02", new
{
    Name </span><span style="color: rgba(128, 128, 128, 1)">=</span><span style="color: rgba(0, 0, 0, 1)"> "张三"
});
retProc.ExecProc(new { OutMsg </span><span style="color: rgba(128, 128, 128, 1)">=</span><span style="color: rgba(0, 0, 0, 1)"> "" });
</span><span style="color: rgba(255, 0, 255, 1)">var</span> msg <span style="color: rgba(128, 128, 128, 1)">=</span><span style="color: rgba(0, 0, 0, 1)"> retProc.OutObject.OutMsg;

PrintLog($"存储过程执行完成, {msg}");</span></pre>
</div>
<p>&nbsp;</p>
<p>&nbsp;项目地址：<a href="https://gitee.com/zhcun/asmile-orm" target="_blank" rel="noopener nofollow">https://gitee.com/zhcun/asmile-orm</a></p>
<p>&nbsp;</p>
<div class="cnblogs_code">&nbsp;</div>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="1.17470966115625" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-11 22:07">2025-01-11 11:11</span>&nbsp;
<a href="https://www.cnblogs.com/xtdhb">老张一笑</a>&nbsp;
阅读(<span id="post_view_count">5</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18663761" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18663761);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18663761', targetLink: 'https://www.cnblogs.com/xtdhb/p/18663761/asmile-orm', title: 'ASmile-ORM “蝇”量级数据库框架介绍及示例' })">举报</a>
</div>
        