
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/kitty-38/p/18677480" title="发布于 2025-01-17 19:14">
    <span role="heading" aria-level="2">JS — 对象、数组、函数</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        <img src="https://img2024.cnblogs.com/blog/3588703/202501/3588703-20250117180002145-981671875.png" alt="JS — 对象、数组、函数" class="desc_img">
        JS的对象、数组、函数ψ(._. )&gt;
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<blockquote>
<h1 id="对象">对象</h1>
</blockquote>
<ul>
<li>
<h3 id="英文名称object">英文名称：<code>Object</code>。</h3>
</li>
<li>
<h3 id="类似于c中的mappython中的字典由keyvalue对构成">类似于C++中的map，python中的字典，由<code>key:value</code>对构成。</h3>
</li>
<li>
<h3 id="value可以是变量数组对象函数等"><code>value</code>可以是变量、数组、对象、函数等。</h3>
</li>
<li>
<h3 id="函数定义中的this用来引用该函数的拥有者">函数定义中的<code>this</code>用来引用该函数的“拥有者”。</h3>
</li>
</ul>
<p>例如：<br>
test.js中的内容为：</p>
<pre><code>let person = {  // 定义一个对象person
    name:'kitty',  // 对象的元素可以是变量
    age:18,
    money:0,
    friends:['Alice', 'Bob', 'Lucy'],  // 对象的元素可以是数组
    clothes:{  // 对象的元素可以是对象
        color:"pink",
        price: 100,
    },
    add_money:function(x){  // 对象的元素可以是函数
        this.money += x;  // this:返回拥有这个函数的对象，这里指person
    }
}

function main(){
    console.log(person);
}

export {
    main
}
</code></pre>
<p>test.html中的内容为：</p>
<pre><code>&lt;body&gt;
    &lt;script type="module"&gt;
        import {main} from "/test/test.js";

        main();
    &lt;/script&gt;
&lt;/body&gt;
</code></pre>
<br>
<blockquote>
<h2 id="对象属性与函数的调用方式访问对象的值的方式">对象属性与函数的调用方式（访问对象的值的方式）：</h2>
</blockquote>
<h3 id="1-点的方式personnamepersonadd_money">1. 点的方式，<code>person.name</code>、<code>person.add_money()</code></h3>
<h3 id="2-中括号的方式personnamepersonadd_money">2. 中括号的方式，<code>person["name"]</code>、<code>person["add_money"]()</code></h3>
<p>例如：<br>
test.js中的内容为：</p>
<pre><code>let person = {  // 定义一个对象person
    name:'kitty',  // 对象的元素可以是变量
    age:18,
    money:0,
    friends:['Alice', 'Bob', 'Lucy'],  // 对象的元素可以是数组
    clothes:{  // 对象的元素可以是对象
        color:'pink',
        price: 100,
    },
    add_money:function(x){  // 对象的元素可以是函数
        this.money += x;  // this:返回拥有这个函数的对象，这里指person
    }
}

function main(){
    // 1. 点的方式，类似于c++中的class类
    console.log(person.name, person.age, person.clothes); // kitty 18 {color:'pink',price: 100}

    // delete person.name;  // 删除对象的属性
    
    console.log(person.money);  // 0
    person.add_money(10);  // 调用函数
    console.log(person.money);  // 10


    // 2. 中括号的方式
    console.log(person["money"]);  // 10

    person["add_money"](10);  // 调用函数
    console.log(person["money"]);  // 20

}

export {
    main
}
</code></pre>
<p>test.html中的内容为：</p>
<pre><code>&lt;body&gt;
    &lt;script type="module"&gt;
        import {main} from "/test/test.js";

        main();
    &lt;/script&gt;
&lt;/body&gt;
</code></pre>
<br>
<blockquote>
<h1 id="数组">数组</h1>
</blockquote>
<ul>
<li>
<h3 id="数组是一种特殊的对象用中括号--表示">数组是一种特殊的对象，用中括号[  ]表示。</h3>
</li>
<li>
<h3 id="类似于c中的数组但是数组中的元素类型可以不同">类似于C++中的数组，但是数组中的元素类型可以不同。</h3>
</li>
<li>
<h3 id="数组中的元素可以是变量数组对象函数">数组中的元素可以是变量、数组、对象、函数。</h3>
</li>
</ul>
<p>例如：<br>
test.js中的内容为：</p>
<pre><code>let a = [1, 2, "a", "kitty", [3, 4, 5]];

let b = [
    1,  // 变量
    "kitty",  // 变量
    ['a', 'b', 3],  // 数组
    function () {  // 函数
        console.log("Hello World");
    },
    { name: "kitty", age: 18 }  // 对象
];

let c = [];  // 定义一个空数组
let d = {};  // 定义一个空对象（没有任何成员的对象）

let main = function() {
    console.log(a);
    console.log(b);
    console.log(c);
    console.log(d);
}

export {
    main
}
</code></pre>
<p>test.html中的内容为：</p>
<pre><code>&lt;body&gt;
    &lt;script type="module"&gt;
        import {main} from "/test/test.js";

        main();
    &lt;/script&gt;
&lt;/body&gt;
</code></pre>
<br>
<blockquote>
<h2 id="访问数组中的元素">访问数组中的元素：</h2>
</blockquote>
<ul>
<li>
<h3 id="通过下标从0开始访问">通过下标，从0开始访问。</h3>
</li>
</ul>
<p>例如：<br>
test.js中的内容为：</p>
<pre><code>let a = [1, 2, "a", "kitty", [3, 4, 5]];

let b = [
    1,  // 变量
    "kitty",  // 变量
    ['a', 'b', 3],  // 数组
    function () {  // 函数
        console.log("Hello World");
        return 0;  // 如果不加这句话，执行函数后返回undefined
    },
    { name: "kitty", age: 18 }  // 对象
];

let main = function() {
    console.log(b[0]);  // 访问数组b[]的第0个元素，返回 1
    console.log(b[2][1]);  // 返回 b
    console.log(b[3]);  // 返回函数的定义： ƒ () { console.log("Hello World");return 0; }
    console.log(b[3]());  // 执行函数，返回 Hello World   0
    console.log(b[4].name)  // 返回对象的元素，返回 kitty 
    // 或者 console.log(b[4]['name']);

    b[0] = function() {  // 给b的第0个元素重新赋值为函数
        console.log("哈哈哈");
    }

    b[0]();  // 执行函数b[0]，返回 哈哈哈

}

export {
    main
}
</code></pre>
<p>test.html中的内容为：</p>
<pre><code>&lt;body&gt;
    &lt;script type="module"&gt;
        import {main} from "/test/test.js";

        main();
    &lt;/script&gt;
&lt;/body&gt;
</code></pre>
<br>
<blockquote>
<h2 id="数组的常用属性和函数">数组的常用属性和函数：</h2>
</blockquote>
<ul>
<li>
<h3 id="属性length返回数组长度注意length是属性不是函数因此调用的时候不要加">属性length：返回数组长度。注意length是属性，不是函数，因此调用的时候不要加()</h3>
</li>
<li>
<h3 id="函数push向数组末尾添加元素">函数push()：向数组末尾添加元素</h3>
</li>
<li>
<h3 id="函数pop删除数组末尾的元素">函数pop()：删除数组末尾的元素</h3>
</li>
<li>
<h3 id="函数splicea-b删除从a开始的b个元素">函数splice(a, b)：删除从a开始的b个元素</h3>
</li>
<li>
<h3 id="函数sort将整个数组从小到大排序">函数sort()：将整个数组从小到大排序</h3>
</li>
<li>
<h3 id="自定义比较函数arraysortcmp函数cmp输入两个需要比较的元素返回一个实数负数表示第一个参数小于第二个参数0表示相等正数表示大于">自定义比较函数：array.sort(cmp)，函数cmp输入两个需要比较的元素，返回一个实数，负数表示第一个参数小于第二个参数，0表示相等，正数表示大于。</h3>
</li>
</ul>
<p>test.js中的内容为：</p>
<pre><code>let a = [5, 4, 1, 3, 2];

let b = [
    1,  // 变量
    "kitty",  // 变量
    ['a', 'b', 3],  // 数组
    function () {  // 函数
        console.log("Hello World");
        return 0;  // 如果不加这句话，执行函数后返回undefined
    },
    { name: "kitty", age: 18 }  // 对象
];

let main = function() {
    console.log(b.length);  // 返回数组的长度，返回5

    b.push(5);  // 在末尾添加新的元素
    console.log(b);

    b.pop();  // 删除最后一个元素
    console.log(b);

    a.sort();  // 排序（从小到大），返回[1, 2, 3, 4, 5]
    console.log(a);

    a.sort(function(a, b) {  // 逆序（从大到小），返回[5, 4, 3, 2, 1]
        return b - a;
    })
    console.log(a);

    a.splice(1, 2);  // 删除从下标1开始的2个元素，返回[5, 2, 1]
    console.log(a);

}

export {
    main
}
</code></pre>
<p>test.html中的内容为：</p>
<pre><code>&lt;body&gt;
    &lt;script type="module"&gt;
        import {main} from "/test/test.js";

        main();
    &lt;/script&gt;
&lt;/body&gt;
</code></pre>
<br>
<blockquote>
<h1 id="函数">函数</h1>
</blockquote>
<ul>
<li>
<h3 id="函数是用对象来实现的">函数是用对象来实现的。</h3>
</li>
<li>
<h3 id="函数与c中的函数类似">函数与C++中的函数类似。</h3>
</li>
</ul>
<br>
<blockquote>
<h2 id="函数的定义方式">函数的定义方式：</h2>
</blockquote>
<p>例如：<br>
test.js中的内容为：</p>
<pre><code>// 第一种定义方式
function add(a, b) {
    return a + b;
}

let main = function() {
    console.log(add(3, 4));
}

export {
    main
}
</code></pre>
<p>test.js中的内容为：</p>
<pre><code>// 第二种定义方式
let add = function(a, b) {
    return a + b;
}

let main = function() {
    console.log(add(3, 4));
}

export {
    main
}
</code></pre>
<p>test.js中的内容为：</p>
<pre><code>// 第三种定义方式
let add = (a, b) =&gt; {
    return a + b;
}

let main = function() {
    console.log(add(3, 4));
}

export {
    main
}
</code></pre>
<p>test.html中的内容为：</p>
<pre><code>&lt;body&gt;
    &lt;script type="module"&gt;
        import {main} from "/test/test.js";

        main();
    &lt;/script&gt;
&lt;/body&gt;
</code></pre>
<br>
<blockquote>
<h2 id="返回值">返回值：</h2>
</blockquote>
<ul>
<li>
<h3 id="如果未定义返回值则返回undefined">如果未定义返回值，则返回undefined。</h3>
</li>
</ul>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="1.2025429238541667" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-17 19:25">2025-01-17 19:14</span>&nbsp;
<a href="https://www.cnblogs.com/kitty-38">kitty又困了</a>&nbsp;
阅读(<span id="post_view_count">2</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18677480" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18677480);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18677480', targetLink: 'https://www.cnblogs.com/kitty-38/p/18677480', title: 'JS — 对象、数组、函数' })">举报</a>
</div>
        