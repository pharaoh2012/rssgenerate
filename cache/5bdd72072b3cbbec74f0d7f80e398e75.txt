
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wang_yb/p/18814147" title="发布于 2025-04-08 10:32">
    <span role="heading" aria-level="2">『Plotly实战指南』--直方图绘制与应用</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>在数据科学的世界里，<strong>直方图</strong>是一种不可或缺的可视化工具，它以其简洁而直观的方式，揭示了数据的内在规律，为数据分析和决策提供了有力支持。</p>
<p>它能够帮助我们快速识别异常值，并为统计推断提供有力支撑。</p>
<p>无论是对称的<strong>钟型分布</strong>，还是偏态的<strong>长尾分布</strong>，直方图都能清晰地呈现出来。</p>
<p>通过观察直方图的形状，我们可以了解数据的集中趋势和离散程度，从而为进一步的分析奠定基础。</p>
<p>本文从基础绘制到分析应用展开，介绍<strong>直方图</strong>的概念、代码实现以及实战场景。</p>
<h1 id="1-与柱状图区别">1. 与柱状图区别</h1>
<p><strong>直方图</strong>是一种数据分布的图形化表示，通过矩形的高度反映数据的频数或频率。</p>
<p>它与<strong>柱状图</strong>有着本质区别：<strong>柱状图</strong>用于对比离散类别，而<strong>直方图</strong>则用于展示连续变量的分布。</p>
<p><strong>直方图</strong>的核心作用在于观察分布的形状，例如对称性、偏态性、峰态以及长尾特征。</p>
<p>通过这些特征，我们可以识别数据的集中趋势和离散程度，为进一步的分析提供线索。</p>
<h1 id="2-绘制方式">2. 绘制方式</h1>
<p>在绘制<strong>直方图</strong>时，<strong>数据分组</strong>和<strong>区间设置</strong>至关重要。</p>
<p><code>Plotly</code> 提供了自动分组功能，它会根据数据的规模和分布特征，自动选择合适的分组策略。</p>
<p>然而，在某些情况下，我们可能需要手动设置分组。通过<code>Plotly</code>的<code>xbins</code>参数，我们可以自定义区间边界或数量。</p>
<p>在选择分组策略时，我们需要平衡区间数量与数据特征的保留，如果区间过宽，可能会丢失重要信息；而如果区间过窄，又会导致直方图过于复杂，难以解读。</p>
<p>接下来，我们将通过代码实现一个简单的直方图。</p>
<p>首先，我们生成一个正态分布的数据集，然后绘制一个单变量直方图。</p>
<pre><code class="language-python">import plotly.express as px
import numpy as np

# 数据准备：生成正态分布数据
data = np.random.normal(loc=0, scale=1, size=1000)

# 绘制直方图
fig = px.histogram(
    data,
    x=data,
    histnorm="probability",
    title="正态分布直方图",
    labels={"x": "数值", "y": "概率"},
)

# 样式优化
fig.update_layout(
    xaxis_title="数值",
    yaxis_title="概率",
    bargap=0.2,  # 条形之间的间隔
    bargroupgap=0.1,  # 组内条形的间隔
)

fig.show()
</code></pre>
<p>绘制<strong>直方图</strong>的<strong>核心参数</strong>包括：</p>
<ul>
<li><code>x</code>：指定数据列</li>
<li><code>histnorm</code>：频数统计模式，可以选择<code>count</code>（频数）、<code>probability</code>（概率）或<code>density</code>（密度）</li>
<li><code>autobinx</code>：是否启用自动分组。</li>
<li><code>opacity</code>：透明度调整，尤其在多数据集对比时，透明度可以增强可读性。</li>
</ul>
<p>运行结果如下：</p>
<p><img src="https://img2024.cnblogs.com/blog/83005/202504/83005-20250408102603137-2016269511.png" alt="" loading="lazy"></p>
<h1 id="3-分析应用">3. 分析应用</h1>
<h2 id="31-分析数据分布特征">3.1. 分析数据分布特征</h2>
<p><strong>直方图</strong>不仅可以展示数据的分布形态，还可以帮助我们进行深入的分析。</p>
<p>通过对直方图的形态进行解读，我们可以判断数据的对称性、峰态以及长尾特征。</p>
<p>例如，<strong>钟型分布</strong>通常是对称的，而<strong>偏态分布</strong>则会呈现出明显的倾斜。</p>
<p>此外，<strong>直方图</strong>还可以帮助我们<strong>识别异常值</strong>，结合<strong>箱体图</strong>或 <code>IQR</code> 方法，我们可以标记出潜在的离群点。</p>
<p>在某些情况下，<strong>直方图</strong>的形状还可以辅助我们进行<strong>参数估计</strong>。比如，如果数据呈现出正态分布的形态，我们可以考虑使用正态分布模型进行拟合。</p>
<h2 id="32-不同数据集对比">3.2. 不同数据集对比</h2>
<p>在实际应用中，我们常常需要<strong>对比多个数据集</strong>的分布特征。</p>
<p>例如，我们可以使用多痕迹直方图（<code>overlay</code> 模式）进行叠加显示对比，或者使用分组直方图（<code>group</code> 参数）将不同数据集并排排列。</p>
<p>以下是一个实战案例，展示如何在 <strong>A/B 测试</strong>中对比用户行为分布：</p>
<pre><code class="language-python">import plotly.graph_objects as go

# 数据准备：假设 A 组和 B 组的点击量数据
data_A = np.random.normal(loc=5, scale=2, size=1000)
data_B = np.random.normal(loc=7, scale=2.5, size=1000)

# 绘制多痕迹直方图
fig = go.Figure(
    data=[
        go.Histogram(x=data_A, histnorm="probability", name="A 组"),
        go.Histogram(x=data_B, histnorm="probability", name="B 组"),
    ]
)

# 设置布局
fig.update_layout(
    title="A/B 测试用户点击量分布对比",
    xaxis_title="点击量",
    yaxis_title="概率",
    bargap=0.2,
    bargroupgap=0.1,
    barmode="overlay",  # 设置为叠加模式
)

fig.show()
</code></pre>
<p><strong>叠加模式</strong>的显示效果如下：</p>
<p><img src="https://img2024.cnblogs.com/blog/83005/202504/83005-20250408102603116-173855589.png" alt="" loading="lazy"></p>
<p>将代码中的<code>barmode="overlay"</code>改为<code>barmode="group"</code>，就会以分组模式显示。</p>
<p><img src="https://img2024.cnblogs.com/blog/83005/202504/83005-20250408102603127-1065176848.png" alt="" loading="lazy"></p>
<h1 id="4-总结">4. 总结</h1>
<p>总得来说，<strong>直方图</strong>在探索性数据分析（EDA）中具有不可替代的作用，它能够快速建立数据直觉，帮助我们发现数据的分布特征和潜在问题。</p>
<p>在实践中，我们建议根据数据规模动态调整分组策略，避免信息丢失或过度拟合。</p>
<p>同时，结合箱线图、核密度估计图（KDE）进行多维验证，可以进一步提升分析的准确性。</p>
<p>在业务报告中，直方图能够直观地传递数据分布规律与组间差异，为决策提供有力支持。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.32359692528935186" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-08 10:32">2025-04-08 10:32</span>&nbsp;
<a href="https://www.cnblogs.com/wang_yb">wang_yb</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18814147" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18814147);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18814147', targetLink: 'https://www.cnblogs.com/wang_yb/p/18814147', title: '『Plotly实战指南』--直方图绘制与应用' })">举报</a>
</div>
        