
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Dr-Harrison-Wells/p/18731013" title="发布于 2025-02-22 16:41">
    <span role="heading" aria-level="2">C#中的关键字@</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="c中的关键字">C#中的@关键字</h1>
<p><code>@</code>作为C#中的特殊字符，在<a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/tokens/verbatim" target="_blank" rel="noopener nofollow">Microsoft文档</a>中定义为Verbatim文本</p>
<blockquote>
<p>Verbatim的解释为完全一致或者逐字逐句，例如verbatim 地引用了一段文字：</p>
<p>“The researcher stated verbatim: ‘The results indicate a significant correlation between variables.’”</p>
</blockquote>
<p>有三种主要的应用场景</p>
<h2 id="1定义verbatim字符串文本">1.定义Verbatim字符串文本</h2>
<pre><code class="language-c#">string filename1 = @"c:\documents\files\u0066.txt";
string filename2 = "c:\\documents\\files\\u0066.txt";

Console.WriteLine(filename1);
Console.WriteLine(filename2);
//输出结果:
//     c:\documents\files\u0066.txt
//     c:\documents\files\u0066.txt
</code></pre>
<p>注意：</p>
<ul>
<li>使用插值字符串时,<code>{</code>和<code>}</code>会优先被<code>$</code>解析</li>
</ul>
<pre><code class="language-c#">string s = "World";
Console.WriteLine($@"Hello, {s}!");
//输出结果
//Hello, World!
</code></pre>
<p>不使用<code>$</code>:</p>
<pre><code class="language-c#">string s = "World";
Console.WriteLine(@"Hello, {s}!");
//输出结果
//Hello, {s}!
</code></pre>
<ul>
<li>在Verbatim字符串使用<code>"</code>，需要使用两个引号，单个使用会解释为字符串结束</li>
</ul>
<pre><code class="language-c#">string s1 = "He said, \"This is the last \u0063hance\x0021\"";
string s2 = @"He said, ""This is the last \u0063hance\x0021""";

Console.WriteLine(s1);
Console.WriteLine(s2);
// 输出结果:
//     He said, "This is the last chance!"
//     He said, "This is the last \u0063hance\x0021"
</code></pre>
<h2 id="2使用c中的同名关键字作为标识符">2.使用C#中的同名关键字作为标识符</h2>
<p>例如，使用<code>for</code>作为数组名称</p>
<pre><code class="language-c#">string[] @for = { "John", "James", "Joan", "Jamie" };
for (int ctr = 0; ctr &lt; @for.Length; ctr++)
{
   Console.WriteLine($"Here is your gift, {@for[ctr]}!");
}
//输出结果:
//     Here is your gift, John!
//     Here is your gift, James!
//     Here is your gift, Joan!
//     Here is your gift, Jamie!
</code></pre>
<h2 id="3解决属性冲突">3.解决属性冲突</h2>
<p>属性是从 <a href="https://learn.microsoft.com/en-us/dotnet/api/system.attribute" target="_blank" rel="noopener nofollow">Attribute</a> 派生的类。其类型名称通常包含后缀 <strong>Attribute</strong>，尽管编译器不强制实施此约定。然后，可以在代码中通过其完整类型名称（例如 <code>[InfoAttribute]</code>或其缩写名称（例如 <code>[Info]</code>）引用该属性。但是，如果两个缩短的属性类型名称相同，并且一个类型名称包含 <strong>Attribute</strong> 后缀，而另一个类型名称不包含，则会发生命名冲突。</p>
<p>例如，下面的代码无法编译，因为编译器无法确定 <code>Info</code> 或 <code>InfoAttribute</code> 属性是否应用于 <code>Example</code> 类。</p>
<pre><code class="language-c#">using System;

[AttributeUsage(AttributeTargets.Class)]
public class Info : Attribute
{
   private string information;

   public Info(string info)
   {
      information = info;
   }
}

[AttributeUsage(AttributeTargets.Method)]
public class InfoAttribute : Attribute
{
   private string information;

   public InfoAttribute(string info)
   {
      information = info;
   }
}

[Info("A simple executable.")] // 编译错误CS1614. Ambiguous Info and InfoAttribute.
//正确写法:使用Info属性 [@Info("A simple executable.")] .使用InfoAttribute属性 [@Info("A simple executable.")]
public class Example
{
   [InfoAttribute("The entry point.")]
   public static void Main()
   {
   }
}
</code></pre>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="3.402684147324074" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-22 16:41">2025-02-22 16:41</span>&nbsp;
<a href="https://www.cnblogs.com/Dr-Harrison-Wells">Dr_Harrison_Wells</a>&nbsp;
阅读(<span id="post_view_count">69</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18731013" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18731013);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18731013', targetLink: 'https://www.cnblogs.com/Dr-Harrison-Wells/p/18731013', title: 'C#中的关键字@' })">举报</a>
</div>
        