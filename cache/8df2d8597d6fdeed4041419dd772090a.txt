
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/taadis/p/18801293/go1024" title="发布于 2025-03-30 22:34">
    <span role="heading" aria-level="2">Go语言实现1024终端游戏-不到400行代码</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<blockquote>
<p>先放源码地址，喜欢看源码翻源码，喜欢看文章的继续看文章</p>
</blockquote>
<p><a href="https://github.com/taadis/go1024" target="_blank" rel="noopener nofollow">https://github.com/taadis/go1024</a> - go1024</p>
<p>使用 go 语言实现的 1024 终端游戏,不到400行代码,代码简洁,以便理解和学习和掌握 go 语言开发.</p>
<h2 id="安装和运行">安装和运行</h2>
<p>要运行这个程序，你需要先安装依赖：</p>
<pre><code>go mod tidy
</code></pre>
<p>然后运行程序即可：</p>
<pre><code>go run main.go
</code></pre>
<p>游戏运行如下:</p>
<pre><code>
     2     0     0     0

     4     2     0     0

     8    32     4     2

    32    16     8    16

Score: 380
请使用方向键操作,按快捷键 Ctrl+C 可退出游戏.

</code></pre>
<h2 id="游戏实现">游戏实现</h2>
<p>当前游戏实现了以下内容:</p>
<ol start="0">
<li>基于 go 语言的跨平台、可移植的终端游戏、包管理</li>
<li>1024游戏的核心逻辑</li>
<li>基于 ANSI 的终端颜色显示</li>
<li>键盘控制</li>
<li>得分计算</li>
<li>游戏结束检测</li>
<li>跨平台兼容性</li>
<li>基本的错误处理</li>
</ol>
<h3 id="随机数生成">随机数生成</h3>
<p>我们使用 <code>rand</code> 来生成随机数。在本游戏中随机数主要有两个作用：</p>
<ol>
<li>随机生成新数字的位置：</li>
</ol>
<pre><code class="language-go">slot := emptySlots[rand.Intn(len(emptySlots))]
</code></pre>
<ol start="2">
<li>随机决定生成2还是4：</li>
</ol>
<pre><code class="language-go">if rand.Float64() &gt; 0.95 {
    value = 4  // 5%的概率生成4
} else {
    value = 2  // 95%的概率生成2
}
</code></pre>
<p>如果不设置随机数种子，每次运行游戏时随机数生成器都会使用相同的默认种子，这样：</p>
<ol>
<li>每次游戏开始时数字出现的位置都会相同</li>
<li>新数字的值（2或4）的出现顺序也会相同</li>
<li>游戏失去了随机性，变得可预测</li>
</ol>
<p>使用当前时间的纳秒数作为种子，可以确保每次运行游戏时都会得到不同的随机序列，使游戏更有趣和不可预测性。</p>
<h3 id="颜色表示">颜色表示</h3>
<p>根据数字的大小返回不同的颜色代码.</p>
<p>我们使用的数字是 ANSI 转义序列中的颜色代码。在终端中，我们使用 <code>\033[</code> 开头的转义序列来控制文本的显示效果。</p>
<p>ANSI 转义序列的颜色代码是有限的，主要分为这几组：</p>
<ol>
<li>基本前景色：30-37</li>
<li>基本背景色：40-47</li>
<li>高亮前景色：90-97</li>
<li>高亮背景色：100-107</li>
</ol>
<p>98、99 和 108 以后的数字并不是标准的 ANSI 颜色代码，不会产生颜色效果。</p>
<p>具体解释：</p>
<ol>
<li><code>\033[</code> 是转义序列的开始标记（ESC 字符）</li>
<li>后面的数字是颜色代码：
<ul>
<li>30-37：基本前景色（文字颜色）
<ul>
<li>31: 红色</li>
<li>32: 绿色</li>
<li>33: 黄色</li>
<li>34: 蓝色</li>
<li>35: 紫色</li>
<li>36: 青色</li>
<li>37: 白色</li>
</ul>
</li>
<li>90-97：高亮前景色
<ul>
<li>90: 亮灰色</li>
<li>91: 亮红色</li>
<li>92: 亮绿色<br>
等等...</li>
</ul>
</li>
</ul>
</li>
</ol>
<p>在代码中：</p>
<pre><code class="language-go">fmt.Printf("\033[%dm%6d\033[0m", color, g.Board[i][j])
</code></pre>
<ul>
<li><code>\033[%dm</code> 设置颜色</li>
<li><code>%6d</code> 显示数字（6位宽度）</li>
<li><code>\033[0m</code> 重置所有属性</li>
</ul>
<p>所以当我们使用 <code>color = 90</code> 时，就会显示亮灰色文字，这在游戏中用来表示空位（值为0的格子）。</p>
<p>如果需要更丰富的颜色，可以使用：</p>
<ol>
<li>24位真彩色：<code>\033[38;2;R;G;Bm</code></li>
<li>256色：<code>\033[38;5;Nm</code>（N是0-255之间的数字）</li>
</ol>
<p>例如：</p>
<pre><code class="language-go">// 24位真彩色（红色）
fmt.Printf("\033[38;2;255;0;0m文本\033[0m")

// 256色（第100号颜色）
fmt.Printf("\033[38;5;100m文本\033[0m")
</code></pre>
<p>但这些高级颜色特性可能不是所有终端都支持，所以在通用程序中一般还是使用基本的 ANSI 颜色代码（30-37, 90-97）。</p>
<h3 id="退出游戏">退出游戏</h3>
<p>退出游戏主要通过监听取消信息来实现</p>
<ol>
<li>添加了 <code>os/signal</code> 和 <code>syscall</code> 包</li>
<li>使用 <code>signal.Notify</code> 来捕获 SIGINT (Ctrl+C) 和 SIGTERM 信号</li>
<li>启动一个 goroutine 来处理信号，收到信号时：
<ul>
<li>关闭键盘监听</li>
<li>退出程序</li>
</ul>
</li>
<li>移除了原有的 Ctrl+C 检查代码</li>
</ol>
<p>这样修改后，无论在程序的任何时刻按下 Ctrl+C，都能正确退出程序。同时也会确保键盘资源被正确释放。</p>
<p>后面改为使用 <code>github.com/eiannone/keyboard</code> 包了，简化逻辑处理.</p>

</div>
<div id="MySignature" role="contentinfo">
    [支持/订阅](https://afdian.com/a/taadis)作者，以获得更多服务.
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.5472074689467593" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-30 23:12">2025-03-30 22:34</span>&nbsp;
<a href="https://www.cnblogs.com/taadis">taadis</a>&nbsp;
阅读(<span id="post_view_count">101</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18801293" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18801293);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18801293', targetLink: 'https://www.cnblogs.com/taadis/p/18801293/go1024', title: 'Go语言实现1024终端游戏-不到400行代码' })">举报</a>
</div>
        