
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lymblog/p/18936489" title="发布于 2025-06-19 14:30">
    <span role="heading" aria-level="2">CURL 命令的用法详解</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<div class="auto-hide-last-sibling-br paragraph-Oc488D paragraph-element br-paragraph-space">CURL（Client URL）是一个强大的命令行工具，用于通过各种网络协议与服务器进行数据传输。它支持 HTTP、HTTPS、FTP、SFTP 等多种协议，广泛应用于 API 测试、数据获取、文件传输等场景。以下是 CURL 命令的详细用法：</div>
<h4 class="header-OdWb_u auto-hide-last-sibling-br">一、基本语法</h4>
<div class="cnblogs_code">
<pre>curl [选项] [URL]</pre>
</div>
<ul class="auto-hide-last-sibling-br">
<li>选项：控制 CURL 的行为（如请求方法、头部信息、认证等）。</li>
<li>URL：目标服务器的地址（需包含协议，如<code>http://example.com</code>）。</li>
</ul>
<h4 class="header-OdWb_u auto-hide-last-sibling-br">二、核心功能与常用选项</h4>
<h5 class="header-OdWb_u auto-hide-last-sibling-br">1. 发送 GET 请求（默认方式）</h5>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)"># 最简单的GET请求
curl https:</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">example.com</span>
<span style="color: rgba(0, 0, 0, 1)">
# 获取详细响应信息（包括头部）
curl </span>-v https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">example.com</span>
<span style="color: rgba(0, 0, 0, 1)">
# 仅获取响应头部
curl </span>-I https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">example.com</span>
<span style="color: rgba(0, 0, 0, 1)">
# 保存响应内容到文件
curl </span>-o response.html https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">example.com</span></pre>
</div>
<h5 class="header-OdWb_u auto-hide-last-sibling-br">2. 发送 POST 请求（提交数据）</h5>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)"># 提交表单数据（表单格式）
curl </span>-X POST https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">example.com/api/submit \</span>
--data <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">name=John&amp;age=30</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">

# 提交JSON数据（需指定Content</span>-<span style="color: rgba(0, 0, 0, 1)">Type）
curl </span>-X POST https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">example.com/api/data \</span>
-H <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Content-Type: application/json</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)"> \
</span>-d <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">{"key": "value", "array": [1, 2, 3]}</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">

# 从文件读取数据并提交
curl </span>-X POST https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">example.com/upload \</span>
-T data.json</pre>
</div>
<h5 class="header-OdWb_u auto-hide-last-sibling-br">3. 请求头部与认证</h5>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)"># 添加自定义请求头
curl </span>-H <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">User-Agent: MyApp/1.0</span><span style="color: rgba(128, 0, 0, 1)">"</span> https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">example.com</span>
<span style="color: rgba(0, 0, 0, 1)">
# 基本认证（用户名:密码）
curl </span>-u username:password https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">example.com/auth</span>
<span style="color: rgba(0, 0, 0, 1)">
# Bearer Token认证
curl </span>-H <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Authorization: Bearer YOUR_TOKEN</span><span style="color: rgba(128, 0, 0, 1)">"</span> https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">example.com/api</span>
<span style="color: rgba(0, 0, 0, 1)">
# 发送Cookie
curl </span>-b <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">session_id=12345</span><span style="color: rgba(128, 0, 0, 1)">"</span> https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">example.com</span></pre>
</div>
<h5 class="header-OdWb_u auto-hide-last-sibling-br">4. 代理与网络控制</h5>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)"># 使用代理服务器
curl </span>-x proxy.example.com:<span style="color: rgba(128, 0, 128, 1)">8080</span> https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">example.com</span>
<span style="color: rgba(0, 0, 0, 1)">
# 设置超时时间（秒）
curl </span>-m <span style="color: rgba(128, 0, 128, 1)">10</span> https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">example.com</span>
<span style="color: rgba(0, 0, 0, 1)">
# 限制带宽（KB</span>/<span style="color: rgba(0, 0, 0, 1)">s）
curl </span>--limit-rate <span style="color: rgba(128, 0, 128, 1)">100</span> https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">example.com/large-file</span></pre>
</div>
<h5 class="header-OdWb_u auto-hide-last-sibling-br">5. 文件上传与下载</h5>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)"># 下载文件并显示进度
curl </span>-# -O https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">example.com/file.zip</span>
<span style="color: rgba(0, 0, 0, 1)">
# 断点续传（已下载文件可继续下载）
curl </span>-C - -O https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">example.com/file.zip</span>
<span style="color: rgba(0, 0, 0, 1)">
# 上传文件到服务器（PUT方法）
curl </span>-X PUT https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">example.com/upload \</span>
-T local-<span style="color: rgba(0, 0, 255, 1)">file</span>.txt</pre>
</div>
<h5 class="header-OdWb_u auto-hide-last-sibling-br">6. 证书与 HTTPS 选项</h5>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)"># 忽略HTTPS证书验证（不安全，仅测试用）
curl </span>-k https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">example.com</span>
<span style="color: rgba(0, 0, 0, 1)">
# 指定客户端证书
curl </span>--cert client.crt --key client.key https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">example.com</span>
<span style="color: rgba(0, 0, 0, 1)">
# 信任CA证书文件
curl </span>--cacert ca.crt https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">example.com</span></pre>
</div>
<h4 class="header-OdWb_u auto-hide-last-sibling-br">三、高级用法与场景示例</h4>
<h5 class="header-OdWb_u auto-hide-last-sibling-br">1. 模拟浏览器行为</h5>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)"># 模拟Chrome浏览器请求
curl </span>-H <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36</span><span style="color: rgba(128, 0, 0, 1)">"</span> https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">example.com</span>
<span style="color: rgba(0, 0, 0, 1)">
# 跟踪重定向（默认跟随3次）
curl </span>-L https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">example.com/redirect</span></pre>
</div>
<h5 class="header-OdWb_u auto-hide-last-sibling-br">2. API 测试与调试</h5>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)"># 测试DELETE API
curl </span>-X DELETE https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">example.com/api/item/123 \</span>
-H <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Authorization: Bearer TOKEN</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">

# 查看请求与响应的详细日志
curl </span>-v https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">example.com/api/endpoint</span></pre>
</div>
<h5 class="header-OdWb_u auto-hide-last-sibling-br">3. 批量请求与脚本化</h5>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)"># 从文本文件读取URL列表并批量请求
</span><span style="color: rgba(0, 0, 255, 1)">cat</span> urls.txt | <span style="color: rgba(0, 0, 255, 1)">while</span> read url; <span style="color: rgba(0, 0, 255, 1)">do</span> curl -s $url | <span style="color: rgba(0, 0, 255, 1)">head</span> -n <span style="color: rgba(128, 0, 128, 1)">10</span>; <span style="color: rgba(0, 0, 255, 1)">done</span><span style="color: rgba(0, 0, 0, 1)">

# 在Shell脚本中使用CURL
#</span>!/bin/<span style="color: rgba(0, 0, 0, 1)">bash
URL</span>=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">https://api.example.com/data</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
TOKEN</span>=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">your_token_here</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">

response</span>=$(curl -s -H <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Authorization: Bearer $TOKEN</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)"> $URL)
</span><span style="color: rgba(0, 0, 255, 1)">echo</span> <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Response: $response</span><span style="color: rgba(128, 0, 0, 1)">"</span></pre>
</div>
<h4 class="header-OdWb_u auto-hide-last-sibling-br">四、常用选项速查表</h4>
<div class="auto-hide-last-sibling-br table-container-FTJPBk">
<table>
<thead>
<tr><th>选项</th><th>描述</th></tr>
</thead>
<tbody>
<tr>
<td><code>-v</code>&nbsp;/&nbsp;<code>--verbose</code></td>
<td>显示详细的通信过程（调试用）</td>
</tr>
<tr>
<td><code>-X</code>&nbsp;/&nbsp;<code>--request</code></td>
<td>指定请求方法（GET/POST/PUT/DELETE 等）</td>
</tr>
<tr>
<td><code>-d</code>&nbsp;/&nbsp;<code>--data</code></td>
<td>发送 POST 数据（表单格式）</td>
</tr>
<tr>
<td><code>-H</code>&nbsp;/&nbsp;<code>--header</code></td>
<td>添加自定义请求头</td>
</tr>
<tr>
<td><code>-u</code>&nbsp;/&nbsp;<code>--user</code></td>
<td>基本认证（用户名：密码）</td>
</tr>
<tr>
<td><code>-o</code>&nbsp;/&nbsp;<code>--output</code></td>
<td>保存响应到文件</td>
</tr>
<tr>
<td><code>-O</code>&nbsp;/&nbsp;<code>--remote-name</code></td>
<td>按远程文件名保存响应</td>
</tr>
<tr>
<td><code>-k</code>&nbsp;/&nbsp;<code>--insecure</code></td>
<td>忽略 HTTPS 证书验证</td>
</tr>
<tr>
<td><code>-x</code>&nbsp;/&nbsp;<code>--proxy</code></td>
<td>使用代理服务器</td>
</tr>
<tr>
<td><code>-m</code>&nbsp;/&nbsp;<code>--max-time</code></td>
<td>设置最大请求时间（秒）</td>
</tr>
</tbody>
</table>
</div>
<h4 class="header-OdWb_u auto-hide-last-sibling-br">五、注意事项</h4>
<ol class="auto-hide-last-sibling-br">
<li>URL 编码：如果参数包含特殊字符（如空格、<code>&amp;</code>、<code>=</code>），需用<code>%20</code>等编码替换，或用单引号包裹参数（如<code>'name=John Doe'</code>）。</li>
<li>安全性：避免在命令中明文写入密码，可通过环境变量（如<code>CURL_USER_PASSWORD</code>）或配置文件传递认证信息。</li>
<li>Windows 系统：部分选项语法需调整（如双引号替代单引号），建议使用 PowerShell 或 Git Bash 运行 CURL。</li>
</ol>
<p>&nbsp;</p>
<div class="auto-hide-last-sibling-br paragraph-Oc488D paragraph-element br-paragraph-space">通过灵活组合上述选项，CURL 可以满足几乎所有网络请求场景。如需更详细的帮助，可运行<code>curl --help</code>或查看<a class="link-U03S2y" href="https://curl.se/docs/" target="_blank" rel="noopener nofollow">官方文档</a>。</div>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-06-19 14:31">2025-06-19 14:30</span>&nbsp;
<a href="https://www.cnblogs.com/lymblog">名曰大神</a>&nbsp;
阅读(<span id="post_view_count">98</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18936489);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18936489', targetLink: 'https://www.cnblogs.com/lymblog/p/18936489', title: 'CURL 命令的用法详解' })">举报</a>
</div>
        