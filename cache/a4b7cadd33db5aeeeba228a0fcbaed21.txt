
		<h2>
			<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/HuangWj/p/18718924" title="发布于 2025-02-16 21:59">
    <span role="heading" aria-level="2">AI+逆向python 3.9+程序</span>
    

</a>

		</h2>
		<div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h1>使用pyinstxtractor.py将程序转换成pyc文件</h1>
<ol>
<li>下载 pyinstxtractor.py：<a href="https://github.com/extremecoders-re/pyinstxtractor" rel="noopener nofollow">extremecoders-re/pyinstxtractor: PyInstaller Extractor</a></li>
<li>将代码和程序放在同一目录</li>
<li>生成pyc文件：<code>python pyinstxtractor.py 软件名</code></li>
</ol>
<h1 id="sr-toc-4">使用 pycdc 工具反编译 pyc 文件，获得源码</h1>
<ol>
<li>下载并编译pycdc：<a href="https://github.com/zrax/pycdc" rel="noopener nofollow">zrax/pycdc: C++ python bytecode disassembler and decompiler</a><ol>
<li>在Windows下使用visual studio+cmake编译（不推荐，反编译代码补全）</li>
<li>在linux下直接使用cmake编译</li>
<li>在Windows的wsl环境下使用cmake编译（推荐，安装少，反编译代码全）</li>
</ol></li>
<li>将生成的程序拷贝到pyc文件目录</li>
<li>反编译pyc文件：pycdc -o py文件名 pyc文件名</li>
<li>如此能获得源码那就最好，就不用往下看了，但高版本python可能会存在问题，例如</li>
<ol>
<li>Unsupported opcode: JUMP_BACKWARD</li>
<li># WARNING: Decompyle incomplete</li>
</ol>
<li>如果出现错误，可以继续往下看，也许会有帮助</li>
</ol>
<h1 id="sr-toc-4">使用 pycdas 工具反编译 pyc 文件，获得汇编代码</h1>
<ol>
<li>编译pycdc还会生成pycdas，将这个程序也拷贝到pyc文件目录</li>
<li>反编译pyc文件成汇编代码：pycdas -o py文件名 pyc文件名</li>
</ol>
<h1 id="sr-toc-4">使用 AI 工具反编译汇编代码，获得源码</h1>
<ol>
<li>将pycdas反编译的汇编代码拷贝到ai对话中，我用的是deepseek，并让其“修复代码”，即可获得源码</li>
<li>代码编译及修复：生成的代码多少还是有点语法问题，但问题不大，很好修复，基本编译一下就出来了，这就需要手动修改一下</li>
<li>源码还会提供注释，虽然不是开发者提供的注释</li>
</ol>
<h2 id="sr-toc-4">参考：</h2>
<ol>
<li><a href="https://www.youtube.com/watch?v=RTsMgC36xMU" rel="noopener nofollow">Decompile Python 3.11 EXE files using pyxtractor and AI (chatgpt blackboxai)! NEW METHOD 2023/2024 - YouTube</a></li>
</ol>
</div>
<div class="clear"></div>

		<p class="postfoot">
			posted on 
<span id="post-date" data-last-update-days="0.004333591146990741" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-16 22:07">2025-02-16 21:59</span>&nbsp;
<a href="https://www.cnblogs.com/HuangWj">widrin</a>&nbsp;
阅读(<span id="post_view_count">2</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18718924" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18718924);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18718924', targetLink: 'https://www.cnblogs.com/HuangWj/p/18718924', title: 'AI+逆向python 3.9+程序' })">举报</a>

		</p>
	