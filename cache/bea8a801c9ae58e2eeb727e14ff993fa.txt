
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/minuhy/p/18811980" title="发布于 2025-04-07 04:21">
    <span role="heading" aria-level="2">【U-Boot】解决U-Boot的“Unknown command 'help' - try 'help'”问题</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="u-boot解决u-boot的unknown-command-help---try-help问题">【U-Boot】解决U-Boot的“Unknown command 'help' - try 'help'”问题</h1>
<h2 id="零起因">零、起因</h2>
<p>最近在玩U-Boot，自己编译U-Boot之后输入<code>help</code>命令发现提示<code>Unknown command 'help' - try 'help'</code>，就此记录解决过程。</p>
<h2 id="壹解决过程">壹、解决过程</h2>
<h3 id="0x00">0x00</h3>
<p>搜索源码，使用<code>grep</code>命令查找弹出这个提示的位置：<br>
<img src="https://img2024.cnblogs.com/blog/2010295/202504/2010295-20250407041552594-2110106219.png" alt="image" loading="lazy"></p>
<p>显示在<code>common/command.c</code>中。</p>
<h3 id="0x01">0x01</h3>
<p>修改<code>common/command.c</code>打印一些调试信息，帮助我更进一步确定问题所在位置:<br>
<img src="https://img2024.cnblogs.com/blog/2010295/202504/2010295-20250407041521213-683272216.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/2010295/202504/2010295-20250407041559999-219549653.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/2010295/202504/2010295-20250407041608879-2096168203.png" alt="image" loading="lazy"></p>
<p>再次运行，发现<code>table_len</code>为0：<br>
<img src="https://img2024.cnblogs.com/blog/2010295/202504/2010295-20250407041618874-187056182.png" alt="image" loading="lazy"></p>
<h3 id="0x02">0x02</h3>
<h4 id="发现问题">发现问题：</h4>
<p>尝试再次修改代码，追溯<code>table_len</code>变量，发现这个<code>ll_entry_count</code>是一个叫链接器的东西：<br>
<img src="https://img2024.cnblogs.com/blog/2010295/202504/2010295-20250407041626026-943969395.png" alt="image" loading="lazy"></p>
<h4 id="相关代码">相关代码：</h4>
<p>1<br>
<img src="https://img2024.cnblogs.com/blog/2010295/202504/2010295-20250407041633461-1757850165.png" alt="image" loading="lazy"></p>
<p><code>##</code>是表示连接两个字符串，例如：有定义<code>#defined a(x,y) x##y</code>，则<code>a(i,j)</code>最终生成为<code>ij</code>。<br>
这里会连接生成<code>_u_boot_list_cmd__start</code>和<code>_u_boot_list_cmd__end</code>，然后大小就是这两个的差值，那么这两个变量又是在哪的呢？</p>
<p>2<br>
<img src="https://img2024.cnblogs.com/blog/2010295/202504/2010295-20250407041640183-1362920568.png" alt="image" loading="lazy"></p>
<p>这段中的<code>_u_boot_list_cmd__start</code>和<code>_u_boot_list_cmd__end</code>是自定义的符号，而<code>.</code>在链接器脚本里代表当前地址，可以用<code>extern</code>关键字声明这两个符号，获得与当前段相关的地址。<br>
在<code>*(SORT(.u_boot_list.cmd.*))</code>中，<code>*()</code>是链接器脚本里的通配符语法，例如：<code>*(pattern)</code>会将所有目标文件中名为<code>pattern</code>的段内容合并到当前段中。<br>
这里的<code>pattern</code>是<code>.u_boot_list.cmd.*</code>，表示会匹配所有以<code>.u_boot_list.cmd.</code>开头的段。<br>
而<code>SORT()</code>是链接器脚本提供的排序函数，它能对匹配的段进行排序（排序的依据通常是段名）。<br>
所以，28行的代码意思是将所有目标文件中符合<code>.u_boot_list.cmd.*</code>模式的段内容收集起来，排序后合并到当前正在定义的段中。</p>
<p>3<br>
<img src="https://img2024.cnblogs.com/blog/2010295/202504/2010295-20250407041648069-1373232009.png" alt="image" loading="lazy"><br>
其中<code>U_BOOT_CMD</code>是所有命令用来注册的宏。</p>
<p><img src="https://img2024.cnblogs.com/blog/2010295/202504/2010295-20250407041655346-1720831359.png" alt="image" loading="lazy"><br>
其中<code>section</code>属性允许开发者把变量或函数放置到自定义的段中。<br>
写好命令相关的代码后用<code>U_BOOT_CMD</code>宏来注册，这样会被统计到对应段中。</p>
<h4 id="调试">调试：</h4>
<p>这样我们声明一下这两个符号，尝试看看这个段的地址是怎样的：<br>
<img src="https://img2024.cnblogs.com/blog/2010295/202504/2010295-20250407041703280-214853655.png" alt="image" loading="lazy"></p>
<p>运行结果：<br>
<img src="https://img2024.cnblogs.com/blog/2010295/202504/2010295-20250407041709432-1359968928.png" alt="image" loading="lazy"></p>
<p>开始地址和结束地址一样，难道是没匹配上？还是没编译进去？</p>
<h3 id="0x03">0x03</h3>
<p>查看<code>help</code>命令的代码：<br>
<img src="https://img2024.cnblogs.com/blog/2010295/202504/2010295-20250407041716632-510121997.png" alt="image" loading="lazy"><br>
有的。</p>
<p>再看镜像中是否被编译进去了：<br>
<img src="https://img2024.cnblogs.com/blog/2010295/202504/2010295-20250407041722083-440715123.png" alt="image" loading="lazy"><br>
有的。</p>
<p>那就是没匹配上咯？或者说是链接器有兼容性问题？</p>
<p>使用<code>arm-none-linux-gnueabi-objdump</code>检查段信息：<br>
<img src="https://img2024.cnblogs.com/blog/2010295/202504/2010295-20250407041731042-1906218183.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/2010295/202504/2010295-20250407041737122-32147163.png" alt="image" loading="lazy"><br>
就是说，编译了……</p>
<p>再看<code>u-boot.map</code>：<br>
<img src="https://img2024.cnblogs.com/blog/2010295/202504/2010295-20250407041743842-1563038953.png" alt="image" loading="lazy"></p>
<p>诶？被<code>_u_boot_list_</code>先匹配去了，后面的<code>_u_boot_list_cmd_</code>和<code>_u_boot_list_env_clbk_</code>都没分到内容！<br>
咋办？</p>
<h3 id="0x04">0x04</h3>
<p>通过搜索命令，我们最终可以大致确认原始脚本位置：<br>
<img src="https://img2024.cnblogs.com/blog/2010295/202504/2010295-20250407041749578-529902079.png" alt="image" loading="lazy"></p>
<p>替换一下位置：<br>
<img src="https://img2024.cnblogs.com/blog/2010295/202504/2010295-20250407041755245-108911429.png" alt="image" loading="lazy"><br>
生成后发现没用，经检查发现是<code>u-boot.lst</code>被重新生成了。</p>
<h3 id="0x05">0x05</h3>
<p>好，上面的<code>u-boot.lst</code>也是生成的，由<code>make_u_boot_list</code>生成：<br>
<img src="https://img2024.cnblogs.com/blog/2010295/202504/2010295-20250407041802193-1844562634.png" alt="image" loading="lazy"></p>
<p>函数在<code>helper.mk</code>中，我们让这个函数失效：<br>
<img src="https://img2024.cnblogs.com/blog/2010295/202504/2010295-20250407041810617-175546069.png" alt="image" loading="lazy"></p>
<p>再次修改<code>u-boot.lst</code>后重新编译，刷写到 SD 卡。</p>
<h3 id="0x05-1">0x05</h3>
<p>成功了！<br>
<img src="https://img2024.cnblogs.com/blog/2010295/202504/2010295-20250407041819666-661894949.png" alt="image" loading="lazy"></p>
<p>晚安，搞到了凌晨四点，明天还有早八 QwQ ~</p>
<h2 id="贰总结">贰、总结</h2>
<p>对于此类问题，<code>grep</code>是一个不错的命令，能快速找到位置，再由那个位置一层一层往上找就能找到问题所在。<br>
第一次接触U-Boot源码，本次找错的过程让我对U-Boot命令相关的部分有了一定了解，自己花点时间写个命令的“Hello world”应该是没问题了。<br>
另外，也是第一次研究<code>.map</code>文件、<code>.lst</code>文件和<code>.lds</code>文件，对链接和文件布局相关的东西都有了一定的了解，下次遇到这个问题不会找好久了，hahahah。<br>
加深了对<code>arm-none-linux-gnueabi-objdump</code>命令的理解，它在本次排错中提供了比较重要的信息。<br>
对U-Boot的编译、镜像制作和刷写更加熟练了。<br>
晚安~ （ 早安！感谢豆包~ ）</p>
<h2 id="叁参考">叁、参考</h2>
<ol>
<li><a href="https://www.doubao.com/thread/w4ea6b9d8ece3d7e9" target="_blank" rel="noopener nofollow">https://www.doubao.com/thread/w4ea6b9d8ece3d7e9</a></li>
<li><a href="https://www.doubao.com/thread/w16f419b17f0e9afe" target="_blank" rel="noopener nofollow">https://www.doubao.com/thread/w16f419b17f0e9afe</a></li>
<li><a href="https://www.doubao.com/thread/w2cd5264f38dd2ff8" target="_blank" rel="noopener nofollow">https://www.doubao.com/thread/w2cd5264f38dd2ff8</a></li>
<li><a href="https://www.doubao.com/thread/w2cd5264f38dd2ff8" target="_blank" rel="noopener nofollow">https://www.doubao.com/thread/w2cd5264f38dd2ff8</a></li>
<li><a href="https://www.doubao.com/thread/w2cd5264f38dd2ff8" target="_blank" rel="noopener nofollow">https://www.doubao.com/thread/w2cd5264f38dd2ff8</a></li>
<li><a href="https://www.doubao.com/thread/wef34dbca2d2d6605" target="_blank" rel="noopener nofollow">https://www.doubao.com/thread/wef34dbca2d2d6605</a></li>
<li><a href="https://www.doubao.com/thread/w7eec8793d6766c13" target="_blank" rel="noopener nofollow">https://www.doubao.com/thread/w7eec8793d6766c13</a></li>
</ol>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.4173309874791667" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-07 04:22">2025-04-07 04:21</span>&nbsp;
<a href="https://www.cnblogs.com/minuhy">清风来叙</a>&nbsp;
阅读(<span id="post_view_count">18</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18811980" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18811980);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18811980', targetLink: 'https://www.cnblogs.com/minuhy/p/18811980', title: '【U-Boot】解决U-Boot的“Unknown command &amp;#39;help&amp;#39; - try &amp;#39;help&amp;#39;”问题' })">举报</a>
</div>
        