
        <div class="postTitle">
            <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/mysticbinary/p/19002611" title="发布于 2025-07-24 14:43">
    <span role="heading" aria-level="2">可以记录IP的网络协议笔记</span>
    

</a>

        </div>
        <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p></p><div class="toc"><div class="toc-container-header">目录</div><ul><li><a href="#背景" rel="noopener nofollow">背景：</a></li><li><a href="#解决方案1http头记录" rel="noopener nofollow">解决方案1——HTTP头记录</a></li><li><a href="#解决方案2proxy-protocol协议" rel="noopener nofollow">解决方案2——proxy protocol协议</a></li><li><a href="#解决方案3加密-tcp-option" rel="noopener nofollow">解决方案3——加密 TCP Option</a></li><li><a href="#总结" rel="noopener nofollow">总结</a></li></ul></div><p></p>
<hr>
<h1 id="背景">背景：</h1>
<ul>
<li>
<p><strong>需求1</strong>——审计日志需要真实IP：<br>
安全审计要求记录访问服务的最终用户或设备的真实来源IP地址。这对于追踪恶意活动、排查问题、满足合规性要求至关重要。</p>
</li>
<li>
<p><strong>需求2</strong>——风控需要真正IP：<br>
一些活动、风险管理都是需要对客户的真实IP进行筛选甄别。</p>
</li>
</ul>
<h1 id="解决方案1http头记录">解决方案1——HTTP头记录</h1>
<p>为了实现上述目标，有一些现成的解决办法，比如在HTTP协议中加入一些参数，这些参数可以记录IP信息，比如：<br>
<code>X-Forwarded-For</code>标头，记录相关源地址信息,<br>
<code>X-Original-To</code>标头，用来携带目的地址的信息。</p>
<p>缺点：</p>
<ol>
<li>
<p>不安全，容易被篡改；</p>
<ul>
<li>头部可被篡改：如果请求在到达可信代理前经过不可信节点，攻击者可伪造 X-Forwarded-For: 1.1.1.1 ；</li>
</ul>
</li>
<li>
<p>遇到代理服务器，相关标头信息容易被篡改、覆盖。</p>
<ul>
<li>代理链中若有一个设备未正确传递该头部，信息即丢失；</li>
</ul>
</li>
</ol>
<p><strong>为什么服务器无法发现真实IP？</strong><br>
以企业WEB服务拓扑图来分析：<br>
<img src="https://img2024.cnblogs.com/blog/1552062/202507/1552062-20250724145141015-307232167.png" alt="image" loading="lazy"></p>
<ol>
<li>
<p>代理行为导致, 如果代理服务器使用覆盖模式（如Nginx），则后台服务器就无法获取到Client的真实IP。</p>
</li>
<li>
<p>代理/负载均衡的普遍性： 现代Web架构中，客户端（浏览器/App）通常不直接连接最终的应用服务器（如Tomcat, Nginx, Apache）。中间会经过<strong>反向代理/负载均衡器</strong> (如Nginx, HAProxy, F5)： 负责SSL终止、负载分发、安全防护等。</p>
<ul>
<li>
<p>Web应用防火墙 (WAF)： 提供额外的安全防护层；</p>
</li>
<li>
<p>CDN节点： 缓存内容，加速访问；</p>
</li>
<li>
<p>SSL/TLS终止： HTTPS的核心是端到端加密。为了检查内容（如WAF扫描攻击）、进行负载均衡或优化性能，SSL/TLS解密通常在代理/负载均衡器/WAF/CDN处终止。代理服务器建立与客户端的加密连接，然后建立一个（通常是未加密的或新加密的）连接到后端应用服务器。</p>
</li>
</ul>
</li>
</ol>
<p>结果： 当请求到达最终的应用服务器时，服务器看到的网络连接来源IP地址是最后一个代理设备（如Nginx, F5, WAF）的IP地址，而不是原始客户端的真实IP地址。</p>
<p><strong>其它知识：</strong><br>
篡改XFF不会影响实际的网络传输，网络传输由路由提供服务，路由决策仅依赖网络层（IP头），XFF作为应用层数据，对TCP/IP协议栈透明。</p>
<hr>
<h1 id="解决方案2proxy-protocol协议">解决方案2——proxy protocol协议</h1>
<p>Proxy Protocol的出现解决了上述代理丢失IP问题，<strong>它允许代理服务器在转发连接之前，将原始客户端连接的相关信息封装在特殊的协议头部中传递给目标服务器。</strong> 目标服务器可以解析该头部信息，获取客户端的真实IP和端口等连接信息。</p>
<p><strong>Proxy Protocol的工作原理：</strong><br>
Proxy Protocol使用<strong>一种简单而有效的协议头部格式来传递连接信息</strong>。协议头部被<strong>插入到原始客户端数据之前</strong>，以确保目标服务器能够正确解析它。</p>
<p>流程图：<br>
<img src="https://img2024.cnblogs.com/blog/1552062/202507/1552062-20250724141815344-763550895.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/1552062/202507/1552062-20250724143526170-1864130262.png" alt="image" loading="lazy"></p>
<p>优势：在传输层建立连接前明文传递IP</p>
<ul>
<li>需双方支持，双方选择Proxy Protocol，表示将客户端信息插入到TCP Payload字段中携带至服务端；</li>
<li>仅当服务端<strong>支持</strong>解析TCP Payload字段时，Proxy Protocol参数设置才有效；</li>
</ul>
<p>风险：未加密，内网传输可接受；</p>
<hr>
<h1 id="解决方案3加密-tcp-option">解决方案3——加密 TCP Option</h1>
<p>可以简单理解为<strong>加密版proxy protocol协议</strong>，但需要在服务器端、边缘代理端都进行改造，主要是在两端加入相关功能模块和设置一个对称密钥。</p>
<p>流程图：<br>
<img src="https://img2024.cnblogs.com/blog/1552062/202507/1552062-20250724140430656-1619885435.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/1552062/202507/1552062-20250724143221595-522120637.png" alt="image" loading="lazy"></p>
<hr>
<h1 id="总结">总结</h1>
<p>一般Web系统用 <code>Proxy Protocol</code> 或 <code>严格配置的XFF</code>；</p>
<pre><code># Nginx代理强制覆盖XFF (安全配置)
proxy_set_header X-Forwarded-For $remote_addr;  # 覆盖而非追加
</code></pre>
<p>金融/政务系统选择 <code>TCP Option加密方案</code>；</p>

</div>
<div class="clear"></div>

        <div class="postDesc">posted on 
<span id="post-date" data-last-update-days="0.008333333333333333" data-date-updated="2025-07-24 14:55">2025-07-24 14:43</span>&nbsp;
<a href="https://www.cnblogs.com/mysticbinary">Mysticbinary</a>&nbsp;
阅读(<span id="post_view_count">12</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19002611);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19002611', targetLink: 'https://www.cnblogs.com/mysticbinary/p/19002611', title: '可以记录IP的网络协议笔记' })">举报</a>
</div>
    