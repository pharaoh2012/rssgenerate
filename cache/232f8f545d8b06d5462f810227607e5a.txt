
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/LiuHengyu2005/p/18781529" title="发布于 2025-03-19 18:50">
    <span role="heading" aria-level="2">密码编码学与网络安全 原理与实践（第七版）William Stallings---读书笔记（1.1-1.5）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p><strong>密码编码学与网络安全 原理与实践（第七版）William Stallings---读书笔记</strong></p>
<h1 id="第一部分-概览">第一部分 概览</h1>
<h2 id="第1章-计算机与网络安全概念">第1章 计算机与网络安全概念</h2>
<p><strong>密码算法与协议</strong>又可分为4个主要领域:</p>
<ul>
<li>
<p><strong>对称加密</strong>  加密任意大小的数据块或数据流的内容,包括消息、文件、加密密钥和口令。</p>
<ul>
<li><strong>场景</strong>：你用密码本给朋友传纸条
<ul>
<li><strong>加密过程</strong>：你们约定用同一本《新华字典》当密码本，把每个字替换成字典的页码（例如“你好”→ 第100页+第200页）。</li>
<li><strong>解密过程</strong>：朋友收到纸条后，用同一本字典反向查页码，还原出“你好”。<br>
<strong>对应技术</strong>：AES加密文件（如用同一密钥加密和解密PPT文档）。</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>非对称加密</strong>  加密小数据块,如加密密钥或数字签名中使用的散列函数值。</p>
<ul>
<li><strong>场景</strong>：小区快递柜取件
<ul>
<li><strong>加密过程</strong>：快递员用你的公开柜号（公钥）存包裹，只有你的私人取件码（私钥）能打开柜子。</li>
<li><strong>关键点</strong>：公钥可以随意公开，但私钥必须保密。<br>
<strong>对应技术</strong>：RSA加密HTTPS连接的会话密钥（如浏览器用网站公钥加密数据，网站用私钥解密）。</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>数据完整性算法</strong>  保护数据块(如用于告警的消息)的内容不被修改。</p>
<ul>
<li><strong>场景</strong>：网购商品防调包
<ul>
<li><strong>保护过程</strong>：商家发货时在包裹内放一张「防伪校验码」（如HMAC哈希值），你收货后扫码验证。</li>
<li><strong>验证结果</strong>：若校验码不匹配，说明包裹中途被拆过或调换。<br>
<strong>对应技术</strong>：下载软件时验证SHA-256哈希值（如检查文件是否被篡改）。</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>认证协议</strong>  基于密码算法设计的认证方案,用来认证实体的身份。</p>
<ul>
<li><strong>场景</strong>：微信扫码登录电脑版
<ul>
<li><strong>认证过程</strong>：<br>
① 电脑生成二维码（包含临时身份标识）<br>
② 手机扫码后，微信服务器验证手机登录状态<br>
③ 服务器确认身份匹配，允许电脑端登录。<br>
<strong>对应技术</strong>：OAuth 2.0协议或双因素认证（如银行App登录需密码+短信验证码）。</li>
</ul>
</li>
</ul>
</li>
<li>
<p>📌 <strong>总结</strong></p>
<table>
<thead>
<tr>
<th style="text-align: center">领域</th>
<th style="text-align: center">生活类比</th>
<th style="text-align: center">技术实现</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center">对称加密</td>
<td style="text-align: center">密码本传纸条</td>
<td style="text-align: center">AES加密文档</td>
</tr>
<tr>
<td style="text-align: center">非对称加密</td>
<td style="text-align: center">快递柜取件码</td>
<td style="text-align: center">RSA加密HTTPS会话密钥</td>
</tr>
<tr>
<td style="text-align: center">数据完整性算法</td>
<td style="text-align: center">包裹防伪校验码</td>
<td style="text-align: center">SHA-256哈希验证</td>
</tr>
<tr>
<td style="text-align: center">认证协议</td>
<td style="text-align: center">微信扫码登录</td>
<td style="text-align: center">OAuth 2.0协议</td>
</tr>
</tbody>
</table>
</li>
</ul>
<p><strong>网络和lnternet安全</strong>领域涉及阻止、防止、检测和纠正信息传输中出现的安全违规行为的措施。</p>
<h3 id="11-计算机安全的概念">1.1 计算机安全的概念</h3>
<h4 id="111-计算机安全的定义">1.1.1 计算机安全的定义</h4>
<p>计算机安全：对于一个自动化的信息系统,采取保护指施确保信息系统资源(包括硬件、软件、固件、信息/数据和通信)的<strong>完整性</strong>、<strong>可用性</strong>和<strong>保密性</strong>(<strong>CIA</strong>三元组)。。</p>
<ul>
<li><strong>保密性(Confidentiality)</strong>
<ul>
<li>数据保密性</li>
<li>隐私性</li>
</ul>
</li>
<li><strong>完整性(lntegrity)</strong>
<ul>
<li>数据完整性</li>
<li>系统完整性</li>
</ul>
</li>
<li><strong>可用性(Availabity)</strong></li>
</ul>
<p>额外的一些安全概念来呈现更完整的安全定义,其中两个常被提及的概念如下:</p>
<ul>
<li>
<p>真实性(Authenticity)对传输信息来说,信息和信息的来源是正确的</p>
</li>
<li>
<p>可追溯性(Accountabity)要求实体的行为可以唯一追溯到该实体</p>
</li>
</ul>
<p>🌟 <strong>场景：用户通过手机银行APP向朋友转账</strong></p>
<p>1️⃣ <strong>保密性（Confidentiality）</strong></p>
<ul>
<li><strong>作用</strong>：确保只有你和银行能查看交易信息。</li>
<li>实现：
<ul>
<li>数据加密：转账时，APP使用SSL/TLS加密通信（如显示“HTTPS”锁图标），防止黑客窃取账户密码。</li>
<li>隐私性：银行系统隐藏你的完整银行卡号，对外仅显示“尾号1234”。</li>
</ul>
</li>
</ul>
<p>2️⃣ <strong>完整性（Integrity）</strong></p>
<ul>
<li><strong>作用</strong>：防止转账金额或收款账户被篡改。</li>
<li>实现：
<ul>
<li>交易签名：APP用数字签名技术（如RSA）生成交易凭证，若中途被修改，银行验证时会拒绝（例如转账100元被改成1000元会失效）。</li>
</ul>
</li>
</ul>
<p>3️⃣ <strong>可用性（Availability）</strong></p>
<ul>
<li><strong>作用</strong>：确保你随时能登录APP完成转账。</li>
<li>实现：
<ul>
<li>银行服务器部署冗余和负载均衡，即使部分服务器故障，仍能正常服务。</li>
<li>防御DDoS攻击：银行网络过滤异常流量，防止黑客用洪水攻击瘫痪系统。</li>
</ul>
</li>
</ul>
<p>4️⃣ <strong>真实性（Authenticity）</strong></p>
<ul>
<li><strong>作用</strong>：验证“你是你”，且“收款方信息真实”。</li>
<li>实现：
<ul>
<li>登录时需短信验证码+指纹识别，确认操作者身份。</li>
<li>银行核对收款人姓名和账户号是否匹配，防止转账到虚假账户。</li>
</ul>
</li>
</ul>
<p>5️⃣ <strong>可追溯性（Accountability）</strong></p>
<ul>
<li><strong>作用</strong>：任何操作都能追溯到责任人。</li>
<li>实现：
<ul>
<li>系统记录你的转账操作日志（包括时间、IP地址、设备信息），一旦发生纠纷，可调取记录追责。</li>
<li>银行内部员工的操作也会被审计，防止内部篡改数据。</li>
</ul>
</li>
</ul>
<p>📌 <strong>总结对比</strong></p>
<table>
<thead>
<tr>
<th style="text-align: center">安全概念</th>
<th style="text-align: center">例子中的体现</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center"><strong>保密性</strong></td>
<td style="text-align: center">HTTPS加密、隐藏银行卡号</td>
</tr>
<tr>
<td style="text-align: center"><strong>完整性</strong></td>
<td style="text-align: center">数字签名防篡改</td>
</tr>
<tr>
<td style="text-align: center"><strong>可用性</strong></td>
<td style="text-align: center">服务器冗余、抗DDoS攻击</td>
</tr>
<tr>
<td style="text-align: center"><strong>真实性</strong></td>
<td style="text-align: center">短信+指纹验证、核对收款人信息</td>
</tr>
<tr>
<td style="text-align: center"><strong>可追溯性</strong></td>
<td style="text-align: center">操作日志记录、审计追踪</td>
</tr>
</tbody>
</table>
<h3 id="13-安全攻击">1.3 安全攻击</h3>
<p>将攻击划分为被动攻击和主动攻击。</p>
<h4 id="131-被动攻击">1.3.1 被动攻击</h4>
<p>被动攻击的特性是对传输进行<strong>窃听和监测</strong>。攻击者的目标是获得传输的信息。<strong>信息内容的泄露</strong>和<strong>流量分析</strong>都属于被动攻击。</p>
<ul>
<li>(来自DS)<strong>流量分析</strong>（Traffic Analysis）是网络安全中的一种攻击手段，攻击者通过观察和分析网络流量的模式、特征和元数据（如数据包大小、时间、频率、来源、目的地等），<strong>即使数据本身已被加密</strong>，也能从中推断出敏感信息或发起进一步攻击。</li>
</ul>
<p>🌟 <strong>被动攻击（难以检测，需提前防御）</strong></p>
<ul>
<li>
<p><strong>例子1：咖啡店Wi-Fi窃听</strong></p>
<ul>
<li>
<p><strong>场景</strong>：你在咖啡店用公共Wi-Fi登录邮箱，未开启VPN加密。</p>
</li>
<li>
<p><strong>攻击手段</strong>：黑客用抓包工具监听同一Wi-Fi下的流量，直接看到你的邮箱账号和密码（<strong>信息泄露</strong>）。</p>
</li>
</ul>
</li>
<li>
<p><strong>例子2：快递包裹流量分析</strong></p>
<ul>
<li>
<p><strong>场景</strong>：某公司每天定时向合作伙伴寄送加密U盘（内容无法破解）。</p>
</li>
<li>
<p><strong>攻击手段</strong>：竞争对手记录每天快递员取件的时间、包裹数量和大小，推测该公司业务扩张节奏（<strong>流量分析</strong>）。</p>
</li>
</ul>
</li>
</ul>
<p>对于被动攻击,<strong>重点是防御而非检测</strong>。</p>
<h4 id="132-主动攻击">1.3.2 主动攻击</h4>
<p>主动攻击包括对数据流进行修改或伪造数据流,具体分为四类:<strong>伪装</strong>、<strong>重放</strong>、<strong>消息修改</strong>和<strong>拒绝服务</strong>。</p>
<ul>
<li>
<p><strong>伪装</strong>是指某实体假装成其他实体</p>
</li>
<li>
<p><strong>重放</strong>是指攻击者未经授权地将截获的信息再次发送</p>
</li>
<li>
<p><strong>消息修改</strong>是指未经授权地修改合法消息的一部分,或延迟消息的传输,或改变消息的顺序</p>
</li>
<li>
<p><strong>拒绝服务</strong>是指阻止或禁止对通信设施的正常使用或管理</p>
</li>
</ul>
<p>🌟 <strong>主动攻击（可检测，需实时应对）</strong></p>
<ul>
<li>
<p><strong>伪装（假扮他人）</strong></p>
<ul>
<li><strong>例子</strong>：骗子伪造「银行官方号码」给你发短信：“您的账户异常，点击链接验证！”（实际是钓鱼网站）。</li>
</ul>
</li>
<li>
<p><strong>重放（重复发送截获的信息）</strong></p>
<ul>
<li><strong>例子</strong>：你网购支付时，黑客截获加密的支付请求数据包，随后反复向支付平台发送同一数据包，导致你被重复扣款10次。</li>
</ul>
</li>
<li>
<p><strong>消息修改（篡改内容或顺序）</strong></p>
<ul>
<li><strong>例子</strong>：你给同事发邮件：“请向供应商A转账100元”，黑客中途修改邮件内容为“转账10000元给供应商B”。</li>
</ul>
</li>
<li>
<p><strong>拒绝服务（阻断正常服务）</strong></p>
<ul>
<li><strong>例子</strong>：电商大促时，黑客用僵尸网络发起海量请求，挤爆服务器，导致真实用户无法下单（类似用1000人堵住超市入口）。</li>
</ul>
</li>
</ul>
<p>📌 <strong>总结对比</strong></p>
<table>
<thead>
<tr>
<th style="text-align: center">攻击类型</th>
<th style="text-align: center">特点</th>
<th style="text-align: center">生活类比</th>
<th style="text-align: center">防御手段</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center"><strong>被动攻击</strong></td>
<td style="text-align: center">暗中观察，不破坏数据</td>
<td style="text-align: center">小偷跟踪你记录生活习惯</td>
<td style="text-align: center">加密通信、隐藏元数据</td>
</tr>
<tr>
<td style="text-align: center"><strong>主动攻击</strong></td>
<td style="text-align: center">主动干预，破坏数据</td>
<td style="text-align: center">劫匪直接抢钱或伪造指令</td>
<td style="text-align: center">身份验证、签名校验、流量过滤</td>
</tr>
</tbody>
</table>
<h3 id="14-安全服务">1.4 安全服务</h3>
<p>安全服务是一种由系统提供的对系统资源进行特殊保护的处理或通信服务;安全服务通过安全机制来实现安全策略。X.800将这些服务分为5类共14个特定服务。<img src="https://i-blog.csdnimg.cn/direct/a934e7af67c442c1991f7ad05281de5c.png#pic_center" alt="在这里插入图片描述" loading="lazy"></p>
<h4 id="141-认证">1.4.1 认证</h4>
<p>认证服务用以保证通信的<strong>真实性</strong>。</p>
<ul>
<li>
<p><strong>同等实体认证(双向验证)</strong>  为连接中的对等实体提供身份确认</p>
<ul>
<li>像接头暗号，双方必须对得上（比如网友见面、银行双向验证）。</li>
</ul>
</li>
<li>
<p><strong>数据源认证(单向验证)</strong>  数据的来源提供确认,对数据的复制或修改并不提供保护</p>
<ul>
<li>像验钞机，只验证钱的真假，钱不需要知道你是谁（比如邮件签名、快递防伪）。</li>
</ul>
</li>
<li>
<table>
<thead>
<tr>
<th style="text-align: center">维度</th>
<th style="text-align: center">同等实体认证</th>
<th style="text-align: center">数据源认证</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center"><strong>验证方向</strong></td>
<td style="text-align: center">双向（客户端↔服务器）</td>
<td style="text-align: center">单向（仅验证发送方）</td>
</tr>
<tr>
<td style="text-align: center"><strong>适用场景</strong></td>
<td style="text-align: center">建立逻辑连接时（如TCP）</td>
<td style="text-align: center">无连接传输（如UDP/邮件）</td>
</tr>
<tr>
<td style="text-align: center"><strong>典型技术</strong></td>
<td style="text-align: center">SSL/TLS双向证书认证</td>
<td style="text-align: center">数字签名、MAC校验</td>
</tr>
</tbody>
</table>
</li>
</ul>
<h4 id="142-访问控制">1.4.2 访问控制</h4>
<p>阻止对资源的非授权使用(即这项服务控制谁能访问资源,在什么条件下可以访问,这些访问的资源可用于做什么)</p>
<ul>
<li>
<p><strong>举个简单例子：家用Wi-Fi控制</strong><br>
1️⃣ <strong>谁能用？</strong> → 家人有密码，邻居不知道密码就连不上。<br>
2️⃣ <strong>什么条件？</strong> → 孩子只能在晚上8点前连Wi-Fi，超时自动断网。<br>
3️⃣ <strong>能用来干啥？</strong> → 家长设置“禁止访问游戏网站”，孩子只能查学习资料。</p>
<p><strong>效果</strong>：既防蹭网，又管上网时间，还限制不良内容，这就是“访问控制”！ 😄</p>
</li>
</ul>
<h4 id="143-数据保密性">1.4.3 数据保密性</h4>
<p>保密性是指防止传输的数据遭到被动攻击。数据保密性是指保护数据免于非授权泄露</p>
<ul>
<li>
<p><strong>连接保密性</strong>  保护一次连接中所有的用户数据</p>
<ul>
<li>
<p><strong>例子</strong>：</p>
<p>你和朋友用<strong>微信语音通话</strong>，运营商会加密整个通话过程的语音数据，即使被窃听也只能听到乱码。</p>
</li>
</ul>
</li>
<li>
<p><strong>无连接保密性</strong>  保护单个数据块中的所有用户数据</p>
<ul>
<li><strong>例子</strong>：<br>
你通过<strong>加密U盘</strong>传输文件，每个文件单独用密码保护。即使U盘丢失，对方不知道密码也无法打开其中一个文件（但其他未加密文件可能暴露）。</li>
</ul>
</li>
<li>
<p><strong>选择域保密性</strong>  对一次连接或单个数据块中指定的数据部分提供保密性</p>
<ul>
<li><strong>例子</strong>：<br>
你在网站填写简历时，系统自动对「身份证号」字段加密存储，但「姓名」「学历」等非敏感信息保持明文。</li>
</ul>
</li>
<li>
<p><strong>流量保密性</strong>  保护那些可以通过视察流量而铁得的信息</p>
<ul>
<li><strong>例子</strong>：<br>
你用<strong>VPNFQ</strong>访问外网，VPN会混淆你的真实流量，使监控者只能看到“你在用VPN”，但不知道具体访问了YouTube还是Netflix。</li>
</ul>
</li>
<li>
<p><strong>一句话总结区别</strong></p>
<table>
<thead>
<tr>
<th style="text-align: center">类型</th>
<th style="text-align: center">保护目标</th>
<th style="text-align: center">类比生活场景</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center">连接保密性</td>
<td style="text-align: center"><strong>全程对话</strong>加密</td>
<td style="text-align: center">用保险箱运送整个快递包裹</td>
</tr>
<tr>
<td style="text-align: center">无连接保密性</td>
<td style="text-align: center"><strong>单个包裹</strong>加密</td>
<td style="text-align: center">每个信封单独封蜡，分开运送</td>
</tr>
<tr>
<td style="text-align: center">选择域保密性</td>
<td style="text-align: center"><strong>包裹内部分物品</strong>加密</td>
<td style="text-align: center">只把珠宝锁进密码盒，衣服外露</td>
</tr>
<tr>
<td style="text-align: center">流量保密性</td>
<td style="text-align: center"><strong>隐藏谁寄了包裹、寄了多少</strong></td>
<td style="text-align: center">用匿名卡车统一运货，掩盖发货人</td>
</tr>
</tbody>
</table>
</li>
</ul>
<h4 id="144-数据完整性">1.4.4 数据完整性</h4>
<p>保证收到的数据的确是授权实体发出的数据(即未修改、插入、删除或重播)</p>
<ul>
<li>
<p><strong>具有恢复功能的连接完整性</strong>  提供一次连接中所有用户数据的完整性。检测整个数据序列内存在的修改，插入，删除或重播，且试图恢复之</p>
</li>
<li>
<p><strong>无恢复的连接完整性</strong>  同上，但仅提供检测，无恢复</p>
</li>
<li>
<p><strong>选择域连接完整性</strong>  提供一次连接中传输的单个数据块内用户数据的指定部分的完整性，并判断指定部分是否有修改，插入，删除或重播</p>
</li>
<li>
<p><strong>无连接完整性</strong>  为单个无连接数据块提供完整性保护，并检测是否有数据修改。另外，提供有限的重播检测</p>
</li>
<li>
<p><strong>选择域无连接完整性</strong>  为单个无连接数据块内指定域提供完整性保护；判断指定域是否被修改</p>
</li>
<li>
<p>🌟 <strong>场景</strong>：用户A通过手机银行向用户B转账1000元</p>
<p>假设银行系统采用不同层级的完整性保护机制：</p>
<hr>
<p>1️⃣ <strong>数据完整性（基础）</strong></p>
<ul>
<li><strong>作用</strong>：确保用户A的转账请求（金额、账户等）未被篡改或重播。</li>
<li><strong>实现</strong>：<br>
系统对转账数据生成<strong>数字签名</strong>，若中途被修改（如金额被改成10000元），签名验证失败，交易终止。</li>
</ul>
<hr>
<p>2️⃣ <strong>具有恢复功能的连接完整性</strong></p>
<ul>
<li><strong>作用</strong>：在数据传输过程中检测篡改并自动恢复。</li>
<li><strong>例子</strong>：<br>
用户A提交请求时，网络波动导致数据包部分损坏。系统检测到完整性错误后，​<strong>自动重传完整数据包</strong>，确保交易继续执行。</li>
</ul>
<hr>
<p>3️⃣ <strong>无恢复的连接完整性</strong></p>
<ul>
<li><strong>作用</strong>：仅检测问题，不自动修复。</li>
<li><strong>例子</strong>：<br>
黑客尝试在传输中篡改收款账户（用户B→黑客账户）。系统检测到篡改后，​<strong>直接终止交易并报警</strong>，但不会尝试恢复原始数据。</li>
</ul>
<hr>
<p>4️⃣ <strong>选择域连接完整性</strong></p>
<ul>
<li><strong>作用</strong>：仅保护关键字段（如金额、账户）。</li>
<li><strong>例子</strong>：<br>
系统只对转账请求中的<strong>金额（1000元）​</strong>和<strong>收款账户</strong>生成校验码，其他字段（如备注）不加密。若金额被修改，校验失败；但备注被篡改不影响交易。</li>
</ul>
<hr>
<p>5️⃣ <strong>无连接完整性</strong></p>
<ul>
<li><strong>作用</strong>：单独验证每个独立请求。</li>
<li><strong>例子</strong>：<br>
用户A的转账请求和后续的短信验证码是两个独立数据块。系统分别校验两者的完整性，若验证码被重播（重复使用），​<strong>单独检测并拒绝</strong>。</li>
</ul>
<hr>
<p>6️⃣ <strong>选择域无连接完整性</strong></p>
<ul>
<li><strong>作用</strong>：仅保护单个请求中的特定部分。</li>
<li><strong>例子</strong>：<br>
短信验证码内容为：“验证码：123456，有效期5分钟”。系统仅对<strong>验证码数字（123456）​</strong>进行完整性保护，若被篡改为“124456”，立即失效；但有效期字段可明文传输。</li>
</ul>
</li>
</ul>
<h4 id="145-不可否认性">1.4.5 不可否认性</h4>
<p>防止发送方或接收方含认传输或接收过某条消息</p>
<ul>
<li>
<p><strong>源不可否认性</strong>  证明消息是由特定方发出的</p>
</li>
<li>
<p><strong>宿不可否认性</strong>  证明消息被特定方收型</p>
</li>
<li>
<p>🌟 <strong>场景：公司A通过电子合同平台向客户B发送合作协议</strong></p>
<p>1️⃣ <strong>源不可否认性</strong></p>
<ul>
<li><strong>作用</strong>：证明合同是公司A主动发送的，无法抵赖「我没发过」。</li>
<li>实现：
<ul>
<li>公司A上传合同后，系统自动用A的<strong>数字证书</strong>对合同签名（含时间戳）。</li>
<li>客户B可通过平台验证签名，确认合同确实来自A（类似纸质合同盖章）。</li>
</ul>
</li>
</ul>
<p>2️⃣ <strong>宿不可否认性</strong></p>
<ul>
<li><strong>作用</strong>：证明客户B已收到并签署合同，无法抵赖「我没收到/没同意」。</li>
<li>实现：
<ul>
<li>客户B在平台输入验证码+手写签名确认，系统记录签署时间、IP地址及设备指纹。</li>
<li>合同状态变为「已签署」，平台生成<strong>区块链存证</strong>（数据不可篡改）。</li>
</ul>
</li>
</ul>
<hr>
<p>📌 <strong>结果</strong></p>
<ul>
<li>✅ <strong>源不可否认性</strong>：若公司A事后声称“合同是黑客伪造的”，客户B可出示签名验证记录，证明合同来源真实。</li>
<li>✅ <strong>宿不可否认性</strong>：若客户B声称“没收到合同”，公司A可出示区块链存证，显示B的签署时间及操作痕迹。</li>
</ul>
</li>
</ul>
<h4 id="146-可用性服务">1.4.6 可用性服务</h4>
<p>根据系统的性能说明,系统资源可被授权实体请求访问或使用(即当用户请求服务时,若系统能够提供符合系统设计的这些服务,则系统是可用的)。可用性服务确保系统的可用性。这种服务处理由拒绝服务攻击引起的安全问题。它依赖于对系统资源的恰当管理和控制,因此依赖于访问控制服务和其他安全服务。</p>
<p><strong>可用性服务的核心</strong>是确保系统资源在授权用户需要时能够正常访问和使用，即使面临攻击或故障。</p>
<p>🌰 <strong>生活化例子：电商平台“双11”大促</strong></p>
<p><strong>场景</strong>：某电商平台在“双11”期间面临海量用户访问和潜在攻击，需保障正常用户购物流程。</p>
<p>1️⃣ <strong>可用性挑战</strong>：</p>
<ul>
<li><strong>正常需求</strong>：每秒数百万用户访问商品页、提交订单。</li>
<li><strong>攻击威胁</strong>：黑客发起DDoS攻击，用僵尸网络伪造海量请求，试图挤爆服务器。</li>
</ul>
<p>2️⃣ <strong>防御措施</strong>：</p>
<ul>
<li>自动防御：
<ul>
<li><strong>流量清洗</strong>：识别并拦截异常流量（如同一IP秒内发起1000次请求），仅放行真实用户请求。</li>
<li><strong>负载均衡</strong>：将用户请求分发到多个服务器，避免单点过载。</li>
<li><strong>弹性扩容</strong>：根据流量自动增加云服务器实例，临时提升处理能力。</li>
</ul>
</li>
<li>物理防御：
<ul>
<li><strong>全球分布式数据中心</strong>：即使某一区域服务器宕机，其他节点可接管服务。</li>
<li><strong>硬件冗余</strong>：关键服务器配备双电源、多网卡，防止硬件故障导致服务中断。</li>
</ul>
</li>
</ul>
<p>3️⃣ <strong>依赖的安全服务</strong>：</p>
<ul>
<li><strong>访问控制</strong>：用户需登录账号才能下单（防机器人刷单）。</li>
<li><strong>完整性校验</strong>：订单数据加密签名，防止黑客篡改商品价格或收货地址。</li>
</ul>
<p>📊 <strong>结果对比</strong></p>
<table>
<thead>
<tr>
<th style="text-align: center"><strong>无可用性保护</strong></th>
<th style="text-align: center"><strong>有可用性保护</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center">用户访问延迟高，页面崩溃</td>
<td style="text-align: center">页面快速加载，订单流畅提交</td>
</tr>
<tr>
<td style="text-align: center">黑客DDoS攻击导致服务瘫痪</td>
<td style="text-align: center">异常流量被过滤，真实用户不受影响</td>
</tr>
<tr>
<td style="text-align: center">服务器故障后恢复耗时数小时</td>
<td style="text-align: center">故障自动切换备用节点，秒级恢复</td>
</tr>
</tbody>
</table>
<p>📌 <strong>总结</strong></p>
<p>可用性服务是安全体系的“基础设施”，它确保用户在最需要的时候能正常使用系统。<strong>其他安全服务（如保密性、完整性）</strong> 保护数据本身，而可用性服务保护的是<strong>服务持续提供的能力</strong>，两者缺一不可。就像修建一座桥梁：保密性和完整性是桥体的坚固材料，而可用性是确保桥梁始终通畅，不被洪水（攻击）冲垮或堵塞（过载）。 😊</p>
<h3 id="15-安全机制">1.5 安全机制</h3>
<p>安全机制分为两类;一类在特定的协议层实现,如TCP或应用层协议;另一类不属于任何协议层或安全服务。</p>
<p><img src="https://i-blog.csdnimg.cn/direct/b779589c16aa4a37a737479ed8e5667a.png#pic_center" alt="在这里插入图片描述" loading="lazy"><br>
<img src="https://i-blog.csdnimg.cn/direct/d65e938252084cb09115731e5f9ec43f.png#pic_center" alt="在这里插入图片描述" loading="lazy"></p>
<h4 id="特定安全机制">特定安全机制</h4>
<p>可以并入适当的协议层以提供一些OSI安全服务</p>
<ul>
<li>加密（Encryption）运用数学算法将数据转换成不可知的形式。数据的变换和还原依赖于算法和零个或多个加密密钥
<ul>
<li>定义：通过数学算法（如AES、RSA）将数据转换为不可读形式，只有拥有密钥的实体能还原。</li>
<li>例子：HTTPS网站通信<br>
当你在浏览器输入银行卡号时，网站使用TLS协议中的AES算法加密数据，黑客即使截获传输内容，也无法解密获取卡号。</li>
</ul>
</li>
<li>数字签名（Digital Signature）附加于数据单元之后的一种数据，它是对数据单元的密码变换，以使得（如接收方）可证明数据源和完整性，并防止伪造
<ul>
<li><strong>定义</strong>：对数据生成唯一密码标识（签名），用于验证来源真实性和完整性，防止篡改。</li>
<li><strong>例子：软件下载验证</strong><br>
下载Python安装包时，官方网站提供SHA-256哈希值和GPG签名。用户校验哈希值是否匹配，并用开发者公钥验证签名，确保文件未被篡改或替换为恶意版本。</li>
</ul>
</li>
<li>访问控制（Access Control）对资源行使访问控制的各种机制
<ul>
<li><strong>定义</strong>：限制用户或系统对资源的访问权限（如“谁能访问”“能做什么”）。</li>
<li><strong>例子：公司文档权限管理</strong><br>
销售部员工只能查看客户合同，财务部员工可编辑付款信息，实习生无权访问敏感数据。通过RBAC（基于角色的访问控制）自动分配权限。</li>
</ul>
</li>
<li>数据完整性（Data Integrity）用于保证数据单元或数据单元流的完整性的各种机制
<ul>
<li><strong>定义</strong>：确保数据在传输或存储过程中未被篡改或损坏。</li>
<li><strong>例子：电子邮件防篡改</strong><br>
用户A发送邮件时，系统自动生成邮件内容的哈希值并加密。用户B收到后重新计算哈希值，若与解密结果不一致，则说明邮件被修改过。</li>
</ul>
</li>
<li>认证交换（Authentication Exchange）通过信息交换来保证实体身份的各种机制
<ul>
<li><strong>定义</strong>：通过信息交互验证实体身份（如用户、设备）。</li>
<li><strong>例子：双因素登录验证</strong><br>
登录银行APP时，需先输入密码（知识认证），再通过短信或指纹验证（持有物/生物特征认证），确保操作者身份真实。</li>
</ul>
</li>
<li>流量填充（Traffic Padding）在数据流空隙中插入若干位以阻止流量分析
<ul>
<li><strong>定义</strong>：在数据传输间隙插入随机数据，隐藏真实流量模式。</li>
<li><strong>例子：加密聊天防监听</strong><br>
即使聊天双方无消息发送，Signal(一个以保护隐私为核心要务的消息应用)等应用仍会定期传输随机加密数据包，使监控者无法通过流量大小或时间推测对话活跃度。</li>
</ul>
</li>
<li>路由控制（Routing Control）能够为某些数据选择特殊的物理上安全的路线，并允许路由变化（尤其是在怀疑有侵犯安全的行为时）
<ul>
<li><strong>定义</strong>：选择安全路径传输数据，动态调整路由以避开风险。</li>
<li><strong>例子：VPNFQ保护隐私</strong><br>
用户访问外网时，VPN自动选择加密隧道绕开监管节点，若检测到某服务器被封锁，立即切换至其他可用节点。</li>
</ul>
</li>
<li>公证（Notarization）利用可信的第三方来保证数据交换的某些性质
<ul>
<li><strong>定义</strong>：通过可信第三方证明数据行为的真实性（如时间戳、身份认证）。</li>
<li>例子：数字证书颁发机构（CA）<br>
网站向DigiCert等CA申请SSL证书，CA验证其身份后签发证书。浏览器访问时，通过CA公钥验证证书真实性，确认网站非钓鱼仿冒。</li>
</ul>
</li>
</ul>
<p>📌 <strong>总结对比表</strong></p>
<table>
<thead>
<tr>
<th style="text-align: center">机制</th>
<th style="text-align: center">核心作用</th>
<th style="text-align: center">常见技术/协议</th>
<th style="text-align: center">生活化场景</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center"><strong>加密</strong></td>
<td style="text-align: center">防窃听</td>
<td style="text-align: center">AES、RSA、TLS</td>
<td style="text-align: center">HTTPS传输银行卡号</td>
</tr>
<tr>
<td style="text-align: center"><strong>数字签名</strong></td>
<td style="text-align: center">防伪造、篡改</td>
<td style="text-align: center">RSA、SHA-256</td>
<td style="text-align: center">软件下载校验签名</td>
</tr>
<tr>
<td style="text-align: center"><strong>访问控制</strong></td>
<td style="text-align: center">限制资源使用</td>
<td style="text-align: center">RBAC、ACL</td>
<td style="text-align: center">公司文档分角色权限</td>
</tr>
<tr>
<td style="text-align: center"><strong>数据完整性</strong></td>
<td style="text-align: center">验证数据未被修改</td>
<td style="text-align: center">HMAC、CRC</td>
<td style="text-align: center">邮件哈希值防篡改</td>
</tr>
<tr>
<td style="text-align: center"><strong>认证交换</strong></td>
<td style="text-align: center">确认身份真实性</td>
<td style="text-align: center">Kerberos、OAuth 2.0</td>
<td style="text-align: center">双因素登录验证</td>
</tr>
<tr>
<td style="text-align: center"><strong>流量填充</strong></td>
<td style="text-align: center">隐藏流量模式</td>
<td style="text-align: center">随机数据插入</td>
<td style="text-align: center">加密聊天防监听</td>
</tr>
<tr>
<td style="text-align: center"><strong>路由控制</strong></td>
<td style="text-align: center">选择安全路径</td>
<td style="text-align: center">VPN、TOR</td>
<td style="text-align: center">FQ访问外网</td>
</tr>
<tr>
<td style="text-align: center"><strong>公证</strong></td>
<td style="text-align: center">第三方权威认证</td>
<td style="text-align: center">CA、区块链存证</td>
<td style="text-align: center">网站SSL证书验证</td>
</tr>
</tbody>
</table>
<h4 id="普遍的安全机制">普遍的安全机制</h4>
<p>不局限于任何特定OSI安全服务或协议层的机制</p>
<ul>
<li>可信功能（Trusted Function）据某些标准被认为是正确的功能（如根据安全策略所建立的标准）
<ul>
<li><strong>定义</strong>：系统内预先定义并验证过的安全功能，确保其行为符合安全策略（如访问控制、加密算法）。</li>
<li><strong>例子：杀毒软件的实时防护模块</strong>
<ul>
<li>杀毒软件内置的病毒扫描引擎被认证为“可信功能”，严格按照策略检测文件。</li>
<li>用户下载文件时，引擎自动扫描，若发现恶意代码则立即拦截，无需用户额外授权。</li>
</ul>
</li>
</ul>
</li>
<li>安全标签（Security Label）资源（可能是数据单元）的标志，命名或指定该资源的安全属性
<ul>
<li><strong>定义</strong>：为数据或资源附加分类标签（如“机密”“公开”），明确其安全属性和访问规则。</li>
<li><strong>例子：公司内部文档权限标签</strong>
<ul>
<li>财务报告标记为 <strong>“机密-仅限高管”</strong>，普通员工无法访问。</li>
<li>产品手册标记为 <strong>“内部公开”</strong>，全体员工可查看但禁止外发。</li>
<li>系统根据标签自动控制访问权限，无需人工二次审批。</li>
</ul>
</li>
</ul>
</li>
<li>事件检测（Event Detection）检测与安全相关的事件
<ul>
<li><strong>定义</strong>：实时监控系统活动，识别违反安全策略的行为或异常事件（如多次登录失败、数据异常导出）。</li>
<li><strong>例子：银行APP的异常登录警报</strong>
<ul>
<li>若检测到用户账户在 <strong>异地频繁尝试登录</strong>（如1小时内失败5次），系统自动触发短信验证并冻结账户。</li>
<li>同时生成安全事件日志：“2023-09-20 14:00：IP 192.168.1.100 异常登录尝试”。</li>
</ul>
</li>
</ul>
</li>
<li>安全审计跟踪（Security Audit Trail）收集可用于安全审计的数据，它是对系统记录和行为的独立回顾与核查
<ul>
<li><strong>定义</strong>：记录系统操作日志，支持事后追溯和分析安全事件。</li>
<li><strong>例子：数据库操作审计日志</strong>
<ul>
<li>记录内容：“用户A于2023-09-20 10:00 删除客户表ID=123的数据”。</li>
<li>当发现数据被恶意删除时，审计员可通过日志定位责任人、时间和具体操作。</li>
</ul>
</li>
</ul>
</li>
<li>安全恢复（Security Recovery）处理来自安全机制的请求，如事件处理、管理功能和采取恢复行为</li>
<li><strong>定义</strong>：在安全事件发生后，执行修复措施以恢复正常状态（如数据还原、漏洞修复）。</li>
<li><strong>例子：勒索软件攻击后的系统恢复</strong>
<ul>
<li>事件：公司服务器被勒索软件加密，业务瘫痪。</li>
<li>恢复步骤：<br>
① 隔离受感染服务器，阻断攻击扩散（<strong>事件处理</strong>）。<br>
② 从 ​<strong>异地备份</strong> 中还原数据（<strong>数据恢复</strong>）。<br>
③ 修复系统漏洞并更新防火墙规则（<strong>策略更新</strong>）。</li>
</ul>
</li>
</ul>
<p>📌 <strong>总结对比</strong></p>
<table>
<thead>
<tr>
<th style="text-align: center">机制</th>
<th style="text-align: center">核心作用</th>
<th style="text-align: center">生活化例子</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center"><strong>可信功能</strong></td>
<td style="text-align: center">确保安全功能按策略执行</td>
<td style="text-align: center">杀毒软件自动扫描拦截病毒</td>
</tr>
<tr>
<td style="text-align: center"><strong>安全标签</strong></td>
<td style="text-align: center">数据分类与权限控制</td>
<td style="text-align: center">公司文档标记“机密”限制访问</td>
</tr>
<tr>
<td style="text-align: center"><strong>事件检测</strong></td>
<td style="text-align: center">实时识别异常行为</td>
<td style="text-align: center">银行APP冻结异地频繁登录账户</td>
</tr>
<tr>
<td style="text-align: center"><strong>安全审计跟踪</strong></td>
<td style="text-align: center">记录操作日志供追溯</td>
<td style="text-align: center">数据库删除操作记录溯源</td>
</tr>
<tr>
<td style="text-align: center"><strong>安全恢复</strong></td>
<td style="text-align: center">修复事件影响并恢复正常</td>
<td style="text-align: center">从备份还原勒索软件加密的数据</td>
</tr>
</tbody>
</table>
<p>📌 <strong>核心区别总结</strong></p>
<table>
<thead>
<tr>
<th style="text-align: center"><strong>维度</strong></th>
<th style="text-align: center"><strong>特定安全机制</strong></th>
<th style="text-align: center"><strong>普遍安全机制</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center"><strong>应用范围</strong></td>
<td style="text-align: center">针对特定OSI安全服务或协议层（如传输层、应用层）</td>
<td style="text-align: center">不限定具体协议层，跨层级通用</td>
</tr>
<tr>
<td style="text-align: center"><strong>设计目的</strong></td>
<td style="text-align: center">解决具体场景的安全问题（如加密、身份验证）</td>
<td style="text-align: center">提供基础性、通用性安全支持（如日志审计、恢复）</td>
</tr>
<tr>
<td style="text-align: center"><strong>依赖性</strong></td>
<td style="text-align: center">通常依赖特定协议或技术实现（如TLS加密）</td>
<td style="text-align: center">独立于具体技术，可适配多种场景</td>
</tr>
<tr>
<td style="text-align: center"><strong>灵活性</strong></td>
<td style="text-align: center">功能单一，针对性较强</td>
<td style="text-align: center">灵活扩展，适应复杂需求</td>
</tr>
</tbody>
</table>
<hr>
<p>🌟 <strong>具体说明</strong></p>
<p>1️⃣ <strong>特定安全机制</strong></p>
<ul>
<li><strong>定义</strong>：专为某一类安全服务（如保密性、完整性）或协议层设计，解决特定问题。</li>
<li>例子：
<ul>
<li><strong>加密（TLS）</strong>：在传输层对HTTP流量加密，实现数据保密性。</li>
<li><strong>数字签名（PGP）</strong>：在应用层对邮件签名，确保来源真实性和完整性。</li>
<li><strong>访问控制（OAuth 2.0）</strong>：在应用层管理API资源访问权限。</li>
</ul>
</li>
</ul>
<p>2️⃣ <strong>普遍安全机制</strong></p>
<ul>
<li><strong>定义</strong>：提供基础安全能力，支持多种安全服务，贯穿整个系统生命周期。</li>
<li>例子：
<ul>
<li><strong>安全审计跟踪</strong>：记录所有用户操作日志（如数据库增删改查），无论发生在哪一层，均可追溯责任。</li>
<li><strong>安全恢复</strong>：无论攻击针对网络层（DDoS）还是应用层（SQL注入），均能隔离故障并还原数据。</li>
<li><strong>事件检测</strong>：监控全系统异常行为（如物理层设备断电、应用层多次登录失败），触发统一告警。</li>
</ul>
</li>
</ul>
<hr>
<p>🌰 <strong>生活化类比</strong></p>
<ul>
<li><strong>特定安全机制</strong> → 医院中的<strong>专科医生</strong>（如心血管专家专治心脏病，骨科专家专治骨折）。</li>
<li><strong>普遍安全机制</strong> → 医院的<strong>急诊科+病历系统</strong>（无论何种病症，统一接诊、记录病史并协调资源）。</li>
</ul>
<hr>
<p>📝 <strong>总结</strong></p>
<ul>
<li><strong>特定机制</strong>是“精准手术刀”，针对具体问题高效解决。</li>
<li><strong>普遍机制</strong>是“安全地基”，为整个系统提供兜底保障。两者相辅相成，缺一不可！ 😊</li>
</ul>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.7285939806828704" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-19 18:50">2025-03-19 18:50</span>&nbsp;
<a href="https://www.cnblogs.com/LiuHengyu2005">Owen-</a>&nbsp;
阅读(<span id="post_view_count">56</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18781529" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18781529);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18781529', targetLink: 'https://www.cnblogs.com/LiuHengyu2005/p/18781529', title: '密码编码学与网络安全 原理与实践（第七版）William Stallings---读书笔记（1.1-1.5）' })">举报</a>
</div>
        