
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/greywen/p/18747300" title="发布于 2025-03-05 08:45">
    <span role="heading" aria-level="2">Pantheons：用 TypeScript 打造主流大模型对话的一站式集成库</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">

<h1><a href="https://github.com/greywen/pantheons" rel="noopener nofollow">Pantheons</a>：用 TypeScript 打造主流大模型对话的一站式集成库</h1>
<h2>前言</h2>
<p>在 AI 飞速发展的时代，大型语言模型（LLMs）逐渐成为推动技术进步的重要力量。无论是自然语言处理、文本生成，还是智能问答和代码辅助，LLMs 的应用场景正在不断扩展，各种模型层出不穷。然而，面对种类繁多的模型和各自不同的接口标准，开发者在集成和管理这些模型时往往会面临复杂性和兼容性的问题。</p>
<p><code>Pantheons</code> 的诞生正是为了解决这一痛点。它是一个使用 TypeScript 基于 OpenAI Node.js SDK 构建的统一对话库，旨在为开发者提供一个简洁、高效的接口，方便与多个大型语言模型（LLMs）进行交互。通过 Pantheons，开发者可以轻松集成 OpenAI、DeepSeek、DashScope、Gemini 等主流语言模型，无需担心底层差异，专注于实现自己的业务逻辑。</p>
<h2>功能特性</h2>
<ul>
<li>统一接口设计：所有模型基于 OpenAI Node.js SDK 构建；共享相同的调用方式，大幅降低学习成本</li>
<li>类型安全：基于 TypeScript 构建，提供完整的类型定义，让开发更加顺畅</li>
<li>支持多种模型：目前支持十几种主流大语言模型，包括 OpenAI、Azure OpenAI、通义千问、文心一言、腾讯混元、Google Gemini 等，覆盖几乎所有主流云端和本地 LLM 服务。</li>
<li>适配多种运行环境：支持 Node.js, Bun 和 Web 等多种运行时环境，适配性强。</li>
</ul>
<h2>支持的大模型</h2>
<ul>
<li><a href="https://platform.openai.com/docs/api-reference/introduction" rel="noopener nofollow">OpenAI</a></li>
<li><a href="https://learn.microsoft.com/en-us/azure/ai-services/openai" rel="noopener nofollow">Azure OpenAI</a></li>
<li><a href="https://help.aliyun.com/zh/model-studio/developer-reference" rel="noopener nofollow">通义千问(DashScope)</a></li>
<li><a href="https://cloud.tencent.com/document/product/1729/101839" rel="noopener nofollow">腾讯混元(HunYuan)</a></li>
<li><a href="https://platform.moonshot.cn/docs/intro" rel="noopener nofollow">月之暗面(Moonshot)</a></li>
<li><a href="https://docs.siliconflow.cn/cn/userguide/introduction" rel="noopener nofollow">硅基流动(SiliconFlow)</a></li>
<li><a href="https://api-docs.deepseek.com/" rel="noopener nofollow">DeepSeek</a></li>
<li><a href="https://cloud.baidu.com/doc/WENXINWORKSHOP/s/7ltgucw50" rel="noopener nofollow">文心一言(QianFan)</a></li>
<li><a href="https://ai.google.dev/gemini-api/docs" rel="noopener nofollow">Gemini</a></li>
<li><a href="https://github.com/ollama/ollama/blob/main/docs/api.md" rel="noopener nofollow">Ollama</a></li>
<li><a href="https://open.bigmodel.cn/dev/api/normal-model/glm-4" rel="noopener nofollow">智谱清言(ZhiPu)</a></li>
<li><a href="https://docs.x.ai/docs/overview" rel="noopener nofollow">XAI</a></li>
<li><a href="https://platform.lingyiwanwu.com/docs/api-reference" rel="noopener nofollow">零一万物(LingYiWanWu)</a></li>
<li><a href="https://platform.minimaxi.com/document/Fast%20access" rel="noopener nofollow">MiniMax</a></li>
<li><a href="https://console.xfyun.cn/services/sparkapiCenter" rel="noopener nofollow">讯飞星火(Spark)</a></li>
<li><a href="https://docs.anthropic.com/en/api/getting-started" rel="noopener nofollow">Anthropic(Claude)</a></li>
</ul>
<h2>使用方法</h2>
<h4>Nodejs</h4>
<pre><code>
import { DeepSeek } from 'pantheons';

(async () =&gt; {
  const client = new DeepSeek('Your key');
  const stream = await client.stream({
    model: 'deepseek-chat',
    stream: true,
    messages: [{ role: 'user', content: 'Hi!' }],
  });

  let result = '';
  for await (const chunk of stream) {
    result += chunk.choices[0].delta?.content;
  }

  console.log(result);
})();
</code>
</pre>
<h4>Bun</h4>
<pre><code>
import { DeepSeek } from '@greywen/pantheons';

const client = new DeepSeek('Your key');
const stream = await client.stream({
  model: 'deepseek-chat',
  stream: true,
  messages: [{ role: 'user', content: 'Hi!' }],
});

let result = '';
for await (const chunk of stream) {
  result += chunk.choices[0].delta?.content;
}

console.log(result);
</code>
</pre>
<h4>多模型</h4>
<pre><code>
import { DashScope, Moonshot, DeepSeek } from 'pantheons';

const deepSeekClient = new DeepSeek('Your key');
const dashScopeClient = new DashScope('Your key');
const moonshotClient = new Moonshot('Your key');

const messages = [{ role: 'user', content: 'Hi!' }];

const deepSeekStream = await dashScopeClient.stream({
  model: 'deepseek-chat',
  stream: true,
  messages,
});

const dashScopeStream = await dashScopeClient.stream({
  model: 'qwen-max',
  stream: true,
  messages,
});

const moonshotStream = await moonshotClient.stream({
  model: 'kimi-latest',
  stream: true,
  messages,
});

async function readStream(stream: AsyncIterable&lt;any&gt;, output: string[]) {
  for await (const chunk of stream) {
    const content = chunk.choices[0].delta?.content || '';
    output.push(content);
  }
}

const deepSeekOutput: string = [];
const dashScopeOutput: string[] = [];
const moonshotOutput: string[] = [];

await Promise.all([
  readStream(deepSeekStream, deepSeekOutput),
  readStream(dashScopeStream, dashScopeOutput),
  readStream(moonshotStream, moonshotOutput),
]);

console.log(deepSeekOutput, dashScopeOutput, moonshotOutput);
</code>
</pre>
<h4>私有化部署URL</h4>
<pre><code>
import { Ollama } from 'pantheons';

client = new Ollama('Your Key', { baseURL: 'Your URL' });

const stream = await client.stream({
    model: 'qwen2.5-coder:latest',
    stream: true,
    messages: [{ role: 'user', content: 'Hi!' }],
});

let actual = '';
for await (const chunk of stream) {
   actual += chunk.choices[0].delta?.content;
}

console.log(actual);
</code>
</pre>
<h2>总结</h2>
<p><a href="https://github.com/greywen/pantheons" rel="noopener nofollow">Pantheons</a> 是一个面向多模型集成工具，借助其统一、高效的接口设计，开发者可以显著减少在多语言模型集成中的开发成本和时间。无论你是希望快速接入一个模型，还是需要在多个模型之间自由切换，Pantheons 都能成为你不可或缺的工具。</p>
<p>未来，Pantheons 将继续扩展更多模型的支持，同时优化性能与易用性，为开发者提供更强大的工具链。如果你正在寻找一个解决多模型集成痛点的方案，不妨试试 <a href="https://github.com/greywen/pantheons" rel="noopener nofollow">Pantheons</a>。</p>
<p>欢迎广大开发者 Star 、提交 issue、贡献代码、参与讨论, 感谢！</p>
<p>同时也欢迎大家使用我们已发布的大模型项目 Sdcb Chats 如果您觉得有帮助请在 <a href="https://github.com/sdcb/chats" rel="noopener nofollow">GitHub</a> 上 Star 我们！您的支持是我们前进的动力。</p>
<p>再次感谢您的支持，期待未来为您带来更多惊喜！</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.30537349066203706" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-05 09:04">2025-03-05 08:45</span>&nbsp;
<a href="https://www.cnblogs.com/greywen">graywen</a>&nbsp;
阅读(<span id="post_view_count">340</span>)&nbsp;
评论(<span id="post_comment_count">3</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18747300" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18747300);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18747300', targetLink: 'https://www.cnblogs.com/greywen/p/18747300', title: 'Pantheons：用 TypeScript 打造主流大模型对话的一站式集成库' })">举报</a>
</div>
        