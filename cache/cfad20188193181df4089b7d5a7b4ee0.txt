
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/SilverGo/p/19053715" title="发布于 2025-08-22 22:11">
    <span role="heading" aria-level="2">P4141-消失之物题解</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="table-of-contents">Table of Contents</h1>
<ol>
<li><a href="#orge31ea13" rel="noopener nofollow">题目描述：</a></li>
<li><a href="#org7a8b9e0" rel="noopener nofollow">题目简化：</a></li>
<li><a href="#orgdceb304" rel="noopener nofollow">解法一：朴素01背包 80pts</a></li>
<li><a href="#org935dda7" rel="noopener nofollow">解法二：补集辅助数组 100pts</a></li>
<li><a href="#org21407af" rel="noopener nofollow">关于这篇题解：</a></li>
</ol>
<p><a id="orge31ea13"></a></p>
<h1 id="题目描述">题目描述：</h1>
<p>## 题目描述</p>
<p>ftiasch 有 <span class="math inline">\(n\)</span> 个物品, 体积分别是 <span class="math inline">\(w_1,w_2,\dots,w_n\)</span>。由于她的疏忽，第 <span class="math inline">\(i\)</span> 个物品丢失了。</p>
<p>“要使用剩下的 <span class="math inline">\(n-1\)</span> 物品装满容积为 <span class="math inline">\(x\)</span> 的背包，有几种方法呢？”——这是经典的问题了。</p>
<p>她把答案记为 <span class="math inline">\(\text{cnt}(i,x)\)</span> ，想要得到所有<span class="math inline">\(i \in [1,n]\)</span>, <span class="math inline">\(x \in [1,m]\)</span> 的 <span class="math inline">\(\text{cnt}(i,x)\)</span> 表格。</p>
<p>!<a target="_blank"></a></p>
<p>## 输入格式</p>
<p>第一行两个整数 <span class="math inline">\(n,m\)</span>，表示物品的数量和最大的容积。<br>
第二行 <span class="math inline">\(n\)</span> 个整数 <span class="math inline">\(w_1,w_2,\dots,w_n\)</span>，表示每个物品的体积。</p>
<p>## 输出格式</p>
<p>输出一个 <span class="math inline">\(n \times m\)</span> 的矩阵，表示 <span class="math inline">\(\text{cnt}(i,x)\)</span> 的**末位数字**。</p>
<p>## 输入输出样例 #1</p>
<p>### 输入 #1</p>
<p>```<br>
3 2<br>
1 1 2<br>
```</p>
<p>### 输出 #1</p>
<p>```<br>
11<br>
11<br>
21<br>
```</p>
<p>## 说明/提示</p>
<p>【数据范围】<br>
对于 <span class="math inline">\(100\%\)</span> 的数据，<span class="math inline">\(1\le n,m \le 2000\)</span>，且 <span class="math inline">\(1\le w_i\le 2000\)</span>。</p>
<p>【样例解释】<br>
如果物品 3 丢失的话，只有一种方法装满容量是 2 的背包，即选择物品 1 和物品 2。</p>
<p>—</p>
<p><span class="math inline">\(\text{upd 2023.8.11}\)</span>：新增加五组 Hack 数据。</p>
<p><a id="org7a8b9e0"></a></p>
<h1 id="题目简化">题目简化：</h1>
<p>给定n个物品和容量为m的背包，此时我们令物品 <span class="math inline">\(i \in [1,n]\)</span> 不可选，令背包容量 <span class="math inline">\(v \in m\)</span> 逐渐增加，输出去除每种物品后对于正好填满每种背包大小的方案数的个位；</p>
<p><a id="orgdceb304"></a></p>
<h1 id="解法一朴素01背包-80pts">解法一：朴素01背包 80pts</h1>
<p>这道题最朴素的做法是 <span class="math inline">\(O(n^2 \times m)\)</span> 的，我们每次更改不可用的物品 <span class="math inline">\(i\)</span> 时，都重新进行一次dp数组计算，而每次dp的计算都是 <span class="math inline">\(O(n \times m)\)</span> 的，所以总体时间复杂度  <span class="math inline">\(O(n^2 \times m)\)</span> ；<br>
没什么好解释的，这里不给代码了；</p>
<p><a id="org935dda7"></a></p>
<h1 id="解法二补集辅助数组-100pts">解法二：补集辅助数组 100pts</h1>
<p>我们注意到： <span class="math inline">\(O(n^2 \times m)\)</span> 的时间复杂度明显不可接受，那么唯一可能的复杂度是 <span class="math inline">\(O(n \times m)\)</span> 的，也就是说，我们对于去除一个元素的这个操作，需要 <span class="math inline">\(O(1)\)</span> 完成；<br>
因此我们需要设计出如何通过dp数组直接求出去除一个物品的答案，这里我们根据补集的思想进行设计：</p>
<p>不难发现： 总方案数 = 选i的方案数 + 不选i的方案数 ；<br>
我们最终要求出的就是不选i的方案数，所以我们要做的就是以 <span class="math inline">\(O(1)\)</span> 的复杂度求出不选i的方案数；</p>
<p>我自己做这道题的时候做了2小时，想出来了解法：<br>
我们维护一个数组 <span class="math inline">\(f_v\)</span> ，定义为容量为v时不选i的方案数，那么 <span class="math inline">\(f\)</span> 怎么计算呢；<br>
显然有 <span class="math inline">\(f_0 = 1\)</span> ；<br>
随后，当 <span class="math inline">\(j&lt;w_i\)</span> 时，代表此时的背包容量不足以放下物品i，所以此时的 <span class="math inline">\(f_j = dp_j\)</span> ;<br>
当 <span class="math inline">\(j&gt;=w_i\)</span> 时，此时的 <span class="math inline">\(f_v\)</span> 应该是多少呢；<br>
由：“总方案数 = 选i的方案数 + 不选i的方案数”，可得：不选i的方案数 = 总方案数 - 选i的方案数<br>
即为 <span class="math inline">\(f_j = dp_j - f_{j-w_i}\)</span> ;</p>
<p>这里非常疑惑的一个点是：选i的方案数为什么是 <span class="math inline">\(f_{j-w_i}\)</span> ;<br>
补充一个引理：背包问题的最优解与放入物品的顺序无关（这是显然的，无后效性的体现）<br>
我们可以这样理解：对于一个选i的方案而言，我们可以认为i是最后一个物品，先不选i填充容量为 <span class="math inline">\(j-w_i\)</span> 的背包，随后使用i填充完整；<br>
由于最后一个一定选i，所以方案数为：不选i填充容量为 <span class="math inline">\(j-w_i\)</span> 的背包的方案数 ，即为 <span class="math inline">\(f_{j-w_i}\)</span> ；</p>
<p>总结一下： <span class="math inline">\(f_j = dp_j - f_{j-w_i}\)</span> (当 <span class="math inline">\(j&gt;=w_i\)</span> 时)， <span class="math inline">\(f_j = dp_j\)</span> (当 <span class="math inline">\(j&lt;w_i\)</span> 时);</p>
<p>经过我们的一番推理，最终得出了不选i的方案数，这就是我们想要的答案，根据要求中途取模输出即可；</p>
<p><a id="org21407af"></a></p>
<h1 id="关于这篇题解">关于这篇题解：</h1>
<p>我自己做这道题时感觉非常非常崩溃，仿佛自己没学过dp，不过好歹是AC了；<br>
仅以此文，记录一下我奋斗的8月22日；</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-08-22 22:12">2025-08-22 22:11</span>&nbsp;
<a href="https://www.cnblogs.com/SilverGo">Ghost-Face</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19053715);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19053715', targetLink: 'https://www.cnblogs.com/SilverGo/p/19053715', title: 'P4141-消失之物题解' })">举报</a>
</div>
        