
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/InCerry/p/-/dotnet_week_25_8_1" title="发布于 2025-08-21 22:07">
    <span role="heading" aria-level="2">.NET周刊【8月第1期 2025-08-03】</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="国内文章">国内文章</h2>
<h3 id="net-下高性能-socket-的方案">.Net 下高性能 Socket 的方案</h3>
<p><a href="https://zhuanlan.zhihu.com/p/1924520585976849438" target="_blank" rel="noopener nofollow">https://zhuanlan.zhihu.com/p/1924520585976849438</a></p>
<p>简单介绍Socket的数据组成。详细介绍.Net高性能的类型：Span，Ros，Memory和ReadOnlyMemory，以及System.IO.Pipelines这个类库。最后给出高性能Socket写入代码，并附带Benchmark测试。</p>
<h3 id="2025年是时候重新认识systemtextjson了">2025年：是时候重新认识System.Text.Json了</h3>
<p><a href="https://www.cnblogs.com/sdcb/p/19010852/2025-meet-system-text-json" target="_blank">https://www.cnblogs.com/sdcb/p/19010852/2025-meet-system-text-json</a></p>
<p>本文章探讨了System.Text.Json(STJ)与Newtonsoft.Json(NSJ)之间的对比。文章指出，STJ因遵循严格的性能和安全标准，默认不支持大小写不敏感，导致开发者在序列化JSON时常遇到问题。通过简单的配置，STJ可以调整为类似NSJ的行为，以解决如大小写匹配不当等问题。作者使用实际案例阐释了如何配置STJ，增强其实用性。文中强调STJ在不断更新，开发者应重新评估其价值，而非仅依赖于NSJ的便利性。</p>
<h3 id="c性能优化为何-x--mathsqrtx-远胜-mathpowx-15">C#性能优化：为何 x * Math.Sqrt(x) 远胜 Math.Pow(x, 1.5)</h3>
<p><a href="https://www.cnblogs.com/sdcb/p/19007758/math-pow-perf" target="_blank">https://www.cnblogs.com/sdcb/p/19007758/math-pow-perf</a></p>
<p>文章讨论了在C#中使用Math.Pow函数的性能问题，作者通过天体模拟代码展示了如何基于万有引力定律计算行星运动。AI审查指出Math.Pow性能较差，建议使用r2 * Math.Sqrt(r2替代。经过实验验证，结果显示Math.Sqrt的性能显著高于Math.Pow，几乎是2.7倍。这个发现让作者意识到直觉可能与实际性能存在差距，并介绍了使用BenchmarkDotNet工具进行精准性能测试的方法。</p>
<h3 id="独立开发在线客服系统我是如何与杀毒软件误报斗智斗勇的">独立开发在线客服系统，我是如何与杀毒软件误报斗智斗勇的</h3>
<p><a href="https://www.cnblogs.com/sheng_chao/p/19015478" target="_blank">https://www.cnblogs.com/sheng_chao/p/19015478</a></p>
<p>作者开发了一款在线客服与营销系统，经历了从少量用户到稳定用户的增长。在此过程中，客服软件频繁被杀毒软件误报，引发用户不信任。杀毒软件使用启发式扫描来识别恶意程序，导致合法软件也被标记为木马。作者分析了误报原因，并分享了避免误报的策略，包括替代动态代码生成、使用JSON配置文件、避免敏感目录读写及显式声明用途。最终，他选择关闭IL混淆，优化架构，提升软件的安全性和用户体验。</p>
<h3 id="一款实用的-visual-studio-发布部署插件助力提高部署效率">一款实用的 Visual Studio 发布部署插件，助力提高部署效率！</h3>
<p><a href="https://www.cnblogs.com/Can-daydayup/p/19014041" target="_blank">https://www.cnblogs.com/Can-daydayup/p/19014041</a></p>
<p>AntDeploy 是一款 .NET 开源的 Visual Studio 发布部署插件，旨在提高项目发布的效率。该插件支持一键部署 Docker、IIS、Windows 和 Linux 服务，兼容 .NET Framework 和 .NET Core。其功能包括增量发布、回滚、选择特定文件发布及查看发布记录等。AntDeploy 还支持在脱离 Visual Studio 的情况下独立使用，适用于 Windows 和 Mac 系统。插件开源并提供市场链接，方便用户获取更多信息和使用说明。</p>
<h3 id="原创c高级gdi实战从零开发一个流程图第08章增加菱形平行四边形圆角矩形文本居中显示">[原创]《C#高级GDI+实战：从零开发一个流程图》第08章：增加菱形、平行四边形、圆角矩形，文本居中显示</h3>
<p><a href="https://www.cnblogs.com/lesliexin/p/18997090" target="_blank">https://www.cnblogs.com/lesliexin/p/18997090</a></p>
<p>本文介绍了在GDI+中绘制菱形、平行四边形和圆角矩形的过程，并优化了文本的居中显示。通过继承形状基类，使用绘图方法如AddPolygon和AddArc，实现不同形状的绘制。代码示例详述了各个形状的顶点坐标计算及绘制过程，特别强调文本的对齐处理，以提升界面美观与用户体验。</p>
<h3 id="换成net-9你的linq代码还能快上7倍">换成.NET 9，你的LINQ代码还能快上7倍</h3>
<p><a href="https://www.cnblogs.com/sdcb/p/19011868/dotnet9-linq-performance" target="_blank">https://www.cnblogs.com/sdcb/p/19011868/dotnet9-linq-performance</a></p>
<p>本文探讨了.NET 9对LINQ to Objects的性能优化。通过架构改进，LINQ实现了显著的速度提升，解决了传统LINQ执行中的性能问题。引入的迭代器融合技术减少了不必要的堆分配和虚方法调用，简化了操作链。利用Span<t>的快速通道，LINQ操作避免了枚举器的开销，提升了执行效率。这种优化使得开发者不再需要在可读性和性能之间做出艰难选择，实现了性能与优雅的平衡。整体而言，.NET 9带来了战略性的性能革命，使LINQ更加强大与高效。</t></p>
<h3 id="net-9-的免费午餐gzip-性能提升383">.NET 9 的免费午餐：GZip 性能提升38.3%</h3>
<p><a href="https://www.cnblogs.com/sdcb/p/19009854/dotnet9-zlib-perf" target="_blank">https://www.cnblogs.com/sdcb/p/19009854/dotnet9-zlib-perf</a></p>
<p>本文介绍了.NET 9集成zlib-ng性能优化，强调了其在压缩和解压缩操作中的速率和效率优势。通过BenchmarkDotNet库进行的基准测试，评估了.NET 9与.NET 8在处理相同数据时的性能差异。测试过程包括下载数据、预压缩和实际压缩/解压过程，确保测试的准确性。整体展示了zlib-ng对大数据处理的显著提升，强调了框架版本升级带来的直接好处。</p>
<h3 id="net-10-中的新增功能系列文章2aspnet-core-中的新增功能">.NET 10 中的新增功能系列文章2——ASP.NET Core 中的新增功能</h3>
<p><a href="https://www.cnblogs.com/powertoolsteam/p/19012227" target="_blank">https://www.cnblogs.com/powertoolsteam/p/19012227</a></p>
<p>本文探讨了.NET 10中ASP.NET Core的更新，特别是Blazor框架的增强功能。重点关注安全性、性能和开发体验的改进。Blazor Web App的安全性显著提升，新增多个身份验证示例，包括OIDC和Microsoft Entra ID。针对UI组件QuickGrid，新增了RowClass参数和HideColumnOptionsAsync功能，增强了用户体验和样式控制。本文旨在为开发者提供清晰的指导，并通过代码示例展示如何利用新特性构建Web应用。</p>
<h3 id="c调用邮箱应用发送带附件的邮件">C#&nbsp;调用邮箱应用发送带附件的邮件</h3>
<p><a href="https://www.cnblogs.com/BluePointLilac/p/19010985" target="_blank">https://www.cnblogs.com/BluePointLilac/p/19010985</a></p>
<p>本文介绍了如何使用C#调用邮箱应用发送带附件的邮件。首先列出了邮件的主要要素，包括发件人、收件人、主题、正文和附件。然后，分析了SmtpClient和MailKit的使用，其中MailMessage类的Attachments直接打开文件流。本文还提到了mailto协议的特点，以及Windows中如何设置和使用关联应用来处理mailto链接。最后，介绍了如何查找关联的邮箱应用ProgID。</p>
<h3 id="抽象与性能从-linq-看现代-net-的优化之道">抽象与性能：从 LINQ 看现代 .NET 的优化之道</h3>
<p><a href="https://www.cnblogs.com/sdcb/p/19013541/linq-abstraction-and-perf-modern-programming-language" target="_blank">https://www.cnblogs.com/sdcb/p/19013541/linq-abstraction-and-perf-modern-programming-language</a></p>
<p>LINQ是C#中的一个重要主题，常被误解为性能低下的工具。实际上，LINQ设计旨在简化代码，提高可读性和维护性，能通过高层次抽象达成性能优化。在现代.NET中，LINQ利用SIMD技术可实现更快的数据处理速度。性能基准测试表明，LINQ的求和功能比手动循环快约五倍，表明LINQ在优化上的潜力。此外，抽象形式的演变促进了编程语言的性能提升，从C到C++的转变展示了更高抽象层次如何赋能更强的优化能力。</p>
<h3 id="基于blazor实现的简易进销存管理系统">基于Blazor实现的简易进销存管理系统</h3>
<p><a href="https://www.cnblogs.com/known/p/19010037" target="_blank">https://www.cnblogs.com/known/p/19010037</a></p>
<p>本文介绍如何使用Known框架开发Blazor项目，示例为简易进销存管理系统。系统需求包括维护商品、结算方式、库存查询等功能，以及支持单机和云Web版。项目结构包含前后端文件夹和各模块功能，代码示例详述了如何创建和配置不同项目，适合开发者理解与学习。提供的源码可以在码云下载运行，以便查看完整效果。</p>
<h3 id="net-10-中的新增功能系列文章1运行时中的新增功能">.NET 10 中的新增功能系列文章1——运行时中的新增功能</h3>
<p><a href="https://www.cnblogs.com/powertoolsteam/p/19010089" target="_blank">https://www.cnblogs.com/powertoolsteam/p/19010089</a></p>
<p>随着 .NET 10 预览版6发布，微软在JIT编译器优化、硬件支持和内存管理等方面进行了深入改进。这些改进提升了应用程序的执行效率。JIT编译器能够更好地处理结构参数，优化代码生成质量，并引入循环反转和数组接口方法反虚拟化等优化手段。新支持的AVX10.2指令集为数值计算密集型应用提供了硬件加速。通过堆栈分配技术，.NET 10减少了GC负担，进一步提升了性能。本文详细解析了这些技术细节，将为开发者提供实用的指导。</p>
<h3 id="c-acme-client-补充">c# ACME client (补充)</h3>
<p><a href="https://www.cnblogs.com/fs7744/p/19013049" target="_blank">https://www.cnblogs.com/fs7744/p/19013049</a></p>
<p>这篇文章补充了之前关于C# ACME客户端的内容，介绍了在ASP.NET Core中如何单独使用客户端。文中展示了如何设置API来申请证书，并提供了具体的代码示例。示例包括配置HttpClient和AcmeChallengeOptions，展示了开发环境与生产环境的区别，明确了相关流程和要求。文章精简明了，便于开发者理解与应用。</p>
<h3 id="net-10-中的新增功能系列文章3-net-maui-中的新增功能">.NET 10 中的新增功能系列文章3—— .NET MAUI 中的新增功能</h3>
<p><a href="https://www.cnblogs.com/powertoolsteam/p/19014471" target="_blank">https://www.cnblogs.com/powertoolsteam/p/19014471</a></p>
<p>.NET 10 预览版中，MediaPicker 增强了多文件选择及图像压缩功能，提升媒体处理效率。XAML 命名空间简化，使代码更简洁。新增的 Web 请求拦截功能提高 BlazorWebView 和 HybridWebView 的灵活性，支持修改请求及提供本地响应。与 .NET Aspire 的集成简化了遥测及服务发现配置，优化了云原生应用的开发流程。此外，动画 API 也得到了改进。这些更新为开发者提供了更高效的工具和灵活性。</p>
<h3 id="优雅的net-rest-api之fastendpoints">优雅的.net REST API之FastEndpoints</h3>
<p><a href="https://www.cnblogs.com/xiangji/p/19010503" target="_blank">https://www.cnblogs.com/xiangji/p/19010503</a></p>
<p>FastEndpoints 是一个基于 ASP.NET Core 的高性能 Web API 开发框架，采用 REPR 设计模式。文章展示了如何使用该框架开发 REST API，包括获取、添加、修改和删除用户的操作。地址规则简单明了，使用统一的/users 规则支持所有操作。项目结构清晰，每个 API 方法用独立文件夹管理，增强了可维护性。Mapper 提供了优雅的实现方式，支持任意两种类型的转换，通过依赖注入简化了代码逻辑。文章既实用又具有一定的创新性，适合同类项目参考。</p>
<h3 id="通过assemblyloadcontext-卸载清空roslyn动态编译缓存数据">通过AssemblyLoadContext 卸载清空Roslyn动态编译缓存数据</h3>
<p><a href="https://www.cnblogs.com/fanliang11/p/19014969" target="_blank">https://www.cnblogs.com/fanliang11/p/19014969</a></p>
<p>该文章讨论了如何利用AssemblyLoadContext卸载Roslyn动态编译的缓存数据。在分析dotnetty的内存泄漏问题时，发现未回收的静态缓存占总数据的十分之一。通过向Roslyn社区求助，获得了解决方案。文章还介绍了基于.NET8.0的凯亚微服务引擎，以及通过dump分析工具分析内存的具体过程和结果。整体内容针对技术深度、实用性和时效性进行了详细探讨，适合开发者参考。</p>
<h3 id="使用net实现自带思考的tool-并且提供mcp-streamable-http服务">使用.NET实现自带思考的Tool 并且提供mcp streamable http服务</h3>
<p><a href="https://www.cnblogs.com/token-ai/p/19012147" target="_blank">https://www.cnblogs.com/token-ai/p/19012147</a></p>
<p>该文章介绍了使用.NET构建具有思考功能的工具，并提供MCP服务。首先创建WebAPI项目，并安装相关包以支持功能实现。内容包括如何创建Prompts.cs文件，提供深度思考的提示。强调了在复杂问题分析、需求澄清、决策时机、架构规划、风险评估和学习上下文等场景下使用该工具的必要性。文章提出了核心思维原则，包括质疑假设、分解复杂性、考虑多种观点等，旨在帮助系统性处理信息，提高决策效率。</p>
<h3 id="将openglprogrammingguide78版和openglsuperbible7的源代码转换为c">将openGLProgrammingGuide7/8版和openGLSuperBible7的源代码转换为C#</h3>
<p><a href="https://www.cnblogs.com/bitzhuwei/p/18985268" target="_blank">https://www.cnblogs.com/bitzhuwei/p/18985268</a></p>
<p>作者分享了将OpenGL示例项目从C++转写为C#的经验，强调了编译OpenGL代码的困难，尤其是缺少库和模型文件。作者获得了OpenGL相关书籍的源代码，并成功编译，提升了对OpenGL的理解。示例项目涵盖了多个OpenGL特性，包括legacy OpenGL、各种shader和纹理处理，此外还包含多种格式解析器。未来，作者计划将Assimp转写为C#代码，认为C#效率已接近C++。</p>
<h3 id="第三人称骑马系统以及交互动画">第三人称——骑马系统以及交互动画</h3>
<p><a href="https://www.cnblogs.com/eanojiang/p/19017846" target="_blank">https://www.cnblogs.com/eanojiang/p/19017846</a></p>
<p>该文章介绍了骑马系统的编程实现，使用了C#和Unity引擎。代码定义了角色在马上的行为，包括角色的移动、动画控制及上下马的逻辑。利用Input获取玩家输入，修改角色状态并控制动画层级。代码结构清晰，适合开发者了解骑马机制及相关实现。整体技术深度适中，实用性高，适合游戏开发应用。原始性较好，及时性符合当前游戏开发的需求，引用适量的第三方库提升了功能性。整体可读性良好，为实现游戏功能提供基本框架。</p>
<h3 id="当物理定律与高精度计算相遇我的新开源项目-n-body">当物理定律与高精度计算相遇：我的新开源项目 N-Body</h3>
<p><a href="https://www.cnblogs.com/sdcb/p/19017752/n-body-init" target="_blank">https://www.cnblogs.com/sdcb/p/19017752/n-body-init</a></p>
<p>本文介绍了作者的下一个开源项目n-body，这是一个天体运动模拟程序。作者从早期用C++、JavaScript和C#编写的经验中汲取了教训，认识到数值精度和计算工具的重要性。随着对现代数值求解器的理解加深，以及高精度计算库sdcb.arithmetic的完善，作者重新审视n-body项目，认为现在是实现该项目的时机。尽管面临性能优化的挑战，作者值得期待结合n-body项目的经验来进一步提升库的性能。欢迎大家关注并参与该项目的开发。</p>
<h3 id="c-acme-client">c# ACME client</h3>
<p><a href="https://www.cnblogs.com/fs7744/p/19009427" target="_blank">https://www.cnblogs.com/fs7744/p/19009427</a></p>
<p>ACME 协议是一种开放标准，旨在自动化数字证书的颁发与续订。本文介绍了如何使用ACME协议申请TLS/SSL证书，并在ASP.NET Core中集成该协议。ACME协议的流程包括申请账户、创建证书订单、选择验证方式等步骤。常见的验证方式有HTTP和DNS。HTTP验证通过在Web服务器放置指定文件来验证，而DNS验证则需要在域名的TXT记录中放置特定值。每种方式都有优缺点，作者详细讨论了其实施细节与技术背景。</p>
<h3 id="bcrypt-简介与加密和验证示例加密知多少系列_8">Bcrypt 简介与加密和验证示例【加密知多少系列_8】</h3>
<p><a href="https://www.cnblogs.com/hnzhengfy/p/18984477/JMZDS_Bcrypt" target="_blank">https://www.cnblogs.com/hnzhengfy/p/18984477/JMZDS_Bcrypt</a></p>
<p>Bcrypt 是基于 Blowfish 算法的单向哈希函数，设计用于密码存储。它采用随机盐值和可调工作因子确保安全性，防止彩虹表和暴力破解。随机盐值确保相同密码得到不同哈希，工作因子可调，增加计算时间提高安全性。其安全性强于 MD5 和 SHA 系列，适合用户密码存储和企业安全框架的实现。在 C# 中，通过 BCrypt.Net 库，可以轻松实现密码的加密和验证。</p>
<h3 id="多agent协作入门移交编排模式">多Agent协作入门：移交编排模式</h3>
<p><a href="https://www.cnblogs.com/edisontalk/p/-/quick-start-agent-orchestration-handoff" target="_blank">https://www.cnblogs.com/edisontalk/p/-/quick-start-agent-orchestration-handoff</a></p>
<p>本文介绍了Semantic Kernel中的移交编排模式。这种模式允许不同的Agent根据上下文转移控制权，适用于客户支持和专家系统等场景。文章展示了一个电商客服中心的DEMO，定义了四个Agent，分别负责分流、订单状态查询、退货和退款请求。通过创建.NET控制台项目并安装相关包，文章详细描述了实现步骤。使用appsettings.json配置LLM API，并提供了调用API的代码示例，帮助读者实现移交编排的功能。</p>
<h3 id="敏捷测试如何应用-bdd行为驱动开发">敏捷测试如何应用 BDD(行为驱动开发)？</h3>
<p><a href="https://www.cnblogs.com/tester2test/p/19016256" target="_blank">https://www.cnblogs.com/tester2test/p/19016256</a></p>
<p>随着敏捷开发的推广，传统测试方法的局限显现。行为驱动开发(BDD)强调用自然语言描述需求，促进跨职能团队合作，提升软件质量和效率。BDD与敏捷测试紧密结合，提供快速反馈和文档化支持。实施方法包括以用户故事驱动行为描述，并选用合适的BDD工具。BDD的优势在于提升需求理解、促进自动化测试和降低维护成本。尽管面临编写质量、工具集成和维护成本等挑战，但通过培训和文化变革可克服。此外，AI技术的应用为BDD测试带来新机遇，进一步提高团队协作和测试效率。。</p>
<h3 id="container-appcontainer-app无法从container-registries-拉取镜像---报错-403-forbidden">【Container App】Container App无法从Container Registries 拉取镜像 - 报错 403 Forbidden</h3>
<p><a href="https://www.cnblogs.com/lulight/p/19014129" target="_blank">https://www.cnblogs.com/lulight/p/19014129</a></p>
<p>文章讨论了Azure Container Registries(ACR)启用防火墙和关闭公网访问时，Container App无法拉取镜像的问题。主要原因包括ACR未设置允许ACA访问的白名单，以及ACA的出口IP地址不固定。建议使用ACR的Private Endpoint来解决403访问问题，并提供必要的配置步骤和验证方法。文中还提到，即使启用了Azure Trusted Services，某些服务仍无法绕过ACR的访问限制。文章逻辑清晰，信息丰富，并提供了实用的技术解决方案。</p>
<h3 id="azure-bot-service在中国区azure上部署机器人的-python-版配置">【Azure Bot Service】在中国区Azure上部署机器人的 Python 版配置</h3>
<p><a href="https://www.cnblogs.com/lulight/p/19017553" target="_blank">https://www.cnblogs.com/lulight/p/19017553</a></p>
<p>本文介绍了如何在中国区的Azure上配置Python SDK以使用Azure Bot Service。选择Python SDK后，发现缺乏具体的配置指导。通过两个部分详细说明了云适配器的使用和配置方法：第一部分展示了如何使用CloudAdapter并加载配置文件config.py，第二部分则展示了在config.py中需添加的必要配置项。整体内容清晰、实用，补充了文档的不足，适合开发者参考。</p>
<h3 id="excel-xls与xlsx格式转换排坑指南">Excel: xls与xlsx格式转换排坑指南</h3>
<p><a href="https://www.cnblogs.com/shy-huang/p/19016652" target="_blank">https://www.cnblogs.com/shy-huang/p/19016652</a></p>
<p>本文讨论了Excel 5.0/95的XLS格式与Excel 2007的XLSX格式转换时候遇到的数据类型匹配问题。XLS文件的单元格默认为General类型，而XLSX则针对每列设置具体的数据类型，从而可能导致数据不一致。此外，XLS和XLSX在处理空值和换行符时也存在差异。例如，XLS将空字符串和Null视为相同，而XLSX则将其区分开。本文还提到XLS的最大行数限制对数据保存的影响，以及不同情况下的类型转换处理。总结了各种情况及其解决方案。</p>
<h3 id="net通过http操作minio">.NET通过HTTP操作MINIO</h3>
<p><a href="https://www.cnblogs.com/hanfan/p/19010378" target="_blank">https://www.cnblogs.com/hanfan/p/19010378</a></p>
<p>本文介绍了如何在.NET环境中使用Http方式操作MinIO，提供了简单的上传、下载和删除功能。由于缺乏SDK的支持，作者直接使用HttpWebRequest和HttpWebResponse进行文件操作。核心代码展示了MinioHttpOperator类的构造方法及其参数，包括MinIO服务器的端点、访问密钥、秘密密钥、区域和服务名称。该实现便于扩展，适合基础需求。</p>
<h2 id="主题">主题</h2>
<h3 id="visual-studio-2015-停用支持旧版-visual-studio-的提醒---visual-studio-博客">Visual Studio 2015 停用：支持旧版 Visual Studio 的提醒 - Visual Studio 博客</h3>
<p><a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2015-retirement-support-reminder-for-older-versions-of-visual-studio/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/visualstudio/visual-studio-2015-retirement-support-reminder-for-older-versions-of-visual-studio/</a></p>
<p>Visual Studio 2015 生命周期结束提醒。</p>
<p>对 Visual Studio 2015 的扩展支持将于 2025 年 10 月 14 日结束，此后将不再提供任何安全更新。</p>
<p>本文还列出了其他版本的 Visual Studio 的终止支持日期。</p>
<ul>
<li>对 Visual Studio 2017 15.9 的扩展支持至 2027 年 4 月 13 日</li>
<li>对 Visual Studio 2019 16.11 的扩展支持，直至 2029 年 4 月 9 日</li>
<li>视觉工作室 2022
<ul>
<li>17.10 LTSC 支持至 2026 年 1 月 13 日</li>
<li>17.12 LTSC 支持至 2026 年 7 月 14 日</li>
<li>17.14 主流支持至 2027 年 1 月 12 日，扩展支持至 2032 年 1 月 13 日</li>
</ul>
</li>
</ul>
<h3 id="net-和-net-framework-2025-年-8-月服务版本更新---net-博客">.NET 和 .NET Framework 2025 年 8 月服务版本更新 - .NET 博客</h3>
<p><a href="https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-august-2025-servicing-updates/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-august-2025-servicing-updates/</a></p>
<p>.NET 和 .NET Framework 的 2025 年 8 月服务版本。</p>
<p>此版本是不包括安全修复的错误修复的主要更新。 此外，该版本仅提供 .NET，并且不提供对 .NET Framework 的更新。</p>
<h3 id="visual-studio-live---从-vslive-redmond-实时">Visual Studio Live - 从 VSLive Redmond 实时</h3>
<p><a href="https://www.youtube.com/watch?v=DBwgPW3Cxpk" target="_blank" rel="noopener nofollow">https://www.youtube.com/watch?v=DBwgPW3Cxpk</a></p>
<p>Visual Studio Live 活动于 8 月 5 日发布。</p>
<ul>
<li><a href="https://blog.azure.moe/2025/08/06/visual-studio-live-keynote-the-future-of-visual-studio/" target="_blank" rel="noopener nofollow">Visual Studio Live Keynote – Visual Studio 的未来</a>： [@kosmosebi]( <a href="https://x.com/kosmosebi" target="_blank" rel="noopener nofollow">https://x.com/kosmosebi</a> 的主题演讲摘要文章)</li>
</ul>
<h2 id="发布">发布</h2>
<ul>
<li><a href="https://github.com/AvaloniaUI/Avalonia" target="_blank" rel="noopener nofollow">AvaloniaUI</a>
<ul>
<li><a href="https://github.com/AvaloniaUI/Avalonia/releases/tag/11.3.3" target="_blank" rel="noopener nofollow">11.3.3</a></li>
</ul>
</li>
<li><a href="https://github.com/aws/aws-sdk-net" target="_blank" rel="noopener nofollow">aws/aws-sdk-net</a>
<ul>
<li><a href="https://github.com/aws/aws-sdk-net/releases/tag/3.7.1095.0" target="_blank" rel="noopener nofollow">3.7.1095.0</a>、 <a href="https://github.com/aws/aws-sdk-net/releases/tag/3.7.1096.0" target="_blank" rel="noopener nofollow">3.7.1096.0</a>、 <a href="https://github.com/aws/aws-sdk-net/releases/tag/3.7.1097.0" target="_blank" rel="noopener nofollow">3.7.1097. 0</a>、 <a href="https://github.com/aws/aws-sdk-net/releases/tag/3.7.1098.0" target="_blank" rel="noopener nofollow">3.7.1098.0</a>、 <a href="https://github.com/aws/aws-sdk-net/releases/tag/3.7.1099.0" target="_blank" rel="noopener nofollow">3.7.1099. 0</a>， <a href="https://github.com/aws/aws-sdk-net/releases/tag/4.0.63.0" target="_blank" rel="noopener nofollow">4.0.63.0</a>， <a href="https://github.com/aws/aws-sdk-net/releases/tag/4.0.64.0" target="_blank" rel="noopener nofollow">4.0.64.0</a>、 <a href="https://github.com/aws/aws-sdk-net/releases/tag/4.0.65.0" target="_blank" rel="noopener nofollow">4.0.65.0</a>、 <a href="https://github.com/aws/aws-sdk-net/releases/tag/4.0.66.0" target="_blank" rel="noopener nofollow">4.0.66.0</a>、 <a href="https://github.com/aws/aws-sdk-net/releases/tag/4.0.67.0" target="_blank" rel="noopener nofollow">4.0.67.0</a></li>
</ul>
</li>
<li><a href="https://github.com/Azure/azure-sdk-for-net" target="_blank" rel="noopener nofollow">Azure/azure-sdk-for-net</a>
<ul>
<li><a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.Identity_1.15.0" target="_blank" rel="noopener nofollow">Azure.Identity_1.15.0</a>， <a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.Monitor.Ingestion_1.2.0" target="_blank" rel="noopener nofollow">Azure.Monitor.Ingestion_1.2. 0</a>， <a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.ResourceManager.AppContainers_1.4.1" target="_blank" rel="noopener nofollow">Azure.ResourceManager.AppContainers_1.4. 1</a>， <a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.ResourceManager.AppService_1.4.1" target="_blank" rel="noopener nofollow">Azure.ResourceManager.AppService_1.4. 1</a>， <a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.ResourceManager.Cdn_1.5.0" target="_blank" rel="noopener nofollow">Azure.ResourceManager.Cdn_1.5. 0</a>， <a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.ResourceManager.Network_1.11.2" target="_blank" rel="noopener nofollow">Azure.ResourceManager.Network_1.11. 2</a> <a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.ResourceManager.PostgreSql_1.3.1" target="_blank" rel="noopener nofollow">Azure.ResourceManager.PostgreSql_1.3.1</a>，<a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.Storage.DataMovement_12.2.1" target="_blank" rel="noopener nofollow">Azure.Storage.DataMovement_12.2。 1</a>， <a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.Storage.DataMovement.Blobs_12.2.1" target="_blank" rel="noopener nofollow">Azure.Storage.DataMovement.Blobs_12.2. 1</a>， <a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/Azure.Storage.DataMovement.Files.Shares_12.2.1" target="_blank" rel="noopener nofollow">Azure.Storage.DataMovement.Files.Shares_12.2. 1</a>， <a href="https://github.com/Azure/azure-sdk-for-net/releases/tag/System.ClientModel_1.6.0" target="_blank" rel="noopener nofollow">System.ClientModel_1.6. 0</a></li>
</ul>
</li>
<li><a href="https://github.com/CommunityToolkit/Maui" target="_blank" rel="noopener nofollow">CommunityToolkit/毛伊岛</a>
<ul>
<li><a href="https://github.com/CommunityToolkit/Maui/releases/tag/12.2.0" target="_blank" rel="noopener nofollow">12.2.0</a>， <a href="https://github.com/CommunityToolkit/Maui/releases/tag/3.0.2-camera" target="_blank" rel="noopener nofollow">3.0.2-相机</a>， <a href="https://github.com/CommunityToolkit/Maui/releases/tag/3.0.3-maps" target="_blank" rel="noopener nofollow">3.0. 3-maps</a>， <a href="https://github.com/CommunityToolkit/Maui/releases/tag/6.1.2-mediaelement" target="_blank" rel="noopener nofollow">6.1.2-mediaelement</a></li>
</ul>
</li>
<li><a href="https://github.com/DataDog/dd-trace-dotnet" target="_blank" rel="noopener nofollow">DataDog/dd-trace-dotnet</a>
<ul>
<li><a href="https://github.com/DataDog/dd-trace-dotnet/releases/tag/v3.23.0" target="_blank" rel="noopener nofollow">v3.23.0</a></li>
</ul>
</li>
<li><a href="https://github.com/dotnet/dotnet-monitor" target="_blank" rel="noopener nofollow">dotnet/dotnet-monitor</a>
<ul>
<li><a href="https://github.com/dotnet/dotnet-monitor/releases/tag/v8.1.2" target="_blank" rel="noopener nofollow">v8.1.2</a>， <a href="https://github.com/dotnet/dotnet-monitor/releases/tag/v9.0.4" target="_blank" rel="noopener nofollow">v9.0.4</a></li>
</ul>
</li>
<li><a href="https://github.com/googleapis/google-cloud-dotnet" target="_blank" rel="noopener nofollow">googleapis/google-cloud-dotnet</a>
<ul>
<li><a href="https://github.com/googleapis/google-cloud-dotnet/releases/tag/Google.Cloud.AIPlatform.V1-3.42.0" target="_blank" rel="noopener nofollow">Google.Cloud.AIPlatform.V1-3.42.0</a>， <a href="https://github.com/googleapis/google-cloud-dotnet/releases/tag/Google.Cloud.Bigtable.Admin.V2-3.29.0" target="_blank" rel="noopener nofollow"> Google.Cloud.Bigtable.Admin.V2-3.29.0</a>， <a href="https://github.com/googleapis/google-cloud-dotnet/releases/tag/Google.Cloud.Compute.V1-3.13.0" target="_blank" rel="noopener nofollow"> Google.Cloud.Compute.V1-3.13.0</a>， <a href="https://github.com/googleapis/google-cloud-dotnet/releases/tag/Google.Cloud.Datastream.V1-2.11.0" target="_blank" rel="noopener nofollow">Google.Cloud.Datastream.V1-2.11. 0</a>、<a href="https://github.com/googleapis/google-cloud-dotnet/releases/tag/Google.Cloud.Run.V2-2.16.0" target="_blank" rel="noopener nofollow">Google.Cloud.Run.V2-2.16。 0</a>、<a href="https://github.com/googleapis/google-cloud-dotnet/releases/tag/Google.Shopping.Merchant.Accounts.V1-1.0.0" target="_blank" rel="noopener nofollow">Google.Shopping.Merchant.Accounts.V1-1.0。 0</a>、<a href="https://github.com/googleapis/google-cloud-dotnet/releases/tag/Google.Shopping.Merchant.DataSources.V1-1.0.0" target="_blank" rel="noopener nofollow">Google.Shopping.Merchant.DataSources.V1-1.0。 0</a>、<a href="https://github.com/googleapis/google-cloud-dotnet/releases/tag/Google.Shopping.Merchant.Inventories.V1-1.0.0" target="_blank" rel="noopener nofollow">Google.Shopping.Merchant.Inventories.V1-1.0。 0</a>、<a href="https://github.com/googleapis/google-cloud-dotnet/releases/tag/Google.Shopping.Merchant.IssueResolution.V1-1.0.0" target="_blank" rel="noopener nofollow">Google.Shopping.Merchant.IssueResolution.V1-1.0。 0</a>、<a href="https://github.com/googleapis/google-cloud-dotnet/releases/tag/Google.Shopping.Merchant.Lfp.V1-1.0.0" target="_blank" rel="noopener nofollow">Google.Shopping.Merchant.Lfp.V1-1.0。 0</a>、<a href="https://github.com/googleapis/google-cloud-dotnet/releases/tag/Google.Shopping.Merchant.OrderTracking.V1-1.0.0" target="_blank" rel="noopener nofollow">Google.Shopping.Merchant.OrderTracking.V1-1.0。 0</a> <a href="https://github.com/googleapis/google-cloud-dotnet/releases/tag/Google.Shopping.Merchant.Products.V1-1.0.0" target="_blank" rel="noopener nofollow">谷歌购物.商家产品.V1-1.0.0</a>、<a href="https://github.com/googleapis/google-cloud-dotnet/releases/tag/Google.Shopping.Merchant.Promotions.V1-1.0.0" target="_blank" rel="noopener nofollow">Google.Shopping.Merchant.Promotions.V1-1.0. 0</a>、<a href="https://github.com/googleapis/google-cloud-dotnet/releases/tag/Google.Shopping.Merchant.Quota.V1-1.0.0" target="_blank" rel="noopener nofollow">Google.Shopping.Merchant.Quota.V1-1.0。 0</a>、<a href="https://github.com/googleapis/google-cloud-dotnet/releases/tag/Google.Shopping.Merchant.Reports.V1-1.0.0" target="_blank" rel="noopener nofollow">Google.Shopping.Merchant.Reports.V1-1.0。 0</a></li>
</ul>
</li>
</ul>
<h2 id="文章幻灯片等">文章、幻灯片等</h2>
<h3 id="net-开发人员今天应该窃取的-5-个-copilot-聊天提示---net-博客">.NET 开发人员今天应该窃取的 5 个 Copilot 聊天提示 - .NET 博客</h3>
<p><a href="https://devblogs.microsoft.com/dotnet/5-copilot-chat-prompts-dotnet-devs-should-steal-today/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/dotnet/5-copilot-chat-prompts-dotnet-devs-should-steal-today/</a></p>
<p>适用于 .NET 开发人员的 Copilot Chat 的 5 个简明提示。</p>
<h3 id="关于-c-异步编程中-asyncawait-的想法">关于 C# 异步编程中 Async/await 的想法</h3>
<p><a href="https://zenn.dev/tfutada/articles/ba32d7e48b12af" target="_blank" rel="noopener nofollow">https://zenn.dev/tfutada/articles/ba32d7e48b12af</a></p>
<p>C# 异步编程中的 async/await 概述，以及 async、Semaphore 以及更多与异步相关的说明。</p>
<h3 id="我想在-aspnet-core-的代码中获取-razor-组件的-html">我想在 ASP.NET Core 的代码中获取 Razor 组件的 HTML</h3>
<p><a href="https://qiita.com/omt_teruki/items/dca411c0da406dfea9ae" target="_blank" rel="noopener nofollow">https://qiita.com/omt_teruki/items/dca411c0da406dfea9ae</a></p>
<p>了解如何将 Razor 组件的呈现结果获取为 HTML 字符串。</p>
<h3 id="我们如何在-workleap-上执行-net-编码标准以提高生产力质量和性能">我们如何在 Workleap 上执行 .NET 编码标准以提高生产力、质量和性能</h3>
<p><a href="https://anthonysimmon.com/workleap-dotnet-coding-standards/" target="_blank" rel="noopener nofollow">https://anthonysimmon.com/workleap-dotnet-coding-standards/</a></p>
<p>本文作者中 .NET 编码约定的应用示例。 NuGet 包中的部署和部署后效果。</p>
<h3 id="使用-eddsa-签名通过-openid-connect-验证-aspnet-core-中的令牌">使用 EdDSA 签名通过 OpenID Connect 验证 ASP.NET Core 中的令牌</h3>
<p><a href="https://damienbod.com/2025/08/06/use-eddsa-signatures-to-validate-tokens-in-asp-net-core-using-openid-connect/" target="_blank" rel="noopener nofollow">https://damienbod.com/2025/08/06/use-eddsa-signatures-to-validate-tokens-in-asp-net-core-using-openid-connect/</a></p>
<p>了解如何在将 OpenID Connect 与 ASP.NET Core 配合使用时使用 EdDSA 签名验证令牌。</p>
<h3 id="c-在-windows-凭据管理器中注册读取凭据">C# 在 Windows 凭据管理器中注册/读取凭据</h3>
<p><a href="https://qiita.com/unakichi/items/5ee694ceafc678836c66" target="_blank" rel="noopener nofollow">https://qiita.com/unakichi/items/5ee694ceafc678836c66</a></p>
<p>用于读取和写入 Windows 凭据管理器的示例代码。</p>
<h3 id="使用哪一个-aws-transform-for--net-和-net-升级助手之间的比较">[使用哪一个？ 】AWS Transform for . .NET 和 .NET 升级助手之间的比较</h3>
<p><a href="https://qiita.com/takeshi18/items/e033f949d10f21af68da" target="_blank" rel="noopener nofollow">https://qiita.com/takeshi18/items/e033f949d10f21af68da</a></p>
<p>比较 AWS Transform for .NET 和 .NET Upgrade Assistant，并尝试运行 AWS Transform for .NET 演示。</p>
<h3 id="c-浮点向量作中的最小最大误差">c# 浮点向量作中的最小/最大误差</h3>
<p><a href="https://qiita.com/rougemeilland/items/5560cc10140f59204e21" target="_blank" rel="noopener nofollow">https://qiita.com/rougemeilland/items/5560cc10140f59204e21</a></p>
<p>.NET 9 和 8 中浮点向量作中的最小/最大行为的差异。</p>
<h3 id="c-14-扩展成员也称为扩展-everything---ndepend-博客">C# 14 扩展成员：也称为扩展 Everything - NDepend 博客</h3>
<p><a href="https://blog.ndepend.com/c-14-extension-members-also-known-as-extension-everything/" target="_blank" rel="noopener nofollow">https://blog.ndepend.com/c-14-extension-members-also-known-as-extension-everything/</a></p>
<p>C# 14 扩展成员的说明。 本文还谈到了它将是什么样的实现，如何解决歧义，以及如何无法移植现有的扩展方法。</p>
<h3 id="winui3-也在-mvvmmvvm-工具包中实现">WinUI3 也在 MVVM(MVVM 工具包)中实现</h3>
<p><a href="https://zenn.dev/y_a_y/articles/winui_mvvm_b9685efa3cc1eb" target="_blank" rel="noopener nofollow">https://zenn.dev/y_a_y/articles/winui_mvvm_b9685efa3cc1eb</a></p>
<p>了解如何在 WinUI 3 中使用 CommunityToolkit.Mvvm 实现 MVVM。</p>
<h3 id="winui3-也使用-mvvm屏幕转换di实现">WinUI3 也使用 MVVM(屏幕转换，DI)实现</h3>
<p><a href="https://zenn.dev/y_a_y/articles/winui_mvvm_2_b9685efa3cc1eb" target="_blank" rel="noopener nofollow">https://zenn.dev/y_a_y/articles/winui_mvvm_2_b9685efa3cc1eb</a></p>
<p>介绍如何在 WinUI 3 中实现 MVVM。 如何实现屏幕转换和 DI。</p>
<h3 id="从名称中动态获取图标-mudblazor">从名称中动态获取图标 (MudBlazor)</h3>
<p><a href="https://zenn.dev/tetr4lab/articles/66d6517ed3cab5" target="_blank" rel="noopener nofollow">https://zenn.dev/tetr4lab/articles/66d6517ed3cab5</a></p>
<p>了解如何从 MudBlazor 中的一串图标名称中动态检索图标。</p>
<h3 id="当我尝试在我的-net-项目中使用-claude-codeserena-时我得到了什么">当我尝试在我的 .NET 项目中使用 Claude Code+Serena 时我得到了什么</h3>
<p><a href="https://zenn.dev/nuits_jp/articles/2025-08-07-claude-code-with-serena-for-dotnet10" target="_blank" rel="noopener nofollow">https://zenn.dev/nuits_jp/articles/2025-08-07-claude-code-with-serena-for-dotnet10</a></p>
<p>了解使用 Claude Code 和 Serena 开发 .NET 项目的要点和解决方案。</p>
<h3 id="在-aspnet-core-中部署-serilog---初学者指南">在 ASP.NET Core 中部署 Serilog - 初学者指南</h3>
<p><a href="https://zenn.dev/zead/articles/aspnetcore-serilog" target="_blank" rel="noopener nofollow">https://zenn.dev/zead/articles/aspnetcore-serilog</a></p>
<p>ASP.NET 有关如何将 Serilog 部署为核心应用程序的日志记录的指南。 本文从介绍到结构化日志的输出进行了解释。</p>
<h3 id="探索-net-ai-应用程序的新代理质量和-nlp-评估器---net-博客">探索 .NET AI 应用程序的新代理质量和 NLP 评估器 - .NET 博客</h3>
<p><a href="https://devblogs.microsoft.com/dotnet/exploring-agent-quality-and-nlp-evaluators/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/dotnet/exploring-agent-quality-and-nlp-evaluators/</a></p>
<p>关于新添加到 Microsoft.Extensions.AI.Evaluation 的工具，用于评估代理质量和自然语言处理指标。</p>
<h3 id="对-aspnet-core-标识的密钥支持探索-net-10-预览版---第-6-部分">对 ASP.NET Core 标识的密钥支持：探索 .NET 10 预览版 - 第 6 部分</h3>
<p><a href="https://andrewlock.net/exploring-dotnet-10-preview-features-6-passkey-support-for-aspnetcore-identity/" target="_blank" rel="noopener nofollow">https://andrewlock.net/exploring-dotnet-10-preview-features-6-passkey-support-for-aspnetcore-identity/</a></p>
<p>介绍 .NET 10 中 ASP.NET 核心标识支持的密钥。 本文介绍了新模板如何实现如何注册密钥。</p>
<h3 id="net-conf-2025---宣布征集内容---net-博客">.NET Conf 2025 - 宣布征集内容 - .NET 博客</h3>
<p><a href="https://devblogs.microsoft.com/dotnet/dotnet-conf-2025-announcing-the-call-for-content/" target="_blank" rel="noopener nofollow">https://devblogs.microsoft.com/dotnet/dotnet-conf-2025-announcing-the-call-for-content/</a></p>
<p>.NET Conf 2025 内容征集现已推出。 报名截止日期为太平洋夏令时间 8 月 31 日 23：59。</p>
<h2 id="书籍">书籍</h2>
<h3 id="c-第-3-版">C# 第 3 版</h3>
<p><a href="https://www.shoeisha.co.jp/book/detail/9784798188003" target="_blank" rel="noopener nofollow">https://www.shoeisha.co.jp/book/detail/9784798188003</a></p>
<p>C# 的第三个版本将于 8 月 25 日发布。</p>
<ul>
<li><a href="https://blog.azure.moe/2025/08/09/%e3%82%b9%e3%83%a9%e3%82%b9%e3%83%a9%e3%82%8f%e3%81%8b%e3%82%8bc-%e7%ac%ac3%e7%89%88/" target="_blank" rel="noopener nofollow">C# 第 3 版</a>： [@kosmosebi]( 由 <a href="https://x.com/kosmosebi" target="_blank" rel="noopener nofollow">https://x.com/kosmosebi</a> 审阅)</li>
</ul>
<h3 id="推文">推文</h3>
<p><a href="https://x.com/davidfowl/status/1953452492706169243?s=12" target="_blank" rel="noopener nofollow">https://x.com/davidfowl/status/1953452492706169243?s=12</a></p>
<p>制作了一个示例，展示了如何使用新的交互服务来提示输入参数和执行应用程序。</p>
<h2 id="c-net-交流群">C# .NET 交流群</h2>
<p>相信大家在开发中经常会遇到一些性能问题，苦于没有有效的工具去发现性能瓶颈，或者是发现瓶颈以后不知道该如何优化。之前一直有读者朋友询问有没有技术交流群，但是由于各种原因一直都没创建，现在很高兴的在这里宣布，我创建了一个专门交流.NET性能优化经验的群组，主题包括但不限于：</p>
<ul>
<li>如何找到.NET性能瓶颈，如使用APM、dotnet tools等工具</li>
<li>.NET框架底层原理的实现，如垃圾回收器、JIT等等</li>
<li>如何编写高性能的.NET代码，哪些地方存在性能陷阱</li>
</ul>
<p>希望能有更多志同道合朋友加入，分享一些工作中遇到的.NET问题和宝贵的分析优化经验。<strong>目前一群已满，现在开放二群。</strong>可以加我vx，我拉你进群: <strong>ls1075</strong> 另外也创建了<strong>QQ Group</strong>: 687779078，欢迎大家加入。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-08-21 22:07">2025-08-21 22:07</span>&nbsp;
<a href="https://www.cnblogs.com/InCerry">InCerry</a>&nbsp;
阅读(<span id="post_view_count">364</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19051672);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19051672', targetLink: 'https://www.cnblogs.com/InCerry/p/-/dotnet_week_25_8_1', title: '.NET周刊【8月第1期 2025-08-03】' })">举报</a>
</div>
        