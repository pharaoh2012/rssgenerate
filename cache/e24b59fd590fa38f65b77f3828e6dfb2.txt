
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Rong-/p/18700012" title="发布于 2025-02-05 19:14">
    <span role="heading" aria-level="2">C++学习：CRTP 模式是什么</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>CRTP（Curiously Recurring Template Pattern，奇异递归模板模式）是 C++ 中的一种设计模式。</p>
<h2 id="基本概念">基本概念</h2>
<p>CRTP 是指一个类（通常是基类）<code>以其派生类作为模板参数</code>的模式。其基本形式如下：</p>
<pre><code class="language-cpp">template &lt;typename Derived&gt;
class Base {
// 基类的成员函数可以使用 Derived 类型
};

class Derived : public Base&lt;Derived&gt; {
// 派生类的定义
};
</code></pre>
<h2 id="主要用途和优势">主要用途和优势</h2>
<ul>
<li>静态多态性<br>
CRTP 可以实现<code>静态多态</code>，即在编译时确定调用的函数，<code>避免</code>了<code>动态多态</code>（通过虚函数实现）带来的<code>运行时开销</code>。</li>
</ul>
<pre><code class="language-cpp">template &lt;typename Derived&gt;
class Shape {
public:
void draw() {
static_cast&lt;Derived*&gt;(this)-&gt;drawImpl();
}
};
class Circle : public Shape&lt;Circle&gt; {
public:
void drawImpl() {
std::cout &lt;&lt; "Drawing a circle" &lt;&lt; std::endl;
}
};

class Square : public Shape&lt;Square&gt; {
public:
void drawImpl() {
std::cout &lt;&lt; "Drawing a square" &lt;&lt; std::endl;
}
};

int main() {
Circle circle;
Square square;
circle.draw(); // 调用 Circle 的 drawImpl
square.draw(); // 调用 Square 的 drawImpl
return 0;
}
</code></pre>
<p>在这个例子中，Shape 类的 draw 函数通过 static_cast 将 this 指针转换为 Derived 类型，然后调用 drawImpl 函数。由于 drawImpl 函数是在编译时确定的，因此没有虚函数调用的开销。</p>
<ul>
<li>避免虚函数开销<br>
在某些情况下，虚函数的调用会带来一定的开销，特别是在性能敏感的代码中。CRTP 可以作为一种替代方案，避免虚函数的使用。</li>
<li>代码复用和扩展<br>
CRTP 允许基类访问派生类的成员，从而实现代码的复用和扩展。基类可以在不知道具体派生类的情况下，调用派生类的特定功能。</li>
</ul>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.7038056462766203" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-05 19:15">2025-02-05 19:14</span>&nbsp;
<a href="https://www.cnblogs.com/Rong-">荣--</a>&nbsp;
阅读(<span id="post_view_count">35</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18700012" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18700012);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18700012', targetLink: 'https://www.cnblogs.com/Rong-/p/18700012', title: 'C++学习：CRTP 模式是什么' })">举报</a>
</div>
        