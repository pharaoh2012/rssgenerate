
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/cj8988/p/18949573" title="发布于 2025-06-26 12:04">
    <span role="heading" aria-level="2">搭建一个图片变视频的AI(二)：开始搭建</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>前一章介绍了模型相关，现在开始搭建。</p>
<p>&nbsp;</p>
<p><span style="font-size: 18px"><strong>一：下载，解压<span class="ng-star-inserted">ComfyUI</span></strong></span></p>
<p><a href="https://github.com/comfyanonymous/ComfyUI" target="_blank" rel="noopener nofollow"><span style="font-size: 18px"><strong><span class="ng-star-inserted">https://github.com/comfyanonymous/ComfyUI</span></strong></span></a></p>
<p>上面链接中也有安装过程，可以参考。</p>
<p>&nbsp;</p>
<p>也可以直接进入文件夹，直接运行，差什么，安装什么（我比较喜欢这样，因为我之前pip可能已经安装过了某些包）。最好借助AI，报错直接复制给AI,让它给出建议。</p>
<div class="cnblogs_Highlighter">
<pre class="brush:csharp;gutter:true;">python .\main.py<br><br>根据报错，差什么，安装什么 pip install ...</pre>
</div>
<p>&nbsp;</p>
<p><span style="font-size: 16px"><span style="color: rgba(255, 0, 0, 1)"><strong>特别注意：我一直遇到的问题，安装使用GPU的包时：</strong></span><strong>pip install torch torchvision torchaudio --index-url&nbsp;https://download.pytorch.org/whl/cu121 。安装的版本是2.5.1，因为自动适配我的CUDA Version: 12.9版本。</strong></span></p>
<p><span style="font-size: 16px"><strong>但是在安装pip install xformers 时，会卸载&nbsp;torch，重新安装&nbsp;torch 时，安装2.4.0。导致版本冲突，最终解决方案：</strong><br></span></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">先：
pip install torch</span>==<span style="color: rgba(128, 0, 128, 1)">2.4</span>.<span style="color: rgba(128, 0, 128, 1)">0</span> torchvision==<span style="color: rgba(128, 0, 128, 1)">0.19</span>.<span style="color: rgba(128, 0, 128, 1)">0</span> torchaudio==<span style="color: rgba(128, 0, 128, 1)">2.3</span>.<span style="color: rgba(128, 0, 128, 1)">0</span> --index-url https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">download.pytorch.org/</span>whl/<span style="color: rgba(0, 0, 0, 1)">cu121

然后：
pip install xformers</span>==<span style="color: rgba(128, 0, 128, 1)">0.0</span>.<span style="color: rgba(128, 0, 128, 1)">27</span>.post2<br><br>结果完美适配我的CUDA。<br>不使用 xformers 也能运行，内存占用也非常大。建议尽可能使用 xformers</pre>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-size: 16px">&nbsp;检查一下：<br></span></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> torch

</span><span style="color: rgba(0, 0, 255, 1)">print</span>(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">CUDA 可用:</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, torch.cuda.is_available())
</span><span style="color: rgba(0, 0, 255, 1)">print</span>(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">当前设备:</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, torch.cuda.get_device_name(0))
</span><span style="color: rgba(0, 0, 255, 1)">print</span>(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">CUDA 版本:</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, torch.version.cuda)
</span><span style="color: rgba(0, 0, 255, 1)">print</span>(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">cuDNN 版本:</span><span style="color: rgba(128, 0, 0, 1)">"</span>, torch.backends.cudnn.version())</pre>
</div>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">运行：python .\gpu.py<br>
CUDA 可用: True
当前设备: NVIDIA GeForce GTX </span>1080<span style="color: rgba(0, 0, 0, 1)">
CUDA 版本: </span>12.1<span style="color: rgba(0, 0, 0, 1)">
cuDNN 版本: </span>90100</pre>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-size: 18px"><strong>二：安装<span class="ng-star-inserted">ComfyUI Manager</span></strong></span></p>
<p>&nbsp;</p>
<p><span style="font-size: 16px"><a href="https://github.com/Comfy-Org/ComfyUI-Manager" rel="noopener nofollow" target="_blank">https://github.com/Comfy-Org/ComfyUI-Manager</a></span></p>
<p><span style="font-size: 16px">下载解压到文件夹&nbsp;<strong>ComfyUI/custom_nodes/&nbsp; 中</strong>。然后重新启动ComfyUI：python&nbsp; main.py。</span></p>
<p><span style="font-size: 16px">如果报错，差什么，安装什么。</span></p>
<p>&nbsp;</p>
<p><img alt="" width="992" height="506" loading="lazy" data-src="https://img2024.cnblogs.com/blog/692485/202506/692485-20250626113758989-772384311.png" class="lazyload"></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-size: 18px"><strong>三：安装节点</strong></span></p>
<p><span style="font-size: 18px"><strong>1：下载ComfyUI-DynamiCrafterWrapper</strong></span></p>
<p><span style="font-size: 16px"><a href="https://github.com/kijai/ComfyUI-DynamiCrafterWrapper" rel="noopener nofollow" target="_blank">https://github.com/kijai/ComfyUI-DynamiCrafterWrapper</a></span></p>
<p>&nbsp;</p>
<p><span style="font-size: 16px">下载解压到文件夹<strong>ComfyUI/custom_nodes/&nbsp; 中。</strong></span></p>
<p>&nbsp;</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/692485/202506/692485-20250626114100231-125173864.png" class="lazyload"></p>
<p>&nbsp;</p>
<p><span style="font-size: 16px"><strong>2：模型下载：<a href="https://huggingface.co/Kijai/DynamiCrafter_pruned/tree/main" rel="noopener nofollow" target="_blank">https://huggingface.co/Kijai/DynamiCrafter_pruned/tree/main</a></strong></span></p>
<p><span style="font-size: 16px"><strong>模型文件下载到文件夹\ComfyUI\models\checkpoints\ 中:</strong></span></p>
<p>&nbsp;</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/692485/202506/692485-20250626114033749-86282547.png" class="lazyload"></p>
<p><span style="font-size: 16px"><strong>3：&nbsp;然后重新启动ComfyUI：python&nbsp; main.py。如果报错，差什么，安装什么。</strong></span></p>
<p>&nbsp;</p>
<p><span style="font-size: 16px"><strong>四：启动服务<strong>ComfyUI：<strong>python&nbsp; main.py</strong></strong></strong></span></p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/692485/202506/692485-20250626114326213-257043788.png" class="lazyload"></p>
<p>&nbsp;</p>
<p>浏览器访问链接：</p>
<p><img alt="" width="856" height="378" loading="lazy" data-src="https://img2024.cnblogs.com/blog/692485/202506/692485-20250626114409230-1910556020.png" class="lazyload"></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-size: 16px"><strong>1：运行模型。这里可以自己研究添加节点，也可以直接使用DynamiCrafterWrapper提供的节点json（优先使用json）</strong>。json位置在<strong>&nbsp;\ComfyUI\custom_nodes\ComfyUI-DynamiCrafterWrapper\examples，我使用的是dynamicrafter_i2v_example_01.json。</strong></span></p>
<p><span style="font-size: 16px"><strong>将这个json文件拖拽到浏览器中，这个时候<strong>ComfyUI Manager会自动检查是否需要安装其他插件，直接点击安装就行。</strong></strong></span></p>
<p><span style="font-size: 16px"><strong>视频生成完成后，在文件夹&nbsp;<span style="color: rgba(255, 0, 0, 1)">\ComfyUI\output\</span> 中。</strong></span></p>
<p><span style="font-size: 16px; color: rgba(255, 0, 0, 1)"><strong><strong>&nbsp;</strong></strong></span></p>
<p><img alt="" width="1280" height="709" loading="lazy" data-src="https://img2024.cnblogs.com/blog/692485/202506/692485-20250626115251498-14105424.png" class="lazyload"></p>
<p><span style="font-size: 16px"><strong><span style="color: rgba(255, 0, 0, 1)">&nbsp;</span></strong></span></p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/692485/202506/692485-20250626120203039-1457613042.png" class="lazyload"></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-size: 16px"><strong><span style="color: rgba(255, 0, 0, 1)">2：注意选择的模型，越高档的模型占用CPU越大，选择的视频时间越长，占用GPU越大。</span></strong></span></p>
<p>&nbsp;</p>
<p><strong>我的电脑GPU是专用8G，共享16G（可以不考虑，主要是专用GPU大小），这个配置一张图片生成视频（图片:914k，尺寸:576*1204，生成的视频3M，4s，8帧/s，尺寸576*1024），模型选择dynamicrafter_512。</strong></p>
<p>&nbsp;</p>
<p><strong>一运行，GPU就100%，结果跑了一晚上才成功。</strong></p>
<p>&nbsp;</p>
<p><strong>如果GPU小，可以选择更小的模型，DynamiCrafter256。图片也可以选小点的，生成的图片数调整小点。</strong></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-size: 18px"><strong><strong>三：总结</strong></strong></span></p>
<p><span style="font-size: 18px"><strong><strong>这种视频大模型要在本地运行，那本地机器必须是很强大才行，不然根本运行不动，那更不用说使用了。</strong></strong></span></p>
<p><span style="font-size: 18px"><strong><strong>后面再研究<span style="color: rgba(255, 0, 0, 1)">本地搭建图片+音频对嘴生成视频的AI.</span></strong></strong></span></p>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.0006944444444444445" data-date-updated="2025-06-26 12:05">2025-06-26 12:04</span>&nbsp;
<a href="https://www.cnblogs.com/cj8988">Joy_CShow</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18949573);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18949573', targetLink: 'https://www.cnblogs.com/cj8988/p/18949573', title: '搭建一个图片变视频的AI(二)：开始搭建' })">举报</a>
</div>
        