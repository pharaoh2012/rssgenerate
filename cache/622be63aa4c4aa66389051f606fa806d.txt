
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/batsing/p/19052875" title="发布于 2025-08-22 15:23">
    <span role="heading" aria-level="2">搭建docker虚拟机测试服</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h3>一、需求分析</h3>
<p>优点：测试服与正式服环境隔离，配置简单，多个开发者可以共用一个测试数据库和redis</p>
<p>&nbsp;</p>
<h3>二、安装镜像</h3>
<p>因为正式服是装了宝塔面板，所以直接在宝塔面板上安装docker。</p>
<p>因为需要的虚拟机linux要有完整的系统命令，docker安装镜像为<span style="color: rgba(0, 0, 255, 1)"><strong>&nbsp;centos/systemd&nbsp;</strong></span></p>
<p>以特权模式创建容器，并把虚拟机内的 <span style="color: rgba(0, 0, 255, 1)">22,3306,6379</span>端口映射到实体机的 <span style="color: rgba(0, 0, 255, 1)">22000,13306,16379</span>端口</p>
<div class="cnblogs_code">
<pre>docker run -itd --privileged=<span style="color: rgba(0, 0, 255, 1)">true</span> -p 22000:22 -p 13306:3306 -p 16379:6379 --name mytest systemd:latest</pre>
</div>
<p>&nbsp;</p>
<h3>三、虚拟机内Linux配置和软件安装</h3>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">配置yum为阿里云的源</span>
rm -rf /etc/yum.repos.d/*<span style="color: rgba(0, 0, 0, 1)">
curl </span>-o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7<span style="color: rgba(0, 0, 0, 1)">.repo
yum repolist 

</span><span style="color: rgba(0, 128, 0, 1)">#查看</span><span style="color: rgba(0, 128, 0, 1)">linux时区</span>
<span style="color: rgba(0, 0, 0, 1)">timedatectl
</span><strong><span style="color: rgba(0, 0, 255, 1)">#设置时区为上海（中国标准时间）</span></strong>
sudo timedatectl <span style="color: rgba(0, 0, 255, 1)">set-timezone</span> Asia/<span style="color: rgba(0, 0, 0, 1)">Shanghai
timedatectl

</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">虚拟机安装java</span>
java -<span style="color: rgba(0, 0, 0, 1)">version
yum list java</span>*jdk-<span style="color: rgba(0, 0, 0, 1)">devel
yum install java</span>-1.8.0-openjdk-devel -<span style="color: rgba(0, 0, 0, 1)">y

</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">修改ls/ll显示的时间格式  2023/07/31 15:30:00</span>
vi ~/<span style="color: rgba(0, 0, 0, 1)">.bash_profile
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 文件末尾添加</span>
<span style="color: rgba(0, 0, 0, 1)">export TIME_STYLE='+%Y/%m/%d %H:%M:%S'
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 使配置立即生效</span>
source ~/<span style="color: rgba(0, 0, 0, 1)">.bash_profile

</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">查看虚拟机的IP，通常是172.17.0.2</span>
<span style="color: rgba(0, 0, 0, 1)">ifconfig
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">查看运行程序的端口</span>
yum install -y net-<span style="color: rgba(0, 0, 0, 1)">tools
netstat </span>-<span style="color: rgba(0, 0, 0, 1)">nlpt

</span><span style="color: rgba(0, 0, 255, 1)"><strong>#安装ssh</strong></span>
yum install -y openssh-<span style="color: rgba(0, 0, 0, 1)">server
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 编辑 SSH 配置文件</span>
vi /etc/ssh/<span style="color: rgba(0, 0, 0, 1)">sshd_config
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">启动和设置开机启动</span>
<span style="color: rgba(0, 0, 0, 1)">systemctl start sshd
systemctl enable sshd
systemctl status sshd
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">重置root密码（是从容器进来的，本来密码不知道）</span>
<span style="color: rgba(0, 0, 0, 1)">passwd root
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">在实体机中测试虚拟机中的端口连接</span>
ssh root@172.17.0.2<span style="color: rgba(0, 0, 0, 1)">
exit


</span><strong><span style="color: rgba(0, 0, 255, 1)">#安装mysql</span></strong><span style="color: rgba(0, 128, 0, 1)">
#</span><span style="color: rgba(0, 128, 0, 1)">！注意 yum install -y mariadb-server 安装的是mysql5.5，版本很低</span><span style="color: rgba(0, 128, 0, 1)">
#</span><span style="color: rgba(0, 128, 0, 1)">下载mysql源安装包</span>
yum install -<span style="color: rgba(0, 0, 0, 1)">y wget
wget https:</span>//dev.mysql.com/get/mysql57-community-release-el7-11<span style="color: rgba(0, 0, 0, 1)">.noarch.rpm
rpm </span>-ivh mysql57-community-release-el7-11<span style="color: rgba(0, 0, 0, 1)">.noarch.rpm
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">--nogpgcheck    不校验数字签名</span>
yum -y install mysql-server --<span style="color: rgba(0, 0, 0, 1)">nogpgcheck
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">启动</span>
<span style="color: rgba(0, 0, 0, 1)">systemctl start mysqld
systemctl enable mysqld
systemctl status mysqld
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">MySQL 5.7 安装后会生成一个临时 root 密码：</span>
cat /var/log/mysqld.log |<span style="color: rgba(0, 0, 0, 1)"> grep password
mysql_secure_installation
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">输入上面查到的默认密码，设置新密码（至少8位，必须包含 大小写字母、数字、特殊字符）</span><span style="color: rgba(0, 128, 0, 1)">
#</span><span style="color: rgba(0, 128, 0, 1)">进入mysql</span>
mysql -<span style="color: rgba(0, 0, 0, 1)">p'密码'
show databases;
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">开放root用户远程登录</span>
UPDATE mysql.user SET Host='%' WHERE User='root' AND Host=<span style="color: rgba(0, 0, 0, 1)">'localhost';
FLUSH PRIVILEGES;
quit


</span><strong><span style="color: rgba(0, 0, 255, 1)">#安装redis</span></strong><span style="color: rgba(0, 128, 0, 1)">
#</span><span style="color: rgba(0, 128, 0, 1)">Redis 不在默认的 CentOS 仓库中，需先添加 EPEL仓库</span>
yum install -y epel-<span style="color: rgba(0, 0, 0, 1)">release
yum install </span>-<span style="color: rgba(0, 0, 0, 1)">y redis
systemctl start redis
systemctl enable redis
systemctl status redis
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">进入redis</span>
redis-<span style="color: rgba(0, 0, 0, 1)">cli
SET hello world
GET hello
quit

</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">开放外部访问  vi /etc/redis.conf</span><span style="color: rgba(0, 128, 0, 1)">
#</span><span style="color: rgba(0, 128, 0, 1)"> 注释掉bind（默认仅监听本地）</span><span style="color: rgba(0, 128, 0, 1)">
#</span><span style="color: rgba(0, 128, 0, 1)"> bind 127.0.0.1</span><span style="color: rgba(0, 128, 0, 1)">
#</span><span style="color: rgba(0, 128, 0, 1)"> 关闭保护模式</span>
protected-<span style="color: rgba(0, 0, 0, 1)">mode no
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 设置密码</span>
<span style="color: rgba(0, 0, 0, 1)">requirepass 密码
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">然后重启redis</span>
<span style="color: rgba(0, 0, 0, 1)">systemctl restart redis



</span><strong><span style="color: rgba(0, 0, 255, 1)">#安装nginx</span></strong>
yum install -<span style="color: rgba(0, 0, 0, 1)">y nginx
systemctl start nginx
systemctl enable nginx
systemctl status nginx
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">nginx配置文件在/etc/nginx/nginx.conf</span><span style="color: rgba(0, 128, 0, 1)">
#</span><span style="color: rgba(0, 128, 0, 1)">虚拟机中的nginx不需要https</span>


<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">此镜像中没有防火墙，不需要打开防火墙端口</span>
<span style="color: rgba(0, 128, 0, 1)">#firewall-cmd --permanent --add-port=22/tcp
#firewall-cmd --permanent --add-port=3306/tcp
#firewall-cmd --permanent --add-port=6379/tcp
#firewall-cmd --permanent --add-port=80/tcp
#firewall-cmd --reload


</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">清理yum的硬盘空间</span>
yum clean all</pre>
</div>
<p>&nbsp;</p>
<h3>四、回到实体机中</h3>
<p>测试端口和开放防火墙端口</p>
<div class="cnblogs_code">
<pre>telnet 172.17.0.2 3306<span style="color: rgba(0, 0, 0, 1)">
quit
telnet </span>172.17.0.2 6379<span style="color: rgba(0, 0, 0, 1)">
quit
telnet </span>172.17.0.2 80<span style="color: rgba(0, 0, 0, 1)">
quit


</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">开放防火墙端口</span>
firewall-cmd --permanent --add-port=22000/<span style="color: rgba(0, 0, 0, 1)">tcp
firewall</span>-cmd --permanent --add-port=13306/<span style="color: rgba(0, 0, 0, 1)">tcp
firewall</span>-cmd --permanent --add-port=16379/<span style="color: rgba(0, 0, 0, 1)">tcp
firewall</span>-cmd --reload</pre>
</div>
<p>阿里云等的安全组，添加开放端口（最好指定IP）</p>
<p>#服务器配置系统hosts，把<span style="color: rgba(0, 0, 255, 1)">demo域名</span>指向docker内网IP</p>
<div class="cnblogs_code">
<pre>vi /etc/<span style="color: rgba(0, 0, 0, 1)">hosts
</span><span style="color: rgba(0, 0, 255, 1)">172.17.0.2 demo.batsing.com</span></pre>
</div>
<p>Nginx中配置vhost，将demo域名转发到域名自身</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">server {
    listen            </span>80<span style="color: rgba(0, 0, 0, 1)">;
    server_name        demo.batsing.com;
    location </span>/<span style="color: rgba(0, 0, 0, 1)"> {
        proxy_pass    http:</span>//<span style="color: rgba(0, 0, 0, 1)">demo.batsing.com;
        proxy_set_header X</span>-Real-IP <span style="color: rgba(128, 0, 128, 1)">$remote_addr</span><span style="color: rgba(0, 0, 0, 1)">;                                                   
        proxy_set_header X</span>-Forwarded-<span style="color: rgba(0, 0, 255, 1)">For</span> <span style="color: rgba(128, 0, 128, 1)">$proxy_add_x_forwarded_for</span><span style="color: rgba(0, 0, 0, 1)">;
        proxy_set_header Host </span><span style="color: rgba(128, 0, 128, 1)">$http_host</span><span style="color: rgba(0, 0, 0, 1)">;
        proxy_set_header X</span>-NginX-Proxy <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">;
    }
}</span></pre>
</div>
<p>#虚拟机中配置网站<br>#参考一般的网站配置即可</p>
<p>&nbsp;</p>
<h3>五、本地开发与测试</h3>
<p>日常用 batsing.com<span style="color: rgba(0, 0, 255, 1)">:22000</span> 登录测试服，更新代码重启等</p>
<p>本地开发测试，数据库连接远程的 batsing.com<span style="color: rgba(0, 0, 255, 1)">:13306</span>&nbsp;，Redis连接远程的 batsing.com:<span style="color: rgba(0, 0, 255, 1)">16379</span></p>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.11319444444444444" data-date-updated="2025-08-22 18:06">2025-08-22 15:23</span>&nbsp;
<a href="https://www.cnblogs.com/batsing">北七星</a>&nbsp;
阅读(<span id="post_view_count">76</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19052875);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19052875', targetLink: 'https://www.cnblogs.com/batsing/p/19052875', title: '搭建docker虚拟机测试服' })">举报</a>
</div>
        