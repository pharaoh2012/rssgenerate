
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/venblog/p/18787593" title="发布于 2025-03-23 10:22">
    <span role="heading" aria-level="2">AccessibilityService-weditor获取节点元素信息&amp;Assists实现自动化</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="1-weditor-简介">1. weditor 简介</h1>
<p>在使用<code>AccessibilityService</code>开发自动化工具或自动化测试脚本时需要知道控件属性才能自动化逻辑。<code>weditor</code> 是一个用于 Android UI 自动化测试的可视化工具，它提供一个 Web 界面，方便查看 Android 设备 UI 层级、获取控件属性。</p>
<h1 id="2-安装前的准备">2. 安装前的准备</h1>
<p>在安装 <code>weditor</code> 之前，需要先安装以下依赖环境：</p>
<h2 id="21-安装-python">2.1 安装 Python</h2>
<p><code>weditor</code> 依赖 Python 运行环境，建议使用 Python 3.6 及以上版本。</p>
<ul>
<li>
<p>在 Windows 上，可以从 <a href="https://www.python.org/" target="_blank" rel="noopener nofollow">Python 官网</a> 下载并安装。</p>
</li>
<li>
<p>在 macOS/Linux 上，可以使用包管理工具安装，如：</p>
<pre><code>sudo apt install python3  # Ubuntu/Debian
brew install python3  # macOS
</code></pre>
</li>
</ul>
<h1 id="3-安装-weditor">3. 安装 weditor</h1>
<p>使用 <code>pip</code> 命令安装 <code>weditor</code>：</p>
<pre><code>pip install -U weditor
</code></pre>
<p>安装完成后，可以通过以下命令检查是否安装成功：</p>
<pre><code>weditor --help
</code></pre>
<p>如果输出帮助信息，则说明安装成功。</p>
<h1 id="4-连接-android-设备">4. 连接 Android 设备</h1>
<h2 id="41-启用-usb-调试模式">4.1 启用 USB 调试模式</h2>
<p>在手机上开启 <code>开发者模式</code> 并启用 <code>USB 调试</code>。</p>
<h2 id="42-连接设备">4.2 连接设备</h2>
<p>通过 USB 连接手机，并运行以下命令查看设备是否被识别：</p>
<pre><code>adb devices
</code></pre>
<p>如果设备列表中显示了设备编号，则表示连接成功。</p>
<h1 id="5-启动-weditor">5. 启动 weditor</h1>
<p>在终端执行以下命令启动 <code>weditor</code>：</p>
<pre><code>weditor
</code></pre>
<p>默认情况下，它会在 <code>localhost:17310</code> 启动一个 Web 服务器。在浏览器中访问：</p>
<pre><code>http://localhost:17310
</code></pre>
<p>即可打开 <code>weditor</code> 界面，并且显示手机当前的界面即可查看节点元素信息，如下：</p>
<p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/f4f2f399b2324a66b1878062fef3c2fb~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgVmVubm4=:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiMzI1MTExMTcwNDgwNTgzIn0%3D&amp;rk3s=f64ab15b&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1743300687&amp;x-orig-sign=vI3zqXdrEYBq1nDof0xZOkWPD08%3D" alt="image.png" loading="lazy"></p>
<h1 id="6-使用assists实现简单自动点击和输入">6. 使用<code>Assists</code>实现简单自动点击和输入</h1>
<p><a href="https://github.com/ven-coder/Assists" target="_blank" rel="noopener nofollow">Assists</a>是一个基于<code>AccessibilityService</code>封装的开发框架，主要是为了简化自动化脚本开发、提供增强能力、提高代码易维护性的一个框架。</p>
<h2 id="61集成assists">6.1集成<a href="https://github.com/ven-coder/Assists" target="_blank" rel="noopener nofollow">Assists</a></h2>
<p><strong>项目根目录build.gradle添加</strong></p>
<p>以下是Groovy DSL写法，Kotlin DSL的可GPT问下</p>
<pre><code>allprojects {
    repositories {
	//添加jitpack仓库
        maven { url 'https://jitpack.io' }
    }
}
</code></pre>
<p><strong>主模块build.gradle添加</strong></p>
<pre><code>    dependencies {
        //按需添加
        //基础库（必须）
        implementation "com.github.ven-coder.Assists:assists-base:v3.2.11"
        //屏幕录制相关（可选）
        implementation "com.github.ven-coder.Assists:assists-mp:v3.2.11"
        //opencv相关（可选）
        implementation "com.github.ven-coder.Assists:assists-opcv:v3.2.11"
    }
</code></pre>
<p><strong>主模块AndroidManifest.xml中注册服务</strong></p>
<pre><code class="language-xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.ven.assists.simple"&gt;

    &lt;application
        android:name="com.ven.assists.simple.App"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:requestLegacyExternalStorage="true"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme"
        android:usesCleartextTraffic="true"&gt;
        
        &lt;!-- 添加代码 ↓--&gt;
        &lt;service
            android:name="com.ven.assists.service.AssistsService"
            android:enabled="true"
            android:exported="true"
            android:permission="android.permission.BIND_ACCESSIBILITY_SERVICE"&gt;
            &lt;!--android:priority="10000" 可提高服务在设置中的权重，排在前面--&gt;
            &lt;intent-filter android:priority="10000"&gt;
                &lt;action android:name="android.accessibilityservice.AccessibilityService" /&gt;
            &lt;/intent-filter&gt;
            &lt;meta-data
                android:name="android.accessibilityservice"
                android:resource="@xml/assists_service" /&gt;
        &lt;/service&gt;
        &lt;!-- 添加代码 ↑--&gt;
        
    &lt;/application&gt;

&lt;/manifest&gt;
</code></pre>
<h2 id="62-实现点击微信搜索并输入搜索内容">6.2 实现点击微信搜索并输入搜索内容</h2>
<h3 id="621-获取微信搜索节点元素id">6.2.1 获取微信搜索节点元素id</h3>
<p><strong><code>注意：</code></strong> 选中的搜索节点的<code>clickable</code>需要是<code>true</code>才行，代表该节点是可点击的</p>
<p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/65a17afd96be42ca9c85ebe05172662a~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgVmVubm4=:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiMzI1MTExMTcwNDgwNTgzIn0%3D&amp;rk3s=f64ab15b&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1743300687&amp;x-orig-sign=bd%2B5czgWXpa71URVFh7fjzCM8Ew%3D" alt="image.png" loading="lazy"></p>
<h3 id="622-实现点击">6.2.2 实现点击</h3>
<pre><code>class SimpleStep: StepImpl() {
    override fun onImpl(collector: StepCollector) {
        collector.next(stepTag = 1){
            //第1步

            "点击搜索".overlayToast()
            delay(1000)
            AssistsCore.findById("com.tencent.mm:id/jha").firstOrNull()?.click()

            //执行第2步
            return@next Step.get(2, delay = 2000)
        }
    }
}
</code></pre>
<h3 id="623-查找输入框并输入文字">6.2.3 查找输入框并输入文字</h3>
<p>除了可以通过id获取节点，还可以通过节点类型获取</p>
<p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/e27208edf018455aa1e33d97ffed5ffb~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgVmVubm4=:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiMzI1MTExMTcwNDgwNTgzIn0%3D&amp;rk3s=f64ab15b&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1743300687&amp;x-orig-sign=6XB%2Fi95YIXLYLcf0Q3mZ8W9Yf84%3D" alt="image.png" loading="lazy"></p>
<h3 id="624-实现输入">6.2.4 实现输入</h3>
<pre><code>class SimpleStep: StepImpl() {
    override fun onImpl(collector: StepCollector) {
        collector.next(stepTag = 1){
            //第1步

            "点击搜索".overlayToast()
            delay(1000)
            AssistsCore.findById("com.tencent.mm:id/jha").firstOrNull()?.click()

            //执行第2步
            return@next Step.get(2, delay = 2000)
        }.next(stepTag = 2){
            //第2步

            "输入搜索内容".overlayToast()
            delay(1000)

            AssistsCore.findByTags("android.widget.EditText").firstOrNull()?.setNodeText("自动输入的搜索内容")

            //结束执行
            return@next Step.none
        }
    }
}
</code></pre>
<h1 id="最终效果">最终效果</h1>
<p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/b3bf5d03ea6d438389ef0458ad23d541~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgVmVubm4=:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiMzI1MTExMTcwNDgwNTgzIn0%3D&amp;rk3s=f64ab15b&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1743300687&amp;x-orig-sign=zplXxaPbiDunEYqFdxm6oVhBWbI%3D" alt="Kapture 2025-03-23 at 09.58.31.gif" loading="lazy"></p>
<p>教程源码：<a href="https://github.com/ven-coder/autoci.git" target="_blank" rel="noopener nofollow">https://github.com/ven-coder/autoci.git</a></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.027193909020833334" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-23 10:23">2025-03-23 10:22</span>&nbsp;
<a href="https://www.cnblogs.com/venblog">Vennnnn</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18787593" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18787593);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18787593', targetLink: 'https://www.cnblogs.com/venblog/p/18787593', title: 'AccessibilityService-weditor获取节点元素信息&amp;amp;Assists实现自动化' })">举报</a>
</div>
        