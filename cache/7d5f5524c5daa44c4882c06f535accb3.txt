
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/zh94/p/18720633" title="发布于 2025-02-18 08:41">
    <span role="heading" aria-level="2">DeepSeek企业级部署实战指南：从服务器选型到Dify私有化落地</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>对于个人开发者或尝鲜者而言，本地想要部署 DeepSeek 有很多种方案，但是一旦涉及到企业级部署，则步骤将会繁琐很多。</p>
<p>比如我们的第一步就需要先根据实际业务场景评估出我们到底需要部署什么规格的模型，以及我们所要部署的模型，到底需要多少服务器资源来进行承接，也就是<strong>资源预估先行。</strong></p>
<p>预估完我们的服务器资源以后，还需要评估我们的业务场景是否需要二次开发模型。</p>
<p>如果只是简单的微调模型就可以符合我们的业务需求，那么使用Ollama、LM Studio、GTP4All 或许就可以满足我们的诉求。</p>
<p><strong>但是如果需要对模型进行定制化开发，则需要考虑进行模型的原生部署。</strong></p>
<p>所以本篇文章主要解决四个问题：</p>
<ol>
<li>如何合理评估我们的服务器资源</li>
<li>Ollama 部署指定版本的 DeepSeek</li>
<li>原生部署 DeepSeek</li>
<li>搭建 Dify 构建企业内的私有知识库、工作流</li>
</ol>
<h1 id="评估服务器资源">评估服务器资源</h1>
<p>评估服务资源前我们需要先考虑将要部署的模型参数量、模型的序列长度、批次大小和量化类型。</p>
<h2 id="模型参数量">模型参数量</h2>
<p>模型参数量：就是该模型神经网络的输入权重和输出阈值的总和，模型参数量的大小，直接影响到模型智能化程度的高低，关于这点如果不足够清楚的可以参考之前我写过的一篇文章：<a href="https://mp.weixin.qq.com/s/O0k1o5x_iDNTVN-50D_fVQ?token=423632529&amp;lang=zh_CN" target="_blank" rel="noopener nofollow">人人都能搞定的大模型原理 - 神经网络<br>
</a></p>
<p>模型参数量越高耗费的服务器资源越多，反之亦然。</p>
<h2 id="模型序列长度">模型序列长度</h2>
<p>那么在我们可以确认了模型的参数规模后，就需要根据业务场景评估该模型的序列长度。</p>
<p>序列长度是该模型一次能处理的最大 Token 数，针对 QA 问答的模型，你可以理解为你每次问模型问题时可以输入的最大Token限制，如果用户的问题超出了这个长度，则用户的问题可能会被截断或者被分为多个部分进行分别处理。</p>
<h2 id="模型量化类型">模型量化类型</h2>
<p>而模型的量化类型，则是该模型的参数精度，我们在之前的模型原理中提到过，训练好的模型实际存储的就是一堆参数值，而这些参数值本身就是浮点数，所以量化类型的值越大则模型的精度越准确，智能化程度越高。</p>
<h2 id="服务器资源计算">服务器资源计算</h2>
<p>了解了上述的基本概念后，你可能会觉得我依然无法评估模型到底应该占用多少服务器资源呀？怎么办？</p>
<p>呐，不要急。</p>
<p>关于具体的参数映射到底应该配置什么样的服务器资源，有网友已经做了一个配置计算器工具。</p>
<p><img src="https://img2024.cnblogs.com/blog/1104472/202502/1104472-20250217194041052-649454580.png" alt="" loading="lazy"></p>
<p>你只需要根据上面的概念选择自己的模型规模，便会自动计算出所需要的服务器资源。</p>
<p><img src="https://img2024.cnblogs.com/blog/1104472/202502/1104472-20250217194041037-1576171886.png" alt="" loading="lazy"></p>
<p><strong>【账号后台发送关键字：资源评估】就可以获取该工具啦！</strong></p>
<h1 id="ollama-部署-deepseek">Ollama 部署 DeepSeek</h1>
<hr>
<p>Ollama 是本地运行大模型的一款工具，支持在 Mac、Linux、Windows 上下载并运行对应的模型。</p>
<h2 id="ollama-安装">Ollama 安装</h2>
<pre><code># MacOS、Windows 用户直接访问Ollama官网https://ollama.com/download 下载对应的安装包直接安装即可

# Linux安装
curl -fsSL https://ollama.com/install.sh | sudo bash
sudo usermod -aG ollama $USER  # 添加用户权限
sudo systemctl start ollama    # 启动服务

</code></pre>
<p>Ollama安装完成后，在对应的命令行输入：</p>
<pre><code>ollama -v

</code></pre>
<p>此时输出Ollama version is 0.5.7，则表示安装成功。</p>
<h2 id="deepseek模型安装">DeepSeek模型安装</h2>
<p>Ollama 安装成功后则访问 Ollama 的官网查找我们要安装的模型</p>
<p>1、<a href="https://ollama.com/library/deepseek-r1:7b" target="_blank" rel="noopener nofollow">访问 Ollama 官网</a></p>
<p>2、选择适合当前机器配置的模型参数，然后拷贝对应的执行命令即可</p>
<p><img src="https://img2024.cnblogs.com/blog/1104472/202502/1104472-20250217194041000-1270254680.png" alt="" loading="lazy"></p>
<ol start="3">
<li>命令行终端直接执行对应的命令</li>
</ol>
<pre><code>ollama run deepseek-r1:7b
# 执行后
pulling manifest
pulling 96c415656d37... 100% ▕██████████████▏ 4.7 GB
pulling 369ca498f347... 100% ▕██████████████▏ 387 B
pulling 6e4c38e1172f... 100% ▕██████████████▏ 1.1 KB
pulling f4d24e9138dd... 100% ▕██████████████▏ 148 B
pulling 40fb844194b2... 100% ▕██████████████▏ 487 B
verifying sha256 digest
writing manifest
success
&gt; &gt; &gt; Send a message (/? for help)
&gt; &gt; &gt; `
#当看到上述提示，即可开始模型对话，此时我发送一个问题：你是谁
&gt;&gt;&gt; 你是谁
&lt;think&gt;
&lt;/think&gt;
您好！我是由中国的深度求索（DeepSeek）公司开发的智能助手DeepSeek-R1。如您有任何任何问题，我会尽我所能为您提供帮助。
&gt;&gt;&gt;

</code></pre>
<p>恭喜！出现上述的对话内容，表示当前 DeepSeek 已经在你本地可以正常运行了。</p>
<h2 id="nomic-embed-text模型安装">nomic-embed-text模型安装</h2>
<p>此时我们需要另外再部署一个新的模型，nomic-embed-text，这是一个文本向量化的模型，主要是后续基于 Dify 做向量化检索时使用。</p>
<pre><code>ollama pull nomic-embed-text
#执行后
pulling manifest 
pulling 970aa74c0a90... 100% ▕█████████ 274 MB                         
pulling c71d239df917... 100%  █████████ 11 KB                         
pulling ce4a164fc046... 100%  █████████ 17 B                         
pulling 31df23ea7daa... 100%  █████████ 420 B                         
verifying sha256 digest 
writing manifest 
#看到该提示表示安装成功
success 

</code></pre>
<h2 id="部署图形化客户端">部署图形化客户端</h2>
<p>有些同学在部署完 DeepSeek 后就想直接找个 UI 工具和 DeepSeek 聊天了，而不是一直在对应的命令行工具中聊天。</p>
<p>此时我们直接部署一套 UI 工具，连接我们的 DeepSeek 模型即可。</p>
<p>可以连接 DeepSeep 模型的 UI 工具有很多：</p>
<ol>
<li>ChatBox 客户端（图形化界面）支持 Web 网页，也支持本地客户端。</li>
<li>AnythingLLM 客户端（图形化界面）</li>
<li>Open WebUI 客户端（图形化界面） 支持 Web 网页，类似 ChatGPT。</li>
<li>Cherry Studio 客户端（图形化界面）</li>
<li>Page Assist 客户端（浏览器扩展）支持「联网搜索」</li>
</ol>
<p>此时我们以 ChatBox 为例，直接访问对应的<a href="https://chatboxai.app/zh" target="_blank" rel="noopener nofollow">官网</a>下载对应的客户端即可</p>
<p><img src="https://img2024.cnblogs.com/blog/1104472/202502/1104472-20250217194041061-1250932656.png" alt="" loading="lazy"></p>
<p>下载完成后我们在 ChatBox 的设置中填写 Ollama API 的地址和对应的模型名称，然后保存即可。</p>
<p><img src="https://img2024.cnblogs.com/blog/1104472/202502/1104472-20250217194041024-1451752012.png" alt="" loading="lazy"></p>
<p>然后我们直接打开一个新的对话框，选择要运行的模型即可开始对话。</p>
<h1 id="原生部署-deepseek">原生部署 DeepSeek</h1>
<p>原生部署 DeepSeek 则需要参考官方所提供的部署方式进行部署</p>
<p><img src="https://img2024.cnblogs.com/blog/1104472/202502/1104472-20250217194041062-578750539.png" alt="" loading="lazy"></p>
<p>上述提到DeepSeek可以支持SGLang、LMDeploy、TensorRT-LLM、vLLM框架进行部署。</p>
<p>此处我们使用 LMDeploy 来部署 DeepSeek</p>
<p>ppqq LMDeploy 是一个用于大型语言模型（LLMs）和视觉-语言模型（VLMs）压缩、部署和服务的 Python 库。 其核心推理引擎包括 TurboMind 引擎和 PyTorch 引擎。前者由 C++ 和 CUDA 开发，致力于推理性能的优化，而后者纯 Python 开发，旨在降低开发者的门槛。</p>
<p>想要使用 LMDeploy 的前提是需要先使用 conda 或者 pip 安装对应的python 库依赖才行。</p>
<pre><code>conda create -n lmdeploy python=3.8 -y
conda activate lmdeploy
pip install lmdeploy

</code></pre>
<p>关于LMDeploy具体的安装方式也可以直接参考<a href="https://lmdeploy.readthedocs.io/zh-cn/latest/get_started/installation.html" target="_blank" rel="noopener nofollow">安装文档</a></p>
<h2 id="编写运行代码">编写运行代码</h2>
<pre><code>from lmdeploy import pipeline, TurbomindEngineConfig

# 模型路径，可以是以下几种选项之一：
# 1. 本地目录路径，指向一个turbomind模型
# 2. lmdeploy-quantized模型的model_id
# 3. 存放在模型仓库中的模型的model_id
model = 'deepseek-ai/DeepSeek-R1-Distill-Qwen-7B'

# Turbomind引擎配置，用于设置模型的后端参数
backend_config = TurbomindEngineConfig(
    cache_max_entry_count=0.2,  # 缓存最大条目数
    max_context_token_num=20544,  # 最大上下文token数量
    session_len=20544  # 会话长度
)

# 生成配置，用于设置生成文本的参数
gen_config = GenerationConfig(
    top_p=0.95,  # 采样阈值
    temperature=0.6,  # 温度参数，影响生成的多样性
    max_new_tokens=8192,  # 最大新生成token数量
    stop_token_ids=[151329, 151336, 151338],  # 停止token的ID列表
    do_sample=True  # 启用采样
)

# DeepSeekAI服务类
class DeepSeekAiServicer:

    def __init__(self, model: str, backend_config: TurbomindEngineConfig, gen_config: GenerationConfig):
        # 初始化服务，加载模型和配置
        self.llm = pipeline(model, backend_config=backend_config)
        self.gen_config = gen_config

    def chat(self, content):
        # 根据DeepSeek官方推荐，每个提示需要以&lt;think&gt;\n结尾
        # 如果是数学推理内容，建议包含以下（中英文）：
        # 请逐步推理，并将最终答案放在\boxed{}中。
        prompts = [{
            "role": "user",
            "content": "生活的意义是什么？&lt;think&gt;\n"
        }]

        # 响应示例：
        # "&lt;think&gt; 生活的意义是快乐。 &lt;/think&gt; 我认为生活的意义是快乐。"
        response = self.llm(prompts, gen_config=self.gen_config)
        return response

</code></pre>
<p>将上述代码直接在 python 环境中运行便可以直接启动我们的 DeepSeek 模型。</p>
<p>由于我们采用 LMDeploy 代码来部署模型，因此我们获得了更大的调整灵活性。我们能够针对内存管理、并发处理和负载均衡等多个方面进行细致的优化。此外，LMDeploy 允许我们集成其他 Python 库，以便对模型进行微调并添加自定义层，这些功能进一步提升了我们的定制化能力，确保了模型部署的灵活性和效率。</p>
<h1 id="部署-dify">部署 Dify</h1>
<p>Dify 是一款开源的大语言模型(LLM) 应用开发平台。它融合了后端即服务（Backend as Service）和 LLMOps 的理念，使开发者可以快速搭建生产级的生成式 AI 应用。即使你是非技术人员，也能参与到 AI 应用的定义和数据运营过程中。</p>
<p>由于 Dify 内置了构建 LLM 应用所需的关键技术栈，包括对数百个模型的支持、直观的 Prompt 编排界面、高质量的 RAG 引擎、稳健的 Agent 框架、灵活的流程编排，并同时提供了一套易用的界面和 API。这为开发者节省了许多重复造轮子的时间，使其可以专注在创新和业务需求上。</p>
<p><strong>简单来说如果你想使用模型构建自己的 RAG 知识引擎或者流程编排，那你少不写一堆LangChain的代码，但是 Dify 将这块业务进行了封装，你只需要在可视化的页面上操作，便可以实现相同的效果，快速的构建出自己的 AI 应用。</strong></p>
<h2 id="运行-dify">运行 Dify</h2>
<p>Dify 的部署需要我们本地先支持 Docker 和 Git 的依赖环境，然后我们在对应的终端直接执行下面的代码，便可以直接运行 Dify</p>
<pre><code>#克隆 Dify 源代码至本地环境。
git clone https://github.com/langgenius/dify.git

#进入 Dify 源代码的 Docker 目录
cd dify/docker

#复制环境配置文件
cp .env.example .env

#启动 Docker 容器
docker-compose up -d

</code></pre>
<h2 id="添加模型">添加模型</h2>
<p>Dify 启动成功后，我们直接浏览器访问：<a href="http://localhost" target="_blank" rel="noopener nofollow">http://localhost</a></p>
<p>此时进入到 Dify 的主页面会提示新建账号密码，账号密码新建完成后，在右上角admin 处点击设置，然后新增我们的本地模型配置。</p>
<p><img src="https://img2024.cnblogs.com/blog/1104472/202502/1104472-20250217194041035-22838241.png" alt="" loading="lazy"></p>
<p>此处添加 LLM 模型为deepseek-r1:7b，基础 URL 为：<a href="http://host.docker.internal:11434" target="_blank" rel="noopener nofollow">http://host.docker.internal:11434</a></p>
<p>添加完 LLM 模型后，我们再新增一个Text Embedding 模型，还记得最开始我们使用 ollama 还安装了一套nomic-embed-text模型吗？对的，就是在这里使用的。</p>
<p><img src="https://img2024.cnblogs.com/blog/1104472/202502/1104472-20250217194041019-1761150195.png" alt="" loading="lazy"></p>
<p>两个模型都添加完以后，就可以在模型列表中看到我们已经添加的模型信息了</p>
<p><img src="https://img2024.cnblogs.com/blog/1104472/202502/1104472-20250217194041016-1047504978.png" alt="" loading="lazy"></p>
<h2 id="构建知识库">构建知识库</h2>
<p>在对应的知识库模块新建知识库，并上传我们的私有数据</p>
<p><img src="https://img2024.cnblogs.com/blog/1104472/202502/1104472-20250217194041076-1074951160.png" alt="" loading="lazy"></p>
<p>文本分段与清洗中选择使用我们的nomic-embed-text模型进行清洗</p>
<p><img src="https://img2024.cnblogs.com/blog/1104472/202502/1104472-20250217194041038-764237336.png" alt="" loading="lazy"></p>
<p>然后我么直接保存为知识库即可</p>
<h2 id="新建聊天助手">新建聊天助手</h2>
<p><img src="https://img2024.cnblogs.com/blog/1104472/202502/1104472-20250217194041171-914861984.png" alt="" loading="lazy"></p>
<p>在机器人的上下文中选择我们刚刚新建的知识库：“数字生命贾克斯”</p>
<p><img src="https://img2024.cnblogs.com/blog/1104472/202502/1104472-20250217194041195-2037968453.png" alt="" loading="lazy"></p>
<p>当我们问他一些知识库中独有的内容时，他便会根据知识库中独有的内容，来给与对应的回复。</p>
<p><img src="https://img2024.cnblogs.com/blog/1104472/202502/1104472-20250217194041069-1657682746.png" alt="" loading="lazy"></p>
<p>我们可以点击发布将该机器人单独给发布出去，此时其他人也可以使用你这个机器人来获取知识库中的信息了。</p>
<p><img src="https://img2024.cnblogs.com/blog/1104472/202502/1104472-20250217194040959-1224401863.png" alt="" loading="lazy"></p>
<h2 id="工作流">工作流</h2>
<p><img src="https://img2024.cnblogs.com/blog/1104472/202502/1104472-20250217194041104-317367365.png" alt="" loading="lazy"></p>
<p>Dify 中还有一个非常杀手锏的应用，那就是工作流！</p>
<p>我一直认为 Dify 中最有价值的一个模块就是工作流模块，合理构建自己的工作流，就好比让一个只有大脑能力的模型，瞬间具备了手的能力。</p>
<p>原本只能通过问答来交互的模型，瞬间具备了和外界交互的能力。</p>
<p>通过工作流，Dify 可以自动执行一系列复杂任务，比如数据分析、报告生成、资源调度甚至是跨平台操作。</p>
<p>这些任务不再是孤立的指令，而是形成了一个有机的整体，每个步骤都紧密相连，协同工作，从而极大地提升了工作效率。</p>
<p><strong>工作流模块的详解，我将在后续文章中单独介绍，以保持当前文章的简洁性。</strong></p>
<p>以上，既然看到这里了，如果觉得不错，随手点个赞和关注，并转发给更多的朋友吧！感恩。</p>
<p>对AI学习感兴趣的朋友，欢迎后台留言“电子书”，我将无偿提供我精心整理的20本电子书资源，助你一臂之力。期待与你共同进步！</p>
<blockquote>
<p>作者：数字生命贾克斯 (博客园ID：陈咬金）<br>
内容首发自公众号，地址：<a href="https://mp.weixin.qq.com/s/U3RYRqNppuEX4oMdgiKu9Q?token=423632529&amp;lang=zh_CN" target="_blank" rel="noopener nofollow">DeepSeek企业级部署实战指南：从服务器选型到Dify私有化落地</a></p>
</blockquote>

</div>
<div id="MySignature" role="contentinfo">
    <br>
<fieldset style="padding: 10px; margin: 10px; background-color: #fff; width: 850px; border: 1px solid black; font-size: blod">
<p><span style="color: black">版权声明</span></p>
<hr style="color: black">
<p><span style="color: black">作者：陈咬金</span></p>
<p><span style="color: black">出处：</span><a style="color: black" href="https://www.cnblogs.com/zh94/" target="_blank">陈咬金的技术博客--https://www.cnblogs.com/zh94/</a></p>
<p><span style="color: black">您的支持是对博主最大的鼓励，感谢您的认真阅读。</span></p>
<p><span style="color: black">本文版权归作者所有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文连接，否则保留任何追究法律责任的权利。</span></p>
</fieldset>

<div style="padding: 10px; margin: 10px; background-color: #fff; width: 850px; border: 0px solid black; font-size: blod">
     <img src="https://images.cnblogs.com/cnblogs_com/zh94/1586631/o_211225012748_weixin_saoma.png">&nbsp;&nbsp;&nbsp;&nbsp;<img src="https://images.cnblogs.com/cnblogs_com/zh94/1586631/o_211225012748_weixin_saoma.png">
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.014042499006944445" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-18 08:42">2025-02-18 08:41</span>&nbsp;
<a href="https://www.cnblogs.com/zh94">陈咬金</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18720633" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18720633);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18720633', targetLink: 'https://www.cnblogs.com/zh94/p/18720633', title: 'DeepSeek企业级部署实战指南：从服务器选型到Dify私有化落地' })">举报</a>
</div>
        