
		<h1 class="postTitle">
			<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chingho/p/18627062" title="发布于 2024-12-24 11:38">
    <span role="heading" aria-level="2">cs-script：一个非常成熟的C#脚本开源引擎</span>
    

</a>

		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>推荐一个强大C#脚本引擎，方便我们在项目中，动态执行C#脚本。</p>
<h1 id="01-项目简介">01 项目简介</h1>
<p>CS-Script是非常成熟的C#脚本引擎，自2004年起就发布了，即.NET发布后的两年。</p>
<p>支持托管和独立（CLI）执行模型，可以作为PowerShell的纯C#替代品，也可以通过托管脚本引擎在运行时扩展.NET应用程序。</p>
<p>允许在不影响代码库的情况下无缝切换底层编译技术，目前支持的编译器有dotnet.exe和csc.exe。</p>
<h1 id="02-开发工具支持与平台兼容">02 开发工具支持与平台兼容</h1>
<p>与Visual Studio、VSCode、Sublime Text 3等开发工具有良好的集成，可以在Windows和Linux上运行，类库针对".NET Standard"进行编译，因此可以被任何托管应用程序托管。</p>
<h1 id="03-使用方法">03 使用方法</h1>
<p><strong>1、安装依赖库</strong></p>
<pre><code>Install-Package CS-Script
</code></pre>
<p><strong>2、有返回值的的动态脚本</strong></p>
<pre><code>using CSScriptLib; 

// 使用CS-Script的Evaluator静态类加载一个动态方法
// 这个方法接受一个字符串形式的C#代码，并编译执行它
dynamic script = CSScript.Evaluator
    .LoadMethod(@"int Product(int a, int b)
                       {
                           return a * b; // 计算两个数的乘积
                       }");

// 调用加载的方法，并传入两个参数3和2
int result = script.Product(3, 2);

// 输出结果到控制台
Console.WriteLine(result); // 输出：6
</code></pre>
<p><strong>3、无返回值的动态脚本</strong></p>
<pre><code>using CSScriptLib;

// 使用CS-Script的Evaluator静态类创建一个委托（Delegate）
// 这个委托指向一个接受一个字符串参数的方法，该方法将字符串输出到控制台
var log = CSScript.Evaluator
                  .CreateDelegate(@"void Log(string message)
                                    {
                                        Console.WriteLine(message); // 使用Console.WriteLine将传入的消息输出到控制台
                                    }");

// 调用创建的委托，并传入字符串"Test message"
log("Test message"); // 执行Log方法，输出"Test message"到控制台


</code></pre>
<p><strong>4、简单表达式脚本</strong></p>
<pre><code>using CSScriptLib; 

// 使用CS-Script的Evaluator静态类的Eval方法直接评估一个C#表达式
// 这里评估的表达式是"6 + 3"，即计算6和3的和
int sum = CSScript.Evaluator.Eval("6 + 3");

// 输出计算结果到控制台
Console.WriteLine(sum); // 打印计算结果，即9
</code></pre>
<p><strong>5、实现了特定接口的C#脚本</strong></p>
<pre><code>using CSScriptLib; 

// 使用CS-Script的Evaluator静态类的LoadCode方法加载一个实现了ICalc接口的C#脚本
// 这个脚本定义了一个名为Script的类，它实现了ICalc接口中的Sum方法
ICalc calc = CSScript.Evaluator
    .LoadCode&lt;ICalc&gt;(@"using System;
                        public class Script: ICalc // 继承ICalc接口
                        {
                            public int Sum(int a, int b) // 实现Sum方法
                            {
                                return a + b; // 返回两个整数的和
                            }
                        }");

// 调用加载的脚本中的Sum方法，并传入参数1和2
int result = calc.Sum(1, 2);

// 输出结果到控制台
Console.WriteLine(result); // 打印Sum方法的执行结果，即3
</code></pre>
<h1 id="04-项目地址">04 项目地址</h1>
<p><a href="https://github.com/oleg-shilo/cs-script" target="_blank" rel="noopener nofollow">https://github.com/oleg-shilo/cs-script</a></p>
<p><strong>更多开源项目：</strong>  <a href="https://github.com/bianchenglequ/NetCodeTop" target="_blank" rel="noopener nofollow">https://github.com/bianchenglequ/NetCodeTop</a></p>
<p>- End -</p>
<p>推荐阅读</p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5MDE5MDM5NA==&amp;mid=2449945212&amp;idx=1&amp;sn=f063e43be2976bb62e8721661ece824d&amp;chksm=b1bb0c2986cc853f673cae3fdf7baf72d920b6d51a676589663067a727026b9510cbb7e1a844&amp;scene=21#wechat_redirect" target="_blank" rel="noopener nofollow">2个零基础入门框架教程！</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDE5MDM5NA==&amp;mid=2449945455&amp;idx=1&amp;sn=b451c644c343f84fc880d6193928ae85&amp;scene=21#wechat_redirect" target="_blank" rel="noopener nofollow">一款可以替代Navicat的数据库管理工具</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDE5MDM5NA==&amp;mid=2449945243&amp;idx=1&amp;sn=a09f3247669a7f2202dd7dd1a993b6a7&amp;scene=21#wechat_redirect" target="_blank" rel="noopener nofollow">CSCore：一个.Net功能强大且灵活的开源音频处理库</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDE5MDM5NA==&amp;mid=2449944988&amp;idx=1&amp;sn=822cc3a55310abfe1e528dc557a67ea8&amp;scene=21#wechat_redirect" target="_blank" rel="noopener nofollow">Blazor开源UI简洁组件：10个热门.Net开源项目推荐！</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDE5MDM5NA==&amp;mid=2449944706&amp;idx=1&amp;sn=b169277bf297205f422ab82bf7a22a87&amp;scene=21#wechat_redirect" target="_blank" rel="noopener nofollow">ExcelDataReader：一个.Net高性能Excel开源读取器</a></p>

</div>
<div class="clear"></div>

		</div>
		<div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.027752894894675927" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2024-12-24 11:38">2024-12-24 11:38</span>&nbsp;
<a href="https://www.cnblogs.com/chingho">chingho</a>&nbsp;
阅读(<span id="post_view_count">64</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18627062" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18627062);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18627062', targetLink: 'https://www.cnblogs.com/chingho/p/18627062', title: 'cs-script：一个非常成熟的C#脚本开源引擎' })">举报</a>
</div>
	