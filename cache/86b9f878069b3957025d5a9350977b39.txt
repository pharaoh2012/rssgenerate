
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ygluu/p/18857429" title="发布于 2025-05-02 13:05">
    <span role="heading" aria-level="2">架构哲学与游戏工业化：策划x程序x抽象x复用x易用=降本增效</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h3 id="一前言">（一）前言</h3>
<h5 id="策划-x-程序-x-抽象-x-复用-x-易用--降本增效">策划 x 程序 x 抽象 x 复用 x 易用 = 降本增效</h5>
<h5 id="公式为什么是乘法而不是加法">公式为什么是乘法而不是加法？</h5>
<p>如果是加法，任何一个维度的数据为0时结果可能还是正数；如果是乘法，任何一个维度数据都不能为0否则结果就是0，亦即：缺一不可。</p>
<h5 id="注">注：</h5>
<p>本文所述的策划（主策）、产品（经理）是一个层次的对象，技术包含技术经理范畴，产品和技术词汇含义要联系上下文。</p>
<h3 id="二为什么要架构">（二）为什么要架构</h3>
<p>有很多游戏公司，一个产品上线数据不好之后很快就会裁员或者解散，由于赶时间缺少合理架构与抽象，这个产品的代码就是一堆电子垃圾。</p>
<h4 id="即使是一个成功的游戏如果代码缺少合理架构与抽象后续开发和维护时间和人工成本也会很高会被技术所拖累甚至拖垮这就是技术债">即使是一个成功的游戏，如果代码缺少合理架构与抽象，后续开发和维护时间和人工成本也会很高，会被技术所拖累、甚至拖垮（这就是技术债）。</h4>
<h4 id="真正的高手都具备高度抽象能力">真正的高手都具备高度抽象能力</h4>
<p>高级开发者，能够根据业务的特点，抽象出软件最合理的设计，使得程序具有良好的可读性和扩展性，通常一开始写出的逻辑就为了以后的重用。许多开发框架就是一步步抽象/埋坑/优化而来的[3]。</p>
<h3 id="三和谁架构">（三）和谁架构</h3>
<p>然而，现实当中，有的产品/策划一意孤行：我就是要这样功能，我就要这样的配置表。<br>
当然，也有的技术在闭门造车，脱离应用环节导致策划使用起来很复杂、麻烦。</p>
<h5 id="我一贯主张">我一贯主张：</h5>
<p>产品经理和技术经理要头脑风暴和思维碰撞，哪怕打架也要打出共识。如下图1所示：<br>
<img src="https://img2024.cnblogs.com/blog/3509144/202505/3509144-20250502103838495-2091589583.png" alt="" loading="lazy"><br>
图1 产品经理和技术经理通力合作</p>
<h3 id="四架构哲学">（四）架构哲学</h3>
<h5 id="架构思维抽象分层分治演化1软件架构设计的核心抽象与模型战略编程2">架构思维：抽象、分层、分治、演化[1]。软件架构设计的核心：抽象与模型、“战略编程”[2]。</h5>
<p>架构需要头脑风暴和沟通协调，开始肯定进度缓慢，但后面肯定能追赶上来，而且随着时间推移和演进，它体现的生产力优势越突出。<br>
而没有架构或者架构不好的系统，开始貌似进度快，但是前面欠下的技术债后面都会还回来的。<br>
在脑力劳动范畴的程序开发领域，架构师是思想者，程序员是行动者。舒马赫《解惑》中将科学分为两种：操纵的科学、理解的科学。程序员要体现算法的高超、逻辑的强度（操纵的科学），那么架构师体现什么？<br>
很多人会都说，你有功能我也有，凭什么你做的就是架构而我做的就不是。举个简单的例子，先进武器（操纵的科学）能使战争的胜算一边倒，但是兵法（理解的科学）也可以以少胜多、以弱胜强，如果战力（操纵的科学）相当那么兵法会吊打一切。</p>
<h4 id="所以架构师是智慧的集成架构是功能的有机结合整体统筹非架构是功能的无机集成拼凑">所以，架构师是智慧的集成，架构是功能的有机结合（整体统筹），非架构是功能的无机集成（拼凑）。</h4>
<h4 id="不要用战术勤奋来掩盖战略懒惰">不要用战术勤奋来掩盖战略懒惰。</h4>
<p><img src="https://img2024.cnblogs.com/blog/3509144/202505/3509144-20250502111002236-1867024399.jpg" alt="" loading="lazy"><br>
图2 模型抽象和功能抽象</p>
<h3 id="五游戏工业化">（五）游戏工业化</h3>
<p>工业化：降低边际成本、提高生产效率、流水线生产（工序与分工）等等。<br>
游戏工业化：复用、易用、开发流程化.....<br>
<img src="https://img2024.cnblogs.com/blog/3509144/202505/3509144-20250502113147999-759869906.png" alt="" loading="lazy"><br>
图3 游戏工业化设计框架</p>
<h3 id="六工业化动了谁的奶酪">（六）工业化动了谁的奶酪</h3>
<p>在我初入游戏行业时遇到了几位非常出色的策划大佬，其中一位后来他去一家业内有名的游戏公司推动游戏工业化（非代码架构层面），项目结案的时候他朋友圈的总结美化了过程（但实际过程很艰辛）。<br>
有的公司工业化的目的是降低人工成本（最终裁掉剩余劳动力），有的是为了横向或纵向发展。无论说架构还是说工业化，最后都会：</p>
<h4 id="弱化使用者的技术门槛降低使用者的技术存在感这是程序员自豪感的根源甚至淘汰旧有开发平台的劳动力或者让他们转型转型是有阵痛的">弱化使用者的技术门槛、降低使用者的技术存在感（这是程序员自豪感的根源），甚至淘汰旧有开发平台的劳动力或者让他们转型（转型是有阵痛的）。</h4>
<p>我帮他总结一句话：</p>
<h4 id="推行工业化的人的最终使命是让自己失业要么是被旧势力打败要么是使命完成已无存在的意义">推行工业化的人的最终使命是：让自己失业————要么是被旧势力打败，要么是使命完成已无存在的意义。</h4>
<h3 id="七志同道合">（七）志同道合</h3>
<p>成就一件事情需要志同道合的集体来完成，工业化之路也不例外：包含产品和技术一起。志同道合：方向一致、同一条道，即时是方向一致、两条平行道路都很难实现既定目标（两条赛道的人可能会互相攻击）。<br>
只有优秀的人才能成功架构师，他们有“总设计”的权利，其他人更多的是执行力的体现。优秀的人有一个特点：</p>
<h4 id="优秀的人发现问题和纠正问题比一般人快">优秀的人发现问题和纠正问题比一般人快。</h4>
<h4 id="所以无论在哪里追随和服从优秀的人是没有错的的">所以无论在哪里，追随和服从优秀的人是没有错的的。</h4>
<h4 id="杜绝遇到问题就埋怨或抱怨的人">杜绝遇到问题就埋怨或抱怨的人。</h4>
<h3 id="八工业化的好处">（八）工业化的好处</h3>
<p>1、游戏持续开发和维护成本相当低。<br>
2、类似新游戏的代码开发成本也相当低（复用率高），成本在于策划的配置和素材的制作，可以较快速的出产品。</p>
<h3 id="九相关链接">（九）相关链接</h3>
<p>1、架构思维：抽象、分层、分治、演化<br>
<a href="https://www.cnblogs.com/it-rabbit-cyj/p/14887783.html" target="_blank">https://www.cnblogs.com/it-rabbit-cyj/p/14887783.html</a><br>
2、软件架构设计的核心：抽象与模型、“战略编程”<br>
<a href="https://cloud.tencent.com/developer/article/2098588" target="_blank" rel="noopener nofollow">https://cloud.tencent.com/developer/article/2098588</a><br>
3、真正的高手，都具备高度抽象能力<br>
<a href="https://blog.csdn.net/weixin_45719624/article/details/102482305" target="_blank" rel="noopener nofollow">https://blog.csdn.net/weixin_45719624/article/details/102482305</a></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.7009778555763889" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-02 23:29">2025-05-02 13:05</span>&nbsp;
<a href="https://www.cnblogs.com/ygluu">码客-ygluu</a>&nbsp;
阅读(<span id="post_view_count">54</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18857429);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18857429', targetLink: 'https://www.cnblogs.com/ygluu/p/18857429', title: '架构哲学与游戏工业化：策划x程序x抽象x复用x易用=降本增效' })">举报</a>
</div>
        