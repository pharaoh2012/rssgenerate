
        <div class="postTitle">
            <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/mysticbinary/p/18662390" title="发布于 2025-01-09 17:42">
    <span role="heading" aria-level="2">关于计算机体系结构的一些思考</span>
    

</a>

        </div>
        <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p></p><div class="toc"><div class="toc-container-header">目录</div><ul><li><a href="#输入输入" rel="noopener nofollow">输入/输入</a></li><li><a href="#模型分层" rel="noopener nofollow">模型分层</a><ul><li><a href="#层的一些通用法则" rel="noopener nofollow">层的一些通用法则</a></li></ul></li><li><a href="#算法和程序" rel="noopener nofollow">算法和程序</a></li></ul></div><p></p>
<hr>
<h1 id="输入输入">输入/输入</h1>
<p>现代计算机都采用存储程序结构，又称为冯·诺依曼结构，所有对计算机的操作，都可以简化为如下图：</p>
<p><img src="https://img2024.cnblogs.com/blog/1552062/202501/1552062-20250109171122472-1693181191.png" alt="image" loading="lazy"></p>
<p>现代计算机组成的<strong>五大部分</strong>：</p>
<ul>
<li>控制器</li>
<li>运算器</li>
<li>存储器</li>
<li>输入/输出设备</li>
</ul>
<p>冯·诺依曼结构<strong>主要特点</strong>有：</p>
<ul>
<li>
<p>以运算单元为中心；<br>
输入/输出设备与存储器之间的数据传送都途经运算器。运算器、存储器、输入设备们之间的联系都由控制器集中控制；</p>
</li>
<li>
<p>指令的执行是顺序的，即一般按照指令在存储器中存放的顺序执行，程序分支由转移指令实现（程序需要根据特定的条件来改变执行的顺序，这时就需要使用分支机制）；</p>
</li>
<li>
<p>存储器是字长固定的、顺序线性编址的一维结构；<br>
存储器提供可按地址访问的一级地址空间，每个地址是唯一定义的；</p>
</li>
<li>
<p>数据以二进制编码；<br>
指令和数据均采用二进制格式；</p>
</li>
<li>
<p>由指令形式的低级机器语言驱动；</p>
</li>
</ul>
<h1 id="模型分层">模型分层</h1>
<p>计算机和网络等都采用分层设计的，如下图：</p>
<table>
<thead>
<tr>
<th>层</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>应用层、云计算</td>
<td>软件</td>
</tr>
<tr>
<td>库、接口、服务</td>
<td>软件</td>
</tr>
<tr>
<td>编程语言</td>
<td>软件</td>
</tr>
<tr>
<td>操作系统</td>
<td>软件</td>
</tr>
<tr>
<td>指令集体系架构</td>
<td>软件</td>
</tr>
<tr>
<td>逻辑门</td>
<td>硬件</td>
</tr>
<tr>
<td>电路</td>
<td>硬件</td>
</tr>
<tr>
<td>半导体</td>
<td>硬件</td>
</tr>
<tr>
<td>电流</td>
<td>硬件</td>
</tr>
</tbody>
</table>
<h2 id="层的一些通用法则">层的一些通用法则</h2>
<ul>
<li>
<p>依赖性<br>
计算机的工程模型是深度层叠的，并且每一层的设计都会影响上、下相邻的两层；</p>
</li>
<li>
<p>独立性</p>
<ol>
<li>每一层都独立处理其特定的任务或功能。层与层之间的设计和实现细节可以独立进行；</li>
<li>模型分层让设计者能够摆脱现实物理的约束；</li>
</ol>
</li>
<li>
<p>传递性</p>
<ol>
<li>不同的层次之间有不同的沟通方式，这个约定好的沟通方式叫作<strong>协议</strong>，并且不能越层沟通；</li>
<li>可以没有上层只有下层，但一定不能只有上层而没有下层；</li>
</ol>
</li>
</ul>
<p>这些法则不仅适用于计算机体系、计算机网络，也在操作系统、软件开发和硬件设计中广泛应用。</p>
<h1 id="算法和程序">算法和程序</h1>
<ul>
<li>程序 = 由计算机系统执行的一系列指令或代码集合 + 数据；</li>
<li>算法其实就是设计者针对问题场景所设计的一些最佳策略；</li>
<li>某场景的应用 = 针对该场景的算法 + 数据；</li>
</ul>

</div>
<div class="clear"></div>

        <div class="postDesc">posted on 
<span id="post-date" data-last-update-days="0.18454854592592593" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-09 17:51">2025-01-09 17:42</span>&nbsp;
<a href="https://www.cnblogs.com/mysticbinary">Mysticbinary</a>&nbsp;
阅读(<span id="post_view_count">12</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18662390" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18662390);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18662390', targetLink: 'https://www.cnblogs.com/mysticbinary/p/18662390', title: '关于计算机体系结构的一些思考' })">举报</a>
</div>
    