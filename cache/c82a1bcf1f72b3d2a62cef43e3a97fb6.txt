
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/18852627" title="发布于 2025-04-29 08:00">
    <span role="heading" aria-level="2">EF Core 10 现已支持 LeftJoin 和 RightJoin 运算符查询了！</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h2 data-tool="mdnice编辑器"><span>前言</span></h2>
<p data-tool="mdnice编辑器"><span>最近发现 EF Core 10 中的新增功能引入了在 LINQ 中支持 LeftJoin 和 RightJoin 运算符查询的新功能。在 EF Core 10 之前，开发人员需要通过复杂的组合查询实现 LEFT JOIN 需要在特定配置中执行<code><span>SelectMany</span></code><span>、<code><span>GroupJoin</span></code><span>&nbsp;和&nbsp;<code><span>DefaultIfEmpty</span></code><span>&nbsp;操作。</span></span></span></span></p>
<p data-tool="mdnice编辑器"><span>本文咱们一起来看看在 EF Core 中使用 LeftJoin 和 RightJoin 运算符进行左右连接查询的代码简洁度。</span></p>
<h2 data-tool="mdnice编辑器"><span>环境准备</span></h2>
<p data-tool="mdnice编辑器"><span>在此之前我们需要先安装 .NET 10 开发环境。</span></p>
<ul class="list-paddingleft-1">
<li><a href="https://dotnet.microsoft.com/zh-cn/download/dotnet/10.0" target="_blank" rel="noopener nofollow"><span>https://dotnet.microsoft.com/zh-cn/download/dotnet/10.0</span></a></li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/1336199/202504/1336199-20250428224306799-1275535775.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/1336199/202504/1336199-20250428224313567-961913633.png" alt="" loading="lazy"></p>
<p data-tool="mdnice编辑器"><span>需要安装最新的 Visual Studio 2022 预览版或者使用 Visual Studio Code 和 C# 开发工具包扩展或者使用 Rider 来配合 .NET 10 使用。</span></p>
<ul class="list-paddingleft-1">
<li>Visual Studio 2022 预览版：<a href="https://visualstudio.microsoft.com/zh-hans/vs/preview" target="_blank" rel="noopener nofollow">https://visualstudio.microsoft.com/zh-hans/vs/preview</a></li>
<li>C# 开发工具包扩展：<a href="https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csdevkit" target="_blank" rel="noopener nofollow">https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csdevkit</a></li>
</ul>
<h3 data-tool="mdnice编辑器"><span>EF Core指定使用预发行版本</span></h3>
<p><img src="https://img2024.cnblogs.com/blog/1336199/202504/1336199-20250428224342559-343649296.png" alt="" loading="lazy"></p>
<h3 data-tool="mdnice编辑器"><span>指定项目目标框架</span></h3>
<p><img src="https://img2024.cnblogs.com/blog/1336199/202504/1336199-20250428224407621-1824394296.png" alt="" loading="lazy"></p>
<h2 data-tool="mdnice编辑器"><span>GroupJoin + SelectMany + DefaultIfEmpty 实现左连接</span></h2>
<blockquote>
<p><span>实现原理：GroupJoin + SelectMany + DefaultIfEmpty 实现左连接。该模式包括在多个数据源之间创建 GroupJoin，然后通过对分组源使用 SelectMany 运算符与 DefaultIfEmpty 来平展分组，从而在内部不具有相关元素时匹配 null。</span></p>
</blockquote>
<ul class="list-paddingleft-1">
<li><span>GroupJoin： 将两个序列按关联键进行分组连接，生成分组的嵌套结构。</span></li>
<li><span>SelectMany： 将嵌套集合（如集合的集合）展开为单一序列。</span></li>
<li><span>DefaultIfEmpty： 会生成一个 包含 null 的默认条目，确保左表记录不被过滤。</span></li>
</ul>
<pre data-tool="mdnice编辑器"><span data-cacheurl="" data-remoteid="" data-lazy-bgimg="https://mmbiz.qpic.cn/mmbiz_svg/9M0PhLTmTIfzNFlBn3E31dm1GicDGKZd4sKqW1aP3KQVWeqGFMn4HLsibhTopejvVRhIl1WPdPDg6Bp5h45xBjau56FG2rY9KW/640?wx_fmt=svg&amp;from=appmsg" data-fail="0"><code><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var leftJoinQuery = from c&nbsp;in<span>&nbsp;db.Classes<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; join t&nbsp;in<span>&nbsp;db.Teachers on c.TeacherID equals t.TeacherID into teacherGroup<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; from t&nbsp;in<span>&nbsp;teacherGroup.DefaultIfEmpty()<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; select new<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; c,<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; t<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };<span><br><span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var leftJoinQuery2 = db.Classes<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 第一步：GroupJoin 创建分组关联<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .GroupJoin(<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; db.Teachers,<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; c =&gt; c.TeacherID,// 左表关联键（Class 的 TeacherID）<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; t =&gt; t.TeacherID,// 右表关联键（Teacher 的 TeacherID）<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (c, teacherGroup) =&gt; new<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Class = c,<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Teachers = teacherGroup<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; })<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 第二步：SelectMany 展开分组并处理空值<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .SelectMany(<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; temp =&gt; temp.Teachers.DefaultIfEmpty(),// 确保即使无关联教师也保留 Class 班级信息<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (temp, t) =&gt; new<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; temp.Class,<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Teacher = t<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });<span><br></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></span></pre>
<h2 data-tool="mdnice编辑器"><span>LeftJoin 运算符查询</span></h2>
<pre data-tool="mdnice编辑器"><span data-cacheurl="" data-remoteid="" data-lazy-bgimg="https://mmbiz.qpic.cn/mmbiz_svg/9M0PhLTmTIfzNFlBn3E31dm1GicDGKZd4sKqW1aP3KQVWeqGFMn4HLsibhTopejvVRhIl1WPdPDg6Bp5h45xBjau56FG2rY9KW/640?wx_fmt=svg&amp;from=appmsg" data-fail="0"><code><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var newLeftJoinQuery = db.Classes<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.LeftJoin(db.Teachers,<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;c =&gt; c.TeacherID,<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;t =&gt; t.TeacherID,<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(c, t) =&gt; new<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Class = c,<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Teacher = t<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;});<span><br><span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Console.WriteLine("执行SQL=&gt;&gt;&gt; "<span>&nbsp;+ newLeftJoinQuery.ToQueryString());<span><br></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></span></pre>
<h2 data-tool="mdnice编辑器"><span>RightJoin 运算符查询</span></h2>
<pre data-tool="mdnice编辑器"><span data-cacheurl="" data-remoteid="" data-lazy-bgimg="https://mmbiz.qpic.cn/mmbiz_svg/9M0PhLTmTIfzNFlBn3E31dm1GicDGKZd4sKqW1aP3KQVWeqGFMn4HLsibhTopejvVRhIl1WPdPDg6Bp5h45xBjau56FG2rY9KW/640?wx_fmt=svg&amp;from=appmsg" data-fail="0"><code><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var newRightJoinQuery = db.Teachers<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .RightJoin(db.Classes,<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; t =&gt; t.TeacherID,<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; c =&gt; c.TeacherID,<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (t, c) =&gt; new<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Teacher = t,<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Class = c<span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });<span><br><span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Console.WriteLine("执行SQL=&gt;&gt;&gt; "<span>&nbsp;+ newRightJoinQuery.ToQueryString());<span><br></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></span></pre>
<h2 data-tool="mdnice编辑器"><span>参考文章</span></h2>
<ul class="list-paddingleft-1">
<li><a href="https://github.com/dotnet/efcore/issues/35379" target="_blank" rel="noopener nofollow"><span>https://github.com/dotnet/efcore/issues/35379</span></a></li>
<li><a href="https://learn.microsoft.com/zh-cn/ef/core/what-is-new/ef-core-10.0/whatsnew" target="_blank" rel="noopener nofollow"><span>https://learn.microsoft.com/zh-cn/ef/core/what-is-new/ef-core-10.0/whatsnew</span></a></li>
</ul>
<div id="gtx-trans" style="position: absolute; left: 31px; top: 3755.8px">&nbsp;</div>
</div>
<div id="MySignature" role="contentinfo">
    <blockquote>
<p style="font-family:YouYuan;font-size: 16px;margin: 0 auto 0.01em auto;"><span style="font-size: 17px; ">作者名称：</span><a href="https://www.cnblogs.com/Can-daydayup/" target="_blank">追逐时光者</a></p>
<p style="font-family:YouYuan;font-size: 16px;margin: 0 auto 0.01em auto;"><span style="font-size: 17px; ">作者简介：</span>一个热爱编程、善于分享、喜欢学习、探索、尝试新事物和新技术的全栈软件工程师。</p>
<p style="font-family:YouYuan;font-size: 16px;margin: 0 auto 0.01em auto;">
本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文链接，否则保留追究法律责任的权利。如果该篇文章对您有帮助的话，可以点一下右下角的<a onclick="votePost(cb_entryId,'Digg')" href="javascript:void(0)" style="color:red;">【♥推荐♥】</a>，希望能够持续的为大家带来好的技术文章，文中可能存在描述不正确的地方，欢迎指正或补充，不胜感激。
</p>
</blockquote>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.04849649855555556" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-29 08:00">2025-04-29 08:00</span>&nbsp;
<a href="https://www.cnblogs.com/Can-daydayup">追逐时光者</a>&nbsp;
阅读(<span id="post_view_count">130</span>)&nbsp;
评论(<span id="post_comment_count">5</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18852627);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18852627', targetLink: 'https://www.cnblogs.com/Can-daydayup/p/18852627', title: 'EF Core 10 现已支持 LeftJoin 和 RightJoin 运算符查询了！' })">举报</a>
</div>
        