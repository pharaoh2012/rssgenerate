
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Yesi/p/18762913" title="发布于 2025-03-10 16:05">
    <span role="heading" aria-level="2">通过 C# 打印Word文档</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>Word文档是日常办公和学习中不可或缺的一部分。比如在商务往来中，经常需要打印 Word 文档用于撰写和传递正式的商务信函、合作协议、项目提案等。打印出来的文档便于双方签字盖章，具有法律效力和正式性。本文将提供以下<strong>4种通过C# 打印Word文档的方法</strong>，以适应不同的场景需求。</p>
<ul>
<li>C# 通过物理打印机打印Word文档</li>
<li>C# 静默打印 Word 文档</li>
<li>C# 通过虚拟打印机将 Word 转为 PDF</li>
<li>C# 在一张纸上打印多个页面</li>
</ul>
<p><span style="background-color: rgba(255, 255, 153, 1)"><strong>免费 .NET Word库</strong></span> - <a href="https://www.e-iceblue.com/Introduce/free-doc-component.html" target="_blank" rel="noopener nofollow">Free Spire.Doc for .NET</a>。要实现通过C#打印Word文档，我们需要安装该免费库（有页数限制）。可以直接在Visual Studio中通过NuGet搜索 “FreeSpire.Doc”，然后点击 “安装” 将其引用到程序中。或者通过以下链接下载产品包，解压后再手动将dll文件添加引用至程序。<br><a href="https://www.e-iceblue.com/Download/download-excel-for-net-free.html" target="_blank" rel="noopener nofollow">https://www.e-iceblue.com/Download/download-excel-for-net-free.html</a></p>
<p>&nbsp;</p>
<h3 id="C%23%20%E9%80%9A%E8%BF%87%E7%89%A9%E7%90%86%E6%89%93%E5%8D%B0%E6%9C%BA%E6%89%93%E5%8D%B0Word%E6%96%87%E6%A1%A3">C# 通过物理打印机打印Word文档</h3>
<p>通过免费.NET库提供的&nbsp;<strong><em>PrintDocument</em>&nbsp;</strong>类，我们可以在指定的打印机上打印 Word 文档，还可以指定设置打印选项，如要打印的页面范围、份数、和纸张大小等。</p>
<p>C# 代码：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> Spire.Doc;
</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> System.Drawing.Printing;
 
</span><span style="color: rgba(0, 0, 255, 1)">namespace</span><span style="color: rgba(0, 0, 0, 1)"> PrintWordDocument
{
    </span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Program
    {
        </span><span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">void</span> Main(<span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)">[] args)
        {
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 加载Word文档</span>
            Document doc = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Document();
            doc.LoadFromFile(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">示例.docx</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
 
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 获取 PrintDocument 对象</span>
            PrintDocument printDoc =<span style="color: rgba(0, 0, 0, 1)"> doc.PrintDocument;
 
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 指定打印机名称</span>
            printDoc.PrinterSettings.PrinterName = <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">打印机名</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;
 
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 指定要打印的页面范围</span>
            printDoc.PrinterSettings.FromPage = <span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">;
            printDoc.PrinterSettings.ToPage </span>= <span style="color: rgba(128, 0, 128, 1)">10</span><span style="color: rgba(0, 0, 0, 1)">;
 
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 设置打印份数</span>
            printDoc.PrinterSettings.Copies = <span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">;
 
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 指定纸张大小</span>
            printDoc.DefaultPageSettings.PaperSize = <span style="color: rgba(0, 0, 255, 1)">new</span> PaperSize(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">custom</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(128, 0, 128, 1)">500</span>, <span style="color: rgba(128, 0, 128, 1)">800</span><span style="color: rgba(0, 0, 0, 1)">);
 
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 打印文档</span>
<span style="color: rgba(0, 0, 0, 1)">            printDoc.Print();
        }
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<h3>C# 静默打印 Word 文档</h3>
<p>静默打印是指在打印过程中不弹出打印对话框，直接通过程序或系统设置自动完成打印操作。使用Free Spire.Doc，我们可以将<em><strong> PrintController</strong></em> 属性设置为 <em><strong>StandardPrintController</strong></em>，用于隐藏打印进程，从而实现静默打印。</p>
<p>C# 代码：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> Spire.Doc;
</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> System.Drawing.Printing;
 
</span><span style="color: rgba(0, 0, 255, 1)">namespace</span><span style="color: rgba(0, 0, 0, 1)"> SilentlyPrintWord
{
    </span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Program
    {
        </span><span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">void</span> Main(<span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)">[] args)
        {
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 加载Word文档</span>
            Document doc = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Document();
            doc.LoadFromFile(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">示例.docx</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
 
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 获取 PrintDocument 对象</span>
            PrintDocument printDoc =<span style="color: rgba(0, 0, 0, 1)"> doc.PrintDocument;
 
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 指定打印机名称</span>
            printDoc.PrinterSettings.PrinterName = <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">打印机名</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;
 
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 将PrintController属性设置为StandardPrintController，用于隐藏打印进程</span>
            printDoc.PrintController = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> StandardPrintController();
 
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 打印文档</span>
<span style="color: rgba(0, 0, 0, 1)">            printDoc.Print();
        }
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<blockquote>
<p><strong>注意：</strong>静默打印时无法实时确认打印效果和参数设置，如果打印机出现故障或打印参数设置错误，可能会导致打印失败或结果不符合预期。所以在正式使用静默打印前，建议先进行测试，确保打印设置和打印机状态正常。</p>
</blockquote>
<p>&nbsp;</p>
<h3 id="C%23%20%E9%80%9A%E8%BF%87%E8%99%9A%E6%8B%9F%E6%89%93%E5%8D%B0%E6%9C%BA%E5%B0%86%20Word%20%E8%BD%AC%E4%B8%BA%20PDF">C# 通过虚拟打印机将 Word 转为 PDF</h3>
<p>虚拟打印机是一种软件，能模拟实现打印机的功能，但并不涉及实际的纸张和墨水消耗，而是将电子文档转换为特定格式的电子文件保存在电脑上。除了物理打印机外，Free Spire.Doc也支持使用虚拟打印机。</p>
<p>C# 代码：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> Spire.Doc;
</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> System.Drawing.Printing;
 
</span><span style="color: rgba(0, 0, 255, 1)">namespace</span><span style="color: rgba(0, 0, 0, 1)"> PrintWordToPdf
{
    </span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Program
    {
        </span><span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">void</span> Main(<span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)">[] args)
        {
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 加载Word文档</span>
            Document doc = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Document();
            doc.LoadFromFile(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">示例.docx</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
 
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 获取 PrintDocument 对象</span>
            PrintDocument printDoc =<span style="color: rgba(0, 0, 0, 1)"> doc.PrintDocument;
 
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 打印输出到文件</span>
            printDoc.PrinterSettings.PrintToFile = <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">;
 
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 指定虚拟打印机名称</span>
            printDoc.PrinterSettings.PrinterName = <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Microsoft Print to PDF</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;
 
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 指定输出文件路径和名称</span>
            printDoc.PrinterSettings.PrintFileName = <span style="color: rgba(128, 0, 0, 1)">@"</span><span style="color: rgba(128, 0, 0, 1)">C:\Users\Administrator\Desktop\ToPDF.pdf</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;
 
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 打印文档</span>
<span style="color: rgba(0, 0, 0, 1)">            printDoc.Print();
        }
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<h3 id="C%23%20%E5%9C%A8%E4%B8%80%E5%BC%A0%E7%BA%B8%E4%B8%8A%E6%89%93%E5%8D%B0%E5%A4%9A%E4%B8%AA%E9%A1%B5%E9%9D%A2">C# 在一张纸上打印多个页面</h3>
<p>将多个相关的&nbsp;Word 文档页面打印在一张纸上，以便于对比查看和整理资料，提高工作效率，减少纸张浪费。通过使用&nbsp;<em><strong>PrintMultipageToOneSheet()</strong></em>&nbsp;方法可以实现该操作。</p>
<p>C# 代码：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> Spire.Doc;
</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> Spire.Doc.Printing;
</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> System.Drawing.Printing;
 
</span><span style="color: rgba(0, 0, 255, 1)">namespace</span><span style="color: rgba(0, 0, 0, 1)"> PrintMultiplePagesOnOneSheet
{
    </span><span style="color: rgba(0, 0, 255, 1)">internal</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Program
    {
        </span><span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">void</span> Main(<span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)">[] args)
        {
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 加载Word文档</span>
            Document doc = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Document();
            doc.LoadFromFile(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">示例.docx</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
 
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 获取 PrintDocument 对象</span>
            PrintDocument printDoc =<span style="color: rgba(0, 0, 0, 1)"> doc.PrintDocument;
 
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 启用单面打印</span>
            printDoc.PrinterSettings.Duplex =<span style="color: rgba(0, 0, 0, 1)"> Duplex.Simplex;
 
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 将指定的页数打印到一页上</span>
            doc.PrintMultipageToOneSheet(PagesPreSheet.TwoPages, <span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">);
        }
    }
}
 </span></pre>
</div>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="4.182369906597223" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-10 16:05">2025-03-10 16:05</span>&nbsp;
<a href="https://www.cnblogs.com/Yesi">E-iceblue</a>&nbsp;
阅读(<span id="post_view_count">147</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18762913" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18762913);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18762913', targetLink: 'https://www.cnblogs.com/Yesi/p/18762913', title: '通过 C# 打印Word文档' })">举报</a>
</div>
        