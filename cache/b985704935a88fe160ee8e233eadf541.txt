
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/dechinphy/p/18687146/sponge-ext" title="发布于 2025-01-23 10:20">
    <span role="heading" aria-level="2">使用SpongeExt快捷完成CudaSPONGE结合PySAGES的增强采样</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        <img src="https://img2024.cnblogs.com/blog/2277440/202501/2277440-20250123101904029-1283096609.png" alt="使用SpongeExt快捷完成CudaSPONGE结合PySAGES的增强采样" class="desc_img">
        基于CudaSPONGE高性能分子动力学模拟采样工具，和PySAGES高性能增强采样软件，我简单的封装了一个SpongeExt插件，可以用于无感结合CudaSPONGE和PySAGES进行增强采样分子动力学模拟。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="技术背景">技术背景</h1>
<p>在前面的一些文章中，我们介绍过关于<a href="https://www.cnblogs.com/dechinphy/p/18572403/cudasponge" target="_blank">CudaSPONGE的安装和基础使用方法</a>，<a href="https://www.cnblogs.com/dechinphy/p/18573762/sponge-python" target="_blank">CudaSPONGE提供的Python接口</a>，<a href="https://www.cnblogs.com/dechinphy/p/18569710/pysages" target="_blank">PySAGES增强采样软件的基本使用方法</a>，还有一篇关于<a href="https://www.cnblogs.com/dechinphy/p/18615556/pysages-sponge" target="_blank">CudaSPONGE和PySAGES相结合</a>的文章，并且做了一些简单的<a href="https://www.cnblogs.com/dechinphy/p/18680969/sponge_ext_01" target="_blank">CudaSPONGE结合PySAGES的性能测试</a>。其中因为CudaSPONGE与PySAGES的接口实际上是可以多场景共用的，因此考虑把这部分的接口单独封装一个包出来，使得用户可以尽可能无感的在CudaSPONGE中使用PySAGES。</p>
<h1 id="pip安装">Pip安装</h1>
<p>SpongeExt最新的源码存储地址为：<a href="https://gitee.com/dechin/sponge-ext/tree/master%EF%BC%8C%E9%83%BD%E6%98%AF%E9%9D%9E%E5%B8%B8%E7%AE%80%E5%8D%95%E7%9A%84Python%E4%BB%A3%E7%A0%81%EF%BC%8C%E5%8F%AA%E6%98%AF%E5%AF%B9%E7%8E%AF%E5%A2%83%E6%9C%89%E4%B8%80%E4%BA%9B%E5%85%88%E7%BD%AE%E6%9D%A1%E4%BB%B6%EF%BC%8C%E4%BE%8B%E5%A6%82Jax%E3%80%81Jaxlib%E3%80%81Cupy%E7%AD%89%EF%BC%8C%E5%BD%93%E7%84%B6%EF%BC%8CPySAGES%E4%B9%9F%E6%98%AF%E5%BF%85%E9%A1%BB%E5%85%88%E5%AE%89%E8%A3%85%E5%A5%BD%E7%9A%84%E3%80%82%E7%94%A8%E6%88%B7%E5%8F%AF%E4%BB%A5%E4%B8%8B%E8%BD%BD%E6%BA%90%E7%A0%81%E8%BF%9B%E8%A1%8C%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E7%94%A8pip%E5%AE%89%E8%A3%85%EF%BC%9A" target="_blank" rel="noopener nofollow">https://gitee.com/dechin/sponge-ext/tree/master，都是非常简单的Python代码，只是对环境有一些先置条件，例如Jax、Jaxlib、Cupy等，当然，PySAGES也是必须先安装好的。用户可以下载源码进行编译安装，也可以直接用pip安装：</a></p>
<pre><code class="language-bash">$ python3 -m pip install SpongeExt --upgrade
</code></pre>
<p>没有报错即为安装成功。</p>
<h1 id="使用方法">使用方法</h1>
<p>在<a href="https://gitee.com/dechin/sponge-ext/tree/master/examples/pysages_metad" target="_blank" rel="noopener nofollow">开源仓库的example路径</a>中，我们已经存放了一个完整的演示案例。其目录结构大致是这样的：</p>
<pre><code class="language-bash">.
|-- README.md
|-- protein
|   |-- alad_LJ.txt
|   |-- alad_angle.txt
|   |-- alad_atom_name.txt
|   |-- alad_atom_type_name.txt
|   |-- alad_bond.txt
|   |-- alad_charge.txt
|   |-- alad_coordinate.txt
|   |-- alad_dihedral.txt
|   |-- alad_exclude.txt
|   |-- alad_mass.txt
|   |-- alad_nb14.txt
|   |-- alad_residue.txt
|   `-- alad_resname.txt
|-- pysages_metad.py
`-- workspace
    |-- mdbox.txt
    |-- mdcrd.dat
    |-- mdinfo.txt
    |-- mdout.txt
    |-- nvt.in
    |-- nvt_restart_coordinate.txt
    `-- nvt_restart_velocity.txt
</code></pre>
<p>其中<code>pysages_metad.py</code>就是我们所定义的PySAGES增强采样方法，文件内容是这样的：</p>
<pre><code class="language-python">from SpongeExt import enhanced_sponge

import pysages
from pysages.colvars import DihedralAngle
from pysages.methods import Metadynamics

def phi_psi():
    from numpy import pi
    cvs = [DihedralAngle([4, 6, 8, 14]), DihedralAngle([6, 8, 14, 16])]
    height = 5.0  # kJ/mol
    sigma = [0.4, 0.4]  # radians
    stride = 3
    ngauss = 500
    grid = pysages.Grid(lower=(-pi, -pi), upper=(pi, pi), shape=(50, 50), periodic=True)
    method = Metadynamics(cvs, height, sigma, stride, ngauss, grid=grid)
    return method

pysages_method = phi_psi()
Calculate_Force, Mdout_Print = enhanced_sponge(pysages_method)
</code></pre>
<p>可以看到的是，我们只是调用了SpongeExt中的一个生成函数，没有在该脚本下直接调用CudaSPONGE底层的任何参数。而在PySAGES这边，也仅仅是定义了一个MetaDynamics的方法，没有定义任何其他PySAGES底层的SnapShot之类的参数，使用SpongeExt这个插件可以做到一个几乎无感的衔接。在<code>protein/</code>路径下存放的是我们使用Xponge生成的CudaSPONGE运行所需的输入参数文件。在<code>workspace/</code>路径下是我们运行的一个普通NVT的CudaSPONGE参数配置文件，其中只有一个<code>nvt.in</code>文件是我们需要配置的参数输入文件，其他文件都是通过CudaSPONGE运行产生的输出文件。<code>nvt.in</code>的文件内容为：</p>
<pre><code class="language-txt">case1 MD simulation

mode = NVT
default_in_file_prefix = ../protein/alad

pbc=0 
cutoff=999

dt = 1e-3
step_limit = 2000
write_information_interval = 10

thermostat = middle_langevin
middle_langevin_gamma = 10

rst = nvt_restart

coordinate_in_file = ../protein/alad_coordinate.txt
plugin = /usr/local/python-3.7.5/lib/python3.7/site-packages/prips/_prips.so
py = ../pysages_metad.py
</code></pre>
<p>相比于普通的NVT过程，这里只是多配置了<code>plugin</code>和<code>py</code>这两个参数，意指通过prips这个插件来调用python文件中的相关接口函数，从而达到一个外接软件实现增强采样方法的效果。</p>
<h1 id="总结概要">总结概要</h1>
<p>基于CudaSPONGE高性能分子动力学模拟采样工具，和PySAGES高性能增强采样软件，我简单的封装了一个SpongeExt插件，可以用于无感结合CudaSPONGE和PySAGES进行增强采样分子动力学模拟。</p>
<h1 id="版权声明">版权声明</h1>
<p>本文首发链接为：<a href="https://www.cnblogs.com/dechinphy/p/sponge-ext.html" target="_blank">https://www.cnblogs.com/dechinphy/p/sponge-ext.html</a></p>
<p>作者ID：DechinPhy</p>
<p>更多原著文章：<a href="https://www.cnblogs.com/dechinphy/" target="_blank">https://www.cnblogs.com/dechinphy/</a></p>
<p>请博主喝咖啡：<a href="https://www.cnblogs.com/dechinphy/gallery/image/379634.html" target="_blank">https://www.cnblogs.com/dechinphy/gallery/image/379634.html</a></p>
<h1 id="参考链接">参考链接</h1>
<ol>
<li><a href="https://gitee.com/dechin/sponge-ext/tree/master" target="_blank" rel="noopener nofollow">https://gitee.com/dechin/sponge-ext/tree/master</a></li>
</ol>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.23340112652314815" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-23 14:51">2025-01-23 10:20</span>&nbsp;
<a href="https://www.cnblogs.com/dechinphy">DECHIN</a>&nbsp;
阅读(<span id="post_view_count">38</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18687146" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18687146);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18687146', targetLink: 'https://www.cnblogs.com/dechinphy/p/18687146/sponge-ext', title: '使用SpongeExt快捷完成CudaSPONGE结合PySAGES的增强采样' })">举报</a>
</div>
        