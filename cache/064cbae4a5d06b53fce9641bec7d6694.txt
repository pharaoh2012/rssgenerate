
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lradian/p/18865624" title="发布于 2025-05-08 09:23">
    <span role="heading" aria-level="2">有名管道练习</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        有名管道练习
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<pre><code>/********************************************************************************
*
* 在主程序中创建一个子程序，并在父进程中获取系统时间，并写入管道，子程序从管道中读取数据
* author：jindouliu2024@163.com 
* date：2025.5.8
* Copyright (c)  2024-2025   jindouliu2024@163.com   All right Reserved
* 
********************************************************************************/
#include &lt;stdio.h&gt;
#include &lt;time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;string.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;unistd.h&gt;
#include &lt;sys/wait.h&gt;
#include &lt;fcntl.h&gt;

int main() {
    time_t now;
    struct tm *time_info;
    char buffer[80];
    char buffer1[80];
    int fifo_fd;

    // 创建有名管道
    int ret = mkfifo("./fifo2", 0664);
    if (ret == -1) {
        perror("mkfifo failed");
        return -1;
    }

    // 创建一个子进程
    pid_t child_pid = fork();
    if (child_pid &gt; 0) {
        // 父进程：以写模式打开管道
        fifo_fd = open("./fifo2", O_WRONLY);
        if (fifo_fd == -1) {
            perror("open fifo failed");
            return -1;
        }

        // 获取当前时间
        now = time(NULL);

        // 将时间转换为本地时间
        time_info = localtime(&amp;now);

        // 格式化时间
        strftime(buffer, sizeof(buffer), "当前时间：%Y年%m月%d日 %H:%M:%S", time_info);

        // 向管道写入数据
        ret = write(fifo_fd, buffer, strlen(buffer) + 1); // 写入字符串长度 + 1（包括'\0'）
        if (ret == -1) {
            perror("write failed");
            close(fifo_fd);
            return -1;
        }

        // 关闭管道
        close(fifo_fd);

        // 等待子进程完成
        wait(NULL);
    } else if (child_pid == 0) {
        // 子进程：以读模式打开管道
        fifo_fd = open("./fifo2", O_RDONLY);
        if (fifo_fd == -1) {
            perror("open fifo failed");
            return -1;
        }

        // 从管道读取数据
        ret = read(fifo_fd, buffer1, sizeof(buffer1) - 1);
        if (ret == -1) {
            perror("read failed");
            close(fifo_fd);
            return -1;
        }

        // 确保字符串以空字符结尾
        buffer1[ret] = '\0';

        // 输出读取的数据
        printf("%s\n", buffer1);

        // 关闭管道
        close(fifo_fd);
    } else {
        perror("fork failed");
        return -1;
    }

    return 0;
}
````</code></pre>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.5398506863113426" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-08 09:23">2025-05-08 09:23</span>&nbsp;
<a href="https://www.cnblogs.com/lradian">LRadian</a>&nbsp;
阅读(<span id="post_view_count">12</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18865624);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18865624', targetLink: 'https://www.cnblogs.com/lradian/p/18865624', title: '有名管道练习' })">举报</a>
</div>
        