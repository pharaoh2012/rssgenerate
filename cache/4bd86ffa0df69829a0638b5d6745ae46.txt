
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/isyues/p/18782088" title="发布于 2025-03-19 22:47">
    <span role="heading" aria-level="2">maven为什么发生依赖冲突？怎么解决依赖冲突？</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="maven为什么发生依赖冲突怎么解决依赖冲突">maven为什么发生依赖冲突？怎么解决依赖冲突？</h2>
<p>我们在开发的时候，偶尔会遇到依赖冲突的时候，一般都是NoClassDefFoundError、ClassNotFoundException、NoSuchMethodError。打开搜索框又发现有这个类，明明就是引入进来了，就是找不到，让人头疼</p>
<h3 id="1-依赖冲突场景">1. 依赖冲突场景</h3>
<p>在maven中依赖管理，依赖是可以传播的<br>
假设：我有个A项目。第一步A项目引入B依赖，B依赖又会引入C依赖（版本1.1)，那么A项目就同时拥有了B、C依赖（版本1.1），第二步我再引入D依赖，D依赖引入C依赖（版本1.2）<br>
图解：</p>
<pre><code class="language-txt">第一步：A -&gt; B -&gt; C（1.1版本）
第二步：A -&gt; D -&gt; C  (1.2版本)
</code></pre>
<p>问题来了，maven会取哪个版本的C进行引入？</p>
<h3 id="2-当冲突时maven怎么样选择">2. 当冲突时maven怎么样选择</h3>
<p>针对依赖冲突场景提出的问题，答案是：1.1版本<br>
为什么是1.1 版本？因为maven有几条原则，按照原则优先级选择</p>
<h4 id="21-就近原则">2.1 就近原则</h4>
<p>哪个依赖离的近取哪个<br>
假设：我有个A项目。第一步A项目引入B依赖，B依赖又会引入C依赖（版本1.1）。第二步，在本项目pom中引入C依赖（版本1.2）<br>
图解：</p>
<pre><code class="language-txt">第一步：A -&gt; B -&gt; C（1.1版本）
第二步：A -&gt; C  (1.2版本)
</code></pre>
<p>那必须是1.2版本啊</p>
<h4 id="22-第一声明者原则">2.2 第一声明者原则</h4>
<p>通俗一点就是，就近原则如果相同判断不出来，谁先来谁选择谁<br>
假设：我有个A项目。第一步A项目引入B依赖，B依赖又会引入C依赖（版本1.1)，那么A项目就同时拥有了B、C依赖（版本1.1），第二步我再引入D依赖，D依赖引入C依赖（版本1.2）<br>
图解：</p>
<pre><code class="language-txt">第一步：A -&gt; B -&gt; C（1.1版本）
第二步：A -&gt; D -&gt; C  (1.2版本)
</code></pre>
<p>那必须是1.1版本啊</p>
<h3 id="3-怎么样解决冲突">3. 怎么样解决冲突？</h3>
<p>idea下载Maven Helper插件<br>
点击pom文件左下角<br>
<img src="https://img2024.cnblogs.com/blog/2467620/202503/2467620-20250319223428583-102856851.png" alt="image" loading="lazy"><br>
点击Conflicts选择冲突选项<br>
<img src="https://img2024.cnblogs.com/blog/2467620/202503/2467620-20250319223611662-1256725007.png" alt="image" loading="lazy"><br>
右键，点击Exclude排除<br>
<img src="https://img2024.cnblogs.com/blog/2467620/202503/2467620-20250319223720724-758570457.png" alt="image" loading="lazy"><br>
返回pom文件发现自动加了exclusions标签进行排除</p>
<pre><code>&lt;exclusions&gt;
       &lt;exclusion&gt;
           &lt;artifactId&gt;poi-ooxml-schemas&lt;/artifactId&gt;
           &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;
       &lt;/exclusion&gt;
&lt;/exclusions&gt;
</code></pre>
<p>一般来说取高版本的，因为高版本的一般都会兼容低版本</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="1.2323231703101851" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-19 22:47">2025-03-19 22:47</span>&nbsp;
<a href="https://www.cnblogs.com/isyues">isyues</a>&nbsp;
阅读(<span id="post_view_count">235</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18782088" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18782088);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18782088', targetLink: 'https://www.cnblogs.com/isyues/p/18782088', title: 'maven为什么发生依赖冲突？怎么解决依赖冲突？' })">举报</a>
</div>
        