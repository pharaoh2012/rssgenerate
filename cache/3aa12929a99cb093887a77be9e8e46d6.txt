
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/18931786" title="发布于 2025-06-16 21:02">
    <span role="heading" aria-level="2">C#/.NET/.NET Core技术前沿周刊 | 第 42 期（2025年6.9-6.15）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p><img src="https://img2024.cnblogs.com/blog/1336199/202506/1336199-20250616205925570-1793541770.png" alt="" loading="lazy"></p>
<h2 data-tool="mdnice编辑器"><span>前言</span></h2>
<p data-tool="mdnice编辑器"><span>C#/.NET/.NET Core技术前沿周刊，你的每周技术指南针！记录、追踪C#/.NET/.NET Core领域、生态的每周最新、最实用、最有价值的技术文章、社区动态、优质项目和学习资源等。让你时刻站在技术前沿，助力技术成长与视野拓宽。</span></p>
<blockquote>
<p><span>欢迎投稿、推荐或自荐优质文章、项目、学习资源等。</span></p>
</blockquote>
<ul class="list-paddingleft-1">
<li><strong>🏆技术前沿周刊Gitee开源地址：</strong><span>https://gitee.com/ysgdaydayup/DotNetGuide/blob/main/docs/DotNet/DotNetWeekly.md</span></li>
<li><strong>📰技术前沿周刊GitHub开源地址：</strong><span>https://github.com/YSGStudyHards/DotNetGuide/blob/main/docs/DotNet/DotNetWeekly.md</span></li>
</ul>
<h2 data-tool="mdnice编辑器"><span>Visual Studio 2022 中的 EF Core 反向工程和模型可视化扩展插件</span></h2>
<ul class="list-paddingleft-1">
<li><strong>文章简介：</strong><span>&nbsp;在 EF 6 及其之前的版本数据库优先模式（Database First）是可以在 Visual Studio 中通过可视化界面来操作完成的，但是到了 EF Core 之后就不再支持了（因为模型格式 EDMX (XML) 在 EF Core中未实现），今天大姚给大家分享一款在 EF Core 命令行工具的基础上构建的适用于 Visual Studio 2022 中的 EF Core 反向工程和模型可视化扩展插件：EF Core Power Tools。</span></li>
<li><strong>文章地址：</strong><span><a class="normal_text_link" href="https://mp.weixin.qq.com/s?__biz=MzIxMTUzNzM5Ng==&amp;mid=2247514422&amp;idx=1&amp;sn=32135c7a1bb6279c52e32d6d0c3933dc&amp;scene=21#wechat_redirect" target="_blank" data-linktype="2" rel="noopener nofollow">https://mp.weixin.qq.com/s/nnJndy3C1VwZz5Yu1yPd_A</a></span></li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/1336199/202506/1336199-20250616205940434-380163814.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/1336199/202506/1336199-20250616205947210-2017860938.png" alt="" loading="lazy"></p>
<h2 data-tool="mdnice编辑器"><span>不写一行代码 .NET 使用 FluentCMS 快速构建现代化内容管理系统（CMS）</span></h2>
<ul class="list-paddingleft-1">
<li><strong>文章简介：</strong><span>&nbsp;FluentCMS 是一个开源（MIT license）、现代化的内容管理系统（CMS），它基于强大的 ASP.NET Core + Blazor技术构建。FluentCMS助力内容写作者更高效地创作内容。其设计快速、灵活且用户友好，不仅具备传统基于内容的CMS功能，还擅长作为无头CMS（headless CMS），使其非常适合各种数字应用场景。</span></li>
<li><strong>文章地址：</strong><span><a class="normal_text_link" href="https://mp.weixin.qq.com/s?__biz=MzIxMTUzNzM5Ng==&amp;mid=2247514252&amp;idx=1&amp;sn=7329476729b74e646ddf25474b58c286&amp;scene=21#wechat_redirect" target="_blank" data-linktype="2" rel="noopener nofollow">https://mp.weixin.qq.com/s/nUa36FU5PUirtYx_k3d-bw</a></span></li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/1336199/202506/1336199-20250616210008312-1080892631.png" alt="" loading="lazy"></p>
<h2 data-tool="mdnice编辑器"><span>一个开源免费、功能丰富的 WPF 自定义控件资源库</span></h2>
<ul class="list-paddingleft-1">
<li><strong>文章简介：</strong><span>&nbsp;今天大姚给大家分享一个开源免费（MIT license）、功能丰富的 WPF 自定义控件资源库：WPF-ControlBase。</span></li>
<li><strong>文章地址：</strong><span><a class="normal_text_link" href="https://mp.weixin.qq.com/s?__biz=MzIxMTUzNzM5Ng==&amp;mid=2247514270&amp;idx=1&amp;sn=3f79af0b5f1837dee29a35b06552d1b8&amp;scene=21#wechat_redirect" target="_blank" data-linktype="2" rel="noopener nofollow">https://mp.weixin.qq.com/s/-KqyJ0X7xxtKFuEt8pUmlQ</a></span></li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/1336199/202506/1336199-20250616210021962-1583713528.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/1336199/202506/1336199-20250616210033153-58550727.png" alt="" loading="lazy"></p>
<h2 data-tool="mdnice编辑器"><span>推荐 3 种 .NET Windows 桌面应用程序自动更新解决方案</span></h2>
<ul class="list-paddingleft-1">
<li><strong>文章简介：</strong><span>&nbsp;在快速迭代的软件开发环境中，为 .NET Windows 桌面应用程序实现自动更新功能已成为提升用户体验和产品维护效率的关键功能。自动更新机制能够确保用户始终使用最新版本的应用，及时获取安全补丁、版本性能优化和新版本功能，并且能够显著降低技术支持成本。今天大姚给大家分享 3 种 .NET Windows 桌面应用程序自动更新解决方案，希望可以帮助到有需要的小伙伴。</span></li>
<li><strong>文章地址：</strong><span><a class="normal_text_link" href="https://mp.weixin.qq.com/s?__biz=MzIxMTUzNzM5Ng==&amp;mid=2247514286&amp;idx=1&amp;sn=ead2d088c97524d10d986c8f2a147719&amp;scene=21#wechat_redirect" target="_blank" data-linktype="2" rel="noopener nofollow">https://mp.weixin.qq.com/s/2M-2I2qddvCitkrla4WmLA</a></span></li>
</ul>
<h2 data-tool="mdnice编辑器"><span>一个基于 .NET 8 + Ant Design Blazor 开发的简洁现代后台管理框架</span></h2>
<ul class="list-paddingleft-1">
<li><strong>文章简介：</strong><span>&nbsp;Caviar 是一个基于 .NET 8 + Ant Design Blazor 开发的、基于 Apache-2.0 协议开源的后台管理框架，使用简洁架构，简单大方现代，包含了后台管理基础功能，在开发上为了方便，封装了很多Ant Design组件，包含了自动列表、高级搜索、自动化菜单、布局等。此外，该框架在代码生成上实现了100%的代码隔离，确保修改和重新生成代码不会对开发者造成任何影响，同时保持了开发的灵活性。</span></li>
<li><strong>文章地址：</strong><span><a class="normal_text_link" href="https://mp.weixin.qq.com/s?__biz=MzIxMTUzNzM5Ng==&amp;mid=2247514341&amp;idx=1&amp;sn=1f9af6f5c00ba822a4e46735df706273&amp;scene=21#wechat_redirect" target="_blank" data-linktype="2" rel="noopener nofollow">https://mp.weixin.qq.com/s/qhyhfN4u7RBfzHUdQFSpoQ</a></span></li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/1336199/202506/1336199-20250616210052116-726865411.png" alt="" loading="lazy"></p>
<h2 data-tool="mdnice编辑器"><span>一个基于 .NET 开源、模块化 AI 图像生成 Web 用户界面</span></h2>
<ul class="list-paddingleft-1">
<li><strong>文章简介：</strong><span>&nbsp;SwarmUI （原 StableSwarmUI）是一个基于 .NET 开源（MIT license）、模块化 AI 图像生成 Web 用户界面，注重让强大工具易于访问、高性能及可扩展性。支持 AI 图像模型（如Stable Diffusion、Flux等），以及AI视频模型（如LTX-V、Hunyuan Video、Cosmos、Wan等）。</span></li>
<li><strong>文章地址：</strong><span><a class="normal_text_link" href="https://mp.weixin.qq.com/s?__biz=MzIxMTUzNzM5Ng==&amp;mid=2247514302&amp;idx=1&amp;sn=14f051ea2cda1415eba890741571f32f&amp;scene=21#wechat_redirect" target="_blank" data-linktype="2" rel="noopener nofollow">https://mp.weixin.qq.com/s/NCOciHGS5yU7xui3tmT6YA</a></span></li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/1336199/202506/1336199-20250616210104950-1651165571.png" alt="" loading="lazy"></p>
<h2 data-tool="mdnice编辑器"><span>C#实现欧姆龙 HostLink 通讯协议库</span></h2>
<ul class="list-paddingleft-1">
<li><strong>文章简介：</strong><span>&nbsp;C#实现欧姆龙 HostLink 通讯协议库。</span></li>
<li><strong>文章地址：</strong><span>&nbsp;https://www.cnblogs.com/dragonet-Z/p/18928900</span></li>
</ul>
<h2 data-tool="mdnice编辑器"><span>C# WinForms 实现打印监听组件</span></h2>
<ul class="list-paddingleft-1">
<li><strong>文章简介：</strong><span>&nbsp;打印监听组件是一款集成于 Windows 桌面环境的打印任务管理与监控工具，适用于企业级应用场景。它不仅支持多打印机任务的实时监控，还能通过 WebSocket 与外部系统集成，实现自动化打印、任务状态反馈、远程控制等功能。</span></li>
<li><strong>文章地址：</strong><span>&nbsp;https://www.cnblogs.com/shenchuanchao/p/18928583</span></li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/1336199/202506/1336199-20250616210118345-281140992.png" alt="" loading="lazy"></p>
<h2 data-tool="mdnice编辑器"><span>C# 中委托和事件的深度剖析与应用场景</span></h2>
<ul class="list-paddingleft-1">
<li><strong>文章简介：</strong><span>&nbsp;在 C# 编程中，委托和事件是两个非常重要的概念，它们为程序的设计和开发提供了强大的功能和灵活性。委托可以看作是一种类型安全的函数指针，它允许将方法作为参数传递给其他方法，从而实现回调机制。而事件则是基于委托的一种特殊机制，用于实现对象之间的消息传递和事件驱动编程。理解委托和事件的原理和应用场景，对于编写高效、可维护的 C# 代码至关重要。</span></li>
<li><strong>文章地址：</strong><span>&nbsp;https://www.cnblogs.com/powertoolsteam/p/18926505</span></li>
</ul>
<h2 data-tool="mdnice编辑器"><span>C# 锁机制全景与高效实践：从 Monitor 到 .NET 9 全新 Lock</span></h2>
<ul class="list-paddingleft-1">
<li><strong>文章简介：</strong><span>&nbsp;C# 锁机制全景与高效实践：从 Monitor 到 .NET 9 全新 Lock。</span></li>
<li><strong>文章地址：</strong><span>&nbsp;https://www.cnblogs.com/code-daily/p/18924622</span></li>
</ul>
<h2 data-tool="mdnice编辑器"><span>C# 与低代码平台的融合：以活字格为例的 Web API 开发实践</span></h2>
<ul class="list-paddingleft-1">
<li><strong>文章简介：</strong><span>&nbsp;在当今软件开发领域，低代码平台凭借其高效、便捷的特性逐渐成为开发的主流趋势。而 C# 作为一种功能强大的编程语言，在服务端开发中有着广泛的应用。将 C# 与低代码平台相结合，能够充分发挥两者的优势，快速开发出高质量的应用程序。本文将以葡萄城公司的企业级低代码平台 —— 活字格为例，详细介绍如何使用 C# 进行接口扩展，创建服务端 Web API。</span></li>
<li><strong>文章地址：</strong><span>&nbsp;https://www.cnblogs.com/powertoolsteam/p/18924171</span></li>
</ul>
<h2 data-tool="mdnice编辑器"><span>微软 AI Agent三剑客：AutoGen、Semantic Kernel与MEAI的协同演进</span></h2>
<ul class="list-paddingleft-1">
<li><strong>文章简介：</strong><span>&nbsp;微软正在积极构建其人工智能（AI）开发者生态系统，旨在为开发者提供从实验研究到生产部署的全方位支持。在这一宏大蓝图中，AutoGen、Semantic Kernel (SK) 和 Microsoft.Extensions.AI (MEAI) 是三个关键的框架组件，各自扮演着独特且相互关联的角色。</span></li>
<li><strong>文章地址：</strong><span>&nbsp;https://www.cnblogs.com/sheng-jie/p/18924852</span></li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/1336199/202506/1336199-20250616210136409-916786827.png" alt="" loading="lazy"></p>
<h2 data-tool="mdnice编辑器"><span>WinForm中实现Adobe PDF Reader实现旋转PDF功能</span></h2>
<ul class="list-paddingleft-1">
<li><strong>文章简介：</strong><span>&nbsp;WinForm中实现Adobe PDF Reader实现旋转PDF功能。</span></li>
<li><strong>文章地址：</strong><span>&nbsp;https://www.cnblogs.com/wofeiliangren/p/18923487</span></li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/1336199/202506/1336199-20250616210149484-376485999.png" alt="" loading="lazy"></p>
<h2 data-tool="mdnice编辑器"><span>C# Visual Studio工具使用实践</span></h2>
<ul class="list-paddingleft-1">
<li><strong>文章简介：</strong><span>&nbsp;C# Visual Studio工具使用实践。</span></li>
<li><strong>文章地址：</strong><span>&nbsp;https://www.cnblogs.com/anding/p/18919985</span></li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/1336199/202506/1336199-20250616210203736-277726061.png" alt="" loading="lazy"></p>
</div>
<div id="MySignature" role="contentinfo">
    <blockquote>
<p style="font-family:YouYuan;font-size: 16px;margin: 0 auto 0.01em auto;"><span style="font-size: 17px; ">作者名称：</span><a href="https://www.cnblogs.com/Can-daydayup/" target="_blank">追逐时光者</a></p>
<p style="font-family:YouYuan;font-size: 16px;margin: 0 auto 0.01em auto;"><span style="font-size: 17px; ">作者简介：</span>一个热爱编程、善于分享、喜欢学习、探索、尝试新事物和新技术的全栈软件工程师。</p>
<p style="font-family:YouYuan;font-size: 16px;margin: 0 auto 0.01em auto;">
本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文链接，否则保留追究法律责任的权利。如果该篇文章对您有帮助的话，可以点一下右下角的<a onclick="votePost(cb_entryId,'Digg')" href="javascript:void(0)" style="color:red;">【♥推荐♥】</a>，希望能够持续的为大家带来好的技术文章，文中可能存在描述不正确的地方，欢迎指正或补充，不胜感激。
</p>
</blockquote>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-06-16 21:02">2025-06-16 21:02</span>&nbsp;
<a href="https://www.cnblogs.com/Can-daydayup">追逐时光者</a>&nbsp;
阅读(<span id="post_view_count">149</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18931786);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18931786', targetLink: 'https://www.cnblogs.com/Can-daydayup/p/18931786', title: 'C#/.NET/.NET Core技术前沿周刊 | 第 42 期（2025年6.9-6.15）' })">举报</a>
</div>
        