
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chanvin/p/18639450/github-workflow-action-caveats" title="发布于 2024-12-29 19:32">
    <span role="heading" aria-level="2">GitHub Workflow 和 Action 的一些注意事项</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>GitHub 的 workflow 和 action 存在着一些注意事项，包括 workflow 的 yaml 配置，action 的脚本编写，以及对应的 branch 的保护设置，总结如下，以供参考</p>

<h2 id="workflow">Workflow</h2>
<h3 id="onissuestypes">on.issues.types</h3>
<p>如果需要判断 label，不需要指定 <code>opened</code>，只需要指定 <code>labeled</code>，因为即使 label 是新建时设置的，也会触发 <code>labeled</code></p>
<h3 id="permissions">permissions</h3>
<p>如果需要 checkout 当前 repo，需要添加 <code>contents: write</code>，否则会有权限问题</p>
<h3 id="jobscheckstepsenv">jobs.check.steps.env</h3>
<p>如果需要使用 GitHub API，需要添加 <code>GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}</code>，作为环境变量</p>
<h2 id="action">Action</h2>
<h3 id="list-repository-issues">List repository issues</h3>
<p><a href="https://docs.github.com/en/rest/issues/issues?apiVersion=2022-11-28#list-repository-issues" target="_blank" rel="noopener nofollow">API</a> 不仅返回 issues，也会返回 prs，默认 30 条每页，可以指定 <code>labels</code> 来过滤</p>
<h3 id="list-pull-requests">List pull requests</h3>
<p><a href="https://docs.github.com/en/rest/pulls/pulls?apiVersion=2022-11-28#list-pull-requests" target="_blank" rel="noopener nofollow">API</a> 返回所有 pull requests，默认 30 条每页，可以通过 <code>per_page</code> 和 <code>page</code> 参数做分页处理，例如：</p>
<pre><code>const prs = [];
for (let page = 1; ; page++) {
  const { data } = await octokit.rest.pulls.list({
    ...context.repo,
    base: `refs/heads/main`,
    state: 'open',
    per_page: PER_PAGE,
    page,
  });
  prs.push(...data);
  if (data.length &lt; PER_PAGE) {
    break;
  }
}
</code></pre>
<h3 id="get-commit-status">Get commit status</h3>
<p><a href="https://docs.github.com/en/rest/commits/statuses?apiVersion=2022-11-28#get-the-combined-status-for-a-specific-reference" target="_blank" rel="noopener nofollow">API</a> 列出所有 contexts 对应的 state，可以过滤当前的 context</p>
<h3 id="create-commit-status">Create commit status</h3>
<p><a href="https://docs.github.com/en/rest/commits/statuses?apiVersion=2022-11-28#create-a-commit-status" target="_blank" rel="noopener nofollow">API</a> 用于创建 commit 的 status，可指定 <code>state</code>，<code>context</code> 和 <code>description</code>（作为运行结果显示）</p>
<h2 id="setting">Setting</h2>
<h3 id="require-status-checks">Require status checks</h3>
<p>需要在 Branch protection rule 中的 Protect matching branches 下，勾选 Require status checks to pass before merging</p>
<h3 id="add-required-checks">Add required checks</h3>
<p>需要将当前的 GitHub action 添加到 Status checks that are required</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.01816720759722222" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2024-12-29 19:58">2024-12-29 19:32</span>&nbsp;
<a href="https://www.cnblogs.com/chanvin">chanvin</a>&nbsp;
阅读(<span id="post_view_count">15</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18639450" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18639450);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18639450', targetLink: 'https://www.cnblogs.com/chanvin/p/18639450/github-workflow-action-caveats', title: 'GitHub Workflow 和 Action 的一些注意事项' })">举报</a>
</div>
        