
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Vsonic12138/p/18996565" title="发布于 2025-07-21 20:49">
    <span role="heading" aria-level="2">HuggingFace部署Qdrant在Roo Code使用</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>最近 <code>RooCode</code> 更新了代码库索引的 <code>codebase</code> 功能，这个功能通过将整个代码库向量化，实现了更高精度的上下文理解和代码问答。不过需要qdrant来作为向量数据库，qdrant通过本地docker部署是很方便的， <strong>既然有免费的云端服务，那不利用起来就太可惜了！</strong></p>
<hr>
<h1 id="一登录hf">一、登录HF</h1>
<ul>
<li>
<ol>
<li>打开 Hugging Face 官网：<a href="https://huggingface.co/" target="_blank" rel="noopener nofollow">https://huggingface.co/</a></li>
</ol>
</li>
<li>
<ol start="2">
<li>如果有账户，直接登录。如果没有，花一分钟注册一个。</li>
</ol>
</li>
</ul>
<hr>
<h1 id="二在hf账号的space页面下创建新的docker容器空间">二、在HF账号的Space页面下创建新的docker容器空间</h1>
<p>登录后，我们开始创建用于托管 Qdrant 的容器空间。</p>
<ul>
<li>
<ol>
<li>点击页面右上角的头像，在下拉菜单中选择 <strong>"New Space"</strong>。</li>
</ol>
</li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/3089600/202507/3089600-20250721204646757-1693820753.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/3089600/202507/3089600-20250721204652852-171444410.png" alt="image" loading="lazy"></p>
<ul>
<li>
<ol start="2">
<li>在创建页面，你需要填写以下信息：</li>
</ol>
<ul>
<li><strong>Owner</strong>：选择你的用户名。</li>
<li><strong>Space name</strong>：给你的项目起一个名字，比如 <code>my-qdrant-db</code> 或者 <code>RooCode-Qdrant</code>。这个名字会成为你服务URL的一部分。</li>
<li><strong>License</strong>：选择一个开源协议，例如 <code>mit</code> 或 <code>apache-2.0</code>。</li>
<li><strong>Select the Space SDK</strong>：<strong>这是最关键的一步！</strong> 请务必选择 <strong>Docker</strong>。</li>
<li><strong>Hardware</strong>：选择默认的 <strong>CPU basic</strong> 即可。它提供的 <strong>16GB RAM</strong> 对于 Qdrant 来说绰绰有余，而且是<strong>完全免费</strong>的。</li>
<li><strong>Visibility</strong>：保持 <strong>Public</strong>。</li>
</ul>
</li>
<li>
<ol start="3">
<li>点击 <strong>"Create Space"</strong> 按钮。HF 会为你初始化一个 Git 仓库，并引导你进入下一步。</li>
</ol>
</li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/3089600/202507/3089600-20250721204708016-72304207.png" alt="image" loading="lazy"></p>
<hr>
<h1 id="三配置docker文件">三、配置docker文件</h1>
<p>创建好 Space 后，我们需要告诉 HF 如何运行我们的 Qdrant 服务。这需要通过两个核心文件来完成：<code>Dockerfile</code> 和 <code>README.md</code>。</p>
<p>你可以通过 <code>git clone</code> 到本地修改后 <code>git push</code> 上去，但更简单的方式是直接在网页上操作。</p>
<ol>
<li>进入你的 Space 页面，点击 <strong>"Files and versions"</strong> 标签页。</li>
<li>点击 <strong>"Add file"</strong> -&gt; <strong>"Create a new file"</strong>。</li>
</ol>
<h4 id="1-创建-dockerfile"><strong>1. 创建 <code>Dockerfile</code></strong></h4>
<p>这个文件定义了如何构建我们的 Docker 镜像。</p>
<ul>
<li><strong>文件名</strong>：<code>Dockerfile</code> (没有后缀)</li>
<li><strong>文件内容</strong>：</li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/3089600/202507/3089600-20250721204720423-1517410314.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/3089600/202507/3089600-20250721204725371-1805530000.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/3089600/202507/3089600-20250721204730603-1995612989.png" alt="image" loading="lazy"></p>
<p>文件内容：</p>
<pre><code class="language-DockerFile"># 1. 使用官方 Qdrant 镜像作为基础
FROM qdrant/qdrant:latest

# 2. 切换到 root 用户，以便在构建过程中拥有最高权限
USER root

# 3. 【关键改动】
#    - 创建 /qdrant/storage 和 /qdrant/snapshots 目录 (使用 -p 确保父目录存在)
#    - 将整个 /qdrant 目录（及其所有内容）的所有权递归地赋予用户 1000
#    - 这样，无论是 storage、snapshots 还是未来可能需要的其他子目录，qdrant 用户都有权操作。
RUN mkdir -p /qdrant/storage /qdrant/snapshots &amp;&amp; \
    chown -R 1000:1000 /qdrant

# 4. 为了安全，将运行时的用户切换回非 root 的 qdrant 用户 (ID 1000)
USER 1000

# 容器启动时，将以拥有 /qdrant 目录完全权限的 qdrant 用户身份运行

</code></pre>
<h4 id="2-创建或修改-readmemd"><strong>2. 创建或修改 <code>README.md</code></strong></h4>
<p>这个文件除了展示介绍信息外，还有一个特殊作用：<strong>配置 Space 的元数据，比如应用端口</strong>。</p>
<ul>
<li><strong>文件名</strong>：<code>README.md</code></li>
<li><strong>文件内容</strong>：在文件<strong>最上方</strong>添加以下 YAML 配置块：</li>
</ul>
<pre><code class="language-readme">title: Qdrant
emoji: 🏆
colorFrom: purple
colorTo: purple
sdk: docker
app_port: 6333
pinned: false
short_description: Qdrant_On_HuggingFace
</code></pre>
<p>完成这两个文件的创建和提交后，Hugging Face 会自动开始构建你的服务。</p>
<hr>
<h1 id="四配置qdrant的api-key">四、配置Qdrant的API-KEY</h1>
<p>进入Space的Setting选项，往下滑动找到 <code>Variables and secrets</code></p>
<p><img src="https://img2024.cnblogs.com/blog/3089600/202507/3089600-20250721204744808-1009260882.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/3089600/202507/3089600-20250721204750001-2137229441.png" alt="image" loading="lazy"></p>
<p>填写入Qdrant-API-KEY的标准环境变量 <code>QDRANT__SERVICE__API_KEY</code></p>
<p><code>Value</code>就是密码,填写你自己的即可:</p>
<p><img alt="image|672x460" loading="lazy"></p>
<hr>
<h1 id="五等待容器启动">五、等待容器启动</h1>
<p>提交文件后，你可以切换到 <strong>"Logs"</strong> 标签页查看实时构建日志。</p>
<p>你会看到系统依次经历 <code>Building</code> -&gt; <code>Running (Provisioning)</code> 的状态。首次构建可能需要几分钟时间，请耐心等待。</p>
<p>当日志滚动停止，并且页面顶部的状态标志变为绿色的 <strong>"Running"</strong> 时，恭喜你，你的云端 Qdrant 数据库已经成功启动并在线运行了！</p>
<hr>
<h1 id="六roocode配置">六、RooCode配置</h1>
<p>打开 <code>RooCode</code> ，配置 <code>Qdrant URL</code> 和之前的 <code>KEY</code> 即可：</p>
<p><img src="https://img2024.cnblogs.com/blog/3089600/202507/3089600-20250721204839211-464885921.png" alt="image" loading="lazy"></p>
<table>
<thead>
<tr>
<th>配置项</th>
<th>应填写的值</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Qdrant URL</strong></td>
<td><code>https://&lt;你的HF用户名&gt;-&lt;你的Space名&gt;.hf.space</code></td>
<td>这是 HF 分配给你的公开访问地址。<strong>注意是 <code>https</code> 且不需要加端口号</strong>。</td>
</tr>
<tr>
<td><strong>Qdrant API 密钥</strong></td>
<td><strong>留空</strong></td>
<td>我们的部署方式未设置 API 密钥，因此数据库是公开访问的。</td>
</tr>
</tbody>
</table>
<p><strong>举个例子</strong>：如果我的 HF 用户名是 <code>BigYellow12138</code>，Space 名是 <code>my-qdrant-db</code>，那么我应该填写的 URL就是：<code>https://bigyellow12138-my-qdrant-db.hf.space</code></p>
<p>配置完成后，保存设置。RooCode 现在应该可以成功连接到你的云端 Qdrant 数据库了。</p>
<hr>
<h1 id="七enjoy-yourself">七、Enjoy yourself</h1>
<p>OK了！直接尝试 <code>RooCode</code> 的 <code>Codebase</code> 功能吧！</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-21 20:49">2025-07-21 20:49</span>&nbsp;
<a href="https://www.cnblogs.com/Vsonic12138">笑眯眯办大事</a>&nbsp;
阅读(<span id="post_view_count">47</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18996565);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18996565', targetLink: 'https://www.cnblogs.com/Vsonic12138/p/18996565', title: 'HuggingFace部署Qdrant在Roo Code使用' })">举报</a>
</div>
        