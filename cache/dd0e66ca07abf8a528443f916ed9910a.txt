
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/youlanjihua/p/18907716" title="发布于 2025-06-02 22:29">
    <span role="heading" aria-level="2">详解鸿蒙仓颉开发语言中的计时器</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p data-id="p124945a-j9jWVTux">今天又到了大家喜闻乐见的科普环节，也可以说是踩坑环节，哈哈哈。今天聊一聊仓颉开发语言中的计时器，这部分可老有意思了。</p>
<p data-id="p124945a-p1vemF5J">为什么这么说呢，因为关于仓颉的计时器你几乎搜不到任何的文档，也没有相关的代码提示，可以说是一写一个不吱声。</p>
<p data-id="p124945a-O3LE4pnS">但是它还是被幽蓝君发现了蛛丝马迹，今天就把它分享给大家。</p>
<p data-id="p124945a-qcmIaBBt">仓颉的计时器藏在std.sync包里，名字叫Timer，但是使用时只导入Timer包还不够，我们需要导入这几个模块：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>import std.time.*
import std.sync.Timer
import std.sync.CatchupStyle</code></pre>
</div>
<p data-id="p124945a-mVcqyVvi">计时器的写法也是别出心裁，它有几种模式，下面为大家一一介绍</p>
<div>
<pre class="language-plain highlighter-hljs"><code>Timer.after(Duration.minute, { =&gt; 
    AppLog.info('这是after计时器'); 
    return Duration.second
    })</code></pre>
</div>
<p data-id="p124945a-gH06Fy3t">这行代码的意思是，计时器在一分钟以后执行，然后每分钟执行一次App.info打印。这个模式比较奇怪，它的执行间隔在执行方法中返回。</p>
<p data-id="p124945a-CJdFWPy6">另一个比较奇怪的地方不知道大家有没有发现，计时器中的延迟时间和执行间隔这两个时间参数使用的是Duration类型的枚举，就是说只能使用它设定好的几个值，目前给出的时间值有Zero、second、minute、hour等，可以看到都是时间整数，你如果想要两秒执行一次,或者是二分之一秒执行一次大概是不行的。</p>
<p data-id="pa028eb2-5RbirdOX"><img src="https://harmonyos.oss-cn-beijing.aliyuncs.com/images/202506/654deac86146323ab075460ae179abcd63ffac.png" data-type="block"></p>
<div>
<pre class="language-plain highlighter-hljs"><code>Timer.once(Duration.minute,{=&gt; 
  AppLog.info('这是once计时器');
  })</code></pre>
</div>
<p data-id="p124945a-GcFOKYL2">这种模式大家应该一眼就能看出来，这是只执行一次的计时器，延迟时间是一分钟后。</p>
<div>
<pre class="language-plain highlighter-hljs"><code>Timer.repeat(Duration.Zero, Duration.second, {=&gt; 
  AppLog.info('这是repeat计时器'); 
  }, style: CatchupStyle.Skip)</code></pre>
</div>
<p data-id="p124945a-r45axdWo">repeat是重复性执行的计时器，Duration.Zero是延迟执行的时间，Duration.second是执行的间隔，这里出现了新的参数style，它的名字叫追平策略，官方给出的解释是：当 Task 执行时间过长时，后续任务执行时间点可能发生延迟，不同的追平策略适用于不同的场景。</p>
<div>
<pre class="language-plain highlighter-hljs"><code>Timer.repeatDuring(period: Duration, delay: Duration, interval: Duration, task: () -&gt; Unit, style: CatchupStyle)</code></pre>
</div>
<p data-id="p124945a-Ie4l8Ivq">这个计时器和上面的repeat类似，它多了一个参数period，意思是重复周期的最大持续时间。类似的还有repeatTimes，它指定了任务的最大执行次数：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>Timer.repeatTimes(count: Int64, delay: Duration, interval: Duration, task: () -&gt; Unit, style: CatchupStyle)</code></pre>
</div>
<p data-id="p124945a-Qnh6ZyDB">以上就是关于仓颉开发语言中计时器的详细内容，感谢阅读，再次祝大家假期愉快。#HarmonyOS语言##仓颉##购物#</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.5315498765613426" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-06-02 22:29">2025-06-02 22:29</span>&nbsp;
<a href="https://www.cnblogs.com/youlanjihua">幽蓝计划</a>&nbsp;
阅读(<span id="post_view_count">86</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18907716);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18907716', targetLink: 'https://www.cnblogs.com/youlanjihua/p/18907716', title: '详解鸿蒙仓颉开发语言中的计时器' })">举报</a>
</div>
        