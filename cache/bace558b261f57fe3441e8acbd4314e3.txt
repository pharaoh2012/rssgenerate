<!----> <meta itemprop="headline" content="做个大屏既要不留白又要不变形还要没滚动条，我直接怒斥领导，大屏适配就这四种模式"> <meta itemprop="keywords" content="前端,JavaScript"> <meta itemprop="datePublished" content="2025-06-08T06:29:58.000Z"> <meta itemprop="image" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-128.png~tplv-t2oaga2asx-image.image"> <div itemprop="author" itemscope="itemscope" itemtype="http://schema.org/Person"><meta itemprop="name" content="初辰ge"> <meta itemprop="url" content="https://juejin.cn/user/1961991576240190"></div> <div itemprop="publisher" itemscope="itemscope" itemtype="http://schema.org/Organization"><meta itemprop="name" content="掘金"> <div itemprop="logo" itemscope="itemscope" itemtype="https://schema.org/ImageObject"><meta itemprop="url" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-white-180.png~tplv-t2oaga2asx-image.image"> <meta itemprop="width" content="180"> <meta itemprop="height" content="180"></div></div> <h1 class="article-title" data-v-61fb5e44="">
            做个大屏既要不留白又要不变形还要没滚动条，我直接怒斥领导，大屏适配就这四种模式
            <!----> <!----></h1> <div class="author-info-block block-hidden" data-v-61fb5e44=""><div class="author-info-box" data-v-61fb5e44=""><div class="author-name" data-v-61fb5e44=""><a href="/user/1961991576240190/posts" target="_blank" rel="" class="jj-link username username ellipsis" data-v-65b50b51="" data-v-292f6e48="" data-v-61fb5e44=""><span class="name" style="max-width:160px;" data-v-65b50b51="" data-v-292f6e48="">
    初辰ge
  </span> <!----> <!----> <!----> </a></div> <div class="meta-box" data-v-61fb5e44=""><time datetime="2025-06-08T06:29:58.000Z" title="Sun Jun 08 2025 06:29:58 GMT+0000 (Coordinated Universal Time)" class="time" data-v-61fb5e44="">
                    2025-06-08
                  </time> <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="read-icon" data-v-61fb5e44=""><path d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor" data-v-61fb5e44=""></path><circle cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor" data-v-61fb5e44=""></circle></svg> <span class="views-count" data-v-61fb5e44="">
                    11,107
                  </span> <span class="read-time" data-v-61fb5e44=""><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" data-v-61fb5e44=""><rect width="16" height="16" fill="none" data-v-61fb5e44=""></rect><circle cx="8" cy="8" r="5.65625" stroke="#8A919F" data-v-61fb5e44=""></circle><path d="M7.69141 5.18652V8.30924H10.8141" stroke="#8A919F" stroke-linecap="round" stroke-linejoin="round" data-v-61fb5e44=""></path></svg>
                    阅读4分钟
                  </span> <!----></div></div> <div style="flex:1;" data-v-61fb5e44=""></div> <!----> <!----></div> <!----> <!----> <!----> <!----> <div id="article-root" itemprop="articleBody" class="main" data-v-61fb5e44=""><div class="article-viewer markdown-body result"><p>在前端开发中，大屏适配一直是个让人头疼的问题。领导总是要求大屏既要不留白，又要不变形，还要没有滚动条。这看似简单的要求，实际却压根不可能。今天，我们就来聊聊大屏适配的四种常见模式，以及如何根据实际需求选择合适的方案。</p>
<h2 data-id="heading-0">一、大屏适配的困境</h2>
<p>在大屏项目中，适配问题几乎是每个开发者都会遇到的挑战。屏幕尺寸的多样性、设计稿与实际屏幕的比例差异，都使得适配变得复杂。而领导的“既要...又要...还要...”的要求，更是让开发者们感到无奈。不过，我们可以通过合理选择适配模式来尽量满足这些需求。</p>
<h2 data-id="heading-1">二、四种适配模式</h2>
<p>在大屏适配中，常见的适配模式有以下四种：</p>
<p>（以下截图中模拟视口<code>1200px*500px</code>和<code>800px*600px</code>，设计稿为<code>1920px*1080px</code>）</p>
<h3 data-id="heading-2">1. 拉伸填充（fill）</h3>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/cd2fd970c1e94de1a93c0c1ad8efcbb2~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5Yid6L6wZ2U=:q75.awebp?rk3s=f64ab15b&amp;x-expires=1753952317&amp;x-signature=k7412qDzKxXWpjLOjUiKXKpsyzM%3D" alt="image.png" loading="lazy">
<img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/ef7f155b3fc84ba3937b9b90cfedd283~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5Yid6L6wZ2U=:q75.awebp?rk3s=f64ab15b&amp;x-expires=1753952317&amp;x-signature=uQ5Ur2KJVhVMCj%2B%2Bje1W7ZnB62g%3D" alt="image.png" loading="lazy"></p>
<ul>
<li><strong>特点</strong>：内容会被拉伸变形，以完全填充视口框。这种方式可以确保视口内没有空白区域，但可能会导致内容变形。</li>
<li><strong>适用场景</strong>：适用于对内容变形不敏感的场景，例如全屏背景图。</li>
</ul>
<h3 data-id="heading-3">2. 保持比例（contain）</h3>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/7f8ca99650944c4ba53cfb4282e7e1a6~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5Yid6L6wZ2U=:q75.awebp?rk3s=f64ab15b&amp;x-expires=1753952317&amp;x-signature=NB%2BvMySyXqbgHzah2F%2BY3%2FVVf8Y%3D" alt="image.png" loading="lazy">
<img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/da8d66c981874cd5a2ddc39523430893~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5Yid6L6wZ2U=:q75.awebp?rk3s=f64ab15b&amp;x-expires=1753952317&amp;x-signature=i2kr7AkGUJ3MdYlFf%2BiqORnZ%2FDY%3D" alt="image.png" loading="lazy"></p>
<ul>
<li><strong>特点</strong>：内容保持原始比例，不会被拉伸变形。如果内容的宽高比与视口不一致，会在视口内出现空白区域（黑边）。这种方式可以确保内容不变形，但可能会留白。</li>
<li><strong>适用场景</strong>：适用于需要保持内容原始比例的场景，例如视频或图片展示。</li>
</ul>
<h3 data-id="heading-4">3. 滚动显示（scroll）</h3>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/cc1f9b94947746dc89c5b22b971be2d6~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5Yid6L6wZ2U=:q75.awebp?rk3s=f64ab15b&amp;x-expires=1753952317&amp;x-signature=nr3et0yov7%2FzsrJRsXzVvXGLGcc%3D" alt="image.png" loading="lazy">
<img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/aa0ed04af08a449a86b2643c18c68e35~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5Yid6L6wZ2U=:q75.awebp?rk3s=f64ab15b&amp;x-expires=1753952317&amp;x-signature=a%2BrLPQfBjt%2FOKPsWLE6mB8vfji4%3D" alt="image.png" loading="lazy"></p>
<ul>
<li><strong>特点</strong>：内容不会被拉伸变形，当内容超出视口时会添加滚动条。这种方式可以确保内容完整显示，但用户需要滚动才能查看全部内容。</li>
<li><strong>适用场景</strong>：适用于内容较多且需要完整显示的场景，例如长列表或长文本。</li>
</ul>
<h3 data-id="heading-5">4. 隐藏超出（hidden）</h3>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/d8ed82defba240079575857c7fdb2022~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5Yid6L6wZ2U=:q75.awebp?rk3s=f64ab15b&amp;x-expires=1753952317&amp;x-signature=i49kNFkaJBcUP9KP5cSKOKOZXw4%3D" alt="image.png" loading="lazy">
<img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/d6322104edd04e90a72901918b5964a8~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5Yid6L6wZ2U=:q75.awebp?rk3s=f64ab15b&amp;x-expires=1753952317&amp;x-signature=9Z6oE%2FsRnkf3tDcx0kxg%2FS17X98%3D" alt="image.png" loading="lazy"></p>
<ul>
<li><strong>特点</strong>：内容不会被拉伸变形，当内容超出视口时会隐藏超出部分。这种方式可以避免滚动条的出现，但可能会隐藏部分内容。</li>
<li><strong>适用场景</strong>：适用于内容较多但不需要完整显示的场景，例如仪表盘。</li>
</ul>
<h2 data-id="heading-6">三、为什么不能同时满足所有要求？</h2>
<p>这四种适配模式各有优缺点，但它们在逻辑上是相互矛盾的。具体来说：</p>
<ul>
<li><strong>不留白</strong>：要求内容完全填充视口，没有任何空白区域。这通常需要拉伸或缩放内容以适应视口的宽高比。</li>
<li><strong>不变形</strong>：要求内容保持其原始宽高比，不被拉伸或压缩。这通常会导致内容无法完全填充视口，从而出现空白区域（黑边）。</li>
<li><strong>没滚动条</strong>：要求内容完全适应视口，不能超出视口范围。这通常需要隐藏超出部分或限制内容的大小。</li>
</ul>
<p>这三个要求在逻辑上是相互矛盾的：</p>
<ul>
<li>如果内容完全填充视口（不留白），则可能会变形。</li>
<li>如果内容保持原始比例（不变形），则可能会出现空白区域（留白）。</li>
<li>如果内容超出视口范围，则需要滚动条或隐藏超出部分。</li>
</ul>
<h2 data-id="heading-7">四、【fitview】插件快速实现大屏适配</h2>
<p><code>fitview</code> 是一个视口自适应的 JavaScript 插件，它支持多种适配模式，能够快速实现大屏自适应效果。</p>
<p>github地址：<a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fpbstar%2Ffitview" target="_blank" title="https://github.com/pbstar/fitview" ref="nofollow noopener noreferrer">github.com/pbstar/fitv…</a><br>
在线预览：<a href="https://link.juejin.cn?target=https%3A%2F%2Fpbstar.github.io%2Ffitview" target="_blank" title="https://pbstar.github.io/fitview" ref="nofollow noopener noreferrer">pbstar.github.io/fitview</a></p>
<p>以下是它的基本使用方法：</p>
<h3 data-id="heading-8">配置</h3>
<ul>
<li>el: 需要自适应的 DOM 元素</li>
<li>fit: 自适应模式，字符串，可选值为 fill、contain（默认值）、scroll、hidden</li>
<li>resize: 是否监听元素尺寸变化，布尔值，默认值 true</li>
</ul>
<h3 data-id="heading-9">安装引入</h3>
<h4 data-id="heading-10">npm 安装</h4>
<pre><code class="hljs">npm install fitview
</code></pre>
<h4 data-id="heading-11">esm 引入</h4>
<pre><code class="hljs language-javascript" lang="javascript"><span class="hljs-keyword">import</span> fitview <span class="hljs-keyword">from</span> <span class="hljs-string">"fitview"</span>;
</code></pre>
<h4 data-id="heading-12">cdn 引入</h4>
<pre><code class="hljs language-xml" lang="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://unpkg.com/fitview@[version]/lib/fitview.umd.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>
</code></pre>
<h3 data-id="heading-13">使用示例</h3>
<pre><code class="hljs language-css" lang="css">&lt;<span class="hljs-selector-tag">div</span> id="container"&gt;
  &lt;<span class="hljs-selector-tag">div</span> style="<span class="hljs-attribute">width</span>:<span class="hljs-number">1920px</span>;<span class="hljs-attribute">height</span>:<span class="hljs-number">1080px</span>;"&gt;&lt;/<span class="hljs-selector-tag">div</span>&gt;
&lt;/<span class="hljs-selector-tag">div</span>&gt;
</code></pre>

<pre><code class="hljs language-ini" lang="ini">const <span class="hljs-attr">container</span> = document.getElementById(<span class="hljs-string">"container"</span>)<span class="hljs-comment">;</span>
new fitview({
  el: container,
})<span class="hljs-comment">;</span>
</code></pre>
<h2 data-id="heading-14">五、总结</h2>
<p>大屏适配是一个复杂的问题，不同的项目有不同的需求。虽然不能同时满足“不留白”“不变形”和“没滚动条”这三个要求，但可以通过合理选择适配模式来尽量满足大部分需求。在实际开发中，我们需要根据项目的具体需求和用户体验来权衡，选择最合适的适配方案。</p>
<p>在选择适配方案时，<code>fitview</code> 这个插件可以提供很大的帮助。它支持多种适配模式，能够快速实现大屏自适应效果。如果你正在寻找一个简单易用的适配工具，<code>fitview</code> 值得一试。你可以通过 npm 安装或直接使用 CDN 引入，快速集成到你的项目中。</p>
<p>希望这篇文章能帮助你更好地理解和选择大屏适配方案。如果你有更多问题或建议，欢迎在评论区留言。</p></div></div>