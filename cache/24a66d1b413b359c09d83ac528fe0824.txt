
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/MeteorSeed/p/19062714" title="发布于 2025-08-29 10:01">
    <span role="heading" aria-level="2">不同数据库中 VARCHAR 的差异及字符串查询“N”前缀的使用规则</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p><span>　　在关系型数据库中，VARCHAR 是最常用的字符串数据类型之一，用于存储变长字符数据。对于不了解的用户，可能会不清楚不同数据库中 VARCHAR 的区别。不同数据库对 VARCHAR 的实现逻辑、字符集支持及使用细节存在显著差异，其中 SQL Server 与 PostgreSQL 的差异比较典型，会直接影响查询语法。</span></p>
<p><span>　　本文将以 SQL Server 与 PostgreSQL 为例，系统梳理两者中 VARCHAR 的区别，解析加“N”的底层逻辑与使用场景。</span></p>
<h1><span><span>SQL Server 与 PostgreSQL 中 VARCHAR 的区别</span></span></h1>
<p><span>　　SQL Server 需通过 VARCHAR（非 Unicode）和 NVARCHAR（Unicode）区分字符类型，而 PostgreSQL 的 VARCHAR 本身就是 Unicode 类型，使用更灵活。其主要区别如下：</span></p>
<div>
<table style="margin-left: auto; margin-right: auto">
<tbody>
<tr>
<td style="text-align: center" data-colwidth="143"><span>&nbsp;</span></td>
<td style="text-align: center" data-colwidth="143">
<p><strong>SQL Server</strong></p>
<p><strong>VARCHAR</strong></p>
</td>
<td style="text-align: center" data-colwidth="143">
<p><strong>SQL Server</strong></p>
<p><strong>NVARCHAR</strong></p>
</td>
<td style="text-align: center" data-colwidth="143">
<p><strong>PostgreSQL</strong></p>
<p><span><span><strong>VARCHAR</strong><br></span></span></p>








</td>








</tr>
<tr>
<td data-colwidth="143">
<p><strong>字符集支持</strong></p>








</td>
<td data-colwidth="143">
<p><span><span>非 Unicode</span></span></p>








</td>
<td data-colwidth="143">
<p><span><span>Unicode（UTF-16）</span></span></p>








</td>
<td data-colwidth="143">
<p><span><span>Unicode（UTF-8，默认）</span></span></p>








</td>








</tr>
<tr>
<td data-colwidth="143">
<p><strong>最大字符数</strong></p>








</td>
<td data-colwidth="143">
<p><span><span>8000</span></span></p>








</td>
<td data-colwidth="143"><span><span>4000</span></span></td>
<td data-colwidth="143"><span><span>无硬性限制</span></span></td>








</tr>
<tr>
<td data-colwidth="143">
<p><strong>多语言支持支持</strong></p>








</td>
<td data-colwidth="143"><span><span>不支持（易乱码）</span></span></td>
<td data-colwidth="143"><span><span>支持</span></span></td>
<td data-colwidth="143"><span><span>支持</span></span></td>








</tr>
<tr>
<td data-colwidth="143">
<p><strong>典型适用场景</strong></p>








</td>
<td data-colwidth="143"><span><span>纯英文/数字内容</span></span></td>
<td data-colwidth="143"><span><span>多语言/特殊符号内容</span></span></td>
<td data-colwidth="143"><span><span>所有场景</span></span></td>








</tr>








</tbody>








</table>





</div>
<p><span>　　SQL Server 用 VARCHAR 和 NVARCHAR 两种类型区分字符串<span data-pm-slice="1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;p&quot;,&quot;attributes&quot;:{&quot;style&quot;:&quot;text-align: left;&quot;},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]">，是因为历史原因，当时 Unicode 还未流行，需要兼顾单字节编码效率；而 PostgreSQL 的 VARCHAR 则是 &nbsp;Unicode 成为主流后，基于 UTF-8 设计的简化方案 。</span></span></p>
<h1><span><span>为什么查询要对字符串加“N”？</span></span></h1>
<p><span>　　在字符串前加 N'...'（N 代表 "National Character Set"）是标识 Unicode 字符串的语法，起源于 SQL Server，但并非其独有。这一语法的核心作用是告诉数据库 —— 该字符串包含 Unicode 字符，需按 Unicode 编码（如 UTF-16）处理，主要用于匹配 NVARCHAR 等 Unicode 类型的字段，其核心目的是区分 “非 Unicode 字符串” 与 “Unicode 字符串”，避免字符转换错误与性能问题。</span></p>
<p><span>　　这一设计的根源是 —— SQL Server 早期不支持 UTF-8，需通过 NVARCHAR 类型单独处理 Unicode 字符（如中文），而 VARCHAR 仅支持单字节编码，两者的编码体系完全独立，必须通过 N 前缀明确区分。</span></p>
<h1><span><span>何时必须加“N”？何时不需要</span></span>“N”？</h1>
<h2><span><span>SQL Server 场景</span></span></h2>
<p><span>　　当满足以下两个条件时，必须加 N，否则会出现乱码、数据丢失或查询不匹配：</span></p>
<p><span>　　<strong>- 字符串包含 Unicode 字符 Unicode 字符包括</strong>：中文、日文、韩文、俄文、emoji（如 😂）、特殊符号（如 ①）等。</span></p>
<p><span>　　<strong>- 对应的列类型是 NVARCHAR/NCHAR</strong></span></p>
<p><span>　　NVARCHAR 是 SQL Server 专门存储 Unicode 字符的类型，若字符串不加 N，SQL Server 会将其按非 Unicode 编码处理，再强制转换为 NVARCHAR，导致：</span></p>
<p><span><span>　　<strong>- 字符丢失</strong>：最直接的问题是非英文字符（如中文、日文、俄文、emoji 等）会被错误转换，导致乱码或变成 ?。</span></span></p>
<p><span><span>　　<strong>- 索引失效</strong>：隐式转换（VARCHAR → NVARCHAR）会导致 NVARCHAR 列的索引无法使用，查询性能下降。</span></span></p>
<p><span><span>　　<strong>- 数据不匹配</strong>：转换后的乱码与 NVARCHAR 列中的正常字符无法匹配，导致查询结果为空。</span></span></p>
<p><span>　　以下场景中，加 N 不仅多余，还可能导致问题：</span></p>
<p><span>　　<strong>- 列类型是 VARCHAR（非 Unicode 类型）</strong>：VARCHAR 不支持 Unicode 字符，若加 N，SQL Server 会将 N'字符串'（Unicode）隐式转换为 VARCHAR 类型，可能导致 Unicode 字符丢失和索引失效。</span></p>
<p><span>　　字符串是纯 ASCII 字符，列是 NVARCHAR 时，若字符串仅包含 ASCII 字符如 'Zhang San'，即使列是 NVARCHAR，不加 N 也不会出错（SQL Server 可自动将 ASCII 转换为 Unicode）。但不推荐这么做。若后续字符串新增 Unicode 字符，容易忘记加 N 导致错误。而且，为避免混淆，建议对 NVARCHAR 列的所有字符串常量都加 N。</span></p>
<h2><span><span>PostgreSQL 场景<span data-pm-slice="1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;p&quot;,&quot;attributes&quot;:{&quot;style&quot;:&quot;text-align: left;&quot;},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]"><span>：永远不需要加“N” &nbsp; &nbsp;</span></span></span></span></h2>
<p><span data-pm-slice="1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;p&quot;,&quot;attributes&quot;:{&quot;style&quot;:&quot;text-align: left;&quot;},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]">　　PostgreSQL<span>&nbsp;中没有 N 前缀的语法，原因是 —— PostgreSQL&nbsp;<span>的 VARCHAR 类型默认使用 UTF-8 编码，原生支持所有 Unicode 字符。</span></span></span></p>
<h1><span><span>小结</span></span></h1>
<p><span><span><span><span>　　在使用数据库时，务必要了解清楚，数据库的&nbsp;<span data-pm-slice="1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;p&quot;,&quot;attributes&quot;:{&quot;style&quot;:&quot;text-align: left;&quot;},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]">VARCHAR&nbsp;<span><span>是哪种情况。合理使用&nbsp;<span data-pm-slice="1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;p&quot;,&quot;attributes&quot;:{&quot;style&quot;:&quot;text-align: left;&quot;},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]">VARCHAR、N<span data-pm-slice="1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;p&quot;,&quot;attributes&quot;:{&quot;style&quot;:&quot;text-align: left;&quot;},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]">VARCHAR&nbsp;<span data-pm-slice="1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;p&quot;,&quot;attributes&quot;:{&quot;style&quot;:&quot;text-align: left;&quot;},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]">类型和<span>“N”前缀，避免字符串存储乱码、查询失效等问题，确保数据库操作的正确性。</span></span></span></span></span></span></span></span></span></span></span></p>
<p><span><span><span><span><span data-pm-slice="1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;p&quot;,&quot;attributes&quot;:{&quot;style&quot;:&quot;text-align: left;&quot;},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]"><span><span><span data-pm-slice="1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;p&quot;,&quot;attributes&quot;:{&quot;style&quot;:&quot;text-align: left;&quot;},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]"><span data-pm-slice="1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;p&quot;,&quot;attributes&quot;:{&quot;style&quot;:&quot;text-align: left;&quot;},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]"><span data-pm-slice="1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;p&quot;,&quot;attributes&quot;:{&quot;style&quot;:&quot;text-align: left;&quot;},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]"><span><img src="https://img2024.cnblogs.com/blog/270073/202508/270073-20250825145337681-1658462272.png" alt="me" loading="lazy" style="display: block; margin-left: auto; margin-right: auto"></span></span></span></span></span></span></span></span></span></span></span></p>
<p>&nbsp;</p>
<div><span>&nbsp;</span></div>
</div>
<div id="MySignature" role="contentinfo">
    <blockquote>
<p><strong>作者：</strong><a href="http://www.cnblogs.com/MeteorSeed">MeteorSeed</a></p>
<p><strong>我希望您喜欢这篇博文，并一如既往地感谢您阅读并与朋友和同事分享我的博文。</strong></p>
<p><strong>转载请注明出处。</strong></p>
</blockquote>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-08-29 10:02">2025-08-29 10:01</span>&nbsp;
<a href="https://www.cnblogs.com/MeteorSeed">MeteorSeed</a>&nbsp;
阅读(<span id="post_view_count">178</span>)&nbsp;
评论(<span id="post_comment_count">1</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19062714);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19062714', targetLink: 'https://www.cnblogs.com/MeteorSeed/p/19062714', title: '不同数据库中 VARCHAR 的差异及字符串查询“N”前缀的使用规则' })">举报</a>
</div>
        