
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/pains/p/18783351" title="发布于 2025-03-20 22:30">
    <span role="heading" aria-level="2">利用C#9.0中的record提高性能</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>C#9.0是2020年发布的，<a href="https://learn.microsoft.com/zh-cn/dotnet/csharp/language-reference/builtin-types/record" title="这里" target="_blank" rel="noopener nofollow">record特性</a>还没用上的可以看过来，一起讨论下。<br>
下面通过一个简单的示例演示record带来的好处。</p>
<h1 id="1-通过一个示例引出问题">1. 通过一个示例引出问题</h1>
<pre><code class="language-csharp">public class Person
{
    public string Name { get; set }
...
}
public class ClassA
{
    public static List&lt;Person&gt; Items=new List&lt;Person&gt;{......};
    public List&lt;Person&gt; GetList()
    {
        foreach(var item in Items)
        {
            item.Name=...
            ...
        }
        return Items;
    }
}
</code></pre>
<p>如上代码，就是想把Items中的值修改下再返回，但是这样就会静态变量Items中的值也修改掉，导致下次再用它时数据发生变化了，这不是我们希望的。<br>
至于为什么要修改Items中的值，实际情况可能是单位转换、翻译等等。<br>
还有这里用静态变量，实际的情况可能是内存缓存（IMemoryCache）中取来的，我们并不想它原始值发生改变。</p>
<h1 id="2-传统解决办法">2. 传统解决办法</h1>
<p>以前我们要解决这个问题，可能就是重新new新的对象，然后逐个属性和字段的赋值，这样写的问题是代码很啰嗦，不优雅。<br>
还有个解决办法就是深拷贝一份，再来修改，这个问题可能就是性能不好了，内存和cpu都消耗的比较多。<br>
可能还有其他的，欢迎讨论。</p>
<h1 id="3-record特性解决">3. record特性解决</h1>
<pre><code class="language-csharp">public record Person
{
    public string Name { get; set }
...
}
public class ClassA
{
    public static List&lt;Person&gt; Items=new List&lt;Person&gt;{......};
    public List&lt;Person&gt; GetList()
    {
        var items = Items.ToList();
        for(var i=0;i&lt;items.Count;i++)
        {
            items[i]=items[i] with {Name=...}
        }
        return items;
    }
}
</code></pre>
<p>解决代码如上，使用with表达式实现record的非破环性修改，需要注意的是Items是List泛型集合，是引用类型，需要ToList下以便接下来修改的不是原来的Items。</p>

</div>
<div id="MySignature" role="contentinfo">
    <div id="AllanboltSignature">
<p id="PSignature" style="border-top-color: #e0e0e0; border-top-width: 1px; border-top-style: dashed; border-right-color: #e0e0e0; border-right-width: 1px; border-right-style: dashed; border-bottom-color: #e0e0e0; border-bottom-width: 1px; border-bottom-style: dashed; border-left-color: #e0e0e0; border-left-width: 1px; border-left-style: dashed; padding-top: 10px; padding-right: 10px; padding-bottom: 10px; padding-left: 80px; background-image: url(https://images.cnblogs.com/cnblogs_com/pains/109838/r_copyright.png); background-attachment: initial; background-origin: initial; background-clip: initial; font-family: 微软雅黑; font-size: 11px; background-color: #e5f1f4; background-position: 1% 50%; background-repeat: no-repeat no-repeat; ">
作者：<a href="http://pains.cnblogs.com/" target="_blank">Rick Carter</a>
<br>
出处：<a href="http://pains.cnblogs.com/" target="_blank">http://pains.cnblogs.com/</a>
<br>
本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文连接，否则保留追究法律责任的权利。
</p>
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="5.447575622214121" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-20 22:30">2025-03-20 22:30</span>&nbsp;
<a href="https://www.cnblogs.com/pains">Rick Carter</a>&nbsp;
阅读(<span id="post_view_count">107</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18783351" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18783351);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18783351', targetLink: 'https://www.cnblogs.com/pains/p/18783351', title: '利用C#9.0中的record提高性能' })">举报</a>
</div>
        