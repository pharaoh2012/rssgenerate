
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wuty/p/19027532" title="发布于 2025-08-07 21:38">
    <span role="heading" aria-level="2">记录win11下，WPF设置 System.AppUserModel.PreventPinning 属性用于阻止用户将应用程序固定到任务栏</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p><strong>本篇博文我仅仅是作为记录者，实际上发现并编码的是我们组的小伙伴天保同学。</strong></p>
<p>我们组小伙伴有个需求，需要将WPF应用的 任务栏右键菜单菜单，不显示<strong>“固定到任务栏”</strong>。&nbsp;</p>
<p>如下图：</p>
<p><strong>普通窗口的任务栏右键菜单：</strong></p>
<p><img src="https://img2024.cnblogs.com/blog/1063618/202508/1063618-20250807211448949-825555896.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/1063618/202508/1063618-20250807211517438-979219765.png" alt="image" loading="lazy"></p>
<p>&nbsp;</p>
<p>但是发现部分窗口有只显示 <strong>“关闭窗口”</strong></p>
<p>如<strong>“微信公众号”</strong>的窗口</p>
<p><img src="https://img2024.cnblogs.com/blog/1063618/202508/1063618-20250807211747889-2013113697.png" alt="image" loading="lazy"></p>
<p>&nbsp;</p>
<p>微软的官方文档：<a href="https://learn.microsoft.com/zh-cn/windows/win32/properties/props-system-appusermodel-preventpinning" rel="noopener nofollow">System.AppUserModel.PreventPinning - Win32 apps | Microsoft Learn</a>&nbsp;禁用将快捷方式或窗口固定到任务栏或&nbsp;开始&nbsp;菜单的功能。 此属性还使项无法包含在&nbsp;“开始”&nbsp;菜单的“最常用的”（MFU）列表中。</p>
<p>1、首先定义System.AppUserModel.PreventPinning：ROPERTYKEY(new Guid("{9F4C2855-9F79-4B39-A8D0-E1D42DE1D5F3}"), 9)：详情看propertyKey的参数解释：<a href="https://learn.microsoft.com/zh-cn/windows/win32/api/wtypes/ns-wtypes-propertykey" rel="noopener nofollow">propertyKEY (wtypes.h) - Win32 apps | Microsoft Learn</a></p>
<p>2、给<strong>IPropertyStore</strong> 定义 IID <strong>Guid IID_IPropertyStore = new Guid("886D8EEB-8CF2-4446-8D02-CDBA1DBDCF99");</strong></p>
<p>3、调用shell32 的&nbsp;SHGetPropertyStoreForWindow实现 禁用的功能</p>
<p>&nbsp;</p>
<p><strong>代码如下：</strong></p>
<div class="cnblogs_code">
<pre> <span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> NativeWin32
 {
     [DllImport(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">shell32.dll</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)]
     </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">extern</span> <span style="color: rgba(0, 0, 255, 1)">int</span> SHGetPropertyStoreForWindow(IntPtr hwnd, <span style="color: rgba(0, 0, 255, 1)">ref</span> Guid riid, <span style="color: rgba(0, 0, 255, 1)">out</span><span style="color: rgba(0, 0, 0, 1)"> IPropertyStore propertyStore);

     [DllImport(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">ole32.dll</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)]
     </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">extern</span> <span style="color: rgba(0, 0, 255, 1)">int</span> PropVariantClear(<span style="color: rgba(0, 0, 255, 1)">ref</span><span style="color: rgba(0, 0, 0, 1)"> PROPVARIANT pvar);

     </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Define IPropertyStore interface</span>
<span style="color: rgba(0, 0, 0, 1)">     [ComImport]
     [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
     [Guid(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">886D8EEB-8CF2-4446-8D02-CDBA1DBDCF99</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)]
     </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">interface</span><span style="color: rgba(0, 0, 0, 1)"> IPropertyStore
     {
         </span><span style="color: rgba(0, 0, 255, 1)">void</span> GetCount(<span style="color: rgba(0, 0, 255, 1)">out</span> <span style="color: rgba(0, 0, 255, 1)">uint</span><span style="color: rgba(0, 0, 0, 1)"> cProps);
         </span><span style="color: rgba(0, 0, 255, 1)">void</span> GetAt(<span style="color: rgba(0, 0, 255, 1)">uint</span> iProp, <span style="color: rgba(0, 0, 255, 1)">out</span><span style="color: rgba(0, 0, 0, 1)"> PROPERTYKEY pkey);
         </span><span style="color: rgba(0, 0, 255, 1)">void</span> GetValue(<span style="color: rgba(0, 0, 255, 1)">ref</span> PROPERTYKEY key, <span style="color: rgba(0, 0, 255, 1)">out</span><span style="color: rgba(0, 0, 0, 1)"> PROPVARIANT pv);
         </span><span style="color: rgba(0, 0, 255, 1)">void</span> SetValue(<span style="color: rgba(0, 0, 255, 1)">ref</span> PROPERTYKEY key, <span style="color: rgba(0, 0, 255, 1)">ref</span><span style="color: rgba(0, 0, 0, 1)"> PROPVARIANT pv);
         </span><span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> Commit();
     }

     </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Define IID for IPropertyStore</span>
     <span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span> Guid IID_IPropertyStore = <span style="color: rgba(0, 0, 255, 1)">new</span> Guid(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">886D8EEB-8CF2-4446-8D02-CDBA1DBDCF99</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);

     </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Define PROPERTYKEY struct</span>
     [StructLayout(LayoutKind.Sequential, Pack = <span style="color: rgba(128, 0, 128, 1)">4</span><span style="color: rgba(0, 0, 0, 1)">)]
     </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">struct</span><span style="color: rgba(0, 0, 0, 1)"> PROPERTYKEY
     {
         </span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> Guid fmtid;
         </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">uint</span><span style="color: rgba(0, 0, 0, 1)"> pid;

         </span><span style="color: rgba(0, 0, 255, 1)">public</span> PROPERTYKEY(Guid fmtid, <span style="color: rgba(0, 0, 255, 1)">uint</span><span style="color: rgba(0, 0, 0, 1)"> pid)
         {
             </span><span style="color: rgba(0, 0, 255, 1)">this</span>.fmtid =<span style="color: rgba(0, 0, 0, 1)"> fmtid;
             </span><span style="color: rgba(0, 0, 255, 1)">this</span>.pid =<span style="color: rgba(0, 0, 0, 1)"> pid;
         }
     }

     </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Define PROPVARIANT structure (simplified, we'll use a simple one for bool)</span>
<span style="color: rgba(0, 0, 0, 1)">     [StructLayout(LayoutKind.Explicit)]
     </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">struct</span><span style="color: rgba(0, 0, 0, 1)"> PROPVARIANT
     {
         </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> We'll only implement the necessary part for boolean</span>
         [FieldOffset(<span style="color: rgba(128, 0, 128, 1)">0</span>)] <span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">ushort</span><span style="color: rgba(0, 0, 0, 1)"> vt;
         [FieldOffset(</span><span style="color: rgba(128, 0, 128, 1)">8</span>)] <span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">byte</span><span style="color: rgba(0, 0, 0, 1)"> boolVal;

         </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">void</span> SetValue(<span style="color: rgba(0, 0, 255, 1)">bool</span><span style="color: rgba(0, 0, 0, 1)"> value)
         {
             </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> VT_BOOL</span>
             vt = <span style="color: rgba(128, 0, 128, 1)">11</span><span style="color: rgba(0, 0, 0, 1)">;
             boolVal </span>= value ? (<span style="color: rgba(0, 0, 255, 1)">byte</span>)<span style="color: rgba(128, 0, 128, 1)">1</span> : (<span style="color: rgba(0, 0, 255, 1)">byte</span>)<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">;
         }
     }
 }</span></pre>
</div>
<p>&nbsp;</p>
<p><strong>在窗口加载的时候调用方法：</strong></p>
<div class="cnblogs_code">
<pre> <span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> MainWindow()
 {
     InitializeComponent();
     SourceInitialized </span>+=<span style="color: rgba(0, 0, 0, 1)"> MainWindow_SourceInitialized;
 }

 </span><span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">void</span> MainWindow_SourceInitialized(<span style="color: rgba(0, 0, 255, 1)">object</span>?<span style="color: rgba(0, 0, 0, 1)"> sender, EventArgs e)
 {
     SetPinning();
 }

 </span><span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> SetPinning()
 {</span>
     IntPtr hwnd = <span style="color: rgba(0, 0, 255, 1)">new</span> WindowInteropHelper(<span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">).Handle;

     </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Define the property key for System.AppUserModel.PreventPinning</span>
     NativeWin32.PROPERTYKEY propKey = <span style="color: rgba(0, 0, 255, 1)">new</span> NativeWin32.PROPERTYKEY(<span style="color: rgba(0, 0, 255, 1)">new</span> Guid(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">{9F4C2855-9F79-4B39-A8D0-E1D42DE1D5F3}</span><span style="color: rgba(128, 0, 0, 1)">"</span>), <span style="color: rgba(128, 0, 128, 1)">9</span><span style="color: rgba(0, 0, 0, 1)">);

     </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Get the IPropertyStore for the window</span>
<span style="color: rgba(0, 0, 0, 1)">     NativeWin32.IPropertyStore propStore;
     </span><span style="color: rgba(0, 0, 255, 1)">int</span> hr = NativeWin32.SHGetPropertyStoreForWindow(hwnd, <span style="color: rgba(0, 0, 255, 1)">ref</span> NativeWin32.IID_IPropertyStore, <span style="color: rgba(0, 0, 255, 1)">out</span><span style="color: rgba(0, 0, 0, 1)"> propStore);
     </span><span style="color: rgba(0, 0, 255, 1)">if</span> (hr != <span style="color: rgba(128, 0, 128, 1)">0</span>) <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> if failed</span>
<span style="color: rgba(0, 0, 0, 1)">     {
         Marshal.ThrowExceptionForHR(hr);
     }

     </span><span style="color: rgba(0, 0, 255, 1)">try</span><span style="color: rgba(0, 0, 0, 1)">
     {
         </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Create a PROPVARIANT with bool value: true</span>
         NativeWin32.PROPVARIANT pv = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> NativeWin32.PROPVARIANT();
         pv.SetValue(</span><span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">);

         </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Set the property</span>
         propStore.SetValue(<span style="color: rgba(0, 0, 255, 1)">ref</span> propKey, <span style="color: rgba(0, 0, 255, 1)">ref</span><span style="color: rgba(0, 0, 0, 1)"> pv);

         </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> We must free the PROPVARIANT</span>
         NativeWin32.PropVariantClear(<span style="color: rgba(0, 0, 255, 1)">ref</span><span style="color: rgba(0, 0, 0, 1)"> pv);
     }
     </span><span style="color: rgba(0, 0, 255, 1)">finally</span><span style="color: rgba(0, 0, 0, 1)">
     {
         </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Release the IPropertyStore</span>
<span style="color: rgba(0, 0, 0, 1)">         Marshal.ReleaseComObject(propStore);
     }
 }</span></pre>
</div>
<p>&nbsp;</p>
<p><strong>结果如下：</strong></p>
<p><img src="https://img2024.cnblogs.com/blog/1063618/202508/1063618-20250807212811592-9645791.png" alt="image" loading="lazy"></p>
<p>&nbsp;</p>
<p><strong>参考资料：</strong></p>
<p><a href="https://learn.microsoft.com/zh-cn/windows/win32/api/wtypes/ns-wtypes-propertykey" rel="noopener nofollow">propertyKEY (wtypes.h) - Win32 apps | Microsoft Learn</a></p>
<p><a href="https://learn.microsoft.com/zh-cn/windows/win32/properties/props-system-appusermodel-preventpinning" rel="noopener nofollow">System.AppUserModel.PreventPinning - Win32 apps | Microsoft Learn</a></p>
<p>&nbsp;<a href="https://learn.microsoft.com/zh-cn/windows/win32/shell/appids" rel="noopener nofollow">应用程序用户模型 ID (AppUserModelIDs) - Win32 apps | Microsoft Learn</a></p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.004166666666666667" data-date-updated="2025-08-07 21:44">2025-08-07 21:38</span>&nbsp;
<a href="https://www.cnblogs.com/wuty">wuty007</a>&nbsp;
阅读(<span id="post_view_count">29</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19027532);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19027532', targetLink: 'https://www.cnblogs.com/wuty/p/19027532', title: '记录win11下，WPF设置 System.AppUserModel.PreventPinning 属性用于阻止用户将应用程序固定到任务栏' })">举报</a>
</div>
        