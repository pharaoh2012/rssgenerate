
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/vipstone/p/18820933" title="发布于 2025-04-11 16:33">
    <span role="heading" aria-level="2">干货分享！MCP 实现原理，小白也能看懂</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>不知道大家有没有发现？对于添加到 MCP 服务市场的成千上万个 MCP 服务（而且这个数字每天还在增加），我们可以不写一行代码，轻松实现调用，但背后的原因究竟是啥呢？</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202504/172074-20250411163308714-67328534.png" alt="" loading="lazy"></p>
<p>MCP 虽然用起来很方便，但搞不懂背后的实现原理，总感觉这个知识点还没完全掌握，所以接下来，我们一起来看它的实现原理。</p>
<h2 id="从某个-mcp-的调用说起">从某个 MCP 的调用说起</h2>
<p>在调用某个 MCP 服务的时候，只需要在 json 配置文件中添加一段 MCP 服务厂商提供的 json 信息就可以实现服务调用了。</p>
<p>例如要调用百度地图提供的 8 大核心功能：地理编码、逆地理编码、地点检索、路线规划、天气查询、IP 定位等功能时，我们只需要添加以下 json 就能轻松调用了：</p>
<pre><code class="language-json">{
  "mcpServers": {
    "baidu-map": {
      "command": "npx",
      "args": [
        "-y",
        "@baidumap/mcp-server-baidu-map"
      ],
      "env": {
        "BAIDU_MAP_API_KEY": "xxx"
      }
    }
  }
}
</code></pre>
<p>执行结果如下：</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202504/172074-20250411163317519-1587926079.png" alt="" loading="lazy"></p>
<p>要搞明白调用的实现原理，我们需要先从 json 配置文件说起，以上配置文件是 nodejs 的调用命令，其中“npx”是 “npm execute package” 的缩写，它的主要功能是运行一个包中的可执行文件，而无需先将其全局安装或添加到项目的依赖中，此时我们使用传统的 npm 使用方式，将百度提供的依赖下载到本地：</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202504/172074-20250411163325024-371479804.png" alt="" loading="lazy"></p>
<h2 id="源码分析">源码分析</h2>
<p>我们查看其源码就可以发现：</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202504/172074-20250411163333060-1230766144.png" alt="" loading="lazy"></p>
<p>其主要文件 dist/index.js 的核心源码如下：</p>
<pre><code class="language-javascript">// 启动一个 stdio 服务器
async function runServer() {
  const transport = new StdioServerTransport();
  await server.connect(transport);
  console.error("Baidu Map MCP Server running on stdio");
}
// 查询天气的工具实现
async function handleWeather(districtId, location) {
  const url = new URL("https://api.map.baidu.com/weather/v1/");
  url.searchParams.append("data_type", "all");
  url.searchParams.append("coordtype", "bd09ll");
  url.searchParams.append("ak", BAIDU_MAP_API_KEY);
  url.searchParams.append("from", "node_mcp");
  if (location) {
    url.searchParams.append("location", location);
  }
  if (districtId) {
    url.searchParams.append("district_id", districtId);
  }
  const response = await fetch(url.toString());
  const data = await response.json();
  if (data.status !== 0) {
    return {
      content: [{
        type: "text",
        text: `Weather searth failed: ${data.message || data.status}`
      }],
      isError: true
    };
  }
  return {
    content: [{
      type: "text",
      text: JSON.stringify({
        location: data.result.location,
        now: data.result.now,
        forecasts: data.result.forecasts,
        forecast_hours: data.result.forecast_hours,
        indexes: data.result.indexes,
        alerts: data.result.alerts,
      }, null, 2)
    }],
    isError: false
  };
}
</code></pre>
<p>从以上源码我们可以大致看出，百度作为 MCP 服务提供商，帮我们做了以下这些事：</p>
<ol>
<li>启动 stdio 服务端，等待 MCP 客户端连接。</li>
<li>当检测到客户端的通讯请求之后，它通过 HTTP 协议请求自己服务器的信息，再将返回结果以 stdio 方式发送给 MCP 客户端。</li>
</ol>
<p>到这里，我们就搞明白了，之所以 MCP 使用比较简单，<strong>原因是每家 MCP 服务厂商，帮我们实现了服务的具体调用</strong>。</p>
<p>并且他们遵循了 MCP 通讯协议，因此我们只需要使用 MCP Client 简单调用就可以实现某个功能了，它的具体执行流程如下：</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202504/172074-20250411163341158-1106120942.png" alt="" loading="lazy"></p>
<h2 id="小结">小结</h2>
<p>MCP 只使用调用简单是每家 MCP 厂商帮我们实现了服务调用的细节，并且遵循了 MCP 协议，开启了 stdio 本地线程通讯的服务，让我们可以轻松的通过 MCP 客户端进行调用了。所以，你能自己实现一个 MCP 带 UI 的客户端吗？</p>
<blockquote>
<p>本文已收录到我的技术小站 <a href="https://www.javacn.site" target="_blank" rel="noopener nofollow">www.javacn.site</a>，其中包含的内容有：Spring AI、并发编程、MySQL、Redis、Spring、Spring MVC、Spring Boot、Spring Cloud、MyBatis、JVM、设计模式、消息队列、场景题等模块。</p>
</blockquote>

</div>
<div id="MySignature" role="contentinfo">
    <div style="text-align: center; color: red">
关注下面二维码，订阅更多精彩内容。
<br>
<img style="margin-left: 0px" src="https://images.cnblogs.com/cnblogs_com/vipstone/848916/o_211225130402_gognzhonghao.jpg">
</div>

<div style="display: none">
    <img src="http://icdn.apigo.cn/gitchat/rabbitmq.png?imageView2/0/w/500/h/400">
</div>
<div style="margin-bottom: 50px; display: none">

<img title="微信打赏" src="http://icdn.apigo.cn/myinfo/wchat-pay.png" alt="微信打赏">
<br>

<div style="display: none">
<span style="display: block; position: absolute; height: 40px; top: 50%; margin-top: -20px">关注公众号（加好友）：</span>

<img style="margin-left: 144px" src="http://icdn.apigo.cn/gongzhonghao2.png?imageView2/0/w/120/h/120">
</div>
<p></p>

<div id="AllanboltSignature">
    <p style="border-top: #e0e0e0 1px dashed; border-right: #e0e0e0 1px dashed; border-bottom: #e0e0e0 1px dashed; border-left: #e0e0e0 1px dashed; padding-top: 10px; padding-right: 10px; padding-bottom: 10px; padding-left: 60px; background: url(&quot;https://images.cnblogs.com/cnblogs_com/lloydsheng/239039/o_copyright.gif&quot;) #e5f1f4 no-repeat 1% 50%; font-family: 微软雅黑; font-size: 11px" id="PSignature">
        <br> 作者：
        <a href="http://vipstone.cnblogs.com/" target="_blank">王磊的博客</a>
        <br> 出处：
        <a href="http://vipstone.cnblogs.com/" target="_blank">http://vipstone.cnblogs.com/</a>
        <br>
    </p>
</div></div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.7665852595277778" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-11 16:34">2025-04-11 16:33</span>&nbsp;
<a href="https://www.cnblogs.com/vipstone">磊哥|www.javacn.site</a>&nbsp;
阅读(<span id="post_view_count">276</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18820933" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18820933);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18820933', targetLink: 'https://www.cnblogs.com/vipstone/p/18820933', title: '干货分享！MCP 实现原理，小白也能看懂' })">举报</a>
</div>
        