
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lori/p/18832389" title="发布于 2025-04-18 10:54">
    <span role="heading" aria-level="2">apisix~ApisixPluginConfig的使用</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h3 id="1-apisixpluginconfig-的作用"><strong>1. ApisixPluginConfig 的作用</strong></h3>
<ul>
<li><strong>插件配置复用</strong>：将插件配置定义为独立的资源，供多个路由或服务引用。</li>
<li><strong>解耦插件与路由</strong>：修改插件配置时，只需更新 <code>ApisixPluginConfig</code>，无需逐个修改路由。</li>
<li><strong>支持复杂配置</strong>：避免在 <code>Ingress</code> 的 Annotations 中编写冗长的 JSON。</li>
<li><strong>plugin_config_id</strong>: 通过这种方式添加的插件，将不会在apisix dashboard上显示，这块需要注意，但插件本身是生效的。</li>
</ul>
<hr>
<h3 id="2-使用步骤"><strong>2. 使用步骤</strong></h3>
<h4 id="1-创建-apisixpluginconfig-资源"><strong>(1) 创建 ApisixPluginConfig 资源</strong></h4>
<p>定义插件的具体配置（例如限流插件 <code>limit-count</code>）：</p>
<pre><code class="language-yaml">apiVersion: apisix.apache.org/v2
kind: ApisixPluginConfig
metadata:
  name: limit-config
spec:
  plugins:
  - name: limit-count
    enable: true
    config:
      _meta:
        disable: false #注意这行是必须的，否则在dashboard的路由&gt;高级特性&gt;插件模板配置中会出现白屏的情况
      count: 100
      time_window: 60
      key: remote_addr
      policy: local
</code></pre>
<h4 id="2-在-apisixroute-或-ingress-中引用"><strong>(2) 在 ApisixRoute 或 Ingress 中引用</strong></h4>
<p>通过 <code>plugin_config_name</code> 字段关联到路由：</p>
<h5 id="方式一在-apisixroute-中引用"><strong>方式一：在 <code>ApisixRoute</code> 中引用</strong></h5>
<pre><code class="language-yaml">apiVersion: apisix.apache.org/v2
kind: ApisixRoute
metadata:
  name: my-route
spec:
  http:
  - name: rule1
    match:
      hosts: ["example.com"]
      paths: ["/*"]
    backends:
      - serviceName: my-service
        servicePort: 80
    # 引用插件配置
    plugin_config_name: limit-config
</code></pre>
<blockquote>
<p>注意：如果apisix-ingress中使用了自已的域名，那网关的域名就失效了，这块需要注意一下</p>
</blockquote>
<h5 id="方式二在-ingress-中通过注解引用"><strong>方式二：在 <code>Ingress</code> 中通过注解引用</strong></h5>
<pre><code class="language-yaml">apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
  annotations:
    k8s.apisix.apache.org/plugin-config-name: "limit-config"  # 指定插件配置名称
spec:
  ingressClassName: apisix
  rules:
  - host: example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: my-service
            port:
              number: 80
</code></pre>
<hr>
<h3 id="3-验证配置"><strong>3. 验证配置</strong></h3>
<h4 id="1-检查-apisixpluginconfig-状态"><strong>(1) 检查 ApisixPluginConfig 状态</strong></h4>
<pre><code class="language-bash">kubectl get apisixpluginconfig limit-config -o yaml
</code></pre>
<p><img src="https://images.cnblogs.com/cnblogs_com/lori/2369799/o_250418013225_apisixpluginconfig2.png" alt="" loading="lazy"></p>
<p>如果是阿里云容器平台上，它会在自定义资源里出现</p>
<p><img src="https://images.cnblogs.com/cnblogs_com/lori/2369799/o_250418013226_apisixpluginconfig.png" alt="" loading="lazy"></p>
<p>apisix-dashboard的路由》高级特性》插件模板会展示你的插件配置</p>
<p><img src="https://img2024.cnblogs.com/blog/118538/202504/118538-20250418105336618-873124013.png" alt="" loading="lazy"></p>
<h4 id="2-查看-apisix-路由详情"><strong>(2) 查看 APISIX 路由详情</strong></h4>
<p>通过 Admin API 检查路由是否关联了插件：</p>
<pre><code class="language-bash">curl http://&lt;APISIX_ADMIN_IP&gt;:9180/apisix/admin/routes -H 'X-API-KEY: &lt;ADMIN_KEY&gt;'
</code></pre>
<p>预期输出中应包含 <code>limit-count</code> 插件的配置。</p>
<hr>
<h3 id="4-优势对比"><strong>4. 优势对比</strong></h3>
<table>
<thead>
<tr>
<th>方式</th>
<th>维护成本</th>
<th>复用性</th>
<th>灵活性</th>
<th>适用场景</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>ApisixPluginConfig</code></td>
<td>低</td>
<td>高</td>
<td>高</td>
<td>多个路由共享同一插件</td>
</tr>
<tr>
<td><code>Ingress Annotations</code></td>
<td>高</td>
<td>低</td>
<td>中</td>
<td>简单插件、单路由配置</td>
</tr>
</tbody>
</table>
<hr>
<h3 id="5-注意事项"><strong>5. 注意事项</strong></h3>
<ol>
<li><strong>作用域限制</strong>：
<ul>
<li>默认情况下，<code>ApisixPluginConfig</code> 是命名空间级别的资源，需确保路由和插件配置在同一命名空间。若需跨命名空间引用，需配置 APISIX Ingress Controller 的 <code>scope</code> 参数为 <code>cluster</code>。</li>
</ul>
</li>
<li><strong>版本兼容性</strong>：
<ul>
<li>确保 APISIX Ingress Controller 版本支持 <code>ApisixPluginConfig</code>（v2.7+ 推荐使用）。</li>
</ul>
</li>
<li><strong>配置冲突</strong>：
<ul>
<li>如果同时在 <code>ApisixRoute</code> 和 <code>ApisixPluginConfig</code> 中定义了同名插件，<code>ApisixRoute</code> 中的配置会覆盖 <code>ApisixPluginConfig</code>。</li>
</ul>
</li>
</ol>
<hr>
<h3 id="6-高级用法组合多个插件"><strong>6. 高级用法：组合多个插件</strong></h3>
<p>可以在一个 <code>ApisixPluginConfig</code> 中定义多个插件：</p>
<pre><code class="language-yaml">apiVersion: apisix.apache.org/v2
kind: ApisixPluginConfig
metadata:
  name: global-plugins
spec:
  plugins:
  - name: limit-count
    enable: true
    config:
      _meta:
        disable: false
      count: 200
      time_window: 60
  - name: cors
    enable: true
    config:
       _meta:
         disable: false
      allow_origins: "*"
      allow_methods: "GET,POST"
</code></pre>
<hr>
<h3 id="总结"><strong>总结</strong></h3>
<p>通过 <code>ApisixPluginConfig</code> 可以实现插件的集中管理和复用，<strong>特别适合以下场景</strong>：</p>
<ol>
<li>多个路由需要相同插件配置（如全局限流、鉴权）。</li>
<li>插件配置复杂，需避免在 <code>Ingress</code> 中维护冗长的 JSON。</li>
<li>需要动态更新插件配置而不影响路由定义。</li>
</ol>
<p>如果此前通过 <code>Ingress Annotations</code> 管理插件，可以逐步迁移到 <code>ApisixPluginConfig</code>，提升配置的可维护性。</p>

</div>
<div id="MySignature" role="contentinfo">
    <p></p>
<div class="navgood">
<p>作者：仓储大叔，张占岭，<br>
荣誉：微软MVP<br>QQ：853066980</p>

<p><strong>支付宝扫一扫，为大叔打赏!</strong>
<br><img src="https://images.cnblogs.com/cnblogs_com/lori/237884/o_IMG_7144.JPG"></p>
</div>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.9228623165578703" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-18 10:56">2025-04-18 10:54</span>&nbsp;
<a href="https://www.cnblogs.com/lori">张占岭</a>&nbsp;
阅读(<span id="post_view_count">97</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18832389);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18832389', targetLink: 'https://www.cnblogs.com/lori/p/18832389', title: 'apisix~ApisixPluginConfig的使用' })">举报</a>
</div>
        