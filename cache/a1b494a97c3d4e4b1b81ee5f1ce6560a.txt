
		<div class="postcontent">
			<div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p><span style="font-size: 14pt"><strong>什么是工作流引擎（Workflow Engine ）?</strong></span></p>
<p><span class="text_jc0vX" style="font-size: 15px" data-text="true">例如开发一个系统，最关键的部分不是系统的界面（增删改查之类），也不是和数据库之间的交互<span class="text_jc0vX" data-text="true">（读写数据库之类）<span class="text_jc0vX" data-text="true">，而是如何根据<span class="text_jc0vX" data-text="true"><a class="innerLink_yY0l7" href="https://baike.baidu.com/item/%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91/3159866?fromModule=lemma_inlink" target="_blank" data-from-module="" rel="noopener nofollow">业务逻辑</a><span class="text_jc0vX" data-text="true">开发出符合实际需要的程序逻辑。</span></span></span></span></span></p>
<p><span class="text_jc0vX" style="font-size: 15px" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true">&nbsp;Workflow 引擎解决的就是这个问题：“业务逻辑的执行规则”从程序中抽离，让系统更贴近实际业务需求的变化。</span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="text_jc0vX" style="font-size: 15px" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true">比如电商订单的状态流转（下单→支付→发货→确认收货）、审批流程的分支判断（不同金额走不同审批人），这些逻辑若硬编码在代码里，会导致系统难以维护和扩展。</span></span></span></span></span></span></span></span></span></span></span></p>
<p><span style="font-size: 15px">Workflow 引擎的价值在于：</span><br> <br><span style="font-size: 15px">- 抽象业务流程：用可视化或配置化的方式定义“流程节点”“流转规则”“条件分支”，让业务逻辑与代码解耦。</span><br> <br><span style="font-size: 15px">- 动态执行控制：按预设规则自动推进流程，比如报销单提交后自动分配给直属领导审批，无需手动编写大量条件判断。</span><br> <br><span style="font-size: 15px">- 灵活扩展：业务流程变更时，只需修改引擎配置（如新增审批节点），无需重构代码，降低迭代成本。</span></p>
<p><span style="font-size: 15px"><strong><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true">那 怎么去完成这样一个比如下面这样的“<strong><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true"><span class="text_jc0vX" data-text="true">请假申请</span></span></span></span></span></span></span></span></span></span></span></span></span></strong>”的流程呢？</span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></p>
<p><span style="font-size: 15px"><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1431612/202507/1431612-20250703202923576-1705473848.png" class="lazyload"></span></p>
<p><span style="font-size: 15px">&nbsp;此处着重描述如何用<strong>橙单</strong>（flowable的一个商业化付费平台）常用流程的配置示例。</span></p>
<p><span style="font-size: 15px">&nbsp;以请假申请流程为例，介绍如何创建一个最简单的审批流程。&nbsp;</span></p>
<p><span style="font-size: 15px"><img alt="" data-src="https://img2024.cnblogs.com/blog/1431612/202507/1431612-20250703210305625-1039538057.png" class="lazyload"></span></p>
<p><span style="font-size: 15px">上面的流程图中，设置了录入（请假申请）、部门领导审批以及 HR 审批三个用户任务节点。</span></p>
<p><span style="font-size: 15px">在该流程中，只有录入即「请假申请」节点可以修改表单数据，因此将「录入」任务的「允许编辑」标记设置为选中。</span></p>
<p><span style="font-size: 15px"><img alt="" data-src="https://img2024.cnblogs.com/blog/1431612/202507/1431612-20250703210539218-152070375.png" class="lazyload"></span></p>
<p><span style="font-size: 15px">接下来两个节点</span></p>
<p><span style="font-size: 15px">「部门领导审批」和「HR 审批」节点都需要「同意」和「拒绝」两个按钮，所以要在这两个节点下添加相应的按钮。</span></p>
<p><span style="font-size: 15px"><img alt="" data-src="https://img2024.cnblogs.com/blog/1431612/202507/1431612-20250703210711528-327747570.png" class="lazyload"></span></p>
<p><span style="font-size: 15px">节点设置完了，配置流转路径，即节点之间的连线。可以选择为不同的连线设置不同的按钮，当按钮被点击时，可以根据下图的配置，走不同的流转路径。</span></p>
<p><span style="font-size: 15px"><img alt="" data-src="https://img2024.cnblogs.com/blog/1431612/202507/1431612-20250703211210811-1907748101.png" class="lazyload"></span></p>
<p><span style="font-size: 15px">选中“连线”里的基础设置里有“流转类型”可以是</span></p>
<ul>
<li><span style="font-size: 15px">“自动判断”（无需人为干预或条件判断，流程会按照预设路径自动流转到下一个节点，常用于简单且固定的流程场景。），</span></li>












</ul>
<p><span style="font-size: 15px">自动流转是固定路径（比如提交后必到审核），没有选择空间。</span></p>
<ul>
<li><span style="font-size: 15px">&nbsp;“按钮”，见上图操作</span></li>
<li><span style="font-size: 15px">“判断条件”类型，通常为布尔类型的变量表达式，流程根据条件判断结果决定是否沿此连线流转。例如，当某个表单字段的值满足特定条件时，流程才会流向对应的节点。</span></li>
<li><span style="font-size: 15px">“单选一个分支流转”。该流转的核心就是人工决策+唯一分支选择，举个例子 ：示例：报销审批流程当前节点是“部门经理审批”，后面有3个分支：</span></li>












</ul>
<p style="margin-left: 60px"><span style="font-size: 15px">a.&nbsp;同意 → 流转到“财务复核”</span><br> <br><span style="font-size: 15px">b.&nbsp;驳回 → 流转到“员工修改报销单”</span><br> <br><span style="font-size: 15px">c.&nbsp;转交给其他人审批 → 流转到“指定审批人”</span><br> <br><span style="font-size: 15px"><strong>此时设置为“单选一个分支流转”，部门经理处理时只能选其中一个分支，不能同时走多个方向，确保流程按单一路径继续。</strong></span><br> <br><span style="font-size: 15px">核心特点</span><br> <br><span style="font-size: 15px">- 人工介入决策：必须由处理人<strong>主动</strong>选择分支，系统不会自动判断（和“条件流转”的区别,条件流转是系统根据预设规则（如金额&gt;1000自动转上级审批），无需人工选；）。</span><br> <br><span style="font-size: 15px">- 排他性选择：不能同时勾选多个分支，比如“同意”和“驳回”不能同时选，保证流程逻辑不冲突。</span><br> <br><span style="font-size: 15px">- 灵活适配人工场景：适合需要人<strong>根据实际情况拍板的场景</strong>，比如合同审批中的“通过”“拒绝”“补充材料”等选项。</span><br><br></p>
<p><span style="font-size: 15px"><strong>下图描述了 如何在流程中创建流程变量，并且使用流程变量作为条件流转的条件。</strong></span></p>
<p><span style="font-size: 15px">在流程变量设置步骤，添加流程变量，并将变量绑定到数据表字段。</span></p>
<p><span style="font-size: 15px"><img alt="" data-src="https://img2024.cnblogs.com/blog/1431612/202507/1431612-20250703212943001-1426513254.png" class="lazyload"></span></p>
<p><span style="font-size: 15px">为用户任务设置流程变量，只能从前面步骤已经添加到流程里的变量中选择，不能随便用没在流程里定义过的变量。</span></p>
<p><span style="font-size: 15px">举个例子理解</span><br><span style="font-size: 15px">比如设计一个“请假审批”流程：</span><br><span style="font-size: 15px">a.&nbsp;第一步：在流程中添加了2个变量：</span><br><span style="font-size: 15px">- &nbsp;请假天数&nbsp;（用户填写的请假时长）</span><br><span style="font-size: 15px">- &nbsp;申请人姓名&nbsp;（提交请假的人）</span></p>
<p><span style="font-size: 15px">b.&nbsp;后面的任务（比如“经理审批”节点）要设置流程变量时，只能选这2个已经存在的变量，不能用没添加过的（比如“部门编号”如果没在前面步骤定义，就不能选）。</span></p>
<p><span style="font-size: 15px">如下图“任务变量”里设置了“报销金额”、“审批类型”等流程变量，只能从中选择。<img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1431612/202507/1431612-20250703213146452-272544646.png" class="lazyload"></span></p>
<p><span style="font-size: 15px">在分支中选择「条件流转」并设置流转条件，如下图所示。</span></p>
<p><span style="font-size: 15px"><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1431612/202507/1431612-20250703213738133-565163369.png" class="lazyload"></span></p>
<p><span style="font-size: 15px">&nbsp;</span></p>
<h3 id="流程任务动态指定审批人"><span style="font-size: 15px">流程任务动态指定审批人</span></h3>
<p style="margin-left: 30px"><span style="font-size: 15px">给流程任务动态指定审批人，核心是为了让流程更灵活适配现实场景，避免“一刀切”的固定审批模式。具体原因可以从这几个场景理解：</span><br> <br><span style="font-size: 15px">1. 职责分工动态变化</span><br> <br><span style="font-size: 15px">- 场景：部门经理出差时，审批任务需要自动转给副经理；某个项目的负责人临时变更，审批权限也要跟着转移。</span><br> <br><span style="font-size: 15px">- 好处：不用手动修改流程配置，系统根据规则（如“当前审批人不在岗时转交给指定替补”）自动调整，避免流程卡住。</span><br> <br><span style="font-size: 15px">2. 按业务属性匹配审批人</span><br> <br><span style="font-size: 15px">- 场景：</span><br> <br><span style="font-size: 15px">- 报销金额≤1000元，由直属主管审批；金额&gt;1000元，自动转给部门总监。</span><br> <br><span style="font-size: 15px">- 技术类合同由技术部经理审批，财务类合同由财务部经理审批。</span><br> <br><span style="font-size: 15px">- 好处：根据业务数据（如金额、合同类型）动态分配审批人，符合企业“权责对等”的管理逻辑。</span><br> <br><span style="font-size: 15px">3. 灵活的协作需求</span><br> <br><span style="font-size: 15px">- 场景：</span><br> <br><span style="font-size: 15px">- 跨部门项目需要多个负责人会签，但不同阶段的主导部门不同（比如设计阶段由设计部审批，开发阶段由技术部审批）。</span><br> <br><span style="font-size: 15px">- 员工提交请假时，可以自己选择“直接上级”或“临时代理人”作为审批人。</span><br> <br><span style="font-size: 15px">- 好处：适配复杂协作场景，减少流程冗余。</span><br> <br><span style="font-size: 15px">4. 提升审批效率</span><br> <br><span style="font-size: 15px">- 固定审批人缺点：如果固定由某个人审批，一旦对方离职、休假或任务积压，流程就会停滞。</span><br> <br><span style="font-size: 15px">- 动态指定优势：</span><br> <br><span style="font-size: 15px">- 按“岗位”指定（如“技术部经理”岗位），即使岗位换人，流程也能自动对应新任职者。</span><br> <br><span style="font-size: 15px">- 按“角色”指定（如“流程创建者的上级”），无需手动维护审批人名单。</span></p>
<p><span style="font-size: 15px"><strong>在流程编辑器中，将用户任务的审批人配置为流程变量，变量值来自于绑定的业务表字段。这里需要注意的是，如果指定的是用户，而非用户组 (部门、角色和岗位等)，切记要使用「用户登录名」字段，目前并不支持使用「userId」字段值作为绑定的变量值。</strong></span></p>
<p><span style="font-size: 15px">在流程编辑器中，在当前用户任务中为下一个审批任务<strong>动态</strong>设置审批人，</span></p>
<p><span style="font-size: 15px">例如在报销流程中，根据报销金额大小，下一个审批任务可能是部门经理审批，也可能是财务总监审批，通过动态设置审批人，可让流程根据金额自动匹配相应审批人。</span></p>
<p><span style="font-size: 15px">具体操作步骤如下：</span></p>
<div style="margin-left: 30px"><span style="font-size: 15px">在用户任务配置「指定审批人」操作。如下图所示，为指定任务配置「指定审批人」，运行到该任务时，可通过点击这里配置「指定审批人」操作按钮，为下一个任务动态指定一或多个审批人，</span></div>
<div style="margin-left: 30px"><span style="font-size: 15px">注意: 在运行时最终只能选择审批用户或逗号分隔的用户组&nbsp;</span></div>
<div>
<p><span style="font-size: 15px"><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1431612/202507/1431612-20250703214521083-1766655795.png" class="lazyload"></span></p>
<p><span style="font-size: 15px">在配置下一个任务的审批人时，<strong>只能从一个叫「指定审批人」的流程变量中获取审批人信息</strong>，不能直接填写具体人名或选择其他变量。</span></p>
<p><span style="font-size: 15px"><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1431612/202507/1431612-20250703214755784-318121003.png" class="lazyload"></span></p>
<p><span style="font-size: 15px">流程保存之后，发布并设置为主版本。</span></p>
<p><span style="font-size: 15px">为什么需要设置为主版本？主要是为了确保流程能正式生效且被系统正确识别，区分版本的“草稿”与“正式生效”状态。</span></p>
<p style="text-align: left"><span style="font-size: 15px"><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1431612/202507/1431612-20250703214823632-178242042.png" class="lazyload">启动流程并运行到配置了「指定审批人」操作的用户任务。这一步会选择用户或用户组，多个用户之间逗号分隔。这里选择的用户或者用户组，将成为下一个审批任务的审批候选者。流程表达式设置审批人在流程编辑器中，我们可以通过「变量表达式」的方式，为指定任务设置审批人或审批用户组。选择「变量表达式」作为用户或用户组的选择方式。<img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1431612/202507/1431612-20250703215537255-102582153.png" class="lazyload">选择用户分组方式，同时在其右侧输入「变量 表达式」。由于 flowable 的 Spring Starter 做了很好的整合，因此这里直接输入 Spring Bean 的方法名即可。需要注意的是，末尾必须包含「圆括号」。<img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1431612/202507/1431612-20250703215724748-2012854963.png" class="lazyload"></span></p>





<span style="font-size: 15px"> 变量 表达式方法的返回值是字符串类型，如果是用户组，需要返回用户的登录名，多个用户之间「逗号」分隔，如 admin,leaderHR,manger。如是其他分组形式，则需要返回相对应的 ID 集合，多个 ID 之间同样也是「逗号」分隔，如 1779777400603676672,1779777400603676675 等。<img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1431612/202507/1431612-20250703215836355-1181573081.png" class="lazyload"></span>
<h3 id="操作按钮指定流程分支"><span style="font-size: 15px">操作按钮指定流程分支</span></h3>
<p>流程设计中用操作按钮指定流程分支，核心是为了让流程能根据实际业务需求灵活“分叉”，就像开车时通过按钮选择不同道路。<br>具体原因和场景如下：<br>a. 适配业务的多样性选择- 场景：- 报销流程中，员工提交申请时可点击“普通报销”或“紧急报销”按钮，分别走不同审批速度的分支（紧急分支跳过部分审核环节）。<br>合同审批时，法务点击“通过”按钮走下一环节，点击“驳回”按钮则返回给申请人修改。- 好处：用按钮让流程分支选择更直观，操作人根据实际情况决定走向，避免固定分支导致流程冗余。<br>b. 提升流程操作的自主性- 固定分支的缺点：若分支条件完全由系统自动判断（如金额&gt;1000走总监审批），可能无法覆盖特殊情况（比如紧急事项需越级审批）。- 按钮指定的优势：操作人可手动 override 系统规则，例如：- 普通员工点击“转上级审批”按钮，强制将任务转给更高层级领导；- 客服点击“升级投诉”按钮，将工单转交给投诉处理专员。<br>c. 简化流程逻辑配置- 减少条件判断复杂度：若分支条件需多个变量组合（如“金额+部门+合同类型”），纯系统判断可能需要写复杂规则；而用按钮指定分支，操作人直接选对应按钮，逻辑更简单。- 示例：采购流程中，采购人点击“标准采购”按钮走常规审批，点击“战略采购”按钮则触发供应商资质复核分支，无需系统自动判断采购类型。</p>
<p>d. 增强流程的交互体验- 操作明确性：按钮上的文字（如“同意”“驳回”“转派”）直接告知操作结果，避免操作人因误解规则选错分支。</p>
<p>e.进度可视化：点击按钮后，流程分支走向即时反馈（如弹窗提示“已转入加急通道”），提升使用者对流程的掌控感。</p>
<p>类比说明就像点外卖时选择“自取”或“配送”按钮：- 系统原本可能按距离自动判断，但可以通过按钮手动指定分支，更灵活地满足需求~审批人点击不同的审批操作，可以选择不同的流程审批路径，<br>具体配置方式如下</p>
<h3><img alt="" loading="lazy" style="font-size: 15px" data-src="https://img2024.cnblogs.com/blog/1431612/202507/1431612-20250703221218205-916809999.png" class="lazyload"><img alt="" loading="lazy" style="font-size: 14px" data-src="https://img2024.cnblogs.com/blog/1431612/202507/1431612-20250703221253405-2127584641.png" class="lazyload"><span style="font-size: 15px">为当前流程任务的「输出连线」配置条件，这样当审批人选择不同操作按钮时，便可以选择不同的执行路径</span><img alt="" loading="lazy" style="font-size: 14px" data-src="https://img2024.cnblogs.com/blog/1431612/202507/1431612-20250703221327895-191906338.png" class="lazyload"><img alt="" loading="lazy" style="font-size: 14px" data-src="https://img2024.cnblogs.com/blog/1431612/202507/1431612-20250703221417638-1529008965.png" class="lazyload"><span style="font-size: 16px">最后。实际的审批操作效果如下</span></h3>
<p><span style="font-size: 15px"><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/1431612/202507/1431612-20250704091117576-876445368.png" class="lazyload"></span></p>
<p><span style="font-size: 15px">&nbsp;</span></p>























</div>
</div>
<div class="clear"></div>

		</div>
		<div class="itemdesc">
			posted on 
<span id="post-date" data-last-update-days="0.6215277777777778" data-date-updated="2025-07-04 13:12">2025-07-03 22:17</span>&nbsp;
<a href="https://www.cnblogs.com/yizhizhangBlog">cv_ling123456</a>&nbsp;
阅读(<span id="post_view_count">244</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18964345);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18964345', targetLink: 'https://www.cnblogs.com/yizhizhangBlog/p/18964345', title: '工作流引擎系统-基于橙单（flowable）的系统开发-流程配置举例' })">举报</a>

		</div>
	