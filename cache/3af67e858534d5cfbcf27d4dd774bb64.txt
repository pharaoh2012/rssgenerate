
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/jijunjian/p/18896403" title="发布于 2025-05-26 09:56">
    <span role="heading" aria-level="2">AI工程师跑路了-SpingAi来帮忙</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        <img src="https://img2024.cnblogs.com/blog/88102/202505/88102-20250526095522953-1058991057.png" alt="AI工程师跑路了-SpingAi来帮忙" class="desc_img">
        百无聊赖中翻开了又一本金庸的小说《雪山飞狐》，江湖侠气，快意恩仇瞬间跃然纸上，唯有最后胡斐那一刀才让读者回到了现实。之前刚读了《明朝那些事儿》，最后重墨了李闯王，也不知道是不是世界太小了，还是巧合，《雪山飞狐》的背景就是李闯王的4大护卫家的百年爱恨情仇，翻完《雪山飞狐》，又巧合的拿起了《百年孤独》，又是百年的孤独与爱恨... 这也许就是读书的另类乐趣吧。
    </div>
<div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<span data-cke-copybin-start="1"><span data-cke-copybin-start="1">​</span></span>
<h1><span id="cke_bm_213S">&nbsp;从雪山飞狐到百年孤独</span></h1>
<p>百无聊赖中翻开了又一本金庸的小说《雪山飞狐》，江湖侠气，快意恩仇瞬间跃然纸上，唯有最后胡斐那一刀才让读者回到了现实。之前刚读了《明朝那些事儿》，最后重墨了李闯王，也不知道是不是世界太小了，还是巧合，《雪山飞狐》的背景就是李闯王的4大护卫家的百年爱恨情仇，翻完《雪山飞狐》，又巧合的拿起了《百年孤独》，又是百年的孤独与爱恨... 这也许就是读书的另类乐趣吧。</p>
<h1>Ai风吹进了公司</h1>
<p>这两年好像出了这样一个论点：不搞ai的公司，好像都抬不起头。我们也不例外，来了一个老板，来了一个Ai工程师开始捣鼓起了Ai。对公司有这样的看法，自然视乎对我们这样的程序员也有同样的看法。于是我也一咬牙，一跺脚净身来到新的团队充数。想着边打杂跑腿，边抱大腿噌点Ai知识。之前都是弄几个demo自嗨，不得劲儿，想出来看看真的Ai项目长啥样。</p>
<p>哪成想，新来的Ai工程师用的Go语言，看不懂。于是吭哧吭哧学习了解了下Go，配合Cusor总算是马马虎虎看明白代码了。每个月140元包月的费用总算是没白瞎了。</p>
<p>&nbsp;</p>
<h1>大腿跑了我怎么办</h1>
<p>本以为我在这个里从一个Javaer变一个Goer，可以在简历上写上精通GO，没成想，意外来得这么突然，Ai工程师跑了，大腿没有了，似乎短时间我要摇身一变成“大腿”了。但是留给我的时间不多，只有3周，其中还包括一个5.1长假。我陷入了深深的思索中，心中多个声音不断博弈：继续在原来的go上开发，能看和能写还是不是一会事儿，不可控；用Python实现Mult Agent，会demo到会写项目中间还间隔一个筋斗云，不可控；用java实现，自己是个熟练工，但没有一个成熟的框架可以用。</p>
<p>辗转反侧，夜不能寐，上下求索，各种尝试，进展微乎其微，觉得我的一只脚已经在公司外了。何以解忧，百年孤独。也许是巧合吧，当时的那种心情，与无人理解老何赛的科学追求，与无人理解到老乌尔苏拉如何维持大家庭的艰辛，与无人理解奥雷里亚诺上校战后的无奈，真可谓同病相连。</p>
<p>显然马尔克斯是懂人性的，是懂峰终定律的，所以几乎大部分布恩迪亚家的人，无论生前如何荒诞，生命的最后一刻都顿悟了，沐浴着最朴素的亲情。所以看是阴沉的书，给人的确实温暖。骆驼祥子，或者...整本书都是阴沉，阴沉，更阴沉，所有短暂的希望只是为了演绎更多失望。看完后只有一个感觉：绝望。</p>
<p>一边孤独，一边尝试，一边面试（除了招人，还希望能在面试过程中有所收获），终于看到了Spring Ai，欣喜若狂，突然感觉有了一根稻草。还没有等朝阳升起，一片乌云飘过 -- Srping Ai现在还只有里程碑版本 - M6。不幸中的万幸是 ，乌云不可怕，只要风够大 -- release版本会在5月发布。于是开始下定决心沿着javaer的路走下去。</p>
<p>&nbsp;</p>
<h1>有Sping Ai也不容易</h1>
<p>Sping Ai要求JDK17，Spring boot 3.x 一个简单的要求差点让人崩溃。一开始想着用现有spring boot 2.3的项目直接升级到Spring boot 3.x，毕竟Spring boot 一直以向下兼容著称，但是架不住原来项目依赖不太规范，一顿操作后，无奈放弃。最后从朋友那里弄来一个Spring boot 3项目，总算是跑起来了，但是这只是刚刚开始。</p>
<p>因为不是relase版本， 不同版本 artifactId，包名，类名都都在变化，导致很多文章，甚至官方文档都是针对某个过去的特定版本编写的demo，这一切就如同面对马孔多南边一望无际的沼泽一般，老何赛终其一生也没能走出去，5.1长假鏖战数天，也没有完整跑起来一个dmeo。怎么都无法找到这个包。</p>
<div class="cke_widget_wrapper cke_widget_block cke_widget_codeSnippet cke_widget_selected" data-cke-display-name="代码段" data-cke-filter="off" data-cke-widget-id="6" data-cke-widget-wrapper="1">
<div class="cnblogs_code">
<pre>&lt;dependency&gt;
   &lt;groupId&gt;org.springframework.ai&lt;/groupId&gt;
   &lt;artifactId&gt;spring-ai-openai-spring-boot-starter&lt;/artifactId&gt;
&lt;/dependency&gt;</pre>
</div>
<p>&nbsp;</p>
<span class="cke_reset cke_widget_drag_handler_container"><img src="https://img2024.cnblogs.com/blog/88102/202505/88102-20250526095602828-1451373968.gif" width="15" height="15" class="cke_reset cke_widget_drag_handler" title="点击并拖拽以移动" data-cke-widget-drag-handler="1"></span></div>
<p>秒针嘀嗒响个不停，时间如舟山的沙子从指间的飞快漏下，怎么都抓不住。漫长的煎熬下，甚至想再换个方向呢，换个思路呢，然而出门四顾心枉然，敢为路在何方！漫无目的的在Spring Ai 官方文档溜达（建议大家别看中文文档， 感觉是没有感情的机器翻译的），一个升级日志就默默的写那里，没有激动，没有喜悦，没有懊恼，靜靜换了Artifact ID ，demo自然的跑起来了，就像本该如何这般。</p>
<blockquote>
<h3 id="common-artifact-id-changes">Artifact ID Changes</h3>
<p>The naming pattern for Spring AI starter artifacts has changed. You’ll need to update your dependencies according to the following patterns:</p>
<ul>
<li>
<p>Model starters:&nbsp;<code>spring-ai-{model}-spring-boot-starter</code>&nbsp;→&nbsp;<code>spring-ai-starter-model-{model}</code></p>
</li>
<li>
<p>Vector Store starters:&nbsp;<code>spring-ai-{store}-store-spring-boot-starter</code>&nbsp;→&nbsp;<code>spring-ai-starter-vector-store-{store}</code></p>
</li>
<li>
<p>MCP starters:&nbsp;<code>spring-ai-mcp-{type}-spring-boot-starter</code>&nbsp;→&nbsp;<code>spring-ai-starter-mcp-{type}</code></p>
</li>
</ul>
</blockquote>
<h1>&nbsp;</h1>
<h1>Demo让时间流慢了</h1>
<p>撑开拳头，沙子掉得慢了，时间仿佛也通了人性，尽可能的的速度缓慢流逝。虽然时间来到了5月7号，还有两周时间，但感觉有了更多的时间去丰富功能了。虽然不直接支持腾讯向量库（不建议使用腾讯向量库，特别是对图的处理，有点难受），但为自定义实现提供了良好的基础。如果恰好也有用这个向量库的，可以参考下。</p>
<div class="cke_widget_wrapper cke_widget_block cke_widget_codeSnippet cke_widget_selected" data-cke-display-name="代码段" data-cke-filter="off" data-cke-widget-id="5" data-cke-widget-wrapper="1">
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">
 * @Author: JJ
 * @CreateTime: 2025-05-07  14:21
 * @Description: 腾讯向量存储
 </span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 0, 1)">
@Slf4j
@Component
</span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span> TencentVectorStore <span style="color: rgba(0, 0, 255, 1)">implements</span><span style="color: rgba(0, 0, 0, 1)"> VectorStore {

    </span><span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">final</span><span style="color: rgba(0, 0, 0, 1)"> VectorDBClient client;

    </span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> TencentVectorStore() {

        log.info(</span>"tencentVectorStore  init"<span style="color: rgba(0, 0, 0, 1)">);
        log.info(</span>"tencentVectorStore  init end"<span style="color: rgba(0, 0, 0, 1)">);
    }

    @Override
    </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">void</span> add(List&lt;Document&gt;<span style="color: rgba(0, 0, 0, 1)"> documents) {
        log.info(</span>"Adding " + documents.size() + " documents"<span style="color: rgba(0, 0, 0, 1)">);
    }

    @Override
    </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">void</span> delete(List&lt;String&gt;<span style="color: rgba(0, 0, 0, 1)"> idList) {
        log.info(</span>"Deleting " + idList.size() + " documents"<span style="color: rgba(0, 0, 0, 1)">);
    }

    @Override
    </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> delete(Filter.Expression filterExpression) {
        log.info(</span>"Deleting filter " +<span style="color: rgba(0, 0, 0, 1)"> filterExpression);
    }

    @Override
    </span><span style="color: rgba(0, 0, 255, 1)">public</span> List&lt;Document&gt;<span style="color: rgba(0, 0, 0, 1)"> similaritySearch(SearchRequest request) {

        AIDatabase db </span>= client.aiDatabase("db"<span style="color: rgba(0, 0, 0, 1)">);
        CollectionView collection </span>= db.describeCollectionView("cv1"<span style="color: rgba(0, 0, 0, 1)">);

        SearchOption searchOption </span>=<span style="color: rgba(0, 0, 0, 1)"> SearchOption.newBuilder()
                .withChunkExpand(Arrays.asList(</span>1,1<span style="color: rgba(0, 0, 0, 1)">))
                .withRerank(</span><span style="color: rgba(0, 0, 255, 1)">new</span> RerankOption(<span style="color: rgba(0, 0, 255, 1)">true</span>, 2.5))  <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 启用重排序，设置合理的召回倍率</span>
<span style="color: rgba(0, 0, 0, 1)">                .build();
        SearchByContentsParam searchByContentsParam </span>=<span style="color: rgba(0, 0, 0, 1)"> SearchByContentsParam.newBuilder()
                .withLimit(request.getTopK())
                .withSearchContentOption(searchOption)
                .withContent(request.getQuery())
                .build();
        log.info(</span>"searchByContentsParam {}"<span style="color: rgba(0, 0, 0, 1)">, JSONUtil.toJsonStr(searchByContentsParam));
        List</span>&lt;SearchContentInfo&gt; searchRes =<span style="color: rgba(0, 0, 0, 1)"> collection.search(searchByContentsParam);


        collection </span>= db.describeCollectionView("cv2"<span style="color: rgba(0, 0, 0, 1)">);
        searchOption </span>=<span style="color: rgba(0, 0, 0, 1)"> SearchOption.newBuilder()
                .withChunkExpand(Arrays.asList(</span>1,1<span style="color: rgba(0, 0, 0, 1)">))
                .withRerank(</span><span style="color: rgba(0, 0, 255, 1)">new</span> RerankOption(<span style="color: rgba(0, 0, 255, 1)">true</span>, 2.5))  <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 启用重排序，设置合理的召回倍率</span>
<span style="color: rgba(0, 0, 0, 1)">                .build();
        searchByContentsParam </span>=<span style="color: rgba(0, 0, 0, 1)"> SearchByContentsParam.newBuilder()
                .withLimit(request.getTopK())
                .withSearchContentOption(searchOption)
                .withContent(request.getQuery())
                .build();
        log.info(</span>"searchByContentsParam-healthcare_with_img {}"<span style="color: rgba(0, 0, 0, 1)">, JSONUtil.toJsonStr(searchByContentsParam));
        List</span>&lt;SearchContentInfo&gt; searchResWithImg =<span style="color: rgba(0, 0, 0, 1)"> collection.search(searchByContentsParam);
        searchRes.addAll(searchResWithImg);

        </span><span style="color: rgba(0, 0, 255, 1)">return</span> searchRes.stream().filter((rowRecord) -&gt; rowRecord.getScore() &gt;= request.getSimilarityThreshold()).map((rowRecord) -&gt;<span style="color: rgba(0, 0, 0, 1)"> {
            String docId </span>=<span style="color: rgba(0, 0, 0, 1)"> rowRecord.getDocumentSet().getDocumentSetId();

            JsonObject metadata </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> JsonObject();

            StringBuilder knowledge </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> StringBuilder();
            rowRecord.getData().getPre().forEach(a</span>-&gt;<span style="color: rgba(0, 0, 0, 1)">{
                knowledge.append(a</span>+"\n"<span style="color: rgba(0, 0, 0, 1)">);
            });
            knowledge.append(rowRecord.getData().getText()</span>+"\n"<span style="color: rgba(0, 0, 0, 1)">);
            rowRecord.getData().getNext().forEach(a</span>-&gt;<span style="color: rgba(0, 0, 0, 1)">{
                knowledge.append(a</span>+"\n"<span style="color: rgba(0, 0, 0, 1)">);
            });
            String content </span>=<span style="color: rgba(0, 0, 0, 1)"> knowledge.toString();

            log.debug(JSONUtil.toJsonStr(rowRecord));

            metadata </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> JsonObject();
            metadata.addProperty(</span>"documentSetName"<span style="color: rgba(0, 0, 0, 1)">, rowRecord.getDocumentSet().getDocumentSetName());
            metadata.addProperty(DocumentMetadata.DISTANCE.value(), </span>1.0F -<span style="color: rgba(0, 0, 0, 1)"> rowRecord.getScore());

            Gson gson </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Gson();
            Type type </span>= (<span style="color: rgba(0, 0, 255, 1)">new</span> TypeToken&lt;Map&lt;String, Object&gt;&gt;<span style="color: rgba(0, 0, 0, 1)">() {
            }).getType();


            </span><span style="color: rgba(0, 0, 255, 1)">return</span> Document.builder().id(docId).text(content).metadata(metadata != <span style="color: rgba(0, 0, 255, 1)">null</span> ?<span style="color: rgba(0, 0, 0, 1)"> (Map)gson.fromJson(metadata, type) : Map.of()).score(rowRecord.getScore()).build();
        }).toList();
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<span class="cke_reset cke_widget_drag_handler_container"><img src="https://img2024.cnblogs.com/blog/88102/202505/88102-20250526095602828-1451373968.gif" width="15" height="15" class="cke_reset cke_widget_drag_handler" title="点击并拖拽以移动" data-cke-widget-drag-handler="1"></span></div>
<p>想自定义历史消息查询，也非常简单，毕竟默认的JDBC目前支持的数据库类型有限。只需要实现add 与&nbsp; get 方法就可以了。 恰好有想自定义实现的同学也可以参靠下。</p>
<div class="cke_widget_wrapper cke_widget_block cke_widget_codeSnippet cke_widget_selected" data-cke-display-name="代码段" data-cke-filter="off" data-cke-widget-id="4" data-cke-widget-wrapper="1">
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">
 * @Author: jijunjian
 * @CreateTime: 2025-05-08  13:53
 * @Description: 聊天记录
 </span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 0, 1)">
@Slf4j
@Component
</span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span> BellaChatMemory <span style="color: rgba(0, 0, 255, 1)">implements</span><span style="color: rgba(0, 0, 0, 1)"> ChatMemory {

    @Resource
    </span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> ChatMessageV1Mapper chatMessageV1Mapper;

    @Resource
    RedisService redisService;

    @Override
    </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">void</span> add(String conversationId, List&lt;Message&gt;<span style="color: rgba(0, 0, 0, 1)"> messages) {
        log.info(</span>"Saving " + messages.size() + " messages to conversation " +<span style="color: rgba(0, 0, 0, 1)"> conversationId);

        MemberUserVo currentUser </span>=<span style="color: rgba(0, 0, 0, 1)"> MemberContextHolder.getCurrentUser();

        String lastedMessageKey </span>=<span style="color: rgba(0, 0, 0, 1)"> RedisKey.lastedMessageKey(conversationId);
        </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">用户的消息，手动添加，这里只添加系统的</span>
        messages.forEach(message -&gt;<span style="color: rgba(0, 0, 0, 1)"> {

            String userId </span>= "0"<span style="color: rgba(0, 0, 0, 1)">;
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (currentUser != <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">) {
                userId </span>=<span style="color: rgba(0, 0, 0, 1)"> currentUser.getUserCode().toString();
            }

             </span><span style="color: rgba(0, 0, 255, 1)">if</span> (!<span style="color: rgba(0, 0, 0, 1)">message.getMessageType().equals(MessageType.USER)){
                 chatMessageV1Mapper.insert(chatMessageV1SaveReqVO);
             }
        });


    }

    </span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">
     * </span><span style="color: rgba(128, 128, 128, 1)">@param</span><span style="color: rgba(0, 128, 0, 1)"> conversationId
     * </span><span style="color: rgba(128, 128, 128, 1)">@param</span><span style="color: rgba(0, 128, 0, 1)"> lastN
     * </span><span style="color: rgba(128, 128, 128, 1)">@deprecated</span>
     <span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 0, 1)">
    @Override
    </span><span style="color: rgba(0, 0, 255, 1)">public</span> List&lt;Message&gt;<span style="color: rgba(0, 0, 0, 1)"> get(String conversationId) {
       </span><span style="color: rgba(0, 0, 255, 1)">int</span> lastN = 20<span style="color: rgba(0, 0, 0, 1)">;
        log.debug(</span>"findByConversationId {}"<span style="color: rgba(0, 0, 0, 1)">, conversationId);
        LambdaQueryWrapper</span>&lt;ChatMessageV1DO&gt; queryWrapperX = <span style="color: rgba(0, 0, 255, 1)">new</span> LambdaQueryWrapperX&lt;ChatMessageV1DO&gt;<span style="color: rgba(0, 0, 0, 1)">()
                .eq(ChatMessageV1DO::getConversationId, conversationId)
                .eq(ChatMessageV1DO::getDeleted, </span>0<span style="color: rgba(0, 0, 0, 1)">)
                .orderByDesc(ChatMessageV1DO::getId)
                 .last( </span>"limit " +<span style="color: rgba(0, 0, 0, 1)"> lastN);

        List</span>&lt;ChatMessageV1DO&gt; chatMessageV1DOS =<span style="color: rgba(0, 0, 0, 1)"> chatMessageV1Mapper.selectList(queryWrapperX);
        </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">列表根据 id 升序</span>
        chatMessageV1DOS.sort((o1, o2) -&gt;<span style="color: rgba(0, 0, 0, 1)"> {
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (o1.getId() &gt;<span style="color: rgba(0, 0, 0, 1)"> o2.getId()) {
                </span><span style="color: rgba(0, 0, 255, 1)">return</span> 1<span style="color: rgba(0, 0, 0, 1)">;
            } </span><span style="color: rgba(0, 0, 255, 1)">else</span> <span style="color: rgba(0, 0, 255, 1)">if</span> (o1.getId() &lt;<span style="color: rgba(0, 0, 0, 1)"> o2.getId()) {
                </span><span style="color: rgba(0, 0, 255, 1)">return</span> -1<span style="color: rgba(0, 0, 0, 1)">;
            } </span><span style="color: rgba(0, 0, 255, 1)">else</span><span style="color: rgba(0, 0, 0, 1)"> {
                </span><span style="color: rgba(0, 0, 255, 1)">return</span> 0<span style="color: rgba(0, 0, 0, 1)">;
            }
        });
        List</span>&lt;Message&gt; messageList = <span style="color: rgba(0, 0, 255, 1)">new</span> ArrayList&lt;&gt;<span style="color: rgba(0, 0, 0, 1)">();

        chatMessageV1DOS.forEach(messageDo </span>-&gt;<span style="color: rgba(0, 0, 0, 1)"> {
            var type </span>=<span style="color: rgba(0, 0, 0, 1)"> ChatRoleEnum.getByCode(messageDo.getAuthorRole());
            </span><span style="color: rgba(0, 0, 255, 1)">switch</span><span style="color: rgba(0, 0, 0, 1)"> (type) {
                </span><span style="color: rgba(0, 0, 255, 1)">case</span><span style="color: rgba(0, 0, 0, 1)"> USER:
                    String content </span>=<span style="color: rgba(0, 0, 0, 1)"> messageDo.getContent();
                    </span><span style="color: rgba(0, 0, 255, 1)">if</span>(!<span style="color: rgba(0, 0, 0, 1)">Strings.isNullOrEmpty(messageDo.getImgs())){
                        content </span>= content + "\n 用户图片：" +<span style="color: rgba(0, 0, 0, 1)"> messageDo.getImgs();
                    }
                    messageList.add(</span><span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> UserMessage(content));
                    </span><span style="color: rgba(0, 0, 255, 1)">break</span><span style="color: rgba(0, 0, 0, 1)">;
                </span><span style="color: rgba(0, 0, 255, 1)">case</span><span style="color: rgba(0, 0, 0, 1)"> ASSISTANT:
                    messageList.add(</span><span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> AssistantMessage(messageDo.getContent()));
                    </span><span style="color: rgba(0, 0, 255, 1)">break</span><span style="color: rgba(0, 0, 0, 1)">;
                </span><span style="color: rgba(0, 0, 255, 1)">default</span><span style="color: rgba(0, 0, 0, 1)">:
                    log.error(</span>"Unknown chat role " +<span style="color: rgba(0, 0, 0, 1)"> messageDo.getAuthorRole());
            };
        });
        </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> messageList;
    }

    @Override
    </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> clear(String conversationId) {
        log.debug(</span>"deleteByConversationId {}"<span style="color: rgba(0, 0, 0, 1)">, conversationId);
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<img src="https://img2024.cnblogs.com/blog/88102/202505/88102-20250526095602828-1451373968.gif" width="15" height="15" class="cke_reset cke_widget_drag_handler" title="点击并拖拽以移动" style="font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px" data-cke-widget-drag-handler="1"></div>
<h1>两个特别留意的地方</h1>
<p>Tool Calling 尝试100次都是无法调用，官方文档上的demo也无法运行，后来看到需要一个特别的参数配置才可以，于是101次成功了，但是102次又失败了，因为有些模型不支持Toos，于是103次成功了，也持续成功了。</p>
<div class="cke_widget_wrapper cke_widget_block cke_widget_codeSnippet cke_widget_selected" data-cke-display-name="代码段" data-cke-filter="off" data-cke-widget-id="3" data-cke-widget-wrapper="1">
<div class="cnblogs_code">
<pre>       ChatOptions chatOptions =<span style="color: rgba(0, 0, 0, 1)"> ToolCallingChatOptions.builder()
                .internalToolExecutionEnabled(</span><span style="color: rgba(0, 0, 255, 1)">true</span>)</pre>
</div>
<p>&nbsp;</p>
<span class="cke_reset cke_widget_drag_handler_container"><img src="https://img2024.cnblogs.com/blog/88102/202505/88102-20250526095602828-1451373968.gif" width="15" height="15" class="cke_reset cke_widget_drag_handler" title="点击并拖拽以移动" data-cke-widget-drag-handler="1"></span></div>
<p>ContextualQueryAugmenter 一定要重写&nbsp;PromptTemplate 否则知识库中没有内容的话，总是回答不知道。还是直接在sping-ai原码中搜索才到这个提示，然后再针对性的解决了。原码中默认的PromptTemplate是这样的配置的。</p>
<div class="cke_widget_wrapper cke_widget_block cke_widget_codeSnippet cke_widget_selected" data-cke-display-name="代码段" data-cke-filter="off" data-cke-widget-id="2" data-cke-widget-wrapper="1">
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">final</span> PromptTemplate DEFAULT_PROMPT_TEMPLATE = <span style="color: rgba(0, 0, 255, 1)">new</span> PromptTemplate(<span style="color: rgba(0, 0, 0, 1)">"""
</span><span style="color: rgba(0, 0, 0, 1)">            Context information is below.

            </span>---------------------<span style="color: rgba(0, 0, 0, 1)">
            {context}
            </span>---------------------<span style="color: rgba(0, 0, 0, 1)">

            Given the context information and no prior knowledge, answer the query.

            Follow these rules:

            </span>1. If the answer is not in the context, just say that you don't know.
            2. Avoid statements like "Based on the context..." or "The provided information..."<span style="color: rgba(0, 0, 0, 1)">.

            Query: {query}

            Answer:
            </span>""");</pre>
</div>
<p>&nbsp;</p>
<span class="cke_reset cke_widget_drag_handler_container"><img src="https://img2024.cnblogs.com/blog/88102/202505/88102-20250526095602828-1451373968.gif" width="15" height="15" class="cke_reset cke_widget_drag_handler" title="点击并拖拽以移动" data-cke-widget-drag-handler="1"></span></div>
<p>于是这样初始化RetrievalAugmentationAdvisor问题就解决了。</p>
<div class="cke_widget_wrapper cke_widget_block cke_widget_codeSnippet cke_widget_selected" data-cke-display-name="代码段" data-cke-filter="off" data-cke-widget-id="1" data-cke-widget-wrapper="1">
<div class="cnblogs_code">
<pre>        Advisor retrievalAugmentationAdvisor =<span style="color: rgba(0, 0, 0, 1)"> RetrievalAugmentationAdvisor.builder()
                .queryTransformers(RewriteQueryTransformer.builder()
                        .chatClientBuilder(queryTransformerClient.mutate())
                        .build())
                .documentRetriever(VectorStoreDocumentRetriever.builder()
                        .similarityThreshold(</span>0.50<span style="color: rgba(0, 0, 0, 1)">)
                        .vectorStore(tencentVectorStore)
                        .build())
                .queryAugmenter(ContextualQueryAugmenter.builder()
                        .allowEmptyContext(</span><span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">)
                        .promptTemplate(contextualPrompt)
                        .build())
                .build();</span></pre>
</div>
<p>&nbsp;</p>
<span class="cke_reset cke_widget_drag_handler_container"><img src="https://img2024.cnblogs.com/blog/88102/202505/88102-20250526095602828-1451373968.gif" width="15" height="15" class="cke_reset cke_widget_drag_handler" title="点击并拖拽以移动" data-cke-widget-drag-handler="1"></span></div>
<h1>&nbsp;</h1>
<h1>我也来践行峰终定律</h1>
<p>有了上面的基础，522版本基本可控了，截至此时， MVP2.0算上基本上发布了，算是实现了阶段性目标， 那条悬在公司外的腿，又坚强的收了回来了，很明显，腿还小着，系统中定义了多个Agent去执行不同场景的任务，舌诊Agent完成图片的收集与实别，问卷Agent完成相关用户数据收集的场景... 再有意图识别route到具体worker Agent。实现了一个简单的chatBot不是啥大成果，但是有了迭代的基础，也因此有了希望。</p>
<p>&nbsp;</p>
<h1>后记</h1>
<p>此版本语音模式体验不是太理想，一个字：慢。目前的方案是LLM输出后，才用miniMax转语音，这样是快不了的。也许接下来是时候去看看openai的 realtime 的框架了，因为目前只有Python SDK ， 不知道有没有哪个朋友也给一个Python web 的项目。 想想就是一件高兴的事儿。</p>
<p>&nbsp;</p>
<p>因为app还在&nbsp;testflight 内测，我想想看看如何放到小程序让大家体验下。<br>
<span class="cke_widget_wrapper cke_widget_inline cke_widget_csdnlink cke_widget_selected" data-cke-display-name="a" data-cke-filter="off" data-cke-widget-id="0" data-cke-widget-wrapper="1"><a class="cke_widget_editable cke_widget_element" title="官方不让放二维码，只能放一个链接了" href="https://cos.ai-market.top/jj/my_qr_code.jpg" data-cke-enter-mode="2" data-cke-saved-href="https://cos.ai-market.top/jj/my_qr_code.jpg" data-cke-widget-data="%7B%22url%22%3A%22https%3A%2F%2Fcos.ai-market.top%2Fjj%2Fmy_qr_code.jpg%22%2C%22text%22%3A%22%E5%AE%98%E6%96%B9%E4%B8%8D%E8%AE%A9%E6%94%BE%E4%BA%8C%E7%BB%B4%E7%A0%81%EF%BC%8C%E5%8F%AA%E8%83%BD%E6%94%BE%E4%B8%80%E4%B8%AA%E9%93%BE%E6%8E%A5%E4%BA%86%22%2C%22desc%22%3A%22%22%2C%22icon%22%3A%22https%3A%2F%2Fcsdnimg.cn%2Frelease%2Fblog_editor_html%2Frelease2.3.9%2Fckeditor%2Fplugins%2FCsdnLink%2Ficons%2Ficon-default.png%3Ft%3DP4F5%22%2C%22isCard%22%3Afalse%2C%22hasResquest%22%3Atrue%2C%22iconDefault%22%3A%22https%3A%2F%2Fcsdnimg.cn%2Frelease%2Fblog_editor_html%2Frelease2.3.9%2Fckeditor%2Fplugins%2FCsdnLink%2Ficons%2Ficon-default.png%3Ft%3DP4F5%22%2C%22id%22%3A%2283dYC2-1748224355433%22%2C%22classes%22%3Anull%7D" data-cke-widget-editable="text" data-cke-widget-keep-attr="0" data-cke-widget-upcasted="1" data-link-icon="https://csdnimg.cn/release/blog_editor_html/release2.3.9/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=P4F5" data-link-title="官方不让放二维码，只能放一个链接了" data-widget="csdnlink" rel="noopener nofollow">官方不让放二维码，只能放一个链接了</a>。</span></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><br>
</p>



<span data-cke-copybin-start="1">
<span data-cke-copybin-end="1">​</span></span>
</div>
<div id="MySignature" role="contentinfo">
    版权声明：<br>
作者：J²<br>
<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=363643455&amp;site=qq&amp;menu=yes" target="_blank"><img src="http://wpa.qq.com/pa?p=1:363643455:13" alt="有事儿Q我" border="0"></a><br>

<img src="https://images.cnblogs.com/cnblogs_com/jijunjian/829006/o_jjqrcode.jpg" width="300" alt="有事儿W我" border="0"><br>


编辑：<a href="http://www.zcool.com.cn/u/1482434" target="_blank" title="妞妞主页">妞妞</a><br>
<a href="http://www.zcool.com.cn/u/1482434" target="_blank" title="妞妞主页">妞妞主页</a><br>
出处：http://www.cnblogs.com/jijunjian/<br>
本文版权归作者和博客园共有，欢迎转载，大家好，才是真的好！

<div id="back-to-top" title="返回顶部"><a href="#top"><span>&nbsp;</span></a></div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.19392414553125" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-26 13:41">2025-05-26 09:56</span>&nbsp;
<a href="https://www.cnblogs.com/jijunjian">2J</a>&nbsp;
阅读(<span id="post_view_count">530</span>)&nbsp;
评论(<span id="post_comment_count">13</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18896403);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18896403', targetLink: 'https://www.cnblogs.com/jijunjian/p/18896403', title: 'AI工程师跑路了-SpingAi来帮忙' })">举报</a>
</div>
        