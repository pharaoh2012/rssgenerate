
        <h2>
            <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/tangzeqi/p/18762950" title="发布于 2025-03-10 16:16">
    <span role="heading" aria-level="2">写一个简单的SQL生成工具</span>
    

</a>

        </h2>
        <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h1>知识点：</h1>
<div class="b_ac_overlay_header">
<div class="b_ac_c_title">
<h3>MyBatis 语法概览</h3>
</div>
<div class="b_ac_overlay_content">
<div id="dev_ac_wrapper_RichDevAnchor_AC_dynamic" data-priority="2" data-bm="59">
<div class="developer_answercard_wrapper devAnchorC">
<div id="dev_ac_wrapper_RichDevAnchor_AC" class="dev_ac_wrapper_RichDevAnchor_AC" data-dataurl="/RichDeveloper/Card?QueryType=Card&amp;TableNs=RichDevCardTable&amp;CardTable=Developer&amp;CardId=ca5ec5f3990f1afad883882ee2b90ac2&amp;TabId=0&amp;TabContentId=&amp;TabContentSnippetId=&amp;IsGeneratedContent=True&amp;IsActiveTab=True">
<div class="devmag_card_content">
<div>
<p>MyBatis 是一个强大的数据持久化框架，它提供了一种半自动化的 ORM 实现方式。通过 MyBatis，开发者可以通过简单的 XML 或注解来配置和映射原生信息，将接口和 Java 的 POJOs（Plain Old Java Objects，普通的 Java 对象）映射成数据库中的记录。</p>
</div>
<div>
<h3>基本查询语句</h3>
</div>
<div>
<p>在 MyBatis 中，基本的查询语句使用&nbsp;<span class="rd_inl_code">&lt;select&gt;&nbsp;标签定义。例如，以下是一个简单的查询语句：</span></p>
</div>
<div class="devmag_code">
<div id="rd_code_6">
<div class="devmag_cCodeBg">
<div>&lt;select id="selectPerson" parameterType="int" resultType="hashmap"&gt;</div>
<div>SELECT * FROM PERSON WHERE ID = #{id}</div>
<div>&lt;/select&gt;</div>
</div>
</div>
</div>
<div>
<p>这个语句被称为&nbsp;<span class="rd_inl_code">selectPerson，接受一个&nbsp;<span class="rd_inl_code">int&nbsp;类型的参数，并返回一个&nbsp;<span class="rd_inl_code">HashMap&nbsp;类型的对象。</span></span></span></p>
</div>
<div>
<h3>参数和结果映射</h3>
</div>
<div>
<p>MyBatis 允许使用&nbsp;<span class="rd_inl_code">#{}&nbsp;和&nbsp;<span class="rd_inl_code">${}&nbsp;两种方式获取参数值。其中&nbsp;<span class="rd_inl_code">#{}&nbsp;是预处理语句参数（如 JDBC 的&nbsp;<span class="rd_inl_code">?），而&nbsp;<span class="rd_inl_code">${}&nbsp;是直接进行字符串替换。使用&nbsp;<span class="rd_inl_code">#{}&nbsp;可以有效防止 SQL 注入。</span></span></span></span></span></span></p>
</div>
<div>
<h3>动态 SQL</h3>
</div>
<div>
<p>MyBatis 支持动态 SQL，这意味着 SQL 语句可以根据传入的参数动态变化。例如，使用&nbsp;<span class="rd_inl_code">&lt;if&gt;&nbsp;标签可以根据条件包含不同的 SQL 片段：</span></p>
</div>
<div class="devmag_code">
<div id="rd_code_13">
<div class="devmag_cCodeBg">
<div>&lt;select id="findActiveBlogLike"</div>
<div>resultType="Blog"&gt;</div>
<div>SELECT * FROM BLOG WHERE state = ‘ACTIVE’</div>
<div>&lt;if test="title != null"&gt;</div>
<div>AND title like #{title}</div>
<div>&lt;/if&gt;</div>
<div>&lt;/select&gt;</div>
</div>
</div>
</div>
<div>
<p>在这个例子中，如果&nbsp;<span class="rd_inl_code">title&nbsp;参数不为&nbsp;<span class="rd_inl_code">null，则会包含一个按标题进行模糊查询的条件。</span></span></p>
</div>
<div>
<h3>高级结果映射</h3>
</div>
<div>
<p>MyBatis 的&nbsp;<span class="rd_inl_code">&lt;resultMap&gt;&nbsp;元素提供了高级结果映射功能。它允许开发者定义如何从数据库结果集中加载对象，这是 MyBatis 最强大的特性之一。</span></p>
</div>
<div>
<h3>缓存</h3>
</div>
<div>
<p>MyBatis 提供了强大的缓存功能，可以通过简单地在映射文件中添加&nbsp;<span class="rd_inl_code">&lt;cache&gt;&nbsp;标签来启用二级缓存。</span></p>
</div>
<div>
<h3>总结</h3>
</div>
<div>
<p>MyBatis 通过简化 SQL 操作和提供动态 SQL 功能，使得数据库操作变得更加灵活和强大。它的高级映射功能和缓存机制也为开发者提供了更多的便利。</p>
</div>
</div>
</div>
</div>
</div>
</div>
<h1>代码：</h1>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.alibaba.fastjson2.util.DateUtils;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> org.apache.commons.lang3.ObjectUtils;

</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> java.util.Date;

</span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">interface</span><span style="color: rgba(0, 0, 0, 1)"> BaseService {

    </span><span style="color: rgba(0, 0, 255, 1)">default</span><span style="color: rgba(0, 0, 0, 1)"> Query query() {
        </span><span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Query();
    }

    </span><span style="color: rgba(0, 0, 255, 1)">default</span><span style="color: rgba(0, 0, 0, 1)"> Update update() {
        </span><span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Update();
    }

    </span><span style="color: rgba(0, 0, 255, 1)">default</span><span style="color: rgba(0, 0, 0, 1)"> Insert insert() {
        </span><span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Insert();
    }

    </span><span style="color: rgba(0, 0, 255, 1)">static</span><span style="color: rgba(0, 0, 0, 1)"> String value(Object value) {
        </span><span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)"> (ObjectUtils.isEmpty(value)) {
            </span><span style="color: rgba(0, 0, 255, 1)">return</span> " NULL "<span style="color: rgba(0, 0, 0, 1)">;
        }
        </span><span style="color: rgba(0, 0, 255, 1)">if</span> (value <span style="color: rgba(0, 0, 255, 1)">instanceof</span><span style="color: rgba(0, 0, 0, 1)"> Date) {
            </span><span style="color: rgba(0, 0, 255, 1)">return</span> "'" + DateUtils.format((Date) value, "yyyy-MM-dd HH:mm:ss") + "'"<span style="color: rgba(0, 0, 0, 1)">;
        }
        </span><span style="color: rgba(0, 0, 255, 1)">if</span> (value <span style="color: rgba(0, 0, 255, 1)">instanceof</span><span style="color: rgba(0, 0, 0, 1)"> String) {
            </span><span style="color: rgba(0, 0, 255, 1)">return</span> "'" + value + "'"<span style="color: rgba(0, 0, 0, 1)">;
        }
        </span><span style="color: rgba(0, 0, 255, 1)">if</span> (value <span style="color: rgba(0, 0, 255, 1)">instanceof</span><span style="color: rgba(0, 0, 0, 1)"> Number) {
            </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> value.toString();
        }
        </span><span style="color: rgba(0, 0, 255, 1)">throw</span> <span style="color: rgba(0, 0, 255, 1)">new</span> RuntimeException("无法解析的字段 :" +<span style="color: rgba(0, 0, 0, 1)"> value);
    }

    </span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Insert {
        StringBuilder sqlBuilder </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> StringBuilder();
        StringBuilder inertFieldBuilder </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> StringBuilder();
        StringBuilder inertValueBuilder </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> StringBuilder();

        </span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> Insert set(String column, Object value) {
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (inertFieldBuilder.length() &gt; 0) inertFieldBuilder.append(" , "<span style="color: rgba(0, 0, 0, 1)">);
            inertFieldBuilder.append(column);
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (inertValueBuilder.length() &gt; 0) inertValueBuilder.append(" , "<span style="color: rgba(0, 0, 0, 1)">);
            inertValueBuilder.append(</span>" "<span style="color: rgba(0, 0, 0, 1)">);
            inertValueBuilder.append(value(value));
            inertValueBuilder.append(</span>" "<span style="color: rgba(0, 0, 0, 1)">);
            </span><span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">;
        }

        </span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> String toString() {
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (inertFieldBuilder.length() &gt; 0 &amp;&amp; inertValueBuilder.length() &gt; 0<span style="color: rgba(0, 0, 0, 1)">) {
                sqlBuilder.append(</span>" ( "<span style="color: rgba(0, 0, 0, 1)">);
                sqlBuilder.append(inertFieldBuilder.toString());
                sqlBuilder.append(</span>" ) "<span style="color: rgba(0, 0, 0, 1)">);
                sqlBuilder.append(</span>" VALUES( "<span style="color: rgba(0, 0, 0, 1)">);
                sqlBuilder.append(inertValueBuilder.toString());
                sqlBuilder.append(</span>" ) "<span style="color: rgba(0, 0, 0, 1)">);
            }
            </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> sqlBuilder.toString();
        }
    }

    </span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Update {
        StringBuilder sqlBuilder </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> StringBuilder();
        StringBuilder updateBuilder </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> StringBuilder();

        </span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> Update set(String column, Object value) {
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (updateBuilder.length() &gt; 0) updateBuilder.append(" , "<span style="color: rgba(0, 0, 0, 1)">);
            updateBuilder.append(</span>" "<span style="color: rgba(0, 0, 0, 1)">);
            updateBuilder.append(column);
            updateBuilder.append(</span>" = "<span style="color: rgba(0, 0, 0, 1)">);
            updateBuilder.append(value(value));
            updateBuilder.append(</span>" "<span style="color: rgba(0, 0, 0, 1)">);
            </span><span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">;
        }

        </span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> String toString() {
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (updateBuilder.length() &gt; 0<span style="color: rgba(0, 0, 0, 1)">) {
                sqlBuilder.append(updateBuilder.toString());
            }
            </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> sqlBuilder.toString();
        }
    }

    </span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Query {
        StringBuilder whereBuilder </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> StringBuilder();
        StringBuilder sqlBuilder </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> StringBuilder();

        </span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> Query eq(String column, Object value) {
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (ObjectUtils.isEmpty(value)) <span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">;
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (whereBuilder.length() &gt; 0) whereBuilder.append(" AND "<span style="color: rgba(0, 0, 0, 1)">);
            whereBuilder.append(</span>" "<span style="color: rgba(0, 0, 0, 1)">);
            whereBuilder.append(column);
            whereBuilder.append(</span>" = "<span style="color: rgba(0, 0, 0, 1)">);
            whereBuilder.append(value(value));
            whereBuilder.append(</span>" "<span style="color: rgba(0, 0, 0, 1)">);
            </span><span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">;
        }

        </span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> Query or(String column, Object value) {
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (ObjectUtils.isEmpty(value)) <span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">;
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (whereBuilder.length() &gt; 0) whereBuilder.append(" OR "<span style="color: rgba(0, 0, 0, 1)">);
            whereBuilder.append(</span>" "<span style="color: rgba(0, 0, 0, 1)">);
            whereBuilder.append(column);
            whereBuilder.append(</span>" = "<span style="color: rgba(0, 0, 0, 1)">);
            whereBuilder.append(value(value));
            whereBuilder.append(</span>" "<span style="color: rgba(0, 0, 0, 1)">);
            </span><span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">;
        }

        </span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> Query like(String column, String value) {
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (ObjectUtils.isEmpty(value)) <span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">;
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (whereBuilder.length() &gt; 0) whereBuilder.append(" AND "<span style="color: rgba(0, 0, 0, 1)">);
            whereBuilder.append(</span>" "<span style="color: rgba(0, 0, 0, 1)">);
            whereBuilder.append(column);
            whereBuilder.append(</span>" LIKE '%"<span style="color: rgba(0, 0, 0, 1)">);
            whereBuilder.append(value);
            whereBuilder.append(</span>"%' "<span style="color: rgba(0, 0, 0, 1)">);
            </span><span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">;
        }

        </span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> Query in(String column, Object... values) {
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (ObjectUtils.isEmpty(values)) <span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">;
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (whereBuilder.length() &gt; 0) whereBuilder.append(" AND "<span style="color: rgba(0, 0, 0, 1)">);
            whereBuilder.append(</span>" "<span style="color: rgba(0, 0, 0, 1)">);
            whereBuilder.append(column);
            whereBuilder.append(</span>" IN( "<span style="color: rgba(0, 0, 0, 1)">);
            </span><span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> i;
            i </span>= 0<span style="color: rgba(0, 0, 0, 1)">;
            </span><span style="color: rgba(0, 0, 255, 1)">for</span><span style="color: rgba(0, 0, 0, 1)"> (Object value : values) {
                </span><span style="color: rgba(0, 0, 255, 1)">if</span> (i &gt; 0) whereBuilder.append(" , "<span style="color: rgba(0, 0, 0, 1)">);
                i</span>++<span style="color: rgba(0, 0, 0, 1)">;
                whereBuilder.append(value(value));
            }
            whereBuilder.append(</span>" )"<span style="color: rgba(0, 0, 0, 1)">);
            </span><span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">;
        }

        </span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> Query noIn(String column, Object... values) {
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (ObjectUtils.isEmpty(values)) <span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">;
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (whereBuilder.length() &gt; 0) whereBuilder.append(" AND "<span style="color: rgba(0, 0, 0, 1)">);
            whereBuilder.append(</span>" "<span style="color: rgba(0, 0, 0, 1)">);
            whereBuilder.append(column);
            whereBuilder.append(</span>" NOT IN( "<span style="color: rgba(0, 0, 0, 1)">);
            </span><span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> i;
            i </span>= 0<span style="color: rgba(0, 0, 0, 1)">;
            </span><span style="color: rgba(0, 0, 255, 1)">for</span><span style="color: rgba(0, 0, 0, 1)"> (Object value : values) {
                </span><span style="color: rgba(0, 0, 255, 1)">if</span> (i &gt; 0) whereBuilder.append(" , "<span style="color: rgba(0, 0, 0, 1)">);
                i</span>++<span style="color: rgba(0, 0, 0, 1)">;
                whereBuilder.append(value(value));
            }
            whereBuilder.append(</span>" )"<span style="color: rgba(0, 0, 0, 1)">);
            </span><span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">;
        }

        </span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> Query isNull(String column) {
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (whereBuilder.length() &gt; 0) whereBuilder.append(" AND "<span style="color: rgba(0, 0, 0, 1)">);
            whereBuilder.append(</span>" ( LENGTH( "<span style="color: rgba(0, 0, 0, 1)">);
            whereBuilder.append(column);
            whereBuilder.append(</span>" ) &lt;=0 OR IS NULL ) "<span style="color: rgba(0, 0, 0, 1)">);
            </span><span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">;
        }

        </span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> Query notNull(String column) {
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (whereBuilder.length() &gt; 0) whereBuilder.append(" AND "<span style="color: rgba(0, 0, 0, 1)">);
            whereBuilder.append(</span>" ( LENGTH( "<span style="color: rgba(0, 0, 0, 1)">);
            whereBuilder.append(column);
            whereBuilder.append(</span>" ) &gt;0 OR IS NOT NULL ) "<span style="color: rgba(0, 0, 0, 1)">);
            </span><span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">;
        }

        </span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> Query sql(Object sql) {
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (ObjectUtils.isEmpty(sql)) <span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">;
            whereBuilder.append(sql.toString());
            </span><span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">;
        }

        </span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> Query and(String whereSql) {
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (ObjectUtils.isEmpty(whereSql)) <span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">;
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (whereBuilder.length() &gt; 0) whereBuilder.append(" AND "<span style="color: rgba(0, 0, 0, 1)">);
            whereBuilder.append(</span>"( "<span style="color: rgba(0, 0, 0, 1)">);
            whereBuilder.append(whereSql);
            whereBuilder.append(</span>" )"<span style="color: rgba(0, 0, 0, 1)">);
            </span><span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">;
        }

        </span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> Query or(String whereSql) {
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (ObjectUtils.isEmpty(whereSql)) <span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">;
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (whereBuilder.length() &gt; 0) whereBuilder.append(" OR "<span style="color: rgba(0, 0, 0, 1)">);
            whereBuilder.append(</span>"( "<span style="color: rgba(0, 0, 0, 1)">);
            whereBuilder.append(whereSql);
            whereBuilder.append(</span>" )"<span style="color: rgba(0, 0, 0, 1)">);
            </span><span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">;
        }

        </span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> String toString() {
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (whereBuilder.length() &gt; 0<span style="color: rgba(0, 0, 0, 1)">) {
                sqlBuilder.append(whereBuilder.toString());
            }
            </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> sqlBuilder.toString();
        }


    }
}</span></pre>
</div>
<h1>作为参数通过mapper传入XML作为【条件|行为】使用：</h1>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">  name = "张三"</span>
query().eq("name","张三"<span style="color: rgba(0, 0, 0, 1)">).toString();
</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">  name = "张三"</span>
update().set("name","张三"<span style="color: rgba(0, 0, 0, 1)">).toString();
</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">  (name) values("张三")</span>
insert().set("name","张三").toString();</pre>
</div>
<p>&nbsp;</p>
</div>
</div>
<div class="clear"></div>

        <p class="postfoot">
            posted on 
<span id="post-date" data-last-update-days="0.4985575340810185" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-10 16:18">2025-03-10 16:16</span>&nbsp;
<a href="https://www.cnblogs.com/tangzeqi">instr</a>&nbsp;
阅读(<span id="post_view_count">293</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18762950" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18762950);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18762950', targetLink: 'https://www.cnblogs.com/tangzeqi/p/18762950', title: '写一个简单的SQL生成工具' })">举报</a>

        </p>
    