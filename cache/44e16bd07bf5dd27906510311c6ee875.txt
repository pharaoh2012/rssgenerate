
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/powertoolsteam/p/18970200" title="发布于 2025-07-07 11:20">
    <span role="heading" aria-level="2">.NET AI 模板</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="引言">引言</h2>
<p>随着人工智能技术的快速发展，AI应用开发已成为开发者必备的技能之一。然而，对于许多.NET开发者来说，如何快速上手AI开发仍然是一个挑战。微软推出的.NET AI模板预览版正是为了解决这一问题而生，为开发者提供了构建智能聊天应用的脚手架和最佳实践指南。</p>
<p>本文将详细介绍如何安装和使用这个模板，探索其核心功能，并通过实际案例展示如何扩展其能力，帮助.NET开发者快速进入AI开发领域。</p>
<h3 id="1-安装与基本使用">1. 安装与基本使用</h3>
<h4 id="11-安装模板">1.1 安装模板</h4>
<p>要开始使用.NET AI模板，首先需要在终端中运行以下命令安装模板包：</p>
<pre><code class="language-bash">dotnet new install Microsoft.Extensions.AI.Templates
</code></pre>
<p>安装完成后，您可以通过多种方式创建新项目：</p>
<ul>
<li>在Visual Studio中通过"文件 &gt; 新建 &gt; 项目"菜单</li>
<li>在Visual Studio Code中使用C# Dev Kit扩展</li>
<li>直接在命令行运行：<code>dotnet new aichatweb</code></li>
</ul>
<h4 id="12-项目结构概览">1.2 项目结构概览</h4>
<p>该模板生成的项目包含以下关键组件：</p>
<ul>
<li><strong>Blazor Web应用</strong>：基于现代Web技术构建的聊天界面</li>
<li><strong>Microsoft.Extensions.AI抽象库</strong>：提供与AI模型交互的统一接口</li>
<li><strong>Microsoft.Extensions.VectorData</strong>：处理向量数据的核心组件</li>
<li><strong>数据提取与处理服务</strong>：位于<code>/Services/Ingestion/DataIngestor.cs</code></li>
</ul>
<h4 id="13-快速启动">1.3 快速启动</h4>
<p>默认配置使用GitHub Models作为AI提供商和本地向量存储，几乎不需要额外设置即可开始开发。这种设计大大降低了入门门槛，开发者可以立即专注于业务逻辑而非基础设施。</p>
<p><img src="https://devblogs.microsoft.com/dotnet-ch/wp-content/uploads/sites/75/2025/03/visual-studio-template-options.png" alt="Image visual studio template options" loading="lazy"></p>
<h3 id="2-核心功能解析">2. 核心功能解析</h3>
<ul>
<li>
<p><strong>与自定义数据聊天</strong>：该模板允许您创建基于聊天的 UI，与示例 PDF 或您的自定义数据进行交互。</p>
</li>
<li>
<p><strong>本地与 Azure 集成</strong>：支持本地向量存储以进行原型开发，同时也支持 Azure AI Search 以实现更高级的配置。</p>
</li>
<li>
<p><strong>可自定义的代码</strong>：生成的代码包含用于聊天交互、引用追踪和后续建议的 UI 组件，您可以根据需要自定义或移除这些组件。</p>
</li>
<li>
<p><strong>数据提取</strong>：模板包含数据提取、缓存和处理的代码，使您能够处理各种数据源和格式。</p>
</li>
</ul>
<h3 id="3-开发环境集成">3. 开发环境集成</h3>
<h4 id="31-visual-studio体验">3.1 Visual Studio体验</h4>
<p>在VS中创建项目的步骤：</p>
<ol>
<li>通过模板安装后，搜索"AI Chat"</li>
<li>选择项目名称和位置</li>
<li>配置AI提供商和向量存储</li>
<li>开始开发</li>
</ol>
<h4 id="32-vs-code配置">3.2 VS Code配置</h4>
<p>对于VS Code用户需要：</p>
<ol>
<li>安装C# Dev Kit扩展</li>
<li>使用".NET: New Project..."命令</li>
<li>选择AI聊天模板</li>
<li>同样配置提供商和存储选项</li>
</ol>
<p><img src="https://devblogs.microsoft.com/dotnet-ch/wp-content/uploads/sites/75/2025/03/AITemplatePreview-VSCode.gif" alt="Image AITemplatePreview VSCode" loading="lazy"></p>
<h4 id="33-跨平台支持">3.3 跨平台支持</h4>
<p>模板完全支持：</p>
<ul>
<li>Windows开发环境</li>
<li>macOS开发</li>
<li>Linux开发(需.NET支持)</li>
</ul>
<h3 id="4-扩展功能开发">4. 扩展功能开发</h3>
<h4 id="41-添加自定义工具">4.1 添加自定义工具</h4>
<p>通过Microsoft.Extensions.AI可以轻松扩展功能。例如添加天气查询：</p>
<pre><code class="language-csharp">private async Task&lt;string&gt; GetWeather([Description("The city, correctly capitalized")] string city)
{
    string[] weatherValues = ["Sunny", "Cloudy", "Rainy", "Snowy", "Balmy", "Bracing"];
    return city == "London" ? "Drizzle" : weatherValues[Random.Shared.Next(weatherValues.Length)];
}
</code></pre>
<p>然后注册到聊天选项：</p>
<pre><code class="language-csharp">chatOptions.Tools =
[
    AIFunctionFactory.Create(SearchAsync),
    AIFunctionFactory.Create(GetWeather)
];
</code></pre>
<p><img src="https://devblogs.microsoft.com/dotnet-ch/wp-content/uploads/sites/75/2025/03/weather-code-example.png" alt="Image weather code example" loading="lazy"></p>
<h2 id="结论">结论</h2>
<p>.NET AI模板预览版为开发者提供了快速进入AI领域的捷径，其核心价值体现在：</p>
<ol>
<li><strong>降低门槛</strong>：通过预制模板和默认配置，开发者无需深入了解AI基础设施即可构建智能应用</li>
<li><strong>灵活扩展</strong>：基于Microsoft.Extensions.AI的架构允许深度定制和功能扩展</li>
<li><strong>生产就绪</strong>：支持从原型到生产的全流程，特别是与Azure服务的无缝集成</li>
<li><strong>现代开发体验</strong>：完美融入Visual Studio和VS Code工作流，符合.NET开发者习惯</li>
</ol>

</div>
<div id="MySignature" role="contentinfo">
    <hr>
<br>
<p style="font-size: 16px; font-family: 微软雅黑, 黑体, Arial; color: #000">本文是由葡萄城技术开发团队发布，转载请注明出处：<a href="https://www.grapecity.com.cn/" target="_blank">葡萄城官网</a></p>
<!--p style="font-size: 16px; font-family: 微软雅黑, 黑体, Arial; color: #000">了解企业级低代码开发平台，请前往<a href="https://www.grapecity.com.cn/solutions/huozige" target="_blank">活字格</a>
</p><p style="font-size: 16px; font-family: 微软雅黑, 黑体, Arial; color: #000">了解可嵌入您系统的在线 Excel，请前往<a href="https://www.grapecity.com.cn/developer/spreadjs" target="_blank">SpreadJS纯前端表格控件</a></p>
<p style="font-size: 16px; font-family: 微软雅黑, 黑体, Arial; color: #000">了解嵌入式的商业智能和报表软件，请前往<a href="https://www.grapecity.com.cn/solutions/wyn" target="_blank">Wyn Enterprise
</a></p-->

<br>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-07 11:20">2025-07-07 11:20</span>&nbsp;
<a href="https://www.cnblogs.com/powertoolsteam">葡萄城技术团队</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18970200);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18970200', targetLink: 'https://www.cnblogs.com/powertoolsteam/p/18970200', title: '.NET AI 模板' })">举报</a>
</div>
        