
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/henjay724/p/18899171" title="发布于 2025-05-27 18:33">
    <span role="heading" aria-level="2">痞子衡嵌入式：i.MXRT10xx系列ROM的UART SDP设置不同波特率的方法与实践</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<hr>
<p>　　大家好，我是痞子衡，是正经搞技术的痞子。今天痞子衡给大家介绍的是<strong>i.MXRT10xx系列ROM的UART SDP设置不同波特率的方法</strong>。</p>
<p>　　恩智浦 i.MXRT 四位数系列目前分为 RT10xx 和 RT11xx，前者的 BootROM 支持的上位机通信协议叫 SDP（来自于 i.MX），后者通信协议是 blhost（来自于 Kinetis），两种协议都实现了通过 UART/USB 与上位机通信的一系列命令。blhost 协议支持 UART 波特率自动识别，而 SDP 协议不支持自动识别，但可以通过专用命令设置不同 UART 波特率。</p>
<p>　　近期有一个 RT1011 日本客户，在查看芯片参考手册时发现 <strong>System Boot</strong> 章节介绍了 UART SDP 可以支持设置不同的波特率，客户想知道能够支持的最大波特率，这点在手册里并未提及，而在恩智浦官方工具（<a href="https://www.nxp.com/design/design-center/software/development-software/mcuxpresso-software-and-tools-/mcuxpresso-secure-provisioning-tool:MCUXPRESSO-SECURE-PROVISIONING" target="_blank" rel="noopener nofollow">Secure Provisioning Tool，简称 SPT</a>）里可设的最大波特率是 460800（V10 版本），那么这就是极限吗？今天痞子衡来实测一下：</p>
<h3 id="一sdp协议简介">一、SDP协议简介</h3>
<p>　　SDP 协议在不同的 RT10xx 型号上是有区别的，其中在 RT1060 上协议最全，一共支持 7 条命令，而在 RT1010 上则简化为仅支持 4 条命令。不管怎样 SET_BAUDRATE 是基础命令。</p>
<p>　　SDP 协议命令组成也足够简单，固定 16 个字节，由 COMMAND TYPE + ADDRESS + FORMAT + DATA COUNT + DATA + RESERVED 组成，简单又粗暴。</p>
<p><img src="https://raw.githubusercontent.com/JayHeng/pzhmcu-picture/master/cnblogs/i.MXRT10xx_UART_SDP_bandrate_CMDlist.png" alt="" loading="lazy"></p>
<h3 id="二secure-provisioning-tool设置">二、Secure Provisioning Tool设置</h3>
<p>　　恩智浦官方工具 SPT 里集成了 SDP 协议支持，我们只需要在界面里选择不同波特率即可，从最低 14400 到最高 460800，不过遗憾的是波特率窗口并不支持用户手动输入，所以在这个上位机工具里没法测极限波特率。</p>
<p><img src="https://raw.githubusercontent.com/JayHeng/pzhmcu-picture/master/cnblogs/i.MXRT10xx_UART_SDP_bandrate_SPTtest.png" alt="" loading="lazy"></p>
<p>　　熟悉这个上位机的朋友应该知道，其底层依赖得是 SPSDK，这是一个基于 Python 实现的命令集合 SDK。其用于 SDP 通信的工具是 sdphost，命令列表里有 set-baudrate 支持，我们当然可以使用这个工具来做测试。</p>
<blockquote>
<p><a href="https://spsdk.readthedocs.io/en/latest/apps/sdphost.html" target="_blank" rel="noopener nofollow">https://spsdk.readthedocs.io/en/latest/apps/sdphost.html</a></p>
</blockquote>
<h3 id="三在rt1010上手工测试">三、在RT1010上手工测试</h3>
<p>　　痞子衡也开发过一个上位机 <a href="https://github.com/JayHeng/NXP-MCUBootUtility" target="_blank" rel="noopener nofollow">MCUBootUtility</a> （这是官方工具 SPT 的前身），其底层依赖得是 \tools\sdphost\win\sdphost.exe，这个程序是最早的 SDP 协议工具，但是比较遗憾的是其不支持 set-baudrate 命令并且该工具已经不再升级。今天我们就结合这个古早的工具以及串口调试助手来做极限波特率测试，顺便了解一下 SDP 协议里的数据包格式。</p>
<p>　　准备一块 RT1010 板卡，调到 SDP 模式，将 UART 连接好便可以开始测试，先用 sdphost.exe -- error-status 命令测试一下连通性（-d 参数可以看到与上位机交互数据包），波特率仅能设置为默认的 115200：</p>
<p><img src="https://raw.githubusercontent.com/JayHeng/pzhmcu-picture/master/cnblogs/i.MXRT10xx_UART_SDP_bandrate_CMDtest1.png" alt="" loading="lazy"></p>
<p>　　当然也可以直接用串口调试助手（依然是默认 115200 波特率），手工打入 16 个字节的 error-status 数据包，看看结果是不是和 sdphost.exe 一致：</p>
<p><img src="https://raw.githubusercontent.com/JayHeng/pzhmcu-picture/master/cnblogs/i.MXRT10xx_UART_SDP_bandrate_CMDtest2.png" alt="" loading="lazy"></p>
<p>　　这时候继续在串口调试助手里使用默认 115200 波特率发送 set-baudrate 数据包，注意数据包里 ADDRESS 为波特率值时是大端模式(0x0000E100 对应波特率 57600)，当收到 RT1010 传来的 ACK 0x900dd009 时表明波特率设置"成功"（这里有个误区，MCU 发送 ACK 并不是用新设置的波特率，而用得与当前上位机一致的波特率，这个 ACK 仅仅代表正确收到了上位机 set-baudrate 命令）。如果在此基础上再次设波特率，则需要调整串口调试助手里的波特率与上次设置一致。</p>
<p><img src="https://raw.githubusercontent.com/JayHeng/pzhmcu-picture/master/cnblogs/i.MXRT10xx_UART_SDP_bandrate_CMDtest3.png" alt="" loading="lazy"></p>
<p><img src="https://raw.githubusercontent.com/JayHeng/pzhmcu-picture/master/cnblogs/i.MXRT10xx_UART_SDP_bandrate_CMDbaud.png" alt="" loading="lazy"></p>
<p>　　要测试新波特率是否设置成功，还是要继续使用 sdphost -- error-status 命令做一次新的测试。最终痞子衡实测 RT1010 上最高波特率可达 512000 （614400 测试失败），由于痞子衡基于的环境里 Host 是 RT1010-EVK 上的 DAP-LINK 里自带的 USB 转 UART 功能，实际最高波特率性能可能也受此影响，大家可以选择更高性能的 Host 做更极限的测试。</p>
<p>　　至此，i.MXRT10xx系列ROM的UART SDP设置不同波特率的方法痞子衡便介绍完毕了，掌声在哪里~~~</p>
<h3 id="欢迎订阅">欢迎订阅</h3>
<p>文章会同时发布到我的 <a href="https://www.cnblogs.com/henjay724/" target="_blank">博客园</a>、<a href="https://blog.csdn.net/henjay724" target="_blank" rel="noopener nofollow">CSDN</a>、<a href="http://weixin.sogou.com/weixin?type=1&amp;query=%E7%97%9E%E5%AD%90%E8%A1%A1%E5%B5%8C%E5%85%A5%E5%BC%8F" target="_blank" rel="noopener nofollow">微信公众号</a>、<a href="https://www.zhihu.com/people/henjay724" target="_blank" rel="noopener nofollow">知乎</a>、<a href="https://www.eefocus.com/user/3876937/article/" target="_blank" rel="noopener nofollow">与非网</a>、<a href="https://blog.chinaaet.com/henjay724" target="_blank" rel="noopener nofollow">电子技术应用AET</a>、<a href="https://www.dianyuan.com/people/912268" target="_blank" rel="noopener nofollow">电子星球</a>、<a href="https://blog.51cto.com/henjay724" target="_blank" rel="noopener nofollow">51CTO</a> 平台上。</p>
<p>微信搜索"<strong>痞子衡嵌入式</strong>"或者扫描下面二维码，就可以在手机上第一时间看了哦。</p>
<p><img src="https://raw.githubusercontent.com/JayHeng/pzhmcu-picture/master/github/pzhMcu_qrcode_258x258.jpg" alt="" loading="lazy"></p>

</div>
<div id="MySignature" role="contentinfo">
    <div class="autograph"> 
  <p style="font-family: 楷体; font-size: 15px">&nbsp;&nbsp;最后欢迎关注痞子衡个人微信公众号【痞子衡嵌入式】，一个专注嵌入式技术的公众号，跟着痞子衡一起玩转嵌入式。</p>

  <img style="float: left" src="https://img2022.cnblogs.com/blog/623659/202211/623659-20221116165755872-427238307.jpg" alt="痞子衡嵌入式-微信二维码" class="img_avatar">

  <img style="float: right" src="http://henjay724.com/image/cnblogs/baogeMcu_payment_wechat_150x150.png" alt="痞子衡嵌入式-微信收款二维码" class="img_avatar">

  <img style="float: right" src="http://henjay724.com/image/cnblogs/baogeMcu_payment_alipay_150x150.jpg" alt="痞子衡嵌入式-支付宝收款二维码" class="img_avatar">

<br>
  <p>&nbsp;&nbsp;衡杰(痞子衡)，目前就职于某全球顶级半导体原厂MCU系统部门，担任高级嵌入式系统应用工程师。</p>

  <p>&nbsp;&nbsp;专栏内所有文章的转载请注明出处：<a href="http://www.cnblogs.com/henjay724/" target="_blank">http://www.cnblogs.com/henjay724/</a></p>

  <p>&nbsp;&nbsp;与痞子衡进一步交流或咨询业务合作请发邮件至 <a href="hengjie1989@foxmail.com" target="_blank">hengjie1989@foxmail.com</a></p>

  <p>&nbsp;&nbsp;可以关注痞子衡的Github主页 <a href="https://github.com/JayHeng" target="_blank">https://github.com/JayHeng</a>，有很多好玩的嵌入式项目。</p>

  <p><font color="yellow">&nbsp;&nbsp;关于专栏文章有任何疑问请直接在博客下面留言，痞子衡会及时回复免费(划重点)答疑。</font></p>

  <p><font color="red">&nbsp;&nbsp;痞子衡邮箱已被私信挤爆，技术问题不推荐私信，坚持私信请先扫码付款(5元起步)再发。</font></p>
<br>
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.44578929214351853" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-27 22:30">2025-05-27 18:33</span>&nbsp;
<a href="https://www.cnblogs.com/henjay724">痞子衡</a>&nbsp;
阅读(<span id="post_view_count">42</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18899171);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18899171', targetLink: 'https://www.cnblogs.com/henjay724/p/18899171', title: '痞子衡嵌入式：i.MXRT10xx系列ROM的UART SDP设置不同波特率的方法与实践' })">举报</a>
</div>
        