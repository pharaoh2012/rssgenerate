
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/mingupupu/p/18745928" title="发布于 2025-03-02 11:20">
    <span role="heading" aria-level="2">创建一个MCP服务器，并在Cline中使用，增强自定义功能。</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="mcp介绍">MCP介绍</h2>
<p>MCP 是一个开放协议，它标准化了应用程序如何向LLMs提供上下文。可以将 MCP 视为 AI 应用程序的 USB-C 端口。正如 USB-C 提供了一种标准化的方法来将您的设备连接到各种外围设备和配件一样，MCP 提供了一种标准化的方法来将 AI 模型连接到不同的数据源和工具。</p>
<p>MCP 帮助您在 LLMs 之上构建代理和复杂的工作流程。LLMs 经常需要与数据和工具集成，MCP 提供了：</p>
<ul>
<li>一个不断增长的预构建集成列表，您的 LLM 可以直接插入其中</li>
<li>在LLM供应商和厂商之间切换的灵活性</li>
<li>在您的基础设施内保护数据的最佳实践</li>
</ul>
<p>架构图如下所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202503/3288240-20250302112017109-1821288141.png" alt="image-20250302094005211" loading="lazy"></p>
<h2 id="创建一个mcp服务器">创建一个MCP服务器</h2>
<p>可以把Cline当成是一个MCP客户端，现在我们只要构建了一个MCP服务就可以在Cline中使用。</p>
<p>我想创建一个使用duckduckgo搜索的MCP服务器，可以这样做。</p>
<pre><code class="language-python"># Create a new directory for our project
uv init duckduckgo_mcp
cd duckduckgo_mcp

# Create virtual environment and activate it
uv venv
.venv\Scripts\activate

# Install dependencies
uv add mcp[cli] duckduckgo_search
</code></pre>
<p>main.py中这样写：</p>
<pre><code class="language-python"># server.py
from mcp.server.fastmcp import FastMCP
from duckduckgo_search import DDGS
from typing import Annotated
from pathlib import Path

from pydantic import BaseModel, Field

# Create an MCP server
mcp = FastMCP("DuckDuckGo-Search")
   
@mcp.tool()
def run_duckduckgo(query:str):
  """
  获取网络信息
  """
  results = DDGS().text(query, max_results=10)

  return results

if __name__ == "__main__":
   print("Server running")
   mcp.run(transport='stdio')
</code></pre>
<p>就是这么简单，一个使用duckduckgo获取网络信息的MCP服务器就创建好了。</p>
<h2 id="在cline中使用">在Cline中使用</h2>
<p>打开MCP配置文件：</p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202503/3288240-20250302112017107-1839676186.png" alt="image-20250302094611083" loading="lazy"></p>
<p>添加一个这样的配置即可：</p>
<pre><code class="language-python"> "duckduckgo_search": {
      "command": "uv",
      "args": [
        "--directory",
        "D:\\Learning\\AI-related\\mcp-demo\\duckduckgo_mcp",
        "run",
        "main.py"
      ],
      "disabled": false,
      "autoApprove": []
    }
</code></pre>
<p>目录需要改成自己的。</p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202503/3288240-20250302112017089-63112499.png" alt="image-20250302095107930" loading="lazy"></p>
<p>这样子就可以用了。</p>
<p>使用效果如下：</p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202503/3288240-20250302112017076-639136982.png" alt="image-20250302095528118" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202503/3288240-20250302112017162-645139342.png" alt="image-20250302095345177" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202503/3288240-20250302112017158-1565146444.png" alt="image-20250302095410077" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202503/3288240-20250302112017308-341023605.png" alt="image-20250302100332866" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202503/3288240-20250302112017394-1143233864.png" alt="image-20250302100405096" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/3288240/202503/3288240-20250302112017331-1146561877.png" alt="image-20250302100444238" loading="lazy"></p>
<h2 id="最后">最后</h2>
<p>很多开发者可能对MCP还不熟悉，MCP有客户端与服务器端，但是完全可以先把Cline当作是一个MCP客户端，刚开始自己只需要去创建或者使用一些MCP服务器端，感受一下MCP的功能，感兴趣的话再深入探索，再自己做一个MCP客户端也不迟。</p>
<p>就像Cline的博客中提到的那样，“忘记“模型上下文协议”——只需将这些视为 Cline 的额外工具”，先体验了大概就知道是什么东西了。</p>
<p>还有一个常有的困扰，就是MCP是否只能Claude才能用呢？毕竟是Anthropic主导提出来的。</p>
<p>不是只有Claude才能用，其它模型也能用，我上面使用的是Qwen/Qwen2.5-72B-Instruct这个模型。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.20673276076041666" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-02 11:20">2025-03-02 11:20</span>&nbsp;
<a href="https://www.cnblogs.com/mingupupu">mingupupup</a>&nbsp;
阅读(<span id="post_view_count">39</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18745928" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18745928);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18745928', targetLink: 'https://www.cnblogs.com/mingupupu/p/18745928', title: '创建一个MCP服务器，并在Cline中使用，增强自定义功能。' })">举报</a>
</div>
        