<!----> <meta itemprop="headline" content="产品：上传图片拖拽一下怎么了 ? "> <meta itemprop="keywords" content="前端,JavaScript,Vue.js"> <meta itemprop="datePublished" content="2025-04-27T07:24:26.000Z"> <meta itemprop="image" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-128.png~tplv-t2oaga2asx-image.image"> <div itemprop="author" itemscope="itemscope" itemtype="http://schema.org/Person"><meta itemprop="name" content="不爱说话郭德纲"> <meta itemprop="url" content="https://juejin.cn/user/4103820476156712"></div> <div itemprop="publisher" itemscope="itemscope" itemtype="http://schema.org/Organization"><meta itemprop="name" content="掘金"> <div itemprop="logo" itemscope="itemscope" itemtype="https://schema.org/ImageObject"><meta itemprop="url" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-white-180.png~tplv-t2oaga2asx-image.image"> <meta itemprop="width" content="180"> <meta itemprop="height" content="180"></div></div> <h1 class="article-title" data-v-5111268e="">
            产品：上传图片拖拽一下怎么了 ? 
            <!----> <!----></h1> <div class="author-info-block block-hidden" data-v-5111268e=""><div class="author-info-box" data-v-5111268e=""><div class="author-name" data-v-5111268e=""><a href="/user/4103820476156712/posts" target="_blank" rel="" class="jj-link username username ellipsis" data-v-65b50b51="" data-v-6a576a98="" data-v-5111268e=""><span class="name" style="max-width:160px;" data-v-65b50b51="" data-v-6a576a98="">
    不爱说话郭德纲
  </span> <!----> <!----> <!----> </a></div> <div class="meta-box" data-v-5111268e=""><time datetime="2025-04-27T07:24:26.000Z" title="Sun Apr 27 2025 07:24:26 GMT+0000 (Coordinated Universal Time)" class="time" data-v-5111268e="">
                    2025-04-27
                  </time> <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="read-icon" data-v-5111268e=""><path d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor" data-v-5111268e=""></path><circle cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor" data-v-5111268e=""></circle></svg> <span class="views-count" data-v-5111268e="">
                    8,882
                  </span> <span class="read-time" data-v-5111268e=""><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" data-v-5111268e=""><rect width="16" height="16" fill="none" data-v-5111268e=""></rect><circle cx="8" cy="8" r="5.65625" stroke="#8A919F" data-v-5111268e=""></circle><path d="M7.69141 5.18652V8.30924H10.8141" stroke="#8A919F" stroke-linecap="round" stroke-linejoin="round" data-v-5111268e=""></path></svg>
                    阅读3分钟
                  </span> <!----></div></div> <div style="flex:1;" data-v-5111268e=""></div> <!----> <!----></div> <!----> <!----> <!----> <!----> <div id="article-root" itemprop="articleBody" class="main" data-v-5111268e=""><div class="article-viewer markdown-body result"><h2 data-id="heading-0">前戏</h2>
<h2 data-id="heading-1">一、需求背景：一个产品经理的执念 📌</h2>
<blockquote>
<p>"小X啊，这个商品详情页的图片要能拖动排序，就像手机相册那样丝滑！"</p>
<p>—— 来自产品经理的第7次需求变更</p>
</blockquote>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/693870d44bd541f9a23f995a57f43246~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5LiN54ix6K-06K-d6YOt5b6357qy:q75.awebp?rk3s=f64ab15b&amp;x-expires=1749351249&amp;x-signature=M9tEIArx2v3YhcKXuT4FoS2w7cE%3D" alt="image.png" loading="lazy"></p>
<blockquote>
<p>作为前端炒粉，面对这个"简单"需求时，我望着Element Plus官方文档陷入了沉思 🤔。el-upload组件虽然能完美处理上传，但原生并不支持已上传图片的拖拽排序。于是，当然是选择满足他啦...</p>
</blockquote>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/17a9a6211a1e42c5906ade46cb8798c0~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5LiN54ix6K-06K-d6YOt5b6357qy:q75.awebp?rk3s=f64ab15b&amp;x-expires=1749351249&amp;x-signature=uy4kYnR84X3BBP5Lo1T52GXObso%3D" alt="image.png" loading="lazy"></p>
<h2 data-id="heading-2">一、需求背景</h2>
<p>言归歪传，在管理后台开发中，经常需要实现图片上传与排序功能。Element Plus的el-upload组件虽然提供了基础的图片上传功能，但原生并不支持已上传图片的拖拽排序。下面将基于el-upload组件，结合HTML5拖放API，实现图片上传后的拖拽排序的基本功能。</p>
<hr>
<h2 data-id="heading-3">二、实现效果</h2>
<ol>
<li>上传后的图片支持拖拽交换位置</li>
<li>实时预览拖拽后的排序效果</li>
</ol>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/110552f6d4bf4a2a8372c0a636d3c7c4~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5LiN54ix6K-06K-d6YOt5b6357qy:q75.awebp?rk3s=f64ab15b&amp;x-expires=1749351249&amp;x-signature=qFahQ6Dc3gvL%2BxMMlnuNZDFv%2BeY%3D" alt="动画.gif" loading="lazy"></p>
<hr>
<h2 data-id="heading-4">三、核心实现分析：魔法背后的秘密 🧙</h2>
<h3 data-id="heading-5">1. 模板结构解析🛠️</h3>
<pre><code class="hljs language-html" lang="html"><span class="hljs-tag">&lt;<span class="hljs-name">el-upload</span>
  <span class="hljs-attr">list-type</span>=<span class="hljs-string">"picture-card"</span>
  <span class="hljs-attr">:auto-upload</span>=<span class="hljs-string">"false"</span>
  <span class="hljs-attr">:limit</span>=<span class="hljs-string">"10"</span>
  <span class="hljs-attr">v-model:file-list</span>=<span class="hljs-string">"userInfo.pictureMobile"</span>
  <span class="hljs-attr">:on-change</span>=<span class="hljs-string">"handleChange"</span>
&gt;</span>
  
  <span class="hljs-comment">&lt;!-- 自定义文件项模板 --&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">file</span>=<span class="hljs-string">"{ file }"</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>
      <span class="hljs-attr">draggable</span>=<span class="hljs-string">"true"</span>          &lt;!<span class="hljs-attr">--</span> <span class="hljs-attr">开启拖拽功能</span> <span class="hljs-attr">--</span>&gt;</span>
      @dragstart="handleDragStart($event,file,'mb')"
      @drop="handleDrop($event,file,'mb')"
      @dragover.prevent&gt;        <span class="hljs-comment">&lt;!-- 阻止默认行为 --&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">"file.url"</span> /&gt;</span>
      <span class="hljs-comment">&lt;!-- 操作按钮 --&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"el-upload-list__item-actions"</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">"handlePictureCardPreview(file)"</span>&gt;</span>
          <span class="hljs-tag">&lt;<span class="hljs-name">el-icon</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">zoom-in</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">el-icon</span>&gt;</span>
        <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">"handleRemove(file,'mb')"</span>&gt;</span>
          <span class="hljs-tag">&lt;<span class="hljs-name">el-icon</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">Delete</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">el-icon</span>&gt;</span>
        <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>
      <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">el-upload</span>&gt;</span>
</code></pre>
<h3 data-id="heading-6">2. 逻辑实现🎨</h3>
<h4 data-id="heading-7">拖拽二部曲 📦→📦</h4>
<h4 data-id="heading-8">🎯第一步：拖拽开始事件处理：dragstart</h4>
<ul>
<li>获取当前拖拽项的索引</li>
<li>将索引存入数据传输对象</li>
</ul>
<pre><code class="hljs language-typescript" lang="typescript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">handleDragStart</span> = (<span class="hljs-params">event, file, <span class="hljs-keyword">type</span>: <span class="hljs-built_in">string</span></span>) =&gt; {
  <span class="hljs-comment">// 图片列表</span>
  <span class="hljs-keyword">const</span> imgList = userInfo.<span class="hljs-property">picturePc</span>;
  
  <span class="hljs-keyword">const</span> index = imgList.<span class="hljs-title function_">findIndex</span>(<span class="hljs-function"><span class="hljs-params">element</span> =&gt;</span> element === file);

  event.<span class="hljs-property">dataTransfer</span>.<span class="hljs-title function_">setData</span>(<span class="hljs-string">'index'</span>, index.<span class="hljs-title function_">toString</span>());
}
</code></pre>
<h4 data-id="heading-9">🎯第二步：拖拽释放事件处理：handleDrop</h4>
<ul>
<li>获取目标位置索引</li>
<li>阻止默认行为</li>
<li>获取拖拽源索引</li>
<li>创建数组副本（保证响应式更新）</li>
<li>执行数组元素移动</li>
<li>更新图片列表</li>
</ul>
<pre><code class="hljs language-typescript" lang="typescript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">handleDrop</span> = (<span class="hljs-params">event, file, <span class="hljs-keyword">type</span></span>) =&gt; {
  <span class="hljs-comment">// 获取目标位置索引</span>
  <span class="hljs-keyword">const</span> index = imgList.<span class="hljs-title function_">findIndex</span>(<span class="hljs-function"><span class="hljs-params">element</span> =&gt;</span> element === file);
  
  <span class="hljs-comment">// 阻止默认行为</span>
  event.<span class="hljs-title function_">preventDefault</span>();

  <span class="hljs-comment">// 获取拖拽源索引</span>
  <span class="hljs-keyword">const</span> draggedIndex = <span class="hljs-title class_">Number</span>(event.<span class="hljs-property">dataTransfer</span>.<span class="hljs-title function_">getData</span>(<span class="hljs-string">'index'</span>));
  
  <span class="hljs-comment">// 创建数组副本（保证响应式更新）</span>
  <span class="hljs-keyword">const</span> updatedList = [...imgList];
  
  <span class="hljs-comment">// 执行数组元素移动</span>
  <span class="hljs-keyword">const</span> [draggedItem] = updatedList.<span class="hljs-title function_">splice</span>(draggedIndex, <span class="hljs-number">1</span>);
  updatedList.<span class="hljs-title function_">splice</span>(index, <span class="hljs-number">0</span>, draggedItem);

  <span class="hljs-comment">// 更新对应类型的图片列表</span>
    userInfo.<span class="hljs-property">picturePc</span> = updatedList
}
</code></pre>
<hr>
<h2 data-id="heading-10">四、关键点</h2>
<h3 data-id="heading-11">1. HTML5拖放API</h3>
<ul>
<li><code>draggable="true"</code>：使元素可拖拽</li>
<li><code>@dragstart</code>：拖拽开始时触发</li>
<li><code>@drop</code>：拖拽释放时触发</li>
<li><code>@dragover.prevent</code>：阻止默认拖拽行为</li>
<li><code>dataTransfer</code>：跨事件数据传输对象</li>
</ul>
<h3 data-id="heading-12">2. 数组操作技巧</h3>
<pre><code class="hljs language-typescript" lang="typescript"><span class="hljs-comment">// 删除并插入元素的经典写法</span>
<span class="hljs-keyword">const</span> updatedList = [...originalList];
<span class="hljs-keyword">const</span> [movedItem] = updatedList.<span class="hljs-title function_">splice</span>(oldIndex, <span class="hljs-number">1</span>);
updatedList.<span class="hljs-title function_">splice</span>(newIndex, <span class="hljs-number">0</span>, movedItem);
</code></pre>
<h3 data-id="heading-13">3. 响应式更新</h3>
<p>通过创建数组副本并重新赋值，触发Vue的响应式更新：</p>
<pre><code class="hljs language-typescript" lang="typescript">userInfo.<span class="hljs-property">pictureMobile</span> = updatedList
</code></pre>
<hr>
<h2 data-id="heading-14">五、踩坑日记：程序员的自我修养 📖</h2>
<h3 data-id="heading-15">🚧 坑1：幽灵图片问题</h3>
<p><strong>现象</strong>：拖拽时出现半透明残影<br>
<strong>解法</strong>：给拖拽元素添加CSS样式</p>
<pre><code class="hljs language-css" lang="css"><span class="hljs-selector-class">.dragging-item</span> {
  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0.5</span>;
  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">3deg</span>);
}
</code></pre>
<h3 data-id="heading-16">🚧 坑2：移动端兼容性</h3>
<p><strong>现象</strong>：手机滑动触发页面滚动<br>
<strong>解法</strong>：添加touch-action样式</p>
<pre><code class="hljs language-css" lang="css"><span class="hljs-selector-class">.mobile-container</span> {
  touch-action: none;
}
</code></pre>
<hr>
<h2 data-id="heading-17">六、完整实现流程</h2>
<ol>
<li>🎯 初始化el-upload组件，禁用自动上传</li>
<li>✨ 通过file-list绑定图片数据源</li>
<li>🔮 自定义文件项模板，添加拖拽事件</li>
<li>⚡ 实现拖拽开始时的索引记录</li>
<li>🌈 处理拖拽释放时的元素交换）</li>
<li>🧪更新响应式数据触发视图刷新</li>
</ol>
<hr>
<h2 data-id="heading-18">七、总结</h2>
<p>通过结合el-upload的文件管理能力和HTML5原生拖放API，简单实现了直观的图片拖拽排序功能。</p>
<p>这种方案具有以下优势：</p>





















<table><thead><tr><th>优势</th><th>说明</th></tr></thead><tbody><tr><td>轻量级</td><td>无需额外依赖库</td></tr><tr><td>高兼容</td><td>基于原生API实现</td></tr><tr><td>易扩展</td><td>支持多场景类型参数</td></tr></tbody></table>
<h2 data-id="heading-19"><strong><p align="center"> 下次再见！🌈</p></strong></h2>
<p><img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/eee96f98257840b7a90353fc8156e955~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5LiN54ix6K-06K-d6YOt5b6357qy:q75.awebp?rk3s=f64ab15b&amp;x-expires=1749351249&amp;x-signature=hYwEy3zfoSekUTZns%2BPpzNToMSI%3D" alt="Snipaste_2025-04-27_15-18-02.png" loading="lazy"></p></div></div>