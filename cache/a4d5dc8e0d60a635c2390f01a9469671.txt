
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/MeteorSeed/p/18764506" title="发布于 2025-03-12 09:42">
    <span role="heading" aria-level="2">【译】Visual Studio 中新的强大生产力特性</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p><span>　　有时候，生活中的小事才是最重要的。在最新版本的 Visual Studio 中，我们增加了一些功能和调整，目的是让您脸上带着微笑，让您更有效率。这里是其中的一些列表，如果您想要完整的列表，请查看发行说明。</span></p>
<h1><span><span>自定义文件编码</span></span></h1>
<p><span>　　在跨平台环境中工作的开发人员通常需要使用特定的文件编码来保存文件。更改这些编码可能会导致各种问题。</span></p>
<p><span>　　Visual Studio 现在允许您设置保存文件的默认文件编码。此功能可确保尽可能使用您的首选编码。</span></p>
<p><span>　　要设置默认编码，请导航到 Tools → Options → Environment → Documents。在这里，您将找到一个名为“Save files with a specific encoding”的选项。如果未选中此选项，Visual Studio 将使用其默认行为来管理文件编码。如果选中此项，则在保存文件时，Visual Studio 将使用相邻组合框中指定的编码。</span></p>
<p><span><img src="https://img2024.cnblogs.com/blog/270073/202503/270073-20250311103107988-1809791494.png" alt="" style="display: block; margin-left: auto; margin-right: auto"></span></p>
<p><span>　　如果 Visual Studio 不能使用指定的编码保存（例如，为包含 Unicode 字符的文件请求 ASCII 编码），它将显示一个对话框，告知您该问题。</span></p>
<h1><span><span>选择是否缩进换行</span></span></h1>
<p><span>　　我们很高兴地介绍一个新特性，它允许您在编辑器中控制换行是否缩进。这种增强为您的编码环境提供了更大的灵活性和自定义，确保您的代码完全按照您喜欢的方式显示。</span></p>
<p><span><img src="https://img2024.cnblogs.com/blog/270073/202503/270073-20250311103127664-282571007.png" alt="" style="display: block; margin-left: auto; margin-right: auto"></span></p>
<p><span>　　要更改此选项，请遵循以下步骤：</span></p>
<p><span>　　转到 Tools → Options → Text Editor → General。</span></p>
<p><span>　　当启用换行时，查找名为 Automatically indent when word wrap is enabled 的选项。</span></p>
<p><span>　　默认情况下，此选项是启用的，这意味着换行将被缩进。如果您不希望换行缩进，只需取消选中此选项。这个设置可以帮助提高可读性并维护代码所需的格式，特别是在缩进样式至关重要的项目中。</span></p>
<h1><span><span>保留跨主题的字体偏好</span></span></h1>
<p><span>　　我们理解，开发人员在编码时选择的字体是个人选择，受可读性、可访问性或美观性偏好的影响。Visual Studio 主题主要关注颜色表示，与您的字体偏好无关。</span></p>
<p><span>　　在这次更新中，我们引入了在切换主题时保留字体和大小选择的功能。现在，您可以在 Visual Studio 中设置一次字体偏好并切换主题，而无需每次都重新配置字体设置。请注意，字体的颜色仍然与主题相关联，因为这是主题的目的，但字体选择将被保留。</span></p>
<p><span><img src="https://img2024.cnblogs.com/blog/270073/202503/270073-20250311103156323-1322364224.png" alt="" style="display: block; margin-left: auto; margin-right: auto"></span></p>
<p style="text-align: left">　　默认情况下，所有用户都将启用此功能。如果您喜欢之前的行为，转到 Tools &gt; Manage Preview Features，找到 Separate font settings from color theme selection 选项。如果选中此选项，无论主题如何更改，字体偏好都将保持不变。取消复选框以恢复将字体选择绑定到主题的先前行为。</p>
<h1><span><span>重设水平滚动条</span></span></h1>
<p><span>　　Visual Studio 中的编辑器托盘是存放大量信息的宝贵空间。您可以控制缩放、检查文档的运行状况、查看所处的位置以及访问各种附加信息。</span></p>
<p><span>　　不幸的是，有时所有这些信息会挤占水平滚动条，使滚动窗口变得困难。在系统托盘不是很宽的并排视图中尤其如此。</span></p>
<p><span>　　有了这个最新的更新，这些挣扎是过去式了。如果滚动条低于可用宽度，它将重新定位在系统托盘上方，以确保它始终可访问。默认情况下，只要有足够的空间，它就会返回编辑器托盘。</span></p>
<div style="text-align: center"><img src="https://img2024.cnblogs.com/blog/270073/202503/270073-20250311103231160-532384101.png" alt=""></div>
<p>　　虽然我们相信这种行为对大多数用户来说是理想的，但如果您遇到任何问题，您可以在 Tools → Options 中控制该行为。该选项位于“Text Editor → Advanced”下，并标记为“Editor horizontal scrollbar location”。此设置允许您选择滚动条是根据可用空间调整其位置，留在编辑器托盘中，还是始终显示在编辑器托盘上方。</p>
<h1><span><span>感谢！</span></span></h1>
<p><span>　　我们致力于不断改善您的开发体验，其中许多进步都是由您宝贵的反馈和建议推动的。您的意见在塑造 Visual Studio 的未来中起着至关重要的作用，我们鼓励您继续与我们分享您的想法。</span></p>
<p><span>　　Happy coding!</span></p>
<p><span>&nbsp;</span></p>
<p><span>　　原文连接：https://devblogs.microsoft.com/visualstudio/great-new-productivity-features-in-visual-studio/</span></p>
<p><span><img src="https://img2024.cnblogs.com/blog/270073/202503/270073-20250311103310157-48100270.webp" alt="" style="display: block; margin-left: auto; margin-right: auto"></span></p>
<p>&nbsp;</p>
</div>
<div id="MySignature" role="contentinfo">
    <blockquote>
<p><strong>作者：</strong><a href="http://www.cnblogs.com/MeteorSeed">MeteorSeed</a></p>
<p><strong>我希望您喜欢这篇博文，并一如既往地感谢您阅读并与朋友和同事分享我的博文。</strong></p>
<p><strong>转载请注明出处。</strong></p>
</blockquote>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.1932511973761574" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-12 09:43">2025-03-12 09:42</span>&nbsp;
<a href="https://www.cnblogs.com/MeteorSeed">MeteorSeed</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18764506" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18764506);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18764506', targetLink: 'https://www.cnblogs.com/MeteorSeed/p/18764506', title: '【译】Visual Studio 中新的强大生产力特性' })">举报</a>
</div>
        