
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/deali/p/18996188" title="发布于 2025-07-21 17:12">
    <span role="heading" aria-level="2">使用django-simple-history实现简单审计功能</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="前言">前言</h2>
<p>本文依然是中台项目延伸的笔记</p>
<p>这个系列的文章太小众了，看的人都不多</p>
<p>我争取尽快把这系列完结了，然后进入新的项目</p>
<h2 id="关于审计">关于审计</h2>
<p>之前我在 dotnet 的项目里已经自己实现了审计功能了，还是用切面思想搞的</p>
<p>详见：</p>
<ul>
<li><a href="https://blog.deali.cn/Blog/Post/38b0ad0d91248f21" target="_blank" rel="noopener nofollow">AspNetCore开发笔记：实现动态审计日志功能</a></li>
<li><a href="https://blog.deali.cn/Blog/Post/9527cd9e7cfa854c" target="_blank" rel="noopener nofollow">AspNetCore开发笔记：进一步实现非侵入性审计日志功能</a></li>
</ul>
<p>Django 生态非常丰富，实现审计应该也有很多方法和现成的库</p>
<p>而且因为强绑定了自己的一套 ORM ，整个生态都围绕这个体系来展开，更加的开箱即用</p>
<h2 id="simple-history">simple-history</h2>
<p>本文使用了的这个 simple-history 可以记录每个 model 的操作</p>
<p>搭配 DjangoStarter 框架使用，目前已经切换到 unfold admin 作为管理后台，可以无缝集成</p>
<ul>
<li><a href="https://github.com/django-commons/django-simple-history" target="_blank" rel="noopener nofollow">https://github.com/django-commons/django-simple-history</a></li>
<li><a href="https://unfoldadmin.com/docs/integrations/django-simple-history/" target="_blank" rel="noopener nofollow">https://unfoldadmin.com/docs/integrations/django-simple-history/</a></li>
</ul>
<h2 id="安装普通django项目">安装(普通Django项目)</h2>
<p>这里是普通 Django 项目的步骤</p>
<p>先安装依赖</p>
<pre><code class="language-bash">pdm add django-simple-history
</code></pre>
<p>注册应用</p>
<pre><code class="language-python">INSTALLED_APPS = [
    # ...
    'simple_history',
]
</code></pre>
<p>添加中间件</p>
<p>这个库的审计功能是通过中间件来实现的，当然也可以不用中间件，需要额外的方式折腾。</p>
<pre><code class="language-python">MIDDLEWARE = [
    # ...
    'simple_history.middleware.HistoryRequestMiddleware',
]
</code></pre>
<p>然后修改 admin 继承 <code>SimpleHistoryAdmin</code></p>
<pre><code class="language-python">from simple_history.admin import SimpleHistoryAdmin

@admin.register(Movie)
class MovieAdmin(SimpleHistoryAdmin):
    ...
</code></pre>
<p>这样就可以在后台看到这个 model 的相关操作了</p>
<h2 id="djangostarter集成">DjangoStarter集成</h2>
<p>实际上是 unfold 的集成🤣</p>
<h3 id="注册服务">注册服务</h3>
<p>确保按照以下顺序注册app</p>
<pre><code class="language-python">INSTALLED_APPS = [
    "unfold",
    # ...
    "unfold.contrib.simple_history",
    # ...
    "simple_history",
]
</code></pre>
<h3 id="修改admin">修改admin</h3>
<p>虽然不修改也能 work</p>
<p>不过就没那么好的集成度和样式</p>
<pre><code class="language-python">from unfold.admin import ModelAdmin
from simple_history.admin import SimpleHistoryAdmin

@admin.register(Movie)
class MovieAdmin(SimpleHistoryAdmin, ModelAdmin):
    ...
</code></pre>
<h2 id="如何使用">如何使用</h2>
<p>在需要记录操作历史的 model 添加 <code>history = HistoricalRecords()</code> 字段</p>
<pre><code class="language-python">class Movie(ModelExt):
    title = models.CharField(max_length=100)
    description = models.TextField()
    year = models.IntegerField()
    rating = models.IntegerField()
    genre = models.CharField(max_length=100)
    director = models.CharField(max_length=100)
    actors = models.CharField(max_length=100)
    history = HistoricalRecords()
</code></pre>
<p>老规矩，修改了模型需要同步数据库</p>
<pre><code class="language-bash">python src/manage.py makemigrations
python src/manage.py migrate
</code></pre>
<p>记得 admin 也要同步修改，方法在前面介绍过了</p>
<p>这时候进入 admin 管理界面，点击某一个具体数据，右上角就有个“历史”按钮，点进去可以看到所有操作记录了</p>
<h2 id="实现效果">实现效果</h2>
<p>查看到操作历史类似下面这样</p>
<p>可以看到修改人和修改了哪些内容</p>
<h3 id="_"></h3>
<table>
<thead>
<tr>
<th style="text-align: left"></th>
<th style="text-align: left"></th>
<th style="text-align: left"></th>
<th style="text-align: left"></th>
<th style="text-align: left"></th>
<th style="text-align: left"></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left">记录对象</td>
<td style="text-align: left">日期/时间</td>
<td style="text-align: left">备注</td>
<td style="text-align: left">修改人</td>
<td style="text-align: left">修改原因</td>
<td style="text-align: left">Changes</td>
</tr>
<tr>
<td style="text-align: left"><a href="http://127.0.0.1:18080/admin/demo/actor/22/history/5/" target="_blank" rel="noopener nofollow">演员1</a></td>
<td style="text-align: left">2025年7月19日 23:56</td>
<td style="text-align: left">已修改</td>
<td style="text-align: left"><a href="http://127.0.0.1:18080/admin/auth/user/3/change/" target="_blank" rel="noopener nofollow">admin</a></td>
<td style="text-align: left">None</td>
<td style="text-align: left"><strong>City:</strong> Tokyo ➡️ Tokyo Sega</td>
</tr>
<tr>
<td style="text-align: left"><a href="http://127.0.0.1:18080/admin/demo/actor/22/history/4/" target="_blank" rel="noopener nofollow">演员1</a></td>
<td style="text-align: left">2025年7月19日 23:56</td>
<td style="text-align: left">已创建</td>
<td style="text-align: left"><a href="http://127.0.0.1:18080/admin/auth/user/3/change/" target="_blank" rel="noopener nofollow">admin</a></td>
<td style="text-align: left">None</td>
<td style="text-align: left"></td>
</tr>
</tbody>
</table>
<h2 id="小结">小结</h2>
<p>这个库还有很多可以自定义的地方，文档也写得很详细了</p>
<p>我就没必要搬运了（其实是我用到的功能就这么简单）</p>
<p>unfold 还有很多集成的第三方库，感觉都不错（迟早要集成到 DjangoStarter 里）</p>
<ul>
<li>
<p><a href="https://unfoldadmin.com/docs/integrations/django-celery-beat/" target="_blank" rel="noopener nofollow">django-celery-beat</a></p>
</li>
<li>
<p><a href="https://unfoldadmin.com/docs/integrations/django-money/" target="_blank" rel="noopener nofollow">django-money</a></p>
</li>
<li>
<p><a href="https://unfoldadmin.com/docs/integrations/django-constance/" target="_blank" rel="noopener nofollow">django-constance</a></p>
</li>
<li>
<p><a href="https://unfoldadmin.com/docs/integrations/django-import-export/" target="_blank" rel="noopener nofollow">django-import-export</a></p>
</li>
<li>
<p><a href="https://unfoldadmin.com/docs/integrations/django-simple-history/" target="_blank" rel="noopener nofollow">django-simple-history</a></p>
</li>
<li>
<p><a href="https://unfoldadmin.com/docs/integrations/django-guardian/" target="_blank" rel="noopener nofollow">django-guardian</a></p>
</li>
<li>
<p><a href="https://unfoldadmin.com/docs/integrations/django-modeltranslation/" target="_blank" rel="noopener nofollow">django-modeltranslation</a></p>
</li>
<li>
<p><a href="https://unfoldadmin.com/docs/integrations/django-location-field/" target="_blank" rel="noopener nofollow">django-location-field</a></p>
</li>
</ul>

</div>
<div id="MySignature" role="contentinfo">
    微信公众号：「程序设计实验室」
专注于互联网热门新技术探索与团队敏捷开发实践，包括架构设计、机器学习与数据分析算法、移动端开发、Linux、Web前后端开发等，欢迎一起探讨技术，分享学习实践经验。
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-21 17:13">2025-07-21 17:12</span>&nbsp;
<a href="https://www.cnblogs.com/deali">程序设计实验室</a>&nbsp;
阅读(<span id="post_view_count">11</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18996188);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18996188', targetLink: 'https://www.cnblogs.com/deali/p/18996188', title: '使用django-simple-history实现简单审计功能' })">举报</a>
</div>
        