
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/huangSir-devops/p/18884655" title="发布于 2025-05-20 10:25">
    <span role="heading" aria-level="2">Redis介绍及6.2.x版本安装</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="概述">概述</h2>
<p>Redis官网：<a href="https://redis.io/" target="_blank" rel="noopener nofollow">https://redis.io/</a></p>
<p>Redis 是完全开源免费的，遵守BSD协议，是一个高性能(NOSQL)的key-value数据库,Redis是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。</p>
<blockquote>
<p>什么是BSD协议？<br>
BSD是"Berkeley Software Distribution"的缩写，意思是"伯克利软件发行版"。<br>
BSD开源协议是一个给于使用者很大自由的协议。可以自由的使用，修改源代码，也可以将修改后的代码作为开源或者专有软件再发布。BSD代码鼓励代码共享，但需要尊重代码作者的著作权。<br>
BSD由于允许使用者修改和重新发布代码，也允许使用或在BSD代码上开发商业软件发布和销售，因此是对商业集成很友好的协议。</p>
</blockquote>
<p>redis在4.0之前一直是单线程，在4.0之后引入了多线程，但是处理读写请求的线程也就只有一个。</p>
<h2 id="redis特点">Redis特点</h2>
<ul>
<li>
<p>性能极高 – 由于数据是存储在内存中（Redis能读的速度是110000次/s,写的速度是81000次/s ）。</p>
</li>
<li>
<p>丰富的数据类型 – Redis支持的类型 String, Hash,List, Set 及 Ordered Set 等数据类型操作。</p>
</li>
<li>
<p>原子性 – Redis的所有操作都是原子性的，意思就是要么成功执行要么失败完全不执行。单个操作是原子性的。多个操作也支持事务，即原子性，通过MULTI和EXEC指令包起来。</p>
</li>
<li>
<p>丰富的特性 – Redis还支持 publish/subscribe, 通知, key 过期等等特性。</p>
</li>
<li>
<p>高速读写，redis使用自己实现的分离器，代码量很短，没有使用lock（MySQL），因此效率非常高。</p>
</li>
</ul>
<blockquote>
<p>Redis是一个简单的，高效的，分布式的，基于内存的缓存工具。<br>
架设好服务器后，通过网络连接（类似数据库），提供Key－Value式缓存服务。<br>
简单，是Redis突出的特色。<br>
简单可以保证核心功能的稳定和优异。</p>
</blockquote>
<h2 id="redis应用场景">Redis应用场景</h2>
<p>Redis可以用作数据库、缓存、秒杀、计数器、排行榜、热点数据（经常会被查询，但是不经常被修改或者删除的数据)、分布式锁、分布式ID、和消息中间件等大部分功能等性能密切相关场景里。</p>
<ul>
<li>
<h3 id="缓存">缓存</h3>
</li>
</ul>
<p>缓存现在几乎是所有中大型网站都在用的必杀技，合理的利用缓存不仅能够提升网站访问速度，还能大大降低数据库的 压力。Redis提供了键过期功能，也提供了灵活的键淘汰策略，所以，现在Redis用在缓存的场合非常多。</p>
<ul>
<li>
<h3 id="缓存-1">缓存</h3>
</li>
</ul>
<p>缓存现在几乎是所有中大型网站都在用的必杀技，合理的利用缓存不仅能够提升网站访问速度，还能大大降低数据库的 压力。Redis提供了键过期功能，也提供了灵活的键淘汰策略，所以，现在Redis用在缓存的场合非常多。</p>
<ul>
<li>
<h3 id="分布式会话">分布式会话</h3>
</li>
</ul>
<p>集群模式下，在应用不多的情况下一般使用容器自带的session复制功能就能满足，当应用增多相对复杂的系统中， 一般都会搭建以Redis等内存数据库为中心的session服务，session不再由容器管理，而是由session服务及内存 数据库管理。</p>
<ul>
<li>
<h3 id="分布式锁">分布式锁</h3>
</li>
</ul>
<p>在很多互联网公司中都使用了分布式技术，分布式技术带来的技术挑战是对同一个资源的并发访问，如全局ID、减库 存、秒杀等场景，并发量不大的场景可以使用数据库的悲观锁、乐观锁来实现，但在并发量高的场合中，利用数据库锁 来控制资源的并发访问是不太理想的，大大影响了数据库的性能。可以利用Redis的setnx功能来编写分布式的锁，如果设置返回1说明获取锁成功，否则获取锁失败，实际应用中要考虑的细节要更多。</p>
<ul>
<li>
<h3 id="社交网络">社交网络</h3>
</li>
</ul>
<p>点赞、踩、关注/被关注、共同好友等是社交网站的基本功能，社交网站的访问量通常来说比较大，而且传统的关系数 据库类型不适合存储这种类型的数据，Redis提供的哈希、集合等数据结构能很方便的的实现这些功能。</p>
<ul>
<li>
<h3 id="最新列表">最新列表</h3>
</li>
</ul>
<p>Redis列表结构，LPUSH可以在列表头部插入一个内容ID作为关键字，LTRIM可用来限制列表的数量，这样列表永远为N个ID，无需查询最新的列表，直接根据ID去到对应的内容页即可。</p>
<h2 id="redis各版本介绍">Redis各版本介绍</h2>
<p>Redis 的版本分为 稳定版（Stable） 和 开发版（Unstable），命名规则为<code> 主版本号.次版本号.修订号</code>（如 7.0.11）。</p>
<ul>
<li>主版本号：重大功能更新（如 5.x → 6.x）。</li>
<li>次版本号：新增功能或非破坏性改进（如 6.0 → 6.2）。</li>
<li>修订号： bug 修复或小更新（如 6.2.1 → 6.2.2）。</li>
</ul>
<p>目前（2025 年）的长期支持（LTS）版本为 6.x 和 7.x，旧版本逐步停止维护。</p>
<h3 id="旧版本3x-及以下">旧版本（3.x 及以下)</h3>
<p>3.x版本已经不推荐生产环境使用了</p>
<ul>
<li>代表版本：3.2（2016 年发布）</li>
<li>特性：
<ul>
<li>支持简单集群（Redis Cluster），但存在节点故障转移不够灵活、数据迁移效率低等问题。</li>
<li>数据结构有限（仅支持字符串、哈希、列表、集合、有序集合）。</li>
</ul>
</li>
<li>缺点：
<ul>
<li>无分层存储、多线程 I/O 等现代特性，性能瓶颈明显。</li>
<li>社区维护停止，存在安全漏洞风险。</li>
</ul>
</li>
</ul>
<h3 id="4x-版本">4.x 版本</h3>
<p>2017 年发布，目前已停止维护，不推荐生产环境使用</p>
<ul>
<li>关键特性：
<ul>
<li>模块系统（Modules）：支持第三方扩展（如 RedisJSON、RedisGraph 等），拓展功能生态。</li>
<li>混合持久化（AOF-RDB Hybrid）：重启时加载速度更快，减少数据丢失风险。</li>
<li>过期键异步删除：避免大规模键过期时阻塞主线程。</li>
</ul>
</li>
<li>缺点：
<ul>
<li>未引入多线程，高并发场景下性能受限。</li>
<li>官方维护截止到 2021 年，安全性不足。</li>
</ul>
</li>
</ul>
<h3 id="5x版本">5.x版本</h3>
<p>2019 年发布，维护至 2023 年，目前市场上很多公司正在使用该版本</p>
<ul>
<li>关键特性：
<ul>
<li>Redis Stream：正式引入流数据类型，支持发布 - 订阅、消息队列、消费者组等功能，替代传统的 Pub/Sub。</li>
<li>异步复制改进：从节点支持部分重同步，减少全量复制开销。</li>
<li>内置监控指标：通过 INFO 命令提供更详细的运行时统计信息。</li>
</ul>
</li>
<li>缺点：
<ul>
<li>单线程模型未改变，多核 CPU 利用率低。</li>
<li>已停止官方维护，仅推荐测试环境使用。</li>
</ul>
</li>
</ul>
<h3 id="6x-版本生产环境推荐">6.x 版本（生产环境推荐！！！）</h3>
<p>LTS 版本，2021 年发布，维护至 2026 年。生产环境首选，尤其适合高并发、高吞吐量的业务（如缓存、实时分析）。</p>
<ul>
<li>关键特性：
<ul>
<li>多线程 I/O：网络请求处理支持多线程（非数据处理多线程），大幅提升高并发场景下的吞吐量。</li>
<li>ACL 权限系统：替代传统密码认证，支持细粒度权限控制（如限制命令、键空间访问）。</li>
<li>客户端缓存（Client-side Caching）：减少客户端与服务端的交互次数，降低延迟。</li>
<li>RDB 加密：数据持久化时支持加密存储，保护静态数据安全。</li>
</ul>
</li>
<li>优化点：
<ul>
<li>改进集群节点通信协议，提升 Redis Cluster 的稳定性。</li>
<li>增强内存管理，减少内存碎片。</li>
</ul>
</li>
</ul>
<h3 id="7x-版本">7.x 版本</h3>
<p>LTS 版本，2022 年发布，维护至 2028 年，需要分布式事务、海量数据存储（内存成本敏感）、复杂数据处理的场景（如实时数据库、物联网数据存储）。</p>
<ul>
<li>革命性特性：
<ul>
<li>全局事务（Global Transactions）：支持跨分片的分布式事务，保证多节点数据一致性。</li>
<li>分层存储（Memory-Tiered Storage）：热数据存储在内存，冷数据自动下沉到磁盘，降低内存成本。</li>
<li>Server-side Scripting 增强：Lua 脚本支持异步执行，避免阻塞主线程。</li>
<li>JSON 数据类型升级：原生支持 JSON 路径查询（JSONPath）和部分更新，性能提升 50%+。</li>
</ul>
</li>
<li>其他改进：
<ul>
<li>新的 EXACT 模式用于模糊查询，提升键扫描效率。</li>
<li>支持 RESP3 协议，优化客户端与服务端交互格式。</li>
</ul>
</li>
</ul>
<h2 id="安装部署redis62x版本">安装部署Redis6.2.x版本</h2>
<p>Redis下载地址：<a href="https://download.redis.io/releases/" target="_blank" rel="noopener nofollow">https://download.redis.io/releases/</a></p>
<p>环境信息</p>
<table>
<thead>
<tr>
<th>IP</th>
<th>系统</th>
<th>规格</th>
</tr>
</thead>
<tbody>
<tr>
<td>10.37.97.56</td>
<td>Ubuntu</td>
<td>4c8g</td>
</tr>
</tbody>
</table>
<h3 id="下载解压">下载解压</h3>
<pre><code># 下载
[root@master ~]# wget https://download.redis.io/releases/redis-6.2.18.tar.gz
# 解压
[root@master ~]# tar -xvf redis-6.2.18.tar.gz
</code></pre>
<h3 id="下载相关依赖并编译">下载相关依赖并编译</h3>
<pre><code># 下载编译工具
[root@master ~]# apt update &amp;&amp; apt install -y gcc automake autoconf libtool make
</code></pre>
<p>下载工具说明</p>
<ul>
<li>gcc：GNU 编译器套件，用于编译 C/C++ 代码。</li>
<li>automake：生成 Makefile.in 文件，辅助自动化构建。</li>
<li>autoconf：生成 configure 脚本，检测系统环境。</li>
<li>libtool：管理库文件的编译和链接，实现跨平台兼容。</li>
<li>make：构建工具，根据 Makefile 编译项目。</li>
</ul>
<p>开始安装</p>
<pre><code>[root@master ~]# cd redis-6.2.18/
[root@master ~/redis-6.2.18]# make
...
#这里会刷出大量的编译信息，稍等一会即可
</code></pre>
<h3 id="配置环境变量">配置环境变量</h3>
<pre><code># 创建软连接
[root@master ~]# ln -s /root/redis-6.2.18 /root/redis
# 配置环境变量
[root@master ~]# echo "export PATH=$PATH:/root/redis/src" &gt;&gt; /etc/profile &amp;&amp; source /etc/profile
</code></pre>
<h3 id="创建数据目录将redis配置文件copy至该目录下">创建数据目录，将redis配置文件copy至该目录下</h3>
<pre><code># 创建数据目录
[root@master ~]# mkdir -p /data00/data/redis
[root@master ~]# cp /root/redis/redis.conf /data00/data/redis/

# 创建日志目录
[root@master ~]# mkdir /var/log/redis
</code></pre>
<h3 id="修改redis配置文件">修改Redis配置文件</h3>
<pre><code>[root@master ~]# vim /data00/data/redis/redis.conf
# 第75行，修改远程访问地址
75:bind 0.0.0.0
# 第98行，修改端口号
98:port 6379
# 第259行，守护进程运行，默认位前台运行，需要修改为yes
259:daemonize yes
# 第304行，指定redis的日志
304:logfile "/var/log/redis/redis.log"
# 第329行，指定数据库的数量，默认是16个
329:databases 16
# 第433行，持久化的文件
433:dbfilename dump.rdb
# 第456行，设置redis的数据目录，和我们上面创建的路径保持一致
456:dir /data00/data/redis/
# 第903行，设置密码，建议不要使用弱密码
903:requirepass 123456
</code></pre>
<h3 id="启动redis">启动Redis</h3>
<pre><code># 启动redis，指定启动的配置文件
[root@master ~]# redis-server /data00/data/redis/redis.conf

# 查看端口，检查是否启动成功
[root@master ~]# ss -lntup | grep 6379
tcp   LISTEN 0      511                           0.0.0.0:6379       0.0.0.0:*    users:(("redis-server",pid=1818909,fd=6))
</code></pre>
<h3 id="连接redis">连接redis</h3>
<pre><code># 连接redis，-h指定IP，-p指定端口，-a指定密码
[root@master ~]# redis-cli -h 127.0.0.1 -p 6379 -a '!Xinxin123'
Warning: Using a password with '-a' or '-u' option on the command line interface may not be safe.
127.0.0.1:6379&gt; info
# Server
redis_version:6.2.18
...# 会打印很多日志信息
</code></pre>

</div>
<div id="MySignature" role="contentinfo">
    <p>本文来自博客园，作者：<a href="https://www.cnblogs.com/huangSir-devops/" target="_blank">huangSir-devops</a>，转载请注明原文链接：<a href="https://www.cnblogs.com/huangSir-devops/p/18884655" target="_blank">https://www.cnblogs.com/huangSir-devops/p/18884655</a>，微信Vac666666，欢迎交流</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.16430359723263888" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-20 10:26">2025-05-20 10:25</span>&nbsp;
<a href="https://www.cnblogs.com/huangSir-devops">huangSir-devops</a>&nbsp;
阅读(<span id="post_view_count">54</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18884655);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18884655', targetLink: 'https://www.cnblogs.com/huangSir-devops/p/18884655', title: 'Redis介绍及6.2.x版本安装' })">举报</a>
</div>
        