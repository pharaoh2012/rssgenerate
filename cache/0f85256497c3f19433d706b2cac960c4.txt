
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/du-hong/p/18659532" title="发布于 2025-04-15 15:31">
    <span role="heading" aria-level="2">PC端自动化测试实战教程-2-pywinauto 启动PC端应用程序 - 上篇（详细教程）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h3>1.简介</h3>
<p>经过上一篇的学习、介绍和了解，想必小伙伴或者童鞋们，已经见识到pywinauto的强大了，今天继续介绍pywinauto，上一篇已经可以打开计算器了，这里宏哥在提供其他方法进行打开计算器和非电脑自带程序。pywinauto 可以启动电脑自带的应用程序，也可以启动电脑安装的应用程序。</p>
<h3>2.运行指定的应用程序</h3>
<p>运行指定的应用程序，顾名思义就是用户指定运行那款程序，就运行那款程序。宏哥这里将其分为两大类：电脑自带的应用程序，如：记事本、计算器等和电脑安装的应用程序，如：QQ、微信等。分好后，接下来看宏哥是如何这两类应用程序的。</p>
<h4>2.1启动电脑自带的应用程序</h4>
<p>上一篇已经启动计算器了，今天宏哥启动一下记事本，给小伙伴或者童鞋们来演示一下。</p>
<p>通过start() 方法指定exe应用程序的名称即可。start()方法用于启动一个可执行程序</p>
<div class="cnblogs_code">
<pre>    <span style="color: rgba(0, 0, 255, 1)">def</span> start(self, cmd_line, timeout=None, retry_interval=<span style="color: rgba(0, 0, 0, 1)">None,
              create_new_console</span>=False, wait_for_idle=True, work_dir=<span style="color: rgba(0, 0, 0, 1)">None):
        </span><span style="color: rgba(128, 0, 0, 1)">"""</span><span style="color: rgba(128, 0, 0, 1)">Start the application as specified by cmd_line</span><span style="color: rgba(128, 0, 0, 1)">"""</span>
        <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> try to parse executable name and check it has correct bitness</span>
        <span style="color: rgba(0, 0, 255, 1)">if</span> <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">.exe</span><span style="color: rgba(128, 0, 0, 1)">'</span> <span style="color: rgba(0, 0, 255, 1)">in</span> cmd_line <span style="color: rgba(0, 0, 255, 1)">and</span> self.backend.name == <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">win32</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">:
            exe_name </span>= cmd_line.split(<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">.exe</span><span style="color: rgba(128, 0, 0, 1)">'</span>)[0] + <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">.exe</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">
            _warn_incorrect_binary_bitness(exe_name)

        </span><span style="color: rgba(0, 0, 255, 1)">if</span> timeout <span style="color: rgba(0, 0, 255, 1)">is</span><span style="color: rgba(0, 0, 0, 1)"> None:
            timeout </span>=<span style="color: rgba(0, 0, 0, 1)"> Timings.app_start_timeout
        </span><span style="color: rgba(0, 0, 255, 1)">if</span> retry_interval <span style="color: rgba(0, 0, 255, 1)">is</span><span style="color: rgba(0, 0, 0, 1)"> None:
            retry_interval </span>=<span style="color: rgba(0, 0, 0, 1)"> Timings.app_start_retry

        start_info </span>=<span style="color: rgba(0, 0, 0, 1)"> win32process.STARTUPINFO()

        </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> we need to wrap the command line as it can be modified</span>
        <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> by the function</span>
        command_line =<span style="color: rgba(0, 0, 0, 1)"> cmd_line

        </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> Actually create the process</span>
        dw_creation_flags =<span style="color: rgba(0, 0, 0, 1)"> 0
        </span><span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)"> create_new_console:
            dw_creation_flags </span>=<span style="color: rgba(0, 0, 0, 1)"> win32con.CREATE_NEW_CONSOLE
        </span><span style="color: rgba(0, 0, 255, 1)">try</span><span style="color: rgba(0, 0, 0, 1)">:
            (h_process, _, dw_process_id, _) </span>=<span style="color: rgba(0, 0, 0, 1)"> win32process.CreateProcess(
                None,                     </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> module name</span>
                command_line,            <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> command line</span>
                None,                     <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> Process handle not inheritable.</span>
                None,                     <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> Thread handle not inheritable.</span>
                0,                         <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> Set handle inheritance to FALSE.</span>
                dw_creation_flags,        <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> Creation flags.</span>
                None,                     <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> Use parent's environment block.</span>
                work_dir,                <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> If None - use parent's starting directory.</span>
                start_info)                <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> STARTUPINFO structure.</span>
        <span style="color: rgba(0, 0, 255, 1)">except</span><span style="color: rgba(0, 0, 0, 1)"> Exception as exc:
            </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> if it failed for some reason</span>
            message = (<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Could not create the process "%s"\n</span><span style="color: rgba(128, 0, 0, 1)">'</span>
                       <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Error returned by CreateProcess: %s</span><span style="color: rgba(128, 0, 0, 1)">'</span>) %<span style="color: rgba(0, 0, 0, 1)"> (cmd_line, str(exc))
            </span><span style="color: rgba(0, 0, 255, 1)">raise</span><span style="color: rgba(0, 0, 0, 1)"> AppStartError(message)

        self.process </span>=<span style="color: rgba(0, 0, 0, 1)"> dw_process_id

        </span><span style="color: rgba(0, 0, 255, 1)">if</span> self.backend.name == <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">win32</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">:
            self.</span><span style="color: rgba(128, 0, 128, 1)">__warn_incorrect_bitness</span><span style="color: rgba(0, 0, 0, 1)">()

        </span><span style="color: rgba(0, 0, 255, 1)">def</span><span style="color: rgba(0, 0, 0, 1)"> app_idle():
            </span><span style="color: rgba(128, 0, 0, 1)">"""</span><span style="color: rgba(128, 0, 0, 1)">Return true when the application is ready to start</span><span style="color: rgba(128, 0, 0, 1)">"""</span><span style="color: rgba(0, 0, 0, 1)">
            result </span>=<span style="color: rgba(0, 0, 0, 1)"> win32event.WaitForInputIdle(
                h_process, int(timeout </span>* 1000<span style="color: rgba(0, 0, 0, 1)">))

            </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> wait completed successfully</span>
            <span style="color: rgba(0, 0, 255, 1)">if</span> result ==<span style="color: rgba(0, 0, 0, 1)"> 0:
                </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> True

            </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> the wait returned because it timed out</span>
            <span style="color: rgba(0, 0, 255, 1)">if</span> result ==<span style="color: rgba(0, 0, 0, 1)"> win32con.WAIT_TIMEOUT:
                </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> False

            </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> bool(self.windows())

        </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> Wait until the application is ready after starting it</span>
        <span style="color: rgba(0, 0, 255, 1)">if</span> wait_for_idle <span style="color: rgba(0, 0, 255, 1)">and</span> <span style="color: rgba(0, 0, 255, 1)">not</span><span style="color: rgba(0, 0, 0, 1)"> app_idle():
            warnings.warn(</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Application is not loaded correctly (WaitForInputIdle failed)</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">, RuntimeWarning)

        self.actions.log(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Started </span><span style="color: rgba(128, 0, 0, 1)">"</span> + cmd_line + <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)"> application.</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)

        </span><span style="color: rgba(0, 0, 255, 1)">return</span> self</pre>
</div>
<p>相关参数：</p>
<ul>
<li>cmd_line: 是包含路径的启动应用程序的命令以及启动参数</li>
<li>timeout: 启动程序的超时时钟设置，默认为5s</li>
<li>create_new_console: 创建新的控制台，默认不创建</li>
<li>wait_for_idle: 是否等待到程序的Idle状态</li>
<li>work_dir: 指定工作目录</li>
</ul>
<h5>2.1.1代码设计</h5>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202501/1232840-20250109082957532-1476532854.png" alt="" loading="lazy"></p>
<h5>2.1.2参考代码</h5>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-01-18
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: Windows GUI自动化测试-2-pywinauto 启动PC端应用程序（详细教程）
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span>

<span style="color: rgba(0, 0, 255, 1)">from</span> pywinauto.application <span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> Application
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 启动记事本</span>
app = Application(backend=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">uia</span><span style="color: rgba(128, 0, 0, 1)">"</span>).start(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">notepad.exe</span><span style="color: rgba(128, 0, 0, 1)">"</span>)</pre>
</div>
<h5>2.1.3运行代码</h5>
<p>1.运行代码，右键Run'Test'，就可以看到控制台输出，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202501/1232840-20250109083310116-1698790129.png" alt="" loading="lazy"></p>
<p>2.运行代码后电脑端的动作（启动记事本）。如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202501/1232840-20250109083304202-1948959414.gif" alt="" loading="lazy"></p>
<h4>2.2启动电脑安装的应用程序</h4>
<p>宏哥这里以大家熟悉的微信为例，属性-查看快捷方式，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202501/1232840-20250109083711741-942735154.png" alt="" loading="lazy"></p>
<h5>2.1.1代码设计</h5>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202501/1232840-20250109084055509-1521553565.png" alt="" loading="lazy"></p>
<h5>2.1.2参考代码</h5>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-01-18
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: Windows GUI自动化测试-2-pywinauto 启动PC端应用程序（详细教程）
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span>

<span style="color: rgba(0, 0, 255, 1)">from</span> pywinauto.application <span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> Application
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 启动微信</span>
app = Application(backend=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">uia</span><span style="color: rgba(128, 0, 0, 1)">"</span>).start(r<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">D:\WeChat\WeChat.exe</span><span style="color: rgba(128, 0, 0, 1)">"</span>)</pre>
</div>
<h5>2.1.3运行代码</h5>
<p>1.运行代码，右键Run'Test'，就可以看到控制台输出，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202501/1232840-20250109084033197-1327494582.png" alt="" loading="lazy"></p>
<p>2.运行代码后电脑端的动作（启动微信）。如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202501/1232840-20250109084006863-1822883808.gif" alt="" loading="lazy"></p>
<h3>3.小结</h3>
<p>今天主要分享和讲解了电脑（PC端）系统自带的应用程序，如：记事本、计算器等等，以及电脑（PC端）系统安装的应用程序，如QQ、微信等等。如何启动以及启动的几种方法，非常简单。</p>
<p>&nbsp;好了，时间不早了今天就分享到这里，感谢你耐心地阅读！</p>
</div>
<div id="MySignature" role="contentinfo">
    <div id="MySignature" style="display: block">
<div style="font-size: 13px; border: 1px dashed rgb(45, 161, 45); padding: 10px 15px; background-color: rgb(248, 248, 248)">
<label style="font-weight: bold">
&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家在移动端也能看到我分享的博文，现已注册个人微信公众号，扫描左下方二维码即可，欢迎大家关注，有时间会及时分享相关技术博文。</label><br>
<label style="font-weight: bold">
&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家互动讨论相关技术问题，现已组建专门的微信群，由于微信群满100，请您扫描右下方宏哥个人微信二维码拉你进群<label style="font-weight: bold; color: red; font-size: 15px">（请务必备注：已关注公众号进群）平时上班忙（和你一样），所以加好友不及时，请稍安勿躁~</label>，欢迎大家加入这个大家庭，我们一起畅游知识的海洋。</label><br>
&nbsp;&nbsp;&nbsp;&nbsp;感谢您花时间阅读此篇文章,如果您觉得这篇文章你学到了东西也是为了犒劳下博主的码字不易不妨打赏一下吧，让博主能喝上一杯咖啡，在此谢过了！<br>
&nbsp;&nbsp;&nbsp;&nbsp;如果您觉得阅读本文对您有帮助，请点一下左下角<a id="recommend" style="font-weight: bold; color: red; font-size: 15px; text-decoration: underline">“推荐”</a>按钮，您的<label style="font-weight: bold; color: red; font-size: 15px">“推荐”</label>将是我最大的写作动力！另外您也可以选择<a id="follow_me_btn" style="cursor: pointer; color: blue; text-decoration: underline">【<strong>关注我</strong>】</a>，可以很方便找到我！<br>
&nbsp;&nbsp;&nbsp;&nbsp;本文版权归作者和博客园共有，来源网址：<a href="https://www.cnblogs.com/du-hong" style="color: red; text-decoration: underline" target="_blank">https://www.cnblogs.com/du-hong</a> 欢迎各位转载，但是未经作者本人同意，转载文章之后必须在文章页面明显位置给出作者和原文连接，否则保留追究法律责任的权利！
</div>
<div style="text-align: center; margin-top: 10px">
   <p style="
    font-weight: bolder;
    color: red;
">公众号(关注宏哥)&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;客服微信</p><img style="width: 200px; padding-right: 20%" alt="个人微信公众号" src="https://img2018.cnblogs.com/common/1741949/201911/1741949-20191119095948011-608816619.png">
   <img style="width: 200px" alt="个人微信" src="https://img2018.cnblogs.com/common/1741949/201911/1741949-20191106101257091-849954564.png">
</div>
</div>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.035644167645833336" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-15 15:31">2025-04-15 15:31</span>&nbsp;
<a href="https://www.cnblogs.com/du-hong">北京-宏哥</a>&nbsp;
阅读(<span id="post_view_count">31</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18659532);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18659532', targetLink: 'https://www.cnblogs.com/du-hong/p/18659532', title: 'PC端自动化测试实战教程-2-pywinauto 启动PC端应用程序 - 上篇（详细教程）' })">举报</a>
</div>
        