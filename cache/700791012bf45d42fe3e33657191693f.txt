
    <a name="top"></a>
    <h2><a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/marso/p/18711938" title="发布于 2025-02-12 17:45">
    <span role="heading" aria-level="2">用脚本采用wget方式直接下载谷歌云盘里面的文件实操</span>
    

</a>
</h2>
    <small>
<span id="post-date" data-last-update-days="0.019460566120370372" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-12 17:48">2025-02-12 17:45</span>&nbsp;
<a href="https://www.cnblogs.com/marso">marso</a>&nbsp;
阅读(<span id="post_view_count">12</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18711938" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18711938);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18711938', targetLink: 'https://www.cnblogs.com/marso/p/18711938', title: '用脚本采用wget方式直接下载谷歌云盘里面的文件实操' })">举报</a>
</small>
    <div class="entry">
        <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<div data-zone-id="0" data-line-index="0" data-line="true">今天在工作中遇到了一个挑战，在这里和大家分享一下我的解决过程。突然接到一个紧急需求，需要在服务器上部署一个模型文件，而这个文件存储在谷歌云盘里。摆在面前有两个选择：</div>
<ul>
<li class="temp-li bullet1" data-line="true" data-list="bullet1"><strong>方案一</strong>：先在本地下载，然后再上传到服务器。</li>
</ul>
<ul>
<li class="temp-li bullet1" data-line="true" data-list="bullet1"><strong>方案二</strong>：直接在服务器上下载。</li>
</ul>
<div data-zone-id="0" data-line-index="3" data-line="true">这个模型文件足足有 5 个 G，通过本地下载再上传到服务器，不仅要耗费大量的时间，还可能因为网络不稳定导致传输失败。所以，我果断选择了第二种方案。那么，我是如何成功在服务器上完成下载的呢？接下来就详细为大家介绍一下整个过程。</div>
<div data-zone-id="0" data-line-index="4" data-line="true">如果你也遇到过类似的问题，或者对从服务器直接下载谷歌云盘文件的方法感兴趣，就请继续关注我的后续内容吧！</div>
<div data-zone-id="0" data-line-index="4" data-line="true">&nbsp;</div>
<div data-zone-id="0" data-line-index="4" data-line="true">这里以https://drive.google.com/drive/folders/1jI32B-2JX17seSGG0-MnZgUhCMHCEZlx内容为例进行演示：</div>
<div data-zone-id="0" data-line-index="4" data-line="true">
<p>要通过 <code>wget</code> 下载谷歌云盘中的大文件，你需要一些额外的步骤，因为 Google Drive 并不直接允许通过 <code>wget</code> 下载文件。通常，你需要使用 Google Drive 的共享链接，并处理一些重定向问题。以下是如何用 <code>wget</code> 下载 Google Drive 上的大文件的步骤：</p>
<ol>
<li>
<p><strong>获取文件的共享链接</strong>：首先，你需要确保文件在 Google Drive 中是共享的，并获取共享链接。链接通常看起来像这样：</p>
<div class="contain-inline-size rounded-md border-[0.5px] border-token-border-medium relative bg-token-sidebar-surface-primary dark:bg-gray-950">
<div class="overflow-y-auto p-4" dir="ltr">
<div class="cnblogs_Highlighter">
<pre class="brush:bash;gutter:true;">https://drive.google.com/file/d/FILE_ID/view?usp=sharing
</pre>
</div>
<p>在这个链接中，<code>FILE_ID</code> 是文件的唯一标识符。</p>
<p><img src="https://img2024.cnblogs.com/blog/579870/202502/579870-20250212173651238-288142275.png" alt="" loading="lazy"></p>
<p>这里获取到https://drive.google.com/file/d/1mjIqU-c5q3qMI74XZd3UrkZek0IDTUUh/view?usp=sharing，所以它的file_id=1mjIqU-c5q3qMI74XZd3UrkZek0IDTUUh</p>
</div>
</div>
</li>
<li>
<p><strong>使用 wget 下载文件</strong>：你可以使用以下的命令来下载文件</p>
<div class="contain-inline-size rounded-md border-[0.5px] border-token-border-medium relative bg-token-sidebar-surface-primary dark:bg-gray-950">
<div class="overflow-y-auto p-4" dir="ltr">
<div class="cnblogs_Highlighter">
<pre class="brush:bash;gutter:true;">wget --no-check-certificate 'https://drive.google.com/uc?export=download&amp;id=FILE_ID' -O FILENAME
</pre>
</div>
<p>将 <code>FILE_ID</code> 替换为文件的 ID，将 <code>FILENAME</code> 替换为你希望保存的文件名。</p>
</div>
</div>
</li>
<li>
<p><strong>处理重定向问题</strong>：由于 Google Drive 的大文件下载会遇到额外的确认步骤（例如安全扫描），你可能需要绕过这一过程。如果文件较大（超过100MB），你可能需要通过 <code>wget</code> 先获取一个确认文件（通常是 <code>confirm</code>），然后才会继续下载。</p>
<p>你可以使用下面的脚本来解决这一问题：</p>
<div class="cnblogs_Highlighter">
<pre class="brush:bash;gutter:true;">#!/bin/bash

# 设置文件ID和输出文件名
FILE_ID="1mjIqU-c5q3qMI74XZd3UrkZek0IDTUUh"   # 替换成实际文件ID
OUTPUT="unet.pth"        # 替换成你想保存的文件名

# 获取下载页面并保存响应
RESPONSE=$(wget --quiet --save-cookies cookies.txt \
    --keep-session-cookies --no-check-certificate \
    "https://drive.google.com/uc?export=download&amp;id=${FILE_ID}" \
    -O -)

# 保存响应以供调试
echo "$RESPONSE" &gt; response.html

# 提取完整的下载参数
DOWNLOAD_URL="https://drive.usercontent.google.com/download"
ID=$(echo "$RESPONSE" | grep -o 'name="id" value="[^"]*"' | cut -d'"' -f4)
EXPORT=$(echo "$RESPONSE" | grep -o 'name="export" value="[^"]*"' | cut -d'"' -f4)
CONFIRM=$(echo "$RESPONSE" | grep -o 'name="confirm" value="[^"]*"' | cut -d'"' -f4)
UUID=$(echo "$RESPONSE" | grep -o 'name="uuid" value="[^"]*"' | cut -d'"' -f4)

# 检查是否所有参数都已获取
if [ -z "$ID" ] || [ -z "$EXPORT" ] || [ -z "$CONFIRM" ] || [ -z "$UUID" ]; then
    echo "无法提取所有必要的下载参数"
    echo "ID: $ID"
    echo "EXPORT: $EXPORT"
    echo "CONFIRM: $CONFIRM"
    echo "UUID: $UUID"
    exit 1
fi

# 构建完整的下载URL
FULL_URL="${DOWNLOAD_URL}?id=${ID}&amp;export=${EXPORT}&amp;confirm=${CONFIRM}&amp;uuid=${UUID}"

echo "开始下载文件..."
echo "使用URL: $FULL_URL"

# 执行下载
wget --load-cookies cookies.txt \
    --no-check-certificate \
    "$FULL_URL" \
    -O "$OUTPUT"

# 检查下载是否成功
if [ $? -eq 0 ]; then
    echo "文件下载成功：$OUTPUT"
else
    echo "下载失败"
    exit 1
fi

# 清理临时文件
rm -f cookies.txt

exit 0
</pre>
</div>
<p class="whitespace-pre-wrap break-words">&nbsp;</p>
<p class="whitespace-pre-wrap break-words">这个脚本应该能够正确处理Google Drive的病毒扫描警告页面，并成功下载文件。</p>
</li>
<li>
<p class="whitespace-pre-wrap break-words">.<strong>使用方法</strong>：</p>
<ol class="[&amp;:not(:last-child)_ul]:pb-1 [&amp;:not(:last-child)_ol]:pb-1 list-decimal space-y-1.5 pl-7">
<li class="whitespace-normal break-words">将脚本保存为文件（例如：download_gdrive.sh）</li>
<li class="whitespace-normal break-words">修改FILE_ID为你要下载的文件ID</li>
<li class="whitespace-normal break-words">修改OUTPUT为你想保存的文件名</li>
<li class="whitespace-normal break-words">给脚本添加执行权限：<code class="bg-text-200/5 border border-0.5 border-border-300 text-danger-000 whitespace-pre-wrap rounded-[0.3rem] px-1 py-px text-[0.9rem]">chmod +x download_gdrive.sh</code></li>
<li class="whitespace-normal break-words">运行脚本：<code class="bg-text-200/5 border border-0.5 border-border-300 text-danger-000 whitespace-pre-wrap rounded-[0.3rem] px-1 py-px text-[0.9rem]">./download_gdrive.sh</code></li>
</ol></li>
<li>
<p class="whitespace-pre-wrap break-words">我在服务器顺利下载大文件，如图所示：<img src="https://img2024.cnblogs.com/blog/579870/202502/579870-20250212174659307-1710845348.png" alt="" loading="lazy"></p>
</li>
</ol></div>
</div>
<div class="clear"></div>

        <div class="clear"></div>
        
</div>
    <ul class="postmetadata">
        <vc:categories-tags blog-app="marso" blog-id="193133" post-id="18711938"></vc:categories-tags>
    </ul>
