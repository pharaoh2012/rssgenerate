
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/henjay724/p/18971468" title="发布于 2025-07-07 20:02">
    <span role="heading" aria-level="2">痞子衡嵌入式：在MDK5.40开发环境下添加用户下载算法FLM文件的方法</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<hr>
<p>　　大家好，我是痞子衡，是正经搞技术的痞子。今天痞子衡给大家分享的是<strong>在MDK5.40开发环境下添加用户下载算法FLM文件的方法</strong>。</p>
<p>　　最近痞子衡给一个 RT1170 客户制作了一个 SEGGER 下载算法，在 J-Flash 下测试一切正常，于是直接发给了客户。当客户尝试将这个下载算法添加进 MDK 里使用时发现无法成功添加（我们知道 SEGGER 与 MDK 下载算法共用了同一套 API 接口与文件格式 FLM，原则上两者可以互相替代），这是怎么回事？今天痞子衡就来聊聊这个话题：</p>
<blockquote>
<ul>
<li>Note: 测试 MDK 版本为 V5.40</li>
</ul>
</blockquote>
<h3 id="一传统添加算法方法失效">一、传统添加算法方法失效</h3>
<p>　　MDK 安装完成后，在如下路径会放一些下载算法。当我们制作好一个新的下载算法后，传统的方法就是将这个算法 FLM 文件直接拷贝一份放到该路径下：</p>
<blockquote>
<p>MDK自带下载算法路径：\Keil_v5\ARM\Flash</p>
</blockquote>
<p>　　这时随便打开一个 MDK 工程，找到算法选择界面（Origin 属性为 MDK Core 表明是自带算法路径），就会看到这个新算法（由于算法可能会重名，这里主要看下方文件路径），选中保存似乎就可以了，然而不幸的是，当你再次打开算法选择界面会发现这个算法选择没有被正常保存。这就是客户遇到的问题。</p>
<blockquote>
<ul>
<li>Note：该问题在早期 MDK v5.31 应该不存在，V5.40 可能更改了设计（也可能是 bug）</li>
</ul>
</blockquote>
<p><img src="https://raw.githubusercontent.com/JayHeng/pzhmcu-picture/master/cnblogs/MDK5.40_AddUserFlm_Issue.PNG" alt="" loading="lazy"></p>
<p>　　要解决这个问题，也有替代方法，那就是在 MDK 里直接用我们在 SEGGER 安装目录里添加的的新下载算法（详见 <a href="https://www.cnblogs.com/henjay724/p/15465655.html" target="_blank">《超级下载算法RT-UFL v1.0在Keil MDK下的使用》</a> 一文 2.5 小节），不过这个替代方法仅适合 J-Link 调试器，如果用 DAP-Link 调试器那就无能为力了。所以我们还是要直接解决 MDK 添加算法问题。</p>
<h3 id="二借助dfp包来添加算法">二、借助DFP包来添加算法</h3>
<p>　　如果你阅读过痞子衡旧文 <a href="https://www.cnblogs.com/henjay724/p/13837050.html" target="_blank">《NOR Flash下载算法(Keil MDK篇)》</a> 应该知道 MDK 从 V5 开始分成 MDK Core 和 Software Packs 两部分，后者是全新的芯片支持包管理方式。在 Pack Installer 里可以安装芯片 DFP 包， DFP 包里也包含下载算法：</p>
<p><img src="https://raw.githubusercontent.com/JayHeng/pzhmcu-picture/master/cnblogs/MDK5.40_AddUserFlm_Pack.PNG" alt="" loading="lazy"></p>
<blockquote>
<p>DFP下载算法路径：\Arm\Packs\NXP\MIMXRT1176_DFP\25.03.00\devices\MIMXRT1176\arm</p>
</blockquote>
<p>　　我们试试将自己制作的下载算法添加到这个 DFP 包下载算法路径里，然后编辑 .pdsc 文件（默认文件属性是 Read-only,需更改文件属性方可编辑）照葫芦画瓢添加一句代码完成新算法的支持。</p>
<p><img src="https://raw.githubusercontent.com/JayHeng/pzhmcu-picture/master/cnblogs/MDK5.40_AddUserFlm_Algo.PNG" alt="" loading="lazy"></p>
<p>　　如果此时 MDK 工程是打开的状态，需要先关闭一下再重新打开（否则 DFP 包里新添加算法不能正常识别），找到算法选择界面（Origin 属性为 DFP 表明是DFP算法路径），看到新添加算法选中保存，这次就能正常保存了，客户问题完美解决。</p>
<p><img src="https://raw.githubusercontent.com/JayHeng/pzhmcu-picture/master/cnblogs/MDK5.40_AddUserFlm_Fix.PNG" alt="" loading="lazy"></p>
<p>　　至此，在MDK5.40开发环境下添加用户下载算法FLM文件的方法痞子衡便介绍完毕了，掌声在哪里~~~</p>
<h3 id="欢迎订阅">欢迎订阅</h3>
<p>文章会同时发布到我的 <a href="https://www.cnblogs.com/henjay724/" target="_blank">博客园</a>、<a href="https://blog.csdn.net/henjay724" target="_blank" rel="noopener nofollow">CSDN</a>、<a href="http://weixin.sogou.com/weixin?type=1&amp;query=%E7%97%9E%E5%AD%90%E8%A1%A1%E5%B5%8C%E5%85%A5%E5%BC%8F" target="_blank" rel="noopener nofollow">微信公众号</a>、<a href="https://www.zhihu.com/people/henjay724" target="_blank" rel="noopener nofollow">知乎</a>、<a href="https://www.eefocus.com/user/3876937/article/" target="_blank" rel="noopener nofollow">与非网</a>、<a href="https://blog.chinaaet.com/henjay724" target="_blank" rel="noopener nofollow">电子技术应用AET</a>、<a href="https://www.dianyuan.com/people/912268" target="_blank" rel="noopener nofollow">电子星球</a>、<a href="https://blog.51cto.com/henjay724" target="_blank" rel="noopener nofollow">51CTO</a> 平台上。</p>
<p>微信搜索"<strong>痞子衡嵌入式</strong>"或者扫描下面二维码，就可以在手机上第一时间看了哦。</p>
<p><img src="https://raw.githubusercontent.com/JayHeng/pzhmcu-picture/master/github/pzhMcu_qrcode_258x258.jpg" alt="" loading="lazy"></p>

</div>
<div id="MySignature" role="contentinfo">
    <div class="autograph"> 
  <p style="font-family: 楷体; font-size: 15px">&nbsp;&nbsp;最后欢迎关注痞子衡个人微信公众号【痞子衡嵌入式】，一个专注嵌入式技术的公众号，跟着痞子衡一起玩转嵌入式。</p>

  <img style="float: left" src="https://img2022.cnblogs.com/blog/623659/202211/623659-20221116165755872-427238307.jpg" alt="痞子衡嵌入式-微信二维码" class="img_avatar">

  <img style="float: right" src="http://henjay724.com/image/cnblogs/baogeMcu_payment_wechat_150x150.png" alt="痞子衡嵌入式-微信收款二维码" class="img_avatar">

  <img style="float: right" src="http://henjay724.com/image/cnblogs/baogeMcu_payment_alipay_150x150.jpg" alt="痞子衡嵌入式-支付宝收款二维码" class="img_avatar">

<br>
  <p>&nbsp;&nbsp;衡杰(痞子衡)，目前就职于某全球顶级半导体原厂MCU系统部门，担任高级嵌入式系统应用工程师。</p>

  <p>&nbsp;&nbsp;专栏内所有文章的转载请注明出处：<a href="http://www.cnblogs.com/henjay724/" target="_blank">http://www.cnblogs.com/henjay724/</a></p>

  <p>&nbsp;&nbsp;与痞子衡进一步交流或咨询业务合作请发邮件至 <a href="hengjie1989@foxmail.com" target="_blank">hengjie1989@foxmail.com</a></p>

  <p>&nbsp;&nbsp;可以关注痞子衡的Github主页 <a href="https://github.com/JayHeng" target="_blank">https://github.com/JayHeng</a>，有很多好玩的嵌入式项目。</p>

  <p><font color="yellow">&nbsp;&nbsp;关于专栏文章有任何疑问请直接在博客下面留言，痞子衡会及时回复免费(划重点)答疑。</font></p>

  <p><font color="red">&nbsp;&nbsp;痞子衡邮箱已被私信挤爆，技术问题不推荐私信，坚持私信请先扫码付款(5元起步)再发。</font></p>
<br>
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.007638888888888889" data-date-updated="2025-07-07 20:13">2025-07-07 20:02</span>&nbsp;
<a href="https://www.cnblogs.com/henjay724">痞子衡</a>&nbsp;
阅读(<span id="post_view_count">17</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18971468);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18971468', targetLink: 'https://www.cnblogs.com/henjay724/p/18971468', title: '痞子衡嵌入式：在MDK5.40开发环境下添加用户下载算法FLM文件的方法' })">举报</a>
</div>
        