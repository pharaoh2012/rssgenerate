
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/expector/p/18726354/music_player_ts" title="发布于 2025-02-20 13:06">
    <span role="heading" aria-level="2">实现一个简单的基于APlayer.js/.ts的支持网易云远程音乐的音乐播放器</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>最近写个人网站的时候有这个需求，然而 <code>metting.js</code> 支持不稳定，于是便想自己实现一个。由于我是拿 <code>TS</code> 进行开发的，故使用 <code>APlayer.ts</code> 。</p>
<p>首先 <code>APlayer.ts</code> 音乐是可以直接从远程获取的，请求网易云歌曲只需要请求 <a href="https://music.163.com/song/media/outer/url?id=$%7Bid%7D.mp3" target="_blank" rel="noopener nofollow"><code>https://music.163.com/song/media/outer/url?id=${id}.mp3</code></a> 。</p>
<p>比较麻烦的是获取歌曲信息和歌词，需要绕开跨域请求限制，考虑到我的网页在 <code>Netlify</code> 上部署，添加一个 <code>netlify.toml</code> 配置文件：</p>
<pre><code>[[redirects]]
from = "/music/*"
to = "https://music.163.com/:splat"
status = 200
force = true
</code></pre>
<p>请求歌曲信息和歌词：</p>
<pre><code>async fetchSongDetail(songId: number) {
    try {
        const response = await fetch(
            `/music/api/song/detail/?id=${songId}&amp;ids=%5B${songId}%5D`,
        );
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        const data = await response.json();
        return data.songs[0];
    } catch (error) {
        console.error('Error fetching song detail:', error);
        return null;
    }
}
async fetchSongLyric(songId: number) {
    try {
        const response = await fetch(
            `/music/api/song/lyric?id=${songId}&amp;lv=1&amp;kv=1&amp;tv=-1`,
        );
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        const data = await response.json();
        return data.lrc.lyric;
    } catch (error) {
        console.error('Error fetching song lyric:', error);
        return null;
    }
}
</code></pre>
<p>最后我单独注册了一个组件实现网易云音乐的播放：</p>
<pre><code>import './music_player.scss';

import APlayer from 'aplayer-ts';

export class MusicPlayerElement extends HTMLElement {
    constructor() {
        super();
        const id = parseInt(this.id);
        this.fetchSongDetail(id).then((detail) =&gt; {
            if (detail) {
                this.fetchSongLyric(id).then((lyric) =&gt; {
                    if (lyric) {
                        try {
                            APlayer().init({
                                container: this,
                                lrcType: 1,
                                audio: [
                                    {
                                        name: detail.name,
                                        artist: detail.artists
                                            .map(
                                                (artist: { name: any }) =&gt;
                                                    artist.name,
                                            )
                                            .join(', '),
                                        url: `https://music.163.com/song/media/outer/url?id=${id}.mp3`,
                                        cover: detail.album.picUrl,
                                        lrc: lyric,
                                    },
                                ],
                            });
                        } catch (err) {
                            console.error('Error initializing APlayer:', err);
                        }
                    }
                });
            }
        });
    }

    async fetchSongDetail(songId: number) {
        // ...
    }
    async fetchSongLyric(songId: number) {
        // ...
    }
}

customElements.define('music-player', MusicPlayerElement);
</code></pre>
<p>另外还有一个自建的暗色播放器样式：</p>
<pre><code>@use '../styles/share.scss' as share;

@import url('aplayer-ts/src/css/base.css');

@media (prefers-color-scheme: dark) {
    .aplayer {
        .aplayer-body {
            background: share.$main-color;
        }

        .aplayer-lrc {
            &amp;:before {
                background: linear-gradient(180deg,
                        share.$main-color 0,
                        hsla(0, 0%, 100%, 0));
            }

            &amp;:after {
                background: linear-gradient(180deg,
                        hsla(0, 0%, 100%, 0) 0,
                        share.$main-color );
            }

            p {
                color: white;

                &amp;.aplayer-lrc-current {
                    color: #66ccff;
                }
            }
        }

        .aplayer-info {
            .aplayer-music {
                .aplayer-author {
                    color: #66ccff;
                }
            }
        }
    }

    .aplayer-title {
        color: white;
    }

    @media (max-width: calc(#{share.$screen-limit} - 1px)) {
        music-player {
            display: none;
        }
    }
}
</code></pre>
<p>使用方法：</p>
<pre><code>&lt;music-player
    server="netease"
    type="song"
    id="2151900715"
    theme="#66ccff"
&gt;&lt;/music-player&gt;
</code></pre>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="7.052030581365741" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-20 13:07">2025-02-20 13:06</span>&nbsp;
<a href="https://www.cnblogs.com/expector">Expector</a>&nbsp;
阅读(<span id="post_view_count">14</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18726354" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18726354);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18726354', targetLink: 'https://www.cnblogs.com/expector/p/18726354/music_player_ts', title: '实现一个简单的基于APlayer.js/.ts的支持网易云远程音乐的音乐播放器' })">举报</a>
</div>
        