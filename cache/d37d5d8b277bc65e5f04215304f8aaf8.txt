
        <div class="postTitle">
            <h1><a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chenyishi/p/18626831" title="发布于 2024-12-24 10:35">
    <span role="heading" aria-level="2">.NET 9 中的 多级缓存 HybridCache</span>
    

</a>
</h1>
        </div>
        <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h4>HybridCache是什么</h4>
<p>在 .NET 9 中，Microsoft 将 HybridCache 带入了框架体系。</p>
<p>HybridCache 是一种新的缓存模型，设计用于封装本地缓存和分布式缓存，使用者无需担心选择缓存类型，从而优化性能和维护效率。</p>
<p>实际上，HybridCache 基于 IDistributedCache 提供的接口和操作，但增加了一些其他的特性，如封装两类不同缓存库（本地和分布），支持标签删除（Tag-based Cache Eviction）和约束选项。</p>
<p><strong>需要注意</strong>的是，HybridCache仍处于preview阶段。</p>
<hr>
<h4>HybridCache 与 IDistributedCache 的区别</h4>
<p><strong>IDistributedCache：</strong></p>
<ol>
<li>仅支持分布式缓存，如 Redis、SQL Server、MemoryCache。</li>
<li>选择依赖于目标缓存和管理设备。</li>
<li>不支持标签删除，只能基于键值操作。</li>
</ol>
<p><strong>HybridCache：</strong></p>
<ol>
<li>支持封装本地和分布式缓存，在读取时优先读取本地缓存，如本地不存在，再读取分布式。</li>
<li>支持标签删除，通过指定标签管理缓存内容。</li>
<li>选项更加精简，支持自动化操作和选项约束。</li>
</ol><hr>
<h4>HybridCache 的好处</h4>
<ol>
<li><strong>性能优化：</strong> 本地缓存速度超过分布式，使用 HybridCache 可以减少读取分布缓存库时的延迟。</li>
<li><strong>精简化工程：</strong> 使用者不需再自行核实选择哪个缓存，增加了工程效率。</li>
<li><strong>标签管理：</strong> 缓存标签记录不同类型数据，便于分类管理和删除缓存。</li>
<li><strong>安全性：</strong> 支持选项约束，使缓存操作更严格，防止错误使用和内容亏失。</li>
</ol><hr>
<h4>代码示例</h4>
<p>以下代码展示如何使用 HybridCache：</p>
<h5>1. 添加缓存服务</h5>
<pre><code class="language-csharp">var builder = WebApplication.CreateBuilder(args);

// 注册 HybridCache 服务
builder.Services.AddHybridCache();

// 注册 Redis 缓存服务，为 HybridCache 提供分布式缓存
builder.Services.AddStackExchangeRedisCache(options =&gt;
{
    options.Configuration = builder.Configuration.GetConnectionString("RedisConnectionString");
});

builder.Services.AddControllers();</code></pre>
<h5>2. 实现接口操作</h5>
<p><strong>读取缓存</strong></p>
<pre><code class="language-csharp">[HttpGet("GetCache")]
public async Task&lt;string[]&gt; Get()
{
    return await _cache.GetOrCreateAsync(
        "a-1", async cancel =&gt; await Task.FromResult(Summaries)
    );
}
</code></pre>
<p><strong>删除缓存</strong></p>
<pre><code class="language-csharp">[HttpGet("DeleteCache")]
public async Task&lt;bool&gt; Delete()
{
    await _cache.RemoveAsync("a-1");
    return true;
}
</code></pre>
<p><strong>通过标签读取缓存</strong></p>
<pre><code class="language-csharp">[HttpGet("GetCacheByTag")]
public async Task&lt;string[]&gt; GetCacheByTag()
{
    var tags = new List&lt;string&gt; { "tag1", "tag2", "tag3" };
    var entryOptions = new HybridCacheEntryOptions
    {
        Expiration = TimeSpan.FromMinutes(1),
        LocalCacheExpiration = TimeSpan.FromMinutes(1)
    };
    return await _cache.GetOrCreateAsync(
        "a-1", async cancel =&gt; await Task.FromResult(Summaries),
        entryOptions, tags
    );
}
</code></pre>
<p><strong>通过标签删除缓存</strong></p>
<pre><code class="language-csharp">[HttpGet("DeleteCacheByTag")]
public async Task&lt;bool&gt; DeleteCacheByTag()
{
    var tags = new List&lt;string&gt; { "tag1" };
    await _cache.RemoveByTagAsync(tags);
    return true;
}
</code></pre>
<hr>
<h4>小结</h4>
<p>.NET 9 的 HybridCache 提供了一种便捷且高效的缓存解决方案，将本地缓存和分布式缓存无缝结合，为开发者简化了缓存逻辑，同时提供了更多高级功能，如标签管理和选项约束。通过代码示例可以看出，HybridCache 的操作直观且易于实现，非常适合现代应用场景。</p>
<p>如果你正在使用 .NET 9，尝试将 HybridCache 应用于你的项目中，体验其高效与简洁！</p>
</div>
<div class="clear"></div>

        <div class="postDesc">posted on 
<span id="post-date" data-last-update-days="0.002047904920138889" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2024-12-24 10:43">2024-12-24 10:35</span>&nbsp;
<a href="https://www.cnblogs.com/chenyishi">chester·chen</a>&nbsp;
阅读(<span id="post_view_count">21</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18626831" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18626831);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18626831', targetLink: 'https://www.cnblogs.com/chenyishi/p/18626831', title: '.NET 9 中的 多级缓存 HybridCache' })">举报</a>
</div>
    