
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/gupingan/p/18577692" title="发布于 2024-11-29 22:15">
    <span role="heading" aria-level="2">JS 预编译代码实例分析</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>了解 JavaScript 引擎在执行代码过程中所做的一些行为是非常必要的，这有助于我们在遇到莫名其妙的调用时，能够大致定位问题所在。在我学习了预编译的相关知识，并基于<a href="https://web.qianguyihao.com/04-JavaScript%E5%9F%BA%E7%A1%80/24-%E9%A2%84%E7%BC%96%E8%AF%91.html#javascript-%E8%BF%90%E8%A1%8C%E4%B8%89%E9%83%A8%E6%9B%B2" target="_blank" rel="noopener nofollow">该文章</a>，引用其中的一段代码，结合“变量提升”、“函数提升”的小示例，对其进行详细的分析，算是留作一份笔记巩固记忆、加深理解。</p>
<h3 id="代码">代码</h3>
<pre><code class="language-javascript">console.log(a)
fn1(1)
var a = 123
console.log(a)

var fn1 = () =&gt; {
  console.log(a)
}

function fn1(a) {
  console.log(a)
  var a = 666
  console.log(a)
  function a() {}
  console.log(a)
  var b = function () {}
  console.log(b)
  function c() {}
}

fn1(1)
</code></pre>
<p>错误的推导会让你认为上述代码的打印如下：</p>
<pre><code class="language-javascript">如果你判断首行报错，那么需要了解变量提升
或者你这样认为
undefined
undefined
666
[Function: a]
[Function: b]
123
undefined
666
[Function: a]
[Function: b]
</code></pre>
<p>实际上，上方的代码打印如下：</p>
<pre><code class="language-javascript">undefined
[Function: a]
666
666
[Function: b]
123
123
</code></pre>
<h3 id="详细分析">详细分析</h3>
<h4 id="1-创建全局对象-go">1. 创建全局对象 GO</h4>
<p>在全局执行上下文中，创建全局对象 <code>GO</code>。</p>
<h4 id="2-加载当前-js-文件">2. 加载当前 JS 文件</h4>
<p>加载并解析当前的 JavaScript 文件。</p>
<h4 id="3-脚本语法分析">3. 脚本语法分析</h4>
<p>进行语法分析，确保代码没有语法错误。</p>
<h4 id="4-当前-js-文件预编译">4. 当前 JS 文件预编译</h4>
<h5 id="4-1-查找变量声明">4-1. 查找变量声明</h5>
<pre><code class="language-javascript">GO = {
  a: undefined
}
</code></pre>
<h5 id="4-2-查找函数声明除了函数表达式">4-2. 查找函数声明（除了函数表达式）</h5>
<pre><code class="language-javascript">GO = {
  a: undefined,
  fn1: function fn1(a) {}
}
</code></pre>
<h4 id="5-正常执行执行到函数调用前">5. 正常执行（执行到函数调用前）</h4>
<pre><code class="language-javascript">console.log(a) // 打印 undefined
fn1(1) // 执行到这里了，小心，函数也有预编译，执行前一刻完成
</code></pre>
<h4 id="6-函数预编译">6. 函数预编译</h4>
<h5 id="6-1-创建活跃对象-ao">6-1. 创建活跃对象 AO</h5>
<pre><code class="language-javascript">AO = {}
</code></pre>
<h5 id="6-2-查找变量和形参">6-2. 查找变量和形参</h5>
<pre><code class="language-javascript">AO = {
  a: undefined,
  b: undefined
}
</code></pre>
<h5 id="6-3-实参值和形参统一">6-3. 实参值和形参统一</h5>
<pre><code class="language-javascript">AO = {
  a: 1,
  b: undefined
}
</code></pre>
<h5 id="6-4-查找函数非函数表达式">6-4. 查找函数（非函数表达式）</h5>
<pre><code class="language-javascript">AO = {
  a: function a() {},
  b: undefined,
  c: function c() {}
}
</code></pre>
<h4 id="7-正常执行函数根据-ao">7. 正常执行函数（根据 AO）</h4>
<pre><code class="language-javascript">console.log(a)  // 打印 function a() {}
var a = 666  // a 改变，AO.a = 666
console.log(a)  // 打印 666
function a() {}  // 该声明已提升过，不会覆盖
console.log(a)  // 打印 666
var b = function () {}  // b 改变，AO.b = function () {}
console.log(b)  // 打印 function () {}
function c() {}  // 该声明已提升过，不会覆盖
</code></pre>
<h4 id="8-接着执行函数外代码执行到下个函数调用前">8. 接着执行函数外代码，执行到下个函数调用前</h4>
<pre><code class="language-javascript">fn1(1) // 已讲述，上续
var a = 123  // GO 对象中的 a 改变为 123（undefined &gt; 123）
console.log(a)  // 打印 123

var fn1 = () =&gt; {  // fn1 改变，GO.fn1 = () =&gt; {...}
  console.log(a)
}

function fn1(a) {  // 该声明已提升过（函数提升），不会覆盖
  ...
}

fn1(1)  // 执行到这里时，预编译
</code></pre>
<h4 id="9-函数预编译">9. 函数预编译</h4>
<h5 id="9-1-创建活跃对象-ao">9-1. 创建活跃对象 AO</h5>
<pre><code class="language-javascript">AO = {}
</code></pre>
<h5 id="9-2-查找变量和形参">9-2. 查找变量和形参</h5>
<pre><code class="language-javascript">AO = {
  a: undefined
}
</code></pre>
<h5 id="9-3-实参值和形参统一">9-3. 实参值和形参统一</h5>
<pre><code class="language-javascript">AO = {
  a: 1
}
</code></pre>
<h5 id="9-4-查找函数非函数表达式">9-4. 查找函数（非函数表达式）</h5>
<pre><code class="language-javascript">AO = {
  a: 1
}
</code></pre>
<h4 id="10-正常执行函数根据-ao">10. 正常执行函数（根据 AO）</h4>
<pre><code class="language-javascript">console.log(a)  // a 不存在当前函数作用域，往上级查找，找到 GO.a，打印 123
</code></pre>
<h3 id="总结">总结</h3>
<ul>
<li><strong>全局预编译</strong>：创建 GO 对象，查找变量声明和函数声明。</li>
<li><strong>函数预编译</strong>：创建 AO 对象，查找变量和形参，实参值和形参统一，查找函数声明。</li>
<li><strong>执行阶段</strong>：按照代码顺序执行，变量赋值和函数调用。</li>
</ul>

</div>
<div id="MySignature" role="contentinfo">
    <p>本文来自博客园，作者：<a href="https://www.cnblogs.com/gupingan/" target="_blank">顾平安</a>，转载请注明原文链接：<a href="https://www.cnblogs.com/gupingan/p/18577692" target="_blank">https://www.cnblogs.com/gupingan/p/18577692</a></p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="23.697028964452546" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2024-11-29 22:16">2024-11-29 22:15</span>&nbsp;
<a href="https://www.cnblogs.com/gupingan">顾平安</a>&nbsp;
阅读(<span id="post_view_count">175</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18577692" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18577692);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18577692', targetLink: 'https://www.cnblogs.com/gupingan/p/18577692', title: 'JS 预编译代码实例分析' })">举报</a>
</div>
        