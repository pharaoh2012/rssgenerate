
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/qizhou/p/18974434" title="发布于 2025-07-10 17:33">
    <span role="heading" aria-level="2">论文笔记：AlphaEdit: Null-Space Constrained Knowledge Editing for Language Models（AlphaEdit）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p data-pm-slice="0 0 []">  论文发表于人工智能顶会ICLR（<a href="https://arxiv.org/abs/2410.02355" target="_blank" rel="noopener nofollow">原文链接</a>）。基于定位和修改的模型编辑方法（针对<a href="https://www.cnblogs.com/qizhou/p/18913058" target="_blank" rel="noopener">ROME</a>和<a href="https://www.cnblogs.com/qizhou/p/18974415" target="_blank" rel="noopener">MEMIT</a>等）会破坏LLM中最初保存的知识，特别是在顺序编辑场景。为此，本文提出AlphaEdit：</p>
<p>  1、在将保留知识应用于参数之前，将扰动投影到保留知识的零空间上。</p>
<p>  2、从理论上证明，这种预测确保了在查询保留的知识时，编辑后的LLM的输出保持不变，从而减轻中断问题。</p>
<p>  3、对各种LLM（包括LLaMA3、GPT2XL和GPT-J）的广泛实验表明，AlphaEdit只需一行额外的投影代码，即可将大多数定位编辑方法的性能平均提高36.4%。</p>
<p>  阅读本文请同时参考原始论文图表。</p>
<p><img src="https://img2024.cnblogs.com/blog/1908255/202507/1908255-20250709103359717-1874619814.png" style="display: block; margin-left: auto; margin-right: auto"></p>
<h1>AlphaEdit</h1>
<h2>零空间</h2>
<p>  基于前面ROME/MEMIT的工作，对于LLM中的MLP矩阵<span class="math">$W$</span>，可被表示为关于已有知识<span class="math">$(K_0,V_0)$</span>的优化结果：</p>
<p style="text-align: center"><span class="math">$W= \arg \min\limits_{\tilde{W}} \left\| \tilde{W} K_0 - V_0 \right\|^2$</span></p>
<p>  其中矩阵<span class="math">$K_0\in \mathbb{R}^{d_0\times n},V_0\in \mathbb{R}^{d_0\times n}$</span>，<span class="math">$n$</span>表示已有知识数量。对于新增知识<span class="math">$(K_1,V_1)$</span>，MEMIT的做法为优化扰动<span class="math">$\Delta$</span>来更新<span class="math">$W$</span>：</p>
<p style="text-align: center"><span class="math">$\Delta = \arg \min\limits_{\tilde{\Delta}} \left( \left\| (W + \tilde{\Delta}) K_1 - V_1 \right\|^2 + \left\| (W + \tilde{\Delta}) K_0 - V_0 \right\|^2 \right)$</span></p>
<p>  上式为二次优化，可通过求导直接获得闭式解。然而，耦合的优化不可避免会是扰动量对原始知识产生影响，从而在终身编辑场景中鲁棒性不强。文中通过将中间token表示映射到二维空间的分布偏移来表明这一观点：如图1be所示，MEMIT在编辑后token表示的分布产生了较大偏移，而AlphaEdit则没有。</p>
<p>  因此，AlphaEdit期望找到<span class="math">$K_0$</span>的零空间，把<span class="math">$\Delta$</span>映射到其上，从而权重更新将对这些知识不产生影响。矩阵<span class="math">$B$</span>在矩阵<span class="math">$A$</span>的零空间内，当且仅当<span class="math">$BA=0$</span>。也就是说，期望找到<span class="math">$\Delta$</span>有：</p>
<p style="text-align: center"><span class="math">$(W + \Delta) K_0 = W K_0 = V_0$</span></p>
<p>  那么如何将<span class="math">$\Delta$</span>映射到<span class="math">$K_0$</span>的零空间呢？</p>
<h2>SVD分解获取零空间映射</h2>
<p>  考虑对称方阵<span class="math">$K_0K_0^T\in\mathbb{R}^{d_0\times d_0}$</span>，对其进行奇异值分解（SVD），得到：</p>
<p style="text-align: center"><span class="math">$\{ U, \Lambda, U^T \} = \text{SVD} \left( K_0 K_0^T \right)$</span></p>
<p>  其中<span class="math">$U$</span>为正交矩阵（<span class="math">$UU^T =I$</span>），<span class="math">$\Lambda$</span>对角矩阵，主对角线为奇异值。将奇异值在主对角线降序排序：</p>
<p style="text-align: center"><span class="math">$\Lambda = \begin{bmatrix} \Lambda_1 &amp; 0 \\ 0 &amp; \Lambda_2 \end{bmatrix}$</span></p>
<p>  取其中为零的部分<span class="math">$\Lambda_2$</span>（假设<span class="math">$\Lambda_2$</span>都很小几乎为0，文中取小于0.01的值）在<span class="math">$U$</span>中对应的特征向量矩阵<span class="math">$\hat{U}\in\mathbb{R}^{d_0\times m}$</span>。则<span class="math">$P = \hat{U}\hat{U}^T$</span>为将任意矩阵映射到<span class="math">$K_0K^T_0$</span>零空间的矩阵。这是由于，对于任意矩阵<span class="math">$\Delta$</span>，有：</p>
<p style="text-align: center"><span class="math">$\Delta PK_0K^T_0&nbsp;= \Delta\hat{U}\hat{U}^TK_0K^T_0= \Delta\hat{U}\hat{U}^TU\Lambda U^T$</span></p>
<p>  由于其中<span class="math">$\hat{U}^TU\Lambda=0$</span>，上式为零。<span class="math">$P$</span>为<span class="math">$K_0K_0^T$</span>的零空间映射矩阵，同时也<span class="math">$K_0$</span>的零空间映射矩阵，这是由于：</p>
<p>\begin{align*} &amp;P K_0 K_0^T = 0 \\ \Rightarrow &amp;P K_0 K^T P^T = 0 \\ \Rightarrow &amp;P K_0 (K P)^T = 0 \\ \Rightarrow &amp; P K_0 = 0 \end{align*}</p>
<h2 data-pm-slice="1 1 []">AlphaEdit优化</h2>
<p>  基于ROME/EMMIT工作，<span class="math">$K_0K_0^T$</span>可通过计算10万条数据获得，即可进一步获得映射矩阵<span class="math">$P$</span>。有了<span class="math">$P$</span>，优化就无需再考虑原有知识<span class="math">$K_0$</span>，则AlphaEdit将优化式改为：</p>
<p style="text-align: center"><span class="math">$\Delta = \arg \min\limits_{\tilde{\Delta}} \left( \left\| (W + \tilde{\Delta} P) K_1 - V_1 \right\|^2 + \left\| \tilde{\Delta} P \right\|^2 +\left\| \tilde{\Delta} P K_p\right\|^2\right)$</span></p>
<p>  其中第二项控制<span class="math">$\Delta$</span>的范数，避免数值过大，第三项额外考虑终身编辑场景中已编辑的知识<span class="math">$(K_p,V_p)$</span>。原始MEMIT没有考虑第三项。求导得到方程：</p>
<p style="text-align: center"><span class="math">$(\Delta PK_1 - R)K_1^T P + \Delta P + \Delta PK_p K_p^T P = 0$</span></p>
<p>  其中<span class="math">$R=V_1 −WK_1$</span>表示新值<span class="math">$V_1$</span>与原始矩阵在新键下的残差。可得AlphaEdit的矩阵变化量<span class="math">$\Delta_\text{AlphaEdit}$</span>为：</p>
<p style="text-align: center"><span class="math">$\Delta_\text{AlphaEdit} =\Delta P = R K_1^T P \left( K_p K_p^T P + K_1 K_1^T P + I \right)^{-1}$</span></p>
<p>  MEMIT的原始闭式解如下所示（额外考虑了已编辑知识），文中表明，仅仅这里改动一行代码，产生较好的编辑性能。</p>
<p style="text-align: center"><span class="math">$\Delta_{\text{MEMIT}} = R K_1^T \left( K_p K_p^T P + K_1 K_1^T + K_0 K_0^T \right)^{-1}$</span></p>
<h1>实验</h1>
<p>  表1：2000条知识的编辑实验，AlphaEdit的编辑批量为100，编辑20次。</p>
<p>  图5：token表示分布偏移对比。</p>
<p>  其它图表：一些对比和增强效果。</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.0125" data-date-updated="2025-07-10 17:51">2025-07-10 17:33</span>&nbsp;
<a href="https://www.cnblogs.com/qizhou">颀周</a>&nbsp;
阅读(<span id="post_view_count">11</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18974434);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18974434', targetLink: 'https://www.cnblogs.com/qizhou/p/18974434', title: '论文笔记：AlphaEdit: Null-Space Constrained Knowledge Editing for Language Models（AlphaEdit）' })">举报</a>
</div>
        