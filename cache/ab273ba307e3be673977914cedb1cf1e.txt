
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/yupi/p/18640747" title="发布于 2024-12-30 12:01">
    <span role="heading" aria-level="2">这些小 Bug，99% 的程序员都写过！</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        <img src="https://img2024.cnblogs.com/blog/2225420/202412/2225420-20241230120044951-1554066081.png" alt="这些小 Bug，99% 的程序员都写过！" class="desc_img">
        “程序怎么运行不了，不应该啊？”
“程序怎么能运行了，不应该啊！”
这句话是不是让程序员朋友们的 DNA 动了呢？
    </div>
<div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p class="md-end-block md-heading"><span class="md-plain">“程序怎么运行不了，不应该啊？”</span></p>
<p class="md-end-block md-p"><span class="md-plain">“程序怎么能运行了，不应该啊！”</span></p>
<p class="md-end-block md-p"><span class="md-plain">这句话是不是让程序员朋友们的 DNA 动了呢？今天鱼皮分享一些新手程序员常犯的小 Bug，很多是我自己或者网友们的亲身经历，相信绝大多数程序员都写过这些 Bug~</span></p>
<p class="md-end-block md-p"><span class="md-image md-img-loaded" data-src="https://pic.yupi.icu/1/image-20241227104254002.png"><img src="https://pic.yupi.icu/1/image-20241227104254002.png" style="display: block; margin-left: auto; margin-right: auto"></span></p>
<p class="md-end-block md-p">&nbsp;</p>
<h3 class="md-end-block md-heading"><span class="md-plain">程序员经典小 Bug</span></h3>
<h4 class="md-end-block md-heading"><span class="md-plain">1、标点符号错误</span></h4>
<p class="md-end-block md-p"><span class="md-plain">刚学编程语言的很多同学应该都被这个错误折磨过，比如在代码中使用中文逗号（<span class="md-pair-s"><code>，</code><span class="md-plain">）或引号（<span class="md-pair-s"><code>“”</code><span class="md-plain">），结果就导致了编译错误。</span></span></span></span></span></p>
<pre class="md-fences md-end-block ty-contain-cm modeLoaded"><span><span class="cm-comment">// 使用了中文逗号，编译会报错<br><span><span class="cm-variable">Map<span class="cm-operator">&lt;<span class="cm-variable">String，&nbsp;<span class="cm-variable-3">Integer<span class="cm-operator">&gt;&nbsp;<span class="cm-variable">map&nbsp;<span class="cm-operator">=&nbsp;<span class="cm-keyword">new&nbsp;<span class="cm-variable">HashMap<span class="cm-operator">&lt;&gt;();<br><span><span class="cm-variable">map.<span class="cm-variable">put(<span class="cm-string">"key1"<span class="cm-variable">，&nbsp;<span class="cm-number">1);</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
<p class="md-end-block md-p"><span class="md-plain">我之前就遇到过一位同学，把类似上面的代码拍了个照，然后问我哪里有错，我当时快把眼珠子瞪出来了，也没发现问题：</span></p>
<p class="md-end-block md-p"><span class="md-image md-img-loaded" data-src="https://pic.yupi.icu/1/image-20241227104941051.png"><img src="https://pic.yupi.icu/1/image-20241227104941051.png" style="display: block; margin-left: auto; margin-right: auto"></span></p>
<p class="md-end-block md-p"><span class="md-plain">结果后面他自己发现问题了，我知道真相后直接红温了。</span></p>
<p class="md-end-block md-p"><span class="md-plain">其实这类 Bug 很好自己解决，开发工具都会给出提示的，只不过由于新手不知道要去看错误信息罢了。</span></p>
<p class="md-end-block md-p">&nbsp;</p>
<h4 class="md-end-block md-heading"><span class="md-plain">2、更新数据没指定范围</span></h4>
<p class="md-end-block md-p"><span class="md-plain">现在的数据库操作框架封装得太好了，以至于很多同学都不怎么自己写 SQL，查询语句可能还写过一点儿，但更新语句基本上没写过。这就导致了很多低级问题，比如在更新或删除数据时，忘记加上 WHERE 条件。像之前我分享过，我们团队一位同学更新某个用户权限的时候，不小心把所有用户的权限都刷成了 “管理员”。</span></p>
<pre class="md-fences md-end-block ty-contain-cm modeLoaded"><span><span class="cm-keyword">UPDATE&nbsp;orders&nbsp;<span class="cm-keyword">SET&nbsp;role&nbsp;<span class="cm-operator">=&nbsp;<span class="cm-string">'admin'<span class="cm-punctuation">;</span></span></span></span></span></span></pre>
<p class="md-end-block md-p"><span class="md-image md-img-loaded" data-src="https://pic.yupi.icu/1/image-20241227105407004.png"><img src="https://pic.yupi.icu/1/image-20241227105407004.png" style="display: block; margin-left: auto; margin-right: auto"></span></p>
<p class="md-end-block md-p"><span class="md-plain">一般有经验的开发者看到数据更新或删除操作，就条件反射想到要加 WHERE 条件：</span></p>
<pre class="md-fences md-end-block ty-contain-cm modeLoaded"><span><span class="cm-keyword">UPDATE&nbsp;orders&nbsp;<span class="cm-keyword">SET&nbsp;role&nbsp;<span class="cm-operator">=&nbsp;<span class="cm-string">'admin'<br><span><span class="cm-keyword">WHERE&nbsp;id&nbsp;<span class="cm-operator">=&nbsp;xxx</span></span></span></span></span></span></span></span></pre>
<p class="md-end-block md-p"><span class="md-plain">企业中通常也会给数据库加上限制，防止范围更新和删除。</span></p>
<p class="md-end-block md-p">&nbsp;</p>
<h4 class="md-end-block md-heading"><span class="md-plain">3、资源忘记释放</span></h4>
<p class="md-end-block md-p"><span class="md-plain">在开发中，文件、数据库连接、内存、网络连接都属于资源，如果打开了资源没有释放，就有可能因为资源泄露导致程序崩溃，很多线上 Bug 都是这么来的。</span></p>
<p class="md-end-block md-p"><span class="md-plain">比如打开一个文件，却没有关闭：</span></p>
<pre class="md-fences md-end-block ty-contain-cm modeLoaded"><span><span class="cm-keyword">public&nbsp;<span class="cm-variable-3">void&nbsp;<span class="cm-def">readFile(<span class="cm-variable-3">String&nbsp;<span class="cm-variable">path)&nbsp;<span class="cm-keyword">throws&nbsp;<span class="cm-variable">IOException&nbsp;{<br><span>&nbsp; &nbsp;<span class="cm-variable">FileReader&nbsp;<span class="cm-variable">reader&nbsp;<span class="cm-operator">=&nbsp;<span class="cm-keyword">new&nbsp;<span class="cm-variable">FileReader(<span class="cm-variable">path);<br><span>&nbsp; &nbsp;<span class="cm-variable-3">char[]&nbsp;<span class="cm-variable">buffer&nbsp;<span class="cm-operator">=&nbsp;<span class="cm-keyword">new&nbsp;<span class="cm-variable-3">char[<span class="cm-number">1024];<br><span>&nbsp; &nbsp;<span class="cm-variable">reader.<span class="cm-variable">read(<span class="cm-variable">buffer);<br><span>&nbsp; &nbsp;<span class="cm-comment">// 忘记关闭文件<br><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
<p class="md-end-block md-p"><span class="md-plain">平时要养成好的习惯，只要打开了资源，都要看看有没有 close 方法。如果有的话，再确认该资源会不会自动关闭；如果不会自动关闭，就要手动释放资源。</span></p>
<p class="md-end-block md-p"><span class="md-plain">在 Java 中，可以在 finally 块中、或者使用 <span class="md-pair-s"><code>try-with-resources</code><span class="md-plain"> 语法自动释放资源：</span></span></span></p>
<pre class="md-fences md-end-block ty-contain-cm modeLoaded"><span><span class="cm-keyword">public&nbsp;<span class="cm-variable-3">void&nbsp;<span class="cm-def">readFile(<span class="cm-variable-3">String&nbsp;<span class="cm-variable">path)&nbsp;<span class="cm-keyword">throws&nbsp;<span class="cm-variable">IOException&nbsp;{<br><span>&nbsp; &nbsp;<span class="cm-keyword">try&nbsp;(<span class="cm-variable">FileReader&nbsp;<span class="cm-variable">reader&nbsp;<span class="cm-operator">=&nbsp;<span class="cm-keyword">new&nbsp;<span class="cm-variable">FileReader(<span class="cm-variable">path)) {<br><span>&nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-3">char[]&nbsp;<span class="cm-variable">buffer&nbsp;<span class="cm-operator">=&nbsp;<span class="cm-keyword">new&nbsp;<span class="cm-variable-3">char[<span class="cm-number">1024];<br><span>&nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">reader.<span class="cm-variable">read(<span class="cm-variable">buffer);<br><span>&nbsp; }<br><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
<p class="md-end-block md-p">&nbsp;</p>
<h4 class="md-end-block md-heading"><span class="md-plain">4、明文存储隐私数据</span></h4>
<p class="md-end-block md-p"><span class="md-plain">这也是一类低级错误，比如在数据库中明文存储用户的密码：</span></p>
<pre class="md-fences md-end-block ty-contain-cm modeLoaded"><span><span class="cm-keyword">INSERT&nbsp;<span class="cm-keyword">INTO&nbsp;users&nbsp;<span class="cm-bracket">(username<span class="cm-punctuation">,&nbsp;<span class="cm-keyword">password<span class="cm-bracket">)<br><span><span class="cm-keyword">VALUES&nbsp;<span class="cm-bracket">(<span class="cm-string">'admin'<span class="cm-punctuation">,&nbsp;<span class="cm-string">'123456'<span class="cm-bracket">)<span class="cm-punctuation">;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
<p class="md-end-block md-p"><span class="md-plain">好好好，这下管理员爽翻了！</span></p>
<p class="md-end-block md-p"><span class="md-image md-img-loaded" data-src="https://pic.yupi.icu/1/image-20241227110823958.png"><img src="https://pic.yupi.icu/1/image-20241227110823958.png" style="display: block; margin-left: auto; margin-right: auto"></span></p>
<p class="md-end-block md-p"><span class="md-plain">标准做法是，使用哈希算法 + 盐值加密存储密码：</span></p>
<pre class="md-fences md-end-block ty-contain-cm modeLoaded"><span><span class="cm-variable-3">String&nbsp;<span class="cm-variable">hashedPassword&nbsp;<span class="cm-operator">=&nbsp;<span class="cm-variable">BCrypt.<span class="cm-variable">hashpw(<span class="cm-string">"123456",&nbsp;<span class="cm-variable">BCrypt.<span class="cm-variable">gensalt());</span></span></span></span></span></span></span></span></span></pre>
<p class="md-end-block md-p"><span class="md-plain">虽然这个错误很低级，但可千万别小看它。某公司因为明文存储密码被处罚了 9100 万欧元！</span></p>
<p class="md-end-block md-p"><span class="md-image md-img-loaded" data-src="https://pic.yupi.icu/1/image-20241227111433897.png"><img src="https://pic.yupi.icu/1/image-20241227111433897.png" style="display: block; margin-left: auto; margin-right: auto"></span></p>
<p class="md-end-block md-p"><span class="md-plain">类似的错误还有直接从前端明文发送密码给后端，虽然可以通过 HTTPS 协议增强安全性，但 HTTPS 只保证传输加密，服务端和客户端仍能看到密码明文，攻击者可能通过日志窃取密码。</span></p>
<p class="md-end-block md-p">&nbsp;</p>
<h4 class="md-end-block md-heading"><span class="md-plain">5、前端存储秘钥</span></h4>
<p class="md-end-block md-p"><span class="md-plain">这也是一类低级错误，经常出现于调用第三方 API 的时候。</span></p>
<p class="md-end-block md-p"><span class="md-plain">比如需要调用一个第三方天气服务 API，为了省事，前端直接将秘钥写到了 JS 代码中：</span></p>
<pre class="md-fences md-end-block ty-contain-cm modeLoaded"><span><span class="cm-comment">// 第三方 API 秘钥<br><span><span class="cm-keyword">const&nbsp;<span class="cm-def">API_KEY&nbsp;<span class="cm-operator">=&nbsp;<span class="cm-string">"yupi123456";<br><span><span class="cm-comment">// 调用 API<br><span><span class="cm-keyword">async&nbsp;<span class="cm-keyword">function&nbsp;<span class="cm-def">getWeather(<span class="cm-def">city) {<br><span>&nbsp;<span class="cm-keyword">const&nbsp;<span class="cm-def">url&nbsp;<span class="cm-operator">=&nbsp;<span class="cm-string-2">`https://codefather.cn/weather?city=${<span class="cm-variable-2">city<span class="cm-string-2">}&amp;apikey=${<span class="cm-variable">API_KEY<span class="cm-string-2">}`;<br><span>&nbsp;<span class="cm-keyword">const&nbsp;<span class="cm-def">response&nbsp;<span class="cm-operator">=&nbsp;<span class="cm-keyword">await&nbsp;<span class="cm-variable">fetch(<span class="cm-variable-2">url);<br><span>&nbsp;<span class="cm-keyword">const&nbsp;<span class="cm-def">data&nbsp;<span class="cm-operator">=&nbsp;<span class="cm-keyword">await&nbsp;<span class="cm-variable-2">response.<span class="cm-property">json();<br><span>&nbsp;<span class="cm-variable">console.<span class="cm-property">log(<span class="cm-variable-2">data);<br><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
<p class="md-end-block md-p"><span class="md-plain">这样一来，用户直接打开 F12 控制台，就能看到你的秘钥了，即使对 JS 代码加密混淆，也能轻而易举被找到。</span></p>
<p class="md-end-block md-p"><span class="md-pair-s "><strong>所有前端的内容都是不安全的。</strong><span class="md-plain"> 如果有调用第三方 API 的需求，最好还是通过后端进行转发。</span></span></p>
<p class="md-end-block md-p">&nbsp;</p>
<h4 class="md-end-block md-heading"><span class="md-plain">6、忘记区分环境</span></h4>
<p class="md-end-block md-p"><span class="md-plain">刚在企业中接触多环境的同学，可能会不小心把测试环境的代码或配置部署到生产环境。</span></p>
<p class="md-end-block md-p"><span class="md-plain">比如 Java 项目使用 <span class="md-pair-s"><code>application.yml</code><span class="md-plain"> 文件来管理配置，测试代码时，我先把数据库改为测试库：</span></span></span></p>
<pre class="md-fences md-end-block ty-contain-cm modeLoaded"><span><span class="cm-atom">spring<span class="cm-meta">:<br><span><span class="cm-atom">datasource<span class="cm-meta">:<br><span><span class="cm-atom">&nbsp; url<span class="cm-meta">:&nbsp;jdbc<span class="cm-meta">:mysql<span class="cm-meta">://localhost<span class="cm-meta">:3306/dev_db</span></span></span></span></span></span></span></span></span></span></span></span></pre>
<p class="md-end-block md-p"><span class="md-plain">结果上线前，忘了把配置改回来，导致线上环境找不到这个数据库或者因为网络隔离无法连接。</span></p>
<p class="md-end-block md-p"><span class="md-plain">标准的做法是，通过配置文件后缀区分多环境，在启动项目时指定对应的环境值即可。比如 <span class="md-pair-s"><code>application-dev.yml</code><span class="md-plain"> 表示开发环境、<span class="md-pair-s"><code>application-prod.yml</code><span class="md-plain"> 表示生产环境。</span></span></span></span></span></p>
<p class="md-end-block md-p">&nbsp;</p>
<h4 class="md-end-block md-heading"><span class="md-plain">7、强行合并或推送代码</span></h4>
<p class="md-end-block md-p"><span class="md-plain">我见过一些急性子的同学，在提交或推送代码的时候遇到了代码冲突，觉得麻烦就强行合并或推送了。</span></p>
<pre class="md-fences md-end-block ty-contain-cm modeLoaded"><span><span class="cm-comment"># 忽略代码冲突，强行合并<br><span><span class="cm-builtin">git&nbsp;merge branch-feature&nbsp;<span class="cm-attribute">--strategy-option<span class="cm-operator">=theirs<br><span><span>​<br><span><span class="cm-comment"># 强行推送，覆盖远程代码<br><span><span class="cm-builtin">git&nbsp;push&nbsp;<span class="cm-attribute">--force</span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
<p class="md-end-block md-p"><span class="md-plain">此举可谓图一时之快，但后患无穷矣。</span></p>
<p class="md-end-block md-p"><span class="md-plain">很快你的同事就会找上门：我的码呢？</span></p>
<p class="md-end-block md-p"><span class="md-plain">你的领导也会找上门：没通过审核的代码怎么就推到主分支了？</span></p>
<p class="md-end-block md-p"><span class="md-plain">所以遇到代码冲突之后，一定要仔细处理冲突，不要强行合并或推送，除非你能接受这么做的最坏结果。</span></p>
<p class="md-end-block md-p"><span class="md-plain">对于管理者，最好在代码管理平台中开启保护分支，禁止成员把未审核通过的代码直接推送到主分支。</span></p>
<p class="md-end-block md-p"><span class="md-image md-img-loaded" data-src="https://pic.yupi.icu/1/image-20241227114007302.png"><img src="https://pic.yupi.icu/1/image-20241227114007302.png" style="display: block; margin-left: auto; margin-right: auto"></span></p>
<p class="md-end-block md-p">&nbsp;</p>
<h4 class="md-end-block md-heading"><span class="md-plain">8、提交敏感信息</span></h4>
<p class="md-end-block md-p"><span class="md-plain">很多朋友的数据保护意识是比较差的，尤其是刚接触 Git 代码提交的同学，可能一不小心，就把包含了数据库账号密码的配置文件提交到 GitHub 等开源平台了，开源精神令人感动。</span></p>
<p class="md-end-block md-p"><span class="md-plain">不信的话，你可以在 GitHub 搜索和秘钥有关的关键词，一抓一大把。</span></p>
<p class="md-end-block md-p"><span class="md-plain">我自己也经历过这事，曾经提供了一个免费的图床给编程导航的同学使用，结果有不止一个人把我的图床秘钥开源到了 GitHub 上。</span></p>
<p class="md-end-block md-p"><span class="md-image md-img-loaded" data-src="https://pic.yupi.icu/1/image-20241227114504550.png"><img src="https://pic.yupi.icu/1/image-20241227114504550.png" style="display: block; margin-left: auto; margin-right: auto"></span></p>
<p class="md-end-block md-p"><span class="md-plain">好在有些大厂的云服务会自动检测你有没有将秘钥提交到开源平台，如果出现了，会给你发送邮件。</span></p>
<p class="md-end-block md-p"><span class="md-plain">解决这个问题的方法也很简单，我们可以准备两套配置文件，一套开源，一套自用，在 Git 中忽略掉自用配置文件的提交即可。</span></p>
<p class="md-end-block md-p"><span class="md-image md-img-loaded" data-src="https://pic.yupi.icu/1/image-20241227114625695.png"><img src="https://pic.yupi.icu/1/image-20241227114625695.png" style="display: block; margin-left: auto; margin-right: auto"></span></p>
<p class="md-end-block md-p">&nbsp;</p>
<div class="md-hr md-end-block"><hr></div>
<p class="md-end-block md-p">&nbsp;</p>
<p class="md-end-block md-p"><span class="md-plain">OK 就分享到这里，大家还见过哪些常见的、或者 “有点儿东西” 的 Bug 呢？欢迎评论区分享~</span></p>
<p class="md-end-block md-p">&nbsp;</p>
<h2 class="md-end-block md-heading"><span class="md-plain">更多编程学习资源</span></h2>
<ul class="ul-list" data-mark="-">
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-meta-i-c  md-link"><a href="https://www.code-nav.cn/course" rel="noopener nofollow"><span class="md-plain">Java前端程序员必做项目实战教程+毕设网站</span></a></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-meta-i-c  md-link"><a href="https://www.code-nav.cn/" rel="noopener nofollow"><span class="md-plain">程序员免费编程学习交流社区（自学必备）</span></a></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-meta-i-c  md-link"><a href="https://www.code-nav.cn/course/cv" rel="noopener nofollow"><span class="md-plain">程序员保姆级求职写简历指南（找工作必备）</span></a></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-meta-i-c  md-link"><a href="https://www.mianshiya.com/" rel="noopener nofollow"><span class="md-plain">程序员免费面试刷题网站工具（找工作必备）</span></a></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-meta-i-c  md-link"><a href="https://www.code-nav.cn/post/1640584449888772098" rel="noopener nofollow"><span class="md-plain">最新Java零基础入门学习路线 + Java教程</span></a></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-meta-i-c  md-link"><a href="https://www.code-nav.cn/post/1640586673306091521" rel="noopener nofollow"><span class="md-plain">最新Python零基础入门学习路线 + Python教程</span></a></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-meta-i-c  md-link"><a href="https://www.code-nav.cn/post/1640586014108303362" rel="noopener nofollow"><span class="md-plain">最新前端零基础入门学习路线 + 前端教程</span></a></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-meta-i-c  md-link"><a href="https://www.code-nav.cn/post/1640586867363954689" rel="noopener nofollow"><span class="md-plain">最新数据结构和算法零基础入门学习路线 + 算法教程</span></a></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-meta-i-c  md-link"><a href="https://www.code-nav.cn/post/1644279832026075138" rel="noopener nofollow"><span class="md-plain">最新C++零基础入门学习路线、C++教程</span></a></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-meta-i-c  md-link"><a href="https://www.code-nav.cn/post/1641797333479903234" rel="noopener nofollow"><span class="md-plain">最新数据库零基础入门学习路线 + 数据库教程</span></a></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-meta-i-c  md-link"><a href="https://www.code-nav.cn/post/1640589994284695553" rel="noopener nofollow"><span class="md-plain">最新Redis零基础入门学习路线 + Redis教程</span></a></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-meta-i-c  md-link"><a href="https://www.code-nav.cn/post/1641035880439271426" rel="noopener nofollow"><span class="md-plain">最新计算机基础入门学习路线 + 计算机基础教程</span></a></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-meta-i-c  md-link"><a href="https://www.code-nav.cn/post/1641366118197153793" rel="noopener nofollow"><span class="md-plain">最新小程序入门学习路线 + 小程序开发教程</span></a></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-meta-i-c  md-link"><a href="http://sqlmother.yupi.icu/" rel="noopener nofollow"><span class="md-plain">最新SQL零基础入门学习路线 + SQL教程</span></a></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-meta-i-c  md-link"><a href="https://www.code-nav.cn/post/1640586295529324545" rel="noopener nofollow"><span class="md-plain">最新Linux零基础入门学习路线 + Linux教程</span></a></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-meta-i-c  md-link"><a href="https://www.code-nav.cn/post/1640588753362108417" rel="noopener nofollow"><span class="md-plain">最新Git/GitHub零基础入门学习路线 + Git教程</span></a></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-meta-i-c  md-link"><a href="https://www.code-nav.cn/post/1640587909942099969" rel="noopener nofollow"><span class="md-plain">最新操作系统零基础入门学习路线 + 操作系统教程</span></a></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-meta-i-c  md-link"><a href="https://www.code-nav.cn/post/1640588119619551233" rel="noopener nofollow"><span class="md-plain">最新计算机网络零基础入门学习路线 + 计算机网络教程</span></a></span></p>
</li>
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-meta-i-c  md-link"><a href="https://www.code-nav.cn/post/1640588392073150465" rel="noopener nofollow"><span class="md-plain">最新设计模式零基础入门学习路线 + 设计模式教程</span></a></span></p>
</li>
<li class="md-list-item md-focus-container">
<p class="md-end-block md-p md-focus"><span class="md-meta-i-c md-link md-expand"><a href="https://www.code-nav.cn/post/1640648711119892481" rel="noopener nofollow"><span class="md-plain">最新软件工程零基础入门学习路线 + 软件工程教程</span></a></span></p>
</li>
</ul>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.012467550079861112" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2024-12-30 12:01">2024-12-30 12:01</span>&nbsp;
<a href="https://www.cnblogs.com/yupi">程序员鱼皮</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18640747" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18640747);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18640747', targetLink: 'https://www.cnblogs.com/yupi/p/18640747', title: '这些小 Bug，99% 的程序员都写过！' })">举报</a>
</div>
        