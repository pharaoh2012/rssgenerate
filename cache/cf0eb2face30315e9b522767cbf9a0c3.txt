
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/youlanjihua/p/18953685" title="发布于 2025-06-28 16:14">
    <span role="heading" aria-level="2">HarmonyOS NEXT仓颉开发语言实战案例：动态广场</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p data-id="p124945a-D2dLhZJq">大家好，今日要分享的是使用仓颉语言开发动态广场页面，也比较像朋友圈页面：</p>
<p><img data-type="block" data-src="https://dl-harmonyos.51cto.com/images/202506/267802b23baf383721c15323e63636c2bea63a.png" class="lazyload"></p>
<p data-id="p124945a-GK1nr22a">整个页面分为两部分，分别是导航栏和状态列表，导航栏比较简单，我们可以先写下导航栏的具体代码和页面的基本结构：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>Column{
    Row(10){
        Text('推荐')
        .fontColor(Color.BLACK)
        .fontSize(17)
        .fontWeight(FontWeight.Bold)
        Text('关注')
        .fontColor(Color.GRAY)
        .fontSize(16)
    }
    .width(100.percent)
    .height(60)
    .justifyContent(FlexAlign.Center)
    
    List(space:10){

	}
    .width(100.percent)
    .layoutWeight(1)
    .backgroundColor(Color(247, 247, 247))
}
.width(100.percent)
.height(100.percent)</code></pre>
</div>
<p data-id="p124945a-Vg7nFzD2">这样的话导航栏和列表容器撑满了整个页面，接下来的工作就是开发状态列表。</p>
<p data-id="p124945a-rp8cgm3R">这里的内容也分为个人信息、状态内容和图片列表几部分，整个的布局方式是纵向的，要注意其中个人信息部分头像和名字时间是横向布局，这个比较简单。还有图片列表，我使用的方案是Grid，这样能够快速适配不同数量的图片。</p>
<p data-id="p124945a-jc7ZMjkI">话不多说，来看看代码怎么实现。对于状态列表，我们首先要定义数据结构：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>public class RowItem{
    private let name: String;
    private let time: String;
    private let cover: CJResource;
    private let content: String;
    private let images : ArrayList&lt;CJResource&gt;;
    
    public RowItem(name:String, time:String,cover:CJResource,content:String,images:ArrayList&lt;CJResource&gt;){
        this.name = name
        this.content = content
        this.time = time
        this.images = images
        this.cover = cover
    }
    public func getName():String{
        return this.name
    }
    public func getContent():String{
        return this.content
    }
    public func getTime():String{
        return this.time
    }
    public func getCover():CJResource{
        return this.cover
    }
     public func getImages():ArrayList&lt;CJResource&gt;{
        return this.images
    }
}</code></pre>
</div>
<p data-id="p124945a-wXgHTDVr">我们今天不涉及网络请求，直接在本地定义数组：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>@State var rowList:ArrayList&lt;RowItem&gt; = ArrayList&lt;RowItem&gt;(
    RowItem('Tom','7小时前',@r(app.media.icon1),'美丽的风景',ArrayList&lt;CJResource&gt;([@r(app.media.fj1),@r(app.media.fj2),@r(app.media.fj3)])),
    RowItem('PLANK','10小时前',@r(app.media.icon2),'晨跑，空气很清新，顺便用个早餐',ArrayList&lt;CJResource&gt;([@r(app.media.cp1)]))
)</code></pre>
</div>
<p data-id="p124945a-7JdqAlXp">最后在List容器中循环遍历实现列表：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>List(space:10){
    ForEach(rowList, itemGeneratorFunc: {item: RowItem, index: Int64 =&gt;
                ListItem{
                Column(10){
                    Row(6){
                        Image(item.getCover())
                        .width(40)
                        .height(40)
                        .borderRadius(20)
                        Column(4){
                            Text(item.getName())
                            .fontColor(Color.BLACK)
                            .fontSize(15)
                            Text(item.getTime())
                            .fontColor(Color.GRAY)
                            .fontSize(15)
                        }
                        .alignItems(HorizontalAlign.Start)
                    }
                    Text('美丽的风景')
                    .fontSize(18)
                    .fontColor(Color.BLACK)
                    .margin(top:3)
                    Grid {
                        ForEach(item.getImages(), itemGeneratorFunc: {img:CJResource,tag:Int64 =&gt;
                                    GridItem{
                                    Image(img)
                                    .width(112)
                                    .height(112)
                                    .borderRadius(8)
                                    .onClick({e =&gt;
                                        imglist = item.getImages()
                                        dialogController.open()
                                        })
                                }
                                })
            }
            .width(100.percent)
            .columnsTemplate('1fr 1fr 1fr')
            .columnsGap(12)
            .rowsGap(12)
            .backgroundColor(0xFFFFFF)
                }
                .padding(12)
                .alignItems(HorizontalAlign.Start)
                .backgroundColor(Color.WHITE)
               
            }
            })
}
.width(100.percent)
.layoutWeight(1)
.backgroundColor(Color(247, 247, 247))</code></pre>
</div>
<p data-id="p124945a-1w6ebeMQ">今天的内容就是这样，感谢阅读。##HarmonyOS语言##仓颉##休闲娱乐#</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-06-28 16:14">2025-06-28 16:14</span>&nbsp;
<a href="https://www.cnblogs.com/youlanjihua">幽蓝计划</a>&nbsp;
阅读(<span id="post_view_count">13</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18953685);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18953685', targetLink: 'https://www.cnblogs.com/youlanjihua/p/18953685', title: 'HarmonyOS NEXT仓颉开发语言实战案例：动态广场' })">举报</a>
</div>
        