
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/aigcoder/p/18889769" title="发布于 2025-05-21 21:39">
    <span role="heading" aria-level="2">AI 极客低代码平台快速上手 --生成Python代码</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        AIGC低代码平台，一键生成Java、Python、Vuetify、纯血鸿蒙项目代码，无限接近成品品质。在线拖拽，所见即所得，一秒生成完整生产级纯血鸿蒙APP！一端开发，多端部署来，A站，免费体验代码魔法！
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>1.侧栏菜单选择“Python”：</p>
<p>点击代码区右上角的“<a href="https://www.aigcoder.com/code-magic" target="_blank" rel="noopener nofollow">代码魔法棒</a>”图标，在弹出的确认面板中点击“确认”按钮，一秒生成基于FastApi最新框架版本的项目工程。<br>
<img src="https://img2024.cnblogs.com/blog/3551263/202505/3551263-20250521213704446-502934415.jpg" alt="" loading="lazy"><br>
2.在“深色模式”下预览生成的Python项目代码：</p>
<p><img src="https://img2024.cnblogs.com/blog/3551263/202505/3551263-20250521213719782-1722083074.jpg" alt="" loading="lazy"><br>
2.在“深色模式”下预览生成的Python项目代码：</p>
<p>`"""<br>
订单领域类<br>
@author 极客学院<br>
@date 2025/03/20<br>
"""<br>
from typing import Optional<br>
from datetime import datetime<br>
from decimal import Decimal<br>
from sqlmodel import SQLModel, Field<br>
from sqlalchemy import Column, BigInteger, DateTime, String, Boolean, Numeric</p>
<p>class Order(SQLModel, table=True):<br>
"""<br>
订单<br>
"""<br>
<strong>tablename</strong> = "tbl_order"</p>
<pre><code>orderId: Optional[int] = Field(
    default=None,
    sa_column=Column("id", BigInteger, primary_key=True, autoincrement=True),
    description="订单ID"
)
orderNum: str = Field(
    sa_column=Column("order_num", String(50), nullable=False),
    description="订单号"
)
amount: Decimal = Field(
    sa_column=Column("amount", Numeric(10, 2), nullable=False),
    description="订单金额"
)
memo: str = Field(
    sa_column=Column("memo", String(50), nullable=False),
    description="订单描述"
)
creationTime: datetime = Field(
    default_factory=datetime.now,
    sa_column=Column("creation_time", DateTime, nullable=False),
    description="创建时间"
)
creatorId: int = Field(
    sa_column=Column("creator_id", BigInteger, nullable=False),
    description="创建者ID"
)
creator: str = Field(
    sa_column=Column("creator", String(255), nullable=False),
    description="创建者"
)
lastModificationTime: Optional[datetime] = Field(
    default=None,
    sa_column=Column("last_modification_time", DateTime, nullable=True),
    description="最近修改时间"
)
lastModifierId: Optional[int] = Field(
    default=None,
    sa_column=Column("last_modifier_id", BigInteger, nullable=True),
    description="最近修改者ID"
)
lastModifier: Optional[str] = Field(
    default=None,
    sa_column=Column("last_modifier", String(255), nullable=True),
    description="最近修改者"
)
isDeleted: bool = Field(
    default=False,
    sa_column=Column("is_deleted", Boolean, nullable=False),
    description="已删除"
)
deletionTime: Optional[datetime] = Field(
    default=None,
    sa_column=Column("deletion_time", DateTime, nullable=True),
    description="删除时间"
)
deleterId: Optional[int] = Field(
    default=None,
    sa_column=Column("deleter_id", BigInteger, nullable=True),
    description="删除者ID"
)
deleter: Optional[str] = Field(
    default=None,
    sa_column=Column("deleter", String(255), nullable=True),
    description="删除者"
)
</code></pre>
<p><code>DTO类代码：</code>"""<br>
新增订单的表单校验DTO<br>
@author 极客学院<br>
@date 2025/03/20<br>
"""<br>
from decimal import Decimal<br>
import re<br>
from pydantic import BaseModel, Field, field_validator, model_validator<br>
from common.validation_utils import ValidationUtils</p>
<p>class OrderCreateDTO(BaseModel):<br>
"""<br>
新增订单的表单校验DTO<br>
"""<br>
orderNum: str = Field(<br>
description="订单号:不能为空，最长不能超过50个字符",<br>
examples=["4624849630"]<br>
)<br>
amount: Decimal = Field(<br>
description="订单金额:不能为null，必须大于或等于0.00，必须小于或等于100.00，数字的值只允许在10位整数和2位小数范围内",<br>
examples=["80.16"]<br>
)<br>
memo: str = Field(<br>
description="订单描述:不能为空，最长不能超过50个字符",<br>
examples=["请加急发货急用。"]<br>
)</p>
<pre><code>@model_validator(mode='before')
def check_required_fields(cls, values):
    field_name_map = {
        'orderNum': '订单号',
        'amount': '订单金额',
        'memo': '订单描述',
    }
    return ValidationUtils.check_required_fields(values, field_name_map)

@field_validator('orderNum')
def order_num_validate(cls, v):
    if v is None or not v.strip():
        raise ValueError('订单号:不能为空')
    if len(v) &gt; 50:
        raise ValueError('订单号:最长不能超过50个字符')
    return v

@field_validator('amount')
def amount_validate(cls, v):
    if v is not None and v &lt; 0.00:
        raise ValueError('订单金额:必须大于或等于0.00')
    if v is not None and v &gt; 100.00:
        raise ValueError('订单金额:必须小于或等于100.00')
    value_str = str(v)
    if not re.match(r'^\d{1,10}(\.\d{1,2})?$', value_str):
        raise ValueError('订单金额:数字的值只允许在10位整数和2位小数范围内')
    return v

@field_validator('memo')
def memo_validate(cls, v):
    if v is None or not v.strip():
        raise ValueError('订单描述:不能为空')
    if len(v) &gt; 50:
        raise ValueError('订单描述:最长不能超过50个字符')
    return v
</code></pre>
<p>`</p>
<p>VO类代码：</p>
<p>` """<br>
订单信息实体<br>
@author 极客学院<br>
@date 2025/03/20<br>
"""<br>
from decimal import Decimal<br>
from pydantic import BaseModel, Field</p>
<p>class OrderVO(BaseModel):<br>
"""<br>
订单信息实体<br>
"""<br>
orderId: int = Field(description="订单ID", examples=["1"])<br>
orderNum: str = Field(description="订单号", examples=["4624849630"])<br>
amount: Decimal = Field(description="订单金额", examples=["80.16"])<br>
memo: str = Field(description="订单描述", examples=["请加急发货急用。"])`</p>
<p>详细操作可去<a href="https://www.aigcoder.com/guide/quick-start" target="_blank" rel="noopener nofollow">官网免费体验</a>！</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.021898420372685187" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-21 21:45">2025-05-21 21:39</span>&nbsp;
<a href="https://www.cnblogs.com/aigcoder">AIGC魔法师</a>&nbsp;
阅读(<span id="post_view_count">10</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18889769);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18889769', targetLink: 'https://www.cnblogs.com/aigcoder/p/18889769', title: 'AI 极客低代码平台快速上手 --生成Python代码' })">举报</a>
</div>
        