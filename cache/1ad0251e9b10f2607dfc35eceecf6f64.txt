
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/east4ming/p/18731359" title="发布于 2025-02-22 20:41">
    <span role="heading" aria-level="2">TTRSS 迁移实战</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="背景">背景</h2>
<p>几年前在云服务器上搭建了一套 TTRss + RssHub 集群, 用于阅读文章.</p>
<p>具体可以参见这篇文章: <a href="https://ewhisper.cn/posts/60709/" target="_blank" rel="noopener nofollow">使用 K8S 部署 RSS 全套自托管解决方案 - RssHub + Tiny Tiny Rss - 东风微鸣技术博客</a></p>
<p>近期云服务器要到期了, 刚好趁此机会将其从云上迁移到家里的 Homelab2 集群.</p>
<p>迁移是2025年2月22日上午做的, 结果非常顺利. 做完后太太还没起床呢, 那就再利用这段时间总结一下迁移过程.</p>
<p>内容有些流水账, 如果有疑问/建议欢迎交流.</p>
<h2 id="技术栈">技术栈</h2>
<h3 id="迁移前">迁移前</h3>
<ul>
<li>K3s v1.23.10+k3s1</li>
<li>Ingress: 自带的 Traefik</li>
<li>证书: cert-manager + DNSPod 插件</li>
<li>存储:自带的 local-path</li>
<li>备份: velero(只备份 manifests)</li>
<li>域名: 后缀为 <code>ewhisper.cn</code></li>
</ul>
<h3 id="迁移后">迁移后</h3>
<ul>
<li>K3s: v1.31.5+k3s1</li>
<li>Ingress: Tailscale Operator</li>
<li>证书: Tailscale Operator</li>
<li>存储: rook-ceph</li>
<li>备份: volsync</li>
<li>域名:后缀为 <code>west-beta.ts.net</code></li>
</ul>
<p>综上, 其实不只是简单迁移, 还需要相应调整存储/网络相关配置.</p>
<p>这里的迁移场景非常具体, 只针对我的使用场景, 但是迁移的规划/步骤/思路可以供大家参考.</p>
<blockquote>
<p>📝<strong>Notes:</strong></p>
<p>我的完整迁移后代码位于: <a href="https://github.com/east4ming/homelab2/tree/master/apps/rsshub" target="_blank" rel="noopener nofollow">homelab2/apps/rsshub at master · east4ming/homelab2</a></p>
<p>本文出于长度考虑, 就不粘贴细节脚本/yaml了, 感兴趣的可以去 repo 查看.</p>
</blockquote>
<hr>
<h2 id="迁移实战">迁移实战</h2>
<h3 id="1-备份">1. 备份</h3>
<h4 id="11-k8s-manifests-备份">1.1 K8s Manifests 备份</h4>
<ul>
<li>Deploy</li>
<li>Service</li>
<li>PVC</li>
<li>IngressRoute(Traefik)</li>
</ul>
<p>已经通过 Velero 备份为 json 文件. 再通过脚本 <code>kubectl-neat.sh</code> 转换为 yaml 并移除不需要的字段.</p>
<blockquote>
<p>📝<strong>Notes</strong>:</p>
<p><code>kubectl-neat.sh</code>  用到了 kubectl krew 插件: neat</p>
</blockquote>
<h4 id="pvc-数据备份">PVC 数据备份</h4>
<ul>
<li>redis 数据: <code>dump.rdb</code></li>
<li>ttrss icons: 空. 无需备份.</li>
<li>ttrss postgresql 数据: 进入到容器中, 执行<code>pg_dumpall -c -U postgres &gt; export.sql</code></li>
</ul>
<blockquote>
<p>📚️<strong>Reference</strong>:<br>
<a href="https://ttrss.henry.wang/zh/#%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9B%B4%E6%96%B0%E6%88%96%E8%BF%81%E7%A7%BB" target="_blank" rel="noopener nofollow">数据库更新或迁移|🐋 Awesome TTRSS</a></p>
<p>另外注意, 备份 Postgres 数据前可以先停止 ttrss Deployment.</p>
</blockquote>
<hr>
<h3 id="2-停机">2. 停机</h3>
<p>原集群上, 停掉所有 Deploy, 停止所有服务.</p>
<h3 id="3-修改-manifests">3. 修改 Manifests</h3>
<p>修改 Manifests 以适配新的 Homelab2 集群.</p>
<ul>
<li>NS 添加 <code>volsync.backube/privileged-movers</code> 注解以启用 volsync特权备份功能</li>
<li>Deploy postgres 增加 initContainer 删除 PostgreSQL 数据库中的 <code>lost+found</code> 目录, 否则启动报错 (rook-ceph PV 特性导致必须作此调整)</li>
<li>Deploy ttrss 增加 initContainer 使用 busybox 镜像执行 chmod 命令，将 <code>/var/www/feed-icons/</code> 目录的权限设置为 <code>777</code></li>
<li>修改 IngressRoute 的 Host.</li>
<li>修改 depoly ttrss 中的 <code>SELF_URL_PATH</code> 为新的域名</li>
<li>将 rsshub 和 ttrss 的 traefik IngressRoute 改为 Ingress 配置并调整域名</li>
<li>将环境变量中的密码改为从 secrets 中获取(Secrets 添加到 <code>.gitignore</code>) (因为我的 repo 是public 的, 所以密码要避免暴露)</li>
</ul>
<h3 id="4-手动部署">4. 手动部署</h3>
<pre><code class="language-bash">cd apps/rsshub
kubectl apply -f ns.yaml
kubectl apply -f deploy/ -f pvc/ -f secret/ -f service/ -f ingress/
</code></pre>
<hr>
<h3 id="5-恢复数据">5. 恢复数据</h3>
<p>先停掉除了 Postgres 以外的所有 Deploy, 防止脏数据.</p>
<h4 id="51-postgres">5.1. Postgres</h4>
<p>先将 <code>export.sql</code> 复制到 Postgres PV 中.</p>
<p>再进入 Postgres pod 中执行以下命令恢复数据:</p>
<pre><code class="language-bash">cat export.sql | psql -U postgres
</code></pre>
<h4 id="52-redis">5.2. Redis</h4>
<p>将 <code>dump.rdb</code> 复制到 Redis PV 中. (还需要 <code>chown</code>)</p>
<h3 id="6-启动">6. 启动</h3>
<p>启动所有 Deploy.</p>
<h3 id="7-修改-ttrss-供稿设置">7. 修改 TTRss 供稿设置</h3>
<p>登录 TTRss 域名: <code>ttrss.west-beta.ts.net</code>, 进入: <strong>偏好设置</strong> -&gt; <strong>供稿设置</strong> -&gt; 逐一查看, 将<strong>URL</strong>为 <code>https://rss.ewhisper.cn...</code> 修改为: <code>https://rss.west-beta.ts.net...</code></p>
<h3 id="8-验证">8. 验证</h3>
<ol>
<li>验证 RssHub 是否正常</li>
<li>验证 TTRss 是否正常
<ol>
<li>登录 TTRss</li>
<li>阅读文章</li>
<li>验证是否可以正常订阅</li>
</ol>
</li>
</ol>
<h3 id="9-备份">9. 备份</h3>
<ol>
<li>备份 Postgres 数据</li>
</ol>
<hr>
<h3 id="10-纳入-argocd-管理">10. 纳入 ArgoCD 管理</h3>
<p>因为 ArgoCD 不监控子目录的 yaml 文件, 所以需要将所有 yaml 文件都放在一个目录中.</p>
<p>使用脚本 <code>move_and_rename.sh</code> 执行调整, 调整后修改 <code>.gitignore</code> 文件并删除不再需要的空目录.</p>
<h3 id="11-并行一段时间后清理原集群">11. 并行一段时间后清理原集群</h3>
<ol>
<li>node 回收</li>
<li>DNS 记录清理</li>
<li>域名清理</li>
<li>原集群备份 s3 删除</li>
<li>其他杂项清理</li>
</ol>
<h2 id="总结">总结</h2>
<p>以上为本次 TTRss 迁移的总结, 详细步骤对各位没啥用. 但是希望迁移的规划/流程/思路可以提供价值.</p>
<blockquote>
<p><em>三人行, 必有我师; 知识共享, 天下为公.</em>  本文由东风微鸣技术博客 <a href="https://EWhisper.cn" target="_blank" rel="noopener nofollow">EWhisper.cn</a> 编写.</p>
</blockquote>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.06319320633796296" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-22 20:42">2025-02-22 20:41</span>&nbsp;
<a href="https://www.cnblogs.com/east4ming">东风微鸣</a>&nbsp;
阅读(<span id="post_view_count">1</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18731359" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18731359);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18731359', targetLink: 'https://www.cnblogs.com/east4ming/p/18731359', title: 'TTRSS 迁移实战' })">举报</a>
</div>
        