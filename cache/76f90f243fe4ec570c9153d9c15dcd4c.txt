
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/youlanjihua/p/18903011" title="发布于 2025-05-29 18:09">
    <span role="heading" aria-level="2">HarmonyOS NEXT开发教程：全局悬浮窗</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p data-id="p838747a-Zg9fuxe2"><span style="font-family: &quot;PingFang SC&quot;, &quot;Smart Quotes&quot;, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei&quot;, &quot;Source Han Sans SC&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif">今天跟大家分享一下HarmonyOS开发中的悬浮窗。</span></p>
<p><img src="https://harmonyos.oss-cn-beijing.aliyuncs.com/images/202505/250e9fc677fd91b51624611584ba7e14c86b03.png" data-type="block"></p>
<p data-id="p124945a-8a7AbfCl">对于悬浮窗，可能有的同学会想到使用层叠布局是否可以实现，将悬浮窗叠在导航栏组件Tabs上，像这样：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>Stack({alignContent:Alignment.BottomEnd}){
  Tabs({barPosition:BarPosition.End}){
    TabContent(){
      Text('page1')
        .fontColor(Color.Black)
        .fontSize(40)
    }
    .tabBar(this.Tabbar())
    TabContent(){
      Page2()
    }
    .tabBar(this.Tabbar())
  
  }
  Row(){
   //这是悬浮窗
  }
  .width(60)
  .height(60)
  .borderRadius(30)
  .backgroundColor(Color.Blue)
}</code></pre>
</div>
<p data-id="p124945a-OpJYgHnb">这样的布局在push到下一个页面时悬浮窗就会消失，所以是行不通的。</p>
<p data-id="p124945a-NEIIKQaz">对于悬浮窗鸿蒙系统有专属的创建方法，就是使用createSubWindow创建子窗口，这个子窗口会悬浮在整个应用上方。具体实现代码如下：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>windowStage.createSubWindow('floatWindow',(err: BusinessError, data) =&gt;})</code></pre>
</div>
<p data-id="p124945a-hcwPN80i">在创建完成后，可以设置悬浮窗的尺寸、位置和内容等属性,要注意这里的单位是px，且只能传正整数类型：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>//尺寸data.resize(300,300,(err: BusinessError) =&gt;})</code></pre>
</div>
<div>
<pre class="language-plain highlighter-hljs"><code>//位置data.moveWindowTo(400,400,(err: BusinessError) =&gt;})</code></pre>
</div>
<div>
<pre class="language-plain highlighter-hljs"><code>//展示data.showWindow((err: BusinessError) =&gt;});</code></pre>
</div>
<p data-id="p124945a-6b4kgG3K">有的时候你可能需要设置悬浮窗是圆形，办法是先去对应的内容页面设置圆角后发现还是会有白色的背景，然后把窗口背景色设置为透明，这个方法最好在setUIContent的回调中设置：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>data?.setWindowBackgroundColor('#00000000');</code></pre>
</div>
<p data-id="p124945a-2EMwQRuU">当需要关闭悬浮窗时，可以调用destroyWindow方法进行销毁：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>window.findWindow(FloatUntil.windowName).destroyWindow()</code></pre>
</div>
<p data-id="p124945a-PUy3xydG">以上就是悬浮窗的常见使用方法，为了便于使用，我把以上方法进行了简单的封装，可以一行代码就实现悬浮窗的展示、移动、关闭等操作：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>import EntryAbility from "../entryability/EntryAbility";
import { BusinessError } from "@kit.BasicServicesKit";
import { display, window } from "@kit.ArkUI";
export class FloatUntil{
  static  screen_width = display.getDefaultDisplaySync().width
  static screen_height = display.getDefaultDisplaySync().height
  static float_size = 420
  static  float_positon_x = FloatUntil.screen_width - FloatUntil.float_size - 40
  static  float_positon_y = FloatUntil.screen_height - FloatUntil.float_size - 440
  static  windowName = 'floatWindow'
 static  creatAndShowSubWindow(){
    EntryAbility.gloabalWindowStage.createSubWindow(FloatUntil.windowName, (err: BusinessError, data) =&gt; {
      let errCode: number = err.code;
      if (errCode) {
        return;
      }
      //位置、尺寸单位是px，只支持正整数
      data.moveWindowTo(FloatUntil.float_positon_x, FloatUntil.float_positon_y, (err: BusinessError) =&gt; {
        let errCode: number = err.code;
        if (errCode) {
          return;
        }
        console.info('Succeeded in moving the window.');
      });
      data.resize(FloatUntil.float_size, FloatUntil.float_size, (err: BusinessError) =&gt; {
        let errCode: number = err.code;
        if (errCode) {
          return;
        }
      });
      //悬浮窗是否可触
      data.setWindowTouchable(true);
      data.setUIContent("pages/FloatWindow", (err: BusinessError) =&gt; {
        let errCode: number = err.code;
        if (errCode) {
          console.error('Failed to load the content. Cause:' + JSON.stringify(err));
          return;
        }
        console.info('Succeeded in loading the content.');
        //设置窗口背景色透明，只有在这调用才不会报错
        data?.setWindowBackgroundColor('#00000000');
        data.showWindow((err: BusinessError) =&gt; {
          let errCode: number = err.code;
          if (errCode) {
            console.error('Failed to show the window. Cause: ' + JSON.stringify(err));
            return;
          }
          console.info('Succeeded in showing the window.');
        });
      });
    })
  }
  static moveWindowTo(x:number,y:number){
    window.findWindow(FloatUntil.windowName).moveWindowTo(x,y)
  }
  static destroyFloatWindow(){
     window.findWindow(FloatUntil.windowName).destroyWindow()
  }
}</code></pre>
</div>
<p data-id="p838747a-oOvVdeC9">#HarmonyOS语言##ArkTs##工具效率#</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.8420471290729167" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-29 18:09">2025-05-29 18:09</span>&nbsp;
<a href="https://www.cnblogs.com/youlanjihua">幽蓝计划</a>&nbsp;
阅读(<span id="post_view_count">122</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18903011);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18903011', targetLink: 'https://www.cnblogs.com/youlanjihua/p/18903011', title: 'HarmonyOS NEXT开发教程：全局悬浮窗' })">举报</a>
</div>
        