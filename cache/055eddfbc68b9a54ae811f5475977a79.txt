
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/yayujs/p/18716871" title="发布于 2025-02-15 14:21">
    <span role="heading" aria-level="2">Svelte 最新中文文档翻译（9）—— bind: 模板语法</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="前言">前言</h2>
<p>Svelte，一个非常“有趣”、用起来“很爽”的前端框架。从 Svelte 诞生之初，就备受开发者的喜爱，根据统计，<strong>从 2019 年到 2024 年，连续 6 年一直是开发者最感兴趣的前端框架 No.1</strong>：</p>
<p><img src="https://yayujs-blog.oss-cn-beijing.aliyuncs.com/405488775-48df16b1-939c-489b-8d52-6071869893f0.png" alt="image.png" loading="lazy"></p>
<p>Svelte 以其独特的编译时优化机制著称，具有<strong>轻量级</strong>、<strong>高性能</strong>、<strong>易上手</strong>等特性，<strong>非常适合构建轻量级 Web 项目，也是我做个人项目的首选技术栈。</strong></p>
<p>目前 Svelte 基于 Svelte 5 发布了最新的官方文档，但却缺少对应的中文文档。为了帮助大家学习 Svelte，为爱发电翻译了官方文档。</p>
<p>我同时搭建了 Svelte 最新的中文文档站点：<a href="https://svelte.yayujs.com" target="_blank" rel="noopener nofollow">https://svelte.yayujs.com</a> ，如果需要辅助学习，也可以入手我的小册<a href="https://s.juejin.cn/ds/iycmvygA/" target="_blank" rel="noopener nofollow">《Svelte 开发指南》</a>，语法篇、实战篇、原理篇三大篇章带你系统掌握 Svelte！</p>
<p>虽说是翻译，但个人并不喜欢严格遵守原文，为了保证中文阅读流畅，会删减部分语句，对难懂的部分也会另做补充解释，希望能给大家带来一个好的中文学习体验。</p>
<p>欢迎围观我的<a href="https://yayujs.com" target="_blank" rel="noopener nofollow">“朋友圈”</a>、加入<a href="https://www.yuque.com/yayu/nice-people/xou8qr" target="_blank" rel="noopener nofollow">“低调务实优秀中国好青年”</a>前端社群，分享技术，带你成长。</p>
<h2 id="bind">bind:</h2>
<p>数据通常是从父级流向子级。<code>bind:</code> 指令允许数据反向流动，从子级流向父级。</p>
<p>一般语法是 <code>bind:property={expression}</code>，其中 <code>expression</code> 是一个 <em>lvalue</em>（即一个变量或一个对象属性）。当表达式的标识符与属性同名时，我们可以省略表达式——换句话说，这两者是等价的：</p>

<pre><code class="language-svelte">&lt;input bind:value={value} /&gt;
&lt;input bind:value /&gt;
</code></pre>
<p>Svelte 创建了一个事件监听器来更新绑定值。如果元素已经有一个相同事件的监听器，那个监听器会在绑定值更新之前触发。</p>
<p>大多数绑定是 <em>双向的</em>，这意味着对值的更改会影响元素，反之亦然。有一些绑定是 <em>只读的</em>，这意味着更改它们的值不会对元素产生影响。</p>
<h2 id="函数绑定">函数绑定</h2>
<p>您还可以使用 <code>bind:property={get, set}</code>，其中 <code>get</code> 和 <code>set</code> 是函数，允许您进行验证和转换：</p>
<pre><code class="language-svelte">&lt;input bind:value={
	() =&gt; value,
	(v) =&gt; value = v.toLowerCase()}
/&gt;
</code></pre>
<p>对于只读绑定如<a href="https://svelte.yayujs.com/docs/svelte/bind#Dimensions" target="_blank" rel="noopener nofollow">尺寸绑定</a>，<code>get</code> 值应为 <code>null</code>：</p>
<pre><code class="language-svelte">&lt;div
	bind:clientWidth={null, redraw}
	bind:clientHeight={null, redraw}
&gt;...&lt;/div&gt;
</code></pre>
<blockquote>
<p>[!NOTE]<br>
函数绑定在 Svelte 5.9.0 及更新版本中可用。</p>
</blockquote>
<h2 id="input-bindvalue"><code>&lt;input bind:value&gt;</code></h2>
<p>在 <code>&lt;input&gt;</code> 元素上使用 <code>bind:value</code> 指令绑定输入的 <code>value</code> 属性：</p>

<pre><code class="language-svelte">&lt;script&gt;
	let message = $state('hello');
&lt;/script&gt;

&lt;input bind:value={message} /&gt;
&lt;p&gt;{message}&lt;/p&gt;
</code></pre>
<p>对于数字输入（<code>type="number"</code> 或 <code>type="range"</code>），该值将被强制转换为数字（<a href="https://svelte.yayujs.com/playground/untitled#H4sIAAAAAAAAE6WPwYoCMQxAfyWEPeyiOOqx2w74Hds9pBql0IllmhGXYf5dKqwiyILsLXnwwsuI-5i4oPkaUX8yo7kCnKNQV7dNzoty4qSVBSr8jG-Poixa0KAt2z5mbb14TaxA4OCtKCm_rz4-f2m403WltrlrYhMFTtcLNkoeFGqZ8yhDF7j3CCHKzpwoDexGmqCL4jwuPUJHZ-dxVcfmyYGe5MAv-La5pbxYFf5Z9Zf_UJXb-sEMquFgJJhBmGyTW5yj8lnRaD_w9D1dAKSSj7zqAQAA" target="_blank" rel="noopener nofollow">demo</a>）：</p>
<pre><code class="language-svelte">&lt;script&gt;
	let a = $state(1);
	let b = $state(2);
&lt;/script&gt;

&lt;label&gt;
	&lt;input type="number" bind:value={a} min="0" max="10" /&gt;
	&lt;input type="range" bind:value={a} min="0" max="10" /&gt;
&lt;/label&gt;

&lt;label&gt;
	&lt;input type="number" bind:value={b} min="0" max="10" /&gt;
	&lt;input type="range" bind:value={b} min="0" max="10" /&gt;
&lt;/label&gt;

&lt;p&gt;{a} + {b} = {a + b}&lt;/p&gt;
</code></pre>
<p>如果输入为空或无效（在 <code>type="number"</code> 的情况下），值为 <code>undefined</code>。</p>
<p>自 5.6.0 版本开始，如果 <code>&lt;input&gt;</code> 有 <code>defaultValue</code> 并且是表单的一部分，当表单被重置时，它将恢复为该值，而不是空字符串。请注意，对于初始渲染，除非绑定值为 <code>null</code> 或 <code>undefined</code>，否则绑定值优先。</p>
<pre><code class="language-svelte">&lt;script&gt;
	let value = $state('');
&lt;/script&gt;

&lt;form&gt;
	&lt;input bind:value defaultValue="not the empty string"&gt;
	&lt;input type="reset" value="Reset"&gt;
&lt;/form&gt;
</code></pre>
<blockquote>
<p>[!NOTE]<br>
请谨慎使用重置按钮，并确保用户在提交表单时不会意外点击它们。</p>
</blockquote>
<h2 id="input-bindchecked"><code>&lt;input bind:checked&gt;</code></h2>
<p>复选框和单选输入可以绑定 <code>bind:checked</code>：</p>
<pre><code class="language-svelte">&lt;label&gt;
	&lt;input type="checkbox" bind:checked={accepted} /&gt;
	接受条款和条件
&lt;/label&gt;
</code></pre>
<p>自 5.6.0 版本开始，如果 <code>&lt;input&gt;</code> 有 <code>defaultChecked</code> 属性并且是表单的一部分，当表单被重置时，它将恢复为该值，而不是 <code>false</code>。请注意，对于初始渲染，除非绑定值为 <code>null</code> 或 <code>undefined</code>，否则绑定值优先。</p>
<pre><code class="language-svelte">&lt;script&gt;
	let checked = $state(true);
&lt;/script&gt;

&lt;form&gt;
	&lt;input type="checkbox" bind:checked defaultChecked={true}&gt;
	&lt;input type="reset" value="Reset"&gt;
&lt;/form&gt;
</code></pre>
<h2 id="input-bindgroup"><code>&lt;input bind:group&gt;</code></h2>
<p>一起工作的 input 元素，比如单选框、复选框，可以使用 <code>bind:group</code>。</p>
<pre><code class="language-svelte">&lt;script&gt;
	let tortilla = $state('Plain');

	/** @type {Array&lt;string&gt;} */
	let fillings = $state([]);
&lt;/script&gt;

&lt;!-- 分组的单选输入是互斥的 --&gt;
&lt;input type="radio" bind:group={tortilla} value="Plain" /&gt;
&lt;input type="radio" bind:group={tortilla} value="Whole wheat" /&gt;
&lt;input type="radio" bind:group={tortilla} value="Spinach" /&gt;

&lt;!-- 分组的复选框输入填充一个数组 --&gt;
&lt;input type="checkbox" bind:group={fillings} value="Rice" /&gt;
&lt;input type="checkbox" bind:group={fillings} value="Beans" /&gt;
&lt;input type="checkbox" bind:group={fillings} value="Cheese" /&gt;
&lt;input type="checkbox" bind:group={fillings} value="Guac (extra)" /&gt;
</code></pre>
<blockquote>
<p>[!NOTE] <code>bind:group</code> 仅在 input 位于同一 Svelte 组件中时才有效。</p>
</blockquote>
<h2 id="input-bindfiles"><code>&lt;input bind:files&gt;</code></h2>
<p>在 <code>&lt;input&gt;</code> 元素上使用 <code>type="file"</code> 时，您可以使用 <code>bind:files</code> 获取所选文件的 <a href="https://developer.mozilla.org/en-US/docs/Web/API/FileList" target="_blank" rel="noopener nofollow"><code>FileList</code></a>。当您想以编程方式更新文件时，您始终需要使用 <code>FileList</code> 对象。目前无法直接构造 <code>FileList</code> 对象，因此您需要创建一个新的 <a href="https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer" target="_blank" rel="noopener nofollow"><code>DataTransfer</code></a> 对象，并从中获取 <code>files</code>。</p>
<pre><code class="language-svelte">&lt;script&gt;
	let files = $state();

	function clear() {
		files = new DataTransfer().files; // null 或 undefined 无效
	}
&lt;/script&gt;

&lt;label for="avatar"&gt;上传图片：&lt;/label&gt;
&lt;input accept="image/png, image/jpeg" bind:files id="avatar" name="avatar" type="file" /&gt;
&lt;button onclick={clear}&gt;清空&lt;/button&gt;
</code></pre>
<p><code>FileList</code> 对象也不能被修改，因此如果您想从列表中删除单个文件，则需要创建一个新的 <code>DataTransfer</code> 对象，并添加您想保留的文件。</p>
<blockquote>
<p>[!NOTE] <code>DataTransfer</code> 在服务器端 JavaScript 运行时可能不可用。将绑定到 <code>files</code> 的状态保持未初始化可以防止组件在服务端渲染时出现潜在错误。</p>
</blockquote>
<h2 id="select-bindvalue"><code>&lt;select bind:value&gt;</code></h2>
<p><code>&lt;select&gt;</code> 值绑定对应于所选 <code>&lt;option&gt;</code> 的 <code>value</code> 属性，可以是任何值（不仅仅是 DOM 中通常使用的字符串）。</p>
<pre><code class="language-svelte">&lt;select bind:value={selected}&gt;
	&lt;option value={a}&gt;a&lt;/option&gt;
	&lt;option value={b}&gt;b&lt;/option&gt;
	&lt;option value={c}&gt;c&lt;/option&gt;
&lt;/select&gt;
</code></pre>
<p><code>&lt;select multiple&gt;</code> 元素的行为类似于复选框组。绑定的变量是一个数组，其中包含与每个选定的 <code>&lt;option&gt;</code> 的 <code>value</code> 属性对应的条目。</p>
<pre><code class="language-svelte">&lt;select multiple bind:value={fillings}&gt;
	&lt;option value="Rice"&gt;米饭&lt;/option&gt;
	&lt;option value="Beans"&gt;豆子&lt;/option&gt;
	&lt;option value="Cheese"&gt;奶酪&lt;/option&gt;
	&lt;option value="Guac (extra)"&gt;鳄梨（额外）&lt;/option&gt;
&lt;/select&gt;
</code></pre>
<p>当 <code>&lt;option&gt;</code> 的值与其文本内容匹配时，可以省略该属性。</p>
<pre><code class="language-svelte">&lt;select multiple bind:value={fillings}&gt;
	&lt;option&gt;米饭&lt;/option&gt;
	&lt;option&gt;豆子&lt;/option&gt;
	&lt;option&gt;奶酪&lt;/option&gt;
	&lt;option&gt;鳄梨（额外）&lt;/option&gt;
&lt;/select&gt;
</code></pre>
<p>您可以通过给 <code>&lt;option&gt;</code> 添加一个 <code>selected</code> 属性（如果是 <code>&lt;select multiple&gt;</code>，那可以设置多个 <code>selected</code> 属性），为 <code>&lt;select&gt;</code> 设置默认值。</p>
<p>如果 <code>&lt;select&gt;</code> 是表单的一部分，在表单重置时将恢复到该选择。请注意，对于初始渲染，如果绑定的值不是 <code>undefined</code>，则绑定的值优先。</p>
<pre><code class="language-svelte">&lt;select bind:value={selected}&gt;
	&lt;option value={a}&gt;a&lt;/option&gt;
	&lt;option value={b} selected&gt;b&lt;/option&gt;
	&lt;option value={c}&gt;c&lt;/option&gt;
&lt;/select&gt;
</code></pre>
<h2 id="audio"><code>&lt;audio&gt;</code></h2>
<p><code>&lt;audio&gt;</code> 元素有自己的一组绑定——五个双向绑定...</p>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/currentTime" target="_blank" rel="noopener nofollow"><code>currentTime</code></a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/playbackRate" target="_blank" rel="noopener nofollow"><code>playbackRate</code></a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/paused" target="_blank" rel="noopener nofollow"><code>paused</code></a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/volume" target="_blank" rel="noopener nofollow"><code>volume</code></a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/muted" target="_blank" rel="noopener nofollow"><code>muted</code></a></li>
</ul>
<p>...以及七个只读绑定：</p>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/duration" target="_blank" rel="noopener nofollow"><code>duration</code></a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/buffered" target="_blank" rel="noopener nofollow"><code>buffered</code></a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/paused" target="_blank" rel="noopener nofollow"><code>paused</code></a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/seekable" target="_blank" rel="noopener nofollow"><code>seekable</code></a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/seeking_event" target="_blank" rel="noopener nofollow"><code>seeking</code></a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/ended" target="_blank" rel="noopener nofollow"><code>ended</code></a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/readyState" target="_blank" rel="noopener nofollow"><code>readyState</code></a></li>
</ul>
<pre><code class="language-svelte">&lt;audio src={clip} bind:duration bind:currentTime bind:paused&gt;&lt;/audio&gt;
</code></pre>
<h2 id="video"><code>&lt;video&gt;</code></h2>
<p><code>&lt;video&gt;</code> 元素具有与 <a href="https://svelte.yayujs.com/docs/svelte/bind#audio" target="_blank" rel="noopener nofollow">audio</a> 元素相同的所有绑定，外加只读的 <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement/videoWidth" target="_blank" rel="noopener nofollow"><code>videoWidth</code></a> 和 <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement/videoHeight" target="_blank" rel="noopener nofollow"><code>videoHeight</code></a> 绑定。</p>
<h2 id="img"><code>&lt;img&gt;</code></h2>
<p><code>&lt;img&gt;</code> 元素有两个只读绑定：</p>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/naturalWidth" target="_blank" rel="noopener nofollow"><code>naturalWidth</code></a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/naturalHeight" target="_blank" rel="noopener nofollow"><code>naturalHeight</code></a></li>
</ul>
<h2 id="details-bindopen"><code>&lt;details bind:open&gt;</code></h2>
<p><code>&lt;details&gt;</code> 元素绑定到 <code>open</code> 属性。</p>
<pre><code class="language-svelte">&lt;details bind:open={isOpen}&gt;
	&lt;summary&gt;How do you comfort a JavaScript bug?&lt;/summary&gt;
	&lt;p&gt;You console it.&lt;/p&gt;
&lt;/details&gt;
</code></pre>
<h2 id="可编辑内容绑定">可编辑内容绑定</h2>
<p>具有 <code>contenteditable</code> 属性的元素支持以下绑定：</p>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML" target="_blank" rel="noopener nofollow"><code>innerHTML</code></a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/innerText" target="_blank" rel="noopener nofollow"><code>innerText</code></a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent" target="_blank" rel="noopener nofollow"><code>textContent</code></a></li>
</ul>
<blockquote>
<p>[!NOTE] <code>innerText</code> 和 <code>textContent</code> 之间有<a href="https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent#differences_from_innertext" target="_blank" rel="noopener nofollow">微妙的差异</a>。</p>
</blockquote>


<pre><code class="language-svelte">&lt;div contenteditable="true" bind:innerHTML={html} /&gt;
</code></pre>
<h2 id="尺寸">尺寸</h2>
<p>所有可见元素都有以下只读绑定，通过 <code>ResizeObserver</code> 测量：</p>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth" target="_blank" rel="noopener nofollow"><code>clientWidth</code></a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight" target="_blank" rel="noopener nofollow"><code>clientHeight</code></a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetWidth" target="_blank" rel="noopener nofollow"><code>offsetWidth</code></a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetHeight" target="_blank" rel="noopener nofollow"><code>offsetHeight</code></a></li>
</ul>
<pre><code class="language-svelte">&lt;div bind:offsetWidth={width} bind:offsetHeight={height}&gt;
	&lt;Chart {width} {height} /&gt;
&lt;/div&gt;
</code></pre>
<blockquote>
<p>[!NOTE] <code>display: inline</code> 元素没有宽度或高度（除了具有“固有”尺寸的元素，如 <code>&lt;img&gt;</code> 和 <code>&lt;canvas&gt;</code>），并且无法通过 <code>ResizeObserver</code> 进行观察。您需要将这些元素的 <code>display</code> 样式更改为其他值，例如 <code>inline-block</code>。</p>
</blockquote>
<h2 id="bindthis">bind:this</h2>
<pre><code class="language-svelte">&lt;!--- copy: false ---&gt;
bind:this={dom_node}
</code></pre>
<p>要获取对 DOM 节点的引用，请使用 <code>bind:this</code>。该值在组件挂载之前是 <code>undefined</code> —— 换句话说，您应该在 effect 或事件处理程序内部读取它，而不是在组件初始化期间读取：</p>
<pre><code class="language-svelte">&lt;script&gt;
	/** @type {HTMLCanvasElement} */
	let canvas;

	$effect(() =&gt; {
		const ctx = canvas.getContext('2d');
		drawStuff(ctx);
	});
&lt;/script&gt;

&lt;canvas bind:this={canvas} /&gt;
</code></pre>
<p>组件也支持 <code>bind:this</code>，允许您以编程方式与组件实例进行交互。</p>
<pre><code class="language-svelte">&lt;!--- file: App.svelte ---&gt;
&lt;ShoppingCart bind:this={cart} /&gt;

&lt;button onclick={() =&gt; cart.empty()}&gt; 清空购物车 &lt;/button&gt;
</code></pre>
<pre><code class="language-svelte">&lt;!--- file: ShoppingCart.svelte ---&gt;
&lt;script&gt;
	// 所有实例导出都可在实例对象上使用
	export function empty() {
		// ...
	}
&lt;/script&gt;
</code></pre>
<h2 id="bindproperty-for-components">bind:<em>property</em> for components</h2>
<pre><code class="language-svelte">bind:property={variable}
</code></pre>
<p>您可以使用与元素相同的语法绑定组件属性。</p>
<pre><code class="language-svelte">&lt;Keypad bind:value={pin} /&gt;
</code></pre>
<p>虽然 Svelte 的 props 在不绑定的情况下是响应式的，但默认情况下这种响应性只能向下流入组件。使用 <code>bind:property</code> 可以让组件内部对属性的更改向上传递出组件。</p>
<p>要将属性标记为可绑定的，请使用 <a href="https://svelte.yayujs.com/docs/svelte/$bindable" target="_blank" rel="noopener nofollow"><code>$bindable</code></a> 符文：</p>
<pre><code class="language-svelte">&lt;script&gt;
	let { readonlyProperty, bindableProperty = $bindable() } = $props();
&lt;/script&gt;
</code></pre>
<p>将属性声明为可绑定意味着它 <em>可以</em> 使用 <code>bind:</code>，但不是说它 <em>必须</em> 使用 <code>bind:</code>。</p>
<p>可绑定属性可以有一个后备值：</p>
<pre><code class="language-svelte">&lt;script&gt;
	let { bindableProperty = $bindable('fallback value') } = $props();
&lt;/script&gt;
</code></pre>
<p>此后备值 <em>仅</em> 在属性 <em>未</em> 被绑定时适用。当属性被绑定并且存在后备值时，父级必须提供一个不同于 <code>undefined</code> 的值，否则会抛出运行时错误。这可以防止出现难以推理的情况，即不清楚应该应用哪个值。</p>
<h2 id="svelte-中文文档">Svelte 中文文档</h2>
<p>本篇已收录在掘金专栏 <a href="https://juejin.cn/column/7459299646696374284" target="_blank" rel="noopener nofollow">《Svelte 中文文档》</a>，该系列预计 40 篇。</p>
<p>系统学习 Svelte，欢迎入手小册<a href="https://s.juejin.cn/ds/iycmvygA/" target="_blank" rel="noopener nofollow">《Svelte 开发指南》</a>。语法篇、实战篇、原理篇三大篇章带你系统掌握 Svelte！</p>
<p>此外我还写过 <a href="https://juejin.cn/column/7035531575974592520" target="_blank" rel="noopener nofollow">JavaScript 系列</a>、<a href="https://juejin.cn/column/7029490086710345742" target="_blank" rel="noopener nofollow">TypeScript 系列</a>、<a href="https://juejin.cn/column/7142674773930147853" target="_blank" rel="noopener nofollow">React 系列</a>、<a href="https://juejin.cn/column/7343569488744611849" target="_blank" rel="noopener nofollow">Next.js 系列</a>、<a href="https://juejin.cn/column/7039526067891077151" target="_blank" rel="noopener nofollow">冴羽答读者问</a>等 14 个系列文章， 全系列文章目录：<a href="https://github.com/mqyqingfeng/Blog" target="_blank" rel="noopener nofollow">https://github.com/mqyqingfeng/Blog</a></p>
<p>通过文字建立交流本身就是一种缘分，欢迎围观我的<a href="https://yayujs.com" target="_blank" rel="noopener nofollow">“朋友圈”</a>、加入<a href="https://www.yuque.com/yayu/nice-people/xou8qr" target="_blank" rel="noopener nofollow">“低调务实优秀中国好青年”</a>前端社群，分享技术，带你成长。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="18.262168987289353" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-15 14:22">2025-02-15 14:21</span>&nbsp;
<a href="https://www.cnblogs.com/yayujs">冴羽</a>&nbsp;
阅读(<span id="post_view_count">18</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18716871" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18716871);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18716871', targetLink: 'https://www.cnblogs.com/yayujs/p/18716871', title: 'Svelte 最新中文文档翻译（9）—— bind: 模板语法' })">举报</a>
</div>
        