
            <div class="postcontent">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>学习参考：<a href="https://www.bilibili.com/video/BV1Vy4y1z7EX?spm_id_from=333.788.videopod.episodes&amp;vd_source=46830e4624ca1c9dfb696b0af478821b&amp;p=10" rel="noopener nofollow">010-SQL分类_哔哩哔哩_bilibili</a></p>
<p>本文仅用于强化学习记忆，具体学习请根据链接直接学习视频效果最好。</p>
<p>关于SQL语句的分类：</p>
<p>DQL：</p>
<p>　　数据查询语言，凡是带有select关键字的都是查询语言、</p>
<p>　　select...</p>
<p>DML：数据操作语言，凡是对表中数据进行增删改的都是DML</p>
<p>　　insert delete update</p>
<p>　　insert 增</p>
<p>　　delete 删</p>
<p>　　update 改</p>
<p>　　主要对表中的数据进行操作</p>
<p>DDL：</p>
<p>　　数据定义语言</p>
<p>　　凡是带有create , drop , alter ,的都是DDL</p>
<p>　　DDL是针对表的结构，不是表的数据</p>
<p>　　create　　新建，相当于增</p>
<p>　　drop&nbsp;　　删除</p>
<p>　　alter　　修改</p>
<p>　　这里也相当于增删改，但是对比DML就可以知道，DML中的增删改(insert,delete,update)是针对具体表中数据，而DDL中的增删改(create,drop,alter)是针对表的结构进行操作。</p>
<p>TCL：</p>
<p>　　事务控制语言</p>
<p>　　　　包括事物提交：commit</p>
<p>　　　　事物回滚:rollback</p>
<p>DCL:</p>
<p>　　数据控制语言</p>
<p>　　eg:授权:grant,撤销权限:revoke....</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>常用命令：</p>
<p>查看表数据使用的语句为select,当你想查看表的结构使用的是desc + 表名；</p>
<p>mysql&gt; desc salgrade;<br>+-------+------+------+-----+---------+-------+<br>| Field | Type | Null | Key | Default | Extra |<br>+-------+------+------+-----+---------+-------+<br>| GRADE | int  | YES  |     | NULL    |       |<br>| LOSAL | int  | YES  |     | NULL    |       |<br>| HISAL | int  | YES  |     | NULL    |       |<br>+-------+------+------+-----+---------+-------+</p>
<p>&nbsp;</p>
<p>查看mysql版本号：</p>
<p>select version();</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202502/3326957-20250228230431490-63171947.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>查看当前使用的是哪个数据库</p>
<p>select database();</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202502/3326957-20250228230609760-1997266758.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>简单查询：</p>
<p>　　查询一个字段名：</p>
<p>　　　　select　　字段名　　from&nbsp;　　表名；</p>
<p>　　　　其中要注意：</p>
<p>　　　　　　select和from都是关键字</p>
<p>　　　　　　字段名和标名都是标识符</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202502/3326957-20250228231415376-681058568.png" alt="" loading="lazy"></p>
<p>&nbsp;　　查询两个字段或者多个字段：</p>
<p>　　　　当使用两个或者多个字段使用逗号‘，’隔开即可</p>
<p>　　　　</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202502/3326957-20250228231802366-304505060.png" alt="" loading="lazy"></p>
<p>&nbsp;　　查询所有字段：</p>
<p>　　　　1）将所有字段名打出来当作多字段查询</p>
<p>　　　　2）使用*代替字段名：</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202502/3326957-20250228231823879-1550106528.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　存在的缺点：1.效率低，程序是将*转换为所有字段再进行查询</p>
<p>　　　　　　　　　　　　2.可读性差，在实际开发中不建议使用</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>　　　给查询的列起别名：</p>
<p>　　　　　　使用as关键字:</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202502/3326957-20250228232614489-1309839357.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　注意：只是将查询结果中的列名取为deptname,原来的表中不会发生改变</p>
<p>　　　　　　　　select 语句不会对原表发生修改，只起到查询操作</p>
<p>　　　　　　as关键字也是可以省略的，但是不要加上逗号：　　效果不会改变</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202502/3326957-20250228233047055-771893143.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　</p>
<p>　　　　　　如果你取别名的时候别名是中间分开存在空格的例如上面deptname改为dept name，这个时候使用单引号或者双引号将这个别名括起来表示是一体就可以使用了,&nbsp; 'dept name'；</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202502/3326957-20250228233500526-303163608.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　以上就是给一个字段取别名的方式，在这个例子中，你想给前面的deptno也取别名，就在前面加as 或者使用空格隔开</p>
<div>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202502/3326957-20250228233930900-1220405079.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　注意：在所有数据库中，字符串统一使用单引号括起来，单引号是标准，双引号在Oracle数据库中用不了，但是在Mysql中可以使用</p>




</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>　　　　　　计算员工年薪：</p>
<p>　　　　　　　　字段名是允许数学表达式运算的：</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250301092843469-137158668.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　　　再起个别名：</p>
<p>　　　　　　　　　　　　　　使用中文记得用单引号阔起来</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250301092913115-2117216144.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　条件查询：</p>
<p>　　　　　　　　　　不是将表中所有数据都查出来，是查询符合条件的。</p>
<p>　　　　　　　　　　语法格式：</p>
<p>　　　　　　　　　　　　　　select&nbsp;</p>
<p>　　　　　　　　　　　　　　　　字段1，字段2，字段3，...</p>
<p>　　　　　　　　　　　　　　from</p>
<p>　　　　　　　　　　　　　　　　表名</p>
<p>　　　　　　　　　　　　　　　where&nbsp;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;条件;</p>
<p>　　　　　　　　查询条件</p>
<p>　　　　　　　　　　（1）‘=’　　　　　　如下例子，查询薪资800的员工编号和姓名</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250301093555776-1060707052.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　（2）&nbsp; &lt;&gt;或者!=　　　　表示不等号，如下例子</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250301093823367-1698210811.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250301093854577-1655539495.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　（3）‘&lt;’　　　　　　查询薪资小于2000的员工姓名和编号</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250301094006754-622172499.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　（4）‘&lt;=’　　　　查询薪资小于等于3000的员工姓名和编号</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250301094257473-602483023.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　(5)　　'&gt;'　　查询薪资大于3000的姓名，编号，薪水</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250301094547812-202124425.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　（6）　　‘&gt;=’　　　查询大于等于3000的</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250301094717196-1923687716.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　(7)&nbsp;　　between&nbsp; ... and ...,两个值之间，等同于&gt;= and &lt;=</p>
<p>　　　　　　　　　　　　　　　　可以使用&gt;= and &lt;=的方法直接表示</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250301095303778-283381175.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　　　　　　　也可以使用between ... and ... 的方法直接表示，使用between&nbsp; &nbsp;...&nbsp; and ... 必须遵循左小右大</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250301095510324-1365962704.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　　（8）is null&nbsp;&nbsp;　　　　表示查询是空值，只能使用is null 不能使用=null</p>
<p>　　　　　　　　　　　　　　　　　　注意在数据库中null不能使用等号进行衡量，数据库中的null代表什么也没有，不是一个值，所以不能使用等号进行衡量</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250301100022925-885944463.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　　　　　　　　　is not null　　　　查询不为null</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250301100341780-1499494105.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　　　（9）&nbsp; and&nbsp;&nbsp;　　　　表示并且，eg找出工作岗位是manage并且工资大于2500的员工信息　　　　</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250301103920534-1598348842.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　　　　（10） or&nbsp;　　　　表示或者，eg:找出工作岗位是manager或者salesman的员工信息</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250301104546060-377978982.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　　　　　（11）and 与 or 优先级对比，and优先级高于or</p>
<p>　　　　　　　　　　　　　　　　　　如果你需要查询部门工资大于2500，并且编号为10或者20的员工；</p>
<p>　　　　　　select * from emp where sal &gt; 2500 and empno = 10 or empno = 20;</p>
<p>　　　　　　根据and优先级大于or的方法来看，这种语句不是我们想要的，这个查询的结果应该是工资&gt;2500并且编号为10的员工，或者编号为20的员工。</p>
<p>　　　　　　当需要进行这种低优先级的先进行执行，可以使用()将所需语句括起来表明先执行</p>
<p>　　　　　　　　select&nbsp;　　</p>
<p>　　　　　　　　　　　　*</p>
<p>　　　　　　　　from</p>
<p>　　　　　　　　　　　　emp</p>
<p>　　　　　　　　　　where　　　　　</p>
<p>　　　　　　　　　　　　　　　　sal&gt;2500&nbsp; &nbsp;and&nbsp; &nbsp; &nbsp;（deptno=10 　　and 　　deptno=20）;</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250301231156884-1425044700.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　这样就符合我们所需要的需求了。</p>
<p>&nbsp;</p>
<p>　　　　　　　　　　（12）in&nbsp; &nbsp; （not in），&nbsp;　　表示一个查询范围，相当于多个or</p>
<p>　　　　　　　　　　　　　　　　　　假设查询工作岗位为manager和salesman的员工信息，in相当于多个or叠加</p>
<p>　　　　　　　　　　注意：in不是一个区间，是要一个具体的值</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250301231905471-913539881.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　　　（13）like， 模糊查询，其中有关键字符， %，这个可以代表任意多个字符， _ ,下划线代表任意一个字符</p>
<p>　　　　　　　　　　　　找寻名字中含有O的：</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250301232729613-1641014076.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　当特殊情况，名字中含有下划线这些特殊符号的时候，使用转移字符&nbsp; \&nbsp; ,就可以正常查询</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250301233228942-1347003051.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　　　（14）order&nbsp; by ，　　　　排序</p>
<p>　　　　　　　　　　　　　　　　　　eg: 查找员工姓名薪资按照薪资从低到高排序，默认是升序</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250302190036368-803201893.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　　　　　　　　　如果需要进行降序排列就要添加后缀desc</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250302190229799-906673721.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　当要进行多字段排序的时候：先排薪资，再排名字，　　asc升序</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250302192252771-2020114806.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　一种方便的方式直接从查询的字段中选择是第几列进行排序就行：</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250302194505335-1933381813.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　　　（15）数据处理函数：　　</p>
<p>　　　　　　　　　　　　　　　　　　　　　　单行处理函数：顾名思义，数据一行一行处理</p>
<p>　　　　　　　　　　　　　　　　　　　　　　　　　　　　特点：一个输入对应一个输出</p>
<p>　　　　　　　　　　　　　　　　　　　　　　与单行处理函数相对的是：多行处理函数（特点：多个输入对应一个输出）</p>
<p>　　　　　　　　　　　　　　　　　　常见的单行处理函数：</p>
<p>　　　　　　　　　　　　　　　　　　　　　　　　lower　　转换小写</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250302202529306-1155726431.png" alt="" width="363" height="224" loading="lazy"></p>
<p>　　　　　　　　　　　　　　　　　　　　　　　　upper　　转换大写</p>
<p>　　　　　　　　　　　　　　　　　　　　　　　　substr　　取子串(substr(被截字符串，起始下标从1开始，截取长度))</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250302202718285-727909751.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　　　　　　　　　　　　　　　eg：如果找出名字第一个字母是A的员工名字方式：</p>
<p>　　　　　　　　　　　　　　　　　　　　　　　　　　1.模糊查询</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250302202944827-1963850937.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　　　　　　　　　　　　　　　　　2.字串函数查询</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250302203159344-644061719.png" alt="" loading="lazy"></p>
<p>　　　　　　　　　　　　　　　　　　　　　　　　　　　　length　　取长度</p>
<p>　　　　　　　　　　　　　　　　　　　　　　　　　　　　concat&nbsp;　　字符串拼接</p>
<p>除了首字母大写外其他都小写进行字符串拼接：</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250302203959252-1146051763.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>　　　　　　　　　　　　　　　　　　　　　　　　trim　　　　去空格</p>
<p>　　　　　　　　　　　　　　　　　　　　　　eg：注意trim只是去空格，不要使用tab，tab不为空格</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250302204922622-1578619247.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250302205012998-2020002419.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>　　　　　　　　　　　　　　　　　　　　　　　　str_to_date　　将字符串转换为日期</p>
<p>　　　　　　　　　　　　　　　　　　　　　　　　date_format　　格式化日期</p>
<p>　　　　　　　　　　　　　　　　　　　　　　　　format　　　　设置千分位</p>
<p>　　　　　　　　　　　　　　　　　　　　　　　　round　　　四舍五入</p>
<p>　　　　　　　　　　　　　　　　　　　　　　　　rand()　　生成随机数，给的是小数，0.几的，如果需要大数可以乘以多少达到你所需要的位数，同时套用round四舍五入</p>
<p>　　　　　　　　　　　　　　　　　　　　　　　　ifnull　　可以将null转换为一个具体值</p>
<p>　　　　　　　　　　　　　　　　　　在所有数据库中有NULL参与的数学运算结果均为NULL：</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250302210526404-1137247554.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　　　使用ifnull避免这个问题，但是要注意ifnull使用的位置，下面就有一种使用错误的情况</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250302210841393-1593298711.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　　　　　　　　　case ... when ... then ... when ...then ... else ... end</p>
<p>　　　　　　　　　　　　　　　　　　　　eg:当工作岗位是manager的时候新工资提升10%,当工作岗位是salesman的时候新工资提升50%；</p>
<p>　　　　　　</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250302220322277-1865253359.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　（16）分组函数（多行处理函数）</p>
<p>　　　　　　　　　　　　　　特点：输入多行，最终出来一行</p>
<p>　　　　　　　　　　　　　　注意：分组函数使用必须先分组，再使用</p>
<p>　　　　　　　　　　　　　　如果没分组，默认整张表是一组</p>
<p>　　　　　　　　　　　　　　5个：</p>
<p>　　　　　　　　　　　　　　　　　count　　计数</p>
<p>　　　　　　　　　　　　　　　　　sum　　求和</p>
<p>　　　　　　　　　　　　　　　　　avg　　　平均</p>
<p>　　　　　　　　　　　　　　　　　max　　最大值</p>
<p>　　　　　　　　　　　　　　　　　min　　最小值</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250302222037488-933938498.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　　　　　　　　　注意，分组函数不能使用在where语句中　　eg:找出比最低工资高的员工</p>
<p>会显示错误</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250302223216860-1052433083.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　　　　　　　　　同时，所有的分组函数可以组合起来用</p>
<p>　　　　　　　　　　　　　　　　　</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250302223434939-1216304307.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　　　　　（17）分组查询：</p>
<p>　　　　　　　　　　　　　　　　在实际的应用中，可能有这样的需求，需要先分组，然后对每一组的数据进行操作</p>
<p>　　　　　　　　　　　　　　　　这个时候就需要使用分组查询，格式：</p>
<p>　　　　　　　　　　　　　　　　select&nbsp;</p>
<p>　　　　　　　　　　　　　　　　　　　　....</p>
<p>　　　　　　　　　　　　　　　　from</p>
<p>　　　　　　　　　　　　　　　　　　　　....</p>
<p>　　　　　　　　　　　　　　　　group by</p>
<p>　　　　　　　　　　　　　　　　　　　　...</p>
<p>　　　　　　　　　　　　　　　　将之前关键字全部组合在一起，来看看他们的查询执行顺序：</p>
<p>　　　　　　　　　　　　　　　　select&nbsp;</p>
<p>　　　　　　　　　　　　　　　　　　　　....</p>
<p>　　　　　　　　　　　　　　　　from　　</p>
<p>　　　　　　　　　　　　　　　　　　　　...</p>
<p>　　　　　　　　　　　　　　　　where</p>
<p>　　　　　　　　　　　　　　　　　　　　...</p>
<p>　　　　　　　　　　　　　　　　　　group by</p>
<p>　　　　　　　　　　　　　　　　　　　　　&nbsp;...</p>
<p>　　　　　　　　　　　　　　　　　　　　order by</p>
<p>　　　　　　　　　　　　　　　　　　　　....</p>
<p>&nbsp;</p>
<p>　　　　　　　　　　　　　　　　以上关键字不能颠倒，需要记忆。</p>
<p>　　　　　　　　　　　　　　　　执行顺序：</p>
<p>　　　　　　　　　　　　　　　　　1.from</p>
<p>　　　　　　　　　　　　　　　　　2.where</p>
<p>　　　　　　　　　　　　　　　　　3.group by</p>
<p>　　　　　　　　　　　　　　　　　4.select</p>
<p>　　　　　　　　　　　　　　　　　5.order by</p>
<p>　　　　　　　　　　　　　　　　从表中进行选择，条件过滤，再分组，选择需要的列信息，再排序</p>
<p>从emp表中，根据工作分组，查询工作和其工资总和</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250302234905761-695128727.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　　　注意：在一条select语句中，如果有group by语句的话，select后面只能跟：参加分组的字段，以及分组函数，其他都不能跟。</p>
<p>　　　　　　　　找出每个部门中的最高薪资：</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250303225149459-2080662017.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　找出“每个部门中不同岗位的最高薪资”，这是相当于分组再分组：</p>
<p>　　　　　　　　　　　　　　技巧：两个字段联合成一个字段看。（两个字段联合分组），下面可以看成将deptno和job联合成一个字段deptno,job</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250303225837904-481060860.png" alt="" loading="lazy"></p>
<p>&nbsp;　　　　　　　　　　　　　　(18)&nbsp; having　　子句，作用类似于where，但是where是在分组前执行，having必须跟随group by 使用，执行在其后其作用是分组后再进行过滤：</p>
<p>　　　　　　　　　　eg:找出每个部门最高薪资，并且只有最高薪资大于3000才进行显示：</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250303230749626-1657547316.png" alt="" loading="lazy"></p>
<p>&nbsp;这种sql语句执行效率低，如果可能尽量在分组前进行过滤，不要分组后再进行子句过滤，上面那个例子可以直接用where过滤低于3000的再分组找最高</p>
<p>&nbsp;</p>
<p>　　　　　　　　　　（19）大总结（单表查询）：</p>
<p>　　　格式顺序,不能颠倒：</p>
<p>　　　　select&nbsp;　</p>
<p>　　　　　　....</p>
<p>　　　　from</p>
<p>　　　　　　...</p>
<p>　　　　　where</p>
<p>　　　　　　　　..</p>
<p>　　　　　　group by</p>
<p>　　　　　　　　...</p>
<p>　　　　　　　　having</p>
<p>　　　　　　　　　　....</p>
<p>　　　　　　　　　　　order by</p>
<p>　　　　　　　　　　　　...</p>
<p>　　　　　　执行顺序：</p>
<p>　　　　　　from ...</p>
<p>　　　　　　where ...</p>
<p>　　　　　　group by ...</p>
<p>　　　　　　having　　...</p>
<p>　　　　　　select　　...</p>
<p>　　　　　　order by ...</p>
<p>从某张表中，进行条件过滤，再分组，再组内进行过滤，选择需要查询显示的数据，进行排序。</p>
<p>　　　　　　eg:找出每个岗位平均薪资，要求显示平均薪资大于1500，并且工作不为manger的，要求按照平均薪资降序排：</p>
<p><img src="https://img2024.cnblogs.com/blog/3326957/202503/3326957-20250303233045312-2065337665.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

            </div>
            <div class="itemdesc">
                发表于 
<span id="post-date" data-last-update-days="0.021551593931712965" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-03 23:48">2025-03-03 23:47</span>&nbsp;
<a href="https://www.cnblogs.com/qianzhu">千主</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18744553" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18744553);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18744553', targetLink: 'https://www.cnblogs.com/qianzhu/p/18744553', title: 'mysql学习' })">举报</a>

            </div>
        