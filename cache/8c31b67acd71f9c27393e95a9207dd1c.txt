
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/huangSir-devops/p/18849973" title="发布于 2025-05-18 13:33">
    <span role="heading" aria-level="2">shell编程之函数</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="概述">概述</h2>
<p>在 Shell 脚本中，函数是一种组织代码的方式，它允许你将一组相关的命令组合在一起，以便在脚本的不同地方重复使用</p>
<p>简单点说就是将shell脚本中重复的代码提取出来，精简脚本的内容，让脚本更加规范，可读性更高。</p>
<h2 id="应用场景">应用场景</h2>
<ul>
<li>在书写脚本的时候，尽量使用函数，规范脚本</li>
<li>让脚本的开发，更加模块化</li>
<li>方便后期的调试，调试的时候只需要注释函数即可</li>
</ul>
<h2 id="函数的语法">函数的语法</h2>
<p>函数定义使用<code>function</code>关键字，</p>
<p><strong>注意：func_name代表函数名称</strong></p>
<p>第一种（最完整的）</p>
<pre><code>function func_name() {
  shell内容
  shell内容
  ...
  return 返回结果
}
</code></pre>
<p>第二种</p>
<pre><code>func_name() {
  shell内容
  shell内容
  ...
  return 返回结果
}
</code></pre>
<p>第三种</p>
<pre><code>function func_name {
  shell内容
  shell内容
  ...
  return 返回结果
}
</code></pre>
<h2 id="如何调用函数">如何调用函数</h2>
<p>在脚本中直接使用函数名即可。<br>
<strong>调用函数需要在函数声明后调用</strong>，如果是声明前调用则会出现异常</p>
<p>示例：</p>
<pre><code># 编写脚本
[root@master01 ~]# cat shell01.sh 
#!/bin/bash
function hello() {
  echo "hello shell"
}
hello

# 加上执行权限
[root@master01 ~]# chmod +x shell01.sh 

# 执行脚本
[root@master01 ~]# ./shell01.sh 
hello shell
</code></pre>
<h2 id="如何给函数传递参数">如何给函数传递参数</h2>
<p>在 Shell 中，函数可以接受参数，这些参数通过位置传递，就像脚本接受命令行参数一样。</p>
<ul>
<li>$1, $2, ... ：表示传递给函数的第 1 个、第 2 个... 参数</li>
<li>$# ：传递给函数的参数个数</li>
<li>$@ ：所有参数列表</li>
<li>$* ：所有参数列表（以单个字符串形式）</li>
</ul>
<p>示例：</p>
<pre><code># 定义脚本
[root@master01 ~]# cat shell02.sh 
#!/bin/bash
function add_number() {
 echo '你输入的第一个参数：'$1
 echo '你输入的第二个参数：'$2
 count=`awk -v num1=$1 -v num2=$2 'BEGIN {print num1+num2}'`
 echo '和为：'$count
}
add_number 2 4

# 添加执行权限
[root@master01 ~]# chmod +x shell02.sh 

# 执行脚本
[root@master01 ~]# ./shell02.sh 
你输入的第一个参数：2
你输入的第二个参数：4
和为：6
</code></pre>
<h2 id="如何获取函数返回值">如何获取函数返回值</h2>
<p>Shell 函数的返回值通过退出状态码（exit status）传递，范围是 0-255，其中 0 表示成功，非零表示失败。</p>
<ul>
<li>使用 return 语句设置返回值</li>
<li>使用 $? 获取函数的返回值</li>
</ul>
<p>示例：</p>
<pre><code># 定义脚本
[root@master01 ~]# cat shell03.sh 
#!/bin/bash
function add_number() {
 echo '你输入的第一个参数：'$1
 echo '你输入的第二个参数：'$2
 count=`awk -v num1=$1 -v num2=$2 'BEGIN {print num1+num2}'`
 echo '和为：'$count
 return 222
}
add_number 2 4
echo '函数返回值：'$?

# 给脚本添加执行权限
[root@master01 ~]# chmod +x shell03.sh 

# 执行脚本
[root@master01 ~]# ./shell03.sh
你输入的第一个参数：2
你输入的第二个参数：4
和为：6
函数返回值：222
</code></pre>
<h2 id="变量作用域">变量作用域</h2>
<p>变量根据所在位置不同分为两类：</p>
<ul>
<li>全局变量：在函数外部定义的变量，函数内部可以直接访问</li>
<li>局部变量：在函数内部使用 local 关键字定义的变量，只在函数内部可见</li>
</ul>
<p>示例：</p>
<pre><code>global_var="global"

function test_scope {
    local local_var="local"  # 局部变量
    echo "Inside function: global_var=$global_var, local_var=$local_var"
}

# 输出：Inside function: global_var=global, local_var=local
test_scope 

# 输出：Outside function: global_var=global, local_var=
echo "Outside function: global_var=$global_var, local_var=$local_var"  
</code></pre>
<p>注意事项：</p>
<ul>
<li>函数必须在调用之前定义</li>
<li>函数内部的命令执行失败（返回非零状态码）不会自动终止函数，需要显式处理</li>
<li>函数返回值只能是 0-255 的整数，如果需要返回其他类型的值，可以通过 echo 输出并捕获</li>
<li>使用 local 关键字定义局部变量，避免意外修改全局变量</li>
</ul>

</div>
<div id="MySignature" role="contentinfo">
    <p>本文来自博客园，作者：<a href="https://www.cnblogs.com/huangSir-devops/" target="_blank">huangSir-devops</a>，转载请注明原文链接：<a href="https://www.cnblogs.com/huangSir-devops/p/18849973" target="_blank">https://www.cnblogs.com/huangSir-devops/p/18849973</a>，微信Vac666666，欢迎交流</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.1955994140752315" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-18 13:33">2025-05-18 13:33</span>&nbsp;
<a href="https://www.cnblogs.com/huangSir-devops">huangSir-devops</a>&nbsp;
阅读(<span id="post_view_count">12</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18849973);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18849973', targetLink: 'https://www.cnblogs.com/huangSir-devops/p/18849973', title: 'shell编程之函数' })">举报</a>
</div>
        