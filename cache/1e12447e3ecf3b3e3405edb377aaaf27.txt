
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ka1kai/p/19049020/use-1panel-runtime-to-deploy-java-application" title="发布于 2025-08-20 16:50">
    <span role="heading" aria-level="2">告别复杂配置！使用 1Panel 运行环境功能轻松搭建 Java 应用</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        <img src="https://img2024.cnblogs.com/blog/3591619/202508/3591619-20250820164922084-17992336.png" alt="告别复杂配置！使用 1Panel 运行环境功能轻松搭建 Java 应用" class="desc_img">
        本文介绍了使用1Panel工具快速搭建Java运行环境的实践方法。通过五步操作（上传Jar包、创建运行环境、部署应用、创建网站、验证访问）即可在10分钟内完成传统需要2小时的Java应用部署。1Panel的容器化技术解决了环境配置复杂、版本冲突等问题，提供图形化界面和集中式日志管理，显著提升部署效率。文章以Halo应用为例详细演示了操作流程，并对比了传统部署与1Panel方案的优劣，帮助开发者实现现代化应用部署。
    </div>
<div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h1 class="text-4xl font-medium"><span style="font-size: 14px">一、引言：Java 部署之痛与新生</span></h1>
<article id="content" class="markdown-body !mt-5 !max-w-none">
<p>作为开发者，你是否经历过这些场景？<br>✅ 为不同Java版本频繁切换环境变量<br>✅ 在服务器手动安装Nginx或Tomcat配置端口<br>✅ 调试环境差异导致的“在我本地是好的”问题</p>
<p>传统Java应用部署的复杂性已成为开发效率的瓶颈。而<strong>1Panel的「运行环境」功能</strong>通过容器化技术，将环境配置简化为<strong>图形界面上的几次点击</strong>。本文将手把手教你用1Panel 10分钟搭建高可用的Java运行环境。</p>
<hr>
<h4 id="%E4%BA%8C%E3%80%81%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C">二、准备工作</h4>
<ol>
<li>
<p><strong>基础设施</strong></p>
<ul>
<li>
<p>Linux服务器</p>
</li>
<li>
<p>已安装1Panel（<a href="https://1panel.cn/docs/v2/installation/online_installation/" target="_blank" rel="noopener nofollow">官方安装指南</a>）</p>
</li>
<li>
<p>在 1Panel 中已经安装 OpenResty 应用</p>
</li>
</ul>
</li>
<li>
<p><strong>应用资源</strong></p>
<ul>
<li>
<p>Halo Jar 包（可从<a href="https://download.halo.run/" target="_blank" rel="noopener nofollow">这里</a>下载）</p>
</li>
</ul>
</li>
</ol>
<hr>
<h4 id="%E4%B8%89%E3%80%81%E5%AE%9E%E6%88%98%EF%BC%9A%E4%B8%89%E6%AD%A5%E6%90%AD%E5%BB%BAjava%E7%8E%AF%E5%A2%83">三、实战：三步搭建Java环境</h4>
<ol>
<li>
<p><strong>上传Halo Jar包至服务器</strong><br>登录1Panel，进入「系统」-&gt;「文件」，这里可以根据喜好选择「直接上传」或者「远程下载」，如下图所示：<img height="100%" width="100%" data-src="https://www.lxware.cn/upload/image-gZGy.png" class="lazyload">例如，这里我们下载<code>halo-pro-2.21.3.jar</code>至目录<code>/home/johnniang/halo</code>，接下来的操作会用到这个路径，如下图所示：<img height="100%" width="100%" data-src="https://www.lxware.cn/upload/image-mMYc.png" class="lazyload"></p>
</li>
<li>
<p><strong>创建运行环境</strong><br>进入「网站」-&gt;「运行环境」，点击「Java」-&gt;「创建运行环境」，如下图所示：<img height="100%" width="100%" data-src="https://www.lxware.cn/upload/image-Xjbo.png" class="lazyload"><br>关键配置如下表所示：</p>
<div>
<table><colgroup><col><col><col></colgroup>
<tbody>
<tr>
<th colspan="1" rowspan="1">
<p>参数</p>
</th>
<th colspan="1" rowspan="1">
<p>值示例</p>
</th>
<th colspan="1" rowspan="1">
<p>说明</p>
</th>
</tr>
<tr>
<td colspan="1" rowspan="1">
<p>环境名称</p>
</td>
<td colspan="1" rowspan="1">
<p><code>myhalo</code></p>
</td>
<td colspan="1" rowspan="1">
<p>按业务命名</p>
</td>
</tr>
<tr>
<td colspan="1" rowspan="1">
<p>应用</p>
</td>
<td colspan="1" rowspan="1">
<p>Java 21</p>
</td>
<td colspan="1" rowspan="1">
<p>Java 运行环境</p>
</td>
</tr>
<tr>
<td colspan="1" rowspan="1">
<p>项目目录</p>
</td>
<td colspan="1" rowspan="1">
<p>/home/johnniang/halo</p>
</td>
<td colspan="1" rowspan="1">
<p>Halo Jar 包所在目录</p>
</td>
</tr>
<tr>
<td colspan="1" rowspan="1">
<p>启动命令</p>
</td>
<td colspan="1" rowspan="1">
<p>java -jar halo-pro-2.21.3.jar</p>
</td>
<td colspan="1" rowspan="1">
<p>可添加 JVM 参数和启动参数</p>
</td>
</tr>
<tr>
<td colspan="1" rowspan="1">
<p>端口映射</p>
</td>
<td colspan="1" rowspan="1">
<p>8090:8090</p>
</td>
<td colspan="1" rowspan="1">
<p>宿主端口:容器端口</p>
</td>
</tr>
<tr>
<td colspan="1" rowspan="1">
<p>存储卷</p>
</td>
<td colspan="1" rowspan="1">
<p><code>/home/johnniang/.halo2</code>&nbsp;→&nbsp;<code>/root/.halo2</code></p>
</td>
<td colspan="1" rowspan="1">
<p>挂载应用目录，重启容器后数据不会丢失</p>
</td>
</tr>
</tbody>
</table>
</div>
<p>具体配置如下图所示：<img height="100%" width="100%" data-src="https://www.lxware.cn/upload/image-AFvT.png" class="lazyload"></p>
</li>
<li>
<p><strong>部署应用文件</strong><br>配置好参数后，点击「确认」按钮，1Panel将会帮我们自动构建容器并部署，当状态为「已启动」则表示我们的服务已经正常运行了，如下图所示：<img height="100%" width="100%" data-src="https://www.lxware.cn/upload/image-Kcng.png" class="lazyload"></p>
<blockquote>
<p>点击「日志」列的查看按钮可以看到容器运行的日志详情。</p>
</blockquote>
</li>
<li>
<p><strong>创建网站</strong></p>
<p>如果我们想要对外提供服务，则需要手动创建对应的网站来支持。具体操作细节请参考<a href="https://1panel.cn/docs/v2/user_manual/websites/website_create/" target="_blank" rel="noopener nofollow">官方文档</a>。需要注意的是，创建网站的时候需选择我们之前创建的Java「运行环境」。具体示例如下图所示：<img height="100%" width="100%" data-src="https://www.lxware.cn/upload/image-JOyC.png" class="lazyload"></p>
<p>&nbsp;</p>
</li>
<li>
<p><strong>验证与访问</strong></p>
<p>根据具体的配置在浏览器访问对应的域名，检查服务是否正常。如果出现了Halo初始化页面，则表示网站创建成功，具体示例如下图所示：<img height="100%" width="100%" data-src="https://www.lxware.cn/upload/image-yCHf.png" class="lazyload"></p>
<p>&nbsp;</p>
</li>
</ol>
<hr>
<h4 id="%E5%9B%9B%E3%80%81%E4%B8%BA%E4%BB%80%E4%B9%88%E9%80%89%E6%8B%A91panel%EF%BC%9F">四、为什么选择1Panel？</h4>
<div>
<table><colgroup><col><col></colgroup>
<tbody>
<tr>
<th colspan="1" rowspan="1">
<p>传统方式</p>
</th>
<th colspan="1" rowspan="1">
<p>1Panel方案</p>
</th>
</tr>
<tr>
<td colspan="1" rowspan="1">
<p>手动安装JDK</p>
</td>
<td colspan="1" rowspan="1">
<p><strong>预装容器化环境</strong></p>
</td>
</tr>
<tr>
<td colspan="1" rowspan="1">
<p>需编写Dockerfile</p>
</td>
<td colspan="1" rowspan="1">
<p><strong>零代码图形操作</strong></p>
</td>
</tr>
<tr>
<td colspan="1" rowspan="1">
<p>日志分散在不同目录</p>
</td>
<td colspan="1" rowspan="1">
<p><strong>集中式日志管理</strong></p>
</td>
</tr>
</tbody>
</table>
</div>
<blockquote>
<p>✅ 实测效率提升：从2小时部署 →&nbsp;<strong>10分钟完成</strong></p>
</blockquote>
<hr>
<h4 id="%E4%BA%94%E3%80%81%E7%BB%93%E8%AF%AD%EF%BC%9A%E6%8B%A5%E6%8A%B1%E7%8E%B0%E4%BB%A3%E5%8C%96%E9%83%A8%E7%BD%B2">五、结语：拥抱现代化部署</h4>
<p>1Panel通过运行环境功能实现了：<br>🔥&nbsp;<strong>环境标准化</strong>&nbsp;- 消除“本地能跑线上挂”的魔咒<br>🔥&nbsp;<strong>资源隔离</strong>&nbsp;- 避免多应用互相抢占资源</p>
<blockquote>
<p>现在就开始行动：</p>
<ol>
<li>
<p><a href="https://1panel.cn/docs/v2/installation/online_installation/" target="_blank" rel="noopener nofollow">下载1Panel</a></p>
</li>
<li>
<p>部署你的第一个Java容器</p>
</li>
<li>
<p>在评论区分享你的实践成果！</p>
</li>
</ol>
</blockquote>
</article>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-08-20 16:50">2025-08-20 16:50</span>&nbsp;
<a href="https://www.cnblogs.com/ka1kai">kaika1</a>&nbsp;
阅读(<span id="post_view_count">46</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19049020);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19049020', targetLink: 'https://www.cnblogs.com/ka1kai/p/19049020/use-1panel-runtime-to-deploy-java-application', title: '告别复杂配置！使用 1Panel 运行环境功能轻松搭建 Java 应用' })">举报</a>
</div>
        