
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/fanliang11/p/18994761" title="发布于 2025-07-20 22:28">
    <span role="heading" aria-level="2">DotNetty 1.0 发布，希望不会太晚。</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h2>一、前言</h2>
<p>&nbsp; &nbsp; &nbsp; &nbsp;通过1个月修改，今天dotnetty 发布了1.0 版本，虽然不是官方发布，但是我把最大的问题内存泄漏修复了，运行了7个小时，同时直播推流三个通道内存稳定在55mb左右，cpu 稳定在0.4%， 服务器只有4核16G，看如下图</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/192878/202507/192878-20250720215400077-1748205828.png" class="lazyload"></p>
<p>&nbsp;</p>
<p>HttpFlv:<a href="http://demo.kayakiot.cn:281/httpflv.html" rel="noopener nofollow" target="_blank">http://demo.kayakiot.cn:281/httpflv.html</a>&nbsp; <a target="_blank">（黑衣人）</a></p>
<p>&nbsp;HttpFlv:<a href="http://demo.kayakiot.cn:281/httpflv1.html" rel="noopener nofollow" target="_blank">http://demo.kayakiot.cn:281/httpflv1.html&nbsp;</a> <a target="_blank">（大红包）</a></p>
<p>HttpFlv:<a href="http://demo.kayakiot.cn:281/httpflv2.html" rel="noopener nofollow" target="_blank">http://demo.kayakiot.cn:281/httpflv2.html&nbsp;</a> <a target="_blank">（鹿鼎记）</a></p>
<p>rtmp:<a target="_blank">rtmp://demo.kayakiot.cn:76/live1/livestream2&nbsp;&nbsp; （黑衣人）</a></p>
<p>rtmp:<a target="_blank">rtmp://demo.kayakiot.cn:76/live1/livestream3&nbsp;&nbsp; （大红包）</a></p>
<p>rtmp:<a target="_blank">rtmp://demo.kayakiot.cn:76/live1/livestream4</a><a target="_blank">（鹿鼎记）</a></p>
<p>注：测试服务器带宽只有8MB,&nbsp;httpflv&nbsp; 缓冲做的没有rtmp好，然后httpflv卡就多刷新几次</p>
<p>&nbsp; 凯亚 (Kayak) 是什么?</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 凯亚(Kayak)是基于.NET8.0软件环境下的surging微服务引擎进行开发的, 平台包含了微服务和物联网平台。支持异步和响应式编程开发，功能包含了物模型,设备,产品,网络组件的统一管理和微服务平台下的注册中心，服务路由，模块，中间服务等管理。还有多协议适配(TCP,MQTT,UDP,CoAP,HTTP,Grpc,websocket,rtmp,httpflv,webservice,等),通过灵活多样的配置适配能够接入不同厂家不同协议等设备。并且通过设备告警,消息通知,数据可视化等功能。能够让你能快速建立起微服务物联网平台系统。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; 凯亚物联网平台：<a href="http://demo.kayakiot.cn:3100" rel="noopener nofollow" target="_blank">http://demo.kayakiot.cn:3100</a>（用户名：fanly&nbsp; 密码：123456）</p>
<p>&nbsp; &nbsp; 链路跟踪Skywalking V8:<a href="http://117.72.121.2:8080/" rel="noopener nofollow" target="_blank">http://117.72.121.2:8080/</a></p>
<p>&nbsp; &nbsp;dotnetty:<a href="https://github.com/microsurging/DotNetty" rel="noopener nofollow" target="_blank">https://github.com/microsurging/DotNetty</a></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; surging 微服务引擎开源地址：<a href="https://github.com/fanliang11/surging" rel="noopener nofollow" target="_blank">https://github.com/fanliang11/surging</a>（后面surging 会移动到<a href="https://github.com/microsurging/" rel="noopener nofollow" target="_blank">microsurging</a>进行维护）</p>
<h2>二、发布nuget</h2>
<p>然后大家可以通过nuget 进行下载安装，&nbsp;源码地址：<a href="https://github.com/microsurging/DotNetty/" rel="noopener nofollow">GitHub - microsurging/DotNetty</a></p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/192878/202507/192878-20250720215932280-1568040012.png" class="lazyload"></p>
<h2>三、如何使用</h2>
<p>Dotnetty 1.0版本&nbsp; 可以不需要修改，但是耗时的业务调用会占用线程池，会导致线程池线程耗尽，内存溢出。为了解决这个问题，在创建EventLoopGroup时候可以选择TaskSchedulerType.Alone任务调度，代码如下：</p>
<p>&nbsp;默认任务调度：</p>
<div class="cnblogs_code">
<pre>              <span style="color: rgba(0, 0, 255, 1)">var</span> bossEventExecutor = <span style="color: rgba(0, 0, 255, 1)">new</span> MultithreadEventLoopGroup(<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">);
              </span><span style="color: rgba(0, 0, 255, 1)">var</span> workEventExecutor = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> MultithreadEventLoopGroup();

     
             </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">Libuv</span>
                <span style="color: rgba(0, 0, 255, 1)">var</span> dispatcher = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> DispatcherEventLoopGroup();
                 bossEventExecutor </span>=<span style="color: rgba(0, 0, 0, 1)"> dispatcher;
                 workEventExecutor </span>= <span style="color: rgba(0, 0, 255, 1)">new</span> WorkerEventLoopGroup(dispatcher);</pre>
</div>
<p>&nbsp;TaskSchedulerType.Alone任务调度：</p>
<div class="cnblogs_code">
<pre>                  <span style="color: rgba(0, 0, 255, 1)">var</span>   bossEventExecutor = <span style="color: rgba(0, 0, 255, 1)">new</span> MultithreadEventLoopGroup(<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">,TaskSchedulerType.Alone);
                   </span><span style="color: rgba(0, 0, 255, 1)">var</span>  workEventExecutor = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> MultithreadEventLoopGroup(TaskSchedulerType.Alone);

</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">Libuv</span>
                <span style="color: rgba(0, 0, 255, 1)">var</span> dispatcher = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> DispatcherEventLoopGroup(TaskSchedulerType.Alone);
                 bossEventExecutor </span>=<span style="color: rgba(0, 0, 0, 1)"> dispatcher;
                 workEventExecutor </span>= <span style="color: rgba(0, 0, 255, 1)">new</span> WorkerEventLoopGroup(dispatcher,TaskSchedulerType.Alone);</pre>
</div>
<h2>四、插件化</h2>
<p>你可以开发好的模块插件，通过模块管理上传。</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/192878/202507/192878-20250720221919919-1343122555.png" class="lazyload"></p>
<p>&nbsp;</p>
<p>在插件管理界面，就能看到上传的插件，上传的就是第三方应用，你也可以修改ID，对应插件的ModuleType</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/192878/202507/192878-20250720222138680-1303225129.png" class="lazyload"></p>
<p>&nbsp;然后你可以查看api ,就能通过swagger 进行查看</p>
<p><img alt="" loading="lazy" data-src="https://img2024.cnblogs.com/blog/192878/202507/192878-20250720222353249-1397668052.png" class="lazyload"></p>
<p>&nbsp;五、总结</p>
<p>后面会陆续推出视频中心等模块，敬请期待！</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.006944444444444444" data-date-updated="2025-07-20 22:38">2025-07-20 22:28</span>&nbsp;
<a href="https://www.cnblogs.com/fanliang11">fanly11</a>&nbsp;
阅读(<span id="post_view_count">422</span>)&nbsp;
评论(<span id="post_comment_count">3</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18994761);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18994761', targetLink: 'https://www.cnblogs.com/fanliang11/p/18994761', title: 'DotNetty 1.0 发布，希望不会太晚。' })">举报</a>
</div>
        