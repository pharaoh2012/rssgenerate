
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/samhou/p/18869559/from-uefi-to-grub" title="发布于 2025-05-10 14:11">
    <span role="heading" aria-level="2">从 UEFI 启动到双系统——记一次双系统 Linux 分区迁移</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        本文介绍 UEFI 的工作原理，以及在双系统（Windows与Ubuntu）环境下，通过调整分区大小、迁移数据、扩展Linux分区及修复Grub引导配置，解决空间不足问题的完整流程。重点解析了UEFI启动机制下，因分区移动导致的引导失效现象，并通过命令行手动启动系统、更新Grub配置文件，最终实现双系统正常引导的解决方案。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="前言">前言</h2>
<p>我的台式电脑上，装了 Windows 和 Linux 双系统。</p>
<p>我有两块 1 TB 硬盘，就把它们叫作硬盘 0 和硬盘 1 吧。最开始的时候，硬盘 0 上装了 Windows 系统，而我的数据分区装在硬盘 1 上面。</p>
<p>后来呢，我想体验 Ubuntu，于是用安装程序调整了硬盘 1 的 Data 分区大小，然后在那里装了系统。</p>
<p>一切都很好，直到一天 Ubuntu 提示我空间不足。</p>
<p>经过一些合理的构思，我打算这么做：</p>
<ol>
<li>清理 Windows 磁盘空间</li>
<li>调整 Windows 分区大小到 500 G</li>
<li>清理磁盘 1 上的数据</li>
<li>复制 Data 分区到磁盘 0 的空闲区域</li>
<li>扩展磁盘 1 的 Ubuntu 系统分区</li>
<li>调整系统引导，正确启动系统</li>
</ol>
<p>话不多说，我们先来看看一开始的分区示意图。</p>
<p><img src="https://img2024.cnblogs.com/blog/2014033/202505/2014033-20250510141053499-1485838345.png" alt="初始磁盘" loading="lazy"></p>
<p>然后，我们要达到的目标：</p>
<p><img src="https://img2024.cnblogs.com/blog/2014033/202505/2014033-20250510141054444-1238679335.png" alt="磁盘目标" loading="lazy"></p>
<p>结果在迁移过程中，耗费最久时间的不是数据复制，而是引导的配置。</p>
<p>所以，本文就从电脑启动开始，带你深入了解双系统的工作原理，相信你看完就能随便调整电脑了。</p>
<h2 id="从-bios-到-uefi">从 BIOS 到 UEFI</h2>
<p>电脑电源接通之后，BIOS（基本输入输出系统，电脑内置）会自动检查各个核心部件（CPU，内存，硬盘……），然后获取启动优先级配置。</p>
<p>如果你 USB 啥都没插，也没有对 BIOS 进行设置，那么肯定直接从硬盘启动。</p>
<p>怎么启动呢？传统的 BIOS 会从硬盘第一扇区找到 MBR（主引导记录，里面记录了分区表，和启动引导程序），执行其中的引导程序。引导程序会执行启动操作系统。然而，现在的系统引导或许放不下，那么 MBR 中的引导就不会直接启动系统，而是传递给硬盘指定位置上的二级引导程序。</p>
<p>好了，现在引导程序已经运行，而我们的系统也随之启动，这样整个启动过程也就完成了。</p>
<blockquote>
<p>但是先等等！我们有<strong>两个硬盘</strong>啊！我怎么知道该启动哪一个？</p>
</blockquote>
<p>前面说过了，BIOS 中配置了启动优先级，因此，可以有多个 MBR 放在不同硬盘上，而用哪一个都是由 BIOS 配置的。</p>
<p>但是这种启动方式现在已经不常见了，因为它老旧、只支持最大 2 TB 硬盘，所以已经被淘汰了。</p>
<p>它的后继者，叫作 UEFI。</p>
<p>我们再来看看上面的图片。</p>
<p><img src="https://img2024.cnblogs.com/blog/2014033/202505/2014033-20250510141053499-1485838345.png" alt="磁盘" loading="lazy"></p>
<blockquote>
<p>EFI 分区是啥！？</p>
</blockquote>
<p>相信你也注意到了，我们的硬盘上有叫作 <strong>EFI 分区</strong> 的东西。</p>
<p>EFI 分区中，就保存着启动操作系统所需的引导程序。</p>
<p>EFI 分区可以随意调整大小，因此突破了 MBR 大小受限、位置必须在第一扇区的问题。</p>
<p>和 BIOS 传统启动一样，UEFI 也可以配置启动顺序。每个 EFI 分区都会列出，然后你可以选一个来启动。</p>
<h2 id="引导程序">引导程序</h2>
<p>Windows 的引导叫作 Windows Boot Manager。很简单，上面图里硬盘 0 的 EFI 里存着的就是它。而 Linux 通常用的是 Grub，它可以启动 Linux 系统。当我们在安装时，安装程序会自动配置 Grub 的配置文件，向启动添加多个启动项。</p>
<p>默认的启动项如下：</p>
<ul>
<li>Ubuntu（自己启动 Linux）</li>
<li>Windows Boot Manager（交给 Windows 引导处理）<br>
你可以在启动时自由选择，根据你的选项来启动不同系统。</li>
</ul>
<h2 id="迁移硬盘">迁移硬盘</h2>
<p>既然我们已经知道了系统是怎样启动的，那么就开始迁移分区吧！这里用 Disk Genius PE 版本对分区进行修改。</p>
<p>提示：这里我们用虚拟机模拟操作，因为物理机没办法截图……</p>
<p>首先打开 PE 系统，缩容 Windows 分区到一半大小。</p>
<p><img src="https://img2024.cnblogs.com/blog/2014033/202505/2014033-20250510141055737-1559736520.png" alt="缩小分区" loading="lazy"></p>
<p>然后复制 Data 分区到硬盘 0 的空闲区域中。</p>
<p><img src="https://img2024.cnblogs.com/blog/2014033/202505/2014033-20250510141054990-1352517216.png" alt="复制数据" loading="lazy"></p>
<p>再删除 Data 分区。</p>
<p><img src="https://img2024.cnblogs.com/blog/2014033/202505/2014033-20250510141054734-2033405760.png" alt="删除重复分区" loading="lazy"></p>
<p>然后磁盘就变成了这样。</p>
<p>EFI 分区夹在中间，导致 Ubuntu 无法完全利用空间。因此想办法移动到硬盘最前端。</p>
<p>先记录总扇区数量：</p>
<p><img src="https://img2024.cnblogs.com/blog/2014033/202505/2014033-20250510141055150-659828168.png" alt="扇区数量记录" loading="lazy"></p>
<p>然后扩容分区，再缩小到原来的大小。</p>
<p><img src="https://img2024.cnblogs.com/blog/2014033/202505/2014033-20250510141055551-2135016902.png" alt="扩容 EFI" loading="lazy"><img src="https://img2024.cnblogs.com/blog/2014033/202505/2014033-20250510141055580-1611537428.png" alt="缩小 EFI" loading="lazy"></p>
<p>最后扩容 Linux 分区：</p>
<p><img src="https://img2024.cnblogs.com/blog/2014033/202505/2014033-20250510141055410-560599012.png" alt="扩容 Linux" loading="lazy"></p>
<p>然后启动系统。</p>
<p>你会发现，Grub 的配置文件还在，但是由于分区移动，配置文件并不能正常启动 Ubuntu，只能启动到内核阶段：</p>
<p><img src="https://img2024.cnblogs.com/blog/2014033/202505/2014033-20250510141054940-1338009234.png" alt="内核" loading="lazy"></p>
<h2 id="命令行启动系统">命令行启动系统</h2>
<p><img src="https://img2024.cnblogs.com/blog/2014033/202505/2014033-20250510141055432-596143147.png" alt="进入 Grub" loading="lazy"></p>
<p>注：这里没 Windows 是因为开了虚拟机演示。</p>
<p>按下 c，进入命令行。我们来通过命令行启动系统。</p>
<p>你应该可以看到 grub&gt; 这个东西。</p>
<p>输入 boot，提示要先加载内核。</p>
<p>内核的话，在 /boot 里面。</p>
<p>输入 linux（指定内核），然后输入路径，然后按下 Tab 自动补全：</p>
<p><img src="https://img2024.cnblogs.com/blog/2014033/202505/2014033-20250510141054139-418463146.png" alt="指定内核" loading="lazy"></p>
<p>加上 ro 指的是内核只读。</p>
<p>再输入 boot 命令，然后你会发现系统并没有正常启动。</p>
<p>这是因为没有指定根目录的位置。</p>
<p>按 Ctrl+Alt+Delete 重启，然后同样进入命令行，输入 ls 查看磁盘分区。</p>
<p>然后 ls 后面加上磁盘分区，一个个试一试，直到找到如下的 linux 根目录。</p>
<p><img src="https://img2024.cnblogs.com/blog/2014033/202505/2014033-20250510141055309-190881195.png" alt="寻找根目录" loading="lazy"></p>
<p>现在我们就可以用命令行启动了。</p>
<p>输入类似下面的命令：</p>
<pre><code class="language-bash">linux /boot/vmlinuz-... ro text root=/dev/sda1
</code></pre>
<p>你的 root 后面跟着的东西可能不同，取决于你的硬盘和分区。你可以执行下面的命令找到分区标识：</p>
<pre><code class="language-bash">cat (hd2,gpt2)/etc/fstab
</code></pre>
<p>把 (hd2,gpt2) 换成你刚刚找到的 linux 主分区。输出应该类似下面：</p>
<p><img src="https://img2024.cnblogs.com/blog/2014033/202505/2014033-20250510141054327-136698979.png" alt="安装信息文件" loading="lazy"></p>
<p>这样找到了安装时的分区。然后你就可以推算了。sda 表示安装时使用的硬盘。后面数字表示分区编号。把 sda 后面的数字一个个试一试，直到找到正确的分区。</p>
<p>然后指定 initrd：</p>
<pre><code class="language-bash">initrd /boot/initrd.img-...
</code></pre>
<p>再输入 boot 启动系统。</p>
<p>出现下面这种就是分区错了，只启动了内核，重启换一个 root 分区：</p>
<p><img src="https://img2024.cnblogs.com/blog/2014033/202505/2014033-20250510141055928-1205524253.png" alt="错误示范" loading="lazy"></p>
<p>否则，就能直接进入系统。</p>
<h2 id="重新配置-grub">重新配置 Grub</h2>
<p>为了避免每次启动都要输入命令，在系统中有 <code>update-grub</code> 命令用于修复配置文件。</p>
<p>直接执行即可。可以看到它识别了 Linux 和 Windows 双系统，至此引导程序修复完毕。</p>
<p><img src="https://img2024.cnblogs.com/blog/2014033/202505/2014033-20250510141055702-1110938683.png" alt="重新配置 Grub" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/2014033/202505/2014033-20250510141055669-989094602.png" alt="Grub" loading="lazy"></p>

</div>
<div id="MySignature" role="contentinfo">
    <p>本文作者：<a href="https://www.cnblogs.com/samhou/" target="_blank">SamHou0</a>。原文链接：<a href="https://www.cnblogs.com/samhou/p/18869559/from-uefi-to-grub" target="_blank">https://www.cnblogs.com/samhou/p/18869559/from-uefi-to-grub</a></p>
<p>本文的所有发布平台：<a href="https://blog.samhou.top/about">About</a></p>
<p>本博客所有文章除特别声明外，均采用 CC BY-NC-ND 4.0 许可协议。转载请注明来源 SamHou's blog！</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.0059656011886574075" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-10 14:12">2025-05-10 14:11</span>&nbsp;
<a href="https://www.cnblogs.com/samhou">SamHou0</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18869559);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18869559', targetLink: 'https://www.cnblogs.com/samhou/p/18869559/from-uefi-to-grub', title: '从 UEFI 启动到双系统——记一次双系统 Linux 分区迁移' })">举报</a>
</div>
        