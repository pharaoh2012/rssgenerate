
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/qwqwQAQ/p/18831182" title="发布于 2025-04-17 16:49">
    <span role="heading" aria-level="2">WinDebug查看C#程序运行内存中的数据库连接字符串</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<blockquote>
<p>真巧，昨天刷到了大佬“一线码农”的视频，大概就是讲的有人找他破解一个混淆加密的数据库连接字符串，然后大佬也提供了方案就是用WinDebug查看内存中的数据。这其实本质上就是一个用WinDebug查看对象字符串字段具体内容的需求，为啥要取这个标题？当然是骗人点进来啦</p>
</blockquote>
<p></p><div class="toc"><div class="toc-container-header">目录</div><ul><li><a href="#准备工作环境" rel="noopener nofollow">准备工作（环境）</a></li><li><a href="#编写demo代码" rel="noopener nofollow">编写demo代码</a></li><li><a href="#程序启动后转储为dump文件" rel="noopener nofollow">程序启动后转储为dump文件</a></li><li><a href="#windebug分析dump文件" rel="noopener nofollow">WinDebug分析DUMP文件</a><ul><li><a href="#加载sos符号" rel="noopener nofollow">加载sos符号</a></li><li><a href="#寻找sqlconnection对象" rel="noopener nofollow">寻找SqlConnection对象</a></li><li><a href="#查看实例细节" rel="noopener nofollow">查看实例细节</a></li><li><a href="#查看连接字符串" rel="noopener nofollow">查看连接字符串</a></li></ul></li></ul></div><p></p>
<h4 id="准备工作环境">准备工作（环境）</h4>
<ul>
<li>.net 8</li>
<li>visual studio 2022</li>
<li>sql server (非必须)</li>
</ul>
<h4 id="编写demo代码">编写demo代码</h4>
<pre><code>SqlConnection sqlConnection = new SqlConnection();
sqlConnection.ConnectionString = "server=127.0.0.1;database=****;uid=sa;pwd=123456;Pooling=true;TrustServerCertificate=True;";
try
{
    sqlConnection.Open();
    SqlCommand command = sqlConnection.CreateCommand();
    command.Connection = sqlConnection;
    command.CommandText = "SELECT * FROM FAB_OHT";
    var reader = command.ExecuteReader();
    while (reader.Read())
    {
        Console.WriteLine(reader["OHT_ID"].ToString());
    }
}
finally
{
    sqlConnection.Close();
}

Console.Read();
</code></pre>
<h4 id="程序启动后转储为dump文件">程序启动后转储为dump文件</h4>
<p><img src="https://img2024.cnblogs.com/blog/1306612/202504/1306612-20250417162657472-1176477847.png" alt="image" loading="lazy"></p>
<h4 id="windebug分析dump文件">WinDebug分析DUMP文件</h4>
<p>在WinDebug中导入Dump文件</p>
<h5 id="加载sos符号">加载sos符号</h5>
<pre><code>.load C:\Users\bruce.qiu\.dotnet\sos\sos.dll
</code></pre>
<h5 id="寻找sqlconnection对象">寻找SqlConnection对象</h5>
<pre><code>!dumpheap -type Microsoft.Data.SqlClient.SqlConnection
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/1306612/202504/1306612-20250417163521356-1126404342.png" alt="image" loading="lazy"><br>
可以看到Microsoft.Data.SqlClient.SqlConnection的类型方法表对应的地址为 <strong>7ff995723580</strong> ，然后看到上面的类型只有一个对应的方法表是这个，可以断定这个类型实例就是代码中的SqlConnection实例。</p>
<h5 id="查看实例细节">查看实例细节</h5>
<p>实例的地址为 <strong>017ce380b030</strong></p>
<pre><code>!do 017ce380b030
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/1306612/202504/1306612-20250417163824585-2101602407.png" alt="image" loading="lazy"><br>
找到对象实例的连接字符的对象地址。</p>
<h5 id="查看连接字符串">查看连接字符串</h5>
<pre><code>!do 000001bd757e04c0
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/1306612/202504/1306612-20250417163936604-2140939719.png" alt="image" loading="lazy"><br>
可以看到字符串的基本结构，除了方法表和对象头之外，包含了字符串长度，首字符。<br>
可以看到字符串首字符的偏移为c，也就是0xC,大概就是该对象的第12位开始就是字符串的具体内容。</p>
<pre><code>.printf "%mu", 000001bd757e04c0+0xC
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/1306612/202504/1306612-20250417164301804-513062499.png" alt="image" loading="lazy"></p>
<p>这个命令就是从字符串的地址开始，取内容的偏移，<br>
后面的+0xC就是移动了相应的偏移，偏移则是图中的offset.<br>
至于为什么正好取到字符串长度而不越界，是因为调试器会根据字符串对象存储的长度来安全的截取长度。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.7493289167222222" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-17 17:01">2025-04-17 16:49</span>&nbsp;
<a href="https://www.cnblogs.com/qwqwQAQ">BruceNeter</a>&nbsp;
阅读(<span id="post_view_count">231</span>)&nbsp;
评论(<span id="post_comment_count">1</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18831182);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18831182', targetLink: 'https://www.cnblogs.com/qwqwQAQ/p/18831182', title: 'WinDebug查看C#程序运行内存中的数据库连接字符串' })">举报</a>
</div>
        