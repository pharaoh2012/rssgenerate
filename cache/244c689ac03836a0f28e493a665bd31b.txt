
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/somefuture/p/18873047" title="发布于 2025-05-12 17:53">
    <span role="heading" aria-level="2">GIM: 调用AI自动生成git提交消息的工具</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>GIM - Git Intelligence Message，是根据文件变更内容，自动请求用户配置的AI服务，生成提交消息的工具。</p>
<p>代码托管地址 <a href="https://github.com/davelet/git-intelligence-message" target="_blank" rel="noopener nofollow">https://github.com/davelet/git-intelligence-message</a> 。<br>
下面先说下用法，再说原理。</p>
<h1 id="用法">用法</h1>
<p>可以直接阅读Readme文档 <a href="https://github.com/davelet/git-intelligence-message/blob/main/README.md" target="_blank" rel="noopener nofollow">https://github.com/davelet/git-intelligence-message/blob/main/README.md</a> ，我觉得写的挺清楚了。或者看一下用法文档如下：</p>
<pre><code class="language-bash">gim -h
Usage: gim [OPTIONS] [COMMAND]

Commands:
  ai    Setup the ai-api configuration
  help  Print this message or the help of the given subcommand(s)

Options:
  -t, --title &lt;TITLE&gt;  The commit message title
  -a, --auto-add       Auto add the changes to the stage
  -p, --update         Ammend the last commit
  -v, --verbose        Show verbose output
  -h, --help           Print help
  -V, --version        Print version
</code></pre>
<p>这个项目使用的是clap库，所以这个文档是clap自动生成的。<br>
主要有这么几个参数：</p>
<ol>
<li>不指定参数：根据暂存区的变更生成message提交</li>
<li>指定-a：会先 <code>git add .</code>再生成消息提交</li>
<li>指定-t：这个没啥用我觉得，但是还是提供了这个功能，就是gim自动生成提交description，但是subject使用指定的。因为不指定subject的时候是根据description自动总结的，我觉得尽量用自动的都。</li>
<li>指定-p：这个是update的短命令，因为跟ai命令里的url冲突了，所以用了p。功能是启动--amend，也就是把变更合并进上一次提交，并且自动修改上一次提交的消息</li>
<li>指定-v：这个不是看版本，看版本用大写的。这个是查看工作流程的，会打印详细信息。一般没啥用，想玩就打开。</li>
</ol>
<p>一般情况下，我推荐使用<code>gim -a</code>。因为你修改代码后不用主动 <code>add</code>，当然如果用IDEA之类的工具它会帮你add，加了这个参数也不影响，或者干脆就<code>gim</code>就可以。另外就是 <code>gim -ap</code> 既能提交又能修改。</p>
<h1 id="原理">原理</h1>
<p>原理很简单，就是调用<code>git</code>命令看看有哪些变更，把变更发给AI，让AI给每一个文件生成一句总结；然后再根据这些变更总结生成一句汇总当作提交消息。</p>
<blockquote>
<p>这些过程和命令都可以通过 <code>-v</code> 查看到。</p>
</blockquote>
<p>所以使用之前需要先配置AI服务：</p>
<pre><code class="language-bash">gim ai -h
Setup the ai-api configuration

Usage: gim ai [OPTIONS]

Options:
  -m, --model &lt;MODEL&gt;        the ai model name
  -k, --apikey &lt;APIKEY&gt;      the ai api key
  -u, --url &lt;URL&gt;            the ai api url
  -l, --language &lt;LANGUAGE&gt;  the answer language
  -h, --help                 Print help
</code></pre>
<p>这一段也是clap自动生成的，我真谢谢你，节省了我很多时间，不然我还得去编写文档。<br>
主要有这些参数：</p>
<ol>
<li>-m指定模型名称</li>
<li>-k指定你自己的token</li>
<li>-u指定你要调用服务的地址，不指定就根据model名字猜测，很可能会猜不出来</li>
<li>-l指定回复的语言，不指定就是英语</li>
</ol>
<p>比如你可以执行</p>
<pre><code class="language-bash">gim ai -m deepseek-v3 -u https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions -k sk-&lt;你的token&gt;
</code></pre>
<p>来完成配置。</p>
<blockquote>
<p>根据我自己的经验，最好使用deepseek 或者 kimi。因为其他模型太强大了，老忽略我的提示词，生成的变更描述总是包含模型分析过程。当然如果你用付费模型算我没说</p>
</blockquote>
<h1 id="安装">安装</h1>
<p>前提要求是本地先安装了git工具。<br>
本来我是用<code>git2</code>这个库来开发的，这个库不依赖git工具，但是API太难了。后来我想反正GIM是git的补充工具，我也不开发其他命令支持，干脆就调用git命令吧。所以你要有git安装好。</p>
<p>现阶段你需要把项目克隆下来：</p>
<pre><code class="language-bash">git clone git@github.com:davelet/git-intelligence-message.git
cd git-intelligence-message
cargo install --path .
</code></pre>
<blockquote>
<p>完蛋了，需要安装rust还。</p>
</blockquote>
<p>安装好以后就可以在命令行使用<code>gim</code>命令了。</p>
<p>如果哪位大神能教我怎么发布到brew上面，我感激不尽！</p>
<blockquote>
<p>我猜的，发布到brew就不用安装rust了吧</p>
</blockquote>
<hr>
<h1 id="小演示">小演示</h1>
<p><img src="https://img2024.cnblogs.com/blog/2157887/202505/2157887-20250512175026722-2107625641.png" alt="image" loading="lazy"><br>
这是我本地的一次使用。<br>
你可以看到在 Commit message 那里AI生成了 “Based on” 这种话，所以我不得不再执行 <code>git commit --amend</code>把上下各删掉了3行。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.43314387709722224" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-12 17:54">2025-05-12 17:53</span>&nbsp;
<a href="https://www.cnblogs.com/somefuture">大卫小东（Sheldon）</a>&nbsp;
阅读(<span id="post_view_count">77</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18873047);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18873047', targetLink: 'https://www.cnblogs.com/somefuture/p/18873047', title: 'GIM: 调用AI自动生成git提交消息的工具' })">举报</a>
</div>
        