
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/vipstone/p/18952678" title="发布于 2025-06-27 17:09">
    <span role="heading" aria-level="2">速看！新版SpringAI的2个致命问题</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>无论是使用最新正式版的 Spring AI，还是最新正式版 Spring AI Alibaba，在实现自定义 MCP 服务器端和客户端的时候，一定要注意这两个问题，不然你会发现你的 MCP 服务器端能启动，但客户端就是连接不上，并且控制台也都是误报信息。</p>
<h2 id="注意事项一">注意事项一</h2>
<p>自定义 MCP 服务器端添加依赖时，<strong>如果是非标准 stdio 模式，当前项目一定要记得排除掉 spring-boot-starter-web 依赖</strong>：</p>
<pre><code class="language-xml">&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
&lt;/dependency&gt;
</code></pre>
<p>也就是说，<strong>你的 spring-ai-starter-mcp-server-webflux 依赖不能和 spring-boot-starter-web 依赖并存</strong>，以下是错误配置：</p>
<pre><code class="language-xml">&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.ai&lt;/groupId&gt;
    &lt;artifactId&gt;spring-ai-starter-mcp-server-webflux&lt;/artifactId&gt;
&lt;/dependency&gt;
</code></pre>
<p>因为当有 spring-boot-starter-web 依赖时会默认使用 tomcat 启动服务，这样项目虽然启动了，但 mcp service 服务并未启动，mcp service 服务是使用 netty 启动的，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202506/172074-20250627170930551-1846441933.png" alt="1" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/172074/202506/172074-20250627170936847-1753491522.png" alt="2" loading="lazy"></p>
<h2 id="注意事项二">注意事项二</h2>
<p>Spring AI 正式版之后，在使用客户端注册 MCP 工具时要使用 ToolCallbacks 而不是 Tools，如果在新版本中使用后者就会启动报错。</p>
<h3 id="错误用法">错误用法</h3>
<pre><code class="language-java">@Bean
public ChatClient chatClient(ChatModel chatModel, ToolCallbackProvider tools) {
    return ChatClient
            .builder(chatModel)
            .defaultTools(tools.getToolCallbacks())
            .build();
}
</code></pre>
<p>或者以下方式也是错误的：</p>
<pre><code class="language-java">@Bean
public ChatClient chatClient(ChatModel chatModel, ToolCallbackProvider tools) {
    return ChatClient
            .builder(chatModel)
            .defaultTools(tools)
            .build();
}
</code></pre>
<h3 id="正确用法">正确用法</h3>
<pre><code class="language-java">@Bean
public ChatClient chatClient(ChatModel chatModel, ToolCallbackProvider tools) {
    return ChatClient
            .builder(chatModel)
            .defaultToolCallbacks(tools.getToolCallbacks())
            .build();
}
</code></pre>
<h2 id="小结">小结</h2>
<p>在进行 Spring AI 或 Spring AI Alibaba 老项目升级时，或使用最新正式版框架时，一定要注意这两个问题，不然就会导致自定义的 MCP 服务能启动，但客户端就是连接不上的问题。</p>
<blockquote>
<p>本文已收录到我的技术小站 <a href="https://www.javacn.site" target="_blank" rel="noopener nofollow">www.javacn.site</a>，其中包含的内容有：Spring AI、LangChain4j、Dify、Spring AI Alibaba、智能体（AI Agent）、MCP、Function Call、RAG、向量数据库、Prompt、多模态、向量数据库、嵌入模型等内容。</p>
</blockquote>

</div>
<div id="MySignature" role="contentinfo">
    <div style="text-align: center; color: red">
关注下面二维码，订阅更多精彩内容。
<br>
<img style="margin-left: 0px" src="https://images.cnblogs.com/cnblogs_com/vipstone/848916/o_211225130402_gognzhonghao.jpg">
</div>

<div style="display: none">
    <img src="http://icdn.apigo.cn/gitchat/rabbitmq.png?imageView2/0/w/500/h/400">
</div>
<div style="margin-bottom: 50px; display: none">

<img title="微信打赏" src="http://icdn.apigo.cn/myinfo/wchat-pay.png" alt="微信打赏">
<br>

<div style="display: none">
<span style="display: block; position: absolute; height: 40px; top: 50%; margin-top: -20px">关注公众号（加好友）：</span>

<img style="margin-left: 144px" src="http://icdn.apigo.cn/gongzhonghao2.png?imageView2/0/w/120/h/120">
</div>
<p></p>

<div id="AllanboltSignature">
    <p style="border-top: #e0e0e0 1px dashed; border-right: #e0e0e0 1px dashed; border-bottom: #e0e0e0 1px dashed; border-left: #e0e0e0 1px dashed; padding-top: 10px; padding-right: 10px; padding-bottom: 10px; padding-left: 60px; background: url(&quot;https://images.cnblogs.com/cnblogs_com/lloydsheng/239039/o_copyright.gif&quot;) #e5f1f4 no-repeat 1% 50%; font-family: 微软雅黑; font-size: 11px" id="PSignature">
        <br> 作者：
        <a href="http://vipstone.cnblogs.com/" target="_blank">王磊的博客</a>
        <br> 出处：
        <a href="http://vipstone.cnblogs.com/" target="_blank">http://vipstone.cnblogs.com/</a>
        <br>
    </p>
</div></div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-06-27 17:10">2025-06-27 17:09</span>&nbsp;
<a href="https://www.cnblogs.com/vipstone">磊哥|www.javacn.site</a>&nbsp;
阅读(<span id="post_view_count">75</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18952678);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18952678', targetLink: 'https://www.cnblogs.com/vipstone/p/18952678', title: '速看！新版SpringAI的2个致命问题' })">举报</a>
</div>
        