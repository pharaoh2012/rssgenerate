
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/token-ai/p/18871951" title="发布于 2025-05-12 02:54">
    <span role="heading" aria-level="2">自建OpenDeepWiki并且白嫖500代金券</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p><img src="https://img2024.cnblogs.com/blog/3578564/202505/3578564-20250512025414719-921598241.png" alt="" loading="lazy"></p>
<p>相信很多人都对OpenDeepWiki很感兴趣。OpenDeepWiki提供了MCP实现，您可以部署属于自己公司的私有知识库，将仓库加入进去，通过MCP对指定的仓库实现内容检索并提供最佳指引。</p>
<h2 id="白嫖500代金券">白嫖500代金券</h2>
<ol>
<li>点击  注册链接 <a href="https://account.coreshub.cn/signup?invite=ZmpMQlZxYVU=" target="_blank" rel="noopener nofollow">https://account.coreshub.cn/signup?invite=ZmpMQlZxYVU=</a> 注册账号</li>
<li>完成企业账号实名认证（<strong>注意：只有企业账号才会赠送500代金券</strong>）</li>
<li>前往  API密钥管理页面 <a href="https://console.coreshub.cn/xb3/maas/global-keys/" target="_blank" rel="noopener nofollow">https://console.coreshub.cn/xb3/maas/global-keys/</a> 创建APIKey，用于后续部署</li>
</ol>
<h2 id="部署opendeepwiki">部署OpenDeepWiki</h2>
<h3 id="前期准备">前期准备</h3>
<ul>
<li>一台安装了Docker和Docker-Compose的服务器</li>
<li>刚才创建的API Key</li>
</ul>
<h3 id="部署步骤">部署步骤</h3>
<ol>
<li>创建<code>docker-compose.yml</code>文件，内容如下：</li>
</ol>
<pre><code class="language-yaml">services:
  koalawiki:
    image: crpi-j9ha7sxwhatgtvj4.cn-shenzhen.personal.cr.aliyuncs.com/koala-ai/koala-wiki
    environment:
      - KOALAWIKI_REPOSITORIES=/repositories
      - TASK_MAX_SIZE_PER_USER=5 # 每个用户AI处理文档生成的最大数量，遇到429限流时可调整为1
      - REPAIR_MERMAID=1 # 是否进行Mermaid修复，1修复，其余不修复
      - CHAT_MODEL=DeepSeek-V3 # 必须要支持function的模型
      - ANALYSIS_MODEL=DeepSeek-V3 # 分析模型，用于生成仓库目录结构，模型越强，生成的目录结构越好
      - CHAT_API_KEY=您的APIkey
      - ENDPOINT=https://openapi.coreshub.cn/v1
      - DB_TYPE=sqlite
      - DB_CONNECTION_STRING=Data Source=/data/KoalaWiki.db
      - EnableSmartFilter=true # 是否启用智能过滤，可能影响AI获取仓库文件目录的能力
    volumes:
      - ./repositories:/app/repositories
      - ./data:/data
      
  koalawiki-web:
    image: crpi-j9ha7sxwhatgtvj4.cn-shenzhen.personal.cr.aliyuncs.com/koala-ai/koala-wiki-web
    environment:
      - NEXT_PUBLIC_API_URL=http://koalawiki:8080 # 提供给server的地址
      
  nginx: # 将前端和后端代理到同一端口
    image: crpi-j9ha7sxwhatgtvj4.cn-shenzhen.personal.cr.aliyuncs.com/koala-ai/nginx:alpine
    ports:
      - 8090:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - koalawiki
      - koalawiki-web
</code></pre>
<ol start="2">
<li>
<p>创建nginx配置目录和配置文件：</p>
<pre><code class="language-bash">mkdir -p nginx
</code></pre>
</li>
<li>
<p>编辑<code>./nginx/nginx.conf</code>文件，内容如下：</p>
</li>
</ol>
<pre><code class="language-ini">server {
    listen 80;
    server_name localhost;

    # 日志配置
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # 代理所有 /api/ 请求到后端服务
    location /api/ {
        proxy_pass http://koalawiki:8080/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # 其他所有请求转发到前端服务
    location / {
        proxy_pass http://koalawiki-web:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}
</code></pre>
<ol start="4">
<li>启动服务：</li>
</ol>
<pre><code class="language-bash"># 拉取镜像
docker-compose pull

# 启动服务
docker-compose up -d
</code></pre>
<ol start="5">
<li>打开浏览器访问：<a href="http://localhost:8090" target="_blank" rel="noopener nofollow">http://localhost:8090</a>，即可看到OpenDeepWiki界面</li>
</ol>
<p><img src="https://img2024.cnblogs.com/blog/3578564/202505/3578564-20250512025406659-449702256.png" alt="" loading="lazy"></p>
<h2 id="将项目添加到opendeepwiki">将项目添加到OpenDeepWiki</h2>
<ol>
<li>点击"添加新仓库"按钮，填写仓库地址（支持私有仓库，可填写凭证）：</li>
</ol>
<p><img src="https://img2024.cnblogs.com/blog/3578564/202505/3578564-20250512025401745-1330416358.png" alt="" loading="lazy"></p>
<ol start="2">
<li>点击提交后，系统会开始处理仓库。刷新页面后可以看到仓库正在处理中，点击进入可查看详细进度：</li>
</ol>
<p><img src="https://img2024.cnblogs.com/blog/3578564/202505/3578564-20250512025357976-94530650.png" alt="" loading="lazy"></p>
<ol start="3">
<li>初始阶段可能会显示如下界面，这是因为AI正在初始化项目，需要稍作等待：</li>
</ol>
<p><img src="https://img2024.cnblogs.com/blog/3578564/202505/3578564-20250512025354092-1508626561.png" alt="" loading="lazy"></p>
<ol start="4">
<li>刷新UI后，当概览和目录结构生成成功，即可看到项目进度和相关信息：</li>
</ol>
<p><img src="https://img2024.cnblogs.com/blog/3578564/202505/3578564-20250512025348773-688418827.png" alt="" loading="lazy"></p>
<p>完成以上步骤后，您就拥有了一个功能完善的私有OpenDeepWiki，可以对您的代码仓库进行智能检索和问答了。</p>
<h2 id="开源地址">开源地址</h2>
<p>如果您对OpenDeepWiki感兴趣您可以加入我们</p>
<p>github:<a href="https://github.com/AIDotNet/OpenDeepWiki" target="_blank" rel="noopener nofollow">https://github.com/AIDotNet/OpenDeepWiki</a></p>
<p>gitee:<a href="https://gitee.com/AIDotNet/OpenDeepWiki" target="_blank" rel="noopener nofollow">https://gitee.com/AIDotNet/OpenDeepWiki</a></p>
<p>在线体验：<a href="https://opendeep.wiki/" target="_blank" rel="noopener nofollow">https://opendeep.wiki/</a></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.40029927103819446" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-12 02:57">2025-05-12 02:54</span>&nbsp;
<a href="https://www.cnblogs.com/token-ai">239573049</a>&nbsp;
阅读(<span id="post_view_count">32</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18871951);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18871951', targetLink: 'https://www.cnblogs.com/token-ai/p/18871951', title: '自建OpenDeepWiki并且白嫖500代金券' })">举报</a>
</div>
        