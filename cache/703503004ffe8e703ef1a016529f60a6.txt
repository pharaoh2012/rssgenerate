
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/kybs0/p/18624932" title="发布于 2024-12-23 20:07">
    <span role="heading" aria-level="2">.NET 阻止系统睡眠/息屏</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>本文介绍Windows系统设备下如何阻止系统睡眠/息屏，以及查看当前阻止睡眠/息屏的应用信息</p>
<h3>powercfg /requests查看活动列表</h3>
<p>在播放音乐时，我们会发现设置了系统电源管理-自动睡眠，计划不会生效，这个音频播放操作阻止了系统自动睡眠。但不会阻止息屏，所以Windows下一般屏幕关闭是不影响音频播放的</p>
<p>通过管理员CMD-powercfg /requests可以查看当前，应用程序和驱动程序电源请求相关列表：</p>
<p><img src="https://img2024.cnblogs.com/blog/685541/202412/685541-20241223172513181-995370587.png" alt="" loading="lazy"></p>
<p>这里看到是[DRIVER] Synaptics HD Audio，扬声器设备。</p>
<p>powercfg /requests详见&nbsp;<a href="https://learn.microsoft.com/zh-cn/windows-hardware/design/device-experiences/powercfg-command-line-options#option_requests" rel="noopener nofollow">Powercfg 命令行选项 | Microsoft Learn</a>，上面主要几个模式：</p>
<ul>
<li>DIDPLAY 屏幕显示</li>
<li>SYSTEM 系统睡眠/休眠。</li>
<li>AWAYMODE 离开模式</li>
</ul>
<p>阻止的可能有DRIVER、SERVICE，也可能是EXE。</p>
<p>比如服务使用阻止睡眠： [SERVICE] \Device\HarddiskVolume3\Program Files\Intel\Intel(R) Ready Mode Technology\IRMTService.exe，这是Intel提供的低功耗模式<a href="https://www.intel.com/content/www/us/en/architecture-and-technology/intel-ready-mode-technology.html" rel="noopener nofollow">Intel® Ready Mode 技术 （Intel® RMT）</a>，基于这个状态可以在有需要时快速唤醒PC</p>
<p>基于上面几个模式，我们可以解析是哪些应用或者服务在活动、阻止睡眠/息屏。</p>
<h3>.NET应用层阻止睡眠/息屏</h3>
<p>上面这些阻止操作一般是系统应用实现的。我们开发的应用，也有阻止用户节能操作的场景</p>
<p>比如应用升级，我们想保障升级一次性完成，自动睡眠则会延长整个升级流程、造成不必要的风险。</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 128, 1)"> 1</span>         [DllImport(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">kernel32.dll</span><span style="color: rgba(128, 0, 0, 1)">"</span>, CharSet = CharSet.Auto, SetLastError = <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">)]
</span><span style="color: rgba(0, 128, 128, 1)"> 2</span>         <span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">extern</span><span style="color: rgba(0, 0, 0, 1)"> EXECUTION_STATE SetThreadExecutionState(EXECUTION_STATE esFlags);
</span><span style="color: rgba(0, 128, 128, 1)"> 3</span>         <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
<span style="color: rgba(0, 128, 128, 1)"> 4</span>         <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 使应用程序能够通知系统它正在使用中，从而防止系统在应用程序运行时进入睡眠状态或关闭显示器。
</span><span style="color: rgba(0, 128, 128, 1)"> 5</span>         <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 通知应用之后的状态
</span><span style="color: rgba(0, 128, 128, 1)"> 6</span>         <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
<span style="color: rgba(0, 128, 128, 1)"> 7</span> <span style="color: rgba(0, 0, 0, 1)">        [FlagsAttribute]
</span><span style="color: rgba(0, 128, 128, 1)"> 8</span>         <span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">enum</span> EXECUTION_STATE : <span style="color: rgba(0, 0, 255, 1)">uint</span>
<span style="color: rgba(0, 128, 128, 1)"> 9</span> <span style="color: rgba(0, 0, 0, 1)">        {
</span><span style="color: rgba(0, 128, 128, 1)">10</span>             <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
<span style="color: rgba(0, 128, 128, 1)">11</span>             <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 通知系统正在设置的状态应保持有效，直到使用 ES_CONTINUOUS 的下一次调用和清除其他状态标志之一。
</span><span style="color: rgba(0, 128, 128, 1)">12</span>             <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
<span style="color: rgba(0, 128, 128, 1)">13</span>             ES_CONTINUOUS = <span style="color: rgba(128, 0, 128, 1)">0x80000000</span><span style="color: rgba(0, 0, 0, 1)">,
</span><span style="color: rgba(0, 128, 128, 1)">14</span>             <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
<span style="color: rgba(0, 128, 128, 1)">15</span>             <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 防止显示器关闭
</span><span style="color: rgba(0, 128, 128, 1)">16</span>             <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
<span style="color: rgba(0, 128, 128, 1)">17</span>             ES_DISPLAY_REQUIRED = <span style="color: rgba(128, 0, 128, 1)">0x00000002</span><span style="color: rgba(0, 0, 0, 1)">,
</span><span style="color: rgba(0, 128, 128, 1)">18</span>             <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
<span style="color: rgba(0, 128, 128, 1)">19</span>             <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 防止系统进入睡眠
</span><span style="color: rgba(0, 128, 128, 1)">20</span>             <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
<span style="color: rgba(0, 128, 128, 1)">21</span>             ES_SYSTEM_REQUIRED = <span style="color: rgba(128, 0, 128, 1)">0x00000001</span>
<span style="color: rgba(0, 128, 128, 1)">22</span>         }</pre>
</div>
<p>SetThreadExecutionState是WIN32 Winbase下的一个系统函数，给应用程序提供接口：通知系统它正在使用中，从而防止系统在应用程序运行时进入睡眠状态或关闭显示器。详见<a href="https://learn.microsoft.com/zh-cn/windows/win32/api/winbase/nf-winbase-setthreadexecutionstate" rel="noopener nofollow">SetThreadExecutionState 函数 (winbase.h) - Win32 apps | Microsoft Learn</a></p>
<p>上面还有一个ES_AWAYMODE_REQUIRED未列出来，使用并不多，只能由多媒体应用使用，用于睡眠时执行关键后台处理。</p>
<p>另外，函数执行有返回状态值。如果函数成功，则返回值为上一个线程执行状态。</p>
<div class="RichContent-inner">
<div class="css-376mun">调用此函数，实现阻止系统睡眠的操作：</div>
<div class="css-376mun">
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 128, 1)"> 1</span>     <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
<span style="color: rgba(0, 128, 128, 1)"> 2</span>     <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 阻止系统睡眠/息屏
</span><span style="color: rgba(0, 128, 128, 1)"> 3</span>     <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
<span style="color: rgba(0, 128, 128, 1)"> 4</span>     <span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span><span style="color: rgba(0, 0, 0, 1)"> EXECUTION_STATE PreventSleep()
</span><span style="color: rgba(0, 128, 128, 1)"> 5</span> <span style="color: rgba(0, 0, 0, 1)">    {
</span><span style="color: rgba(0, 128, 128, 1)"> 6</span>         <span style="color: rgba(0, 0, 255, 1)">return</span> SetThreadExecutionState(EXECUTION_STATE.ES_CONTINUOUS | EXECUTION_STATE.ES_SYSTEM_REQUIRED |<span style="color: rgba(0, 0, 0, 1)"> EXECUTION_STATE.ES_DISPLAY_REQUIRED);
</span><span style="color: rgba(0, 128, 128, 1)"> 7</span> <span style="color: rgba(0, 0, 0, 1)">    }
</span><span style="color: rgba(0, 128, 128, 1)"> 8</span> 
<span style="color: rgba(0, 128, 128, 1)"> 9</span>     <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
<span style="color: rgba(0, 128, 128, 1)">10</span>     <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 允许系统睡眠
</span><span style="color: rgba(0, 128, 128, 1)">11</span>     <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
<span style="color: rgba(0, 128, 128, 1)">12</span>     <span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span><span style="color: rgba(0, 0, 0, 1)"> EXECUTION_STATE AllowSleep()
</span><span style="color: rgba(0, 128, 128, 1)">13</span> <span style="color: rgba(0, 0, 0, 1)">    {
</span><span style="color: rgba(0, 128, 128, 1)">14</span>         <span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> SetThreadExecutionState(EXECUTION_STATE.ES_CONTINUOUS);
</span><span style="color: rgba(0, 128, 128, 1)">15</span>     }</pre>
</div>
<p>这里阻止了睡眠以及息屏的操作</p>
<h3>.NET快速查询活动状态</h3>
<p>上面是使用.NET在应用中阻止系统进行睡眠以及息屏。.NET还可以通过WIN32直接查询这些阻止请求的总状态，是否可执行睡眠、是否可执行息屏</p>
<p>CallNtPowerInformation 函数能即时的获取当前系统电源策略状态值，详见&nbsp;<a href="https://learn.microsoft.com/zh-cn/windows/win32/api/powerbase/nf-powerbase-callntpowerinformation" rel="noopener nofollow">CallNtPowerInformation 函数 (powerbase.h) - Win32 apps | Microsoft Learn</a>：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 128, 1)">1</span>         [DllImport(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Powrprof.dll</span><span style="color: rgba(128, 0, 0, 1)">"</span>, CharSet = CharSet.Auto, SetLastError = <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">)]
</span><span style="color: rgba(0, 128, 128, 1)">2</span>         <span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">extern</span> <span style="color: rgba(0, 0, 255, 1)">uint</span><span style="color: rgba(0, 0, 0, 1)"> CallNtPowerInformation(
</span><span style="color: rgba(0, 128, 128, 1)">3</span> <span style="color: rgba(0, 0, 0, 1)">            SystemInformationClass information,
</span><span style="color: rgba(0, 128, 128, 1)">4</span> <span style="color: rgba(0, 0, 0, 1)">            IntPtr inputBuffer,
</span><span style="color: rgba(0, 128, 128, 1)">5</span>             <span style="color: rgba(0, 0, 255, 1)">uint</span><span style="color: rgba(0, 0, 0, 1)"> inputBufferLength,
</span><span style="color: rgba(0, 128, 128, 1)">6</span> <span style="color: rgba(0, 0, 0, 1)">            IntPtr outputBuffer,
</span><span style="color: rgba(0, 128, 128, 1)">7</span>             <span style="color: rgba(0, 0, 255, 1)">uint</span><span style="color: rgba(0, 0, 0, 1)"> outputBufferLength
</span><span style="color: rgba(0, 128, 128, 1)">8</span>         );</pre>
</div>
<p>封装一下，获取系统执行状态：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 128, 1)"> 1</span>     <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
<span style="color: rgba(0, 128, 128, 1)"> 2</span>     <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 获取系统执行状态
</span><span style="color: rgba(0, 128, 128, 1)"> 3</span>     <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 0表示无，可正常睡眠、息屏
</span><span style="color: rgba(0, 128, 128, 1)"> 4</span>     <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 1表示阻止睡眠中，系统无法睡眠
</span><span style="color: rgba(0, 128, 128, 1)"> 5</span>     <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 2表示阻止息屏中，系统无法息屏
</span><span style="color: rgba(0, 128, 128, 1)"> 6</span>     <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 3表示阻止睡眠以及息屏中，系统无法睡眠、息屏
</span><span style="color: rgba(0, 128, 128, 1)"> 7</span>     <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
<span style="color: rgba(0, 128, 128, 1)"> 8</span>     <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;returns&gt;</span><span style="color: rgba(0, 128, 0, 1)">返回系统执行状态，如果查询失败，返回</span><span style="color: rgba(128, 128, 128, 1)">&lt;see cref="EXECUTION_STATE.ES_CONTINUOUS"/&gt;&lt;/returns&gt;</span>
<span style="color: rgba(0, 128, 128, 1)"> 9</span>     <span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span><span style="color: rgba(0, 0, 0, 1)"> EXECUTION_STATE GetSystemExecutionState()
</span><span style="color: rgba(0, 128, 128, 1)">10</span> <span style="color: rgba(0, 0, 0, 1)">    {
</span><span style="color: rgba(0, 128, 128, 1)">11</span>         IntPtr ptr = Marshal.AllocHGlobal(<span style="color: rgba(0, 0, 255, 1)">sizeof</span>(<span style="color: rgba(0, 0, 255, 1)">uint</span><span style="color: rgba(0, 0, 0, 1)">));
</span><span style="color: rgba(0, 128, 128, 1)">12</span>         <span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)"> (CallNtPowerInformation(SystemInformationClass.SystemExecutionState,
</span><span style="color: rgba(0, 128, 128, 1)">13</span>                 IntPtr.Zero, <span style="color: rgba(128, 0, 128, 1)">0</span>, ptr, <span style="color: rgba(0, 0, 255, 1)">sizeof</span>(<span style="color: rgba(0, 0, 255, 1)">uint</span>)) == <span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">)
</span><span style="color: rgba(0, 128, 128, 1)">14</span> <span style="color: rgba(0, 0, 0, 1)">        {
</span><span style="color: rgba(0, 128, 128, 1)">15</span>             <span style="color: rgba(0, 0, 255, 1)">var</span> objectState = Marshal.PtrToStructure(ptr, <span style="color: rgba(0, 0, 255, 1)">typeof</span>(<span style="color: rgba(0, 0, 255, 1)">uint</span><span style="color: rgba(0, 0, 0, 1)">));
</span><span style="color: rgba(0, 128, 128, 1)">16</span>             <span style="color: rgba(0, 0, 255, 1)">var</span> stringState = objectState?<span style="color: rgba(0, 0, 0, 1)">.ToString();
</span><span style="color: rgba(0, 128, 128, 1)">17</span>             <span style="color: rgba(0, 0, 255, 1)">if</span> (stringState != <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">0</span><span style="color: rgba(128, 0, 0, 1)">"</span> &amp;&amp; Enum.TryParse(stringState, <span style="color: rgba(0, 0, 255, 1)">out</span><span style="color: rgba(0, 0, 0, 1)"> EXECUTION_STATE state))
</span><span style="color: rgba(0, 128, 128, 1)">18</span> <span style="color: rgba(0, 0, 0, 1)">            {
</span><span style="color: rgba(0, 128, 128, 1)">19</span>                 <span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> state;
</span><span style="color: rgba(0, 128, 128, 1)">20</span> <span style="color: rgba(0, 0, 0, 1)">            }
</span><span style="color: rgba(0, 128, 128, 1)">21</span> <span style="color: rgba(0, 0, 0, 1)">        }
</span><span style="color: rgba(0, 128, 128, 1)">22</span>         <span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> EXECUTION_STATE.ES_CONTINUOUS;
</span><span style="color: rgba(0, 128, 128, 1)">23</span>     }</pre>
</div>
<p>所以获取这个状态，可用于那些即将执行睡眠/息屏的功能，在执行前可确认此操作能否正常执行，提升用户操作的准确性。</p>
<p>另，具体息屏操作以及可能的问题，可见之前的博客&nbsp;<a href="https://www.cnblogs.com/kybs0/p/17985128">C# 息屏操作出现闪屏 - 唐宋元明清2188 - 博客园</a>。</p>
<p>睡眠的简单实现：&nbsp;<span class="cnblogs_code">Application.SetSuspendState(PowerState.Suspend, <span style="color: rgba(0, 0, 255, 1)">true</span>, <span style="color: rgba(0, 0, 255, 1)">true</span>);</span>&nbsp;PowerState的另一个枚举Hibernate，则是休眠。比较简单就不详细说了</p>
<p>&nbsp;</p>
</div>
</div>
</div>
<div id="MySignature" role="contentinfo">
    <div>作者：<a href="http://www.cnblogs.com/kybs0/" target="_blank">唐宋元明清2188</a></div>
<div>出处：<a href="http://www.cnblogs.com/kybs0/" target="_blank">http://www.cnblogs.com/kybs0/</a></div>
<div>让学习成为习惯，假设明天就有重大机遇等着你，你准备好了么</div>
<div>本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须在文章页面给出原文连接，否则保留追究法律责任的权利。 </div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="3.0911945855590277" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2024-12-24 14:08">2024-12-23 20:07</span>&nbsp;
<a href="https://www.cnblogs.com/kybs0">唐宋元明清2188</a>&nbsp;
阅读(<span id="post_view_count">1257</span>)&nbsp;
评论(<span id="post_comment_count">3</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18624932" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18624932);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18624932', targetLink: 'https://www.cnblogs.com/kybs0/p/18624932', title: '.NET 阻止系统睡眠/息屏' })">举报</a>
</div>
        