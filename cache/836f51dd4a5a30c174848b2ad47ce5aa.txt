
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/flykai/p/19027992" title="发布于 2025-08-08 10:38">
    <span role="heading" aria-level="2">基于C#+avalonia ui实现的跨平台点胶机灌胶监控控制上位机软件</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h1><strong>背景</strong></h1>
<p align="left">设计目标为与外购设备协同作业，完成传感器灌胶操作。涉及到的部分包括，一次点胶，一次旋转固化，点催化剂，点灭火剂这些步骤，上位机控制部分实现比较简单，&nbsp;作为控制的中转核心，与各个控制执行器交互通信，实时监测各部分状态。</p>
<p align="left">主要实现&nbsp;读取控制执行器状态信号，向控制执行器下发程控电源控制配方方案。</p>
<p align="left">上位机实现电源控制，与执行器之间，PC作为主站，电源控制执行器作为从站，两者之间通过modbus进行通信，物理接口为RS485。</p>
<p align="left">可跨平台运行在Linux系统，支持打包为deb安装包安装</p>
<h1 align="left">界面</h1>
<p align="left">整体界面布局比较简单，主监控界面分为三部分，</p>
<p align="left">第一部分为控制部分，监控开始，结束，下发控制命令及配方设置</p>
<p align="left">第二部分是点胶步骤5个流程的实时监控状态</p>
<p align="left">第三部分是实时日志显示</p>
<p align="left">上位机部分实现了控制台命令下发，读取等原始数据监控，异常监控，支持实时日志及文本日志记录</p>
<p align="left">主界面：</p>
<p align="left"><img alt="1" loading="lazy" data-src="https://img2024.cnblogs.com/blog/551516/202508/551516-20250808102124404-1403923974.png" class="lazyload"></p>
<p>下发控制命令界面：</p>
<p><img alt="2" loading="lazy" data-src="https://img2024.cnblogs.com/blog/551516/202508/551516-20250808102206496-1697864685.png" class="lazyload"></p>
<p>配方详情及设置界面：</p>
<p><img alt="3" loading="lazy" data-src="https://img2024.cnblogs.com/blog/551516/202508/551516-20250808102232590-831658952.png" class="lazyload"></p>
<p><img alt="4" loading="lazy" data-src="https://img2024.cnblogs.com/blog/551516/202508/551516-20250808102301646-1649564162.png" class="lazyload"></p>
<p><img alt="5" loading="lazy" data-src="https://img2024.cnblogs.com/blog/551516/202508/551516-20250808102309658-1345956685.png" class="lazyload"></p>
<h1>整体技术方案：</h1>
<p>由于生产部门电脑统一采购的是基于ubuntu的Linux工控电脑，采用了跨平台的技术avalonia UI实现在Linux运行，可打包成deb安装包，用到了</p>
<p>跨平台界面方案：avalonia ui</p>
<p>依赖注入框架：Microsoft.Extensions.DependencyInjection</p>
<p>日志：Serilog，Serilog.Sinks.Console，Serilog.Sinks.File</p>
<p>配置系统：Microsoft.Extensions.Configuration&nbsp;、&nbsp;Microsoft.Extensions.Configuration.Json<a class="RichContent-EntityWord css-b7erz1" href="https://zhida.zhihu.com/search?content_id=244510719&amp;content_type=Article&amp;match_order=1&amp;q=Microsoft.Extensions.Configuration.Binder&amp;zhida_source=entity" target="_blank" data-za-not-track-link="true" data-paste-text="true" rel="noopener nofollow"><br></a></p>
<p>MVVM框架：CommunityToolkit.Mvvm</p>
<p>Modbus：System.IO.Ports，NModbus4.NetCore</p>
<h1>总结</h1>
<div class="ace-line" dir="auto" data-node="true"><span data-leaf="true">C# Avalonia UI 作为一款强大的跨平台 UI 框架，在技术层面展现出多方面显著优势，使其成为开发者构建跨平台应用的优质选择。<span data-string="true" data-enter="true" data-leaf="true">​</span></span></div>
<div class="ace-line" dir="auto" data-node="true"><span data-leaf="true">首先，<span data-leaf="true">卓越的跨平台覆盖能力<span data-leaf="true">是其核心优势之一。Avalonia UI 能够稳定运行于 Windows、macOS、Linux 等主流桌面操作系统，同时还支持 Android、iOS 等移动平台，甚至可以通过 WebAssembly 实现 Web 端部署，真正实现了 “一次开发，多端运行” 的目标，极大地降低了跨平台应用的开发和维护成本。<span data-string="true" data-enter="true" data-leaf="true">​</span></span></span></span></div>
<div class="ace-line" dir="auto" data-node="true"><span data-leaf="true">其次，在<span data-leaf="true">开发体验与兼容性<span data-leaf="true">方面表现突出。它与 WPF（Windows Presentation Foundation）有着高度相似的 API 设计和 XAML 语法，对于熟悉 WPF 的开发者而言，几乎可以无缝迁移到 Avalonia UI 的开发中，显著减少了学习成本。同时，它基于.NET 平台，完美支持 C# 等.NET 生态语言，开发者可以充分利用.NET 丰富的类库和工具链，提升开发效率。<span data-string="true" data-enter="true" data-leaf="true">​</span></span></span></span></div>
<div class="ace-line" dir="auto" data-node="true"><span data-leaf="true">再者，<span data-leaf="true">强大的自定义与灵活性<span data-leaf="true">为界面设计提供了广阔空间。Avalonia UI 采用了全新的渲染引擎，不依赖于特定平台的原生控件，而是通过自绘实现 UI 元素，这使得开发者能够轻松创建具有独特风格的界面，且在不同平台上保持一致的视觉效果。此外，其完善的样式系统和主题支持，让应用的外观定制变得简单高效。<span data-string="true" data-enter="true" data-leaf="true">​</span></span></span></span></div>
<div class="ace-line" dir="auto" data-node="true"><span data-leaf="true">另外，<span data-leaf="true">性能表现优异<span data-leaf="true">也是不容忽视的优势。凭借高效的渲染机制和对硬件加速的支持，Avalonia UI 能够确保应用在各种设备上都拥有流畅的运行体验，即使是复杂的界面交互也能保持良好的响应速度，满足用户对应用性能的高要求。<span data-string="true" data-enter="true" data-leaf="true">​</span></span></span></span></div>
<div class="ace-line" dir="auto" data-node="true"><span data-leaf="true">最后，<span data-leaf="true">活跃的社区与持续的发展<span data-leaf="true">为其提供了坚实的支撑。开源的特性吸引了众多开发者参与贡献，社区中不断涌现出丰富的第三方组件和解决方案，帮助开发者快速解决开发过程中遇到的问题。同时，开发团队持续迭代更新，不断优化框架性能、增加新功能，确保 Avalonia UI 能够紧跟技术发展趋势，适应不断变化的跨平台开发需求。</span></span></span></div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.015277777777777777" data-date-updated="2025-08-08 11:00">2025-08-08 10:38</span>&nbsp;
<a href="https://www.cnblogs.com/flykai">狼性法则</a>&nbsp;
阅读(<span id="post_view_count">279</span>)&nbsp;
评论(<span id="post_comment_count">2</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19027992);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19027992', targetLink: 'https://www.cnblogs.com/flykai/p/19027992', title: '基于C#+avalonia ui实现的跨平台点胶机灌胶监控控制上位机软件' })">举报</a>
</div>
        