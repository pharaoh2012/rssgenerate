
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ex1a/p/18651460" title="发布于 2025-01-04 09:24">
    <span role="heading" aria-level="2">windows11使用pycharm连接wsl2开发基于poetry的python项目</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="windows11使用pycharm连接wsl2开发基于poetry的python项目">windows11使用pycharm连接wsl2开发基于poetry的python项目</h1>
<p>背景：公司开发的python项目用到了某个只提供了Linux版本的包，遂研究了一番如何在windows环境下进行开发。</p>
<ol>
<li>windows安装 <a href="https://learn.microsoft.com/zh-cn/windows/wsl/about" title="wsl2" target="_blank" rel="noopener nofollow">wsl2</a></li>
<li>进入到wsl2中，安装对应的python版本，建议使用pyenv，下面以3.10.14版本为例子。 pyenv安装方法可以参考<a href="https://zhuanlan.zhihu.com/p/659779486" title="这里" target="_blank" rel="noopener nofollow">这里</a></li>
</ol>
<ul>
<li>安装python之前确认安装好下面的库，不然安装完会缺失部分python基础库：</li>
</ul>
<pre><code>sudo apt-get update
sudo apt-get install -y make build-essential libssl-dev zlib1g-dev \
libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \
libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev

# 如果不幸已经安装了缺少库的python，可以根据下面的命令重新安装
pyenv uninstall -f 3.10.14
# 再次安装正确的版本，记得先运行上面的类库安装
pyenv install 3.10.14
</code></pre>
<ol start="3">
<li>安装Pycharm Professional (只有专业版自带wsl连接)，下面提供两种方式运行项目。</li>
</ol>
<ul>
<li>
<p>Pycharm提供了远程开发模式，ide界面跑在本地，代码运行在远程，可以直接连接到本机的wsl，目前是bate功能，启动起来比较麻烦，好处是可以直接配置wsl上面的poetry。</p>
<p>ps. 经过实践这种方式很耗资源，能直接把内存跑炸了 😃</p>
</li>
</ul>
<hr>
<ul>
<li>Pycharm还是跑在本地，指定解释器为wsl里面的python解释器，但是pycharm没有提供使用wsl里面的poetry的选择，需要一点手动操作，方法<a href="https://qiita.com/Chroma7p/items/787117f06918fec0887d" title="来自" target="_blank" rel="noopener nofollow">来自</a>：</li>
</ul>
<pre><code># 进入项目所在目录，设置本地目录要用到的python版本  
pyenv local 3.10.14 

# 安装项目依赖
poetry install

# 查看目录解释器所在位置，设置pycharm项目解释器时要用到
# 输出例子：/home/tiger_linux/.cache/pypoetry/virtualenvs/serviceme-JDx4R2Ou-py3.10
poetry env info -p


# 如果项目已经创建了一个基于旧版本 Python 的虚拟环境，建议删除旧环境并创建一个新的：
# 列出所有虚拟环境
poetry env list
# 删除指定的虚拟环境（替换 &lt;env_name&gt; 为实际环境名称）
poetry env remove &lt;env_name&gt;
poetry env use $(pyenv which python)
poetry install

</code></pre>
<p>用pycharm正常打开项目，进入项目设置：<br>
<img src="https://img2024.cnblogs.com/blog/1586975/202501/1586975-20250104092009524-1933012499.png" alt="image" loading="lazy"></p>
<p>点进去之后，选择【Virtualenv 环境】并根据上面提到的【poetry env info -p】命令获取到的解释器目录找到解释器，点击【确定】，设置完就大功告成。<br>
<img src="https://img2024.cnblogs.com/blog/1586975/202501/1586975-20250104092056888-1551415145.png" alt="image" loading="lazy"></p>
<p>ps. 上述设置完毕正常来说已经可以正常调试启动项目，可能会有部分包的问题，逐个排查即可， good luck 😃</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.286375209" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-04 09:25">2025-01-04 09:24</span>&nbsp;
<a href="https://www.cnblogs.com/ex1a">t1gerHe</a>&nbsp;
阅读(<span id="post_view_count">13</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18651460" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18651460);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18651460', targetLink: 'https://www.cnblogs.com/ex1a/p/18651460', title: 'windows11使用pycharm连接wsl2开发基于poetry的python项目' })">举报</a>
</div>
        