
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/huazzi/p/18643802" title="发布于 2024-12-31 13:36">
    <span role="heading" aria-level="2">『AutoHotkey』——一个小巧却高效的实用效率工具</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<blockquote>
<p>[!note]</p>
<p>本来主要是想找一下「」和『』，然后便找到了以下方法，可以实现输出大部分的特殊字符</p>
</blockquote>
<h2 id="通过输入法输出">通过输入法输出</h2>
<ol>
<li>
<p>『Ctr + shift + Z』进入搜狗输入法的『符号大全』</p>
</li>
<li>
<p>在『标点符号』项可以找到「」和『』</p>
</li>
</ol>
<hr>
<h2 id="使用autohotkey自定义替换">使用<a href="https://www.autohotkey.com/" target="_blank" rel="noopener nofollow">AutoHotkey</a>自定义替换</h2>
<blockquote>
<p>[!note]</p>
<p>每次想要用到这两个符号的时候都要进入输入法的『符号大全』里面找的话，操作还是没那么方便，所以就想着找到别的更高效的方法，于是就查到了可以使用『<a href="https://www.autohotkey.com/" target="_blank" rel="noopener nofollow">AutoHotkey</a>』这个工具进行自定义一些热键。</p>
</blockquote>
<h3 id="autohotkey-简介"><strong>AutoHotkey 简介</strong></h3>
<p><strong>AutoHotkey (AHK)</strong> 是一个功能强大的开源脚本语言和自动化工具，主要用于 Windows 操作系统。它通过简洁的语法和强大的功能，使用户能够快速定义快捷键、宏、文本替换规则，甚至开发功能复杂的应用程序。</p>
<hr>
<h3 id="主要特点"><strong>主要特点</strong></h3>
<ol>
<li><strong>快捷键绑定</strong>：
<ul>
<li>定义自定义快捷键，如组合键（<code>Ctrl+Alt+T</code>）、鼠标按键，甚至设备专用键。</li>
<li>适用于提高工作效率，如快速启动程序、操作窗口等。</li>
</ul>
</li>
<li><strong>文本替换</strong>：
<ul>
<li>设置特定的输入触发特定的输出，例如将 <code>btw</code> 自动替换为 <code>by the way</code>。</li>
</ul>
</li>
<li><strong>脚本自动化</strong>：
<ul>
<li>模拟鼠标点击、键盘输入等操作，自动完成繁琐重复的任务。</li>
</ul>
</li>
<li><strong>窗口管理</strong>：
<ul>
<li>自动调整窗口大小、位置，切换窗口，隐藏窗口等。</li>
</ul>
</li>
<li><strong>硬件扩展支持</strong>：
<ul>
<li>自定义处理特殊硬件设备（如自定义游戏键盘和鼠标按键的功能）。</li>
</ul>
</li>
<li><strong>轻量级与开源</strong>：
<ul>
<li>脚本体积小巧，运行效率高，完全免费，拥有活跃的社区支持。</li>
</ul>
</li>
</ol>
<hr>
<h3 id="常见用途"><strong>常见用途</strong></h3>
<ol>
<li><strong>文本和脚本自动化</strong>：
<ul>
<li>录入经常使用的短语。</li>
<li>快速批量修改文件名。</li>
</ul>
</li>
<li><strong>提高工作效率</strong>：
<ul>
<li>快捷打开文件、文件夹或网站。</li>
<li>一键填写表单。</li>
</ul>
</li>
<li><strong>游戏辅助</strong>：
<ul>
<li>编写简单的辅助脚本，如自动点击、宏操作等。</li>
</ul>
</li>
<li><strong>窗口管理</strong>：
<ul>
<li>在多显示器之间快速移动窗口。</li>
<li>根据需求排列窗口位置和大小。</li>
</ul>
</li>
<li><strong>开发工具</strong>：
<ul>
<li>定制化工具和简单程序，如定时器、弹窗工具。</li>
</ul>
</li>
</ol>
<hr>
<h3 id="基本语法"><strong>基本语法</strong></h3>
<p>AutoHotkey 的语法简单易学。以下是一些基本示例：</p>
<ol>
<li>
<p><strong>快捷键绑定</strong></p>
<pre><code class="language-ahk">^j::Send, Hello, AutoHotkey!
</code></pre>
<p><strong>解释</strong>：</p>
<ul>
<li><code>^</code> 表示 <code>Ctrl</code> 键，<code>^j</code> 表示 <code>Ctrl+J</code>。</li>
<li>按下 <code>Ctrl+J</code> 时，发送文本 <code>Hello, AutoHotkey!</code>。</li>
</ul>
</li>
<li>
<p><strong>文本替换</strong></p>
<pre><code class="language-ahk">::btw::by the way
</code></pre>
<p><strong>解释</strong>：</p>
<ul>
<li>输入 <code>btw</code> 后按空格，自动替换为 <code>by the way</code>。</li>
</ul>
</li>
<li>
<p><strong>自动化任务</strong></p>
<pre><code class="language-ahk">F1::
    Run, notepad.exe
    Sleep, 1000
    Send, This is an automated script.{Enter}
Return
</code></pre>
<p><strong>解释</strong>：</p>
<ul>
<li>按 <code>F1</code> 键时，打开记事本，等待 1 秒后输入一行文本。</li>
</ul>
</li>
<li>
<p><strong>窗口管理</strong></p>
<pre><code class="language-ahk">#z::WinMaximize, A
</code></pre>
<p><strong>解释</strong>：</p>
<ul>
<li><code>#</code> 表示 <code>Win</code> 键，<code>#z</code> 表示 <code>Win+Z</code>。</li>
<li>按下组合键时，最大化当前活动窗口。</li>
</ul>
</li>
</ol>
<hr>
<h3 id="安装与使用"><strong>安装与使用</strong></h3>
<ol>
<li>
<p><strong>下载</strong>： 从 <a href="https://www.autohotkey.com/" target="_blank" rel="noopener nofollow">AutoHotkey 官方网站</a> 下载并安装。</p>
</li>
<li>
<p><strong>创建脚本</strong>：</p>
</li>
</ol>
<p><img src="https://img2024.cnblogs.com/blog/3582592/202412/3582592-20241231112006886-1551609999.png" alt="" loading="lazy"></p>
<ul>
<li>
<p>新建一个 <code>.ahk</code> 文件（如 <code>MyScript.ahk</code>）。</p>
</li>
<li>
<p>使用记事本或任意代码编辑器打开，编写脚本内容。</p>
</li>
<li>
<p>示例：<code>|-</code>替换为 <code>「</code>，<code>-|</code> 替换为 <code>」</code></p>
<pre><code class="language-bash">#Requires AutoHotkey v2.0

::|-::「
::-|::」
</code></pre>
</li>
</ul>
<ol start="3">
<li>
<p><strong>运行脚本</strong>：</p>
<ul>
<li>
<p>双击 <code>.ahk</code> 文件即可运行脚本。</p>
</li>
<li>
<p>使用托盘图标可以进行暂停、退出脚本或重新加载操作。</p>
<blockquote>
<p>[!tip]</p>
<p>不知道啥是「托盘图标」？看下面指示</p>
<p><img src="https://img2024.cnblogs.com/blog/3582592/202412/3582592-20241231112045432-1029947627.png" alt="" loading="lazy"></p>
<p>找到对应的「图标」，点击鼠标右键就会出现「操作选项」了。</p>
</blockquote>
</li>
</ul>
</li>
<li>
<p><strong>编译为可执行文件</strong>：</p>
<ul>
<li>进入AutoHotKey，选择「Complie」进行编译 <code>.ahk</code> 文件</li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/3582592/202412/3582592-20241231112108890-970955249.png" alt="" loading="lazy"></p>
<ul>
<li>选择之前写好的<strong>脚本</strong>，生成 <code>.exe</code> 文件以「独立运行」即之后的每次运行不再需要AutoHotKey，方便设置「<a href="#id1" rel="noopener nofollow">开机自启动</a>」。</li>
</ul>
</li>
</ol>
<p><img src="https://img2024.cnblogs.com/blog/3582592/202412/3582592-20241231112239506-1794861362.png" alt="" loading="lazy"></p>
<h3 id="设置脚本开机自启动">设置脚本开机自启动</h3>
<blockquote>
<p>[!tip]</p>
<p>为了使脚本每次开机之后都自动生效，不需要再手动开启，可以直接设置「开机自启动」，只需要将上面编辑好的.exe可执行文件放到「startup」目录下。</p>
</blockquote>
<ol>
<li>
<p>快速进入「startup」目录：点击Ctr+R快捷键，输入<code>shell:startup</code>，回车进入</p>
<p><img src="https://img2024.cnblogs.com/blog/3582592/202412/3582592-20241231112344820-1553377945.png" alt="" loading="lazy"></p>
<blockquote>
<p>当然也可以通过「资源管理器」一步步进入目录</p>
</blockquote>
</li>
<li>
<p>将.exe文件复制到该目录下，即可<br>
<img src="https://img2024.cnblogs.com/blog/3582592/202412/3582592-20241231112401699-869800636.png" alt="" loading="lazy"></p>
</li>
</ol>
<hr>
<h3 id="优势与局限">优势与局限</h3>
<h4 id="优势">优势</h4>
<ul>
<li><strong>易学易用</strong>：简单语法，适合快速上手。</li>
<li><strong>功能丰富</strong>：从快捷键到窗口管理，几乎覆盖所有桌面操作需求。</li>
<li><strong>社区支持</strong>：拥有丰富的教程和脚本资源。</li>
</ul>
<h4 id="局限">局限</h4>
<ul>
<li><strong>仅限 Windows 平台</strong>：无法在 macOS(可使用<a href="https://textexpander.com/" target="_blank" rel="noopener nofollow">textexpander</a>) 或 Linux 上使用。</li>
<li><strong>高级功能需要学习</strong>：复杂脚本的编写可能需要掌握更深入的编程知识。</li>
<li><strong>与防作弊软件冲突</strong>：用于游戏时，可能被误判为作弊工具。</li>
</ul>
<hr>
<h3 id="学习资源">学习资源</h3>
<ol>
<li>官方文档：
<ul>
<li><a href="https://www.autohotkey.com/docs/" target="_blank" rel="noopener nofollow">AutoHotkey 官方文档</a></li>
</ul>
</li>
<li>社区论坛：
<ul>
<li><a href="https://www.autohotkey.com/boards/" target="_blank" rel="noopener nofollow">AutoHotkey 社区</a></li>
</ul>
</li>
<li>教程网站：
<ul>
<li><a href="https://autohotkey.com/docs/Tutorial.htm" target="_blank" rel="noopener nofollow">AHK教程合集</a></li>
</ul>
</li>
</ol>
<hr>
<h3 id="autohotkey介绍总结">AutoHotKey介绍总结</h3>
<p>AutoHotkey 是一款小巧但功能强大的工具，适合想要提升工作效率、自动化任务或定制系统功能的用户。<br>
<br></p>
<hr>
<h2 id="实现自定义输出特殊字符">实现自定义输出特殊字符</h2>
<p>在简单了解之后，AutoHotKey的功能完全可以实现我的需求，于是便开始根据自己目前的需要，自定义输出特殊字符。</p>
<ol>
<li>
<p>明确替换规则</p>
<p><code>|-</code>替换成<code>「</code></p>
<p><code>-|</code>替换成<code>」</code></p>
<p><code>|=</code>替换成<code>『</code></p>
<p><code>=|</code>替换成<code>』</code></p>
</li>
<li>
<p>编写脚本</p>
<pre><code class="language-ahk">#Requires AutoHotkey v2.0

:*:|-::「
:*:-|::」
:*:|=::『
:*:=|::』
</code></pre>
<blockquote>
<p>[!important]</p>
<p><strong>与一般AutoHotKey的「文本替换」脚本的小小改进：</strong></p>
<p>关键的修改是在每个替换规则前添加 <code>:*:</code>，这个星号的作用是告诉 AutoHotkey 在检测到触发文本时立即执行替换，而不需要等待终止符（比如空格）。</p>
<p>这样做可以避免每次都要多输出一个「空格」才能进行替换。</p>
</blockquote>
<ol start="3">
<li>
<p>编译成.exe</p>
<blockquote>
<p>如前面所述</p>
</blockquote>
</li>
<li>
<p>设置开机自启动</p>
<blockquote>
<p>如前面所述</p>
</blockquote>
</li>
</ol>
</li>
</ol>
<hr>
<blockquote>
<p>[!important]</p>
<p><code>「」</code>和<code>『』</code>一般都是成对出现的，所以可以进一步优化脚本：</p>
<ol>
<li>
<p>将‘|-’替换成‘「」’，并使得替换之后，光标停留在‘「’和‘」’之间，方便输入内容；</p>
</li>
<li>
<p>将‘|=’替换成‘『』’，并使得替换之后，光标停留在‘『’和‘』’之间，方便输入内容。</p>
</li>
</ol>
</blockquote>
<p>改进之后的脚本：</p>
<pre><code class="language-ahk">#Requires AutoHotkey v2.0

:*:|-::
{
    SendInput "「」"
    SendInput "{Left}"  ; 移动光标到括号中间
}

:*:|=::
{
    SendInput "『』"
    SendInput "{Left}"  ; 移动光标到括号中间
}

; 保留单独的右括号输入
:*:-|::」
:*:=|::』
</code></pre>
<p>这个新版本脚本可以：</p>
<ol>
<li>输入 <code>|-</code> 时，自动输入一对 <code>「」</code> 并将光标置于中间</li>
<li>输入 <code>|=</code> 时，自动输入一对 <code>『』</code> 并将光标置于中间</li>
<li>仍然保留了单独输入右括号的功能（使用 <code>-|</code> 和 <code>=|</code>）</li>
</ol>
<p>使用效果：</p>
<ul>
<li>输入 <code>|-</code> → 得到 <code>「|」</code>（|表示光标位置）</li>
<li>输入 <code>|=</code> → 得到 <code>『|』</code>（|表示光标位置）</li>
<li>输入 <code>-|</code> → 得到 <code>」</code></li>
<li>输入 <code>=|</code> → 得到 <code>』</code></li>
</ul>
<hr>
<p>当然，我这么用似乎有点大材小用了，AutoHotKey的强大功能可以实现更多功能，帮助提高效率，更多有趣用法等待被探索。</p>
<p>附：「<a href="https://www.cnblogs.com/huazzi/p/18643806" target="_blank">AutoHotkey 效率提升脚本集</a>」</p>
<p><strong>小感慨</strong></p>
<p>没想到会因为先前的一个「特殊字符输出」问题，而最后学到了使用「AutoHotKey」这个工具，感觉很有收获。<em>似乎是对现状的不满足，推动自己去探索，去思考，最后有所收获。</em></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.028080625296296298" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2024-12-31 17:35">2024-12-31 13:36</span>&nbsp;
<a href="https://www.cnblogs.com/huazzi">_Huazzi</a>&nbsp;
阅读(<span id="post_view_count">261</span>)&nbsp;
评论(<span id="post_comment_count">2</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18643802" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18643802);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18643802', targetLink: 'https://www.cnblogs.com/huazzi/p/18643802', title: '『AutoHotkey』——一个小巧却高效的实用效率工具' })">举报</a>
</div>
        