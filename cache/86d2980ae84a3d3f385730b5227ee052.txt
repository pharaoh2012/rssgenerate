
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/hnzhengfy/p/18925817/element_select_all" title="发布于 2025-06-12 20:25">
    <span role="heading" aria-level="2">Select 组件实现【全选】（基于 Element）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        在 Element 中，Select 组件支持单选和多选，但是并没有全选的属性，因此只能通过其事件和属性来实现，本文将实现一个简单的示例。
    </div>
<div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h2>〇、前言</h2>
<p>在 Element 中，Select 组件支持单选和多选，但是并没有全选的属性，因此只能通过其事件和属性来实现，本文将实现一个简单的示例。</p>
<p><span style="font-size: 12px"><em>注意：本文的示例中，通过 <strong>leixing1 </strong>来兼容多控件共享同一方法。</em></span></p>
<h2>一、两种实现</h2>
<h3>1.1 通过添加一个 Checkbox 来操作全选（推荐）</h3>
<ul>
<li><strong>大致思路</strong></li>
</ul>
<p>在全部选项最上边添加一个 Checkbox 复选框，勾选时自动全选，取消勾选自动取消全部已选中项。</p>
<p>再给 Select 添加一个 Change 事件方法，当选中项等于备选列表长度，则自动勾选 Checkbox，否则取消勾选。</p>
<ul>
<li><strong>实现效果</strong></li>
</ul>
<p>&nbsp;<img src="https://img2024.cnblogs.com/blog/1868241/202506/1868241-20250612191724464-660840857.gif" alt="" height="216" width="692"></p>
<ul>
<li><strong>前端实现代码</strong></li>
</ul>
<pre class="language-html highlighter-hljs"><code>&lt;el-select 
  class="select-item uniform-width"
  v-model="formData.leixing1"
  filterable multiple 
  clearable @change="changeSelect($event,'leixing1')"
  placeholder="全部类型（多选）"
&gt;
  &lt;el-checkbox :indeterminate="isIndeterminate_lx" v-model="checked" @change="selectAll('leixing1')" style="padding:5px 0 10px 20px;"&gt;全选&lt;/el-checkbox&gt;
  &lt;el-option
    v-for="item in leixing1OptionsList"
    :label="item.mingcheng"
    :value="item.bianma"
    :key="item.bianma"
  /&gt;
&lt;/el-select&gt;</code></pre>
<ul>
<li><strong>js 代码实现</strong></li>
</ul>
<pre class="language-javascript highlighter-hljs"><code>&lt;script&gt;
export default {
  name: "Example",
  data() {
    return {
      isIndeterminate:false,
      isIndeterminate_lx1:false,
      isIndeterminate_lx2:false,
      checked:false,
      checked_lx1:false,
      checked_lx2:false,
      formData:[],
      leixing1OptionsList:[
        {mingcheng:"第1项",bianma:"1"},
        {mingcheng:"第2项",bianma:"2"},
        {mingcheng:"第3项",bianma:"3"},
      ],
      leixing2OptionsList:[],
    };
  },
  methods: {
    changeSelect(val,leixing) {
      let list=[]
      let value=""
      switch (leixing){ // 根据不同的组件对取值进行区分
        case "leixing1":
          list=this.leixing1OptionsList
          this.checked=this.checked_lx1
          break
        case "leixing2":
          list=this.leixing2OptionsList
          this.checked=this.checked_lx2
          break
      }
      if (this.formData[leixing].length==list.length) { // 全选
        this.checked=true
        this.isIndeterminate=false
      } else if (this.formData[leixing].length!=list.length &amp;&amp; this.formData[leixing].length&gt;0) {
        this.checked=false
        this.isIndeterminate=true
      }else if(this.formData[leixing].length==0){
        this.isIndeterminate=false
      }
      switch (leixing){
        case "leixing1":
          this.checked_lx1=this.checked
          this.isIndeterminate_lx1=this.isIndeterminate
          break
        case "leixing2":
          this.checked_lx2=this.checked
          this.isIndeterminate_lx2=this.isIndeterminate
          break
      }
    },
    selectAll(leixing) {
      let list=[]
      let value=""
      switch (leixing){ // 根据不同的组件对取值进行区分
        case "leixing1":
          list=this.leixing1OptionsList
          this.checked=this.checked_lx1
          this.isIndeterminate_lx1=false
          value="bianma"  // 具体的取值属性配置
          break
        case "leixing2":
          list=this.leixing2OptionsList
          this.checked=this.checked_lx2
          this.isIndeterminate_lx2=false
          value="key"  // 具体的取值属性配置
          break
      }
      if (this.checked) { // 全选
        list.map((item) =&gt; {
          this.formData[leixing].push(item[value])
        })
      } else { // 取消全选
        this.formData[leixing] = [];
      }
    },
  },
};
&lt;/script&gt;</code></pre>
<h3>1.2 通过增加一个 Option 选项‘全选’来实现</h3>
<ul>
<li><strong>大致思路</strong></li>
</ul>
<p>手动增加 Select 的第一个选项‘全选’，通过这个选项的事件，来操作是否全选。</p>
<p>再通过列表的长度和已选中的选项进行比较，相等就自动勾选‘全选’，否则就取消勾选。</p>
<p><strong><span style="font-size: 12px"><em>注意：Select 组件的值会包含‘全选’这个值，需要在后端进行过滤。</em></span></strong></p>
<ul>
<li><strong>实现效果</strong></li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/1868241/202506/1868241-20250612174800071-1473063053.gif" alt="" height="222" width="708"></p>
<ul>
<li><strong>前端控件代码</strong></li>
</ul>
<pre class="language-html highlighter-hljs"><code>&lt;el-select 
  class="select-item uniform-width"
  v-model="formData.leixing1"
  filterable multiple 
  clearable @change="changeSelect($event,'leixing1')"
  placeholder="全部类型（多选）"
&gt;
  &lt;el-option label='全选' value='全选' @click.native="selectAll('leixing1')" v-if="leixing1OptionsList.length"&gt;&lt;/el-option&gt;
  &lt;el-option
    v-for="item in leixing1OptionsList"
    :label="item.mingcheng"
    :value="item.bianma"
    :key="item.bianma"
  /&gt;
&lt;/el-select&gt;</code></pre>
<ul>
<li><strong>js 代码实现及解释</strong></li>
</ul>
<pre class="language-javascript highlighter-hljs"><code>&lt;script&gt;
export default {
  name: "Example",
  data() {
    return {
      formData:[],
      leixing1OptionsList:[
        {mingcheng:"第1项",bianma:"1"},
        {mingcheng:"第2项",bianma:"2"},
        {mingcheng:"第3项",bianma:"3"},
      ],
      leixing2OptionsList:[],
    };
  },
  methods: {
    changeSelect(val,leixing) {
      let list=[]
      let value=""
      switch (leixing){ // 根据不同的组件对取值进行区分
        case "leixing1":
          list=this.leixing1OptionsList
          break
        case "leixing2":
          list=this.leixing2OptionsList
          break
      }
      if (!val.includes('全选') &amp;&amp; val.length === list.length) { // 手动选择全部选项后，自动选中‘全选’
        this.formData[leixing].unshift('全选')
      } else if (val.includes('全选') &amp;&amp; (val.length - 1) &lt; list.length) { // 取消选中任一项，同时取消‘全选’
        this.formData[leixing] = this.formData[leixing].filter((item) =&gt; { return item !== '全选'})
      }
    },
    selectAll(leixing) {
      let list=[]
      let value=""
      switch (leixing){ // 根据不同的组件对取值进行区分
        case "leixing1":
          list=this.leixing1OptionsList
          value="bianma"  // 具体的取值属性配置
          break
        case "leixing2":
          list=this.leixing2OptionsList
          value="key"  // 具体的取值属性配置
          break
      }
      if (this.formData[leixing]!=undefined &amp;&amp; this.formData[leixing].length &lt; list.length) { // 全选
        this.formData[leixing] = ['全选'] // 默认选中‘全选’这一项
        list.map((item) =&gt; { // 将全部选项加入值列表
          this.formData[leixing].push(item[value])
        })
      } else { // 取消全选
        this.formData[leixing] = [];
      }
    },
  },
};
&lt;/script&gt;</code></pre>
</div>
<div id="MySignature" role="contentinfo">
    <img src="https://images.cnblogs.com/cnblogs_com/blogs/683398/galleries/2417207/o_221441c4.png">
<p>本文来自博客园，作者：<a href="https://www.cnblogs.com/hnzhengfy/" target="_blank">橙子家</a>，欢迎微信扫码关注博主【橙子家czzj】，有任何疑问欢迎沟通，共同成长！</p>
<div><p style="float: left;">转载本文请注明原文链接：<a href="https://www.cnblogs.com/hnzhengfy/p/18925817/element_select_all" target="_blank">https://www.cnblogs.com/hnzhengfy/p/18925817/element_select_all</a></p></div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-06-12 20:25">2025-06-12 20:25</span>&nbsp;
<a href="https://www.cnblogs.com/hnzhengfy">橙子家</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18925817);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18925817', targetLink: 'https://www.cnblogs.com/hnzhengfy/p/18925817/element_select_all', title: 'Select 组件实现【全选】（基于 Element）' })">举报</a>
</div>
        