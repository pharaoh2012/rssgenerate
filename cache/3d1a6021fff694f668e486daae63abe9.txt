
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/XY-Heruo/p/19042361" title="发布于 2025-08-16 17:25">
    <span role="heading" aria-level="2">Nginx反向代理Kafka集群</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        使用Nginx反向代理kafka集群
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="前言">前言</h2>
<p>kafka集群的网络没法被客户端直接访问，中间需要有个代理。正常网络情况下，kafka会给客户端返回所有的broker地址，如果客户端无法访问到broker就会报错，所以kafka给客户端返回的地址需要是客户端能访问的代理服务器地址。</p>
<p>本文的测试环境中，使用nginx来反向代理kafka集群。nginx和kafka部署在同一台机器上，使用firewalld确保只开放8000端口，拒绝机器外访问kafka的端口。</p>
<ul>
<li>nginx版本：1.28，IP：192.168.0.41,使用8000端口代理kafka集群</li>
<li>kafka版本：2.13-3.9.1，使用kraft组单点集群， IP：192.168.0.41。搭建过程见我的另一篇博客 <a href="https://www.cnblogs.com/XY-Heruo/p/19042304" target="_blank">使用KRaft部署单点kafka集群</a>。</li>
<li>客户端IP：192.168.0.108</li>
</ul>
<h2 id="kafka配置">kafka配置</h2>
<p>因为使用的是kraft，所以修改 <code>config/kraft/server.properties</code>配置文件，只需要修改<code>advertised.listeners</code>的配置。如下，PLAINTEXT指的是客户端访问地址，CONTROLLER因为是kafka内部集群通信才用到，所以只需要修改PLAINTEXT为nginx代理地址即可。PLAINTEXT试了需要写成hostname，而不能是ip地址，否则客户端还是会报错。</p>
<pre><code class="language-properties"># 旧配置，PLAINTEXT为Kakfa broker的监听地址
# advertised.listeners=PLAINTEXT://192.168.0.41:9092,CONTROLLER://192.168.0.41:19092

# 新配置，PLAINTEXT为Nginx代理服务器的地址
advertised.listeners=PLAINTEXT://kafka-cluster:8000,CONTROLLER://192.168.0.41:19092
</code></pre>
<p>kafka 机器的<code>/etc/hosts</code>添加配置<code>192.168.0.41    kafka-cluster</code>（不确定到底要不要配置，懒得再测了，感兴趣的可以自行尝试）</p>
<p>配置修改完成后，重启kafka所有节点。</p>
<h2 id="nginx配置">nginx配置</h2>
<p>nginx需要有编译参数<code>--with-stream</code>才能支持TCP/UDP的反向代理，如何编译可自行搜索相关文档。</p>
<ol>
<li>修改<code>nginx/conf/nginx.conf</code>的配置，导入<code>conf.d</code>目录下所有<code>*-stream.conf</code>的配置文件。如果配置很少，也可以直接写在<code>nginx.conf</code>文件里面。</li>
</ol>
<pre><code>stream {
    include conf.d/*-stream.conf;
}
</code></pre>
<ol start="2">
<li>编辑<code>nginx/conf/conf.d/kafka-stream.conf</code></li>
</ol>
<pre><code>upstream kafka-endpoints {
    server 192.168.0.41:9092;
    server 192.168.0.41:9093;
    server 192.168.0.41:9094;
}

server {
    listen 8000;
    proxy_pass kafka-endpoints;
}
</code></pre>
<ol start="3">
<li>测试并重加载nginx配置</li>
</ol>
<pre><code class="language-bash">nginx -t
nginx -s reload
</code></pre>
<h2 id="firewalld配置">firewalld配置</h2>
<ol>
<li>安装firewalld</li>
</ol>
<pre><code class="language-bash">sudo apt install -y firewalld
</code></pre>
<ol start="2">
<li>设置默认zone为drop，即拒绝所有入站流量</li>
</ol>
<pre><code class="language-bash">sudo firewall-cmd --set-default-zone=drop
</code></pre>
<ol start="3">
<li>添加放行入站端口</li>
</ol>
<pre><code class="language-bash">sudo firewall-cmd --add-port=22/tcp --add-port=80/tcp --add-port=443/tcp --add-port=8000/tcp --permanent --zone=drop
</code></pre>
<ol start="4">
<li>重加载</li>
</ol>
<pre><code class="language-bash">sudo firewall-cmd --reload
</code></pre>
<ol start="5">
<li>在客户端测试能否访问其它端口。结果不为0即访问失败。</li>
</ol>
<pre><code class="language-bash">timeout 1 bash -c "cat &lt; /dev/null &gt; /dev/tcp/192.168.0.41/9092" &gt; /dev/null 2&gt;&amp;1;echo $?
</code></pre>
<h2 id="客户端配置">客户端配置</h2>
<ol>
<li>修改<code>/etc/hosts</code>，添加配置</li>
</ol>
<pre><code>192.168.0.41    kafka-cluster
</code></pre>
<ol start="2">
<li>使用kafka自带工具启动生产者</li>
</ol>
<pre><code class="language-bash">./bin/kafka-console-producer.sh --broker-list kafka-cluster:8000 --topic testtopic
</code></pre>
<ol start="3">
<li>在另一个终端启动消费者</li>
</ol>
<pre><code class="language-bash">./bin/kafka-console-consumer.sh --bootstrap-server kafka-cluster:8000 --topic testtopic --from-beginning
</code></pre>
<ol start="4">
<li>在生产者终端随便输入点字符，如果消费者终端也能看到，说明nginx代理成功。</li>
</ol>

</div>
<div id="MySignature" role="contentinfo">
    <p>本文来自博客园，作者：<a href="https://www.cnblogs.com/XY-Heruo/" target="_blank">花酒锄作田</a>，转载请注明原文链接：<a href="https://www.cnblogs.com/XY-Heruo/p/19042361" target="_blank">https://www.cnblogs.com/XY-Heruo/p/19042361</a></p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-08-16 17:26">2025-08-16 17:25</span>&nbsp;
<a href="https://www.cnblogs.com/XY-Heruo">花酒锄作田</a>&nbsp;
阅读(<span id="post_view_count">136</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19042361);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19042361', targetLink: 'https://www.cnblogs.com/XY-Heruo/p/19042361', title: 'Nginx反向代理Kafka集群' })">举报</a>
</div>
        