
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/GuijiH6/p/18672847" title="发布于 2025-01-15 13:45">
    <span role="heading" aria-level="2">DVWA靶场Authorisation Bypass (未授权绕过) 漏洞通关教程及源码审计</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="authorisation-bypass">Authorisation Bypass</h1>
<p><strong>授权绕过</strong>（Authorisation Bypass）是一种严重的安全，通过利用系统的或错误配置，绕过正常的访问控制机制，获得未经授权的访问权限。这种可能导致敏感信息泄露、数据篡改、系统破坏等严重后果</p>
<p>以下是一些常见的授权绕过场景：</p>
<ol>
<li><strong>未验证的直接对象引用</strong>：系统没有对用户进行权限检查就直接访问对象。例如，通过猜测URL参数来访问其他用户的文件或数据。</li>
<li><strong>功能级访问控制</strong>：系统没有妥善限制用户对某些特定管理功能或数据的访问，导致攻击者能够执行超出其权限的操作。</li>
<li><strong>垂直权限提升</strong>：低权限用户可以通过漏洞取得高权限用户才拥有的权限，如管理员功能。</li>
<li><strong>水平权限提升</strong>：一个用户访问或修改同一权限级别的其他用户的数据，如查看他人的订单信息。</li>
<li><strong>不安全的角色验证</strong>：系统对角色身份验证存在缺陷，允许攻击者冒充其他角色。</li>
</ol>
<p><strong>预防和修复</strong>授权绕过漏洞需要全面实施和审核权限控制机制，包括：</p>
<ul>
<li>定义和实现基于角色的访问控制。</li>
<li>确保每个请求都经过严格的身份验证和授权检查。</li>
<li>定期进行安全审核和渗透测试以发现潜在漏洞。</li>
</ul>
<h2 id="low">low</h2>
<p>先使用管理员登录，然后记住下面的数据库以及<strong>路径 vulnerabilities/authbypass</strong></p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250101224824009.png" alt="" loading="lazy"></p>
<p>打开数据库，进入user表，可以看到密码都是进行MD5加密的</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250101225637322.png" alt="" loading="lazy"></p>
<p>解密md5值</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250101225555901.png" alt="" loading="lazy"></p>
<p>切换成普通用户</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250101225745850.png" alt="" loading="lazy"></p>
<p>可以看到少了刚才那一栏</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250101225830390.png" alt="" loading="lazy"></p>
<p>访问刚才保留的路径</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250101230109416.png" alt="" loading="lazy"></p>
<p>成功访问</p>
<p>并且在网络响应里回显了数据库信息</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250101230424534.png" alt="" loading="lazy"></p>
<h3 id="代码审计">代码审计</h3>
<pre><code class="language-php">&lt;?php
/*

Nothing to see here for this vulnerability, have a look
instead at the dvwaHtmlEcho function in:

* dvwa/includes/dvwaPage.inc.php           # 具体内容在下面这个函数里
*/
?&gt;
</code></pre>
<h2 id="medium">medium</h2>
<p>访问刚才的路径，发现被拦截了</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250101230539067.png" alt="" loading="lazy"></p>
<p>想到刚才网络资源里泄露的信息，访问<strong>vulnerabilities/authbypass/get_user_data.php</strong></p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250101230655910.png" alt="" loading="lazy"></p>
<p>成功获取数据库信息</p>
<h3 id="代码审计-1">代码审计</h3>
<p>首先检查用户是否是<strong>管理员</strong>才可以执行，然后利用下面两个函数进行限制</p>
<pre><code class="language-php">&lt;?php
/*
只有管理员用户被允许访问这个页面。
请查看以下两个文件以寻找可能的漏洞：
* vulnerabilities/authbypass/get_user_data.php
* vulnerabilities/authbypass/change_user_details.php
*/

if (dvwaCurrentUser() != "admin") {  // 检查当前用户是否不是管理员
	print "未经授权";               // 输出未授权提示
	http_response_code(403);        // 设置HTTP响应状态码为403（禁止访问）
	exit;                          // 结束脚本执行
}
?&gt;
</code></pre>
<h2 id="high">high</h2>
<p>方法和上面的差不多，不同的是需要抓包修改POST请求</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20250101231010573.png" alt="" loading="lazy"></p>
<p>修改成功</p>
<h3 id="代码审计-2">代码审计</h3>
<p>和medium级别没什么区别，不同点在于函数</p>
<pre><code class="language-php">&lt;?php
/*
只有管理员用户被允许访问这个页面。
请查看以下文件以寻找可能的漏洞：
* vulnerabilities/authbypass/change_user_details.php
*/

if (dvwaCurrentUser() != "admin") {  // 检查当前用户是否不是管理员
	print "未经授权";               // 输出未授权提示
	http_response_code(403);        // 设置HTTP响应状态码为403（禁止访问）
	exit;                          // 结束脚本执行
}
?&gt;
</code></pre>
<h2 id="impossible">impossible</h2>
<p>没有绝对安全的防护，但是一定要做好安全防护措施</p>
<h3 id="代码审计-3">代码审计</h3>
<p>只有<strong>admin</strong>才可以访问</p>
<pre><code class="language-php">&lt;?php
/*
只有管理员用户被允许访问这个页面
*/
if (dvwaCurrentUser() != "admin") {  // 如果当前用户不是管理员
	print "未经授权";                   // 输出“未经授权”提示
	http_response_code(403);            // 设置HTTP响应状态码为403（禁止访问）
	exit;                               // 结束脚本执行
}
?&gt;
</code></pre>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.18801628347800925" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-15 13:45">2025-01-15 13:45</span>&nbsp;
<a href="https://www.cnblogs.com/GuijiH6">H轨迹H</a>&nbsp;
阅读(<span id="post_view_count">20</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18672847" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18672847);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18672847', targetLink: 'https://www.cnblogs.com/GuijiH6/p/18672847', title: 'DVWA靶场Authorisation Bypass (未授权绕过) 漏洞通关教程及源码审计' })">举报</a>
</div>
        