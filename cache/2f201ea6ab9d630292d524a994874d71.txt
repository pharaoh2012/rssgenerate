
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/mingupupu/p/18729404" title="发布于 2025-02-21 16:01">
    <span role="heading" aria-level="2">使用browser-use进行数据爬取实战记录</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 class="md-end-block md-heading md-focus"><span class="md-plain md-expand">前言</span></h2>
<p class="md-end-block md-p"><span class="md-plain">前面的文章介绍了browser-use的基本使用，今天带来的分享是使用browser-use进行一次数据爬取的实战（不过还是demo级别的）。</span></p>
<p class="md-end-block md-p"><span class="md-plain">使用到的三个玩法分别是使用自己的浏览器、定义输出结构与注册一个行为。</span></p>
<p class="md-end-block md-p"><span class="md-image md-img-loaded" data-src="https://img2024.cnblogs.com/blog/3288240/202502/3288240-20250221160138230-747863055.png"><img src="https://img2024.cnblogs.com/blog/3288240/202502/3288240-20250221160138230-747863055.png" alt="image-20250221111035743"></span></p>
<h2 class="md-end-block md-heading"><span class="md-plain">实践</span></h2>
<h3 class="md-end-block md-heading"><span class="md-plain">使用自己的浏览器</span></h3>
<p class="md-end-block md-p"><span class="md-plain">首先解决使用自己的浏览器。</span></p>
<p class="md-end-block md-p"><span class="md-plain">代码：</span></p>
<pre class="md-fences md-end-block ty-contain-cm modeLoaded"><span><span class="cm-keyword">from <span class="cm-variable">langchain_openai <span class="cm-keyword">import <span class="cm-variable">ChatOpenAI<br><span><span class="cm-keyword">from <span class="cm-variable">browser_use <span class="cm-keyword">import <span class="cm-variable">Agent<br><span><span class="cm-keyword">from <span class="cm-variable">browser_use.<span class="cm-property">browser.<span class="cm-property">browser <span class="cm-keyword">import <span class="cm-variable">Browser, <span class="cm-variable">BrowserConfig<br><span><span class="cm-keyword">from <span class="cm-variable">dotenv <span class="cm-keyword">import <span class="cm-variable">load_dotenv<br><span><span class="cm-keyword">import <span class="cm-variable">os<br><span><span class="cm-variable">load_dotenv()<br><span><span>​<br><span><span class="cm-keyword">import <span class="cm-variable">asyncio<br><span><span>​<br><span><span class="cm-variable">api_key <span class="cm-operator">= <span class="cm-variable">os.<span class="cm-property">getenv(<span class="cm-string">'Silicon_Cloud_API_KEY')<br><span><span class="cm-variable">base_url <span class="cm-operator">= <span class="cm-variable">os.<span class="cm-property">getenv(<span class="cm-string">'Base_URL')<br><span><span class="cm-variable">model <span class="cm-operator">= <span class="cm-variable">os.<span class="cm-property">getenv(<span class="cm-string">'Model')<br><span><span>​<br><span><span class="cm-variable">browser <span class="cm-operator">= <span class="cm-variable">Browser(<br><span><span class="cm-tab">    <span class="cm-variable">config<span class="cm-operator">=<span class="cm-variable">BrowserConfig(<br><span><span class="cm-tab">    <span class="cm-tab">    <span class="cm-comment"># NOTE: you need to close your chrome browser - so that this can open your browser in debug mode<br><span><span class="cm-tab">    <span class="cm-tab">    <span class="cm-comment"># d:\Learning\AI-related\browser-use-demo\.env注意：您需要关闭您的Chrome浏览器，以便此操作可以在调试模式下打开您的浏览器<br><span><span class="cm-tab">    <span class="cm-tab">    <span class="cm-variable">chrome_instance_path<span class="cm-operator">=<span class="cm-string">r'C:\Program Files\Google\Chrome\Application\chrome.exe',<br><span><span class="cm-tab">    )<br><span>)<br><span><span>​<br><span><span class="cm-variable">llm <span class="cm-operator">= <span class="cm-variable">ChatOpenAI(<span class="cm-variable">model<span class="cm-operator">=<span class="cm-variable">model, <span class="cm-variable">api_key<span class="cm-operator">=<span class="cm-variable">api_key, <span class="cm-variable">base_url<span class="cm-operator">=<span class="cm-variable">base_url)<br><span><span>​<br><span><span class="cm-keyword">async <span class="cm-keyword">def <span class="cm-def">main():<br><span> &nbsp; &nbsp;<span class="cm-variable">agent <span class="cm-operator">= <span class="cm-variable">Agent(<br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">task<span class="cm-operator">=<span class="cm-string">"获取https://cloud.siliconflow.cn/bills的账单信息",<br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">llm<span class="cm-operator">=<span class="cm-variable">llm,<br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">browser<span class="cm-operator">=<span class="cm-variable">browser,<br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">use_vision<span class="cm-operator">=<span class="cm-keyword">False,<br><span> &nbsp;  )<br><span> &nbsp; &nbsp;<span class="cm-variable">result <span class="cm-operator">= <span class="cm-keyword">await <span class="cm-variable">agent.<span class="cm-property">run()<br><span> &nbsp; &nbsp;<span class="cm-builtin">print(<span class="cm-variable">result)<br><span><span>​<br><span><span class="cm-variable">asyncio.<span class="cm-property">run(<span class="cm-variable">main())</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
<p class="md-end-block md-p"><span class="md-plain">将chrome_instance_path替换为你自己的浏览器路径。</span></p>
<p class="md-end-block md-p"><span class="md-plain">为什么要使用自己的浏览器呢？</span></p>
<p class="md-end-block md-p"><span class="md-plain">有一个好处就是你登录过的保存信息的网站就可以直接登录不用验证了。</span></p>
<p class="md-end-block md-p"><span class="md-plain">就比如我想查看我硅基流动的账单一样，如果不用自己的浏览器还要进行登录操作，用自己的浏览器如果保存信息了就不用再登了。</span></p>
<p class="md-end-block md-p"><span class="md-plain">模型我选择的是：Qwen/Qwen2.5-72B-Instruct。</span></p>
<p class="md-end-block md-p"><span class="md-plain">查看效果：</span></p>
<p class="md-end-block md-p"><span class="md-image md-img-loaded" data-src="https://img2024.cnblogs.com/blog/3288240/202502/3288240-20250221160138278-1381841655.png"><img src="https://img2024.cnblogs.com/blog/3288240/202502/3288240-20250221160138278-1381841655.png" alt="image-20250221111729867"></span></p>
<p class="md-end-block md-p"><span class="md-plain">准确获取到了我们想要的数据。</span></p>
<h3 class="md-end-block md-heading"><span class="md-plain">定义自定义输出</span></h3>
<p class="md-end-block md-p"><span class="md-plain">其次，我们来定义自定义输出。</span></p>
<p class="md-end-block md-p"><span class="md-plain">代码：</span></p>
<pre class="md-fences md-end-block ty-contain-cm modeLoaded"><span><span class="cm-keyword">from <span class="cm-variable">langchain_openai <span class="cm-keyword">import <span class="cm-variable">ChatOpenAI<br><span><span class="cm-keyword">from <span class="cm-variable">browser_use <span class="cm-keyword">import <span class="cm-variable">Agent<br><span><span class="cm-keyword">from <span class="cm-variable">browser_use.<span class="cm-property">browser.<span class="cm-property">browser <span class="cm-keyword">import <span class="cm-variable">Browser, <span class="cm-variable">BrowserConfig<br><span><span class="cm-keyword">from <span class="cm-variable">dotenv <span class="cm-keyword">import <span class="cm-variable">load_dotenv<br><span><span class="cm-keyword">import <span class="cm-variable">os<br><span><span class="cm-keyword">from <span class="cm-variable">pydantic <span class="cm-keyword">import <span class="cm-variable">BaseModel<br><span><span class="cm-keyword">import <span class="cm-variable">asyncio<br><span><span class="cm-keyword">from <span class="cm-variable">typing <span class="cm-keyword">import <span class="cm-variable">List<br><span><span class="cm-keyword">from <span class="cm-variable">browser_use <span class="cm-keyword">import <span class="cm-variable">ActionResult, <span class="cm-variable">Agent, <span class="cm-variable">Controller<br><span><span>​<br><span><span class="cm-variable">load_dotenv()<br><span><span>​<br><span><span class="cm-variable">api_key <span class="cm-operator">= <span class="cm-variable">os.<span class="cm-property">getenv(<span class="cm-string">'Silicon_Cloud_API_KEY')<br><span><span class="cm-variable">base_url <span class="cm-operator">= <span class="cm-variable">os.<span class="cm-property">getenv(<span class="cm-string">'Base_URL')<br><span><span class="cm-variable">model <span class="cm-operator">= <span class="cm-variable">os.<span class="cm-property">getenv(<span class="cm-string">'Model')<br><span><span>​<br><span><span class="cm-variable">browser <span class="cm-operator">= <span class="cm-variable">Browser(<br><span><span class="cm-tab">    <span class="cm-variable">config<span class="cm-operator">=<span class="cm-variable">BrowserConfig(<br><span><span class="cm-tab">    <span class="cm-tab">    <span class="cm-comment"># NOTE: you need to close your chrome browser - so that this can open your browser in debug mode<br><span><span class="cm-tab">    <span class="cm-tab">    <span class="cm-comment"># d:\Learning\AI-related\browser-use-demo\.env注意：您需要关闭您的Chrome浏览器，以便此操作可以在调试模式下打开您的浏览器<br><span><span class="cm-tab">    <span class="cm-tab">    <span class="cm-variable">chrome_instance_path<span class="cm-operator">=<span class="cm-string">r'C:\Program Files\Google\Chrome\Application\chrome.exe',<br><span><span class="cm-tab">    )<br><span>)<br><span><span>​<br><span><span class="cm-keyword">class <span class="cm-def">Bill(<span class="cm-variable">BaseModel):<br><span><span class="cm-tab">    <span class="cm-variable">account_period: <span class="cm-builtin">str<br><span><span class="cm-tab">    <span class="cm-variable">total_consumption : <span class="cm-builtin">float<br><span><span>​<br><span><span class="cm-variable">controller <span class="cm-operator">= <span class="cm-variable">Controller(<span class="cm-variable">output_model<span class="cm-operator">=<span class="cm-variable">Bill)<br><span><span>​<br><span><span class="cm-variable">llm <span class="cm-operator">= <span class="cm-variable">ChatOpenAI(<span class="cm-variable">model<span class="cm-operator">=<span class="cm-variable">model, <span class="cm-variable">api_key<span class="cm-operator">=<span class="cm-variable">api_key, <span class="cm-variable">base_url<span class="cm-operator">=<span class="cm-variable">base_url)<br><span><span>​<br><span><span class="cm-keyword">async <span class="cm-keyword">def <span class="cm-def">main():<br><span> &nbsp; &nbsp;<span class="cm-variable">agent <span class="cm-operator">= <span class="cm-variable">Agent(<br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">task<span class="cm-operator">=<span class="cm-string">"""<br><span><span class="cm-string"> &nbsp; &nbsp; &nbsp;  获取https://cloud.siliconflow.cn/bills的账单信息。 &nbsp; &nbsp; <br><span><span class="cm-string"> &nbsp; &nbsp; &nbsp;  """,<br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">llm<span class="cm-operator">=<span class="cm-variable">llm,<br><span><span class="cm-tab">    <span class="cm-tab">    <span class="cm-variable">controller<span class="cm-operator">=<span class="cm-variable">controller,<br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">browser<span class="cm-operator">=<span class="cm-variable">browser,<br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">use_vision<span class="cm-operator">=<span class="cm-keyword">False,<br><span> &nbsp;  )<br><span class="cm-tab-wrap-hack"><span class="cm-tab">    <br><span> &nbsp; &nbsp;<span class="cm-variable">result <span class="cm-operator">= <span class="cm-keyword">await <span class="cm-variable">agent.<span class="cm-property">run()<br><span> &nbsp; &nbsp;<span class="cm-builtin">print(<span class="cm-variable">result)<br><span><span>​<br><span><span class="cm-variable">asyncio.<span class="cm-property">run(<span class="cm-variable">main())</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
<p class="md-end-block md-p"><span class="md-plain">效果：</span></p>
<p class="md-end-block md-p"><span class="md-image md-img-loaded" data-src="https://img2024.cnblogs.com/blog/3288240/202502/3288240-20250221160138291-167617082.png"><img src="https://img2024.cnblogs.com/blog/3288240/202502/3288240-20250221160138291-167617082.png" alt="image-20250221112232196"></span></p>
<p class="md-end-block md-p"><span class="md-plain">使用到了自己定义的数据结构。</span></p>
<h3 class="md-end-block md-heading"><span class="md-plain">注册一个行为</span></h3>
<p class="md-end-block md-p"><span class="md-plain">比如我想把结果保存到一个文件中。</span></p>
<p class="md-end-block md-p"><span class="md-plain">代码：</span></p>
<pre class="md-fences md-end-block ty-contain-cm modeLoaded"><span><span class="cm-keyword">from <span class="cm-variable">langchain_openai <span class="cm-keyword">import <span class="cm-variable">ChatOpenAI<br><span><span class="cm-keyword">from <span class="cm-variable">browser_use <span class="cm-keyword">import <span class="cm-variable">Agent, <span class="cm-variable">Controller<br><span><span class="cm-keyword">from <span class="cm-variable">browser_use.<span class="cm-property">browser.<span class="cm-property">browser <span class="cm-keyword">import <span class="cm-variable">Browser, <span class="cm-variable">BrowserConfig<br><span><span class="cm-keyword">from <span class="cm-variable">browser_use.<span class="cm-property">agent.<span class="cm-property">views <span class="cm-keyword">import <span class="cm-variable">ActionResult<br><span><span class="cm-keyword">from <span class="cm-variable">dotenv <span class="cm-keyword">import <span class="cm-variable">load_dotenv<br><span><span class="cm-keyword">import <span class="cm-variable">os<br><span><span class="cm-variable">load_dotenv()<br><span><span>​<br><span><span class="cm-keyword">import <span class="cm-variable">asyncio<br><span><span>​<br><span><span class="cm-variable">api_key <span class="cm-operator">= <span class="cm-variable">os.<span class="cm-property">getenv(<span class="cm-string">'Silicon_Cloud_API_KEY')<br><span><span class="cm-variable">base_url <span class="cm-operator">= <span class="cm-variable">os.<span class="cm-property">getenv(<span class="cm-string">'Base_URL')<br><span><span class="cm-variable">model <span class="cm-operator">= <span class="cm-variable">os.<span class="cm-property">getenv(<span class="cm-string">'Model')<br><span><span>​<br><span><span class="cm-variable">browser <span class="cm-operator">= <span class="cm-variable">Browser(<br><span><span class="cm-tab">    <span class="cm-variable">config<span class="cm-operator">=<span class="cm-variable">BrowserConfig(<br><span><span class="cm-tab">    <span class="cm-tab">    <span class="cm-comment"># NOTE: you need to close your chrome browser - so that this can open your browser in debug mode<br><span><span class="cm-tab">    <span class="cm-tab">    <span class="cm-comment"># d:\Learning\AI-related\browser-use-demo\.env注意：您需要关闭您的Chrome浏览器，以便此操作可以在调试模式下打开您的浏览器<br><span><span class="cm-tab">    <span class="cm-tab">    <span class="cm-variable">chrome_instance_path<span class="cm-operator">=<span class="cm-string">r'C:\Program Files\Google\Chrome\Application\chrome.exe',<br><span><span class="cm-tab">    )<br><span>)<br><span><span>​<br><span><span class="cm-variable">controller <span class="cm-operator">= <span class="cm-variable">Controller()<br><span><span class="cm-meta">@controller.<span class="cm-property">registry.<span class="cm-property">action(<span class="cm-string">'保存结果到指定文件')<br><span><span class="cm-keyword">def <span class="cm-def">save_to_file(<span class="cm-variable">text: <span class="cm-builtin">str,<span class="cm-variable">file_path: <span class="cm-builtin">str):<br><span><span class="cm-tab">    <span class="cm-keyword">with <span class="cm-builtin">open(<span class="cm-variable">file_path, <span class="cm-string">'w') <span class="cm-keyword">as <span class="cm-variable">f:<br><span><span class="cm-tab">    <span class="cm-tab">    <span class="cm-variable">f.<span class="cm-property">write(<span class="cm-variable">text)<br><span><span class="cm-tab">    <span class="cm-keyword">return <span class="cm-variable">ActionResult(<span class="cm-variable">extracted_content<span class="cm-operator">=<span class="cm-variable">text)<br><span><span>​<br><span><span class="cm-variable">llm <span class="cm-operator">= <span class="cm-variable">ChatOpenAI(<span class="cm-variable">model<span class="cm-operator">=<span class="cm-variable">model, <span class="cm-variable">api_key<span class="cm-operator">=<span class="cm-variable">api_key, <span class="cm-variable">base_url<span class="cm-operator">=<span class="cm-variable">base_url)<br><span><span>​<br><span><span class="cm-keyword">async <span class="cm-keyword">def <span class="cm-def">main():<br><span> &nbsp; &nbsp;<span class="cm-variable">agent <span class="cm-operator">= <span class="cm-variable">Agent(<br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">task<span class="cm-operator">=<span class="cm-string">"获取https://cloud.siliconflow.cn/bills的账单信息，并将结果保存到test3.txt。",<br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">llm<span class="cm-operator">=<span class="cm-variable">llm,<br><span><span class="cm-tab">    <span class="cm-tab">    <span class="cm-variable">controller<span class="cm-operator">=<span class="cm-variable">controller,<br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">browser<span class="cm-operator">=<span class="cm-variable">browser,<br><span> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">use_vision<span class="cm-operator">=<span class="cm-keyword">False,<br><span> &nbsp;  )<br><span> &nbsp; &nbsp;<span class="cm-variable">result <span class="cm-operator">= <span class="cm-keyword">await <span class="cm-variable">agent.<span class="cm-property">run()<br><span> &nbsp; &nbsp;<span class="cm-builtin">print(<span class="cm-variable">result)<br><span><span>​<br><span><span class="cm-variable">asyncio.<span class="cm-property">run(<span class="cm-variable">main())</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
<p class="md-end-block md-p"><span class="md-plain">效果：</span></p>
<p class="md-end-block md-p"><span class="md-image md-img-loaded" data-src="https://img2024.cnblogs.com/blog/3288240/202502/3288240-20250221160138256-2125790450.png"><img src="https://img2024.cnblogs.com/blog/3288240/202502/3288240-20250221160138256-2125790450.png" alt="image-20250221112725673"></span></p>
<p class="md-end-block md-p"><span class="md-image md-img-loaded" data-src="https://img2024.cnblogs.com/blog/3288240/202502/3288240-20250221160138229-737109089.png"><img src="https://img2024.cnblogs.com/blog/3288240/202502/3288240-20250221160138229-737109089.png" alt="image-20250221112909092"></span></p>
<h2 class="md-end-block md-heading"><span class="md-plain">最后</span></h2>
<p class="md-end-block md-p md-focus"><span class="md-plain md-expand">以上就是使用browser-use进行一次数据爬取的实战记录，更多玩法可由读者自行探索。</span></p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.011770726188657408" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-21 16:02">2025-02-21 16:01</span>&nbsp;
<a href="https://www.cnblogs.com/mingupupu">mingupupup</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18729404" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18729404);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18729404', targetLink: 'https://www.cnblogs.com/mingupupu/p/18729404', title: '使用browser-use进行数据爬取实战记录' })">举报</a>
</div>
        