
		<h1 class="postTitle">
			<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/linx/p/18842208" title="发布于 2025-04-23 09:49">
    <span role="heading" aria-level="2">Web前端入门第 40 问：CSS float 浮动布局应用场景</span>
    

</a>

		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>CSS float 浮动属性最早用于文字环绕图片效果，就像传统报纸上的印刷排版一样。</p>
<p>CSS2 的规范推动了浮动用于其他元素，float 便被大范围应用于布局，当年常说的 <code>div + css</code> 布局，float 绝对占有一席之地，float 用于布局手段便颠覆了再之前的表格布局，如今表格只用于数据展示。</p>
<p>而今 CSS3 推动 flex 弹性盒子和 grid 网格布局规范，float 的地位有点像当年的表格布局一样，有种退出舞台的感觉，但一些简单的布局用 float 比 flex 更简单。而且最初的文字环绕效果，其他的 CSS 属性都不好使，非 float 莫属。</p>
<h2 id="float-应用场景">float 应用场景</h2>
<p>虽说如今 CSS 的 float 浮动属性在布局领域败北，被 flex 一脚踢在了岸边上，但这一脚还不至死，float 多少还有一口气在~</p>
<h3 id="两列左右布局">两列左右布局</h3>
<p>还是以经典的左右两端布局为例，看看浮动的用处：</p>
<p><img src="https://img2024.cnblogs.com/blog/596097/202504/596097-20250423094852549-604803546.png" alt="" loading="lazy"></p>
<p>看 left 和 right 两个位置，分别位于左右两侧，使用 float 的实现：</p>
<pre><code class="language-html">&lt;div class="box"&gt;
  &lt;div class="left"&gt;left&lt;/div&gt;
  &lt;div class="right"&gt;right&lt;/div&gt;
&lt;/div&gt;
&lt;style&gt;
  .box {  
    margin: 20px 0;
    width: 400px;
  }
  .left {
    float: left;
  }
  .right {
    float: right;
  }
&lt;/style&gt;
</code></pre>
<p>直接将两个元素分别设置 <code>float</code> 即可实现以上布局，但这里埋了一个坑！</p>
<h3 id="父级元素高度塌陷">父级元素高度塌陷</h3>
<p>我们给 <code>.box</code> 的容器添加一个小小的边框属性，看看效果就会发现问题：</p>
<pre><code class="language-html">&lt;div class="box"&gt;
  &lt;div class="left"&gt;left&lt;/div&gt;
  &lt;div class="right"&gt;right&lt;/div&gt;
&lt;/div&gt;
&lt;style&gt;
  .box {  
    margin: 20px 0;
    width: 400px;
    border: 2px solid rgba(255, 71, 87,0.3);
  }
  .left {
    float: left;
  }
  .right {
    float: right;
  }
&lt;/style&gt;
</code></pre>
<p>显示效果：</p>
<p><img src="https://img2024.cnblogs.com/blog/596097/202504/596097-20250423094846201-168311197.png" alt="" loading="lazy"></p>
<p>父级元素高度没有了，四条边框变成了一条线，这是为何？</p>
<p>原因便是 float 的名字 <code>浮动</code>，float 不只是名字叫浮动，还在于它的作用也是 <code>浮动</code>，让元素飘起来，不在占用空间位置，但是与定位又不一样，float 的元素还受父级控制，但又不占用父级元素空间，所以就造成了高度塌陷，那怎么解决这个问题？？</p>
<p>最简易的做法是给 <code>.box</code> 添加一个 <code>overflow: hidden;</code> 便可以让父级高度恢复：</p>
<pre><code class="language-html">&lt;div class="box"&gt;
  &lt;div class="left"&gt;left&lt;/div&gt;
  &lt;div class="right"&gt;right&lt;/div&gt;
&lt;/div&gt;
&lt;style&gt;
  .box {  
    margin: 20px 0;
    width: 400px;
    border: 2px solid rgba(255, 71, 87,0.3);
    overflow: hidden;
  }
  .left {
    float: left;
  }
  .right {
    float: right;
  }
&lt;/style&gt;
</code></pre>
<p>显示效果：</p>
<p><img src="https://img2024.cnblogs.com/blog/596097/202504/596097-20250423094841860-1904912609.png" alt="" loading="lazy"></p>
<p><strong>overflow: hidden; 的问题：</strong></p>
<p>虽然高度塌陷的问题是解决了，但是 <code>overflow: hidden;</code> 也会造成其他问题，比如：如果有内容溢出了容器，就再也看不到了~~</p>
<p>此方法仅适用于没有内容溢出的容器清除浮动。</p>
<h3 id="最佳的清除浮动方法">最佳的清除浮动方法</h3>
<p>MDN 的一个小角落里面，有这么一个 CSS 属性 <code>clear</code>，它的名称就是它的作用：<code>清除</code>，对头，就是用来清除浮动的，没其他意思。</p>
<p>用法嘛，它有多个属性值，别想那么多，就用最常见的 <code>both</code> 就行，其他值等要用了再说，扣代码这么多年的前端经历，也没见用上其他值~~</p>
<p>这儿建议用一个伪对象 <code>after</code>，别问为什么，问就是不想再新增一个空的 html 元素用来清除浮动，代码如下：</p>
<pre><code class="language-css">/**清除浮动**/
.clearfix:after {
  visibility: hidden;
  display: block;
  font-size: 0;
  content: " ";
  clear: both;
  height: 0;
}
.clearfix {
  *zoom:1;
}
</code></pre>
<p>至于为什么要那么多的代码，嘿嘿...为了兼容各种赖克宝浏览器。百度首页的代码中都还找到有这样的代码，嘿，说明百度还在支持赖克宝浏览器~~</p>
<p>如果不考虑兼容，直接可以这样玩：</p>
<pre><code class="language-css">.clearfix:after {
  content: "";
  display: block;
  clear: both;
}
</code></pre>
<p>用法：</p>
<pre><code class="language-html">&lt;div class="box clearfix"&gt;
  &lt;div class="left"&gt;left&lt;/div&gt;
  &lt;div class="right"&gt;right&lt;/div&gt;
&lt;/div&gt;
&lt;style&gt;
  .clearfix:after {
    content: "";
    display: block;
    clear: both;
  }
  .box {  
    border: 2px solid rgba(255, 71, 87,0.3);
    margin: 20px 0;
    width: 400px;
  }
  .left {
    float: left;
  }
  .right {
    float: right;
  }
&lt;/style&gt;
</code></pre>
<p>显示效果：</p>
<p><img src="https://img2024.cnblogs.com/blog/596097/202504/596097-20250423094834561-85655003.png" alt="" loading="lazy"></p>
<p>这个 <code>clearfix</code> 类可丢公用样式中，要清除浮动时候，直接加载容器盒子上即可！</p>
<p>美中不足的是，容器 box 伪对象 <code>after</code> 被占用了，其他地方再想使用伪对象就会有冲突！！</p>
<h3 id="改变元素位置">改变元素位置</h3>
<p>某某天，产品突发奇想，在左边的那个 <code>left</code> 给我放在右边去呗，右边的 <code>right</code> 给放在左边来下吧。</p>
<p>按照懒人思想，我肯定不想再去动 HTML 结构了，看看使用 float 来做到 flex 的 order 排序效果：</p>
<pre><code class="language-html">&lt;div class="box clearfix"&gt;
  &lt;div class="left"&gt;left&lt;/div&gt;
  &lt;div class="right"&gt;right&lt;/div&gt;
&lt;/div&gt;
&lt;style&gt;
  .clearfix:after {
    content: "";
    display: block;
    clear: both;
  }
  .box {  
    border: 2px solid rgba(255, 71, 87,0.3);
    margin: 20px 0;
    width: 400px;
  }
  .left {
    float: right;
  }
  .right {
    float: left;
  }
&lt;/style&gt;
</code></pre>
<p>注意看代码中的 <code>float: right;</code> 和 <code>float: left;</code> 位置。</p>
<p>仅需要对调一下 float 的位置，即可实现左右互换，而不用改变 HTML 结构！显示效果：</p>
<p><img src="https://img2024.cnblogs.com/blog/596097/202504/596097-20250423094828903-1950998051.png" alt="" loading="lazy"></p>
<h2 id="终极应用场景">终极应用场景</h2>
<p>float 的初衷是用于文字排版，虽说在布局方面，float 干不过 flex 和 grid，但在文字环绕这个场景中，float 还是老大哥。</p>
<h3 id="文字环绕">文字环绕</h3>
<p><img src="https://img2024.cnblogs.com/blog/596097/202504/596097-20250423094824870-1261423029.png" alt="" loading="lazy"></p>
<p>以上这种文字环绕的效果，如果用 flex 和 grid 来做，不知道要将 HTML 结构拆成啥样，但对于 float 来说就是信手拈来的事儿。</p>
<p>代码：</p>
<pre><code class="language-html">&lt;div class="box"&gt;
  &lt;p&gt;CSS float 浮动属性最早用于文字环绕图片效果，就像传统报纸上的印刷排版一样。&lt;/p&gt;
  &lt;div class="left"&gt;浮动元素 left&lt;/div&gt;
  &lt;div class="right"&gt;浮动元素 right&lt;/div&gt;
  &lt;p&gt;CSS2 的规范推动了浮动用于其他元素，float 便被大范围应用于布局，当年常说的 `div + css` 布局，float 绝对占有一席之地，float 用于布局手段便颠覆了再之前的表格布局，如今表格只用于数据展示。&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
.box {  
  border: 2px solid rgba(255, 71, 87,0.3);
  margin: 20px 0;
  padding: 20px;
  width: 400px;
}
.left,
.right {
  width: 80px;
  height: 80px;
  background-color: #000736;
  color: #fff;
  border: 2px solid #ff4757;
}
.left {
  float: left;
  margin: 10px 10px 10px 0;
}
.right {
  float: right;
  margin: 10px 0 10px 10px;
}
&lt;/style&gt;
</code></pre>
<h3 id="几何形状文字环绕">几何形状文字环绕</h3>
<p>利用 <code>shape-outside</code> 属性，可实现各种几何图形的文字环绕效果：</p>
<pre><code class="language-html">&lt;div class="box"&gt;
  &lt;p&gt;CSS float 浮动属性最早用于文字环绕图片效果，就像传统报纸上的印刷排版一样。&lt;/p&gt;
  &lt;div class="left"&gt;浮动元素 left&lt;/div&gt;
  &lt;div class="right"&gt;浮动元素 right&lt;/div&gt;
  &lt;p&gt;CSS2 的规范推动了浮动用于其他元素，float 便被大范围应用于布局，当年常说的 `div + css` 布局，float 绝对占有一席之地，float 用于布局手段便颠覆了再之前的表格布局，如今表格只用于数据展示。&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
.box {  
  border: 2px solid rgba(255, 71, 87,0.3);
  margin: 20px 0;
  padding: 20px;
  width: 400px;
}
.left,
.right {
  width: 80px;
  height: 80px;
  background-color: #000736;
  color: #fff;
  border: 2px solid #ff4757;
  border-radius: 50%;
  shape-outside: circle(50%); /* 定义圆形环绕区域 */
}
.left {
  float: left;
  margin: 10px 10px 10px 0;
}
.right {
  float: right;
  margin: 10px 0 10px 10px;
}
&lt;/style&gt;
</code></pre>
<p>以上代码定义了一个 <code>circle</code> 的圆形区域，文字将会围绕这个圆形区域显示，效果：</p>
<p><img src="https://img2024.cnblogs.com/blog/596097/202504/596097-20250423094815751-350819391.png" alt="" loading="lazy"></p>
<p>更多几何图形参考 MDN：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/basic-shape" target="_blank" rel="noopener nofollow">https://developer.mozilla.org/zh-CN/docs/Web/CSS/basic-shape</a></p>
<h3 id="float-新的属性值">float 新的属性值</h3>
<p>float 属性值除了常用的 <code>left</code>、<code>right</code>和<code>none</code> 外，2023 的规范还新增了 <code>inline-start</code>、<code>inline-end</code> 这俩兄弟，他们主要用于处理不同的书写方式，比如有些语言是从右往左的书写模式，<code>float: inline-start;</code> 就会浮动到语言书写开始的地方，看例子：</p>
<p>将 <code>float: left</code> 改成 <code>float: inline-start;</code> 再将 box 的书写方向改为 <code>direction: rtl;</code>，再看效果：</p>
<p><img src="https://img2024.cnblogs.com/blog/596097/202504/596097-20250423094810800-1653488923.png" alt="" loading="lazy"></p>
<p>可以看到 inline-start 就是往文字开始的地方浮动，这个值对于不同的书写方向还是有用的。但需注意兼容性，毕竟 2023 年才新增的。</p>
<h2 id="总结">总结</h2>
<p>虽说 float 浮动属性很少再用于布局，但在文字环绕排版时，还是需要掏出 float。</p>
<p>技术的发展让曾经的经典布局已经逐渐退出舞台，我们在学习新的方案时，也需要回望一下过去，也许某个需求，这些旧的技术也会重新被摆上案桌。</p>

</div>
<div id="MySignature" role="contentinfo">
    <p>&nbsp;</p>
<p style="font-size: 18px;font-weight: bold;"><span style="color:rgb(255, 71, 87)">文章正在持续更新中...</span>，首发微信公众号【<span style="color:rgb(255, 71, 87)">前端路引</span>】，欢迎关注公众号获取最新文章。</p>
<p>
  <img style="max-width: 320px;" src="https://images.cnblogs.com/cnblogs_com/linx/2447020/o_250228035031_%E5%85%AC%E4%BC%97%E5%8F%B7%E4%BA%8C%E7%BB%B4%E7%A0%81.png">
</p>
<p>本文来自博客园，作者：<a href="https://www.cnblogs.com/linx/" target="_blank">前端路引</a>，转载请注明原文链接：<a href="https://www.cnblogs.com/linx/p/18842208" target="_blank">https://www.cnblogs.com/linx/p/18842208</a></p>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

		</div>
		<div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.7700696597407407" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-23 09:49">2025-04-23 09:49</span>&nbsp;
<a href="https://www.cnblogs.com/linx">前端路引</a>&nbsp;
Views(<span id="post_view_count">127</span>)&nbsp;
Comments(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18842208);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18842208', targetLink: 'https://www.cnblogs.com/linx/p/18842208', title: 'Web前端入门第 40 问：CSS float 浮动布局应用场景' })">举报</a>
</div>
	