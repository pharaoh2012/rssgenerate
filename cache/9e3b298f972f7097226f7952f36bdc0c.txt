
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/vipstone/p/18875900" title="发布于 2025-05-14 14:55">
    <span role="heading" aria-level="2">SpringAI更新：废弃tools方法、正式支持DeepSeek！</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>AI 技术发展很快，同样 AI 配套的相关技术发展也很快。这不今天刚打开 Spring AI 的官网就发现它又又又又更新了，而这次更新距离上次更新 M7 版本才不过半个月的时间，那这次 Spring AI 给我们带来了哪些惊喜呢？一起来看。</p>
<h2 id="重点升级点">重点升级点</h2>
<p>我们先来判断 Spring AI M8 的重点升级点：</p>
<ol>
<li><strong>废除了 tools 方法，取而代之的是 toolCallbacks 方法</strong>，写法对比如下：
<ol>
<li>早期版本：</li>
</ol>
</li>
</ol>
<pre><code class="language-java">// Old code in M7 - no longer works correctly in M8
chatClient.prompt("What day is tomorrow?")
    .tools(toolCallback)
    .call()
    .content();
</code></pre>
<pre><code>2. 最新版本：
</code></pre>
<pre><code class="language-java">// Updated code for M8
chatClient.prompt("What day is tomorrow?")
    .toolCallbacks(toolCallback)
    .call()
    .content();
</code></pre>
<ol start="2">
<li><strong>聊天记忆增强功能</strong>：
<ul>
<li>改进的 ChatMemory API，实现更灵活的对话历史管理。</li>
<li>新 ChatMemoryRepository 允许不同的存储策略。</li>
<li>添加 MessageWindowChatMemory 用于维护历史消息。</li>
<li>改进属性命名以确保跨实现的一致性。</li>
<li>支持各种存储后端：
<ul>
<li>InMemoryChatMemoryRepository（默认）。</li>
<li>JdbcChatMemoryRepository 对于关系数据库持久化支持。</li>
</ul>
</li>
</ul>
</li>
<li><strong>增强的 MCP 工具回调配置</strong>：
<ul>
<li>在 MCP 客户端属性中添加了工具回调配置。</li>
<li>支持 MCP 服务器中的完成规范。</li>
<li>为 MCP 服务器添加了指令支持。</li>
<li>向 WebFlux 和 WebMvc 传输提供程序添加了 SSE 端点参数。</li>
</ul>
</li>
<li><strong>提示工程文档增强</strong>：
<ul>
<li>添加提示工程模式文档。</li>
<li>为开发人员提供有效提示设计的最佳实践。</li>
<li>包括各种用例的示例和模式。</li>
</ul>
</li>
<li><strong>向量数据库存储功能增强</strong>：</li>
</ol>
<ul>
<li>Cosmos DB Entra ID 支持和修复：
<ul>
<li>为 Cosmos DB 添加了 Azure Entra ID（以前称为 Azure AD）身份验证；</li>
<li>改进 Azure 部署的安全性和身份验证选项。</li>
</ul>
</li>
<li>Cassandra 向量存储改进：
<ul>
<li>修复了 Cassandra 聊天内存中的消息顺序。</li>
<li>添加了更好的错误消息并修复了各种问题。</li>
</ul>
</li>
</ul>
<p>官方更新日志：<a href="https://spring.io/blog/2025/04/30/spring-ai-1-0-0-m8-released" target="_blank" rel="noopener nofollow">https://spring.io/blog/2025/04/30/spring-ai-1-0-0-m8-released</a></p>
<h2 id="deepseek-sdk-正式发布">DeepSeek SDK 正式发布</h2>
<p>除了以上内容之外，官方的更新日志中没提到的，还有对于 DeepSeek SDK 的正式发布，之前版本中虽然有关于 DeepSeek 的支持，但并不是真正的支持，只是让 DeepSeek 使用 OpenAI 协议实现对 DeepSeek 的调用，而不是真正的 DeepSeek SDK 支持。</p>
<p>那么 OpenAI 协议和真正的 SDK 支持的区别是啥呢？</p>
<p>简单来说，举个简单的例子你就明白了，就是 OpenAI 相当于你上班，因为你自己没车，所以你只能蹭同事的车；而有了 SDK 的支持之后，相当于你有自己的车了，不需要在蹭别人的车了。</p>
<p>也就意味着，DeepSeek 可以和 OpenAI 或其他使用 OpenAI 协议的大模型并存了，之前是二选一，你（DeepSeek）使用了 OpenAI 协议，那么其他人就没办法使用 OpenAI 协议了，现在你有自己的 SDK 了，就可以和其他兼容 OpenAI 或 OpenAI 一起使用了。</p>
<h2 id="deepseek-使用变化">DeepSeek 使用变化</h2>
<p>DeepSeek SDK 的具体使用如下。</p>
<ol>
<li><strong>准备工作</strong>：在 DeepSeek 申请 APIKey。</li>
<li><strong>添加依赖</strong>：</li>
</ol>
<pre><code class="language-xml">&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.ai&lt;/groupId&gt;
    &lt;artifactId&gt;spring-ai-deepseek-spring-boot-starter&lt;/artifactId&gt;
&lt;/dependency&gt;
</code></pre>
<ol start="3">
<li><strong>设置配置信息</strong>：</li>
</ol>
<pre><code class="language-properties">spring.ai.deepseek.api-key=YOUR_API_KEY
spring.ai.deepseek.chat.options.model=deepseek-chat
spring.ai.deepseek.chat.options.temperature=0.8
</code></pre>
<ol start="4">
<li><strong>编写调用代码</strong>：</li>
</ol>
<pre><code class="language-java">@RestController
public class ChatController {

    private final DeepSeekChatModel chatModel;

    @Autowired
    public ChatController(DeepSeekChatModel chatModel) {
        this.chatModel = chatModel;
    }

    // 普通输出
    @GetMapping("/ai/generate")
    public Map generate(@RequestParam(value = "message", defaultValue = "Tell me a joke") String message) {
        return Map.of("generation", chatModel.call(message));
    }

    // 流式输出
    @GetMapping("/ai/generateStream")
	public Flux&lt;ChatResponse&gt; generateStream(@RequestParam(value = "message", defaultValue = "Tell me a joke") String message) {
        var prompt = new Prompt(new UserMessage(message));
        return chatModel.stream(prompt);
    }
}
</code></pre>
<h2 id="小结">小结</h2>
<p>AI 发展速度很快，对各行各业的影响也很大，充分了解和掌握 AI 知识，对日常工作提效或以后跳槽都有很大的帮助，让我们一起行动起来，拥抱这场 AI 盛宴吧。</p>
<blockquote>
<p>本文已收录到我的技术小站 <a href="https://www.javacn.site" target="_blank" rel="noopener nofollow">www.javacn.site</a>，其中包含的内容有：Spring AI、LangChain4j、Dify、Agent、MCP、Function Call、RAG、向量数据库、Prompt、多模态、向量数据库、嵌入模型等内容。</p>
</blockquote>

</div>
<div id="MySignature" role="contentinfo">
    <div style="text-align: center; color: red">
关注下面二维码，订阅更多精彩内容。
<br>
<img style="margin-left: 0px" src="https://images.cnblogs.com/cnblogs_com/vipstone/848916/o_211225130402_gognzhonghao.jpg">
</div>

<div style="display: none">
    <img src="http://icdn.apigo.cn/gitchat/rabbitmq.png?imageView2/0/w/500/h/400">
</div>
<div style="margin-bottom: 50px; display: none">

<img title="微信打赏" src="http://icdn.apigo.cn/myinfo/wchat-pay.png" alt="微信打赏">
<br>

<div style="display: none">
<span style="display: block; position: absolute; height: 40px; top: 50%; margin-top: -20px">关注公众号（加好友）：</span>

<img style="margin-left: 144px" src="http://icdn.apigo.cn/gongzhonghao2.png?imageView2/0/w/120/h/120">
</div>
<p></p>

<div id="AllanboltSignature">
    <p style="border-top: #e0e0e0 1px dashed; border-right: #e0e0e0 1px dashed; border-bottom: #e0e0e0 1px dashed; border-left: #e0e0e0 1px dashed; padding-top: 10px; padding-right: 10px; padding-bottom: 10px; padding-left: 60px; background: url(&quot;https://images.cnblogs.com/cnblogs_com/lloydsheng/239039/o_copyright.gif&quot;) #e5f1f4 no-repeat 1% 50%; font-family: 微软雅黑; font-size: 11px" id="PSignature">
        <br> 作者：
        <a href="http://vipstone.cnblogs.com/" target="_blank">王磊的博客</a>
        <br> 出处：
        <a href="http://vipstone.cnblogs.com/" target="_blank">http://vipstone.cnblogs.com/</a>
        <br>
    </p>
</div></div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.5556683392615741" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-14 14:55">2025-05-14 14:55</span>&nbsp;
<a href="https://www.cnblogs.com/vipstone">磊哥|www.javacn.site</a>&nbsp;
阅读(<span id="post_view_count">335</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18875900);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18875900', targetLink: 'https://www.cnblogs.com/vipstone/p/18875900', title: 'SpringAI更新：废弃tools方法、正式支持DeepSeek！' })">举报</a>
</div>
        