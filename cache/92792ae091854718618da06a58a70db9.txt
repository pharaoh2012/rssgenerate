
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/uzuki/p/18810607" title="发布于 2025-04-05 22:08">
    <span role="heading" aria-level="2">自动驾驶 | 为CarLA添加一辆小米SU7 Part I</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="自动驾驶--为carla添加一辆小米su7-part-i">自动驾驶 | 为CarLA添加一辆小米SU7 Part I</h1>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405215500840-2068008733.png" alt="" loading="lazy"></p>
<h2 id="导言">导言</h2>
<h3 id="什么是carla">什么是CarLA?</h3>
<p>CarLA是一款基于虚幻引擎4（Unreal Engine 4）构建的开源自动驾驶仿真平台，为自动驾驶算法的研发、测试与验证提供高保真的虚拟环境。其核心特性包括：</p>
<ul>
<li><strong>高精度地图与传感器模拟</strong>：支持激光雷达、摄像头、毫米波雷达等多种传感器的物理级仿真。</li>
<li><strong>动态交通场景</strong>：内置行人、车辆、交通信号等交互元素，可模拟复杂城市路况。</li>
<li><strong>模块化设计</strong>：用户可通过Python或C++ API灵活控制环境参数、交通流及智能体行为。</li>
</ul>
<p>通过从源码构建CarLA，我们可以通过UE4编辑器快速便捷地为它添加一款载具。</p>
<h3 id="准备工作">准备工作</h3>
<p>为了将自定义的一款载具添加到CarLA中，你需要做好如下准备工作：</p>
<ul>
<li>已经准备好的载具模型</li>
<li>一份从源码构建的CarLA和UE4编辑器（详见https://carla.readthedocs.io/en/latest/build_windows/#windows-build）</li>
<li>安装好CarLA API的Python环境</li>
<li>最新版本的Blender</li>
</ul>
<p>在本文中，我将以小米 SU7为例，将这款载具添加到CarLA中，你可以在Sketchfab中下载到所需要的资源：<strong><a href="https://sketchfab.com/3d-models/xiaomi-su7-ca2cda599f5341068c992c9f44551bf9" target="_blank" rel="noopener nofollow">https://sketchfab.com/3d-models/xiaomi-su7-ca2cda599f5341068c992c9f44551bf9</a></strong></p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405215529893-495774532.png" alt="" loading="lazy"></p>
<h2 id="准备要导入的载具">准备要导入的载具</h2>
<h3 id="模型准备">模型准备</h3>
<p>首先将你所需要的模型下载到本地并解压，在这里我选择了gltf格式</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405215540230-1410250119.png" alt="" loading="lazy"></p>
<p>打开blender，选择file -&gt; import -&gt; gltf即可导入：</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405215553504-2001018946.png" alt="" loading="lazy"></p>
<p>接下来我们开始检查并整理模型，打开face orientation，检查所有面的内外朝向都没问题（确保没有面的外侧是红色的）</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405215633432-666060393.png" alt="" loading="lazy"></p>
<p>为了方便后续骨骼绑定，我强烈建议将模型划分为四个轮子和车身两个部分：</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405215644338-1902859652.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405215655914-1508654501.png" alt="" loading="lazy"></p>
<p>接下来，我们将模型缩放到以米为单位，并且以x轴为正前方，z轴朝上，并且车轮是刚好接地的：</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405215707221-1912520181.png" alt="" loading="lazy"></p>
<p>（Optional）如果你希望给载具更多细节，可以从官方下载车牌并置于车头和车尾（<a href="https://carla-assets.s3.us-east-005.backblazeb2.com/fbx/LicensePlate.rar%EF%BC%89" target="_blank" rel="noopener nofollow">https://carla-assets.s3.us-east-005.backblazeb2.com/fbx/LicensePlate.rar）</a></p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405215717962-1962994298.png" alt="" loading="lazy"></p>
<h3 id="骨架对齐">骨架对齐</h3>
<p>接下来，我们从官网下载所需要的载具骨架（<a href="https://carla-assets.s3.us-east-005.backblazeb2.com/fbx/VehicleSkeleton.rar%EF%BC%89%EF%BC%8C%E9%80%89%E6%8B%A9file" target="_blank" rel="noopener nofollow">https://carla-assets.s3.us-east-005.backblazeb2.com/fbx/VehicleSkeleton.rar），选择file</a> -&gt; import -&gt; fbx导入到blender中</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405215729602-1842805997.png" alt="" loading="lazy"></p>
<p>五个骨骼为：Vehicle_Base，Wheel_Front_Left，Wheel_Front_Right，Wheel_Rear_Left以及Wheel_Rear_Right，分别对应车身，左前轮，右前轮，左后轮以及右后轮。</p>
<p>小心地将四个轮子的骨骼尾部对齐到车轮的中心</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405215744964-1948526601.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405215755880-629719457.png" alt="" loading="lazy"></p>
<p>接下来为Base和Wheels各添加一个Modifier -&gt; Deform -&gt; Armature，object选择我们的骨架</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405215807806-155803605.png" alt="" loading="lazy"></p>
<h3 id="顶点组绑定">顶点组绑定</h3>
<p>接下来为每个轮子绑定到和四个骨骼同名的顶点组上：</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405215822466-1119808809.png" alt="" loading="lazy"></p>
<p>车身绑定为Vehicle_Base:</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405215836642-860850054.png" alt="" loading="lazy"></p>
<p>做完这些工作之后，理论上你就已经完成了骨骼绑定，你可以通过在Pose Mode下进行摆布验证骨骼是否都被正确绑定了</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405215911457-1502956663.gif" alt="" loading="lazy"></p>
<h3 id="材质命名">材质命名</h3>
<p>在导出之前，强烈建议按照CarLA的材质命名标准（M_CarPart_CarName）进行重新命名：</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405215929482-1291465390.png" alt="" loading="lazy"></p>
<h3 id="导出模型">导出模型</h3>
<p>上述工作都就绪之后，我们可以导出模型，选择file -&gt; export -&gt; fbx，按照图中的设置导出模型</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405215938838-2053142541.png" alt="" loading="lazy"></p>
<h2 id="导入ue4-editor">导入UE4 Editor</h2>
<p>首先打开UE4 Editor，进入Content-&gt;Carla-&gt;Static-&gt;Car-&gt;4Wheeled下新建一个文件夹命名为我们的载具，并将我们导出的fbx进行导入，在导入的时候选择材质继承M_CarPaint_Master，并重载Base Color（不要吐槽画质为什么突然变低了，因为我的UE4是编译在远程的工作机上的）</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405220005695-9743480.png" alt="" loading="lazy"></p>
<p>导入完成之后，我们打开骨骼模型</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405220015714-2135474181.png" alt="" loading="lazy"></p>
<p>但是看着好像和我们在blender看到的模型不太一样</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405220033885-1903432581.png" alt="" loading="lazy"></p>
<p>不用担心，接下来我们把车灯和车窗换成已经有的透明材质（我这里为了偷懒，直接使用了特斯拉现成的车灯材质，大家不要学我，为了美观我还把车漆调成了小米SU7的经典配色）</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405220047964-301676653.png" alt="" loading="lazy"></p>
<h3 id="创建物理资产">创建物理资产</h3>
<p>如图打开物理资产</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405220058070-147332228.png" alt="" loading="lazy"></p>
<p>如图选择四个轮子，选择sphere后重新生成碰撞体</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405220108141-1981542604.png" alt="" loading="lazy"></p>
<p>再把物理类型调成Kinematic</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405220115935-1946568952.png" alt="" loading="lazy"></p>
<p>同理vehicle_base选择为Single Convex Hull之后再重新生成（这样的碰撞基本够用，如果你还需要更精细的类型就需要自行创建模型），物理类型是Default</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405220124517-1759951953.png" alt="" loading="lazy"></p>
<h3 id="创建动画">创建动画</h3>
<p>首先右键新建一个动画蓝图</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405220135136-1456700042.png" alt="" loading="lazy"></p>
<p>父类选择VehicleAnimIsntance，骨骼选择我们已经有的骨骼</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405220147756-1282171104.png" alt="" loading="lazy"></p>
<p>接下来，我们找到Content-&gt;Carla-&gt;Static-&gt;Car-&gt;4Wheeled-&gt;Tesla-&gt;Tesla_Animation并打开，复制蓝图中的所有节点</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405220157196-435782460.png" alt="" loading="lazy"></p>
<p>再见这些节点粘贴到我们刚才新建的动画蓝图中，完成连线并点击左上角的编译，保存并退出</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405220208214-1647052601.png" alt="" loading="lazy"></p>
<h3 id="配置载具蓝图">配置载具蓝图</h3>
<p>打开Content-&gt;Carla-Blueprints-&gt;Vehicles，创建一个新的文件夹并命名为我们的载具</p>
<p>右键选择新建蓝图，选择VehicleWheel，分别为BP_SU7_FrontWheel和BP_SU7_RearWheel</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405220217757-250111762.png" alt="" loading="lazy"></p>
<p>其中FrontWheel如下配置：</p>
<p>Collision Mesh选择为Wheel_Shape，Radius和Width按照实际模型填写（这里因为和特斯拉的车辆尺寸差不多，所以我偷懒了直接使用特斯拉的尺寸），选择不被手刹影响，并且舵角为70</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405220226300-278164938.png" alt="" loading="lazy"></p>
<p>RearWheel也同理，只是勾选可以被手刹影响，并且舵角为0</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405220232333-481243154.png" alt="" loading="lazy"></p>
<p>保存并点击左上角编译之后，我们在原地右键新建一个蓝图，选择BaseVehiclePawn</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405220240432-972797637.png" alt="" loading="lazy"></p>
<p>点击打开，分别在Mesh配置我们刚才准备好的动画、骨骼模型以及VehicleMovement中配置四个轮子的蓝图</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405220247491-1647600136.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405220255445-1249439385.png" alt="" loading="lazy"></p>
<p>点击左上角编译并保存退出</p>
<h3 id="注册载具">注册载具</h3>
<p>打开Content-&gt;Carla-Blueprints-&gt;Vehicles-&gt;VehicleFactory，点开Vehicles</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405220306925-809279884.png" alt="" loading="lazy"></p>
<p>新建一个元素，填入汽车厂商以及型号，并指定为我们刚才创建的载具蓝图，完成之后保存编译退出</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405220313883-653106511.png" alt="" loading="lazy"></p>
<h2 id="测试载具">测试载具</h2>
<p>完成上述所有工作之后，点击右上角的Launch，启动CarLA</p>
<p>待CarLA启动之后，我们打开控制台进入安装有CarLA API的环境，找到官方提供manual_control.py脚本，增加参数--filter su7并启动</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405220335893-206063489.png" alt="" loading="lazy"></p>
<p>接下来请通过<strong>轻推w键</strong>以享受你的驾驶之旅！</p>
<p><img src="https://img2024.cnblogs.com/blog/1887071/202504/1887071-20250405220347306-121773048.png" alt="" loading="lazy"></p>
<h2 id="结语">结语</h2>
<p>本文讲述如何将一个模型作为载具添加到CarLA模拟器中，但是注意，目前这个载具还不支持<strong>灯光开关</strong>、<strong>车门开闭</strong>以及<strong>LiDAR光线反射</strong>，我们会在下一个部分进行讲述（如果我还没有弃坑的话）</p>
<h2 id="参考文献">参考文献</h2>
<p><a href="https://carla.readthedocs.io/en/latest/tuto_A_add_vehicle/#add-a-new-vehicle" target="_blank" rel="noopener nofollow">https://carla.readthedocs.io/en/latest/tuto_A_add_vehicle/#add-a-new-vehicle</a></p>
<p><a href="https://www.youtube.com/watch?v=0F3ugwkISGk" target="_blank" rel="noopener nofollow">https://www.youtube.com/watch?v=0F3ugwkISGk</a></p>
<p><a href="https://github.com/carla-simulator/carla/issues/1779" target="_blank" rel="noopener nofollow">https://github.com/carla-simulator/carla/issues/1779</a></p>
<p><a href="https://sketchfab.com/3d-models/xiaomi-su7-ca2cda599f5341068c992c9f44551bf9" target="_blank" rel="noopener nofollow">https://sketchfab.com/3d-models/xiaomi-su7-ca2cda599f5341068c992c9f44551bf9</a></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.5356637806516203" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-05 22:14">2025-04-05 22:08</span>&nbsp;
<a href="https://www.cnblogs.com/uzuki">Uzuki</a>&nbsp;
阅读(<span id="post_view_count">41</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18810607" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18810607);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18810607', targetLink: 'https://www.cnblogs.com/uzuki/p/18810607', title: '自动驾驶 | 为CarLA添加一辆小米SU7 Part I' })">举报</a>
</div>
        