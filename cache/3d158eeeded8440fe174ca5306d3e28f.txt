
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/jinjiangongzuoshi/p/18964992" title="发布于 2025-07-04 09:19">
    <span role="heading" aria-level="2">【Cursor保姆级教程】零基础小白从安装到实战，手把手教你玩转AI编程神器！</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p><img src="https://files.mdnice.com/user/3808/8d2e16b6-6ebf-4911-96d1-e146c557bd86.png" alt="" loading="lazy"></p>
<h2 id="1什么是ai编程">1、什么是AI编程？</h2>
<p>在传统的编程模式中，开发程序是一项高度专业化的任务。程序员需要具备深厚的技术背景，掌握至少一门编程语言比如<code>Python</code>、<code>Java</code>、<code>C++</code>等等。并且要对复杂的逻辑和算法有清晰的理解。他们通过编写一行行代码，精确地告诉计算机每一步该怎么做。但这个过程需要深厚的专业知识、严谨的逻辑思维和极大的耐心。且门槛较高、开发周期较长。</p>
<p>然而，随着AI人工智能技术的飞速发展，编程的方式正在迎来革命性的变化。现在，我们迎来了一个全新的阶段：你不再需要精通晦涩难懂的编程语法，甚至不需要直接面对复杂的代码编辑器。取而代之的是，你可以像和朋友聊天一样，用自然、日常的语言，向一个强大的AI大模型（比如我们常说的<code>DeepSeek</code>、<code>ChatGPT</code>、<code>豆包</code>等）描述你的需求。</p>
<p>想象一下，你只需要告诉AI：“我想要一个能计算两个数之和的小程序。” 或者 “帮我设计一个简单的网页，上面有个按钮，点击后能显示‘你好，世界！’”。然后，这个AI大模型就像一个超级能干的编程助手，它会理解你的意图，迅速生成相应的代码，甚至可能是一个可以直接运行的程序。</p>
<p>所以，我们可以这样理解：<strong>用自然语言进行“对话” + 背后强大的“AI大模型”智能处理 = 这就是AI编程的核心。</strong></p>
<p><img src="https://files.mdnice.com/user/3808/0360e8b7-2f4f-4710-b3e0-d9531615ed2f.jpg" alt="" loading="lazy"></p>
<p><strong>AI编程的核心</strong>在于利用强大的AI大模型来辅助甚至主导编程过程。这些AI大模型经过海量数据的训练，具备了理解和生成代码的能力。通过简单的对话聊天，即使是非专业的用户，也能够与AI大模型交互，快速生成所需的程序代码。</p>
<p>这种模式的出现，极大地降低了编程的门槛，使得更多的人能够参与到软件开发中来。无论是初学者还是有一定基础的开发者，都可以借助AI大模型的智能辅助，快速实现自己的想法，提高开发效率。</p>
<h2 id="2市面上流行的ai编程ide区别与对比">2、市面上流行的AI编程IDE区别与对比</h2>
<p>市面上流行的AI编程IDE（集成开发环境）有很多，下面对比几款主流AI编程工具，看看它们各自的特点和区别。</p>
<table>
<thead>
<tr>
<th><strong>工具名称</strong></th>
<th><strong>类型</strong></th>
<th><strong>核心功能</strong></th>
<th><strong>支持模型</strong></th>
<th><strong>价格</strong></th>
<th><strong>优势</strong></th>
<th><strong>劣势</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>GitHub Copilot</strong></td>
<td>IDE插件</td>
<td>代码补全、Copilot Chat、支持多种语言</td>
<td>GPT-4o、Claude 3.7等</td>
<td>个人用户每月10美元或每年100美元</td>
<td>代码补全能力强、支持广泛语言、成熟社区</td>
<td>对整个代码库的理解有限，基本重构能力较弱</td>
</tr>
<tr>
<td><strong>Cursor AI</strong></td>
<td>独立IDE</td>
<td>代码生成、重构、自然语言编辑、多文件协作</td>
<td>OpenAI系列、Claude系列、DeepSeek系列</td>
<td>免费版，Pro版每月20美元</td>
<td><strong>AI编程第一选择</strong>，最强AI编程IDE，接入新模型的速度非常，适合专业开发</td>
<td>价格较高</td>
</tr>
<tr>
<td><strong>Windsurf IDE</strong></td>
<td>独立IDE</td>
<td>AI Flow动态思维画布、实时差分评估、本地优先AI</td>
<td>OpenAPI系列、DeepSeek系列</td>
<td>免费版，Pro版每月15美元</td>
<td>本地运行AI模型、快速性能、以Web为中心</td>
<td>还不够成熟，需要高端硬件</td>
</tr>
<tr>
<td><strong>Trae</strong></td>
<td>独立IDE</td>
<td>自然语言到代码的转化、低代码开发</td>
<td>Claude 3.5、DeepSeek R1</td>
<td>免费</td>
<td>国产工具，免费且有潜力</td>
<td>功能相对基础，社区支持有限</td>
</tr>
<tr>
<td><strong>Codeium</strong></td>
<td>IDE插件</td>
<td>代码生成、聊天、搜索功能</td>
<td>未明确</td>
<td>免费</td>
<td>免费使用，支持多种语言和IDE</td>
<td>功能相对基础</td>
</tr>
</tbody>
</table>
<p><strong>简单小结一下：</strong></p>
<ul>
<li>如果你要深度体验一波AI编程的魅力，首选<strong>Cursor</strong>。Cursor 是一款以 AI 为核心的代码编辑器，它基于 Visual Studio Code（VS Code）开发，继承了 VS Code 的强大功能，并在此基础上加入了深度集成的 AI 功能。</li>
<li>如果你是国产爱好者且想免费白嫖，首选字节跳动出品的Trae。</li>
</ul>
<h2 id="3cursor免费和收费的区别怎么充值">3、Cursor免费和收费的区别、怎么充值？</h2>
<p><code>Cursor</code>功能虽强大，但也分为免费版和收费版，不同版本之间功能区别较大。</p>
<h3 id="31-免费和收费区别">3.1 免费和收费区别</h3>
<p>以下是Cursor免费版和收费版（Pro版）的区别，以及如何进行充值的说明：<br>
<img src="https://files.mdnice.com/user/3808/12eaf182-1b5c-42bc-a9f9-54cbbdfd638c.png" alt="" loading="lazy"></p>
<p><strong>1、免费版</strong></p>
<p>免费只能使用差的模型，没法使用最强的编程模型，每个月只能使用50次请求<br>
可能还会有更多限制，cursor免费用户的限制随着时间一直在增加。</p>
<p><strong>2、收费版（Pro）</strong></p>
<p>无限次tab使用、每月500次高速请求，可使用各种最好的编程模型，也可以使用MAX模式，每月$20（约合人民币140元），年付更优惠。</p>
<h3 id="32-如何充值">3.2 如何充值？</h3>
<p>在 Cursor 官网登录账户后，进入订阅页面，选择 Pro 版或 Business 版，点击“Get Started”或“开始使用”按钮。</p>
<p><img src="https://files.mdnice.com/user/3808/14d76e55-b715-4026-8133-2f9023013d88.png" alt="" loading="lazy"></p>
<p>选择支付方式，如国内用户选择支付宝即可。</p>
<h2 id="4cursor界面介绍及插件安装">4、Cursor界面介绍及插件安装</h2>
<p>1、安装下载，访问： <code>https://www.kjdaohang.com/</code>，站内搜索:<code>cursor</code>，进入Cursor工具页面</p>
<p><img src="https://files.mdnice.com/user/3808/cf4cc847-33e4-4270-a07c-33deb87eb3ba.png" alt="" loading="lazy"></p>
<p>点击访问工具按钮，即可进入工具官网页面，点击注册。</p>
<p><img src="https://files.mdnice.com/user/3808/71a099ba-ed88-47dc-a788-c49d5a011b06.png" alt="image" loading="lazy"><br>
输入邮箱，注意目前QQ邮箱不行了，可以用如163邮箱等，也可以直接用Google或Github帐号登录，接着下载安装Cursor 客户端，傻瓜式安装即可（当前最新版本为<code>Cursor 1.0.0</code>版本）。</p>
<p><img src="https://files.mdnice.com/user/3808/9772c216-cefa-4fd9-b2cc-a190965aadef.png" alt="" loading="lazy"></p>
<blockquote>
<p>新注册的账号模型调用次数是有限的，免费调用次数为150次，用完就需要付费，可以去付费订阅独享，也可以去某宝选择。</p>
</blockquote>
<p>2、安装完成后，打开Cursor IDE，如果你使用过 VScode，那么你应该很熟悉Cursor IDE界面，因为它就是 VScode 界面:</p>
<p><img src="https://files.mdnice.com/user/3808/62776cb8-38b9-4170-a472-61d2948f26e0.png" alt="旧版cursor界面" loading="lazy"></p>
<blockquote>
<p>上述有讲过Cursor本质上，就是在VSCode基础上进行二次开发，集成了AI能力而已。</p>
</blockquote>
<p>3、按需安装必要插件，安装方式和VSCode一样，如果你之前电脑有安装过VSCode，也可以直接将VSCode插件配置直接导入过来。</p>
<p>4、假如你是个纯小白，作为小白使用者，首次打开Cursor，会看到一堆英文，，此时你的内心会有点懵（什么乱七八糟的 hhh）。别担心！教你如何先把界面改成中文:</p>
<p><img src="https://files.mdnice.com/user/3808/395e2257-f599-4edc-93a3-75289c1b6ee4.png" alt="" loading="lazy"></p>
<p>5、按下 <code>Ctrl + Shift + P</code> (Mac 是Command + Shift + P)，输入 "language"→ 选择 "Configure Display Language"→ 选择 "中文(简体)"，重启 Cursor，界面就变成中文啦！</p>
<p><img src="https://files.mdnice.com/user/3808/f13001dc-acb3-442c-8786-0c896373db43.png" alt="" loading="lazy"></p>
<p>6、参照同样的方式，安装其它所需的插件，接下来，还可以进行一些Cursor配置，打开<code>Cursor Setting</code>配置界面<br>
<img src="https://files.mdnice.com/user/3808/b54f4d26-774e-43e1-9787-1c4b68e33fda.png" alt="" loading="lazy"></p>
<p>由于 Cursor 工具嵌入了很多模型，包括 <code>deepseek、gpt、claude、gemini</code> 等等，选择自己喜欢的模型，在<strong>Models</strong>中，配置和选择你所需要的AI大模型即可。</p>
<p>7、<strong>Cursor在AI对话时，应该选择什么样的模型？</strong> 如果你是Cursor pro用户，</p>
<ul>
<li><code>claude-4-sonnet</code>能应付90%的需求，适合细节调整，作为首选。</li>
<li><code>claude-4-sonnet-thinking</code> 适合规划，大的模块第一次设计，后面调整使用claude-4-sonnet</li>
<li><code>claude-3.7-sonnet</code>，当上面效果不好，可以试试这个</li>
<li><code>Gemini-pro-0506</code> 以上上面效果不好，可以试试</li>
<li>... 以此类推</li>
</ul>
<h2 id="5cursor对话模式">5、Cursor对话模式</h2>
<p>Cursor对话模式设计灵活，覆盖了从简单问答到复杂代码生成的多种需求。</p>
<p><img src="https://files.mdnice.com/user/3808/7e73beeb-9e54-4371-9394-3b271780ea89.png" alt="" loading="lazy"></p>
<table>
<thead>
<tr>
<th><strong>模式</strong></th>
<th><strong>特点</strong></th>
<th><strong>适应场景</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Agent 模式</strong></td>
<td>- 自动读取代码库并理解项目结构<br>- 自动生成代码、创建文件、处理文件依赖关系<br>- 提供 Accept/Reject 按钮供用户选择是否采用更改</td>
<td>- 需要快速生成代码、自动完成多步骤任务的场景<br>- 适合大型项目开发，尤其是需要 AI 自动处理文件和依赖关系的情况</td>
</tr>
<tr>
<td><strong>Ask 模式</strong></td>
<td>- 只读模式，不自动修改代码<br>- 可以提问关于代码的问题，获取建议和解释<br>- 需要手动点击 Apply 按钮应用更改</td>
<td>- 学习和探索代码库<br>- 理解代码逻辑、调试问题<br>- 获取关于代码优化或技术概念的建议</td>
</tr>
<tr>
<td><strong>Manual 模式</strong></td>
<td>- 完全依照用户指示行动<br>- 不会自主探索或修改其他文件<br>- 适合精确、定向的代码修改</td>
<td>- 需要对特定代码片段进行精确修改的场景<br>- 适合小范围的代码更新</td>
</tr>
<tr>
<td><strong>Background  模式</strong></td>
<td>- 从 0.50 版本开始官方重点推荐的内容<br>- 可以派一些 Agent 在远程服务器上帮你干活<br>- 在后台默默干活且是异步的，不耽误你干别的</td>
<td>- 后台异步执行任务<br>- Background Agent目前只能使用兼容 Max mode 的模型，计费也是基于 Token 使用量</td>
</tr>
</tbody>
</table>
<p><strong>小结一下：</strong></p>
<ul>
<li><strong>Agent 模式</strong> 是 Cursor 的默认模式，适合需要自动化处理复杂任务的场景。</li>
<li><strong>Ask 模式</strong> 更适合学习和探索代码库，因为它不会自动修改代码。</li>
<li><strong>Manual 模式</strong> 则适合那些已经清楚需求，只需要 AI 协助完成具体编码的场景。</li>
<li><strong>Background 模式</strong> 则适合那些需后台执行或者异步执行的任务。</li>
</ul>
<h2 id="6cursor-rules的使用">6、Cursor Rules的使用</h2>
<h3 id="61-什么是-cursor-rules">6.1 什么是 Cursor Rules？</h3>
<p><code>Cursor Rules</code> 是一种用户定义的规则集，可以嵌入到项目中，用于指导 AI 如何生成或修改代码。通过这些规则，开发者可以：</p>
<ul>
<li>定制 AI 行为：根据项目需求调整 AI 的响应方式。</li>
<li>保持一致性：定义编码风格、最佳实践，确保生成的代码符合项目规范。</li>
<li>提供上下文信息：让 AI 了解项目结构、常用方法或特定库，从而生成更符合需求的代码。</li>
<li>提高开发效率：减少手动调整代码的时间，让 AI 生成更精准的代码。</li>
</ul>
<p>简单来说，<strong>Cursor Rules</strong> 就像给 AI 一份“说明书”，告诉它如何更好地服务你的项目。</p>
<h3 id="62-规则类型">6.2 规则类型</h3>
<p>Cursor 提供两种规则类型：</p>
<ul>
<li><strong>User Rules：</strong> 全局规则，适用于所有项目，可在 Cursor 设置中配置。用于设置通用规则，例如输出语言、响应长度、输出样式等。当你希望在整个开发环境中保持统一的风格或行为时，可以使用 User Rules。</li>
<li><strong>Project Rules：</strong> 项目特定规则，存储在项目根目录的 .cursor/rules 文件夹中，适用于特定项目。支持更细粒度的控制，例如为不同文件类型设置不同的规则。当项目复杂，需要针对不同部分（如 Python 文件、React 组件）定义不同规则时，Project Rules 是最佳选择。</li>
</ul>
<h3 id="63-如何创建和使用-cursor-rules">6.3 如何创建和使用 Cursor Rules？</h3>
<p>1、创建 User Rules，打开 Cursor 设置（Cursor Settings），进入 Rules 面板，添加或编辑规则。例如：</p>
<p><img src="https://files.mdnice.com/user/3808/ecfa1ae1-f368-442f-90f9-ac988c9cbd6b.png" alt="" loading="lazy"></p>
<p>2、创建 Project Rules，在项目根目录创建 .cursor/rules 文件夹，在该文件夹中创建 .mdc 规则文件，例如 001-project-overview.mdc，使用 Markdown 格式编写规则内容。例如：</p>
<pre><code># 项目概览

## 项目名称
[你的项目名称]

## 项目描述
[简要描述项目的目的和功能]

## 技术栈
- 前端：React
- 后端：Node.js
- 数据库：MySQL
- 部署：Docker
</code></pre>
<p>3、在 Cursor 的 <code>Agent</code> 模式下，AI 会自动应用匹配的规则。也可以在 Cursor 的对话框中使用 <code>/Generate Cursor Rules</code> 命令，让 AI 自动生成项目规则。</p>
<h4 id="64-规则应用">6.4 规则应用</h4>
<p>规则应用分为四种方式：</p>
<ul>
<li><strong>Always:</strong> 每次都会把内容加入到上下文中</li>
<li><strong>Manual:</strong>  需要你手动@进去</li>
<li><strong>Agent:</strong>  让cursor根据你的描述自己判断是否加入到上下文中</li>
<li><strong>Autoattached:</strong>  根据文件后缀匹配是否要加入到上下文中</li>
</ul>
<p>通过合理使用 Cursor Rules，开发者可以显著提升代码质量、一致性和开发效率。</p>
<h2 id="7高效率对话技巧及开发方式">7、高效率对话技巧及开发方式</h2>
<p>Cursor功能非常强大，但也取决于你是如何使用它的。使用方式的不同，能发挥出AI编程效率多少也会随之不同。接下来分享几个Cursor或者说是AI编程高效率对话的技巧和建议:</p>
<h3 id="71-明确需求">7.1 明确需求</h3>
<p>在与AI对话时，尽量用简洁明了的语言描述你的需求。例如，不要说“帮我写一个功能”，而是说“帮我写一个函数，用于计算两个数字的平均值”。</p>
<p>如果需求复杂，可以分步骤描述，避免让AI一次性处理过多信息。例如，先生成函数框架，再逐步添加逻辑。对于大型项目，可以先生成模块结构，再逐步填充每个模块的代码。</p>
<blockquote>
<p><strong>明确需求的核心在于</strong>，要向AI说清楚你的这个功能需要解决什么问题？”或“用户使用场景是什么？”，你的目标是做个什么功能，功能描述和具体要求有哪些？</p>
</blockquote>
<h3 id="72-使用关键词">7.2 使用关键词</h3>
<p>在描述需求时，使用一些关键词可以帮助AI更快理解你的意图。例如，“函数”、“类”、“算法”、“优化”等。<br>
对于特定的技术或框架，明确提到它们的名称，比如“React组件”、“Django模型”等。</p>
<h3 id="73-提供上下文">7.3 提供上下文</h3>
<p>如果你正在处理一个具体的项目，提供一些上下文信息可以帮助AI更好地理解你的需求。例如，提到项目的目标、技术栈或已有的代码结构。对于复杂问题，可以提供代码片段或文件路径，让AI更好地定位问题。</p>
<p>在 <code>Cursor</code> 的 AI 输入框中，通过使用 <code>@</code>，将出现一个带有建议列表的弹出菜单，可以使用向上/向下箭头键浏览建议列表，按 <code>Enter</code> 键进行选择，然后在 <code>@</code> 后输入内容以进一步筛选选项，通过该方式添加上下文描述到问题中。<br>
<img src="https://files.mdnice.com/user/3808/4e61de3c-1541-4bd1-a24d-184c72758427.png" alt="" loading="lazy"></p>
<p>下来我们将介绍每个选项的功能：</p>
<ul>
<li>@Files&amp;@Folders  （文件或文件夹）: 引用项目中的具体文件或某个文件夹。</li>
<li>@Code （代码） : 引用代码的特定部分。</li>
<li>@Docs （文档） ：Cursor 附带一组第三方文档，这些文档已爬取、索引并准备好用作上下文。可以使用 @Docs 符号访问它们</li>
<li>@Git : 将 git 提交、差异或拉取请求添加到提示中</li>
<li>@Notepad : 临时记录和编辑文本</li>
<li>@Suggested ：针对文件提供建议</li>
<li>@Codebase : 高级代码库搜索，查找要使用的代码段。</li>
<li>@Web : 根据查询和提供的上下文构建搜索查询，并在 Web 上搜索以查找相关信息作为附加上下文。</li>
</ul>
<h3 id="74-反馈与修正">7.4 反馈与修正</h3>
<p>如果AI生成的内容不符合你的预期，及时反馈并修正。例如，你可以直接指出问题所在，或者提供更详细的说明。<br>
使用“接受”或“拒绝”按钮来明确告诉AI你的选择。</p>
<h3 id="75-利用模板规则和快捷命令">7.5 利用模板、规则和快捷命令</h3>
<p>许多AI工具支持模板、规则或快捷命令，例如“/generate”、“/optimize”等。熟悉这些命令可以节省时间。<br>
为常用任务创建自定义模板，以便快速调用。</p>
<p>除此之外，Cursor 的 AI 功能是其核心亮点，以下常用的快捷键可帮助您更高效地使用 AI 辅助功能：</p>
<ul>
<li>Tab: 接受 AI 提供的代码建议或自动补全。</li>
<li>Ctrl/Cmd + B: 显示或隐藏资源管理器面板。</li>
<li>Ctrl/Cmd + K：打开 AI 提示栏，用于生成新代码或编辑现有代码。</li>
<li>Ctrl/Cmd + L：打开 AI 聊天面板，可用于提问、编辑代码或对整个项目进行操作。</li>
<li>Ctrl/Cmd + I：打开 AI 代理，用于跨文件编辑代码或对整个项目进行开发。</li>
<li>Ctrl/Cmd + /：在 AI 模型之间切换，例如 GPT-4 和 Claude 3.5。</li>
<li>Ctrl/Cmd + Alt + L：打开聊天历史记录。</li>
<li>Ctrl/Cmd + Shift + P：打开命令面板，可用于访问 VS Code 设置或 Cursor 特定功能。</li>
</ul>
<p>Cursor 允许您在设置中重新映射快捷键，以适应个人使用习惯。</p>
<p>初学者建议：从 Tab（接受代码建议）、Ctrl/Cmd + K（生成代码）和 Ctrl/Cmd + L（AI 聊天）开始，这些快捷键是 Cursor 的核心功能。</p>
<h2 id="8小结">8、小结</h2>
<p>AI编程的出现，不仅改变了编程的方式，更让编程变得更加普及和便捷。它让技术不再局限于专业人士，而是成为每个人都可以掌握和使用的工具。</p>
<p>而<strong>编程</strong>也不再仅仅是专业人士的专属技能，更像是一种人人可以尝试的、更直观、更友好的创造方式。AI编程降低了编程的门槛，让更多人能够参与到创造数字产品的过程中来，同时也让专业程序员能够从繁琐的基础编码工作中解放出来，专注于更具创造性和战略性的任务。</p>
<blockquote>
<p>好了，今天的分享就到这里，你学会了吗？更多AI编程工具或玩法，可访问ww.kjdaohang.com网站了解更多，如果补充，欢迎评论区留言~</p>
</blockquote>

</div>
<div id="MySignature" role="contentinfo">
    技术改变世界！
         --狂诗绝剑
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-04 09:19">2025-07-04 09:19</span>&nbsp;
<a href="https://www.cnblogs.com/jinjiangongzuoshi">狂师</a>&nbsp;
阅读(<span id="post_view_count">124</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18964992);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18964992', targetLink: 'https://www.cnblogs.com/jinjiangongzuoshi/p/18964992', title: '【Cursor保姆级教程】零基础小白从安装到实战，手把手教你玩转AI编程神器！' })">举报</a>
</div>
        