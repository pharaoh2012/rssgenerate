
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/kybs0/p/18642076" title="发布于 2024-12-30 18:11">
    <span role="heading" aria-level="2">WPF 记录鼠标、触摸多设备混合输入场景问题</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>本文记录在WPF应用中鼠标、触摸混合输入，鼠标事件抬起时不会有MouseUp事件触发的问题。</p>
<p>事件输入我们都知道有3类：鼠标、触摸、触笔，鼠标是windows系统出来就有的事件，后面加了触笔、触摸。</p>
<p>1.鼠标输入，只会触发Mouse冒泡隧道事件；</p>
<p>2.触笔输入，会触发除了Stylus事件外，还会触发Mouse事件；</p>
<p>3.触摸输入，触发Touch事件、Stylus事件、Mouse事件。</p>
<p>如何区分三类事件可以参考&nbsp;<a href="https://www.cnblogs.com/kybs0/p/14888287.html">WPF 屏幕点击的设备类型 - 唐宋元明清2188 - 博客园</a>，封装所有事件类型（包括Button阻止冒泡事件场景）整合成一个Device事件可以参考&nbsp;<a href="https://www.cnblogs.com/kybs0/p/18325065">WPF 设备输入事件封装 - 唐宋元明清2188 - 博客园</a></p>
<p>和小伙伴在定位PPT批注翻页问题时，发现在以WIN32跨进程设置父子窗口后再调动PPT上下翻页，批注触摸操作只会触发Mouse事件，但此Mouse事件只有Down没有Up，这类触摸只转鼠标的场景后面我单独描述下。当我尝试使用鼠标+触摸混合操作时，也能复现Mouse没有Up抬起事件。</p>
<p>鼠标+触摸，复现步骤：<br>1.鼠标按下</p>
<p>2.在其它位置触摸按下</p>
<p>3.鼠标抬起</p>
<p>4.触摸抬起</p>
<p>我们看看WPF真实反馈的事件输出，UI监听下面几个冒泡事件：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 128, 1)">1</span>     &lt;Grid Background=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">LightGray</span><span style="color: rgba(128, 0, 0, 1)">"</span>
<span style="color: rgba(0, 128, 128, 1)">2</span>           MouseDown=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">UIElement_OnMouseDown</span><span style="color: rgba(128, 0, 0, 1)">"</span> MouseUp=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">UIElement_OnMouseUp</span><span style="color: rgba(128, 0, 0, 1)">"</span>
<span style="color: rgba(0, 128, 128, 1)">3</span>           StylusDown=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">UIElement_OnStylusDown</span><span style="color: rgba(128, 0, 0, 1)">"</span> StylusUp=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">UIElement_OnStylusUp</span><span style="color: rgba(128, 0, 0, 1)">"</span>
<span style="color: rgba(0, 128, 128, 1)">4</span>           TouchDown=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">UIElement_OnTouchDown</span><span style="color: rgba(128, 0, 0, 1)">"</span> TouchUp=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">UIElement_OnTouchUp</span><span style="color: rgba(128, 0, 0, 1)">"</span>&gt;
<span style="color: rgba(0, 128, 128, 1)">5</span>     &lt;/Grid&gt;</pre>
</div>
<p>记录下输出事件，下面区分了鼠标、触摸、触笔：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 128, 1)"> 1</span>     <span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">void</span> UIElement_OnMouseDown(<span style="color: rgba(0, 0, 255, 1)">object</span><span style="color: rgba(0, 0, 0, 1)"> sender, MouseButtonEventArgs e)
</span><span style="color: rgba(0, 128, 128, 1)"> 2</span> <span style="color: rgba(0, 0, 0, 1)">    {
</span><span style="color: rgba(0, 128, 128, 1)"> 3</span>         <span style="color: rgba(0, 0, 255, 1)">if</span> (e.StylusDevice != <span style="color: rgba(0, 0, 255, 1)">null</span>) <span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)">;
</span><span style="color: rgba(0, 128, 128, 1)"> 4</span>         Debug.WriteLine(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">UIElement_OnMouseDown</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
</span><span style="color: rgba(0, 128, 128, 1)"> 5</span> <span style="color: rgba(0, 0, 0, 1)">    }
</span><span style="color: rgba(0, 128, 128, 1)"> 6</span>     <span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">void</span> UIElement_OnMouseUp(<span style="color: rgba(0, 0, 255, 1)">object</span><span style="color: rgba(0, 0, 0, 1)"> sender, MouseButtonEventArgs e)
</span><span style="color: rgba(0, 128, 128, 1)"> 7</span> <span style="color: rgba(0, 0, 0, 1)">    {
</span><span style="color: rgba(0, 128, 128, 1)"> 8</span>         <span style="color: rgba(0, 0, 255, 1)">if</span> (e.StylusDevice != <span style="color: rgba(0, 0, 255, 1)">null</span>) <span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)">;
</span><span style="color: rgba(0, 128, 128, 1)"> 9</span>         Debug.WriteLine(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">UIElement_OnMouseUp</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
</span><span style="color: rgba(0, 128, 128, 1)">10</span> <span style="color: rgba(0, 0, 0, 1)">    }
</span><span style="color: rgba(0, 128, 128, 1)">11</span> 
<span style="color: rgba(0, 128, 128, 1)">12</span>     <span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">void</span> UIElement_OnStylusDown(<span style="color: rgba(0, 0, 255, 1)">object</span><span style="color: rgba(0, 0, 0, 1)"> sender, StylusDownEventArgs e)
</span><span style="color: rgba(0, 128, 128, 1)">13</span> <span style="color: rgba(0, 0, 0, 1)">    {
</span><span style="color: rgba(0, 128, 128, 1)">14</span>         <span style="color: rgba(0, 0, 255, 1)">if</span> (e.StylusDevice.TabletDevice.Type !=<span style="color: rgba(0, 0, 0, 1)"> TabletDeviceType.Stylus)
</span><span style="color: rgba(0, 128, 128, 1)">15</span> <span style="color: rgba(0, 0, 0, 1)">        {
</span><span style="color: rgba(0, 128, 128, 1)">16</span>             <span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)">;
</span><span style="color: rgba(0, 128, 128, 1)">17</span> <span style="color: rgba(0, 0, 0, 1)">        }
</span><span style="color: rgba(0, 128, 128, 1)">18</span>         Debug.WriteLine(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">UIElement_OnStylusDown</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
</span><span style="color: rgba(0, 128, 128, 1)">19</span> <span style="color: rgba(0, 0, 0, 1)">    }
</span><span style="color: rgba(0, 128, 128, 1)">20</span>     <span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">void</span> UIElement_OnStylusUp(<span style="color: rgba(0, 0, 255, 1)">object</span><span style="color: rgba(0, 0, 0, 1)"> sender, StylusEventArgs e)
</span><span style="color: rgba(0, 128, 128, 1)">21</span> <span style="color: rgba(0, 0, 0, 1)">    {
</span><span style="color: rgba(0, 128, 128, 1)">22</span>         <span style="color: rgba(0, 0, 255, 1)">if</span> (e.StylusDevice.TabletDevice.Type !=<span style="color: rgba(0, 0, 0, 1)"> TabletDeviceType.Stylus)
</span><span style="color: rgba(0, 128, 128, 1)">23</span> <span style="color: rgba(0, 0, 0, 1)">        {
</span><span style="color: rgba(0, 128, 128, 1)">24</span>             <span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)">;
</span><span style="color: rgba(0, 128, 128, 1)">25</span> <span style="color: rgba(0, 0, 0, 1)">        }
</span><span style="color: rgba(0, 128, 128, 1)">26</span>         Debug.WriteLine(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">UIElement_OnStylusUp</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
</span><span style="color: rgba(0, 128, 128, 1)">27</span> <span style="color: rgba(0, 0, 0, 1)">    }
</span><span style="color: rgba(0, 128, 128, 1)">28</span> 
<span style="color: rgba(0, 128, 128, 1)">29</span>     <span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">void</span> UIElement_OnTouchDown(<span style="color: rgba(0, 0, 255, 1)">object</span>?<span style="color: rgba(0, 0, 0, 1)"> sender, TouchEventArgs e)
</span><span style="color: rgba(0, 128, 128, 1)">30</span> <span style="color: rgba(0, 0, 0, 1)">    {
</span><span style="color: rgba(0, 128, 128, 1)">31</span>         Debug.WriteLine(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">UIElement_OnTouchDown</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
</span><span style="color: rgba(0, 128, 128, 1)">32</span> <span style="color: rgba(0, 0, 0, 1)">    }
</span><span style="color: rgba(0, 128, 128, 1)">33</span>     <span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">void</span> UIElement_OnTouchUp(<span style="color: rgba(0, 0, 255, 1)">object</span>?<span style="color: rgba(0, 0, 0, 1)"> sender, TouchEventArgs e)
</span><span style="color: rgba(0, 128, 128, 1)">34</span> <span style="color: rgba(0, 0, 0, 1)">    {
</span><span style="color: rgba(0, 128, 128, 1)">35</span>         Debug.WriteLine(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">UIElement_OnTouchUp</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
</span><span style="color: rgba(0, 128, 128, 1)">36</span>     }</pre>
</div>
<p>输出结果如下，<span style="color: rgba(255, 0, 0, 1)"><strong>鼠标+触摸混合操作时MouseUp事件被吞了</strong></span>：</p>
<p><img src="https://img2024.cnblogs.com/blog/685541/202412/685541-20241230144317410-1496199479.png" alt="" loading="lazy"></p>
<p>我们用Snoop抓事件列表，Grid层鼠标按下后就没有后续了：</p>
<p><img src="https://img2024.cnblogs.com/blog/685541/202412/685541-20241230180553562-80312582.png" alt="" loading="lazy"></p>
<p>有意思的是，鼠标重新按下抬起时，是有正常的MouseDown、MouseUp事件触发，所以只是之前那一次MouseUp未触发：</p>
<p><img src="https://img2024.cnblogs.com/blog/685541/202412/685541-20241230145342613-2024445259.png" alt="" loading="lazy"></p>
<p>然后找了台Surface，使用鼠标+触笔按上面路径验证，也是有同样问题：</p>
<p><img src="https://img2024.cnblogs.com/blog/685541/202412/685541-20241230151421257-518281316.png" alt="" loading="lazy"></p>
<p>但是我发现<span style="color: rgba(51, 153, 102, 1)"><strong>使用触摸板+触笔，MouseUp事件正常触发了。。。&nbsp;</strong></span></p>
<p><img src="https://img2024.cnblogs.com/blog/685541/202412/685541-20241230151650568-576663888.png" alt="" loading="lazy"></p>
<p>所以这WPF框架问题，还区分鼠标、触摸板？我们看TouchPad设备的原理：<a href="https://learn.microsoft.com/zh-cn/windows/apps/design/input/identify-input-devices" rel="noopener nofollow">标识输入设备 - Windows apps | Microsoft Learn</a>、<a href="https://learn.microsoft.com/zh-cn/windows/apps/design/input/touchpad-interactions" rel="noopener nofollow">触控板交互 - Windows apps | Microsoft Learn</a>，触摸板可以实现鼠标+多点触摸的功能，但单指操作时并不是鼠标或者触摸，如果要区分的话就需要通过其它其它途径。比如这篇文章有说相比正常的鼠标操作，触摸板返回鼠标消息时GetMessageExtraInfo()函数返回值是0：&nbsp;<a href="https://cloud.tencent.com/developer/ask/sof/1079930" rel="noopener nofollow">如何区分触摸板和鼠标设备生成的WM_MOUSE***消息？-腾讯云开发者社区-腾讯云</a></p>
<p>这个问题目前没有解决方案，上面跨进程设置父子窗口导致鼠标失效的问题，可以在触摸事件输入后判断上一次操作是否为鼠标事件，然后手动触发相应鼠标抬起事件的业务逻辑。另外同一控件多设备混合输入场景比较少见，白板、批注等应用可能使用到，也可以同样修复补偿下，或者在设备输入事件封装内处理&nbsp;<a href="https://www.cnblogs.com/kybs0/p/18325065">WPF 设备输入事件封装 - 唐宋元明清2188 - 博客园</a></p>
<p>&nbsp;</p>
</div>
<div id="MySignature" role="contentinfo">
    <div>作者：<a href="http://www.cnblogs.com/kybs0/" target="_blank">唐宋元明清2188</a></div>
<div>出处：<a href="http://www.cnblogs.com/kybs0/" target="_blank">http://www.cnblogs.com/kybs0/</a></div>
<div>让学习成为习惯，假设明天就有重大机遇等着你，你准备好了么</div>
<div>本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须在文章页面给出原文连接，否则保留追究法律责任的权利。 </div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="1.6525419509247685" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2024-12-30 19:16">2024-12-30 18:11</span>&nbsp;
<a href="https://www.cnblogs.com/kybs0">唐宋元明清2188</a>&nbsp;
阅读(<span id="post_view_count">165</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18642076" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18642076);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18642076', targetLink: 'https://www.cnblogs.com/kybs0/p/18642076', title: 'WPF 记录鼠标、触摸多设备混合输入场景问题' })">举报</a>
</div>
        