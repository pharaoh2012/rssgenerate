
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/test-gang/p/18952753" title="发布于 2025-06-27 20:43">
    <span role="heading" aria-level="2">MeterSphere V2.x 添加数据库驱动</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="metersphere-v2x-添加数据库驱动">MeterSphere V2.x 添加数据库驱动</h1>
<h2 id="背景">背景</h2>
<p>在使用 MeterSphere 进行接口测试时，会遇到一些接口场景，需要先查询数据库获取特定数据，再将查询结果作为请求参数传递给后续接口。然而，MeterSphere 默认仅支持 MySQL、Oracle、SQL Server 和 PostgreSQL 等常见数据库的查询操作。如果需要查询其他类型的数据库（例如 ClickHouse），则需通过编写脚本代码的方式来实现数据库连接与数据查询。以下将以 ClickHouse 数据库为例，详细介绍如何通过代码实现与其他类型数据库的连接与交互。</p>
<h2 id="演示环境">演示环境</h2>
<table>
<thead>
<tr>
<th>对象</th>
<th>版本</th>
</tr>
</thead>
<tbody>
<tr>
<td>MeterSphere</td>
<td>v2.10.24-lts</td>
</tr>
<tr>
<td>clickhouse驱动</td>
<td>clickhouse-jdbc-0.4.6.jar</td>
</tr>
</tbody>
</table>
<h2 id="操作流程">操作流程</h2>
<ol>
<li>
<p>下载驱动包我就不赘述了，直接将 clickhouse 驱动包上传到 metersphere的服务器中（建议上传至 <code>./metersphere/data</code> ）<br>
<img src="https://img2024.cnblogs.com/blog/2972727/202506/2972727-20250627173517984-2141407120.jpg" alt="image" loading="lazy"></p>
</li>
<li>
<p>将 clickhouse 驱动包分别复制到 <code>api-test</code> <code>project-management</code> <code>ms-node-controller</code> 容器中</p>
</li>
</ol>
<pre><code class="language-bash">sudo docker cp clickhouse-jdbc-0.4.6.jar api-test:/app/lib
sudo docker cp clickhouse-jdbc-0.4.6.jar project-management:/app/lib
sudo docker cp clickhouse-jdbc-0.4.6.jar ms-node-controller:/app/lib
</code></pre>
<ol start="3">
<li>重启容器 <code>api-test</code> <code>project-management</code> <code>ms-node-controller</code></li>
</ol>
<pre><code class="language-bash">docker restart api-test project-management ms-node-controller
</code></pre>
<ol start="4">
<li>使用自定义脚本，编写代码，这里使用的是 groovy</li>
</ol>
<pre><code class="language-groovy">import groovy.sql.Sql
import java.sql.DriverManager

def connectToClickHouse() {
    // ClickHouse 连接参数
    def url = "jdbc:clickhouse://localhost:8123/default"
    def user = "root"
    def password = "clickhouse"

    try {
        // 注册 JDBC 驱动（通常在现代 JDBC 驱动中不需要显式注册）
        Class.forName("com.clickhouse.jdbc.ClickHouseDriver")

        // 创建数据库连接
        def connection = DriverManager.getConnection(url, user, password)
        log.info("成功连接到ClickHouse数据库")

        // 使用 Groovy 的 Sql 类进行数据库操作
        def sql = new Sql(connection)

        // 执行查询
        sql.eachRow("SELECT * FROM system.tables LIMIT 5") { row -&gt;
            log.info(row.toRowResult().collect { it }.join("\t"))
        }

        // 执行插入操作
        sql.execute("CREATE TABLE IF NOT EXISTS test_table (id Int32, name String) ENGINE = Memory")
        def rowsInserted = sql.executeInsert("""
            INSERT INTO test_table VALUES 
            (1, 'Alice'), 
            (2, 'Bob'), 
            (3, 'Charlie')
        """)
        log.info("插入了 ${rowsInserted.size()} 行数据")

        // 查询插入的数据
        sql.eachRow("SELECT * FROM test_table") { row -&gt;
            log.info("ID: ${row.id}, Name: ${row.name}")
        }

        // 关闭连接
        sql.close()
    } catch (Exception e) {
        log.info("操作出错: ${e.message}")
        e.printStackTrace()
    }
}

connectToClickHouse()
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/2972727/202506/2972727-20250627175213179-1459004048.jpg" alt="image" loading="lazy"></p>
<ol start="5">
<li>执行脚本，结果如下<br>
<img src="https://img2024.cnblogs.com/blog/2972727/202506/2972727-20250627175700428-453855164.jpg" alt="image" loading="lazy"></li>
</ol>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.018055555555555554" data-date-updated="2025-06-27 21:09">2025-06-27 20:43</span>&nbsp;
<a href="https://www.cnblogs.com/test-gang">测试小罡</a>&nbsp;
阅读(<span id="post_view_count">43</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18952753);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18952753', targetLink: 'https://www.cnblogs.com/test-gang/p/18952753', title: 'MeterSphere V2.x 添加数据库驱动' })">举报</a>
</div>
        