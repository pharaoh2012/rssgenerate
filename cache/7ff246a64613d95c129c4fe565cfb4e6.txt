
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ACaiGarden/p/18953036" title="发布于 2025-06-27 22:09">
    <span role="heading" aria-level="2">20250626 - SiloFinance 攻击事件: 恶意输入参数导致借款授权额度盗用</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="背景信息">背景信息</h1>
<p><code>SiloFinance</code> 是一个借贷协议，用户可以进行抵押借贷，也可以授权其他用户使用其借贷额度。本次攻击的原因是 <code>LeverageUsingSiloFlashloanWithGeneralSwap</code> 合约没有对输入参数进行检查，使得攻击者可以通过传入构造恶意参数，盗用对该合约进行授权的用户借贷额度，并将借出的 <code>WETH</code> 发送给攻击者。损失高达 545K 美元。</p>
<ul>
<li>攻击者地址: <a href="https://etherscan.io/address/0x04377cfaf4b4a44bb84042218cdda4cebcf8fd62" target="_blank" rel="noopener nofollow">https://etherscan.io/address/0x04377cfaf4b4a44bb84042218cdda4cebcf8fd62</a></li>
<li>其中一笔攻击交易: <a href="https://app.blocksec.com/explorer/tx/eth/0x1f15a193db3f44713d56c4be6679b194f78c2bcdd2ced5b0c7495b7406f5e87a" target="_blank" rel="noopener nofollow">https://app.blocksec.com/explorer/tx/eth/0x1f15a193db3f44713d56c4be6679b194f78c2bcdd2ced5b0c7495b7406f5e87a</a></li>
<li>漏洞合约：<a href="https://etherscan.io/address/0xcbee4617abf667830fe3ee7dc8d6f46380829df9#code" target="_blank" rel="noopener nofollow">https://etherscan.io/address/0xcbee4617abf667830fe3ee7dc8d6f46380829df9#code</a></li>
</ul>
<h1 id="trace-分析">Trace 分析</h1>
<p><img src="https://img2024.cnblogs.com/blog/1483609/202506/1483609-20250627220745061-453598731.png" alt="image" loading="lazy"></p>
<h2 id="前置交易">前置交易</h2>
<ol>
<li>攻击者先提前创建了攻击合约 AttackContract：<a href="https://etherscan.io/tx/0xbbedbc0c13ed2acb7987a9c87dd870e08273999cb2b500ad9a7cb716ae60a873" target="_blank" rel="noopener nofollow">https://etherscan.io/tx/0xbbedbc0c13ed2acb7987a9c87dd870e08273999cb2b500ad9a7cb716ae60a873</a></li>
<li>被攻击用户向 <code>LeverageUsingSiloFlashloanWithGeneralSwap</code> 合约授权最大的借出金额：<a href="https://etherscan.io/tx/0x24a3ea75663dfb64beaf18e67965780a1594b7bfaa9aa9193355843dd8b77f97" target="_blank" rel="noopener nofollow">https://etherscan.io/tx/0x24a3ea75663dfb64beaf18e67965780a1594b7bfaa9aa9193355843dd8b77f97</a></li>
</ol>
<h2 id="攻击交易">攻击交易</h2>
<ol>
<li>AttackContract 调用 <code>LeverageUsingSiloFlashloanWithGeneralSwap.openLeveragePosition()</code> 开仓</li>
<li>在参数中将 <code>flashloanTarget</code> 设置为 AttackContract 自身，回调 <code>LeverageUsingSiloFlashloanWithGeneralSwap.onFlashLoan()</code> 函数</li>
<li>通过恶意构造 <code>_data</code> 参数，解析后得到恶意的 <code>swapArgs</code> 参数，将原来本该是进行 swap 的 call 操作篡改为 borrow 操作。</li>
<li>利用 <code>LeverageUsingSiloFlashloanWithGeneralSwap</code> 合约的身份，调用 <code>bWETH-105</code> 进行借贷</li>
<li>Mint debtShareToken(bWETH-105) 给 <code>LeverageUsingSiloFlashloanWithGeneralSwap</code> 合约，transfer WETH 给 Hacker。（完成获利）</li>
<li>把 AttackContract 设为 <code>collateralAsset</code> ，从而将后续的 <code>transferFrom</code>，<code>approve</code>，<code>deposit</code> 和 <code>borrow</code> 的操作都略过。</li>
</ol>
<h1 id="代码分析">代码分析</h1>
<p>首先调用<code> LeverageUsingSiloFlashloanWithGeneralSwap.openLeveragePosition()</code> 函数，所传入的参数均为攻击者定制，没有经过检查。其中 <code>flashloanTarget</code> 的值为 AttackContract，使得后续 AttackContract 可以回调 <code>LeverageUsingSiloFlashloanWithGeneralSwap.onFlashLoan()</code> 函数。<br>
<img src="https://img2024.cnblogs.com/blog/1483609/202506/1483609-20250627220802199-1073075981.png" alt="image" loading="lazy"></p>
<p>在 <code>LeverageUsingSiloFlashloanWithGeneralSwap</code> 合约中，经过 <code>onFlashLoan() -&gt; _openLeverage() -&gt; _fillQuote()</code> 调用，在 <code>_fillQuote()</code> 函数中对传入的恶意参数进行解析。函数原本设计的功能是进行 swap 操作，但是攻击者通过构造恶意参数，使得 <code>LeverageUsingSiloFlashloanWithGeneralSwap</code> 合约调用了<code> bWETH-105.borrow()</code> 函数。<br>
<img src="https://img2024.cnblogs.com/blog/1483609/202506/1483609-20250627220812876-954015477.png" alt="image" loading="lazy"></p>
<blockquote>
<p>为什么要通过  <code>LeverageUsingSiloFlashloanWithGeneralSwap</code> 合约调用了 <code>bWETH-105.borrow()</code> 函数？<br>
因为在“前置交易2”中，被攻击合约向 <code>LeverageUsingSiloFlashloanWithGeneralSwap</code> 合约授权了 <code>bWETH-105</code> 的最大的借出金额，<code>LeverageUsingSiloFlashloanWithGeneralSwap</code> 合约可以从 <code>bWETH-105</code> 中借出 WETH。</p>
</blockquote>
<p>调用 <code>Silo.boorow()</code> 函数，将 debtToken(dWETH-105) 记录在  <code>LeverageUsingSiloFlashloanWithGeneralSwap</code> 合约账上，借出 WETH 发送给 Hacker。<br>
<img src="https://img2024.cnblogs.com/blog/1483609/202506/1483609-20250627220829719-903227338.png" alt="image" loading="lazy"></p>
<p><code>dWETH-105.mint()</code> 函数中使用被攻击合约在“前置交易2”中的授权进行借贷，完成获利。<br>
<img src="https://img2024.cnblogs.com/blog/1483609/202506/1483609-20250627220903826-607722029.png" alt="image" loading="lazy"></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-06-27 22:10">2025-06-27 22:09</span>&nbsp;
<a href="https://www.cnblogs.com/ACaiGarden">ACai_sec</a>&nbsp;
阅读(<span id="post_view_count">12</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18953036);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18953036', targetLink: 'https://www.cnblogs.com/ACaiGarden/p/18953036', title: '20250626 - SiloFinance 攻击事件: 恶意输入参数导致借款授权额度盗用' })">举报</a>
</div>
        