
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lulight/p/18984570" title="发布于 2025-07-14 20:00">
    <span role="heading" aria-level="2">【Azure Container App】构建Java应用镜像时候遇无法编译错误：ERROR [build 10/10] RUN ./mvnw.cmd dependency:go-offline -B -Dproduction package</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h1>问题描述</h1>
<p>部署Java应用到Azure Container App中，首先需要在本地构建镜像文件后上传到Azure Contaienr Registrier中。</p>
<p>但是，在第一步构建镜像的时候，就遇见错误：</p>
<blockquote>
<p><span style="color: rgba(255, 0, 0, 1)"> =&gt; ERROR [build 9/9] RUN ./mvnw.cmd dependency:go-offline -B -Dproduction package 0.6s</span><br>------<br> &gt; [build 9/9] RUN ./mvnw.cmd dependency:go-offline -B -Dproduction package:<br>0.523 /bin/sh: line 1: ./mvnw.cmd: No such file or directory</p>





</blockquote>
<p>就单独代码调试可以正常运行。而且，项目文件根目录（与Dockerfile同级）中，已经包含了 mvnw 文件和 mvnw.cmd, 所以，不应该是文件本身确实的原因导致的。</p>
<h2>项目目录结构</h2>
<div class="cnblogs_code">
<p>....&gt;javademo&gt; tree /a /f<br>Folder PATH listing for volume Local Disk<br>Volume serial number is 4CDB-764A<br>C:.<br>|   .gitignore<br>|   CHANGELOG.md<br>|   CONTRIBUTING.md<br>|   Dockerfile<br>|   LICENSE.md<br><span style="background-color: rgba(255, 255, 0, 1)">|   mvnw</span><br><span style="background-color: rgba(255, 255, 0, 1)">|   mvnw.cmd</span><br>|   pom.xml</p>
<p>...</p>





</div>
<h2>DockerFile内容</h2>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)"># Build stage
</span><span style="color: rgba(0, 128, 128, 1)">FROM</span> mcr.microsoft.com/openjdk/jdk:21<span style="color: rgba(0, 0, 0, 1)">-mariner AS build
</span><span style="color: rgba(0, 128, 128, 1)">ENV</span> JAR_FILE=containerapps-albumapi-java-0.0.1<span style="color: rgba(0, 0, 0, 1)">-SNAPSHOT.jar
</span><span style="color: rgba(0, 128, 128, 1)">WORKDIR</span><span style="color: rgba(0, 0, 0, 1)"> /app
</span><span style="color: rgba(0, 128, 128, 1)">COPY</span><span style="color: rgba(0, 0, 0, 1)"> mvnw* /app/
</span><span style="color: rgba(0, 128, 128, 1)">COPY</span><span style="color: rgba(0, 0, 0, 1)"> .mvn /app/.mvn
</span><span style="color: rgba(0, 128, 128, 1)">COPY</span><span style="color: rgba(0, 0, 0, 1)"> pom.xml /app
</span><span style="color: rgba(0, 128, 128, 1)">COPY</span><span style="color: rgba(0, 0, 0, 1)"> ./src /app/src
</span><span style="color: rgba(0, 128, 128, 1)">RUN</span><span style="color: rgba(0, 0, 0, 1)"> ls -la /app
</span><span style="color: rgba(0, 128, 128, 1)">RUN</span><span style="color: rgba(0, 0, 0, 1)"> chmod +x ./mvnw
</span><span style="color: rgba(0, 128, 128, 1); background-color: rgba(255, 255, 0, 1)">RUN</span><span style="color: rgba(0, 0, 0, 1)"><span style="background-color: rgba(255, 255, 0, 1)"> ./mvnw dependency:go-offline -B -Dproduction package</span>

# Runtime stage
</span><span style="color: rgba(0, 128, 128, 1)">FROM</span> mcr.microsoft.com/openjdk/jdk:21<span style="color: rgba(0, 0, 0, 1)">-mariner
</span><span style="color: rgba(0, 128, 128, 1)">COPY</span> --from=build /app/target/containerapps-albumapi-java-0.0.1<span style="color: rgba(0, 0, 0, 1)">-SNAPSHOT.jar /usr/src/myapp/
</span><span style="color: rgba(0, 128, 128, 1)">EXPOSE</span> 8080
<span style="color: rgba(0, 128, 128, 1)">CMD</span> ["/usr/bin/java", "-jar", "/usr/src/myapp/containerapps-albumapi-java-0.0.1-SNAPSHOT.jar"]</pre>
</div>
<p>&nbsp;</p>
<h1>问题解答</h1>
<p>以前遇见问题，全网搜索。当前，遇见问题，第一问AI大模型。</p>
<p>我得到的答案是：</p>
<blockquote>
<p><span style="color: rgba(128, 0, 0, 1)"><strong>我的问题：</strong></span></p>
<p><em>RUN ./mvnw dependency:go-offline -B -Dproduction package 这句话在dockerfile中是什么目的呢？如果遇见报错“0.288 /bin/sh: line 1: ./mvnw: cannot execute: required file not found” 如何来解决它</em></p>
<p><span style="color: rgba(128, 0, 0, 1)"><strong>&nbsp;</strong></span></p>
<p><span style="color: rgba(128, 0, 0, 1)"><strong>M365 Copilot的回答：</strong></span></p>
<div>
<p>这条命令：</p>
<div>
<div class="scriptor-paragraph">
<pre><code class="language-Shell">RUN ./mvnw dependency:go-offline -B -Dproduction package
</code></pre>
</div>
</div>
<p>在 Dockerfile 中的作用是：</p>
<h3 id="">🧩 命令目的解释：</h3>
<ol>
<li><strong><code>./mvnw</code></strong>：使用项目自带的 Maven Wrapper（mvnw），确保使用的是项目指定版本的 Maven，而不是系统安装的 Maven。</li>
<li><strong><code>dependency:go-offline</code></strong>：提前下载所有依赖项，以便后续构建过程可以在离线环境中进行，提高构建速度和稳定性。</li>
<li><strong><code>-B</code></strong>：表示 batch 模式，避免 Maven 交互式提示，适合自动化构建。</li>
<li><strong><code>-Dproduction</code></strong>：传递一个名为 <code>production</code> 的系统属性，可能用于激活某些 profile 或配置。</li>
<li><strong><code>package</code></strong>：执行 Maven 的 <code>package</code> 阶段，通常会编译代码并打包成 JAR 或 WAR 文件。</li>
</ol><hr>
<h3 id="-1">🛠 报错分析：</h3>
<p>错误信息：</p>
<pre><code>/bin/sh: line 1: ./mvnw: cannot execute: required file not found
</code></pre>
<p>说明 Docker 构建过程中找不到 <code>./mvnw</code> 文件，可能原因如下：</p>
<h4 id="-2">✅ 解决方法：</h4>
<ol>
<li>
<p><strong>确认 <code>mvnw</code> 文件是否存在于 Docker 构建上下文中</strong>：</p>
<ul>
<li><code>mvnw</code> 和 <code>mvnw.cmd</code> 应该在项目根目录。</li>
<li>如果你用的是 <code>.dockerignore</code> 文件，确保没有把 <code>mvnw</code> 忽略掉。</li>
</ul>
</li>
<li>
<p><strong>检查 Dockerfile 的工作目录设置</strong>：</p>
<ul>
<li>确保你在执行命令前设置了正确的工作目录，例如：
<div>
<div class="scriptor-paragraph">
<pre><code class="language-Dockerfile">WORKDIR /app
COPY . /app
RUN chmod +x mvnw
RUN ./mvnw dependency:go-offline -B -Dproduction package
</code></pre>
</div>
</div>
</li>
</ul>
</li>
<li>
<p><strong>添加执行权限</strong>：</p>
<ul>
<li>有时 <code>mvnw</code> 没有执行权限，可以加上：
<div>
<div class="scriptor-paragraph">
<pre><code class="language-Dockerfile">RUN chmod +x mvnw
</code></pre>
</div>
</div>
</li>
</ul>
</li>
</ol><hr>
<p>如果你能提供 Dockerfile 的相关部分，我可以帮你更具体地定位问题并优化它。你想我帮你检查一下 Dockerfile 吗？</p>
</div>
</blockquote>
<p>&nbsp;</p>
<p>其实，根据以上三点提示，并没有定位到问题。</p>
<p>进一步思考， mvnw 是用于打包java 应用，而mvnw 和 mvnw.bat文件都是在创建项目是自动生成。</p>
<p>开始怀疑是文件内容由问题导致，所以决定删除并生成新文件。</p>
<p>使用下面的命令可以重新生成 mvnw文件或更新：</p>
<div class="cnblogs_code">
<pre>mvn -N io.takari:maven:wrapper</pre>
</div>
<p><img width="999" height="550" loading="lazy" data-src="https://img2024.cnblogs.com/blog/2127802/202507/2127802-20250714194604971-1024653541.png" class="lazyload"></p>
<p>随后，再次执行 docker build 指令（&nbsp;docker build -t myalbum:v1 . ）成功。镜像正常生成！</p>
<p><img width="999" height="348" loading="lazy" data-src="https://img2024.cnblogs.com/blog/2127802/202507/2127802-20250714194808453-1459854511.png" class="lazyload"></p>
<p><br>为了找到之前的 mvnw 文件为何会失败，在对比两个文件后发现：<span style="font-size: 18px; color: rgba(0, 51, 0, 1)"><strong>"重新生成mvnw文件是最快的解决之道"</strong></span></p>
<p><img width="666" height="340" loading="lazy" data-src="https://img2024.cnblogs.com/blog/2127802/202507/2127802-20250714195735613-839305580.png" class="lazyload"></p>
<h1>参考资料</h1>
<p class="fs-headline1 ow-anywhere mb8 flex--item fl1">What is the purpose of mvnw and mvnw.cmd files?&nbsp;<a href="https://stackoverflow.com/questions/38723833/what-is-the-purpose-of-mvnw-and-mvnw-cmd-files" target="_blank" rel="noopener nofollow">https://stackoverflow.com/questions/38723833/what-is-the-purpose-of-mvnw-and-mvnw-cmd-files</a></p>
<blockquote>
<p>These files are from&nbsp;<a href="https://github.com/takari/maven-wrapper" rel="noopener nofollow">Maven wrapper</a>. It works similarly to the&nbsp;<a href="https://docs.gradle.org/current/userguide/gradle_wrapper.html" rel="noopener nofollow">Gradle wrapper</a>.</p>
<p>This allows you to run the Maven project without having Maven installed and present on the path. It downloads the correct Maven version if it's not found (as far as I know by default in your user home directory).</p>
<p>The&nbsp;<code>mvnw</code>&nbsp;file is for Linux (bash) and the&nbsp;<code>mvnw.cmd</code>&nbsp;is for the Windows environment.</p>
<hr>
<p>To create or update all necessary Maven Wrapper files execute the following command:</p>
<pre class="default s-code-block"><code class="hljs language-lua" data-highlighted="yes">mvn -N <span class="hljs-built_in">io.takari:maven:wrapper
</span></code></pre>
<p>To use a different version of maven you can specify the version as follows:</p>
<pre class="default s-code-block"><code class="hljs language-lua" data-highlighted="yes">mvn -N <span class="hljs-built_in">io.takari:maven:wrapper -Dmaven=<span class="hljs-number">3.3<span class="hljs-number">.3
</span></span></span></code></pre>
<p>Both commands require maven on&nbsp;<code>PATH</code>&nbsp;(add the path to maven&nbsp;<code>bin</code>&nbsp;to&nbsp;<code>Path</code>&nbsp;on System Variables) if you already have mvnw in your project you can use&nbsp;<code>./mvnw</code>&nbsp;instead of&nbsp;<code>mvn</code>&nbsp;in the commands.</p>
</blockquote>
<p>&nbsp;</p>
</div>
<div id="MySignature" role="contentinfo">
    <div style="background: #1c5f55;height: 36px;width: 618px;padding: 14px 5px 0px 3px;">
  <p style="
    font-weight: bold;
    color: white;
">当在复杂的环境中面临问题，格物之道需：浊而静之徐清，安以动之徐生。 云中，恰是如此!</p>
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.010416666666666666" data-date-updated="2025-07-14 20:15">2025-07-14 20:00</span>&nbsp;
<a href="https://www.cnblogs.com/lulight">路边两盏灯</a>&nbsp;
阅读(<span id="post_view_count">155</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18984570);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18984570', targetLink: 'https://www.cnblogs.com/lulight/p/18984570', title: '【Azure Container App】构建Java应用镜像时候遇无法编译错误：ERROR [build 10/10] RUN ./mvnw.cmd dependency:go-offline -B -Dproduction package' })">举报</a>
</div>
        