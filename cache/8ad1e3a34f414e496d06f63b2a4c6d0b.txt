
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/justnow/p/18877201" title="发布于 2025-05-15 15:11">
    <span role="heading" aria-level="2">实现远程磁盘：像访问自己的电脑硬盘一样访问对方的电脑硬盘 （附Demo源码）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        在现实场景中，远程桌面的功能大家已经用得很多了，而在某些场景下，我们需要使用类似的远程磁盘功能，这样能非常方便地操作对方电脑磁盘的目录、以及传送文件。那么，这样的远程磁盘功能要怎么实现了？
    </div>
<div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>　　在现实场景中，远程桌面的功能大家已经用得很多了，而在某些场景下，我们需要使用类似的远程磁盘功能，这样能非常方便地操作对方电脑磁盘的目录、以及传送文件。那么，这样的远程磁盘功能要怎么实现了？</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; 这次我们将给出一个完整的Demo来演示远程磁盘要怎么实现，同时，这个Demo也给出了个人网盘是如何实现的。个人网盘可以看做是远程磁盘应用的一个特例，即，个人网盘就是访问服务器上的一个特定文件夹。废话不多说，先上图看看这个远程磁盘Demo的基本功能。</p>
<h2>一. 远程磁盘功能展示</h2>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;打开到对方的远程磁盘后，我们就可以看到对方电脑的硬盘了，点击任何一个，就可以访问该盘下面的文件。</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<img src="https://img2024.cnblogs.com/blog/20404/202505/20404-20250515100213511-1170228685.png" alt="" width="451" height="279"></p>
<p>　　 双击文件，就可以下载文件到本地；右键菜单则可以上传本地文件到远程磁盘。&nbsp; &nbsp;&nbsp;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<img src="https://img2024.cnblogs.com/blog/20404/202505/20404-20250515095922872-1114166081.png" alt="" width="457" height="283"></p>
<h2>二. 远程磁盘代码实现</h2>
<p>&nbsp; &nbsp; &nbsp; 在实现远程磁盘时，我们分为两个层面介绍，一个是底层业务通信层面，另一个是上层的UI展现层面。</p>
<h3>1. 底层业务通信实现</h3>
<p>&nbsp; &nbsp; &nbsp; 比如，当我们使用远程磁盘功能时，最常见的就是去获取对方电脑某个目录下的所有文件及文件夹，那么，这个功能是怎么实现的了？</p>
<p>&nbsp; &nbsp; &nbsp; 基于ESFramework，实现这点其实很简单，我们举例说明。以A用户作为磁盘的分享者，B用户作为远程磁盘的访问者，A和B都启动了该Demo的客户端并登录。此时，B要访问A用户电脑上某个目录下的文件列表，那么，B就可以给A发一个请求消息，并得到回复，如下所示（NDiskOutter 类的 GetSharedDirectory 方法）：&nbsp; &nbsp; &nbsp;&nbsp;</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 获取目标用户电脑上指定目录下的文件列表信息。
</span><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="ownerID"&gt;</span><span style="color: rgba(0, 128, 0, 1)">目标用户的账号（磁盘分享者）</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="clientType"&gt;</span><span style="color: rgba(0, 128, 0, 1)">目标用户的设备类型</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="netDiskID"&gt;</span><span style="color: rgba(0, 128, 0, 1)">网盘的标志。（对于远程磁盘而言，即OwnerID为某个用户的ID时，该参数可传null）。如果是群组共享的文件夹，则可以将其设置为对应的群组的ID。</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="dirPath"&gt;</span><span style="color: rgba(0, 128, 0, 1)">指定目录的路径</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
<span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;returns&gt;</span><span style="color: rgba(0, 128, 0, 1)">目录下的文件列表信息</span><span style="color: rgba(128, 128, 128, 1)">&lt;/returns&gt;</span>
<span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 128, 128, 1)">SharedDirectory </span>GetSharedDirectory(<span style="color: rgba(0, 0, 255, 1)">string</span> ownerID,<span style="color: rgba(0, 128, 0, 1)">ClientType</span> clientType,<span style="color: rgba(0, 0, 255, 1)">string</span> netDiskID ,<span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)"> dirPath)
{
    <span style="color: rgba(0, 128, 128, 1)">ReqDirectoryContract </span>contract </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"><span style="color: rgba(0, 128, 128, 1)"> ReqDirectoryContract</span>(netDiskID, dirPath);
    </span><span style="color: rgba(0, 0, 255, 1)">byte</span><span style="color: rgba(0, 0, 0, 1)">[] res;
    </span><span style="color: rgba(0, 0, 255, 1)">if</span> (!ownerID.Equals(<span style="color: rgba(0, 128, 128, 1)">NetServer</span>.SystemUserID)) <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">远程磁盘</span>
<span style="color: rgba(0, 0, 0, 1)">    {
        res </span>= <span style="color: rgba(0, 0, 255, 1)">this</span>.p2pQueryOutter.<span style="color: rgba(255, 0, 0, 1)">Query</span>(ownerID, clientType, <span style="color: rgba(0, 0, 255, 1)">this</span>.fileDirectoryInfoTypes.<strong>ReqDirectory</strong>, <span style="color: rgba(0, 128, 128, 1)">CompactPropertySerializer</span>.Default.Serialize&lt;ReqDirectoryContract&gt;(contract), <span style="color: rgba(128, 0, 0, 1)">""</span><span style="color: rgba(0, 0, 0, 1)">);
    }
    </span><span style="color: rgba(0, 0, 255, 1)">else</span> <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">网盘</span>
<span style="color: rgba(0, 0, 0, 1)">    {
        res </span>= <span style="color: rgba(0, 0, 255, 1)">this</span>.customizeOutter.<span style="color: rgba(255, 0, 0, 1)">Query</span>(<span style="color: rgba(0, 0, 255, 1)">this</span>.fileDirectoryInfoTypes.<strong>ReqDirectory</strong>, <span style="color: rgba(0, 128, 128, 1)">CompactPropertySerializer</span>.Default.Serialize&lt;ReqDirectoryContract&gt;<span style="color: rgba(0, 0, 0, 1)">(contract));
    }
    <span style="color: rgba(0, 128, 128, 1)">ResDirectoryContract</span> resContract </span>= <span style="color: rgba(0, 128, 128, 1)">CompactPropertySerializer</span>.Default.Deserialize&lt;<span style="color: rgba(0, 128, 128, 1)">ResDirectoryContract</span>&gt;(res, <span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">);
    </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> resContract.SharedDirectory;
}</span></pre>
</div>
<p>&nbsp; &nbsp; &nbsp; 无论是网盘，还是远程磁盘，都可以通过上述的代码来进行调用，以获取对方电脑指定目录下的文件列表。</p>
<p>（1）特别注意，上述代码中红色字体突出显示的Query方法，该方法的含义是：向对方（或服务器）发送 <strong>ReqDirectory</strong> 请求，并返回对方的应答结果。</p>
<p>（2）返回的 SharedDirectory 对象，里面包含了目录下的文件列表和子文件夹列表，可以通过&nbsp;FileList 和 SubDirectorys 属性获取。</p>
<p>&nbsp; &nbsp; &nbsp;那么，A作为分享方，是如何处理来自B的&nbsp;<strong>ReqDirectory&nbsp;</strong>请求的了？</p>
<p>&nbsp; &nbsp; &nbsp;我们来看看 NDiskPassiveHandler 类的 HandleQuery 方法中对 ReqDirectory 请求的处理：</p>
<div class="cnblogs_code">
<pre>    <span style="color: rgba(0, 0, 255, 1)">if</span> (informationType == <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">.fileDirectoryInfoTypes.<strong>ReqDirectory</strong>)
    {
        <span style="color: rgba(0, 128, 128, 1)">ReqDirectoryContract</span> contract </span>= <span style="color: rgba(0, 128, 128, 1)">CompactPropertySerializer</span>.Default.Deserialize&lt;<span style="color: rgba(0, 128, 128, 1)">ReqDirectoryContract</span>&gt;(info, <span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">);
        </span><span style="color: rgba(0, 0, 255, 1)">string</span> fullPath = <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">.ConstructFullPath(contract.DirectoryPath);
        <span style="color: rgba(0, 128, 128, 1)">SharedDirectory</span> dir </span>=<span style="color: rgba(0, 0, 0, 1)"><span style="color: rgba(0, 128, 128, 1)"> SharedDirectory</span>.GetSharedDirectory(fullPath);
        </span><span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 128, 128, 1)">CompactPropertySerializer</span>.Default.Serialize&lt;<span style="color: rgba(0, 128, 128, 1)">ResDirectoryContract</span>&gt;(<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"><span style="color: rgba(0, 128, 128, 1)"> ResDirectoryContract</span>(dir));
    }</span></pre>
</div>
<p>（1）首先，将二进制请求消息反序列化为 ReqDirectoryContract 对象，从中拿到对方想要请求的目录路径。</p>
<p>（2）通过&nbsp;SharedDirectory 的静态方法&nbsp;GetSharedDirectory 获取目标目录下的文件列表和子文件夹列表，并包装成&nbsp;SharedDirectory 对象。</p>
<p>（3）将&nbsp;SharedDirectory 对象序列化成二进制后，返回给请求方。</p>
<p>&nbsp; &nbsp; &nbsp; 上面就以请求指定目录下的文件列表及文件夹列表为例，说明了底层业务通信的过程。其它的业务通信就不再赘述了，大家可自行查看源码。</p>
<h3>2. UI 实现&nbsp;</h3>
<p>&nbsp; &nbsp; &nbsp; 在客户端，最主要的UI控件就是 NDiskBrowser 的实现，它的功能主要有：</p>
<p>（1）浏览远程磁盘下的目录及文件。</p>
<p>（2）可从远程磁盘下载文件到本地电脑。</p>
<p>（3）可将本地文件上传到远程磁盘。</p>
<p>&nbsp; &nbsp; &nbsp; 我们仍然以浏览远程磁盘指定目录下的所有文件及文件夹为例，来看看&nbsp;NDiskBrowser 是如何在UI展现的。</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 128, 1)">SharedDirectory</span> sharedDirectory = <span style="color: rgba(0, 0, 255, 1)">this</span>.nDiskOutter.GetSharedDirectory(<span style="color: rgba(0, 0, 255, 1)">this</span>.ownerID, <span style="color: rgba(0, 0, 255, 1)">this</span>.clientType, <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">.netDiskID , path);

</span><span style="color: rgba(0, 0, 255, 1)">foreach</span> (<span style="color: rgba(0, 128, 128, 1)">DirectoryDetail</span> dirDetail <span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)"> sharedDirectory.SubDirectorys)
{
    <span style="color: rgba(0, 128, 128, 1)">ListViewItem</span> item </span>= <span style="color: rgba(0, 0, 255, 1)">new</span> <span style="color: rgba(0, 128, 128, 1)">ListViewItem</span>(<span style="color: rgba(0, 0, 255, 1)">new</span> <span style="color: rgba(0, 0, 255, 1)">string</span>[] { dirDetail.Name, dirDetail.CreateTime.ToString(), <span style="color: rgba(128, 0, 0, 1)">""</span> }, <span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">);
    item.Tag </span>= <span style="color: rgba(0, 0, 255, 1)">new</span> <span style="color: rgba(0, 128, 128, 1)">FileOrDirectoryTag</span>(dirDetail.Name, <span style="color: rgba(128, 0, 128, 1)">0</span>, dirDetail.CreateTime, <span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">);
    </span><span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">.listView_fileDirectory.Items.Add(item);
}

</span><span style="color: rgba(0, 0, 255, 1)">foreach</span> (<span style="color: rgba(0, 128, 128, 1)">FileDetail</span> file <span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)"> sharedDirectory.FileList)
{
    <span style="color: rgba(0, 128, 128, 1)">ListViewItem</span> item </span>= <span style="color: rgba(0, 0, 255, 1)">new</span> <span style="color: rgba(0, 128, 128, 1)">ListViewItem</span>(<span style="color: rgba(0, 0, 255, 1)">new</span> <span style="color: rgba(0, 0, 255, 1)">string</span>[] { file.Name, file.CreateTime.ToString(), PublicHelper.GetSizeString((<span style="color: rgba(0, 0, 255, 1)">uint</span>)file.Size) }, <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">.GetIconIndex(file.Name));
    item.Tag </span>= <span style="color: rgba(0, 0, 255, 1)">new</span> <span style="color: rgba(0, 128, 128, 1)">FileOrDirectoryTag</span>(file.Name, file.Size, file.CreateTime, <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">);
    item.ToolTipText </span>= <span style="color: rgba(0, 0, 255, 1)">string</span>.Format(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">大    小：{0}\n创建日期：{1}</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(0, 128, 128, 1)">PublicHelper</span>.GetSizeString((<span style="color: rgba(0, 0, 255, 1)">uint</span><span style="color: rgba(0, 0, 0, 1)">)file.Size), file.CreateTime);
    </span><span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">.listView_fileDirectory.Items.Add(item);
}</span></pre>
</div>
<p>&nbsp; &nbsp; &nbsp; 在通过 NDiskOutter 的 GetSharedDirectory 方法拿到&nbsp;SharedDirectory 对象后，就将其&nbsp;SubDirectorys 所包含的每个子文件夹作为&nbsp;ListViewItem&nbsp; 添加到 ListView 中显示出来；同时，也将其 FileList 所包含的每个文件作为&nbsp;ListViewItem&nbsp; 添加到 ListView 中显示出来。这样就出现了我们之前截图的效果。</p>
<p>&nbsp; &nbsp; &nbsp;&nbsp;NDiskBrowser 的实现代码虽然比较多，但是都很简单，大家下载源码后可自行查看。</p>
<h2>三. Demo下载及运行</h2>
<p>1. Demo 源码下载：<a href="https://dl.oraycn.com/DownLoadFiles/ESF/Oraycn.RemoteDisk.rar" target="_blank" rel="noopener nofollow">Oraycn.RemoteDisk.rar</a></p>
<p>2. 运行Demo</p>
<p>（1）运行服务端。</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; 双击服务端运行目录下的 Oraycn.RemoteDisk.Server.exe&nbsp;，即可启动服务端，如下截图所示：</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;<img src="https://img2024.cnblogs.com/blog/20404/202505/20404-20250515145721378-375210810.png" alt=""></p>
<p>（2）运行客户端。</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; 修改客户端配置文件 Oraycn.RemoteDisk.exe.config 中的&nbsp;ServerIP 为运行服务端电脑的 IP地址，然后双击&nbsp;Oraycn.RemoteDisk.exe 启动客户端：&nbsp;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<img src="https://img2024.cnblogs.com/blog/20404/202505/20404-20250515150209765-1473250555.png" alt=""></p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;账号密码随便填，登录成功后，进入主界面：</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<img src="https://img2024.cnblogs.com/blog/20404/202505/20404-20250515150322886-1752673021.png" alt=""></p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;此时，在主界面的输入框中填上对方的账号，点击“访问他的磁盘”按钮，如果对方在线，就会弹出此文第一张截图的窗体了。</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;如此，我们就可以完全的操控远程磁盘了。</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;接下来，我们将在 <a href="https://www.cnblogs.com/justnow/p/16600781.html" target="_blank">GGTalk 开源即时通讯系统</a>&nbsp;中，加上远程磁盘的功能，敬请期待！</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.5456249327581019" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-15 15:11">2025-05-15 15:11</span>&nbsp;
<a href="https://www.cnblogs.com/justnow">C#开源即时通讯GGTalk</a>&nbsp;
阅读(<span id="post_view_count">299</span>)&nbsp;
评论(<span id="post_comment_count">4</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18877201);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18877201', targetLink: 'https://www.cnblogs.com/justnow/p/18877201', title: '实现远程磁盘：像访问自己的电脑硬盘一样访问对方的电脑硬盘 （附Demo源码）' })">举报</a>
</div>
        