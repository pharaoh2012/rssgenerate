
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/du-hong/p/18405731" title="发布于 2025-06-12 08:30">
    <span role="heading" aria-level="2">《刚刚问世》系列初窥篇-Java+Playwright自动化测试-17-  如何优雅地切换浏览器多窗口（详细教程）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h3>1.简介</h3>
<p>有时候我们在网页上点击一些按钮或超链接时，有时会打开一个新的网页窗口。这个时候如果下一步操作是在新的网页窗口上，那么就需要切换网页窗口，切换到新的网页窗口后再执行元素定位等操作。Playwright处理浏览器多窗口切换相比较于Selenium简单快捷。下边宏哥就给小伙伴们或者童鞋们介绍一下playwrigh如何优雅地切换浏览器多个窗口。</p>
<h3>2.窗口切换步骤</h3>
<p>1、 context.pages(); //获取所有的page对象，返回数据类型为列表，列表中的网页对象的索引按照打开顺序从0开始依次递增。<br>2、 page.bringToFront();&nbsp; //激活网页，将网页显示在屏幕最上层，本行代码不写也不影响脚本执行。<br>3、 page.close();&nbsp; //关闭网页。</p>
<h3 id="autoid-0-1-0">3.测试场景</h3>
<p>我们以访问百度为例，百度首页有多个选项，新闻，hao123网址导航，贴吧等多个选项，我们点击不同的选项，就会打开不同的新标签页。当打开多个标签页后， 如何切换到自己想要的页面上操作。</p>
<p><img src="https://img2023.cnblogs.com/blog/1232840/202307/1232840-20230711153939685-482326488.png" alt="" class="medium-zoom-image" loading="lazy"></p>
<p>思路：我们可以通过脚本，输出百度首页各页面的标题，通过context.pages();&nbsp;可以获取到所有的page对象，每一个page对象就代表一个标签页实例。</p>
<h4>3.1代码设计</h4>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202409/1232840-20240910095542916-1877517521.png" alt="" loading="lazy"></p>
<h4>3.2参考代码</h4>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">package</span><span style="color: rgba(0, 0, 0, 1)"> com.bjhg.playwright;

</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> java.util.List;

</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Browser;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.BrowserContext;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.BrowserType;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Locator;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Page;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Playwright;

</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">
 * </span><span style="color: rgba(128, 128, 128, 1)">@author</span><span style="color: rgba(0, 128, 0, 1)"> 北京-宏哥
 * 
 * @公众号:北京宏哥（微信搜索，关注宏哥，提前解锁更多测试干货）
 * 
 * 《刚刚问世》系列初窥篇-Java+Playwright自动化测试-17-  如何优雅地切换浏览器多窗口（详细教程）
 *
 * 2024年9月19日
 </span><span style="color: rgba(0, 128, 0, 1)">*/</span>
<span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Test_Switch_Window {
    
    </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> main(String[] args) {
        </span><span style="color: rgba(0, 0, 255, 1)">try</span> (Playwright playwright =<span style="color: rgba(0, 0, 0, 1)"> Playwright.create()) {
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">1.使用chromium浏览器，# 浏览器配置，设置以GUI模式启动Chrome浏览器（要查看浏览器UI，在启动浏览器时传递 headless=false 标志。您还可以使用 slowMo 来减慢执行速度。</span>
          Browser browser = playwright.chromium().launch(<span style="color: rgba(0, 0, 255, 1)">new</span> BrowserType.LaunchOptions().setHeadless(<span style="color: rgba(0, 0, 255, 1)">false</span>).setSlowMo(3000<span style="color: rgba(0, 0, 0, 1)">));
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">2.创建context</span>
          BrowserContext context =<span style="color: rgba(0, 0, 0, 1)"> browser.newContext();
         
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">创建page</span>
          Page page =<span style="color: rgba(0, 0, 0, 1)"> context.newPage();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">3.浏览器打开网站</span>
          page.navigate("https://www.baidu.com"<span style="color: rgba(0, 0, 0, 1)">);
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">4.点击打开多个新的标签页</span>
          List&lt;Locator&gt; links = page.locator("#s-top-left&gt;a"<span style="color: rgba(0, 0, 0, 1)">).all();
          </span><span style="color: rgba(0, 0, 255, 1)">for</span><span style="color: rgba(0, 0, 0, 1)">(Locator link:links){
              link.click();
          }
          
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">5.遍历page对象</span>
          List&lt;Page&gt; pages =<span style="color: rgba(0, 0, 0, 1)"> context.pages();
          </span><span style="color: rgba(0, 0, 255, 1)">for</span><span style="color: rgba(0, 0, 0, 1)">(Page i:pages){
              System.out.println(i.title());
          }
          
          System.out.println(</span>"Test Pass"<span style="color: rgba(0, 0, 0, 1)">);
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">关闭page</span>
<span style="color: rgba(0, 0, 0, 1)">          page.close();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">关闭browser</span>
<span style="color: rgba(0, 0, 0, 1)">          browser.close();
        }
    }

}</span></pre>
</div>
<h4>3.3运行代码</h4>
<p>1.运行代码，右键Run As-&gt;Java Application，就可以看到控制台输出，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202409/1232840-20240910095510938-1335319945.png" alt="" loading="lazy"></p>
<p>2.运行代码后电脑端的浏览器的动作。如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202409/1232840-20240910100337231-163763313.gif" alt="" loading="lazy"></p>
<h3 id="autoid-0-2-3">4.多窗口切换方法</h3>
<h4 id="autoid-0-3-0">4.1Title切换</h4>
<p>从上边可以看到宏哥已经将所有的标签的title都循环出来了，因此我们只要切换到我们需要操作的title标签页即可切换对应窗口然后再进行后续定位操作。</p>
<h5>4.1.1代码设计</h5>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202409/1232840-20240910141524285-112977954.png" alt="" loading="lazy"></p>
<h5>4.1.2参考代码</h5>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">package</span><span style="color: rgba(0, 0, 0, 1)"> com.bjhg.playwright;

</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> java.util.List;

</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Browser;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.BrowserContext;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.BrowserType;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Locator;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Page;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Playwright;

</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">
 * </span><span style="color: rgba(128, 128, 128, 1)">@author</span><span style="color: rgba(0, 128, 0, 1)"> 北京-宏哥
 * </span><span style="color: rgba(128, 128, 128, 1)">@param</span><span style="color: rgba(0, 128, 0, 1)"> &lt;context&gt;
 * 
 * @公众号:北京宏哥（微信搜索，关注宏哥，提前解锁更多测试干货）
 * 
 * 《刚刚问世》系列初窥篇-Java+Playwright自动化测试-17-  如何优雅地切换浏览器多窗口（详细教程）
 *
 * 2024年9月19日
 </span><span style="color: rgba(0, 128, 0, 1)">*/</span>
<span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Test_Switch_Window{
    
    </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span><span style="color: rgba(0, 0, 0, 1)"> Page switchToPage(BrowserContext context,String string){
        
        </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">切换到指定title 名称的标签页</span>
        List&lt;Page&gt; pages =<span style="color: rgba(0, 0, 0, 1)"> context.pages();
        
        </span><span style="color: rgba(0, 0, 255, 1)">for</span><span style="color: rgba(0, 0, 0, 1)">(Page i:pages){
            </span><span style="color: rgba(0, 0, 255, 1)">if</span>(string != <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">){
                </span><span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)">(i.title().contains(string)){
                    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">激活当前选项卡</span>
<span style="color: rgba(0, 0, 0, 1)">                    i.bringToFront();
                    </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> i;
                }
            }</span><span style="color: rgba(0, 0, 255, 1)">else</span><span style="color: rgba(0, 0, 0, 1)">{
                System.out.println(</span>"not found title"<span style="color: rgba(0, 0, 0, 1)">);
            }
</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">            return context.pages[0];        </span>
<span style="color: rgba(0, 0, 0, 1)">        }
        </span><span style="color: rgba(0, 0, 255, 1)">return</span> (Page) pages.listIterator(0<span style="color: rgba(0, 0, 0, 1)">); 
    }

    </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> main(String[] args) {
        </span><span style="color: rgba(0, 0, 255, 1)">try</span> (Playwright playwright =<span style="color: rgba(0, 0, 0, 1)"> Playwright.create()) {
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">1.使用chromium浏览器，# 浏览器配置，设置以GUI模式启动Chrome浏览器（要查看浏览器UI，在启动浏览器时传递 headless=false 标志。您还可以使用 slowMo 来减慢执行速度。</span>
          Browser browser = playwright.chromium().launch(<span style="color: rgba(0, 0, 255, 1)">new</span> BrowserType.LaunchOptions().setHeadless(<span style="color: rgba(0, 0, 255, 1)">false</span>).setSlowMo(300<span style="color: rgba(0, 0, 0, 1)">));
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">2.创建context</span>
          BrowserContext context =<span style="color: rgba(0, 0, 0, 1)"> browser.newContext();
         
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">创建page</span>
          Page page =<span style="color: rgba(0, 0, 0, 1)"> context.newPage();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">3.浏览器打开网站</span>
          page.navigate("https://www.baidu.com"<span style="color: rgba(0, 0, 0, 1)">);
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">4.点击打开多个新的标签页</span>
          List&lt;Locator&gt; links = page.locator("#s-top-left&gt;a"<span style="color: rgba(0, 0, 0, 1)">).all();
          </span><span style="color: rgba(0, 0, 255, 1)">for</span><span style="color: rgba(0, 0, 0, 1)">(Locator link:links){
              link.click();
          }
          
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">5.打开多个tab 标签页， 切换到新闻页</span>
          Page page1 = switchToPage(context, "新闻"<span style="color: rgba(0, 0, 0, 1)">);
          System.out.println(page1.title());
          
          System.out.println(</span>"Test Pass"<span style="color: rgba(0, 0, 0, 1)">);
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">关闭page</span>
<span style="color: rgba(0, 0, 0, 1)">          page.close();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">关闭browser</span>
<span style="color: rgba(0, 0, 0, 1)">          browser.close();
        }
    }

}</span></pre>
</div>
<h5>4.1.3运行代码</h5>
<p>1.运行代码，右键Run As-&gt;Java Application，就可以看到控制台输出，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202409/1232840-20240910141722253-23663833.png" alt="" loading="lazy"></p>
<p>2.运行代码后电脑端的浏览器的动作。如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202409/1232840-20240910141933236-1385622907.gif" alt="" loading="lazy"></p>
<h4 id="autoid-0-3-1">4.2URL切换</h4>
<p>和title的思路类似：前边已经将所有的标签的title都循环出来了，我们只要切换到我们需要操作的url标签页即可。</p>
<h5>4.2.1代码设计</h5>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202409/1232840-20240910142732477-1653054037.png" alt="" loading="lazy"></p>
<h5>4.2.2参考代码</h5>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">package</span><span style="color: rgba(0, 0, 0, 1)"> com.bjhg.playwright;

</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> java.util.List;

</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Browser;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.BrowserContext;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.BrowserType;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Locator;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Page;
</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> com.microsoft.playwright.Playwright;

</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">
 * </span><span style="color: rgba(128, 128, 128, 1)">@author</span><span style="color: rgba(0, 128, 0, 1)"> 北京-宏哥
 * </span><span style="color: rgba(128, 128, 128, 1)">@param</span><span style="color: rgba(0, 128, 0, 1)"> &lt;context&gt;
 * 
 * @公众号:北京宏哥（微信搜索，关注宏哥，提前解锁更多测试干货）
 * 
 * 《刚刚问世》系列初窥篇-Java+Playwright自动化测试-17-  如何优雅地切换浏览器多窗口（详细教程）
 *
 * 2024年9月19日
 </span><span style="color: rgba(0, 128, 0, 1)">*/</span>
<span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Test_Switch_Window{
    
    </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span><span style="color: rgba(0, 0, 0, 1)"> Page switchToPage(BrowserContext context,String url){
        
        </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">切换到指定 URL 名称的标签页</span>
        List&lt;Page&gt; pages =<span style="color: rgba(0, 0, 0, 1)"> context.pages();
        
        </span><span style="color: rgba(0, 0, 255, 1)">for</span><span style="color: rgba(0, 0, 0, 1)">(Page i:pages){
            </span><span style="color: rgba(0, 0, 255, 1)">if</span>(url != <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">){
                </span><span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)">(i.url().contains(url)){
                    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">激活当前选项卡</span>
<span style="color: rgba(0, 0, 0, 1)">                    i.bringToFront();
                    </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> i;
                }
            }</span><span style="color: rgba(0, 0, 255, 1)">else</span><span style="color: rgba(0, 0, 0, 1)">{
                System.out.println(</span>"not found url"<span style="color: rgba(0, 0, 0, 1)">);
            }
</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">            return context.pages[0];        </span>
<span style="color: rgba(0, 0, 0, 1)">        }
        </span><span style="color: rgba(0, 0, 255, 1)">return</span> (Page) pages.listIterator(0<span style="color: rgba(0, 0, 0, 1)">); 
    }

    </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> main(String[] args) {
        </span><span style="color: rgba(0, 0, 255, 1)">try</span> (Playwright playwright =<span style="color: rgba(0, 0, 0, 1)"> Playwright.create()) {
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">1.使用chromium浏览器，# 浏览器配置，设置以GUI模式启动Chrome浏览器（要查看浏览器UI，在启动浏览器时传递 headless=false 标志。您还可以使用 slowMo 来减慢执行速度。</span>
          Browser browser = playwright.chromium().launch(<span style="color: rgba(0, 0, 255, 1)">new</span> BrowserType.LaunchOptions().setHeadless(<span style="color: rgba(0, 0, 255, 1)">false</span>).setSlowMo(300<span style="color: rgba(0, 0, 0, 1)">));
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">2.创建context</span>
          BrowserContext context =<span style="color: rgba(0, 0, 0, 1)"> browser.newContext();
         
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">创建page</span>
          Page page =<span style="color: rgba(0, 0, 0, 1)"> context.newPage();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">3.浏览器打开网站</span>
          page.navigate("https://www.baidu.com"<span style="color: rgba(0, 0, 0, 1)">);
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">4.点击打开多个新的标签页</span>
          List&lt;Locator&gt; links = page.locator("#s-top-left&gt;a"<span style="color: rgba(0, 0, 0, 1)">).all();
          </span><span style="color: rgba(0, 0, 255, 1)">for</span><span style="color: rgba(0, 0, 0, 1)">(Locator link:links){
              link.click();
          }
          
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">5.打开多个tab 标签页， 切换到新闻页</span>
          Page page1 = switchToPage(context, "hao"<span style="color: rgba(0, 0, 0, 1)">);
          System.out.println(page1.title());
          
          System.out.println(</span>"Test Pass"<span style="color: rgba(0, 0, 0, 1)">);
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">关闭page</span>
<span style="color: rgba(0, 0, 0, 1)">          page.close();
          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">关闭browser</span>
<span style="color: rgba(0, 0, 0, 1)">          browser.close();
        }
    }

}</span></pre>
</div>
<h5>4.2.3运行代码</h5>
<p>1.运行代码，右键Run As-&gt;Java Application，就可以看到控制台输出，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202409/1232840-20240910142813720-299580334.png" alt="" loading="lazy"></p>
<p>2.运行代码后电脑端的浏览器的动作。如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202409/1232840-20240910143008335-1424922429.gif" alt="" loading="lazy"></p>
<h3 id="autoid-0-3-2">4.小结</h3>
<p>本文主要介绍了playwright如何优雅地切换浏览器多窗口，playwright切换页面窗口不需要获取页面窗口的句柄，实现比selenium简单便捷许多，是playwright相对于selenium的一大优势。</p>
</div>
<div id="MySignature" role="contentinfo">
    <div id="MySignature" style="display: block">
	<div style="font-size: 13px; border: 1px dashed rgb(45, 161, 45); padding: 10px 15px; background-color: rgb(248, 248, 248)">
		<label style="font-weight: bold">
			&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家在移动端也能看到我分享的博文，现已注册个人微信公众号，扫描左下方二维码即可，欢迎大家关注，提前解锁更多测试干货！有时间会及时分享相关技术博文。
		</label>
		<br>
		<label style="font-weight: bold">
			&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家互动讨论相关技术问题，刚刚建立了咱们的专门的微信群交流互动群，群内会分享交流测试领域前沿知识。  请您扫描中间的微信二维码进群 
		</label>
		<br>
		<label style="font-weight: bold">
			&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家互动讨论相关技术问题，现已组建专门的微信群，由于微信群满100，请您扫描右下方宏哥个人微信二维码拉你进群
			<label style="font-weight: bold; color: red; font-size: 15px">
				（请务必备注：已关注公众号进群）平时上班忙（和你一样），所以加好友不及时，请稍安勿躁~
			</label>
			，欢迎大家加入这个大家庭，我们一起畅游知识的海洋。
		</label>
		<br>
		&nbsp;&nbsp;&nbsp;&nbsp;感谢您花时间阅读此篇文章,如果您觉得这篇文章你学到了东西也是为了犒劳下博主的码字不易不妨打赏一下吧，让博主能喝上一杯咖啡，在此谢过了！
		<br>
		&nbsp;&nbsp;&nbsp;&nbsp;如果您觉得阅读本文对您有帮助，请点一下左下角
		<a id="recommend" style="font-weight: bold; color: red; font-size: 15px; text-decoration: underline">
			“推荐”
		</a>
		按钮，您的
		<label style="font-weight: bold; color: red; font-size: 15px">
			“推荐”
		</label>
		将是我最大的写作动力！另外您也可以选择
		<a id="follow_me_btn" style="cursor: pointer; color: blue; text-decoration: underline">
			【
			<strong>
				关注我
			</strong>
			】
		</a>
		，可以很方便找到我！
		<br>
		&nbsp;&nbsp;&nbsp;&nbsp;本文版权归作者和博客园共有，来源网址：
		<a href="https://www.cnblogs.com/du-hong" style="color: red; text-decoration: underline" target="_blank">
			https://www.cnblogs.com/du-hong
		</a>
		欢迎各位转载，但是未经作者本人同意，转载文章之后必须在文章页面明显位置给出作者和原文连接，否则保留追究法律责任的权利！
	</div>
	<div style="text-align: center; margin-top: 10px">
		<p style=" font-weight: bolder; color: red; ">
			公众号(关注宏哥)&nbsp; &nbsp;&nbsp;&nbsp;
			&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
			微信群(扫码进群) &nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;客服微信
		</p>
		<img style="width: 200px;padding-right: 50px;" alt="个人微信公众号" src="https://img2018.cnblogs.com/common/1741949/201911/1741949-20191119095948011-608816619.png">
		<img style="width: 200px;padding-right: 65px;" alt="微信群" src="https://img2024.cnblogs.com/blog/1232840/202506/1232840-20250610113707419-637869921.png">
		<img style="width: 200px" alt="个人微信" src="https://img2018.cnblogs.com/common/1741949/201911/1741949-20191106101257091-849954564.png">
	</div>
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-06-12 08:30">2025-06-12 08:30</span>&nbsp;
<a href="https://www.cnblogs.com/du-hong">北京-宏哥</a>&nbsp;
阅读(<span id="post_view_count">25</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18405731);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18405731', targetLink: 'https://www.cnblogs.com/du-hong/p/18405731', title: '《刚刚问世》系列初窥篇-Java+Playwright自动化测试-17-  如何优雅地切换浏览器多窗口（详细教程）' })">举报</a>
</div>
        