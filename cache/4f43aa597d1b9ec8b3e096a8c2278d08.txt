
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/deali/p/18965374" title="发布于 2025-07-04 11:55">
    <span role="heading" aria-level="2">视频中台解决方案：组织树组件+多路视频直播界面开发</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="前言">前言</h2>
<p>最近准备搞新项目了</p>
<p>这次应该不会咕咕咕了，我编写了完整的计划</p>
<p>如果按计划来的话，应该可以在一个月内搞定 MVP 上线</p>
<p>不过在开始新项目之前，得把我之前的工作整理一下，输出几篇笔记记录一下</p>
<p><strong>在公众号后台回复「树组件」可以获取本文树组件的相关代</strong></p>
<h2 id="介绍">介绍</h2>
<p>这个项目是中台里的一个子项目，视频中台</p>
<p>主要功能是管理各个项目的监控设备、摄像头，以及查看监控直播</p>
<p>在此之前，我只用 SRS 部署了直播平台，然后使用 RTMP 协议推流实现直播</p>
<p>但这种方式适合的场景更多是像 B 站、抖音这种直播平台</p>
<p>对于视频监控，业内有个更专业的方式：GB28181-2016 标准</p>
<p>也就是常说的 28181 协议</p>
<p>最终我们选择的监控后端是开源的 WVP (<a href="https://github.com/648540858/wvp-GB28181-pro" target="_blank" rel="noopener nofollow">https://github.com/648540858/wvp-GB28181-pro</a>)</p>
<p>初见这个项目主页，一股浓浓的国产粗犷风格扑面而来，主打一个凑合看看得了，简单的文档后标明了收费内容和付费咨询渠道。</p>
<p>不过也就是这么个粗看其貌不扬的项目，却意外的…能用？</p>
<p>总之就是这么个项目，支撑起几千个设备的视频监控播放。</p>
<p>主要的设备就是海康、大华、宇视等品牌的 IPC、NVR，一开始我还 NVR（录像机）和 IPC（摄像头）拆分开，没想到这系统里是不拆分的，我后面也发现了不拆分更好，一律按照设备来记录，然后实际视频流再按照通道来区分。</p>
<h2 id="视频中台">视频中台</h2>
<p>视频中台这块的技术方面其实不会很复杂</p>
<p>主要的工作量和复杂度还是在沟通、协调等流程方面，原因有以下几点：</p>
<ul>
<li>不单单是做这么一个系统，还需要让现场人员去配置摄像头，让管理人员录入摄像头信息</li>
<li>现场人员很多不会操作电脑，如何指导他们配置摄像头（类似配置路由器）</li>
<li>存量设备和新增设备如何管理？</li>
<li>摄像头和录像机如何编码？</li>
<li>编码完成后如何让现场人员知道哪个编码对应哪个设备？</li>
<li>……</li>
</ul>
<p>这里只列举一部分，实际运行的问题只会更多。</p>
<p>其实这些都还好，只要理清了整个流程，实施起来还是有可行性的。</p>
<p>但一旦涉及得人过多，没有人负责推动，最终就会变成互相推诿，效率低下，一个月都不一定能完成一台设备的接入。</p>
<p>OK，废话太多了，说回正题，先来看看系统界面。</p>
<h3 id="主页">主页</h3>
<p>直接上截图吧，这是视频中台的截图（敏感信息和数据已经全部用假数据代替，请放心查看）</p>
<p><img src="https://img2024.cnblogs.com/blog/866942/202507/866942-20250704115443565-1425801843.png" alt="image" loading="lazy"></p>
<p>从界面可以看出，核心功能就是管理视频和播放视频</p>
<h3 id="视频播放">视频播放</h3>
<blockquote>
<p>PS: 敏感信息已打码，请放心查看</p>
</blockquote>
<p>视频播放界面，就是本文要重点介绍的</p>
<p><img src="https://img2024.cnblogs.com/blog/866942/202507/866942-20250704115458020-998200209.png" alt="image" loading="lazy"></p>
<p>可以切换 1 路、4 路、9 路、16 路播放，这里再截一个 16 路视频的播放截图吧，其他就不放了，相信聪明的读者们能理解的 😃</p>
<p><img src="https://img2024.cnblogs.com/blog/866942/202507/866942-20250704115512516-377444003.png" alt="image" loading="lazy"></p>
<h2 id="技术实现">技术实现</h2>
<p>技术方面，我继续发扬之前「Less is more」的思路: <a href="https://blog.deali.cn/Blog/Post/26937d87e821690c" target="_blank" rel="noopener nofollow">返璞归真！使用 Alpine.js 开发交互式 web 应用，抛弃 node_modules 和 webpack 吧！</a></p>
<p>使用 Alpine.js + HTMX 来实现整个页面</p>
<h2 id="代码">代码</h2>
<h3 id="页面布局">页面布局</h3>
<p>页面布局使用 tailwindcss</p>
<p>交互使用刚才说的 Alpine.js</p>
<pre><code class="language-html">&lt;main x-data="playApp()"&gt;
  &lt;div class="grid grid-cols-12 gap-4"&gt;
    {# 左侧组织/项目树 #}
    &lt;div class="col-span-4" id="tree-list"&gt;
      &lt;div class="bg-white rounded-lg shadow h-full"&gt;
        &lt;div class="border-b border-gray-200 bg-[#f1f5fa] px-4 py-3"&gt;
          &lt;div class="flex items-center justify-between gap-2 h-8"&gt;
            &lt;div class="flex items-center"&gt;
              &lt;span class="w-1.5 h-4 bg-[#156bd2] rounded mr-2"&gt;&lt;/span&gt;
              &lt;h5 class="text-lg font-medium text-gray-900"&gt;组织架构&lt;/h5&gt;
            &lt;/div&gt;
            &lt;button
                    type="button"
                    class="inline-flex gap-2 items-center px-2 py-1 bg-transparent border border-[#0f5cb9] shadow-sm text-sm font-medium rounded-md text-[#0f5cb9] bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed"
                    x-on:click="refreshTree()"
                    x-bind:disabled="isLoading"
                    &gt;
              &lt;i class="fa-solid fa-arrow-rotate-right"&gt;&lt;/i&gt;
              &lt;span x-text="isLoading ? '加载中...' : '刷新'"&gt;&lt;/span&gt;
            &lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="p-4 h-full flex flex-col gap-4"&gt;
          &lt;!-- 搜索框 --&gt;
          &lt;div x-show="!isLoading"&gt;
            &lt;div class="relative"&gt;
              &lt;input
                     type="text"
                     id="tree-search"
                     placeholder="搜索组织或项目..."
                     class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                     x-on:input="tree &amp;&amp; tree.search($event.target.value)"
                     &gt;
              &lt;div class="absolute inset-y-0 right-0 flex items-center pr-3"&gt;
                &lt;svg class="h-4 w-4 text-gray-400" fill="none" stroke="currentColor"
                     viewBox="0 0 24 24"&gt;
                  &lt;path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"&gt;&lt;/path&gt;
                &lt;/svg&gt;
              &lt;/div&gt;
            &lt;/div&gt;
            &lt;!-- 搜索结果统计 --&gt;
            &lt;div id="search-stats" class="mt-2 text-sm text-gray-500" style="display: none;"&gt;&lt;/div&gt;
          &lt;/div&gt;

          &lt;!-- 加载动画骨架屏 --&gt;
          &lt;div x-show="isLoading" class="space-y-3"&gt;
            &lt;div class="animate-pulse"&gt;
              &lt;div class="flex items-center space-x-3"&gt;
                &lt;div class="w-4 h-4 bg-gray-300 rounded"&gt;&lt;/div&gt;
                &lt;div class="h-4 bg-gray-300 rounded w-3/4"&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class="animate-pulse ml-6"&gt;
              &lt;div class="flex items-center space-x-3"&gt;
                &lt;div class="w-4 h-4 bg-gray-300 rounded"&gt;&lt;/div&gt;
                &lt;div class="h-4 bg-gray-300 rounded w-2/3"&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class="animate-pulse ml-12"&gt;
              &lt;div class="flex items-center space-x-3"&gt;
                &lt;div class="w-4 h-4 bg-gray-300 rounded"&gt;&lt;/div&gt;
                &lt;div class="h-4 bg-gray-300 rounded w-1/2"&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class="animate-pulse ml-6"&gt;
              &lt;div class="flex items-center space-x-3"&gt;
                &lt;div class="w-4 h-4 bg-gray-300 rounded"&gt;&lt;/div&gt;
                &lt;div class="h-4 bg-gray-300 rounded w-3/5"&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class="animate-pulse"&gt;
              &lt;div class="flex items-center space-x-3"&gt;
                &lt;div class="w-4 h-4 bg-gray-300 rounded"&gt;&lt;/div&gt;
                &lt;div class="h-4 bg-gray-300 rounded w-4/5"&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class="animate-pulse ml-6"&gt;
              &lt;div class="flex items-center space-x-3"&gt;
                &lt;div class="w-4 h-4 bg-gray-300 rounded"&gt;&lt;/div&gt;
                &lt;div class="h-4 bg-gray-300 rounded w-1/3"&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;

          &lt;!-- 树形结构容器 --&gt;
          &lt;div id="tree-container" class="tree-view" x-show="!isLoading"&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;!-- 播放器 --&gt;
    &lt;div class="col-span-8"&gt;
      &lt;div class="bg-white rounded-lg shadow h-full"&gt;
        &lt;div class="border-b border-gray-200 bg-[#f1f5fa] px-4 py-3"&gt;
          &lt;div class="flex items-center h-8"&gt;
            &lt;span class="w-1.5 h-4 bg-[#156bd2] rounded mr-2"&gt;&lt;/span&gt;
            &lt;h5 class="text-lg font-medium text-gray-900"&gt;视频播放&lt;/h5&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="p-4"&gt;
          &lt;div class="bg-blue-50 text-blue-700 px-4 py-3 rounded-lg mb-2" x-show="!selectedProject"&gt;
            请先选择摄像头
          &lt;/div&gt;
          &lt;!-- 加载摄像头提示 --&gt;
          &lt;div class="bg-yellow-50 text-yellow-700 px-4 py-3 rounded-lg mb-2" x-show="isLoadingCameras"&gt;
            &lt;div class="flex items-center"&gt;
              &lt;i class="fas fa-spinner fa-spin mr-2"&gt;&lt;/i&gt;
              正在加载摄像头列表...
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="space-y-4"&gt;
            &lt;!-- 视频播放控制栏 --&gt;
            &lt;div class="flex items-center justify-between bg-gray-50 px-4 py-3 rounded-lg"&gt;
              &lt;div class="flex items-center space-x-4"&gt;
                &lt;span class="text-sm font-medium text-gray-700"&gt;播放模式:&lt;/span&gt;
                &lt;select x-model="videoLayout" x-on:change="changeVideoLayout()"
                        class="px-3 py-1 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500"&gt;
                  &lt;option value="1"&gt;1路播放&lt;/option&gt;
                  &lt;option value="4"&gt;4路播放&lt;/option&gt;
                  &lt;option value="9"&gt;9路播放&lt;/option&gt;
                  &lt;option value="16"&gt;16路播放&lt;/option&gt;
                &lt;/select&gt;
              &lt;/div&gt;
              &lt;div class="flex items-center space-x-2"&gt;
                &lt;span class="text-sm text-gray-600"
                      x-text="`已播放: ${activeVideos.filter(v =&gt; v).length}/${videoLayout}`"&gt;&lt;/span&gt;
                &lt;button x-on:click="clearAllVideos()"
                        class="px-3 py-1 bg-red-500 text-white text-sm rounded hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500"&gt;
                  清空全部
                &lt;/button&gt;
              &lt;/div&gt;
            &lt;/div&gt;

            &lt;!-- 让tailwind生成样式 --&gt;
            &lt;div class="hidden grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4"&gt;&lt;/div&gt;

            &lt;!-- 视频播放网格 --&gt;
            &lt;div id="video-grid" class="grid gap-2" x-bind:class="getGridClass()"&gt;
              &lt;template x-for="(video, index) in activeVideos" :key="index"&gt;
                &lt;div class="relative bg-black rounded-lg overflow-hidden aspect-video"&gt;
                  &lt;template x-if="activeVideos[index]"&gt;
                    &lt;div class="relative w-full h-full"&gt;
                      &lt;video
                             x-bind:id="`video-player-${index}`"
                             class="w-full h-full object-cover"
                             controls
                             muted
                             x-bind:data-camera-guid="activeVideos[index].guid"
                             &gt;&lt;/video&gt;
                      &lt;!-- 视频信息覆盖层 --&gt;
                      &lt;div class="absolute top-2 left-2 bg-black bg-opacity-70 text-white px-2 py-1 rounded text-xs"&gt;
                        &lt;span x-text="activeVideos[index].name"&gt;&lt;/span&gt;
                      &lt;/div&gt;
                      &lt;!-- 控制按钮 --&gt;
                      &lt;div class="absolute top-2 right-2 flex space-x-1"&gt;
                        &lt;button x-on:click="fullscreenVideo(index)"
                                class="bg-black bg-opacity-70 text-white p-1 rounded hover:bg-opacity-90"&gt;
                          &lt;i class="fas fa-expand text-xs"&gt;&lt;/i&gt;
                        &lt;/button&gt;
                        &lt;button x-on:click="removeVideo(index)"
                                class="bg-red-500 bg-opacity-70 text-white p-1 rounded hover:bg-opacity-90"&gt;
                          &lt;i class="fas fa-times text-xs"&gt;&lt;/i&gt;
                        &lt;/button&gt;
                      &lt;/div&gt;
                    &lt;/div&gt;
                  &lt;/template&gt;
                  &lt;template x-if="!activeVideos[index]"&gt;
                    &lt;div class="flex items-center justify-center h-full text-gray-400"&gt;
                      &lt;div class="text-center"&gt;
                        &lt;i class="fas fa-video text-4xl mb-2"&gt;&lt;/i&gt;
                        &lt;p class="text-sm"&gt;空闲位置&lt;/p&gt;
                      &lt;/div&gt;
                    &lt;/div&gt;
                  &lt;/template&gt;
                &lt;/div&gt;
              &lt;/template&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/main&gt;
</code></pre>
<h3 id="播放器实现">播放器实现</h3>
<p>播放器我选择了  mpegts.js - <a href="https://github.com/xqq/mpegts.js" target="_blank" rel="noopener nofollow">https://github.com/xqq/mpegts.js</a></p>
<p>mpegts.js 是在 HTML5 上直接播放 MPEG2-TS 流的播放器，针对低延迟直播优化，可用于 DVB/ISDB 数字电视流或监控摄像头等的低延迟回放。</p>
<p>这是 B 站开源的 flv.js 的 fork 版本</p>
<p>B 站和国内其他大厂的尿性一样，管生不管养，flv.js 项目已经四年多没更新了，issues 一大堆也不处理，基本处于废弃状态。</p>
<p>估计这也是 B 站的一个 KPI 开源项目吧…</p>
<p>我一开始看到是 B 站开源的，以为会很好用，用 flv.js 来播放，结果根本没法播放，一看才知道 flv.js 只支持 H.264 编码</p>
<p>而现在摄像头很多都是 H.265 编码了…</p>
<p>WVP 项目的播放使用的是 Jessibuca 这个播放器</p>
<p>不过这个项目的文档比 WVP 还乱，让人根本没有想要使用的欲望…（虽说这个项目可能兼容性和性能都会好一些？）</p>
<p>而且因为用了 wasm，不能使用 npm 安装，集成也麻烦，我还是选择了纯 js 实现的方案。</p>
<p>安装也简单</p>
<pre><code class="language-bash">pnpm i mpegts.js
</code></pre>
<p>经过 gulp 配置后集成到静态文件里</p>
<pre><code class="language-html">&lt;script src="{% static 'lib/mpegts.js/dist/mpegts.js' %}"&gt;&lt;/script&gt;
</code></pre>
<p>播放视频流的代码也比较简单</p>
<pre><code class="language-javascript">console.log('播放摄像头:', camera.name, 'GUID:', camera.guid);

// 获取摄像头直播地址
const url = window.API_URLS.cameraStreamUrl.replace('__camera_guid__', camera.guid);
axios.get(url)
  .then(res =&gt; {
  if (res.data.success &amp;&amp; res.data.data &amp;&amp; res.data.data.stream_url) {
    const streamUrl = res.data.data.stream_url.trim();
    console.log('直播地址:', streamUrl);
    this.addVideoToGrid(camera, streamUrl);
  } else {
    alert('获取直播地址失败：无效的响应数据');
  }
})
  .catch(err =&gt; {
  console.error('获取直播地址失败:', err);
  alert('获取直播地址失败，请重试');
});
</code></pre>
<h3 id="纯-alpinejs-的树组件实现">纯 Alpine.js 的树组件实现</h3>
<p>使用 react/vue 时，应该有比较多可选的树组件</p>
<p>不过纯 js 的树组件就都是纯一坨，根本没有能用的！</p>
<p>在一番尝试之后，我决定使用 Alpine.js 自己写一个！</p>
<p>效果在前面的截图里也有了，可以实现树节点展开、实时搜索过滤，需要的功能都有，完美~</p>
<p>代码由于篇幅关系就不放了，有兴趣的同学可以在公众号后台回复「树组件」获取相关代码~</p>
<h2 id="小结">小结</h2>
<p>OK，就这样了，完成了一篇工作内容的整理。</p>
<p>距离我开启新项目又近了一步！</p>

</div>
<div id="MySignature" role="contentinfo">
    微信公众号：「程序设计实验室」
专注于互联网热门新技术探索与团队敏捷开发实践，包括架构设计、机器学习与数据分析算法、移动端开发、Linux、Web前后端开发等，欢迎一起探讨技术，分享学习实践经验。
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.0006944444444444445" data-date-updated="2025-07-04 11:56">2025-07-04 11:55</span>&nbsp;
<a href="https://www.cnblogs.com/deali">程序设计实验室</a>&nbsp;
阅读(<span id="post_view_count">112</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18965374);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18965374', targetLink: 'https://www.cnblogs.com/deali/p/18965374', title: '视频中台解决方案：组织树组件+多路视频直播界面开发' })">举报</a>
</div>
        