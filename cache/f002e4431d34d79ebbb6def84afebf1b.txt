
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/qimang-911/p/19012814" title="发布于 2025-07-30 14:17">
    <span role="heading" aria-level="2">P8328 [COCI 2021/2022 #5] Usmjeravanj</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="p8328-coci-20212022-5-usmjeravanj">P8328 [COCI 2021/2022 #5] Usmjeravanj</h1>
<p>本题的实际难度和通过数不是相符。</p>
<p>实际思维难度：蓝</p>
<p>代码实现难度：绿</p>
<h2 id="部分1简化题意">部分1、简化题意</h2>
<p>存在两条河流，假设分别叫做① 和 ②。</p>
<p>其中①号河流有 <span class="math inline">\(a\)</span> 座城市， ② 号河流有 <span class="math inline">\(b\)</span>  座城市。</p>
<p>河流方向是从编号小的城市流向编号大的城市，现在准备在两条河流的某些城市上建立 <span class="math inline">\(m\)</span> 座桥， 每座桥都是单向的，请给定每座桥的方向，</p>
<p>其中 <span class="math inline">\(0\)</span> 方向代表从河流 ① 上的城市到河流 ② 的城市， <span class="math inline">\(1\)</span> 方向刚好相反。</p>
<p>现在需要使得强连通分量最少，请给出每座桥的具体方向（输出任意一个即可）</p>
<p>比如下图就是一个参考。</p>
<p><img src="https://typora-code.oss-cn-shenzhen.aliyuncs.com/undefinedimage-20250730132327897.png" alt="image-20250730132327897" loading="lazy"></p>
<p>样例一分析：</p>
<p>输入：</p>
<pre><code class="language-cpp">5 3
4
1 2
2 3
3 1
5 3
</code></pre>
<p><img src="https://typora-code.oss-cn-shenzhen.aliyuncs.com/undefinedimage-20250730132944591.png" alt="image-20250730132944591" loading="lazy"></p>
<p>输出：</p>
<p>按照下方给定的最优合法方案，是按照下图所示，所有城市都是连通的。</p>
<pre><code class="language-cpp">1
1 1 0 0
</code></pre>
<p><img src="https://typora-code.oss-cn-shenzhen.aliyuncs.com/undefinedimage-20250730133519885.png" alt="image-20250730133519885" loading="lazy"></p>
<h2 id="部分2思路分析">部分2、思路分析</h2>
<p>首先上述的题目跟有向图的连通有关，大概率是强连通分量，如果没有给定边的选择，直接给定方向，直接可以建边获取得到scc。</p>
<p>值得注意的是，①号河流和②号河流的城市编号相同，肯定不可取，所以可以给②号河流加上一个偏移量</p>
<p>比如</p>
<pre><code class="language-cpp">add_edge(a[i], b[i] + n);
</code></pre>
<p>答案求解已经得到，重点是如何建边？</p>
<p>首先考虑的一点是，选定合适的桥的方向，可以减少强连通分量的数量，假设目前只有两座桥，先进行分类讨论：</p>
<h3 id="情况一两座桥不交叉并且相同方向">情况一：两座桥不交叉，并且相同方向</h3>
<p>结论：下述四种情况，最终无论情况如何，得到的结果对scc无影响。</p>
<p><img src="https://typora-code.oss-cn-shenzhen.aliyuncs.com/undefinedimage-20250730133708200.png" alt="image-20250730133708200" loading="lazy"></p>
<p><img src="https://typora-code.oss-cn-shenzhen.aliyuncs.com/undefinedimage-20250730133743722.png" alt="image-20250730133743722" loading="lazy"></p>
<p><img src="https://typora-code.oss-cn-shenzhen.aliyuncs.com/undefinedimage-20250730133815154.png" alt="image-20250730133815154" loading="lazy"></p>
<p><img src="https://typora-code.oss-cn-shenzhen.aliyuncs.com/undefinedimage-20250730133923195.png" alt="image-20250730133923195" loading="lazy"></p>
<h3 id="情况二两座桥不交叉并且不同方向">情况二：两座桥不交叉，并且不同方向</h3>
<p>结论：下述四种情况，最终无论情况如何，得到的结果对scc无影响。</p>
<p><img src="https://typora-code.oss-cn-shenzhen.aliyuncs.com/undefinedimage-20250730134357793.png" alt="image-20250730134357793" loading="lazy"></p>
<p><img src="https://typora-code.oss-cn-shenzhen.aliyuncs.com/undefinedimage-20250730134338193.png" alt="image-20250730134338193" loading="lazy"></p>
<p><img src="https://typora-code.oss-cn-shenzhen.aliyuncs.com/undefinedimage-20250730134225778.png" alt="image-20250730134225778" loading="lazy"></p>
<p><img src="https://typora-code.oss-cn-shenzhen.aliyuncs.com/undefinedimage-20250730134246879.png" alt="image-20250730134246879" loading="lazy"></p>
<h3 id="情况三两座桥交叉并且相同方向">情况三：两座桥交叉，并且相同方向</h3>
<p>结论：下述两种情况对scc无影响</p>
<p><img src="https://typora-code.oss-cn-shenzhen.aliyuncs.com/undefinedimage-20250730134543495.png" alt="image-20250730134543495" loading="lazy"></p>
<p><img src="https://typora-code.oss-cn-shenzhen.aliyuncs.com/undefinedimage-20250730134611054.png" alt="image-20250730134611054" loading="lazy"></p>
<h3 id="情况四两座桥交叉并且不同方向">情况四：两座桥交叉，并且不同方向</h3>
<p>结论：只有第一张图的方案可以使得scc数量减少，但是第二张图对scc无影响。</p>
<p><img src="https://typora-code.oss-cn-shenzhen.aliyuncs.com/undefinedimage-20250730134731663.png" alt="image-20250730134731663" loading="lazy"><img src="https://typora-code.oss-cn-shenzhen.aliyuncs.com/undefinedimage-20250730134822158.png" alt="image-20250730134822158" loading="lazy"></p>
<h3 id="最终结论所有的建边方向考虑交叉之后方向相反的答案按照下图建边">最终结论：所有的建边方向，考虑交叉之后，方向相反的答案（按照下图建边）</h3>
<p><img src="https://typora-code.oss-cn-shenzhen.aliyuncs.com/undefinedimage-20250730134731663.png" alt="image-20250730134731663" loading="lazy"></p>
<h2 id="部分3具体实现和代码细节">部分3、具体实现和代码细节</h2>
<p>如何判断最终结论，首先假设将所有的桥进行了存储，分别标记为 <span class="math inline">\(x_i\)</span> 和 <span class="math inline">\(y_i\)</span> 。</p>
<p>桥交叉的话，只可能是以下两种选择</p>
<p>选择1、黑色桥是之前已经选择过的，红色的桥是现在需要控制方向的，此处无论黑色的桥的方向如何，</p>
<p>按照如下图所示的方向，从 $x_i $ 指向  $ y_i$ 一定是最佳的。</p>
<p>判断方式是</p>
<p>$x &lt; x _ i $ 并且 $ y_i &lt; y$</p>
<p><img src="https://typora-code.oss-cn-shenzhen.aliyuncs.com/undefinedimage-20250730135426903.png" alt="image-20250730135426903" loading="lazy"></p>
<p>选择2、黑色桥是之后需要选择的，绿色桥是现在需要选择的方向，按照这种方式才可能交叉。</p>
<p><img src="https://typora-code.oss-cn-shenzhen.aliyuncs.com/undefinedimage-20250730135759876.png" alt="image-20250730135759876" loading="lazy"></p>
<p>综上：桥的方向选择比较容易确定，考虑桥的选择的优先顺序，首先确立上述的绿色的边，然后确立红色的边会比较方便一些。</p>
<p>另外看到上述的判断方式，二维偏序关系，可以先排序处理为一维偏序。</p>
<p>按照 <span class="math inline">\(x\)</span> 的顺序从小到大，这样我们在选择的时候，桥枚举的时候，①号河流的城市编号非递减，此时比较交叉的时候，下述关系的</p>
<p>$x &lt; x _ i $ 自动满足，另外只需要找到  $ y_i &lt; y$ ，那么如何判断有没有交叉，需要获取 <span class="math inline">\(R = y_{max}\)</span> ，也就是之前选择过的桥的 <span class="math inline">\(y\)</span> 的最大值。</p>
<p>因为我们需要让 <span class="math inline">\(y_i\)</span> （现在枚举的桥） 交叉的数量最多，此时的 <span class="math inline">\(y\)</span> (之前出现过的桥) 值越大越好。</p>
<p>说的简单点就是，下方的两座桥，当 <span class="math inline">\(x\)</span> 相等的时候，我们肯定会优先把后面绿色的桥的方向考虑，因为后面的桥可以交叉的数量更多。</p>
<p><img src="https://typora-code.oss-cn-shenzhen.aliyuncs.com/undefinedimage-20250730140324806.png" alt="image-20250730140324806" loading="lazy"></p>
<h3 id="代码实现步骤">代码实现步骤：</h3>
<h4 id="步骤一按照x作为第一关键词从小到大排序按照y作为第二关键词从大到小排序">步骤一：按照x作为第一关键词，从小到大排序，按照y作为第二关键词，从大到小排序</h4>
<h4 id="步骤二如果枚举的yi--r说明有交叉选定边的方向和上述图之中的红色边一致也就是0方向如果枚举的-yi--r-说明没有交叉但是此时的y更大需要更新r-此时按照绿色边选择2去处理更优也就是-1-方向">步骤二：如果枚举的y[i] &lt;= R,说明有交叉，选定边的方向和上述图之中的红色边一致，也就是0方向；如果枚举的 y[i] &gt; R ，说明没有交叉，但是此时的y更大，需要更新R， 此时按照绿色边（选择2）去处理更优，也就是 1 方向。</h4>
<h3 id="代码参照">代码参照：</h3>
<p><img src="https://typora-code.oss-cn-shenzhen.aliyuncs.com/undefinedcode-snapshot%20-%202025-07-30T135118.741.png" alt="img" loading="lazy"></p>

</div>
<div id="MySignature" role="contentinfo">
    齐芒行，川锋明！
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-30 14:17">2025-07-30 14:17</span>&nbsp;
<a href="https://www.cnblogs.com/qimang-911">齐芒</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19012814);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19012814', targetLink: 'https://www.cnblogs.com/qimang-911/p/19012814', title: 'P8328 [COCI 2021/2022 #5] Usmjeravanj' })">举报</a>
</div>
        