
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoyan2017/p/18894117" title="发布于 2025-05-24 10:10">
    <span role="heading" aria-level="2">flutter3-deepseek流式AI模板|Flutter3.27+Dio+DeepSeeek聊天ai助手</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p><span style="font-size: 18px; font-family: 宋体, &quot;Songti SC&quot;; color: rgba(79, 107, 254, 1)">基于<span style="background-color: rgba(204, 255, 204, 1)">Flutter3+DeepSeek-V3+Markdown</span>跨平台<strong>流式ai</strong>打字输出问答助手。</span></p>
<p><span style="font-size: 12px"><strong>flutter3-deepseek-chat</strong>跨平台ai流式实例，基于<span style="background-color: rgba(255, 255, 153, 1)">Flutter3.27+Dart3+Getx+Dio集成DeepSeek-V3</span>对话模型，从0-1纯撸仿DeepSeek智能ai聊天系统。实现<span style="background-color: rgba(204, 255, 255, 1)">流式输出打字效果、代码高亮、本地存储会话</span>等功能。</span></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524084458576-857252066.png" alt=""></p>
<h3>技术栈</h3>
<ul>
<li><span style="font-size: 12px">开发工具：VScode</span></li>
<li><span style="font-size: 12px">技术框架：flutter3.27.1+dart3.6.0</span></li>
<li><span style="font-size: 12px">AI对话模型：deepseek-v3</span></li>
<li><span style="font-size: 12px">网络请求：dio^5.8.0+1</span></li>
<li><span style="font-size: 12px">路由/状态管理：get^4.7.2</span></li>
<li><span style="font-size: 12px">本地存储：get_storage^2.1.1</span></li>
<li><span style="font-size: 12px">markdown解析：flutter_markdown^0.7.7</span></li>
<li><span style="font-size: 12px">高亮插件：flutter_highlight^0.7.0</span></li>
<li><span style="font-size: 12px">弹框组件：shirne_dialog^4.8.3</span></li>
<li><span style="font-size: 12px">图片预览：easy_image_viewer^1.5.1</span></li>
<li><span style="font-size: 12px">环境变量插件：flutter_dotenv^5.2.1</span></li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524084849825-223946424.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524085023362-1352784543.gif" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524085033685-914601951.gif" alt=""></p>
<h3>项目特征</h3>
<ol>
<li><span style="font-size: 12px">Flutter3+DeepSeek流式输出打字效果</span></li>
<li><span style="font-size: 12px">基于Flutter3.27搭建项目，接入DeepSeek-V3，对话更丝滑</span></li>
<li><span style="font-size: 12px">支持手机端/桌面端显示</span></li>
<li><span style="font-size: 12px">支持代码块高亮、多轮上下文会话、本地存储对话</span></li>
<li><span style="font-size: 12px">支持代码块横向滚动、代码复制</span></li>
<li><span style="font-size: 12px">支持图片宽度100%渲染、在线图片预览功能</span></li>
<li><span style="font-size: 12px">支持链接跳转、表格显示功能</span></li>
</ol>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524085607221-1708157797.gif" alt=""></p>
<h3>项目框架目录结构</h3>
<p><span style="font-size: 12px">flutter3-deepseek基于&nbsp;<span class="cnblogs_code">Flutter3.<span style="color: rgba(128, 0, 128, 1)">27</span></span>&nbsp;搭建项目框架，整合&nbsp;<span class="cnblogs_code">DeepSeek-V3</span>&nbsp;API对话大模型。</span></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524085912112-2047548819.png" alt=""></p>
<blockquote>
<h4><em>Flutter3-DeepSeek跨平台ai对话已经同步到我的作品铺，感谢鼓励与支持！</em></h4>
<p><span style="font-size: 12px"><a href="https://mall.bilibili.com/neul-next/detailuniversal/detail.html?isMerchant=1&amp;page=detailuniversal_detail&amp;saleType=10&amp;itemsId=12432727&amp;loadingShow=1&amp;noTitleBar=1&amp;msource=merchant_share" target="_blank" rel="noopener nofollow">Flutter3+DeepSeek-V3跨平台AI流式输出聊天模板</a></span></p>
</blockquote>
<h3>flutter环境变量.env</h3>
<p><span style="font-size: 12px">注册 DeepSeek 账号并创建 API Key，建议将密钥存储在环境变量中（如 .env）</span></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524090516038-1427204845.png" alt="" loading="lazy"></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)"># 项目名称
APP_NAME </span>= 'Flutter3-DeepSeek'<span style="color: rgba(0, 0, 0, 1)">

# DeepSeek API配置
DEEPSEEK_API_KEY </span>=<span style="color: rgba(0, 0, 0, 1)"> your apikey
DEEPSEEK_BASE_URL </span>= https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">api.deepseek.com</span></pre>
</div>
<h3>配置入口main.dart</h3>
<div class="cnblogs_code">
<pre>import 'dart:io'<span style="color: rgba(0, 0, 0, 1)">;
import </span>'package:flutter/material.dart'<span style="color: rgba(0, 0, 0, 1)">;
import </span>'package:get/get.dart'<span style="color: rgba(0, 0, 0, 1)">;
import </span>'package:get_storage/get_storage.dart'<span style="color: rgba(0, 0, 0, 1)">;
import </span>'package:shirne_dialog/shirne_dialog.dart'<span style="color: rgba(0, 0, 0, 1)">;
import </span>'package:flutter_dotenv/flutter_dotenv.dart'<span style="color: rgba(0, 0, 0, 1)">;

import </span>'controller/app.dart'<span style="color: rgba(0, 0, 0, 1)">;
import </span>'controller/chat.dart'<span style="color: rgba(0, 0, 0, 1)">;

</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 引入路由配置</span>
import 'router/index.dart'<span style="color: rgba(0, 0, 0, 1)">;

</span><span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> main() async {
  </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 初始化存储服务</span>
<span style="color: rgba(0, 0, 0, 1)">  await GetStorage.init();

  </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 将.env文件内容加载到dotenv中</span>
  await dotenv.load(fileName: '.env'<span style="color: rgba(0, 0, 0, 1)">);

  </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 注册GetxController</span>
<span style="color: rgba(0, 0, 0, 1)">  Get.put(AppStore());
  Get.put(ChatStore());

  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 获取AppStore实例</span>
    final appStore =<span style="color: rgba(0, 0, 0, 1)"> AppStore.to;
    
    </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> GetMaterialApp(
      title: </span>'Flutter3 DeepSeek'<span style="color: rgba(0, 0, 0, 1)">,
      debugShowCheckedModeBanner: </span><span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">,
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Color(</span>0xFF4F6BFE<span style="color: rgba(0, 0, 0, 1)">)),
        useMaterial3: </span><span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">,
        fontFamily: Platform.isWindows </span>? 'Microsoft YaHei' : <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">,
      ),
      </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 初始路由</span>
      initialRoute: appStore.isLogin ? '/' : '/login'<span style="color: rgba(0, 0, 0, 1)">,
      </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 路由页面</span>
<span style="color: rgba(0, 0, 0, 1)">      getPages: routePages,</span>
<span style="color: rgba(0, 0, 0, 1)">      navigatorKey: MyDialog.navigatorKey,
      localizationsDelegates: [</span>
<span style="color: rgba(0, 0, 0, 1)">        ShirneDialogLocalizations.delegate,
      ],
    );
  }
}</span></pre>
</div>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524090919711-1909281631.png" alt=""></p>
<p><span style="font-size: 12px">支持编译运行到桌面windows端，以<strong>750px宽度</strong>展示布局。</span></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524092058523-1638916089.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524092114371-1175271967.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524092125871-1690972021.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524092136249-183092601.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524092201998-1102587716.png" alt=""></p>
<p>项目布局结构</p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524092637499-691060066.png" alt="" loading="lazy"></p>
<p><span style="font-size: 12px">项目整体分为<strong>顶部导航栏+对话主区域+底部编辑框</strong>三大模块。</span></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">@override
Widget build(BuildContext context) {
  </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> Scaffold(
    key: scaffoldKey,
    backgroundColor: Colors.white,
    appBar: AppBar(
      ...
      actions: [
        IconButton(icon: Icon(Icons.try_sms_star_outlined), onPressed: () </span>=&gt;<span style="color: rgba(0, 0, 0, 1)"> handleCreate(),),
      ],
    ),
    body: Center(
      child: ConstrainedBox(
        constraints: BoxConstraints(
          maxWidth: </span>750.0<span style="color: rgba(0, 0, 0, 1)">,
        ),
        child: Flex(
          direction: Axis.vertical,
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Expanded(
              child: Stack(
                children: [
                  GestureDetector(
                    child: ScrollConfiguration(
                      behavior: CustomScrollBehavior().copyWith(scrollbars: </span><span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">),
                      </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> GetBuilder响应流式输出</span>
<span style="color: rgba(0, 0, 0, 1)">                      child: Obx(() {
                        </span><span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)"> (chatStore.currentMessages.isEmpty) {
                          </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 欢迎信息</span>
                          <span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> Welcome(
                            onChanged: (value) {
                              textEditingController.text </span>=<span style="color: rgba(0, 0, 0, 1)"> value;
                            },
                          );
                        }
                        </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> ListView.builder(
                          keyboardDismissBehavior: ScrollViewKeyboardDismissBehavior.onDrag, </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 当滚动时候隐藏键盘</span>
<span style="color: rgba(0, 0, 0, 1)">                          controller: scrollController,
                          padding: EdgeInsets.all(</span>10.0<span style="color: rgba(0, 0, 0, 1)">),
                          reverse: </span><span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">,
                          shrinkWrap: </span><span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">,
                          itemCount: chatStore.currentMessages.length,
                          itemBuilder: (context, index) {
                            ...
                          }
                        );
                      }),
                    ),
                    onTap: () {
                      focusNode.unfocus();
                    },
                  ),
                  </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 滚动到底部</span>
<span style="color: rgba(0, 0, 0, 1)">                  AnimatedPositioned(
                    ...
                  ),
                ],
              ),
            ),
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 底部编辑器区域</span>
<span style="color: rgba(0, 0, 0, 1)">            ChatEditor(controller: textEditingController),
          ]
        ),
      ),
    ),
    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 侧边栏</span>
<span style="color: rgba(0, 0, 0, 1)">    drawer: Drawer(
      child: Sidebar(),
    ),
  );
}</span></pre>
</div>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524093101952-871404534.gif" alt=""></p>
<h3>flutter3+getx路由管理</h3>
<div class="cnblogs_code">
<pre>import 'package:flutter/material.dart'<span style="color: rgba(0, 0, 0, 1)">;
import </span>'package:get/get.dart'<span style="color: rgba(0, 0, 0, 1)">;

import </span>'../controller/app.dart'<span style="color: rgba(0, 0, 0, 1)">;

</span><span style="color: rgba(0, 128, 0, 1)">/*</span><span style="color: rgba(0, 128, 0, 1)"> 引入路由页面 </span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 0, 1)">
import </span>'../pages/auth/login.dart'<span style="color: rgba(0, 0, 0, 1)">;
import </span>'../pages/auth/register.dart'<span style="color: rgba(0, 0, 0, 1)">;
import </span>'../pages/index/index.dart'<span style="color: rgba(0, 0, 0, 1)">;
import </span>'../pages/aihub/index.dart'<span style="color: rgba(0, 0, 0, 1)">;
import </span>'../pages/setting/index.dart'<span style="color: rgba(0, 0, 0, 1)">;

</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 路由地址集合</span>
final Map&lt;String, Widget&gt; routes =<span style="color: rgba(0, 0, 0, 1)"> {
  </span>'/'<span style="color: rgba(0, 0, 0, 1)">: Home(),
  </span>'/aihub'<span style="color: rgba(0, 0, 0, 1)">: Aihub(),
  </span>'/setting'<span style="color: rgba(0, 0, 0, 1)">: Setting(),
};

final List</span>&lt;GetPage&gt; routeList = routes.entries.map((e) =&gt;<span style="color: rgba(0, 0, 0, 1)"> GetPage(
  name: e.key, </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 路由名称</span>
  page: () =&gt; e.value, <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 路由页面</span>
  transition: Transition.rightToLeftWithFade, <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 跳转路由动画</span>
  middlewares: [RouteMiddleware()], <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 路由中间件</span>
<span style="color: rgba(0, 0, 0, 1)">)).toList();

final List</span>&lt;GetPage&gt; routePages =<span style="color: rgba(0, 0, 0, 1)"> [
  GetPage(name: </span>'/login', page: () =&gt;<span style="color: rgba(0, 0, 0, 1)"> const Login()),
  GetPage(name: </span>'/register', page: () =&gt;<span style="color: rgba(0, 0, 0, 1)"> const Register()),
  ...routeList,
];

</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 路由中间件拦截验证</span>
<span style="color: rgba(0, 0, 0, 1)">class RouteMiddleware extends GetMiddleware {
  final appStore </span>=<span style="color: rgba(0, 0, 0, 1)"> AppStore.to;

  @override
  RouteSettings</span>? redirect(String?<span style="color: rgba(0, 0, 0, 1)"> route) {
    </span><span style="color: rgba(0, 0, 255, 1)">return</span> appStore.isLogin ? <span style="color: rgba(0, 0, 255, 1)">null</span> : const RouteSettings(name: '/login'<span style="color: rgba(0, 0, 0, 1)">);
  }
}</span></pre>
</div>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524093306966-663416351.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524093330069-1406283701.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524093338036-627439002.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524093347635-613166780.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524093416843-1528522217.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524093426292-253904999.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524093442939-1253089784.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524093458295-623674443.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524093509634-990469197.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524093539406-1894678784.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524093551072-1246315313.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524093616840-72559286.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524093637195-1617219826.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524093648575-1310302334.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524093728850-636539723.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524093747633-321478342.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524093804819-112936674.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524093820942-179897795.png" alt=""></p>
<h3>flutter3解析流式markdown结构</h3>
<p><span style="font-size: 12px">项目中flutter3接入deepseek api流式输出返回，使用&nbsp;<span class="cnblogs_code">flutter_markdown</span>&nbsp;组件来解析markdown语法结构。使用&nbsp;<span class="cnblogs_code">flutter_highlight</span>&nbsp;组件来高亮代码块。</span></p>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524094230511-841161850.png" alt="" loading="lazy"></p>
<p><strong>特性</strong></p>
<ul>
<li><span style="font-size: 12px">支持代码块横向滚动</span></li>
<li><span style="font-size: 12px">支持代码块、行内代码高亮</span></li>
<li><span style="font-size: 12px">支持代码块复制功能</span></li>
<li><span style="font-size: 12px">支持表格渲染功能</span></li>
<li><span style="font-size: 12px">支持网络图片100%宽度渲染及预览</span></li>
<li><span style="font-size: 12px">支持网络链接跳转功能</span></li>
</ul>
<div class="cnblogs_code">
<pre>import 'package:flutter/material.dart'<span style="color: rgba(0, 0, 0, 1)">;
import </span>'package:flutter/services.dart'<span style="color: rgba(0, 0, 0, 1)">;
import </span>'package:get/get.dart'<span style="color: rgba(0, 0, 0, 1)">;
import </span>'package:flutter_markdown/flutter_markdown.dart'<span style="color: rgba(0, 0, 0, 1)">;
import </span>'package:flutter_highlight/flutter_highlight.dart'<span style="color: rgba(0, 0, 0, 1)">;
import </span>'package:flutter_highlight/themes/github.dart'<span style="color: rgba(0, 0, 0, 1)">;
import </span>'package:url_launcher/url_launcher.dart'<span style="color: rgba(0, 0, 0, 1)">;
import </span>'package:easy_image_viewer/easy_image_viewer.dart'<span style="color: rgba(0, 0, 0, 1)">;
import </span>'package:markdown/markdown.dart'<span style="color: rgba(0, 0, 0, 1)"> as md;

class FMarkdown extends StatefulWidget {
  const FMarkdown({
    super.key,
    required </span><span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">.data,
  });

  final String data;

  @override
  State</span>&lt;FMarkdown&gt; createState() =&gt;<span style="color: rgba(0, 0, 0, 1)"> _FMarkdownState();
}

class _FMarkdownState extends State</span>&lt;FMarkdown&gt;<span style="color: rgba(0, 0, 0, 1)"> {
  @override
  Widget build(BuildContext context) {
    </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> MarkdownBody(
      data: widget.data,
      fitContent: </span><span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">,
      styleSheet: MarkdownStyleSheet(
        blockSpacing: </span>12.0<span style="color: rgba(0, 0, 0, 1)">,
        </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 表格</span>
<span style="color: rgba(0, 0, 0, 1)">        tableBorder: TableBorder.all(color: Colors.black12),
        </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 水平线</span>
<span style="color: rgba(0, 0, 0, 1)">        horizontalRuleDecoration: BoxDecoration(
          border: Border(top: BorderSide(color: Colors.black12, width: </span>1.0<span style="color: rgba(0, 0, 0, 1)">)),
        ),
        </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 代码块</span>
<span style="color: rgba(0, 0, 0, 1)">        codeblockDecoration: BoxDecoration(
          color: Color(</span>0xfff8f8f8<span style="color: rgba(0, 0, 0, 1)">),
          borderRadius: BorderRadius.circular(</span>10.0<span style="color: rgba(0, 0, 0, 1)">),
        ),
        </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 引用</span>
        blockquotePadding: EdgeInsets.only(left: 16.0, top: 8.0, bottom: 8.0<span style="color: rgba(0, 0, 0, 1)">),
        blockquoteDecoration: BoxDecoration(
          border: Border(left: BorderSide(color: Colors.black12, width: </span>4.0<span style="color: rgba(0, 0, 0, 1)">)),
        )
      ),
      builders: {
        </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 自定义代码/代码块构建</span>
        'code'<span style="color: rgba(0, 0, 0, 1)">: CustomCodeBuilder(),
      },
      </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 自定义图片构建</span>
      sizedImageBuilder: (config) =&gt;<span style="color: rgba(0, 0, 0, 1)"> ImageBuilderWidget(config: config),
      </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 点击链接</span>
<span style="color: rgba(0, 0, 0, 1)">      onTapLink: (text, href, title) async {
        </span><span style="color: rgba(0, 0, 255, 1)">if</span> (href != <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">) {
          </span><span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)">(await canLaunchUrl(Uri.parse(href))) {
            await launchUrl(Uri.parse(href));
          }</span><span style="color: rgba(0, 0, 255, 1)">else</span><span style="color: rgba(0, 0, 0, 1)"> {
            debugPrint(</span>'无法访问 $href'<span style="color: rgba(0, 0, 0, 1)">);
          }
        }
      },
    );
  }
}</span></pre>
</div>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524094818427-530167345.png" alt=""></p>
<h3>flutter3+dio调用deepseek实现流式sse输出</h3>
<div class="cnblogs_code">
<pre>final response =<span style="color: rgba(0, 0, 0, 1)"> await dio.post(
  </span>'$baseURL/v1/chat/completions'<span style="color: rgba(0, 0, 0, 1)">,
  options: Options(
    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 响应超时</span>
    receiveTimeout: const Duration(seconds: 60<span style="color: rgba(0, 0, 0, 1)">),
    headers: {
      </span>"Content-Type": "application/json"<span style="color: rgba(0, 0, 0, 1)">,
      </span>"Authorization": "Bearer $apiKEY"<span style="color: rgba(0, 0, 0, 1)">,
    },
    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 设置响应类型为流式响应</span>
<span style="color: rgba(0, 0, 0, 1)">    responseType: ResponseType.stream,
  ),
  data: {
    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 多轮会话</span>
    'messages': widget.multiConversation ? chatStore.historySession : [{'role': 'user', 'content'<span style="color: rgba(0, 0, 0, 1)">: editorValue}],
    </span>'model': 'deepseek-chat', <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> deepseek-chat对话模型 deepseek-reasoner推理模型</span>
    'stream': <span style="color: rgba(0, 0, 255, 1)">true</span>, <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 流式输出</span>
    'max_tokens': 8192, <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 限制一次请求中模型生成 completion 的最大 token 数(默认使用 4096)</span>
    'temperature': 0.4, <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 严谨采样 越低越严谨(默认1)</span>
<span style="color: rgba(0, 0, 0, 1)">  }
);</span></pre>
</div>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524095520190-1167096652.png" alt=""></p>
<p>综上就是Flutter3+DeepSeek实战跨平台流式AI对话项目的一些分享知识，感谢大家的阅读与支持~</p>
<h3><span style="background-color: rgba(255, 255, 0, 1); color: rgba(0, 0, 255, 1)"><a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoyan2017/p/18853514" target="_blank"><span style="background-color: rgba(255, 255, 0, 1); color: rgba(0, 0, 255, 1)">Uniapp-DeepSeek跨三端AI助手|uniapp+vue3+deepseek-v3流式ai聊天模板</span></a></span></h3>
<h3><span style="background-color: rgba(204, 255, 204, 1)"><a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoyan2017/p/18830611" target="_blank"><span style="background-color: rgba(204, 255, 204, 1)">Electron35-DeepSeek桌面端AI系统|vue3.5+electron+arco客户端ai模板</span></a></span></h3>
<h3><span style="background-color: rgba(255, 255, 153, 1)"><a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoyan2017/p/18795796" target="_blank"><span style="background-color: rgba(255, 255, 153, 1)">vue3-webseek网页版AI问答|Vite6+DeepSeek+Arco流式ai聊天打字效果</span></a></span></h3>
<p><strong>附上几个最新项目实例</strong></p>
<blockquote>
<p><span style="font-size: 12px"><a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoyan2017/p/18773480" target="_blank">Vue3-DeepSeek-Chat流式AI对话|vite6+vant4+deepseek智能ai聊天助手</a></span></p>
<p><span style="font-size: 12px"><a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoyan2017/p/18700875" target="_blank">flutter3-dymall仿抖音直播商城|Flutter3.27短视频+直播+聊天App实例</a></span></p>
<p><span style="font-size: 12px"><a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoyan2017/p/18437155" target="_blank">Tauri2.0+Vite5聊天室|vue3+tauri2+element-plus仿微信|tauri聊天应用</a></span></p>
<p><span style="font-size: 12px"><a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoyan2017/p/18396212" target="_blank">Electron32-ViteOS桌面版os系统|vue3+electron+arco客户端OS管理模板</a></span></p>
<p><span style="font-size: 12px"><a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoyan2017/p/18366451" target="_blank">Electron31-Vue3Admin管理系统|vite5+electron+pinia桌面端后台Exe</a></span></p>
<p><span style="font-size: 12px"><a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoyan2017/p/18165578" target="_blank">uniapp+vue3聊天室|uni-app+vite4+uv-ui跨端仿微信app聊天语音/朋友圈</a></span></p>
<p><span style="font-size: 12px"><a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaoyan2017/p/18592873" target="_blank">uniapp+vue3酒店预订|vite5+uniapp预约订房系统模板(h5+小程序+App端)</a></span></p>
</blockquote>
<p><img src="https://img2024.cnblogs.com/blog/1289798/202505/1289798-20250524100442179-518334694.gif" alt=""></p>
<p>&nbsp;</p>
</div>
<div id="MySignature" role="contentinfo">
    本文为博主原创文章，未经博主允许不得转载，欢迎大家一起交流 QQ（282310962） wx（xy190310）
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.17256315736342592" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-24 10:11">2025-05-24 10:10</span>&nbsp;
<a href="https://www.cnblogs.com/xiaoyan2017">xiaoyan2017</a>&nbsp;
阅读(<span id="post_view_count">28</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18894117);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18894117', targetLink: 'https://www.cnblogs.com/xiaoyan2017/p/18894117', title: 'flutter3-deepseek流式AI模板|Flutter3.27+Dio+DeepSeeek聊天ai助手' })">举报</a>
</div>
        