
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/kklldog/p/18747156/aspire-agileconfig" title="发布于 2025-03-03 01:21">
    <span role="heading" aria-level="2">在 Aspire 项目下使用 AgileConfig</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="什么是-aspire">什么是 Aspire</h2>
<p>.NET Aspire 是一组工具、模板和包，用于构建易于监控的、可投入生产的应用程序。.NET Aspire 通过一系列 NuGet 包交付，这些包通过启动或解决现代应用开发中的特定问题来提升开发效率。 如今的应用通常使用大量服务，例如数据库、消息传送和缓存，其中许多服务通过 .NET Aspire 集成得到支持。<br>
Aspire 是微软发布的一项新技术。最近社区也有人跟我提需求说 AgileConfig 要支持 Aspire。<br>
因为这不是 Aspire 的介绍文章，所以不过多表述。想要了解可参考以下文档：<br>
<a href="https://learn.microsoft.com/zh-cn/dotnet/aspire/get-started/aspire-overview" target="_blank" rel="noopener nofollow">https://learn.microsoft.com/zh-cn/dotnet/aspire/get-started/aspire-overview</a></p>
<h2 id="使用-agileconfig-的传统方式">使用 AgileConfig 的传统方式</h2>
<p>通常我们使用 AgileConfig 至少需要以下步骤：</p>
<ol>
<li>使用 docker run 命令把服务端跑起来</li>
<li>配置 admin 密码</li>
<li>添加应用，设置 appId，secret</li>
<li>在客户端项目添加 client 包，修改 appsettings 配置文件</li>
</ol>
<p>通过以上步骤后，你的应用至少应该是能成功连上 AgileConfig 服务端了。</p>
<h2 id="在-aspire-下使用-agileconfig">在 Aspire 下使用 AgileConfig</h2>
<p>下面让我们看看如何在 Aspire 下使用 AgileConfig。<br>
相信大家肯定看过一些 Aspire 的案例。一些 infrastructure 的组件（比如 Sqlserver 数据库），可以通过 Aspire 直接运行起来，通过代码进行一些简单的配置后，其他项目就可以使用了。<br>
那么使用 AgileConfig 也是一样。让我们直接看代码吧。</p>
<h3 id="新建-aspire-项目">新建 Aspire 项目</h3>
<p>使用 VS 新建一个标准 Aspire 项目。最后我们会得到这样一个解决方案：</p>
<ul>
<li>AspireProjectWithAgileConfig.ApiService</li>
<li>AspireProjectWithAgileConfig.AppHost</li>
<li>AspireProjectWithAgileConfig.Web</li>
</ul>
<p>他们之间的依赖关系如下：</p>
<p><img src="https://static.xbaby.xyz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250301150900.png" alt="" loading="lazy"></p>
<h3 id="在-apphost-项目上使用-agileconfig">在 AppHost 项目上使用 AgileConfig</h3>
<pre><code>dotnet add package AgileConfig.Aspire.Hosting --version 1.0.0
</code></pre>
<p>首先安装 AgileConfig.Aspire.Hosting。 这个包是 AgileConfig 服务端的一个扩展。使用它配合 Aspire 可以直接启动 AgileConfig 容器并且简单配置它。</p>
<p>安装完后，我们在 Program 下添加如下代码：</p>
<pre><code>using Aspire.Hosting.AgileConfig;

var builder = DistributedApplication.CreateBuilder(args);

var agileConfig = builder.AddAgileConfig(); // 添加 AgileConfig 服务端，这会启动一个 Container

var agileConfig_apiservice = agileConfig.AddApp("apiservice"); // 在 AgileConfig 添加一个应用 apiservice，客户端会从这里读取业务
var agileConfig_webfrontend = agileConfig.AddApp("webfrontend"); // 在 AgileConfig 添加一个应用 webfrontend，客户端会从这里读取业务


var apiService = builder.AddProject&lt;Projects.AspireProjectWithAgileConfig_ApiService&gt;("apiservice");
var webFrontend = builder.AddProject&lt;Projects.AspireProjectWithAgileConfig_Web&gt;("webfrontend").WithExternalHttpEndpoints();

apiService.WithReference(agileConfig_apiservice); // apiservice 项目引用 agileConfig_apiservice 应用
apiService.WaitFor(agileConfig); // apiservice 项目等待 agileConfig container 启动后再启动自己

webFrontend.WithReference(agileConfig_webfrontend);  // webFrontend 项目引用 agileConfig_webfrontend 应用
webFrontend.WaitFor(agileConfig); // webFrontend 项目等待 agileConfig container 启动后再启动自己

webFrontend.WithReference(apiService);
webFrontend.WaitFor(apiService);

builder.Build().Run();

</code></pre>
<p>让我们解释一下关键代码：</p>
<ol>
<li>添加 AgileConfig 服务端</li>
</ol>
<pre><code>var agileConfig = builder.AddAgileConfig();
</code></pre>
<p>作用：启动一个 AgileConfig 服务端的 Docker 容器，作为配置中心。</p>
<ol start="2">
<li>在 AgileConfig 中注册应用</li>
</ol>
<pre><code>var agileConfig_apiservice = agileConfig.AddApp("apiservice");
var agileConfig_webfrontend = agileConfig.AddApp("webfrontend");
</code></pre>
<p>作用：在 AgileConfig 中注册两个应用 apiservice 和 webfrontend，它们的配置信息会被客户端读取。</p>
<p>细节：这两个应用对应实际的后端 API 和前端 Web 项目，后续客户端（如 apiService 和 webFrontend）会从 AgileConfig 中读取它们的配置。</p>
<ol start="3">
<li>配置依赖关系</li>
</ol>
<pre><code>// API 服务依赖 AgileConfig 中的 apiservice 配置
apiService.WithReference(agileConfig_apiservice);
apiService.WaitFor(agileConfig); // 等待 AgileConfig 容器启动

// Web 前端依赖 AgileConfig 中的 webfrontend 配置
webFrontend.WithReference(agileConfig_webfrontend);
webFrontend.WaitFor(agileConfig); // 等待 AgileConfig 容器启动

// Web 前端依赖 API 服务
webFrontend.WithReference(apiService);
webFrontend.WaitFor(apiService); // 等待 API 服务启动
</code></pre>
<p>作用：定义服务启动顺序和依赖关系。</p>
<p>关键方法：</p>
<p>WithReference()：声明某个服务依赖另一个服务（如配置或另一个项目）。</p>
<p>WaitFor()：确保被依赖的服务启动后再启动当前服务。</p>
<ol start="4">
<li>新的依赖关系如下</li>
</ol>
<p><img src="https://static.xbaby.xyz/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20250301153016.png" alt="" loading="lazy"></p>
<h3 id="在客户端项目上使用-agileconfigclient">在客户端项目上使用 AgileConfig.Client</h3>
<p>要连接 AgileConfig 服务端，我们需要在客户端项目添加新的包引用：</p>
<pre><code>dotnet add package AgileConfig.Client.Aspire --version 1.0.0
</code></pre>
<p>以 ApiService 项目为例：</p>
<pre><code>using Aspire.AgileConfig.Client;

var appName = "apiservice";

var builder = WebApplication.CreateBuilder(args);

builder.Host.UseAspireAgileConfig(appName);
</code></pre>
<p>客户端项目现在配置起来就超级简单了，只需要一行代码就解决问题了，你甚至不需要去配置 appsettings 来指定 agileconfig 的相关配置它就能运行了。</p>
<h2 id="运行">运行</h2>
<p>下面让我们运行整个项目看看效果吧。</p>
<p><img src="https://static.xbaby.xyz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250301155119.png" alt="" loading="lazy"></p>
<p>通过 Aspire 的控制台我们可以看到 AgileConfig 的相关资源以及 2 个 project 项目都已经启动了。</p>
<p><img src="https://static.xbaby.xyz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250301155434.png" alt="" loading="lazy"></p>
<p>点击 AgileConfig 的终结点可以直接打开 AgileConfig 的控制台。使用 admin/123456 默认密码就可以登录进去。</p>
<p><img src="https://static.xbaby.xyz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250301155720.png" alt="" loading="lazy"></p>
<p>打开应用配置界面，可以看到 apiService， webfrontend 项目已经自动建立起来。</p>
<p><img src="https://static.xbaby.xyz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250301155737.png" alt="" loading="lazy"></p>
<p>打开终端界面，可以看到有两个客户端连接在服务端上。</p>
<p><img src="https://static.xbaby.xyz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250301160203.png" alt="" loading="lazy"></p>
<p>点击 webFrontend 的终结点可以直接打开这个 blazor 项目，可以正常运行。</p>
<h2 id="总结">总结</h2>
<p>以上我们通过一个简单的示例演示了在 Aspire 下如何使用 AgileConfig。跟传统方案比起来，你不再需要关心：如何使用 docker 运行 AgileConfig 的服务端，不再需要关心如何在 appsettings 下添加 AgileConfig 的相关配置。<br>
可以看到过程还是非常丝滑的。</p>
<p>源代码在这：<br>
<a href="https://github.com/kklldog/Aspire.Hosting.AgileConfig" target="_blank" rel="noopener nofollow">https://github.com/kklldog/Aspire.Hosting.AgileConfig</a></p>
<p><a href="https://github.com/dotnetcore/AgileConfig" target="_blank" rel="noopener nofollow">https://github.com/dotnetcore/AgileConfig</a></p>
<h2 id="关注我的公众号一起玩转技术">关注我的公众号一起玩转技术</h2>
<p><img src="https://static.xbaby.xyz/qrcode.jpg" alt="" loading="lazy"></p>

</div>
<div id="MySignature" role="contentinfo">
    <div id="AllanboltSignature">        
<p id="PSignature" style="border-top: #e0e0e0 1px dashed; border-right: #e0e0e0 1px dashed; border-bottom: #e0e0e0 1px dashed; border-left: #e0e0e0 1px dashed; padding-top: 10px; padding-right: 10px; padding-bottom: 10px; padding-left: 10px; font-family: 微软雅黑; font-size: 11px">       
QQ群：1022985150 VX：kklldog 一起探讨学习.NET技术
<br>
作者：<a href="http://www.cnblogs.com/kklldog" target="_blank">Agile.Zhou(kklldog)</a>            
<br> 
出处：<a href="http://www.cnblogs.com/kklldog/" target="_blank">http://www.cnblogs.com/kklldog/</a>
<br>本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文连接，否则保留追究法律责任的权利。
 </p>  
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="4.456596608222222" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-03 01:22">2025-03-03 01:21</span>&nbsp;
<a href="https://www.cnblogs.com/kklldog">Agile.Zhou</a>&nbsp;
阅读(<span id="post_view_count">327</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18747156" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18747156);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18747156', targetLink: 'https://www.cnblogs.com/kklldog/p/18747156/aspire-agileconfig', title: '在 Aspire 项目下使用 AgileConfig' })">举报</a>
</div>
        