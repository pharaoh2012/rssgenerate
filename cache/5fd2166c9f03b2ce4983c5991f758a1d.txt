
	<div class="postTitle">
		<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chenw1/p/18766766" title="发布于 2025-03-15 10:46">
    <span role="heading" aria-level="2">自行为一加6编译Postmarket os内核</span>
    

</a>

	</div>
	
	<div class="postText">
		<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="序">序</h1>
<p>在为自己的一加6刷上PostmarketOS后突然某一天想使用它的照相机功能。原因是想到使用pmos拍照后笔者可以直接使用<code>scp</code>指令来传输手机相片到自己运行着GNU/Linux的电脑上，就感到相对便捷。但是在官方维基百科上看来OP6(一加6)的摄像功能还未进入release[<a href="https://wiki.postmarketos.org/wiki/OnePlus_6_(oneplus-enchilada)#Camera" target="_blank" rel="noopener nofollow">0</a>]，因为想看一下目前的摄像功能已经到哪一步了，也可能是因为想折腾些东西了，于是花了些时间研究怎么才能自己编译内核然后丢到OP6中。完成编译后总结就是摄像头不完善，是可以拍照的但有些许问题，但笔者认为这依然是一个很大的成就。在这里也感谢pmos的开发者的奉献，让人们能使用上相对更加free(自由)的软件。因为编译过程感觉比较有趣，遂有了这篇随笔。</p>
<h1 id="注意">注意</h1>
<p>因为本随笔介绍的是如何编译最新的源码，因此这意味着编译出来的内核是不稳定的，风险需要个人承担。要想安装稳定的PostmarketOS请查看别的教程，或者到官方维基页面查看[<a href="https://wiki.postmarketos.org/wiki/Main_Page" target="_blank" rel="noopener nofollow">7</a>]。</p>
<h1 id="参考资料">参考资料</h1>
<p>对于想自己捣鼓的读者笔者在这里放了自认为有用的链接以供参考:<br>
<a href="https://wiki.postmarketos.org/wiki/Compiling_kernels_with_envkernel.sh" target="_blank" rel="noopener nofollow">https://wiki.postmarketos.org/wiki/Compiling_kernels_with_envkernel.sh</a><br>
<a href="https://wiki.postmarketos.org/wiki/Pmbootstrap" target="_blank" rel="noopener nofollow">https://wiki.postmarketos.org/wiki/Pmbootstrap</a><br>
<a href="https://wiki.postmarketos.org/wiki/OnePlus_6_(oneplus-enchilada)#Camera" target="_blank" rel="noopener nofollow">https://wiki.postmarketos.org/wiki/OnePlus_6_(oneplus-enchilada)#Camera</a><br>
<a href="https://wiki.postmarketos.org/wiki/SDM845_Mainlining" target="_blank" rel="noopener nofollow">https://wiki.postmarketos.org/wiki/SDM845_Mainlining</a><br>
<a href="https://wiki.postmarketos.org/wiki/User:Magdesign#Compile_Kernel" target="_blank" rel="noopener nofollow">https://wiki.postmarketos.org/wiki/User:Magdesign#Compile_Kernel</a></p>
<h1 id="pmbootstrap">pmbootstrap</h1>
<p>正如官方所说的[<a href="https://wiki.postmarketos.org/wiki/Pmbootstrap" target="_blank" rel="noopener nofollow">1</a>]，pmboostrap是一个专为PostmarketOS开发使用的命令行应用。笔者使用的是Arch遂用如下指令下载：</p>
<pre><code>sudo pacman -S pmbootstrap
</code></pre>
<p>然后需要初始化一下：</p>
<pre><code>pmbootstrap init
</code></pre>
<p>然后要回答一些问题：<br>
问得是<code>work</code>和<code>pmaports</code>的路径，笔者直接<code>Enter</code>选择默认</p>
<pre><code>[09:46:02] Location of the 'work' path. Multiple chroots (native, device arch, device rootfs) will be created in there.
[09:46:02] Work path [/home/user/.local/var/pmbootstrap]:
[09:46:48] Location of the 'pmaports' path, containing package definitions.
[09:46:48] pmaports path [/home/user/.local/var/pmbootstrap/cache_git/pmaports]:
</code></pre>
<p>官方说除非你的设备在<code>main</code>或<code>community</code>的范围内，否则应该选<code>edge</code>[<a href="https://wiki.postmarketos.org/wiki/Pmbootstrap#Channel" target="_blank" rel="noopener nofollow">2</a>]。笔者因为本来就是为了体验最新的东西的，遂选择<code>edge</code>:</p>
<pre><code>[09:46:51] Choose the postmarketOS release channel.
[09:46:51] Available (11):
[09:46:51] * edge: Rolling release / Most devices / Occasional breakage: https://postmarketos.org/edge
[09:46:51] * v24.12: Latest release / Recommended for best stability
[09:46:51] * v24.06: Old release (unsupported)
[09:46:51] Channel [edge]:
</code></pre>
<p>然后是设备，笔者的是一加遂选<code>oneplus</code>：</p>
<pre><code>[09:52:52] Choose your target device vendor (either an existing one, or a new one for porting).
[09:52:52] Available vendors (94): acer, alcatel, amazon, amediatech, amlogic, apple, ark, arrow, asus, ayn, bananapi, beelink, bq, clockworkpi, cubietech, cutiepi, dongshanpi, epson, essential, fairphone, finepower, fly, fxtec, generic, goclever, google, gp, hisense, htc, huawei, inet, infocus, jolla, khadas, klipad, kobo, lark, leeco, lenovo, lg, librecomputer, linksys, mangopi, medion, meizu, microsoft, mobvoi, motorola, nextbit, nobby, nokia, nvidia, odroid, oneplus, oppo, ouya, pine64, planet, pocketbook, postmarketos, powkiddy, purism, qcom, qemu, qualcomm, radxa, raspberry, realme, samsung, semc, sharp, shift, sipeed, solidrun, sony, sourceparts, surftab, t2m, thundercomm, tokio, tolino, trekstor, valve, vernee, vivo, volla, wexler, wiko, wileyfox, xiaomi, xunlong, yu, zte, zuk
</code></pre>
<p>代码名因为是一加6遂选<code>enchilada</code>[<a href="https://wiki.postmarketos.org/wiki/OnePlus_6_(oneplus-enchilada)" target="_blank" rel="noopener nofollow">3</a>]:</p>
<pre><code>[09:54:02] Available codenames (16): bacon, billie2, cheeseburger, dumpling, enchilada, fajita, guacamole, hotdogb, instantnoodlep, kebab, lemonade, lemonadep, oneplus2, oneplus3, oneplus3t, onyx
</code></pre>
<p>用户名和Wifi后端就直接<code>Enter</code>选择默认了:</p>
<pre><code>[09:56:44] Username [user]:
[09:56:46] Available providers for postmarketos-base-ui-wifi (2):
[09:56:46] * wpa_supplicant: Use wpa_supplicant as the WiFi backend. (default)
[09:56:46] * iwd: Use iwd as the WiFi backend (but may not work with all devices)
[09:56:46] Provider [default]:
</code></pre>
<p>用户界面的话因为笔者的一加6已经是一个带Phosh的pmos了，因为我们这次只是为了kernel，遂选择<code>console</code>：</p>
<pre><code>...
[09:58:06] User interface [console]:
</code></pre>
<p>接下来的问题就直接<code>Enter</code>选择默认应该不会有什么问题的[<a href="https://wiki.postmarketos.org/wiki/Pmbootstrap#More_questions" target="_blank" rel="noopener nofollow">4</a>]。<br>
看到如下就完成初始化了。</p>
<pre><code>[10:03:11] DONE!
</code></pre>
<h1 id="用envkernelsh编译内核">用envkernel.sh编译内核</h1>
<p>因为大多数电脑的芯片架构跟手机的芯片架构不一样，比如笔者的电脑是amd64而一加6的是aarch64，因此会涉及到交叉编译的内容。而交叉编译简单来说就是在计算机上编译能在另一个架构不同的计算机上运行的软件。而pmos社区必然会遇到这类问题，而正如官方所言，<code>envkernel.sh</code>就是为了让编译更加方便而诞生的。它能在电脑上设置一个Alpine Linux环境然后通过改变环境变量以及利用<code>alias</code>来使<code>make</code>指令使用交叉编译器(cross compiler)[<a href="https://wiki.postmarketos.org/wiki/Compiling_kernels_with_envkernel.sh" target="_blank" rel="noopener nofollow">5</a>]。</p>
<p>接下来就先把要用的内核源码<code>clone</code>一下，一加6的是sdm845，所以是这个<a href="https://gitlab.com/sdm845-mainline/linux" target="_blank" rel="noopener nofollow">链接</a>。<br>
在命令行跑：</p>
<pre><code>git clone https://gitlab.com/sdm845-mainline/linux.git
</code></pre>
<p>因为<code>envkernel.sh</code>在pmbootstrap的git里，我们也要<code>clone</code>下来：</p>
<pre><code>git clone https://gitlab.postmarketos.org/postmarketOS/pmbootstrap.git
</code></pre>
<p>进入linux源码文件夹，并且<code>source envkernel.sh</code>:</p>
<pre><code>cd linux
source ../pmbootstrap/helpers/envkernel.sh
</code></pre>
<p>然后就会开始初始化Alpine chroot:</p>
<pre><code>[10:29:34] Update package index for x86_64 (4 file(s))
[10:29:38] (native) Creating chroot
[10:29:42] (native) % apk -q add abuild bash bc binutils bison binutils-aarch64 gcc-aarch64 diffutils elfutils-dev findutils flex g++ gcc gmp-dev linux-headers openssl-dev make mpc1-dev mpfr-dev musl-dev ncurses-dev perl py3-dt-schema sed yamllint yaml-dev xz
[10:30:27] NOTE: chroot is still active (use 'pmbootstrap shutdown' as necessary)
[10:30:27] DONE!
[10:30:28] (native) % su pmos -c mkdir /tmp/envkernel; touch /tmp/envkernel/gcc_setup_done
[10:30:28] NOTE: chroot is still active (use 'pmbootstrap shutdown' as necessary)
[10:30:28] DONE!
[10:30:28] (native) % chown -R pmos:pmos /mnt/linux/.output
[10:30:28] NOTE: chroot is still active (use 'pmbootstrap shutdown' as necessary)
[10:30:28] DONE!
pmbootstrap envkernel.sh activated successfully.
 * kernel source:  /home/user/Coding/linux-sdm845
 * output folder:  /home/user/Coding/linux-sdm845/.output
 * architecture:   arm64 (oneplus-enchilada is aarch64)
 * cross compile:  aarch64-alpine-linux-musl-gcc (Alpine 14.2.0)
 * aliases: make, kernelroot, pmbootstrap, pmbroot, run-script (see 'type make' etc.)
 * run 'deactivate' to revert all env changes
</code></pre>
<p>接下来我们就会看到<code>prompt</code>前面都会有一个<code>[envkernel] </code>那就代表我们正在<code>chroot</code>中。在<code>chroot</code>时我们的<code>make</code>指令都会使用交叉编译器。想从<code>chroot</code>中退出直接打<code>deactivate</code>就行。<br>
接下来我们先打<code>deactivate</code>退出来，运行这条指令：</p>
<pre><code>git log --oneline
</code></pre>
<p>我们会看到：</p>
<pre><code>299e39119dcc (HEAD -&gt; sdm845/6.14-dev, origin/sdm845/6.14-dev, origin/HEAD) arch: arm64: dts: qcom: sdm845-lg-judyln: update devicetree
6f43125d5129 arch: arm64: dts: qcom: sdm845-lg-common: enable debug uart
a4a685e21b3a (tag: sdm845-6.14-rc5-r2) arm64: dts: qcom: sdm845-oneplus-common: disable the imx519 sensor
568f590acb40 (tag: sdm845-6.14-rc5-r1) media: qcom: camss: Power pipeline only when streaming
778bda201c57 fixup media: i2c: Add imx371 image sensor driver
da7241698e70 fixup media: i2c: Add imx376 image sensor driver
84a296902d70 fixup! arm64: dts: qcom: sdm845-oneplus: camera bringup
...
</code></pre>
<p>请注意这一条：</p>
<pre><code>...
a4a685e21b3a (tag: sdm845-6.14-rc5-r2) arm64: dts: qcom: sdm845-oneplus-common: disable the imx519 sensor
...
</code></pre>
<p>这个<code>IMX519</code>就是一加6的摄像头传感器，把它关掉的原因可以看到是：</p>
<pre><code>git log a4a685e21b3a

commit a4a685e21b3a97d5b2ee39ac612929c1a868fd20 (tag: sdm845-6.14-rc5-r2)
Author: Joel Selvaraj &lt;foss@joelselvaraj.com&gt;
Date:   Thu Mar 6 16:56:30 2025 -0600

    arm64: dts: qcom: sdm845-oneplus-common: disable the imx519 sensor

    Since it doesnt currently work.

    Signed-off-by: Joel Selvaraj &lt;foss@joelselvaraj.com&gt;
</code></pre>
<p>嗯目前用不了，不过因为笔者好奇用不了到什么程度所以我们用以下指令把这个<code>commit</code>给<code>revert</code>掉：</p>
<pre><code>git revert a4a685e21b3a
</code></pre>
<p>然后我们再查看一下<code>git log --oneline</code>:</p>
<pre><code>868f3493560c (HEAD -&gt; sdm845/6.14-dev) Revert "arm64: dts: qcom: sdm845-oneplus-common: disable the imx519 sensor"
299e39119dcc (origin/sdm845/6.14-dev, origin/HEAD) arch: arm64: dts: qcom: sdm845-lg-judyln: update devicetree
6f43125d5129 arch: arm64: dts: qcom: sdm845-lg-common: enable debug uart
</code></pre>
<p>可以看到多了一个<code>revert</code>的<code>commit</code>。然后我们用刚刚的<code>source</code>指令再次进入<code>chroot</code>。使用如下指令来搞定默认配置先：</p>
<pre><code>make defconfig sdm845.config
</code></pre>
<p>这样子就会用<code>sdm845.config</code>把<code>defconfig</code>给覆写掉，接下来运行<code>make menuconfig</code>然后按<code>/</code>搜索<code>IMX519</code>，我们会看到<code>IMX519</code>被配置为模块了：</p>
<pre><code>Symbol: VIDEO_IMX519 [=m]
  │ Type  : tristate
  │ Defined at drivers/media/i2c/Kconfig:297
  │   Prompt: Sony IMX519 sensor support
  │   Depends on: MEDIA_SUPPORT [=m] &amp;&amp; VIDEO_CAMERA_SENSOR [=y] &amp;&amp; I2C [=y] &amp;&amp; VIDEO_DEV [=m]
  │   Location: 
  │     -&gt; Device Drivers
  │       -&gt; Multimedia support (MEDIA_SUPPORT [=m])
  │         -&gt; Media ancillary drivers
  │           -&gt; Camera sensor devices (VIDEO_CAMERA_SENSOR [=y])
  │ (1)         -&gt; Sony IMX519 sensor support (VIDEO_IMX519 [=m]) 
  │ Selects: MEDIA_CONTROLLER [=y] &amp;&amp; VIDEO_V4L2_SUBDEV_API [=y] &amp;&amp; V4L2_CCI_I2C [=m] &amp;&amp; V4L2_FWNODE [=m]
</code></pre>
<p>接下来就可以开始编译啦！运行：</p>
<pre><code>make
</code></pre>
<p>想快一些可以运行 (n是线程数量)：</p>
<pre><code>make -jn
</code></pre>
<p>然后是等待...<br>
编译完成后，用下面的指令打包内核[<a href="https://wiki.postmarketos.org/wiki/User:Magdesign#Compile_Kernel" target="_blank" rel="noopener nofollow">6</a>]：</p>
<pre><code>pmbootstrap build --envkernel  linux-postmarketos-qcom-sdm845
</code></pre>
<p>在<code>~/.local/var/pmbootstrap/packages/edge/aarch64/</code>中可以看到打包好的内核，笔者的内核包文件名是：</p>
<pre><code>linux-postmarketos-qcom-sdm845-6.14.0_p20250312121930-r0.apk
</code></pre>
<p>将一加6用数据线跟电脑连接，确保手机的<code>sshd</code>已经打开：</p>
<pre><code>sudo service sshd start
</code></pre>
<p>运行下面的指令将我们自己编译的pmos内核包安装上去：</p>
<pre><code>pmbootstrap sideload linux-postmarketos-qcom-sdm845
</code></pre>
<p>接下来就是确认安装是否成功，<code>ssh</code>到手机里跑下面的命令：</p>
<pre><code>apk info --who-owns /boot/vmlinuz
</code></pre>
<p>笔者这边显示的是：</p>
<pre><code>/boot/vmlinuz is owned by linux-postmarketos-qcom-sdm845-6.14.0_p20250312121930-r0
</code></pre>
<p>也就是刚刚打包好的内核，这就说明成功了！</p>
<h1 id="成果">成果</h1>
<p>因为笔者的目的是观摩一下Postmarket OS对一加6摄像功能最新进展如何，以下是一些照片演示与截屏</p>
<p>前置摄像头：<br>
最明显的问题应该是拍出来是自带紫色的。<br>
<img src="https://img2024.cnblogs.com/blog/3571694/202503/3571694-20250312125327115-686348961.jpg" alt="image" width="200" height="300" loading="lazy"></p>
<p>后置摄像头：<br>
后置摄像头就自带一种怀旧的颜色了。<br>
<img src="https://img2024.cnblogs.com/blog/3571694/202503/3571694-20250312125548257-777228990.jpg" alt="image" width="200" height="300" loading="lazy"></p>
<h1 id="总结">总结</h1>
<p>运作正常的摄像功能见多了后看到运作不正常的摄像感觉有些有趣。编译过程还是比较有趣的，pmbootstrap帮助开发者减少了很多交叉编译的麻烦。在这里向pmos的开发者们致敬。</p>
<hr>
<p>作者：chenw1<br>
链接：<a href="https://www.cnblogs.com/chenw1/p/18766766" target="_blank">https://www.cnblogs.com/chenw1/p/18766766</a><br>
本文来自博客园，欢迎转载，但请注明原文链接，并保留此段声明，否则保留追究法律责任的权利。</p>

</div>
<div class="clear"></div>

	</div>
	
	<div class="postfoot">
		posted on 
<span id="post-date" data-last-update-days="0.6481261207129629" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-15 10:46">2025-03-15 10:46</span>&nbsp;
<a href="https://www.cnblogs.com/chenw1">chenw1</a>&nbsp;
阅读(<span id="post_view_count">78</span>)&nbsp;
评论(<span id="post_comment_count">1</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18766766" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18766766);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18766766', targetLink: 'https://www.cnblogs.com/chenw1/p/18766766', title: '自行为一加6编译Postmarket os内核' })">举报</a>

	</div>
