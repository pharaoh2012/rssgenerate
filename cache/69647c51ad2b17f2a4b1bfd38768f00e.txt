
	<div class="postTitle">
		<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/PatrickLiu/p/18655664" title="发布于 2025-01-07 10:11">
    <span role="heading" aria-level="2">C++之OpenCV入门到提高007：调整图像亮度和对比度</span>
    

</a>

	</div>
	<div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<span style="font-size: 18px"><strong>一、介绍</strong></span><br>　　　　今天是这个系列《C++之 Opencv 入门到提高》的第七篇文章。这篇文章也不难，介绍如何调整图像的亮度。图像本质上也是数据，既然是数据，我们就可以针对图像的每个像素进行增加或者减少的的操作，这样的结果就是图片变暗或者变亮了。这个调整的过程不是随便操作、无限制的，因为有些结果并不是我们想要的，我们为了让图片每个像素变化的更合理，就可以使用【saturate_cast】函数进行控制，好好的体会一下吧。这都是基础，为以后的学习做好铺垫。虽然操作很简单，但是背后有很多东西需要我们深究，才能做到知其然知其所以然。OpenCV 具体的简介内容，我就不多说了，网上很多，大家可以自行脑补。<br>　　　　OpenCV 的官网地址：<a href="https://opencv.org/" rel="noopener nofollow" target="_blank">https://opencv.org/</a>，组件下载地址：<a href="https://opencv.org/releases/" rel="noopener nofollow" target="_blank">https://opencv.org/releases/</a>。<br>　　　　OpenCV 官网学习网站：<a href="https://docs.opencv.ac.cn/4.10.0/index.html" rel="noopener nofollow" target="_blank">https://docs.opencv.ac.cn/4.10.0/index.html</a><br><br>　　　　我需要进行说明，以防大家不清楚，具体情况我已经罗列出来。<br>　　　　　　　　操作系统：Windows Professional 10（64位）<br>　　　　　　　　开发组件：OpenCV – 4.10.0<br>　　　　　　　　开发工具：Microsoft Visual Studio Community 2022 (64 位) - Current版本 17.8.3<br>　　　　　　　　开发语言：C++（VC16）<br><br><span style="font-size: 18px"><strong>二、知识学习</strong></span><br>　　　　接口很简单，不用多说，仔细研究一下原理更有用。<br>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 128, 1)"> 1</span> #include &lt;opencv2/opencv.hpp&gt;
<span style="color: rgba(0, 128, 128, 1)"> 2</span> #include &lt;iostream&gt;
<span style="color: rgba(0, 128, 128, 1)"> 3</span> #include &lt;math.h&gt;
<span style="color: rgba(0, 128, 128, 1)"> 4</span> 
<span style="color: rgba(0, 128, 128, 1)"> 5</span> <span style="color: rgba(0, 0, 255, 1)">using</span> <span style="color: rgba(0, 0, 255, 1)">namespace</span><span style="color: rgba(0, 0, 0, 1)"> std;
</span><span style="color: rgba(0, 128, 128, 1)"> 6</span> <span style="color: rgba(0, 0, 255, 1)">using</span> <span style="color: rgba(0, 0, 255, 1)">namespace</span><span style="color: rgba(0, 0, 0, 1)"> cv;
</span><span style="color: rgba(0, 128, 128, 1)"> 7</span> 
<span style="color: rgba(0, 128, 128, 1)"> 8</span> 
<span style="color: rgba(0, 128, 128, 1)"> 9</span> <span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> main()
</span><span style="color: rgba(0, 128, 128, 1)">10</span> <span style="color: rgba(0, 0, 0, 1)">{
</span><span style="color: rgba(0, 128, 128, 1)">11</span>     <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">图像变换可以看做如下：
</span><span style="color: rgba(0, 128, 128, 1)">12</span>     <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">1、像素变换，也就是点操作，修改像素的值，获取像素的值，调整图像的亮度和对比度等类似操作。
</span><span style="color: rgba(0, 128, 128, 1)">13</span>     <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">2、领域操作，也是区域操作。可以做图像的卷积，图像特征的提取，图像梯度的计算，也可以对图像进行深度处理，比如：角点检测，模糊处理，平滑处理。
</span><span style="color: rgba(0, 128, 128, 1)">14</span>     <span style="color: rgba(0, 128, 0, 1)">//</span>
<span style="color: rgba(0, 128, 128, 1)">15</span>     <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">调整图像亮度和对比度属于像素变换，也就是点操作。
</span><span style="color: rgba(0, 128, 128, 1)">16</span>     <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">g(i,j)=af(i,j)+b,其中 a &gt;0 ,b 是增益变量。f(i,j)表示输入图像的每个像素点，g(i,j)表示输出图像的每个像素点。
</span><span style="color: rgba(0, 128, 128, 1)">17</span>     <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">a &gt; 0，对于常规图像来说必须大于零，因为 opencv 是基于 RGB 格式来处理图像的，它的值是【0-255】，所以必须大于零。如果是 tiff 格式的图像，这个值就有可能是负值。
</span><span style="color: rgba(0, 128, 128, 1)">18</span>     <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">a 这个参数的作用就是用于提高对比度的，它是乘法，是倍数增加的，所以，新的图像像素值就会比原始图像像素值有更大的变化，效果就是对比度提高了。
</span><span style="color: rgba(0, 128, 128, 1)">19</span>     <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> b 就是提高图像的亮度，越亮，值越接近 255，也就是越接近白色。说白了如果我们想提高图像的亮度，就要提高 b(增益变量)的值。
</span><span style="color: rgba(0, 128, 128, 1)">20</span> 
<span style="color: rgba(0, 128, 128, 1)">21</span> 
<span style="color: rgba(0, 128, 128, 1)">22</span>     <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">2、重要API
</span><span style="color: rgba(0, 128, 128, 1)">23</span>     <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">    Mat image=Mat::zeros(src.size(),src.type())创建一张和原图一项大小和类型的空白图像，像素初始值是0.
</span><span style="color: rgba(0, 128, 128, 1)">24</span>     <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">  saturate_cast&lt;uchar&gt;(value)确保值在【0-255】之间。
</span><span style="color: rgba(0, 128, 128, 1)">25</span>     <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">    Mat.at&lt;Vec3b&gt;(x,y)[index]=value 给指定通道每个像素赋值。
</span><span style="color: rgba(0, 128, 128, 1)">26</span> 
<span style="color: rgba(0, 128, 128, 1)">27</span> 
<span style="color: rgba(0, 128, 128, 1)">28</span>     <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">3、代码演示</span>
<span style="color: rgba(0, 128, 128, 1)">29</span> 
<span style="color: rgba(0, 128, 128, 1)">30</span> <span style="color: rgba(0, 0, 0, 1)">    Mat src, dst;
</span><span style="color: rgba(0, 128, 128, 1)">31</span>     src = imread(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">D:\\360MoveData\\Users\\Administrator\\Desktop\\TestImage\\3.jpg</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, IMREAD_COLOR);
</span><span style="color: rgba(0, 128, 128, 1)">32</span>     <span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)"> (src.empty())
</span><span style="color: rgba(0, 128, 128, 1)">33</span> <span style="color: rgba(0, 0, 0, 1)">    {
</span><span style="color: rgba(0, 128, 128, 1)">34</span>         cout &lt;&lt; <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">图像加载失败！！！</span><span style="color: rgba(128, 0, 0, 1)">"</span> &lt;&lt;<span style="color: rgba(0, 0, 0, 1)"> endl;
</span><span style="color: rgba(0, 128, 128, 1)">35</span>         <span style="color: rgba(0, 0, 255, 1)">return</span>    -<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">;
</span><span style="color: rgba(0, 128, 128, 1)">36</span> <span style="color: rgba(0, 0, 0, 1)">    }
</span><span style="color: rgba(0, 128, 128, 1)">37</span> 
<span style="color: rgba(0, 128, 128, 1)">38</span>     namedWindow(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">原始图像</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, WINDOW_AUTOSIZE);
</span><span style="color: rgba(0, 128, 128, 1)">39</span>     imshow(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">原始图像</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, src);
</span><span style="color: rgba(0, 128, 128, 1)">40</span> 
<span style="color: rgba(0, 128, 128, 1)">41</span>     <span style="color: rgba(0, 0, 255, 1)">int</span> width =<span style="color: rgba(0, 0, 0, 1)"> src.cols;
</span><span style="color: rgba(0, 128, 128, 1)">42</span>     <span style="color: rgba(0, 0, 255, 1)">int</span> height =<span style="color: rgba(0, 0, 0, 1)"> src.rows;
</span><span style="color: rgba(0, 128, 128, 1)">43</span>     <span style="color: rgba(0, 0, 255, 1)">int</span> channels =<span style="color: rgba(0, 0, 0, 1)"> src.channels();
</span><span style="color: rgba(0, 128, 128, 1)">44</span> 
<span style="color: rgba(0, 128, 128, 1)">45</span>     dst =<span style="color: rgba(0, 0, 0, 1)"> Mat::zeros(src.size(),src.type());
</span><span style="color: rgba(0, 128, 128, 1)">46</span>     <span style="color: rgba(0, 0, 255, 1)">double</span> alpha = <span style="color: rgba(128, 0, 128, 1)">2</span><span style="color: rgba(0, 0, 0, 1)">;
</span><span style="color: rgba(0, 128, 128, 1)">47</span>     <span style="color: rgba(0, 0, 255, 1)">double</span> beta = <span style="color: rgba(128, 0, 128, 1)">40</span><span style="color: rgba(0, 0, 0, 1)">;
</span><span style="color: rgba(0, 128, 128, 1)">48</span>     <span style="color: rgba(0, 0, 255, 1)">for</span> (<span style="color: rgba(0, 0, 255, 1)">int</span> row = <span style="color: rgba(128, 0, 128, 1)">0</span>; row &lt; height; row++<span style="color: rgba(0, 0, 0, 1)">)
</span><span style="color: rgba(0, 128, 128, 1)">49</span> <span style="color: rgba(0, 0, 0, 1)">    {
</span><span style="color: rgba(0, 128, 128, 1)">50</span>         <span style="color: rgba(0, 0, 255, 1)">for</span> (<span style="color: rgba(0, 0, 255, 1)">int</span> col = <span style="color: rgba(128, 0, 128, 1)">0</span>; col &lt; width; col++<span style="color: rgba(0, 0, 0, 1)">)
</span><span style="color: rgba(0, 128, 128, 1)">51</span> <span style="color: rgba(0, 0, 0, 1)">        {
</span><span style="color: rgba(0, 128, 128, 1)">52</span>             <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">RGB 三通道的</span>
<span style="color: rgba(0, 128, 128, 1)">53</span>             <span style="color: rgba(0, 0, 255, 1)">if</span> (channels == <span style="color: rgba(128, 0, 128, 1)">3</span><span style="color: rgba(0, 0, 0, 1)">)
</span><span style="color: rgba(0, 128, 128, 1)">54</span> <span style="color: rgba(0, 0, 0, 1)">            {
</span><span style="color: rgba(0, 128, 128, 1)">55</span>                 <span style="color: rgba(0, 0, 255, 1)">float</span> b = src.at&lt;Vec3b&gt;(row, col)[<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">];
</span><span style="color: rgba(0, 128, 128, 1)">56</span>                 <span style="color: rgba(0, 0, 255, 1)">float</span> g = src.at&lt;Vec3b&gt;(row, col)[<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">];
</span><span style="color: rgba(0, 128, 128, 1)">57</span>                 <span style="color: rgba(0, 0, 255, 1)">float</span> r = src.at&lt;Vec3b&gt;(row, col)[<span style="color: rgba(128, 0, 128, 1)">2</span><span style="color: rgba(0, 0, 0, 1)">];
</span><span style="color: rgba(0, 128, 128, 1)">58</span> 
<span style="color: rgba(0, 128, 128, 1)">59</span>                 dst.at&lt;Vec3b&gt;(row, col)[<span style="color: rgba(128, 0, 128, 1)">0</span>] = saturate_cast&lt;uchar&gt;(alpha * b +<span style="color: rgba(0, 0, 0, 1)"> beta);
</span><span style="color: rgba(0, 128, 128, 1)">60</span>                 dst.at&lt;Vec3b&gt;(row, col)[<span style="color: rgba(128, 0, 128, 1)">1</span>] = saturate_cast&lt;uchar&gt;(alpha * g +<span style="color: rgba(0, 0, 0, 1)"> beta);
</span><span style="color: rgba(0, 128, 128, 1)">61</span>                 dst.at&lt;Vec3b&gt;(row, col)[<span style="color: rgba(128, 0, 128, 1)">2</span>] = saturate_cast&lt;uchar&gt;(alpha * r +<span style="color: rgba(0, 0, 0, 1)"> beta);
</span><span style="color: rgba(0, 128, 128, 1)">62</span> <span style="color: rgba(0, 0, 0, 1)">            }
</span><span style="color: rgba(0, 128, 128, 1)">63</span>             <span style="color: rgba(0, 0, 255, 1)">else</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">Gray 单通道的</span>
<span style="color: rgba(0, 128, 128, 1)">64</span> <span style="color: rgba(0, 0, 0, 1)">            {
</span><span style="color: rgba(0, 128, 128, 1)">65</span>                 <span style="color: rgba(0, 0, 255, 1)">float</span> v = src.at&lt;uchar&gt;<span style="color: rgba(0, 0, 0, 1)">(row, col);
</span><span style="color: rgba(0, 128, 128, 1)">66</span>                 dst.at&lt;uchar&gt;(row, col) = saturate_cast&lt;uchar&gt;(alpha * v +<span style="color: rgba(0, 0, 0, 1)"> beta);
</span><span style="color: rgba(0, 128, 128, 1)">67</span> <span style="color: rgba(0, 0, 0, 1)">            }            
</span><span style="color: rgba(0, 128, 128, 1)">68</span> <span style="color: rgba(0, 0, 0, 1)">        }
</span><span style="color: rgba(0, 128, 128, 1)">69</span> <span style="color: rgba(0, 0, 0, 1)">    }
</span><span style="color: rgba(0, 128, 128, 1)">70</span> 
<span style="color: rgba(0, 128, 128, 1)">71</span>     namedWindow(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">对比度图像</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,WINDOW_AUTOSIZE);
</span><span style="color: rgba(0, 128, 128, 1)">72</span>     imshow(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">对比度图像</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,dst);
</span><span style="color: rgba(0, 128, 128, 1)">73</span> 
<span style="color: rgba(0, 128, 128, 1)">74</span>     waitKey(<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">);
</span><span style="color: rgba(0, 128, 128, 1)">75</span>     <span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">;
</span><span style="color: rgba(0, 128, 128, 1)">76</span> }</pre>
</div>
<p>　　　　图像亮度调整效果的对比：<br>　　　　<img src="https://img2024.cnblogs.com/blog/1048776/202501/1048776-20250106164315409-1677485312.png" alt=""></p>
<p>　　　　调整后的效果：<br><br>　　　　<img src="https://img2024.cnblogs.com/blog/1048776/202501/1048776-20250106164343667-245290219.png" alt=""></p>
<p>　　　　效果很明显。</p>
<p><br><span style="font-size: 18px"><strong>三、总结</strong></span><br>　　　　<span style="color: rgba(255, 0, 0, 1)"><span style="color: rgba(0, 0, 0, 1)">这是 C++ 使用 OpenCV 的第七篇文章，其实也没那么难，操作很简单，函数也不难理解，最重要是活学活用。初见成效，继续努力。皇天不负有心人，不忘初心，继续努力，做自己喜欢做的，开心就好。</span></span></p>
</div>
<div id="MySignature" role="contentinfo">
    天下国家,可均也；爵禄,可辞也；白刃,可蹈也；中庸不可能也
</div>
<div class="clear"></div>

	<div class="postDesc">posted on 
<span id="post-date" data-last-update-days="0.17314211839467591" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-07 10:12">2025-01-07 10:11</span>&nbsp;
<a href="https://www.cnblogs.com/PatrickLiu">可均可可</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18655664" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18655664);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18655664', targetLink: 'https://www.cnblogs.com/PatrickLiu/p/18655664', title: 'C++之OpenCV入门到提高007：调整图像亮度和对比度' })">举报</a>
</div>
