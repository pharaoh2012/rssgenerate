
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/experdot/p/18974641" title="发布于 2025-07-10 08:12">
    <span role="heading" aria-level="2">解决了AI聊天的10个痛点后，我又做了一个新功能：交叉分析表</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="前言">前言</h2>
<p>不久前，我写了一篇长文<a href="https://www.cnblogs.com/experdot/p/18924253" target="_blank">《AI 聊天应用的 10 条高级需求》</a>，吐槽了当前 Web 和桌面端 AI 聊天工具的 10 个体验问题。从“找不到几周前绝妙点子”的<strong>全局检索</strong>缺失，到“置顶所有等于没置顶”的<strong>分类</strong>混乱，再到分享代码格式尽失的<strong>导出</strong>难题……这些痛点，相信很多把 AI 当生产力工具的朋友都深有体会。</p>
<p>我的核心观点是：<strong>AI 聊天不应该只是一个临时的问答机，它应该是我可以深度挖掘的宝藏知识库。</strong></p>
<p>光吐槽没用，坐而论道不如起而行。于是，我借助 AI 编程工具（我用 Cursor 帮我写代码，几乎完成了 90% 的工作量），把这些想法和需求，一点点变成了一个真实的应用，我给它取名叫 <strong>Pointer</strong>。</p>
<p>Pointer 的初衷就是为了解决我自己的问题：强大的全局检索、树状文件夹分类、一键导出带格式的图片、自由勾选对话合并导出……这些功能让我的 AI 聊天记录，终于从线性信息流，变成了井然有序的知识树。</p>
<p>然而，就在我开发和使用 Pointer 的过程中，一个全新的想法不期而至。</p>
<p><img src="https://img2024.cnblogs.com/blog/726127/202507/726127-20250710080645975-760074062.png" alt="Screenshot-1" loading="lazy"></p>
<h2 id="从整理到对比新问题的浮现"><strong>从“整理”到“对比”：新问题的浮现</strong></h2>
<p>在解决了检索、分类、导出这些“整理”问题后，我发现了一个更深层次的需求：<strong>结构化的对比分析</strong>。</p>
<p>比如，我想让 AI 帮我比较一下 <code>Vue</code>、<code>React</code> 和 <code>Svelte</code> 这三个前端框架的优劣，AI 可以给我生成一大段文字。但这些信息是散落在段落里的，我想把它们按“学习曲线”、“生态系统”、“性能”等维度进行对位比较，就得自己手动整理成一个表格。</p>
<p>这个过程非常繁琐。我意识到，AI 能够生成高质量的内容，但如果这些内容不能以一种利于对比和分析的结构呈现出来，它的价值就大打折扣了。我需要一个能让 AI 直接“思考”成表格的工具。</p>
<p>于是，<strong>交叉分析表（Crosstab）</strong> 这个功能的设计就应运而生。</p>
<p><img src="https://img2024.cnblogs.com/blog/726127/202507/726127-20250710080725707-1036378793.png" alt="Screenshot-2" loading="lazy"></p>
<h2 id="pointer-的新探索ai-驱动的交叉分析表"><strong>Pointer 的新探索：AI 驱动的交叉分析表</strong></h2>
<p>交叉分析表本身不新鲜，但让 AI 理解并渐进式地构建它，是我想尝试的方向。我不希望用户上来就面对一个空白表格，而是让 AI 引导用户，一步步把脑海中的模糊想法变成结构清晰的分析表。</p>
<p>我设计了一个四步走的工作流：</p>
<ol>
<li><strong>第一步：定义主题。</strong> 你只需要告诉 AI 一个大的方向，比如“比较主流的编程语言”或者“分析三国时期的主要人物”。</li>
<li><strong>第二步：生成框架。</strong> AI 会基于你的主题，自动分析并推荐表格的横轴（比如：Java、Python、Go）和纵轴（比如：性能、开发效率、社区支持）。当然，这些推荐你都可以随时修改、增删。</li>
<li><strong>第三步：填充内容。</strong> 框架搭好后，AI 会逐个填充每个交叉单元格的内容。比如，它会专门去生成“Python”在“开发效率”这个维度的具体描述。为了提高效率，你也可以让它一次性生成一整行或一整列。</li>
<li><strong>第四步：交互和编辑。</strong> AI 生成的内容不可能 100%完美。你可以在任何一个单元格里，让 AI 重新生成，或者自己手动修改。最终的控制权永远在你手里。</li>
</ol>
<p><img src="https://img2024.cnblogs.com/blog/726127/202507/726127-20250710081126423-1265087123.png" alt="image" loading="lazy"></p>
<h2 id="一些小的设计思考"><strong>一些小的设计思考</strong></h2>
<p>在实现这个功能时，我遇到了一些细节上的挑战，也做了一些取舍。</p>
<ul>
<li><strong>智能建议：</strong> 有时候我连横轴、纵轴该如何设置都没想好。所以我做了个“智能建议”功能，在你定义好一个轴之后，它会根据主题帮你推荐另一个轴的可能选项。</li>
<li><strong>细粒度控制：</strong> 我不想做一个全自动的“傻瓜”工具。因此，你可以对整个表、一整行/列、甚至单个单元格进行生成、重生成、清空等操作。我希望在自动化和手动控制之间找到一个舒适的平衡点。</li>
<li><strong>沉浸式体验：</strong> 分析复杂的表格时，屏幕空间总是捉襟见肘。所以我加入了全屏模式，这些小细节对提升体验其实挺重要的。</li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/726127/202507/726127-20250710081932342-1260932662.png" alt="image" loading="lazy"></p>
<h2 id="这个功能能用在哪些地方"><strong>这个功能能用在哪些地方？</strong></h2>
<p>最初我只是想解决自己的学习和分析需求，但后来发现，它的应用场景远比我想象的要广。</p>
<ul>
<li><strong>学习与教育：</strong> 老师可以用它快速制作不同知识点的对比讲义；学生可以用它来整理历史事件、文学流派、科学概念，一目了然。</li>
<li><strong>商业分析：</strong> 制作竞品分析报告、对比不同市场策略的优劣、评估产品功能的多维度特性，都比用 Word 或 PPT 画表格要直观高效得多。</li>
<li><strong>内容创作：</strong> 无论是策划选题，还是整理文章框架，它都能作为一个很好的结构化思维工具，帮助我理清思路。</li>
</ul>
<p>下面举几个例子：</p>
<h3 id="编程语言">编程语言</h3>
<p><img src="https://img2024.cnblogs.com/blog/726127/202507/726127-20250710080952883-1612186054.png" alt="3b5d96d2b185da8dd74f9497ec7af44" loading="lazy"></p>
<h3 id="学语言生成交叉表">学语言（生成交叉表）</h3>
<p><img src="https://img2024.cnblogs.com/blog/726127/202507/726127-20250710080827362-611022819.png" alt="62452d8f4454c7e3658372355f912b5" loading="lazy"></p>
<h3 id="学语言基于交叉表提问">学语言（基于交叉表提问）</h3>
<p><img src="https://img2024.cnblogs.com/blog/726127/202507/726127-20250710080848689-541751997.png" alt="ab1befb9f15fbeb5cc44ae36965f78b" loading="lazy"></p>
<h3 id="写小说">写小说</h3>
<p><img src="https://img2024.cnblogs.com/blog/726127/202507/726127-20250710081726846-950699295.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/726127/202507/726127-20250710113417540-378556565.png" alt="image" loading="lazy"></p>
<h2 id="挑战与未来"><strong>挑战与未来</strong></h2>
<p>当然，这个功能还很初级。当表格变得非常大时，性能会是个挑战；AI 生成内容的准确性也需要持续通过优化提示词来改善。我想到的还有“模板保存与复用”、“导出为 Excel”等功能。</p>
<p>回顾从最初的“10 个痛点”到如今的“交叉分析表”，我深刻地感受到，好的工具是在解决真实问题的过程中被“发现”和“生长”出来的。它不是一蹴而就的规划，而是一个不断与需求碰撞、迭代和演进的过程。</p>
<p>Pointer 项目本身就是这个理念的产物，它始于一个深度用户的个人需求，也希望能服务于更多像我一样，希望把 AI 当做“第二大脑”来使用的朋友们。</p>
<p>我的探索刚刚开始。希望 Pointer 的这些思考和实践能给你带来一些启发。</p>
<h2 id="附录">附录</h2>
<ul>
<li>开源地址：<a href="https://github.com/experdot/pointer" target="_blank" rel="noopener nofollow">https://github.com/experdot/pointer</a></li>
</ul>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.32916666666666666" data-date-updated="2025-07-10 16:06">2025-07-10 08:12</span>&nbsp;
<a href="https://www.cnblogs.com/experdot">ExperDot</a>&nbsp;
阅读(<span id="post_view_count">322</span>)&nbsp;
评论(<span id="post_comment_count">1</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18974641);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18974641', targetLink: 'https://www.cnblogs.com/experdot/p/18974641', title: '解决了AI聊天的10个痛点后，我又做了一个新功能：交叉分析表' })">举报</a>
</div>
        