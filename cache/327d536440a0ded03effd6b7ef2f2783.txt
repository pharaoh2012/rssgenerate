
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/johnv/p/18710327" title="发布于 2025-02-11 19:09">
    <span role="heading" aria-level="2">nodejs如何处理Token？一文深入浅出JWT签名验签</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        <img src="https://img2024.cnblogs.com/blog/1471537/202502/1471537-20250211190407218-1527390615.png" alt="nodejs如何处理Token？一文深入浅出JWT签名验签" class="desc_img">
        关于token的那些事儿，一文深入浅出JWT签名验签
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="前端开发中关于token的那些事儿深入浅出jwt签名验签">前端开发中关于Token的那些事儿：深入浅出JWT签名验签</h1>
<p>作为前端也要懂JWT，首先了解两个概念<code>JWK</code> <code>JWT</code></p>
<h2 id="jwk">JWK</h2>
<p>JWK（RSA JSON Web Key）是一种用于表示 RSA 公钥或私钥的 JSON 对象，JWK 是 JSON Web Token (JWT) 和 JSON Web Encryption (JWE) 等标准的一部分，常用于安全传输密钥信息。</p>
<h3 id="用途">用途</h3>
<ul>
<li>
<p>RSA JWK 主要用于：</p>
</li>
<li>
<p>密钥交换：在客户端和服务器间安全传输密钥。</p>
</li>
<li>
<p>数字签名：用于 JWT 签名和验证。</p>
</li>
<li>
<p>加密：用于 JWE 加密和解密。</p>
</li>
</ul>
<p>RFC 7519 定义了 JSON Web Token (JWT) 的标准，JWT 是一种紧凑的、URL 安全的方式，用于在网络应用之间传递声明。</p>
<p>在线生成JWK <a href="https://mkjwk.org/" target="_blank" rel="noopener nofollow">https://mkjwk.org/</a></p>
<h2 id="jwtjson-web-token">JWT(JSON Web Token)</h2>
<p>JWT也就是我们平常说的Token，用来和后端接口交换数据的令牌。</p>
<p><img src="https://img2024.cnblogs.com/blog/1471537/202502/1471537-20250211190407218-1527390615.png" alt="logo" loading="lazy"></p>
<h3 id="jwt-结构">JWT 结构</h3>
<p>JWT 由三部分组成，用点号（.）分隔：</p>
<ul>
<li>
<p>Header：包含令牌类型和签名算法。</p>
</li>
<li>
<p>Payload：包含声明（claims），即要传递的数据。</p>
</li>
<li>
<p>Signature：用于验证令牌的完整性和真实性。</p>
</li>
</ul>
<p>JWT详细信息参考 <a href="https://jwt.io/" target="_blank" rel="noopener nofollow">https://jwt.io/</a></p>
<h2 id="代码实践jwt签发验证">代码实践JWT签发、验证</h2>
<p>新建一个JWT实践项目，安装依赖JWT<code>jose</code></p>
<pre><code class="language-shell">mkdir jwt-practice
cd jwt-practice
npm init
npm i jose
</code></pre>
<p><code>package.json</code>中修改包的加载方式，修改或添加字段：<code>"type": "module",</code></p>
<p>新建<code>index.js</code>文件，并复制下面代码内容</p>
<pre><code class="language-javascript">
import { SignJWT, importJWK, jwtVerify } from 'jose'

const alg = 'RS256'
const jwk = {
    kty: 'RSA',
    n: 'whYOFK2Ocbbpb_zVypi9SeKiNUqKQH0zTKN1-6fpCTu6ZalGI82s7XK3tan4dJt90ptUPKD2zvxqTzFNfx4HHHsrYCf2-FMLn1VTJfQazA2BvJqAwcpW1bqRUEty8tS_Yv4hRvWfQPcc2Gc3-_fQOOW57zVy-rNoJc744kb30NjQxdGp03J2S3GLQu7oKtSDDPooQHD38PEMNnITf0pj-KgDPjymkMGoJlO3aKppsjfbt_AH6GGdRghYRLOUwQU-h-ofWHR3lbYiKtXPn5dN24kiHy61e3VAQ9_YAZlwXC_99GGtw_NpghFAuM4P1JDn0DppJldy3PGFC0GfBCZASw',
    e: 'AQAB',
    d: 'VuVE_KEP6323WjpbBdAIv7HGahGrgGANvbxZsIhm34lsVOPK0XDegZkhAybMZHjRhp-gwVxX5ChC-J3cUpOBH5FNxElgW6HizD2Jcq6t6LoLYgPSrfEHm71iHg8JsgrqfUnGYFzMJmv88C6WdCtpgG_qJV1K00_Ly1G1QKoBffEs-v4fAMJrCbUdCz1qWto-PU-HLMEo-krfEpGgcmtZeRlDADh8cETMQlgQfQX2VWq_aAP4a1SXmo-j0cvRU4W5Fj0RVwNesIpetX2ZFz4p_JmB5sWFEj_fC7h5z2lq-6Bme2T3BHtXkIxoBW0_pYVnASC8P2puO5FnVxDmWuHDYQ',
    p: '07rgXd_tLUhVRF_g1OaqRZh5uZ8hiLWUSU0vu9coOaQcatSqjQlIwLW8UdKv_38GrmpIfgcEVQjzq6rFBowUm9zWBO9Eq6enpasYJBOeD8EMeDK-nsST57HjPVOCvoVC5ZX-cozPXna3iRNZ1TVYBY3smn0IaxysIK-zxESf4pM',
    q: '6qrE9TPhCS5iNR7QrKThunLu6t4H_8CkYRPLbvOIt2MgZyPLiZCsvdkTVSOX76QQEXt7Y0nTNua69q3K3Jhf-YOkPSJsWTxgrfOnjoDvRKzbW3OExIMm7D99fVBODuNWinjYgUwGSqGAsb_3TKhtI-Gr5ls3fn6B6oEjVL0dpmk',
    dp: 'mHqjrFdgelT2OyiFRS3dAAPf3cLxJoAGC4gP0UoQyPocEP-Y17sQ7t-ygIanguubBy65iDFLeGXa_g0cmSt2iAzRAHrDzI8P1-pQl2KdWSEg9ssspjBRh_F_AiJLLSPRWn_b3-jySkhawtfxwO8Kte1QsK1My765Y0zFvJnjPws',
    dq: 'KmjaV4YcsVAUp4z-IXVa5htHWmLuByaFjpXJOjABEUN0467wZdgjn9vPRp-8Ia8AyGgMkJES_uUL_PDDrMJM9gb4c6P4-NeUkVtreLGMjFjA-_IQmIMrUZ7XywHsWXx0c2oLlrJqoKo3W-hZhR0bPFTYgDUT_mRWjk7wV6wl46E',
    qi: 'iYltkV_4PmQDfZfGFpzn2UtYEKyhy-9t3Vy8Mw2VHLAADKGwJvVK5ficQAr2atIF1-agXY2bd6KV-w52zR8rmZfTr0gobzYIyqHczOm13t7uXJv2WygY7QEC2OGjdxa2Fr9RnvS99ozMa5nomZBqTqT7z5QV33czjPRCjvg6FcE',
  }

const privateKey = await importJWK(jwk, alg)

/**
 * 签发JWT
 */
const jwt = await new SignJWT({ maizuo: 'xxst' })
    /**
     * 签名算法
     */
    .setProtectedHeader({ alg })
    .setIssuedAt()
    /**
     * 发行人
     */
    .setIssuer('myname:admin:issuer')
    /**
     * 观众/接收人
     */
    .setAudience('myname:user:audience')
    /**
     * 设置过期时间
     */
    .setExpirationTime('2h')
    .sign(privateKey)

/**
 * 验证JWT
 */
const { payload, protectedHeader } = await jwtVerify(jwt, privateKey, {
    issuer: 'myname:admin:issuer',
    audience: 'myname:user:audience',
})
//打印签发、验证过程
console.log({ jwt, payload, protectedHeader })
</code></pre>
<p>nodejs中执行<code>index.js</code></p>
<pre><code class="language-shell">node -v
# v22.12.0 我的node版本
node index.js
</code></pre>
<p>打印执行结果的数据</p>
<pre><code class="language-log">{
  jwt: 'eyJhbGciOiJSUzI1NiJ9.eyJtYWl6dW8iOiJ4eHN0IiwiaWF0IjoxNzM5MjY5NzUwLCJpc3MiOiJteW5hbWU6YWRtaW46aXNzdWVyIiwiYXVkIjoibXluYW1lOnVzZXI6YXVkaWVuY2UiLCJleHAiOjE3MzkyNzY5NTB9.Vu91Rh8IiTSglhERK3MCT6VSIyTwoCB4lA-gdBjJI7_1IBpUjXsMNOD9SsRoKyWfph5xyVlLoEiLczIWid9VWp2_1PfLu3a2DXpVYMIvTwWg5-N0hQJZq4ytPYPUhoc7ROeuwGVGs-t6gIIciJCDtg4r7LWMGY9v0ekJxRRbv9EEpI0W5zrUEbemRAeq1o4QiZ1dpslko4WDZPEO0fUWqjm0k1NDBtuXKM8LelDUS_fpGsaqNNgSiL_XGGNvYMOWEFpmCHUMupQzbAnwuApd0TVVt4el9Rbek1m7rVHTAzaE0ynAbgJyBg6yPtkkw4snX-3sCYWmWGs15Kc4mRDRPQ',
  payload: {
    maizuo: 'xxst',
    iat: 1739269750,
    iss: 'myname:admin:issuer',
    aud: 'myname:user:audience',
    exp: 1739276950
  },
  protectedHeader: { alg: 'RS256' }
}

</code></pre>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="8.882171091824073" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-11 19:10">2025-02-11 19:09</span>&nbsp;
<a href="https://www.cnblogs.com/johnv">JoVee</a>&nbsp;
阅读(<span id="post_view_count">20</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18710327" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18710327);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18710327', targetLink: 'https://www.cnblogs.com/johnv/p/18710327', title: 'nodejs如何处理Token？一文深入浅出JWT签名验签' })">举报</a>
</div>
        