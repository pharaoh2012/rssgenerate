
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/quchen-blog/p/19019796" title="发布于 2025-08-03 12:41">
    <span role="heading" aria-level="2">AtCoder Beginner Contest 417 （A-E题解）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p><strong><a href="https://atcoder.jp/contests/abc417/tasks" target="_blank" rel="noopener nofollow">比赛链接</a></strong></p>
<h2 id="总体总结">总体总结</h2>
<p>A，B题纯模拟<br>
C题 公式一步转换<br>
D题 五题里面最难的，dp预处理+二分<br>
E题 排序+BFS</p>
<h2 id="题解">题解</h2>
<p><strong>A题 A Substring</strong></p>
<pre><code>#include &lt;bits/stdc++.h&gt;
using namespace std;
const int N=1e5+10;
typedef long long ll;
int t,n;
int a,b;
string s;
int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    cin&gt;&gt;n&gt;&gt;a&gt;&gt;b;
    cin&gt;&gt;s;
    for(int i=a;i&lt;n-b;i++)
    {
        cout&lt;&lt;s[i];
    }
    cout&lt;&lt;endl;

    return 0;
}
</code></pre>
<p><strong>B题 Search and Delete</strong></p>
<pre><code>#include &lt;bits/stdc++.h&gt;
using namespace std;
const int N=1e3+10;
typedef long long ll;
int t,n,m;
int a[N];
int b[N];

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
        cin&gt;&gt;n&gt;&gt;m;
        for(int i=0;i&lt;n;i++)cin&gt;&gt;a[i];
        for(int i=0;i&lt;m;i++)cin&gt;&gt;b[i];
        sort(b,b+m);
        int cnt=0;
        for(int i=0;i&lt;n;i++)
        {
            if(a[i]==b[cnt])a[i]=0,cnt++;
            else 
            {
                while(cnt&lt;m&amp;&amp;a[i]&gt;b[cnt])cnt++;
                if(cnt&lt;m&amp;&amp;a[i]==b[cnt])a[i]=0,cnt++;
            }
            if(cnt==m)break;
        }
        for(int i=0;i&lt;n;i++)
        {
            if(a[i]!=0)cout&lt;&lt;a[i]&lt;&lt;' ';
        }
    
    return 0;
}
</code></pre>
<p><strong>C题 Distance Indicators</strong></p>
<p></p><div class="math display">\[j-i = A_i+A_j $$$$ j-A_j  = i+A_i 
\]</div><p></p><pre><code>#include &lt;bits/stdc++.h&gt;
using namespace std;
const int N=2e5+10;
typedef long long ll;
int t,n;
int a[N];
int cnt[2*N];
int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    cin&gt;&gt;n;
    ll ans=0;
    for(int i=1;i&lt;=n;i++)
    {
        cin&gt;&gt;a[i];
    }
    for(int i=1;i&lt;=n;i++)
    {
        int x = i - a[i];
        if(x&gt;=1&amp;&amp;cnt[x])ans+=cnt[x];
        cnt[i+a[i]]++;
    }
    cout&lt;&lt;ans&lt;&lt;endl;

    return 0;
}
</code></pre>
<p><strong>D题 	Takahashi's Expectation</strong><br>
首先dp预处理，dp[i][j]表示在第i个礼品时候的心情为j时，最后的心情是多少<br>
然后用lower_bound(),求出什么时候mood小于前缀和presum，然后根据求出的位置，进行计算，如果求出，位置在结尾之后，说明一开始的心情过高，最后答案就是mood-presum[n]</p>
<pre><code>#include &lt;bits/stdc++.h&gt;
using namespace std;
const int N=1e4+10;
typedef long long ll;
int t,n;
int p[N],a[N],b[N];
int presum[N];
int dp[N][1001];
int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    cin&gt;&gt;n;
    for(int i=1;i&lt;=n;i++)
    {
        cin&gt;&gt;p[i]&gt;&gt;a[i]&gt;&gt;b[i];
        presum[i]=presum[i-1]+b[i];
    }

    for(int i=0;i&lt;=1000;i++)dp[n+1][i]=i;
    for(int i=n;i&gt;=1;i--)
    {
        for(int j=0;j&lt;=1000;j++)
        {
            if(j&gt;p[i])
            {
                dp[i][j]=dp[i+1][max(0,j-b[i])];
            }
            else
            {
                dp[i][j]=dp[i+1][j+a[i]];
            }
        }
    }


    int q;
    cin&gt;&gt;q;
    while(q--)
    {
        int x;
        cin&gt;&gt;x;
        int mid = lower_bound(presum+1,presum+n+1,x-500)-presum;
        if(mid==n+1)
        {
            cout&lt;&lt;x-presum[n]&lt;&lt;endl;
        }
        else
        {
            cout&lt;&lt;dp[mid][x-presum[mid-1]]&lt;&lt;endl;
        }
    }


    return 0;
}



</code></pre>
<p><strong>E题 	A Path in A Dictionary</strong><br>
每次先把所有节点的边进行从小到大排序，然后bfs遍历每一个点，时间复杂度为O(n),求出字典序最小的路径</p>
<pre><code>
#include &lt;bits/stdc++.h&gt;
using namespace std;
const int N=1e5+10;
typedef long long ll;
int t,n;
int m,x,y;
bool flag = false;
bool vis[1001];
vector&lt;ll&gt;res;
vector&lt;ll&gt;graph[1001];
void dfs(int cur)
{
    if(flag)return;
    if(cur==y)
    {
        for(int i=0;i&lt;res.size();i++)cout&lt;&lt;res[i]&lt;&lt;' ';
        cout&lt;&lt;endl;
        flag = true;
        return ;
    }

    for(auto it:graph[cur])
    {
        if(vis[it])continue;
        res.push_back(it);
        vis[it]=true;
        dfs(it);
        res.pop_back();
    }


    
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    cin&gt;&gt;t;
    while(t--)
    {
        flag =false;
        memset(vis,false,sizeof(vis));
        cin&gt;&gt;n&gt;&gt;m&gt;&gt;x&gt;&gt;y;
        for(int i=1;i&lt;=1000;i++)graph[i].clear();
        for(int i=1;i&lt;=m;i++)
        {
            int f,t;
            cin&gt;&gt;f&gt;&gt;t;
            graph[f].push_back(t);
            graph[t].push_back(f);
        }
        for(int i=1;i&lt;=n;i++)sort(graph[i].begin(),graph[i].end());
        vis[x]=true;
        res.push_back(x);
        dfs(x);
        res.clear();

    }


    return 0;
}



</code></pre>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-08-03 12:42">2025-08-03 12:41</span>&nbsp;
<a href="https://www.cnblogs.com/quchen-blog">屈臣</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19019796);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19019796', targetLink: 'https://www.cnblogs.com/quchen-blog/p/19019796', title: 'AtCoder Beginner Contest 417 （A-E题解）' })">举报</a>
</div>
        