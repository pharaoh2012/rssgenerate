
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/jsnoah/p/-/guide_typescript-preface" title="发布于 2025-03-27 14:03">
    <span role="heading" aria-level="2">前言</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>本系列博文<strong>严肃</strong>参考了下面链接的文档资料，要感谢其中的系列中文资料对学习的帮助和推动作用。</p>
<ul>
<li><a href="https://www.typescriptlang.org/docs" target="_blank" rel="noopener nofollow">https://www.typescriptlang.org/docs</a></li>
<li><a href="https://www.tslang.cn/docs/home.html" target="_blank" rel="noopener nofollow">https://www.tslang.cn/docs/home.html</a></li>
</ul>
<p>本系列博文的撰写初衷是，希望能够帮助已掌握 JavaScript 编程技能的人快速学会 TypeScript。</p>
<p>本系列博文不会涉及 JavaScript 的讲解，对 TypeScript 定义为 JavaScript 的<strong>静态类型检查器</strong>。我们希望 JavaScript 能在中文社区良好发展，期待本系列博文能对你有所助用。</p>
<h3 id="类型">类型</h3>
<p>我们认为首先需要澄清的是，TypeScript 的意义不是为 JavaScript 引入了类型，或者说规范了类型的使用。</p>
<p>JavaScript 从来就有一套完整的类型体系。如果给到你 JavaScript 没有类型或者类型无所谓的幻觉，那很有可能是因为你不掌握 JavaScript 动态类型转换规则。</p>
<p>比如，下面就是一个经常拿来诟病 JavaScript 类型的例子：</p>
<pre><code class="language-javascript">let width = 42, depth = "42";

console.log(width == depth); // true
</code></pre>
<p>站在<strong>静态</strong>类型的角度，这里的运行结果让人感到错愕。两个类型完全不同的值怎么可以相等，这难道不是挂羊头卖狗肉吗。</p>
<p>但如果你了解到这里的处理方式和<strong>强制类型转换</strong>的原理，就不会对它有什么神奇的感觉。相反，它在代码表达上简洁明了。</p>
<h3 id="意义">意义</h3>
<p>我们认为 TypeScript 的意义在于它提供了 JavaScript 编码时对类型信息的回馈。</p>
<p>举例来说，现在给到你一个 API <code>MyFun</code>，但并没有对它的进一步信息，或者不想费力了解它的使用方法。</p>
<p>传统的 JavaScript 做法是具体用用它。根据用例的反馈，来倒推对它的使用方式。糟糕但没办法的选择。</p>
<p>TypeScript 改善了这一窘迫情形，通过<strong>类型契约</strong>可以给到你 <code>MyFun</code> 的使用信息——由 API 创建者定义。</p>
<p>比如，假定 <code>MyFun</code> 的定义是携有一个参数的函数。那么编码时，TypeScript 可以告知给你这个参数是什么类型。如果它是一个对象，还可以进一步为你描述这个对象的结构——都有哪些属性。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.22769833146527776" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-29 00:47">2025-03-27 14:03</span>&nbsp;
<a href="https://www.cnblogs.com/jsnoah">jsnoah</a>&nbsp;
阅读(<span id="post_view_count">7</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18795890" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18795890);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18795890', targetLink: 'https://www.cnblogs.com/jsnoah/p/-/guide_typescript-preface', title: '前言' })">举报</a>
</div>
        