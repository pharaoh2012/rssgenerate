
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/jsnoah/p/-/guide_typescript-preface" title="发布于 2025-03-27 14:03">
    <span role="heading" aria-level="2">前言</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>本系列旨在成为“TypeScript 语言精华”指南。我们会假定读者已经充分掌握了 JavaScript 编程技能，并将 TypeScript 定义为 JavaScript 的静态<strong>类型检查器</strong>。</p>
<p>JavaScript 本身是一个<strong>动态</strong>类型的语言。也就是说，JavaScript <strong>运行时</strong>会在需要的时候自动为值进行类型转换。举例来说：</p>
<pre><code class="language-javascript">let width = 42, depth = "42";

console.log(width == depth); // true
</code></pre>
<p>从<strong>静态</strong>类型的角度出发，这里的运行结果会让人感到错愕。两个类型完全不同的值怎么可以相等，这和“挂羊头卖狗肉”有什么区别。</p>
<p>然而，事实是 JavaScript 引擎在执行 <code>42 == "42"</code> 相等比较时，会先调用 <code>Number()</code> 方法将 <code>"42"</code>  转换为数字类型，然后进行值的比较。</p>
<p>下面将数字字符串换成它的二进制形式，希望有助于向你表明 JavaScript 的动态<strong>类型转换</strong>自有它的一套规则。如果你不了解这套规则，就会觉得 JavaScript 的类型无所谓。</p>
<pre><code class="language-javascript">let width = 42;
let depth = "0B101010";

console.log(width == depth); // true
</code></pre>
<p>这里引擎对 <code>"0B101010"</code> 调用 <code>Number()</code> 的结果就是数字 <code>42</code>，所以这里的 <code>width</code> 和 <code>depth</code> 依然是相等。</p>
<p>然而，一些人认为这种隐式地类型转换不够安全。特别是当开发大型项目时，没有了类型的强制<strong>约束</strong>，非常容易传入错误类型的值而引发奇奇怪怪的问题。</p>
<p>TypeScript 就是为此而生，它会在代码执行之前基于<strong>值的类型</strong>检查程序是否有错误。这就是它的编译过程。</p>
<p>TypeScript 最终<strong>编译</strong>输出的结果是最后使用的 JavaScript 文件，期间的类型信息会被编译器擦除掉。</p>
<p>本系列文章<strong>严肃</strong>参考了下面链接的文档资料，不是简单的文字搬运，希望可以帮到 JavaScript 编程从业者。</p>
<ul>
<li><a href="https://www.tslang.cn/docs/home.html" target="_blank" rel="noopener nofollow">https://www.tslang.cn/docs/home.html</a></li>
<li><a href="https://www.typescriptlang.org/zh/docs/" target="_blank" rel="noopener nofollow">https://www.typescriptlang.org/zh/docs/</a></li>
</ul>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.19998107466087964" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-27 17:29">2025-03-27 14:03</span>&nbsp;
<a href="https://www.cnblogs.com/jsnoah">jsnoah</a>&nbsp;
阅读(<span id="post_view_count">3</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18795890" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18795890);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18795890', targetLink: 'https://www.cnblogs.com/jsnoah/p/-/guide_typescript-preface', title: '前言' })">举报</a>
</div>
        