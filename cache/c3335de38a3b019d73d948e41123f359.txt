
	<h1 class="postTitle"><a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/kacarton/p/18701234" title="发布于 2025-02-06 17:00">
    <span role="heading" aria-level="2">用DeepSeek写程序之一：编写在linux终端窗口右上角动态显示时间的c++程序</span>
    

</a>
</h1>
	<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h3 id="一-简单需求">一. 简单需求</h3>
<p>早前有个需求当SSH进入linux时，希望在终端窗口动太显示当前的时间，原来是用脚本解决的</p>
<pre><code>while sleep 1;do tput sc;tput cup 0 $(($(tput cols)-29));date;tput rc;done &amp;
</code></pre>
<p>如果想加上颜色，改为：</p>
<pre><code>while sleep 1;do tput sc;tput cup 0 $(($(tput cols)-8)); tput setb 1;tput setf 7;date  "+%T";tput rc;done &amp;
</code></pre>
<p>如果希望每次打开终端都能显示时间，而不必每次在控制台执行脚本，可以将其放在.bashrc中，即：</p>
<pre><code>echo "while sleep 1;do tput sc;tput cup 0 \$((\$(tput cols)-29));date;tput rc;done &amp;" &gt;&gt; $HOME/.bashrc
</code></pre>
<p>实际使用时发现这种输出方式会影响窗口滚动，就是脚本输出时间时将窗口滚回最下方，影响相当大。<br>
最近DeepSeek爆火后，看看DeepSeek能不能写个C++程序，同时解决窗口滚动问题。</p>
<h3 id="二-用deepseek写程序">二. 用DeepSeek写程序</h3>
<p>向DeepSeek发出灵魂拷贝：“用c++编写程序，用于在linux用终端窗口右上角位置动态显示时间”，勾选“尝试思考（R1）”后，DeepSeek用时47秒洋洋洒洒的输出了一堆内容，用循环每隔一秒更新一次，用ANSI转义码\033[&lt;行&gt;;&lt;列&gt;H把光标移动到终端右上角输出时间；要注意时间长度变会有短残留字符的问题；要处理终端的resize事件检测新的宽度；以及隐藏光标用\033[?25l、恢复用\033[?25h等。<br>
最后给出一段C++代码：</p>
<pre><code>#include &lt;iostream&gt;
#include &lt;chrono&gt;
#include &lt;ctime&gt;
#include &lt;iomanip&gt;
#include &lt;unistd.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;csignal&gt;
#include &lt;atomic&gt;
#include &lt;string&gt;

using namespace std::chrono_literals;

std::atomic_bool keep_running(true);

// 信号处理函数
void signal_handler(int signal) {
    if (signal == SIGINT) {
        keep_running = false;
    }
}

// 获取终端宽度
int get_terminal_width() {
    struct winsize size{};
    ioctl(STDOUT_FILENO, TIOCGWINSZ, &amp;size);
    return size.ws_col;
}

// 隐藏光标
void hide_cursor() {
    std::cout &lt;&lt; "\033[?25l";
}

// 显示光标
void show_cursor() {
    std::cout &lt;&lt; "\033[?25h";
}

int main() {
    // 注册信号处理
    std::signal(SIGINT, signal_handler);
    
    // 隐藏光标
    hide_cursor();

    while (keep_running) {
        // 获取当前时间
        auto now = std::chrono::system_clock::now();
        std::time_t now_time = std::chrono::system_clock::to_time_t(now);
        std::tm* local_time = std::localtime(&amp;now_time);
        std::string time_str = std::to_string(local_time-&gt;tm_hour) + ":" 
                             + std::to_string(local_time-&gt;tm_min) + ":" 
                             + std::to_string(local_time-&gt;tm_sec);

        // 获取终端宽度并计算位置
        int term_width = get_terminal_width();
        int time_len = time_str.length();
        int pos = term_width - time_len;

        // 使用ANSI转义码移动光标并输出时间
        std::cout &lt;&lt; "\033[1;" &lt;&lt; pos &lt;&lt; "H"  // 移动到第一行右侧
                  &lt;&lt; time_str
                  &lt;&lt; std::flush;

        // 每秒更新一次
        std::this_thread::sleep_for(1s);
    }

    // 清理并恢复光标
    std::cout &lt;&lt; "\033[2K\033[1;1H";  // 清除第一行并移动光标到左上角
    show_cursor();
    std::cout &lt;&lt; std::flush;

    return 0;
}
</code></pre>
<p>瞅了一眼，应该没处理好滚动问题，再追加一个要求：“要求程序在后台运行，不影响用户输入命令”，DeepSeek深度思考60秒后再次给出一段代码：</p>
<pre><code>#include &lt;iostream&gt;
#include &lt;chrono&gt;
#include &lt;ctime&gt;
#include &lt;iomanip&gt;
#include &lt;unistd.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;csignal&gt;
#include &lt;atomic&gt;
#include &lt;string&gt;

using namespace std::chrono_literals;

std::atomic_bool keep_running(true);

void signal_handler(int signal) {
    if (signal == SIGINT) {
        keep_running = false;
    }
}

int get_terminal_width() {
    struct winsize size{};
    ioctl(STDOUT_FILENO, TIOCGWINSZ, &amp;size);
    return size.ws_col;
}

void hide_cursor() {
    std::cout &lt;&lt; "\033[?25l";
}

void show_cursor() {
    std::cout &lt;&lt; "\033[?25h";
}

int main() {
    std::signal(SIGINT, signal_handler);
    hide_cursor();

    while (keep_running) {
        auto now = std::chrono::system_clock::now();
        std::time_t now_time = std::chrono::system_clock::to_time_t(now);
        std::tm* local_time = std::localtime(&amp;now_time);
        
        // 格式化时间（修复个位数显示问题）
        std::stringstream ss;
        ss &lt;&lt; std::setw(2) &lt;&lt; std::setfill('0') &lt;&lt; local_time-&gt;tm_hour &lt;&lt; ":"
           &lt;&lt; std::setw(2) &lt;&lt; std::setfill('0') &lt;&lt; local_time-&gt;tm_min &lt;&lt; ":"
           &lt;&lt; std::setw(2) &lt;&lt; std::setfill('0') &lt;&lt; local_time-&gt;tm_sec;
        std::string time_str = ss.str();

        int term_width = get_terminal_width();
        int time_len = time_str.length();
        int pos = term_width - time_len;

        // 关键修改：保存光标位置 -&gt; 输出时间 -&gt; 恢复光标位置
        std::cout &lt;&lt; "\033[s"                   // 保存光标位置
                  &lt;&lt; "\033[1;" &lt;&lt; pos &lt;&lt; "H"     // 移动到右上角
                  &lt;&lt; time_str
                  &lt;&lt; "\033[u"                    // 恢复光标位置
                  &lt;&lt; std::flush;

        std::this_thread::sleep_for(1s);
    }

    // 退出时清除时间显示
    std::cout &lt;&lt; "\033[s\033[1;" &lt;&lt; (get_terminal_width() - 8) &lt;&lt; "H\033[0K\033[u";
    show_cursor();
    std::cout &lt;&lt; std::flush;

    return 0;
}
</code></pre>

<p>而且强调：</p>
<blockquote>
<p>每次输出时间时，将光标移动到右上角，输出时间后立即将光标移回原来的位置，这样用户输入的命令不会被打断。例如，当用户在输入命令时，程序在后台每隔一秒将光标移到右上角，写入时间，然后移回原来的位置，这样用户的输入不会被覆盖。<br>
这可能需要记录光标的当前位置，在输出时间后恢复。例如，使用ANSI转义码保存光标位置，移动输出时间，然后恢复。例如：</p>
<ul>
<li>保存光标位置：\033[s</li>
<li>移动光标到右上角：\033[1;<pos>H</pos></li>
<li>输出时间</li>
<li>恢复光标位置：\033[u<br>
这样，用户在输入时，每次更新时间时，程序会保存当前光标位置，输出时间到右上角，然后恢复，这样用户的输入不会被干扰。</li>
</ul>
</blockquote>
<p>好吧，看样子它并没有理解我说的内容。还是先试试代码能不能运行。</p>
<h3 id="三-编译运行">三. 编译运行</h3>
<p>DeekSeek给出运行方式：</p>
<pre><code># 编译程序
g++ -o clock clock.cpp -std=c++11 -lpthread

# 后台运行（推荐方式）
./clock &amp;

# 完全脱离终端运行（关闭终端后仍然有效）
nohup ./clock &gt; /dev/null 2&gt;&amp;1 &amp;
</code></pre>
<p>毫无意外，报错了。<br>
<img src="https://img2024.cnblogs.com/blog/3509400/202502/3509400-20250206164236196-603668871.png" alt="" loading="lazy"></p>
<p>改用c++14来编译：<br>
<code>g++ -o clock clock.cpp -std=c++14 -lpthread</code><br>
再次报错：<br>
<img src="https://img2024.cnblogs.com/blog/3509400/202502/3509400-20250206164134536-1295447322.png" alt="" loading="lazy"></p>
<p>咱自己改一改，加上<code>#include &lt;thread&gt;</code>后编译成功，运行clock直接输出当前时间，运行./clock &amp; 实现在窗口右上角动态显示当前时间。<br>
<img src="https://img2024.cnblogs.com/blog/3509400/202502/3509400-20250206164653453-1180327464.png" alt="" loading="lazy"></p>
<p>但是和脚本实现一样，会影响窗口滚动。要求DeepSeek再改进，反复出现“服务器繁忙，请稍后再试。”，没法进行只能放弃。</p>
<h3 id="四-总结">四. 总结</h3>
<p>DeepSeek基本能按要求写出似模似样的代码，有些小问题修正后能够使用。</p>
<p>以上测试环境：Linux openEuler1 5.10.0-229.0.0.128.oe2203sp4.x86_64 #1 SMP Wed Sep 18 16:21:54 CST 2024 x86_64 x86_64 x86_64 GNU/Linux，SSH工具：PuTTY Release 0.72。</p>

</div>
<div id="MySignature" role="contentinfo">
    <hr size="1">
<p>IT人的老年生活</p>
<p>本文来自博客园，作者：<a href="https://www.cnblogs.com/kacarton/" target="_blank">IT老彭</a>，转载请注明原文链接：<a href="https://www.cnblogs.com/kacarton/p/18701234" target="_blank">https://www.cnblogs.com/kacarton/p/18701234</a></p>
</div>
<div class="clear"></div>

	<div class="postDesc">posted on 
<span id="post-date" data-last-update-days="0.05099010875347222" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-06 17:02">2025-02-06 17:00</span>&nbsp;
<a href="https://www.cnblogs.com/kacarton">IT老彭</a>&nbsp;
阅读(<span id="post_view_count">42</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18701234" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18701234);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18701234', targetLink: 'https://www.cnblogs.com/kacarton/p/18701234', title: '用DeepSeek写程序之一：编写在linux终端窗口右上角动态显示时间的c++程序' })">举报</a>
</div>
