
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/yeyunfei/p/18964244" title="发布于 2025-07-03 19:56">
    <span role="heading" aria-level="2">如何基于three.js(webgl)引擎架构，实现3D医院、3D园区导航，3D科室路径导航</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        本文介绍了基于Three.js的三维导航路径算法实现方案，重点阐述了三维A*算法的核心逻辑与可视化方法。通过Node3D类构建三维节点模型，结合26方向邻居搜索和包含高度维度的启发式函数，实现了跨楼层路径规划与动态避障功能，最终实现了医院园区的3D导航功能
    </div>
<div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p><strong><span style="font-size: 18pt">一、前言</span></strong><br>　　在这个日新月异的科技时代，技术的价值不仅在于推动社会的进步，更在于如何更好地服务于人民。医院三维导航系统项目，正是技术服务于人民理念的生动体现，真正从患者出发，解决患者在复杂的医院园区找科室难，迷路等问题。通过three.js(webgl)引擎架构，我们实现了3D医院、3D园区导航以及3D科室路径导航，为患者切实解决一些问题。</p>
<p>　　很喜欢这样的项目，让技术有了温度，有了真正的价值</p>
<p><strong><span style="font-size: 18pt">二、技术的温暖</span></strong></p>
<ul>
<li>
<p class="marklang-paragraph">‌直观导航，简化就医流程‌：利用three.js构建的三维医院场景，真实还原了医院内部布局。患者只需轻点屏幕，即可直观看到医院各个科室、设施的位置，大大简化了就医流程，减少了因迷路或找不到科室而带来的困扰。</p>



</li>
<li>
<p class="marklang-paragraph">‌智能路径规划，提升就医效率‌：系统内置智能路径规划算法，能够根据患者的起点和终点，自动计算出最优路径。无论是初次就诊的患者，还是对医院布局不熟悉的家属，都能轻松找到目的地，大大提升了就医效率。</p>



</li>
<li>
<p class="marklang-paragraph">‌人性化设计，彰显人文关怀‌：在设计过程中，我们充分考虑了患者的需求和体验。系统不仅提供了导航功能，还整合了医院科室信息、医生介绍等附加内容，为患者提供了全方位的医疗服务。此外，系统还支持无障碍通道自动推荐等功能，体现了对特殊群体的关怀和尊重</p>



</li>
<li>
<p>‌技术服务于管理‌：医院三维导航系统不仅提升了患者的就医体验，也优化了医院的管理效率。通过数据分析，医院可以更加精准地掌握患者流动情况，从而优化资源配置，提升整体服务水平。‌</p>



</li>
<li>推动医疗信息化进程‌：作为医疗信息化进程中的重要一环，医院三维导航系统通过与医院其他信息系统的对接，实现了数据的共享和协同。这不仅提升了医疗服务的整体水平，也为未来的智慧医疗发展奠定了坚实的基础。</li>



</ul>
<p>闲话少叙，亮个相吧！</p>
<p>技术交流 1203193731@qq.com</p>
<p><span style="font-size: 18pt">三、效果展示与技术实现</span></p>
<p><span style="font-size: 18pt">3.1、医院整体风貌</span></p>
<p><img alt="" width="314" height="500" loading="lazy" data-src="https://img2024.cnblogs.com/blog/800616/202507/800616-20250703191826670-1436369907.gif" class="lazyload"></p>
<p>这一步主要是建模，以及使用three.js加载，考虑到用户的手机端展示，这里还是才用代码建模的方式，保障在手机上流畅运行</p>
<p>在开发基于three.js的3D应用时，代码建模是一种高效且灵活的方式，特别适用于需要在手机端流畅展示的场景。通过Three.js提供的API，开发者可以直接在JavaScript中定义几何体、材质和场景，无需依赖外部模型文件，从而减少了加载时间和资源消耗。</p>
<p>&nbsp;</p>
<p><span style="font-size: 18pt">&nbsp;3.2、科室概览</span></p>
<p><img alt="" width="320" height="509" loading="lazy" data-src="https://img2024.cnblogs.com/blog/800616/202507/800616-20250703191957448-927694101.gif" class="lazyload"></p>
<p>这里展开楼宇，查看内部科室分布情况，这里涉及到如何将科室名称与科室动态绑定展示。</p>
<p>点击科室，还可以快速设为起点或者终点 开始导航</p>
<p>主要实现代码如下：</p>
<div class="cnblogs_code">
<pre>ModelBusiness.prototype.addLocationLogo = <span style="color: rgba(0, 0, 255, 1)">function</span><span style="color: rgba(0, 0, 0, 1)"> (modelname) {
    </span><span style="color: rgba(0, 0, 255, 1)">var</span> positionLogo=msj3DObj.commonFunc.findObject("positionLogo"<span style="color: rgba(0, 0, 0, 1)">)
    </span><span style="color: rgba(0, 0, 255, 1)">var</span> model = msj3DObj.commonFunc.findObject(modelname +"makeTextPanel"<span style="color: rgba(0, 0, 0, 1)">);
    </span><span style="color: rgba(0, 0, 255, 1)">if</span> (!<span style="color: rgba(0, 0, 0, 1)">model) {
        model </span>=<span style="color: rgba(0, 0, 0, 1)"> msj3DObj.commonFunc.findObject(modelname);
    }
    </span><span style="color: rgba(0, 0, 255, 1)">var</span> modelPosition = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> THREE.Vector3();
    model.getWorldPosition(modelPosition);
    </span><span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)"> (positionLogo) {
        positionLogo.position.x </span>=<span style="color: rgba(0, 0, 0, 1)"> modelPosition.x;
        positionLogo.position.z </span>=<span style="color: rgba(0, 0, 0, 1)"> modelPosition.z;
        positionLogo.position.y </span>= modelPosition.y + (model.name.indexOf("makeTextPanel")&gt;=0?-0.1:2.5<span style="color: rgba(0, 0, 0, 1)">);
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<p><span style="font-size: 18pt">&nbsp;3.3、导航路径规划实现</span></p>
<p><img alt="" width="344" height="548" loading="lazy" data-src="https://img2024.cnblogs.com/blog/800616/202507/800616-20250703192028824-1391325085.gif" class="lazyload"></p>
<p>实现路径动态最优规划，是这个项目技术上最难的部分</p>
<p>涉及到寻路算法，这里主要采用A*路径搜索算法，</p>
<p>代码如下：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">class Node3D {
  constructor(x, y, z) {
    </span><span style="color: rgba(0, 0, 255, 1)">this</span>.x =<span style="color: rgba(0, 0, 0, 1)"> Math.round(x);
    </span><span style="color: rgba(0, 0, 255, 1)">this</span>.y =<span style="color: rgba(0, 0, 0, 1)"> Math.round(y);
    </span><span style="color: rgba(0, 0, 255, 1)">this</span>.z =<span style="color: rgba(0, 0, 0, 1)"> Math.round(z);
    </span><span style="color: rgba(0, 0, 255, 1)">this</span>.g = 0; <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 实际代价</span>
    <span style="color: rgba(0, 0, 255, 1)">this</span>.h = 0; <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 启发式代价</span>
    <span style="color: rgba(0, 0, 255, 1)">this</span>.parent = <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">;
  }
  
  get f() { </span><span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">this</span>.g + <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">.h; }
}

</span><span style="color: rgba(0, 0, 255, 1)">function</span><span style="color: rgba(0, 0, 0, 1)"> aStar3D(start, end, obstacles) {
  const openSet </span>= [<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Node3D(...start)];
  const closedSet </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Set();
  const obstacleSet </span>= <span style="color: rgba(0, 0, 255, 1)">new</span> Set(obstacles.map(o =&gt;<span style="color: rgba(0, 0, 0, 1)"> `${o.x},${o.y},${o.z}`));

  </span><span style="color: rgba(0, 0, 255, 1)">while</span> (openSet.length &gt; 0<span style="color: rgba(0, 0, 0, 1)">) {
    openSet.sort((a,b) </span>=&gt; a.f -<span style="color: rgba(0, 0, 0, 1)"> b.f);
    const current </span>=<span style="color: rgba(0, 0, 0, 1)"> openSet.shift();
    
    </span><span style="color: rgba(0, 0, 255, 1)">if</span> (current.x === end[0] &amp;&amp; current.y === end[1] &amp;&amp; current.z === end[2<span style="color: rgba(0, 0, 0, 1)">]) {
      </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> reconstructPath(current);
    }

    closedSet.add(`${current.x},${current.y},${current.z}`);
    
    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 三维邻居搜索（26方向）</span>
    <span style="color: rgba(0, 0, 255, 1)">for</span> (let dx = -1; dx &lt;= 1; dx++<span style="color: rgba(0, 0, 0, 1)">) {
      </span><span style="color: rgba(0, 0, 255, 1)">for</span> (let dy = -1; dy &lt;= 1; dy++<span style="color: rgba(0, 0, 0, 1)">) {
        </span><span style="color: rgba(0, 0, 255, 1)">for</span> (let dz = -1; dz &lt;= 1; dz++<span style="color: rgba(0, 0, 0, 1)">) {
          </span><span style="color: rgba(0, 0, 255, 1)">if</span> (dx === 0 &amp;&amp; dy === 0 &amp;&amp; dz === 0) <span style="color: rgba(0, 0, 255, 1)">continue</span><span style="color: rgba(0, 0, 0, 1)">;
          
          const neighbor </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Node3D(
            current.x </span>+<span style="color: rgba(0, 0, 0, 1)"> dx, 
            current.y </span>+<span style="color: rgba(0, 0, 0, 1)"> dy, 
            current.z </span>+<span style="color: rgba(0, 0, 0, 1)"> dz
          );
          
          const neighborKey </span>=<span style="color: rgba(0, 0, 0, 1)"> `${neighbor.x},${neighbor.y},${neighbor.z}`;
          </span><span style="color: rgba(0, 0, 255, 1)">if</span> (obstacleSet.has(neighborKey) || closedSet.has(neighborKey)) <span style="color: rgba(0, 0, 255, 1)">continue</span><span style="color: rgba(0, 0, 0, 1)">;
          
          neighbor.g </span>= current.g + Math.sqrt(dx*dx + dy*dy + dz*<span style="color: rgba(0, 0, 0, 1)">dz);
          neighbor.h </span>=<span style="color: rgba(0, 0, 0, 1)"> heuristic(neighbor, end);
          neighbor.parent </span>=<span style="color: rgba(0, 0, 0, 1)"> current;
          
          const existing </span>= openSet.find(n =&gt;<span style="color: rgba(0, 0, 0, 1)"> 
            n.x </span>=== neighbor.x &amp;&amp; n.y === neighbor.y &amp;&amp; n.z ===<span style="color: rgba(0, 0, 0, 1)"> neighbor.z
          );
          
          </span><span style="color: rgba(0, 0, 255, 1)">if</span> (!existing || neighbor.g &lt;<span style="color: rgba(0, 0, 0, 1)"> existing.g) {
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (existing) openSet.splice(openSet.indexOf(existing), 1<span style="color: rgba(0, 0, 0, 1)">);
            openSet.push(neighbor);
          }
        }
      }
    }
  }
  </span><span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">null</span>; <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 无路径</span>
<span style="color: rgba(0, 0, 0, 1)">}

</span><span style="color: rgba(0, 0, 255, 1)">function</span><span style="color: rgba(0, 0, 0, 1)"> heuristic(a, b) {
  </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> Math.sqrt(
    Math.pow(a.x</span>-b[0], 2) +<span style="color: rgba(0, 0, 0, 1)"> 
    Math.pow(a.y</span>-b[1], 2) +<span style="color: rgba(0, 0, 0, 1)"> 
    Math.pow(a.z</span>-b[2], 2<span style="color: rgba(0, 0, 0, 1)">)
  );
}

</span><span style="color: rgba(0, 0, 255, 1)">function</span><span style="color: rgba(0, 0, 0, 1)"> reconstructPath(node) {
  const path </span>=<span style="color: rgba(0, 0, 0, 1)"> [];
  </span><span style="color: rgba(0, 0, 255, 1)">while</span><span style="color: rgba(0, 0, 0, 1)"> (node) {
    path.unshift([node.x, node.y, node.z]);
    node </span>=<span style="color: rgba(0, 0, 0, 1)"> node.parent;
  }
  </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> path;
}</span></pre>
</div>
<p>&nbsp;</p>
<p><span style="font-size: 18pt">&nbsp;3.4、细分科室，楼宇展示，快捷选择导航</span></p>
<p><img alt="" width="333" height="530" loading="lazy" data-src="https://img2024.cnblogs.com/blog/800616/202507/800616-20250703192048066-481559234.gif" class="lazyload"></p>
<p>&nbsp;快捷导航，就是方便用户，直接点击科室 直接设置为终点 或者起点。</p>
<p>项目中还用到了本地语音播报以及百度的语音播报接口。</p>
<div class="cnblogs_code">
<pre>ModelBusiness.prototype.speakWord = <span style="color: rgba(0, 0, 255, 1)">function</span><span style="color: rgba(0, 0, 0, 1)"> (text, index, length) {
  
    </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">语音播报</span>
    <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">转码</span>
    <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">这个是调用百度的语音播报</span>
    <span style="color: rgba(0, 0, 255, 1)">try</span><span style="color: rgba(0, 0, 0, 1)"> {
        </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">if (modelbusiness.baiduToken) {</span>
        <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">    modelbusiness.speakWordByBaidu(text, index,length);</span>
        <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">}</span>
        <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">if (modelbusiness.utterance) {</span>

        <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">    modelbusiness.utterance.text = text;</span>
        <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">    modelbusiness.utterance.lang = 'zh-CN'; // 设置语言为中文</span>
        <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">    modelbusiness.utterance.rate = 1.2; // 语速，默认为1.0</span>
        <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">    modelbusiness.utterance.pitch = 2; // 音高，默认为1.0</span>
        <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">    window.speechSynthesis.speak(modelbusiness.utterance);</span>
        <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">} else {</span>
            <span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)"> (modelbusiness.baiduToken) {
                modelbusiness.speakWordByBaidu(text, index,length);
            }
      </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">  }</span>
    }<span style="color: rgba(0, 0, 255, 1)">catch</span><span style="color: rgba(0, 0, 0, 1)">(err){
        console.log(err);
        </span><span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)"> (modelbusiness.baiduToken) {
            modelbusiness.speakWordByBaidu(text, index, length);
        }
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<p>技术交流 1203193731@qq.com</p>
<p>&nbsp;</p>
<p>如果你有什么要交流的心得 可邮件我</p>
<p>其它相关文章：</p>
<p><a title="如何基于three.js(webgl)引擎架构，实现3D密集架库房,3D档案室（3d机器人取档、机器人盘点、人工查档、设备巡检）" href="https://www.cnblogs.com/yeyunfei/p/1802368" target="_blank">如何基于three.js(webgl)引擎架构，实现3D密集架库房,3D档案室（3d机器人取档、机器人盘点、人工查档、设备巡检）</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/17382314.html" target="_blank">如何使用webgl(three.js)实现煤矿隧道、井下人员定位、掘进面、纵采面可视化解决方案——第十九课（一）</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/17205445.html" target="_blank">如何使用webgl(three.js)实现3D消防、3D建筑消防大楼、消防数字孪生、消防可视化解决方案——第十八课（一）</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/16661093.html" target="_blank">webgl(three.js)3D光伏,3D太阳能能源,3D智慧光伏、光伏发电、清洁能源三维可视化解决方案——第十六课</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/16826146.html" target="_blank">如何用webgl(three.js)搭建一个3D库房,3D仓库3D码头,3D集装箱,车辆定位,叉车定位可视化孪生系统——第十五课</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/16616696.html" target="_blank">webgl(three.js)实现室内三维定位,3D定位,3D楼宇bim、实时定位三维可视化解决方案——第十四课（定位升级版）</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/15566365.html" target="_blank">使用three.js(webgl)搭建智慧楼宇、设备检测、数字孪生——第十三课</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/15952916.html" target="_blank">如何用three.js(webgl)搭建3D粮仓、3D仓库、3D物联网设备监控-第十二课</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/16011837.html" rel="noopener" target="_blank">如何用webgl(three.js)搭建处理3D隧道、3D桥梁、3D物联网设备、3D高速公路、三维隧道桥梁设备监控-第十一课</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/15676559.html" rel="noopener" target="_blank">如何用three.js实现数字孪生、3D工厂、3D工业园区、智慧制造、智慧工业、智慧工厂-第十课</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/10484241.html" rel="noopener" target="_blank">使用webgl(three.js)创建3D机房，3D机房微模块详细介绍(升级版二)</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/7899613.html" rel="noopener" target="_blank">如何用webgl(three.js)搭建一个3D库房-第一课</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/8811228.html" rel="noopener" target="_blank">如何用webgl(three.js)搭建一个3D库房,3D密集架,3D档案室,-第二课</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/8910482.html" rel="noopener" target="_blank">使用webgl(three.js)搭建一个3D建筑，3D消防模拟——第三课</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/9629405.html" rel="noopener" target="_blank">使用webgl(three.js)搭建一个3D智慧园区、3D建筑，3D消防模拟，web版3D,bim管理系统——第四课</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/10473050.html" rel="noopener" target="_blank">如何用webgl(three.js)搭建不规则建筑模型，客流量热力图模拟</a></p>
<p><a href="https://www.cnblogs.com/yeyunfei/p/11151890.html" rel="noopener" target="_blank">&nbsp;使用webgl(three.js)搭建一个3D智慧园区、3D建筑，3D消防模拟，web版3D,bim管理系统——第四课（炫酷版一）</a></p>
<h1 class="postTitle"><span style="font-size: 14px"><a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/yeyunfei/p/11579334.html" rel="noopener">使用webgl(three.js)搭建3D智慧园区、3D大屏，3D楼宇，智慧灯杆三维展示，3D灯杆，web版3D,bim管理系统——第六课</a></span></h1>
<p><a href="https://www.cnblogs.com/yeyunfei/p/15578120.html" rel="noopener" target="_blank">如何用webgl(three.js)搭建处理3D园区、3D楼层、3D机房管线问题（机房升级版）-第九课（一）</a></p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.006944444444444444" data-date-updated="2025-07-03 20:06">2025-07-03 19:56</span>&nbsp;
<a href="https://www.cnblogs.com/yeyunfei">魂断蓝桥666</a>&nbsp;
阅读(<span id="post_view_count">23</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18964244);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18964244', targetLink: 'https://www.cnblogs.com/yeyunfei/p/18964244', title: '如何基于three.js(webgl)引擎架构，实现3D医院、3D园区导航，3D科室路径导航' })">举报</a>
</div>
        