
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/niceWk/p/18977621" title="发布于 2025-07-10 19:45">
    <span role="heading" aria-level="2">Rust 修仙之道 第十章 链灵境 · 构筑灵链之道</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="第十章链灵境--构筑灵链之道">第十章：链灵境 · 构筑灵链之道</h2>
<blockquote>
<p><em>“灵链相接如脉络，错一节则断万法；唯指向明晰、层次分明者，方可汇聚长流。”</em></p>
</blockquote>
<p>顾行云接下了云隐派的一道秘术任务：<strong>重塑断裂的灵气传输通道</strong>。此通道呈现“链式结构”，每一灵节点连接前后，疏通即通达，紊乱则全线崩塌。</p>
<p>他意识到，这正是典型的数据结构——<strong>链表（Linked List）</strong>。</p>
<h3 id="一术式构型节点即灵阶">一、术式构型：节点即灵阶</h3>
<p>他首先构建基础灵节结构：</p>
<pre><code class="language-rust">use std::boxed::Box;

enum List {
    Node(i32, Box&lt;List&gt;),
    Nil,
}
</code></pre>
<p>解析：</p>
<ul>
<li>
<p><code>Node(i32, Box&lt;List&gt;)</code>：存储灵气数值与“下一节点”的链接；</p>
</li>
<li>
<p><code>Nil</code>：链尾终止之符，相当于“空灵”。</p>
</li>
</ul>
<blockquote>
<p>“为何要用 <code>Box</code>？”——他悟出：因链表为<strong>递归结构</strong>，需堆上分配，<code>Box</code> 使其大小在编译期可定！</p>
</blockquote>
<h3 id="二创建灵链施术连接节点">二、创建灵链：施术连接节点</h3>
<pre><code class="language-rust">use List::{Node, Nil};

let chain = Node(10,
    Box::new(Node(20,
        Box::new(Node(30, Box::new(Nil)))
    ))
);
</code></pre>
<p>这便构造出一个三节灵链：10 → 20 → 30 → 终止</p>
<h3 id="三遍历术逐步引灵">三、遍历术：逐步引灵</h3>
<pre><code class="language-rust">fn traverse(list: &amp;List) {
    match list {
        Node(val, next) =&gt; {
            println!("灵节：{}", val);
            traverse(next);
        }
        Nil =&gt; println!("灵链终止 🧘"),
    }
}
</code></pre>
<p>他以递归调用唤醒每一节点，确保灵气贯通。掌中法印如链，光流不绝。</p>
<h3 id="四进阶挑战灵链增删变动需可变性">四、进阶挑战：灵链增删变动（需可变性）</h3>
<p>他随后挑战“动态修改灵链”——这要求他引入更高级的控制工具如：</p>
<ul>
<li>
<p><code>Rc&lt;T&gt;</code>：共享所有权；</p>
</li>
<li>
<p><code>RefCell&lt;T&gt;</code>：运行时可变借用。</p>
</li>
</ul>
<p>示例：</p>
<pre><code class="language-rust">use std::rc::Rc;
use std::cell::RefCell;

enum Chain {
    Node(i32, Rc&lt;RefCell&lt;Chain&gt;&gt;),
    Nil,
}
</code></pre>
<p>这样他即可在灵链中共享控制节点，并在运行中“热更新”其流向。</p>
<blockquote>
<p>“灵链虽深，控制权不可分散；结构虽绕，思路须直。”</p>
</blockquote>
<h3 id="心法口诀--链灵之理">心法口诀 · 链灵之理</h3>
<blockquote>
<p><em>节节可动，指指不乱；知其前后，控其流向；不必强索所有权，只需掌控传承。</em></p>
</blockquote>
<hr>
<h2 id="️-上一章下一章️">⬅️ <a href="https://www.cnblogs.com/niceWk/p/18976128" target="_blank">上一章</a>　　　　　　　　　　　　<a href="https://www.cnblogs.com/niceWk/p/18978194" target="_blank">下一章➡️</a></h2>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.5409722222222222" data-date-updated="2025-07-11 08:44">2025-07-10 19:45</span>&nbsp;
<a href="https://www.cnblogs.com/niceWk">NiceWk</a>&nbsp;
阅读(<span id="post_view_count">80</span>)&nbsp;
评论(<span id="post_comment_count">1</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18977621);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18977621', targetLink: 'https://www.cnblogs.com/niceWk/p/18977621', title: 'Rust 修仙之道 第十章 链灵境 &amp;#183; 构筑灵链之道' })">举报</a>
</div>
        