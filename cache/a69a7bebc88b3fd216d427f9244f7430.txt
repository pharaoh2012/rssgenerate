
        <h2>
            <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/graphics/p/18962220" title="发布于 2025-07-02 19:56">
    <span role="heading" aria-level="2">JavaScript Quine揭秘：如何让程序输出自身源代码？</span>
    

</a>

        </h2>
        <div class="postbody">
            <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="介绍">介绍</h2>
<p>如何写一段javascript程序，输出自身的源代码？这个问题非常有意思，大家不妨先尝试一下，反正在尝试了半个小时之后，我果断放弃了。</p>
<p>这种能输出自身的程序在英文里被称为<code>quine</code>。</p>
<h2 id="准备知识">准备知识</h2>
<p>其实要实现这样一段程序，至少要掌握javascript中两个重要的知识点：</p>
<ol>
<li>IIFE</li>
<li>toString()方法</li>
</ol>
<p>关于IIFE，之前的文章已经做过详细的介绍，这里就不再赘述了，感兴趣的同学可以先去看一下。</p>
<p><a href="https://www.cnblogs.com/graphics/p/18959048" target="_blank">JavaScript IIFE揭秘</a></p>
<p>关于<code>toString()</code>方法，相信大家也不陌生，但是你可知道对于一个函数来说，调用<code>toString()</code>方法意味着什么？</p>
<p>没错，调用一个函数的<code>toString()</code>方法会返回这个函数的源代码。</p>
<pre><code class="language-javascript">function foo() {
  console.log('hello world')
}

console.log(foo.toString()) // 输出foo的源代码
</code></pre>
<h2 id="第一个例子">第一个例子</h2>
<p>有了上面的知识储备，我们可以动手写一下了，首先写一个函数<code>foo</code>，在函数体内调用<code>console.log(foo.toString())</code>输出函数的源代码。</p>
<pre><code class="language-javascript">function foo() {
  console.log(foo.toString())
}
</code></pre>
<p>但是这只是函数定义，并未执行，所以需要在函数定义之后调用它。</p>
<pre><code class="language-javascript">function foo() {
  console.log(foo.toString())
}
foo() // 调用函数，输出源代码
</code></pre>
<p>运行上面的代码，输出的结果如下所示，可以看到最后的调用语句<code>foo()</code>并没有打印出来。</p>
<pre><code class="language-javascript">function foo() {
  console.log(foo.toString())
}
</code></pre>
<p>这不符合我们的要求，所以考虑去掉调用语句，将函数改为IIFE的形式</p>
<pre><code class="language-javascript">(function foo() {
  console.log(foo.toString())
})()
</code></pre>
<p>运行上面的代码，输出的结果如下，最外层的<code>()</code>和末尾调用函数的<code>()</code>没有打印出来，这也不符合我们的要求。</p>
<pre><code class="language-javascript">function foo() {
  console.log(foo.toString())
}
</code></pre>
<p>改造一下内部的<code>console.log</code>，将两组括弧也输出来。</p>
<pre><code class="language-javascript">(function foo() {
  console.log('(' + foo.toString() + ')()')
})()
</code></pre>
<p>这回结果终于正确了，我们进一步改造，使用<code>+</code>拼接字符串时，js会自动将<code>+</code>另一侧的操作数转换为字符串，所以我们可以把<code>toString()</code>省略掉。</p>
<pre><code class="language-javascript">(function foo() {
  console.log('(' + foo + ')()')
})()
</code></pre>
<p>再增加点神秘感，将foo换成<code>$</code></p>
<pre><code class="language-javascript">(function $() {
  console.log('(' + $ + ')()')
})()
</code></pre>
<p>运行结果如下：</p>
<pre><code class="language-javascript">(function $() {
  console.log('(' + $ + ')()')
})()
</code></pre>
<p>这就是一个简单的javascript quine了。</p>
<h2 id="最短的例子">最短的例子</h2>
<p>在上面的例子中，为了便于观察结果，使用了<code>console.log</code>输出了源代码，实际上我们可以直接返回源代码，这样就可以省略掉<code>console.log</code>语句。</p>
<pre><code class="language-javascript">(function $() {
  return '(' + $ + ')()'
})()
</code></pre>
<p>根据前面两篇文章学到的<code>IIFE</code>的知识，我们使用IIFE的箭头函数形式。下面这段代码定义一个箭头函数并将其赋值给变量<code>$</code>，然后立即执行这个函数。</p>
<pre><code class="language-javascript">($ = () =&gt; {
  return '(' + $ + ')()'
})()
</code></pre>
<p>但是它的执行结果中没有包含<code>$</code>，我们加上<code>$</code></p>
<pre><code class="language-javascript">($ = () =&gt; {
  return '($ =' + $ + ')()'
})()
</code></pre>
<p>根据箭头函数的规则，如果返回值只有一行，那么可以省略掉大括号<code>{}</code>和<code>return</code>关键字，所以我们可以进一步简化为</p>
<pre><code class="language-javascript">($ = () =&gt; '($ =' + $ + ')()')()
</code></pre>
<p>再将字符串拼接操作改为ES6的模板字符串形式：</p>
<pre><code class="language-javascript">($ = () =&gt; `($ = ${$})()`)()
</code></pre>
<p>最后去掉空格，得到如下代码。</p>
<pre><code class="language-javascript">($=()=&gt;`($=${$})()`)()
</code></pre>
<p>这就是史上最短的<code>javascript quine</code>了。需要注意的是，上面的代码需要在浏览器的控制台中运行，如果在IDE中运行，代码格式化工具可能会将代码格式化，导致结果不正确。</p>
<p>你还能想到其他办法吗？欢迎在评论区分享你的想法。</p>

</div>
<div id="MySignature" role="contentinfo">
    <div id="ZddSignature">
<div>作者：<a href="http://www.cnblogs.com/graphics/" target="_blank">zdd</a></div>
<div>出处：<a href="http://www.cnblogs.com/graphics/" target="_blank">http://www.cnblogs.com/graphics/</a>
<div>
<div>本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文连接，否则保留追究法律责任的权利.</div>
</div>
</div>
</div>
</div>
<div class="clear"></div>

        </div>
        <p class="postfoot">
            posted on 
<span id="post-date" data-last-update-days="0.001388888888888889" data-date-updated="2025-07-02 19:58">2025-07-02 19:56</span>&nbsp;
<a href="https://www.cnblogs.com/graphics">前端风云志</a>&nbsp;
阅读(<span id="post_view_count">24</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18962220);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18962220', targetLink: 'https://www.cnblogs.com/graphics/p/18962220', title: 'JavaScript Quine揭秘：如何让程序输出自身源代码？' })">举报</a>

        </p>
    