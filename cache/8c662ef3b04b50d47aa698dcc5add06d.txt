
		<h1 class="postTitle">
			<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/VincentLee/p/18646799" title="发布于 2025-01-02 09:32">
    <span role="heading" aria-level="2">SINE：上下文示例驱动，打造真正的通用分割模型 | NeurIPS'24</span>
    

</a>

		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<blockquote>
<p>来源：晓飞的算法工程笔记 公众号，转载请注明出处</p>
</blockquote>
<p><strong>论文: A Simple Image Segmentation Framework via In-Context Examples</strong></p>
<p><img src="https://i-blog.csdnimg.cn/img_convert/4c23adfd4d3a01b403e43c89c7a8974d.png" alt="" loading="lazy"></p>
<ul>
<li><strong>论文地址：<a href="https://arxiv.org/abs/2410.04842" target="_blank" rel="noopener nofollow">https://arxiv.org/abs/2410.04842</a></strong></li>
<li><strong>论文代码：<a href="https://github.com/aim-uofa/SINE" target="_blank" rel="noopener nofollow">https://github.com/aim-uofa/SINE</a></strong></li>
</ul>
<h1 id="创新点">创新点</h1>
<hr>
<ul>
<li>探索了通用的分割模型，发现现有方法在上下文分割中面临任务模糊性的问题，因为并非所有的上下文示例都能准确传达任务信息。</li>
<li>提出了一个利用上下文示例的简单图像分割框架<code>SINE</code>（<code>Segmentation framework via IN-context Examples</code>），利用了一个<code>Transformer</code>编码-解码结构，其中编码器提供高质量的图像表示，解码器则被设计为生成多个任务特定的输出掩码，以有效消除任务模糊性。</li>
<li><code>SINE</code>引入了一个上下文交互模块，以补充上下文信息，并在目标图像与上下文示例之间产生关联，以及一个匹配<code>Transformer</code>，使用固定匹配和匈牙利算法消除不同任务之间的差异。</li>
<li>完善了当前的上下文图像分割评估系统，实验结果表明，<code>SINE</code>可以处理广泛的分割任务，包括少量样本的语义分割、少量样本的实例分割和视频目标分割。</li>
</ul>
<h1 id="内容概述">内容概述</h1>
<hr>
<p>图像分割涉及在像素级别上定位和组织概念，比如语义分割、实例分割、全景分割、前景分割和交互分割。然而，现有的大多数分割方法都是针对特定任务量身定做的，无法应用于其他任务。</p>
<p><img src="https://i-blog.csdnimg.cn/img_convert/8ae8fb275c94307cbbdd1a22a7e77d87.png" alt="" loading="lazy"></p>
<p>最近一些工作探索了通用分割模型，通过上下文学习解决多样且无限的分割任务。上下文分割模型需要理解上下文示例传达的任务和内容信息，并在目标图像上分割相关概念，但并不是所有的上下文示例都能准确传达任务信息。例如当提供一个特定个体的照片，是仅限于个体本身、涵盖所有人的实例分割，还是集中于语义分割？模糊的上下文示例可能使传统的上下文分割模型难以清晰地定义不同任务之间的边界，从而导致不期望的输出。</p>
<p>为了解决这个问题，论文提出了基于上下文示例的简单图像分割框架<code>SINE</code>（<code>Segmentation framework via IN-context Examples</code>）。受到<code>SAM</code>模型的启发，<code>SINE</code>预测针对不同复杂度任务定制的多个输出掩码。这些任务包括相同物体、实例到整体语义概念。<code>SINE</code>统一了现有的各种粒度的分割任务，旨在实现更广泛的任务泛化。</p>
<p>与<code>SegGPT</code>相比，<code>SINE</code>能够在可训练参数更少的情况下有效地解决上下文分割中的任务模糊性问题，而<code>SegGPT</code>仅输出语义分割结果。此外，论文进一步将少样本实例分割引入当前的评估系统，以便全面评估这些模型。</p>
<h1 id="sine"><code>SINE</code></h1>
<hr>
<p><img src="https://i-blog.csdnimg.cn/img_convert/9414fd3c5c1c18905c970f1092dc7e40.png" alt="" loading="lazy"></p>
<p><code>SINE</code>是一个基于查询的分割模型，遵循<code>DETR</code>和<code>Mask2Former</code>的设计。使用相同对象（<code>ID</code>）查询 <span class="math inline">\(\textbf{q}_{id}\)</span> 来识别和定位目标图像中与参考图像中具有相同对应关系的对象，使用可学习的实例查询 <span class="math inline">\(\textbf{q}_{ins} \in \mathbb{R}^{S \times C}\)</span> 来识别和定位目标图像中与参考图像具有相同语义标签的对象。</p>
<p><code>SINE</code>基于经典的<code>Transformer</code>结构，引入了一些针对上下文分割任务的有效设计，包括一个冻结的预训练图像编码器、一个上下文交互模块和一个轻量级匹配<code>Transformer</code> (<code>M-Former</code>) 解码器。</p>
<h2 id="上下文交互">上下文交互</h2>
<p><img src="https://i-blog.csdnimg.cn/img_convert/ba54e5ff2353feac3fff5636eda2b868.png" alt="" loading="lazy"></p>
<p>上下文交互的目的是补充上下文信息，并在参考图像特征和目标图像特征之间产生关联。</p>
<ul>
<li>
<h3 id="掩码池化">掩码池化</h3>
</li>
</ul>
<p>为每个掩码分配不同的<code>ID</code>标签，将参考掩码 <span class="math inline">\(\textbf{m}_r\)</span> 转换为<code>ID</code>掩码 <span class="math inline">\(\textbf{m}_{id} \in \mathbb{R}^{N \times H \times W}\)</span> ，通过将具有相同类别标签的掩码合并来得到语义掩码 <span class="math inline">\(\textbf{m}_{sem} \in \mathbb{R}^{M \times H \times W}\)</span> ，其中 <span class="math inline">\(N\)</span> 和 <span class="math inline">\(M\)</span> 分别是<code>ID</code>掩码和语义掩码的数量。</p>
<p>然后，使用这些掩码对参考特征 <span class="math inline">\(\textbf{F}_r\)</span> 进行池化，获得提<code>ID</code>标记 <span class="math inline">\(\textbf{t}_{id} \in \mathbb{R}^{N \times C}\)</span> 和语义标记 <span class="math inline">\(\textbf{t}_{sem} \in \mathbb{R}^{M \times C}\)</span> 。</p>
<ul>
<li>
<h3 id="上下文融合模块">上下文融合模块</h3>
</li>
</ul>
<p>上下文融合模块该模块是一个<code>Transformer</code>块，包括自注意力机制、交叉注意力机制和前馈网络，实现参考特征和目标特征之间的上下文关联：</p>
<p></p><div class="math display">\[\begin{equation}
\begin{split}
\left&lt;\textbf{q}_{id}, \textbf{p}_{sem}, \textbf{F}_t^{'}\right&gt; = InContextFusion\left(\textbf{t}_{id}, \textbf{t}_{sem}, \textbf{F}_{t} ;\theta \right),
\end{split}
\end{equation}
\]</div><p></p><p>这些标记 ( <span class="math inline">\(\textbf{t}_{id}\)</span> 和 <span class="math inline">\(\textbf{t}_{sem}\)</span> ) 和目标特征 ( <span class="math inline">\(\textbf{F}_{t}\)</span> ) 通过这个共享模块进行融合，在交叉注意力中它们彼此作为键和值，从而可以获得增强后的目标特征 <span class="math inline">\(\textbf{F}_t^{'}\)</span> 、<code>ID</code>查询 <span class="math inline">\(\textbf{q}_{id}\)</span> 和语义原型 <span class="math inline">\(\textbf{p}_{sem}\)</span> 。</p>
<h2 id="匹配transformer">匹配<code>Transformer</code></h2>
<p>为了有效地进行上下文分割并消除任务模糊性，<code>M-Former</code>实现了一个双路径的<code>Transformer</code>解码器，共享自注意力层。一路径用于与查询（ <span class="math inline">\(\textbf{q}_{id}\)</span> 和 <span class="math inline">\(\textbf{q}_{ins}\)</span> ）交互，提取与目标图像中的上下文示例相关的特征。第二路径用于增强语义原型 <span class="math inline">\(\textbf{p}_{sem}\)</span> 以实现更准确的匹配。这两条路径共享自注意力层，以便将语义从 <span class="math inline">\(\textbf{p}_{sem}\)</span> 分配给 <span class="math inline">\(\textbf{q}_{ins}\)</span> 。</p>
<p><code>M-Former</code>共有 N 个块，整体的过程如下：</p>
<p></p><div class="math display">\[\begin{equation}
\begin{split}
\left&lt;\textbf{q}_{id}^l, \textbf{q}_{ins}^l, \textbf{p}_{sem}^l\right&gt; = MFormer_l\left(\textbf{q}_{id}^{l-1}, \textbf{q}_{ins}^{l-1}, \textbf{p}_{sem}^{l-1} ; \theta^l, \textbf{F}_t^{'} \right),
\end{split}
\end{equation}
\]</div><p></p><p>对于实例分割，使用更新后的语义原型 <span class="math inline">\(\textbf{p}_{sem}\)</span> 作为分类器，并让 <span class="math inline">\(\hat{\textbf{y}}_{ins}=\{\hat{y}_{ins}^i\}_{i=1}^S\)</span> 表示 <span class="math inline">\(S\)</span> 个实例预测的集合。使用匈牙利损失来学习<code>SINE</code>，通过计算预测 <span class="math inline">\(\hat{y}_{ins}^i\)</span> 和<code>GT</code> <span class="math inline">\(y^j\)</span> 之间的分配成本以解决匹配问题，即 <span class="math inline">\(-p_i(c^j)+\mathcal{L}_\text{mask}(\hat{m}_{ins}^i,m^j)\)</span> ，其中 <span class="math inline">\((c^j, m^j)\)</span> 是<code>GT</code>对象的类别和掩码， <span class="math inline">\(c^j\)</span> 可能为 <span class="math inline">\(\varnothing\)</span> 。 <span class="math inline">\(p_i(c^j)\)</span> 是第 <span class="math inline">\(i\)</span> 个实例查询对应类别 <span class="math inline">\(c^j\)</span> 的概率， <span class="math inline">\(\hat{m}_{ins}^i\)</span> 表示其预测的掩码。 <span class="math inline">\(\mathcal{L}_\text{mask}\)</span> 是一种二元掩码损失和<code>Dice</code>损失：</p>
<p></p><div class="math display">\[\begin{equation}
\begin{split}
\mathcal{L}_{\text{Hungarian}}(\hat{\textbf{y}}_{ins}, \textbf{y}) = \sum\nolimits_{j=1}^S \left[-\log p_{\sigma(j)}(c^j)
+ \mathbb{1}_{c^j\neq\varnothing} \mathcal{L}_{\text{mask}}(\hat{m}^{\sigma(j)}_{ins},m^j) \right],
\end{split}
\end{equation}
\]</div><p></p><p>其中 <span class="math inline">\(\sigma(j)\)</span> 表示二分匹配的结果索引。</p>
<p>为了赋予<code>SINE</code>预测同一对象的能力，使用图像中同一实例的不同裁剪视图作为参考-目标图像对。设 <span class="math inline">\(\hat{\textbf{y}}_{id}=\{\hat{y}_{id}^i\}_{i=1}^N\)</span> 表示 <span class="math inline">\(N\)</span> 个<code>ID</code>预测的集合。</p>
<p>由于参考<code>ID</code>和目标<code>ID</code>之间的关系是固定的且可以准确确定，可以在预测和<code>GT</code>之间执行固定匹配，损失可以写为：</p>
<p></p><div class="math display">\[\begin{equation}
\begin{split}
\mathcal{L}_{\text{ID}}(\hat{\textbf{y}}_{id}, \textbf{y}) = \sum\nolimits_{i=1}^N \left[-\log p_i(c^i)
+ \mathbb{1}_{c^i\neq\varnothing} \mathcal{L}_{\text{mask}}(\hat{m}^i_{id},m^i) \right],
\end{split}
\end{equation}
\]</div><p></p><p>其中 <span class="math inline">\((c^i, m^i)\)</span> 是<code>GT</code>的类别和掩码， <span class="math inline">\(c^i \in \{1, \varnothing\}\)</span> ， <span class="math inline">\(c^i=1\)</span> 表示一个对象同时出现在参考图像和目标图像中。总损失为 <span class="math inline">\(\mathcal{L}=\mathcal{L}_{\text{Hungarian}}+\mathcal{L}_{\text{ID}}\)</span> 。</p>
<p>一旦训练完成，<code>SINE</code>的全部能力在推理过程中得以释放，能够解决上下文示例中的模糊性并为不同的分割任务输出预测。</p>
<h1 id="主要实验">主要实验</h1>
<hr>
<p><img src="https://i-blog.csdnimg.cn/img_convert/884db99baf3c2f1da623ed70828a8810.png" alt="" loading="lazy"></p>
<p><img src="https://i-blog.csdnimg.cn/img_convert/3f4ace27c912d57609a8d1aceb317ce9.png" alt="" loading="lazy"></p>
<p> <br>
 <br>
 </p>
<blockquote>
<p>如果本文对你有帮助，麻烦点个赞或在看呗～<br>
更多内容请关注 微信公众号【晓飞的算法工程笔记】</p>
</blockquote>
<p><img src="https://i-blog.csdnimg.cn/img_convert/9c0cf685ed20b05b4802fc70cddeebef.webp?x-oss-process=image/format,png" alt="work-life balance." loading="lazy"></p>

</div>
<div class="clear"></div>

		</div>
		<div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.19964717289467593" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-02 09:33">2025-01-02 09:32</span>&nbsp;
<a href="https://www.cnblogs.com/VincentLee">晓飞的算法工程笔记</a>&nbsp;
阅读(<span id="post_view_count">13</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18646799" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18646799);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18646799', targetLink: 'https://www.cnblogs.com/VincentLee/p/18646799', title: 'SINE：上下文示例驱动，打造真正的通用分割模型 | NeurIPS&amp;#39;24' })">举报</a>
</div>
	