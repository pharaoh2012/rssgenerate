
	<div class="postTitle">
		<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/sapSB/p/18932282" title="发布于 2025-06-17 09:15">
    <span role="heading" aria-level="2">用配置表给WEB DYNPRO做配置报表（限十个查询条件）</span>
    

</a>

	</div>
	<div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>因为用户不用GUI客户端，不能用SQVI和query，有时候需要查询某些关联表的时候就有点麻烦。</p>
<p>所以就想着做一个可以配置的报表，把查询字段和结果字段已经关联条件全部配置起来，这样用户要是突发奇想要查点东西，只要简单配置下就可以了。</p>
<p>1，新建配置表：可根据用户配置对应的组件（用户，组件，组件描述，查询from表和关联关系配置）</p>
<p><img src="https://img2024.cnblogs.com/blog/514105/202506/514105-20250617085118036-1278861764.png" alt="" loading="lazy"></p>
<p>&nbsp;2，组件配置表：根据组件，查询/结果条件，字段，字段类型，描述，表字段，查询的表，位置（可以根据S/R区分查询条件和结果字段，根据字段类型动态创建查询和结果结构和表，根据表字段，动态构建查询结果字段）</p>
<p><img src="https://img2024.cnblogs.com/blog/514105/202506/514105-20250617085214079-1585174791.png" alt="" loading="lazy"></p>
<p>&nbsp;两个配置表可以动态分配程序到用户，动态构建查询和结果，动态展示</p>
<p>&nbsp;</p>
<p>3，新建WEB DYNPRO程序：ZCRM_DYNAMIC_REPORT</p>
<p>组件里添加ALV和SELECTION的组件</p>
<p><img src="https://img2024.cnblogs.com/blog/514105/202506/514105-20250617084806694-833248089.png" alt="" loading="lazy"></p>
<p>&nbsp;4，组件控制器Component Controller中做动态ALV初始化(也可以在用户选择下拉报表的时候初始化)</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">METHOD</span><span style="color: rgba(0, 0, 0, 1)"> wddoinit .
  </span><span style="color: rgba(0, 0, 255, 1)">DATA</span> lo_cmp_usage <span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">REF</span> <span style="color: rgba(0, 0, 255, 1)">TO</span><span style="color: rgba(0, 0, 0, 1)"> if_wd_component_usage.
  lo_cmp_usage </span>=   wd_this-&gt;<span style="color: rgba(0, 0, 0, 1)">wd_cpuse_dynmaic_alv( ).
  </span><span style="color: rgba(0, 0, 255, 1)">IF</span> lo_cmp_usage-&gt;has_active_component( ) <span style="color: rgba(0, 0, 255, 1)">IS</span> <span style="color: rgba(0, 0, 255, 1)">INITIAL</span><span style="color: rgba(0, 0, 0, 1)">.
    lo_cmp_usage</span>-&gt;<span style="color: rgba(0, 0, 0, 1)">create_component( ).
  </span><span style="color: rgba(0, 0, 255, 1)">ENDIF</span><span style="color: rgba(0, 0, 0, 1)">.
</span><span style="color: rgba(0, 0, 255, 1)">ENDMETHOD</span>.</pre>
</div>
<p>3，1 在MAIN视图中，我们新建一个node节点，做拉下用，下拉列表里展示当前登录用户可以选择的报表</p>
<p>&nbsp; &nbsp; 参照上面的配置表1就可以了</p>
<p><img src="https://img2024.cnblogs.com/blog/514105/202506/514105-20250617085853946-1745323769.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>&nbsp; &nbsp; &nbsp; 2添加一个查询 ViewContainerUIElement （SELECT）</p>
<p>&nbsp; &nbsp; &nbsp; 3添加一个结果展示的&nbsp;ViewContainerUIElement&nbsp; （ALV）</p>
<p>4，init中初始化拉下程序列表（init_drop 根据用户取配置表报表）</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">METHOD</span><span style="color: rgba(0, 0, 0, 1)"> wddoinit .
  init_drop( ).
  init_select( ).
</span><span style="color: rgba(0, 0, 255, 1)">ENDMETHOD</span>.</pre>
</div>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">METHOD</span><span style="color: rgba(0, 0, 0, 1)"> init_drop .
  </span><span style="color: rgba(0, 0, 255, 1)">DATA</span>: lt_value_set <span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">TABLE</span> <span style="color: rgba(0, 0, 255, 1)">OF</span><span style="color: rgba(0, 0, 0, 1)"> wdy_key_value,
        ls_value_set </span><span style="color: rgba(0, 0, 255, 1)">TYPE</span><span style="color: rgba(0, 0, 0, 1)"> wdy_key_value.
  </span><span style="color: rgba(0, 0, 255, 1)">DATA</span>:lr_node_info <span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">REF</span> <span style="color: rgba(0, 0, 255, 1)">TO</span><span style="color: rgba(0, 0, 0, 1)"> if_wd_context_node_info.

  lr_node_info </span>= wd_context-&gt;<span style="color: rgba(0, 0, 0, 1)">get_node_info( ).
  lr_node_info </span>= lr_node_info-&gt;<span style="color: rgba(0, 0, 0, 1)">get_child_node( `ZCRMT0209` ).

  </span><span style="color: rgba(0, 0, 255, 1)">SELECT</span> component_name AS key text AS value <span style="color: rgba(0, 0, 255, 1)">INTO</span> <span style="color: rgba(0, 0, 255, 1)">TABLE</span> lt_value_set <span style="color: rgba(0, 0, 255, 1)">FROM</span> zcrmt0209 <span style="color: rgba(0, 0, 255, 1)">WHERE</span> uname = sy-<span style="color: rgba(0, 0, 0, 1)">uname.

  lr_node_info</span>-&gt;<span style="color: rgba(0, 0, 0, 1)">set_attribute_value_set(
          name </span>=<span style="color: rgba(0, 0, 0, 1)"> `COMPONENT_NAME`
          value_set </span>=<span style="color: rgba(0, 0, 0, 1)"> lt_value_set ).
</span><span style="color: rgba(0, 0, 255, 1)">ENDMETHOD</span>.</pre>
</div>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">METHOD</span><span style="color: rgba(0, 0, 0, 1)"> init_select .
</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)">*初始化select option组件</span>
  <span style="color: rgba(0, 0, 255, 1)">DATA</span><span style="color: rgba(0, 0, 0, 1)">:
    lr_componentcontroller </span><span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">REF</span> <span style="color: rgba(0, 0, 255, 1)">TO</span><span style="color: rgba(0, 0, 0, 1)"> ig_componentcontroller,
    l_ref_cmp_usage        </span><span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">REF</span> <span style="color: rgba(0, 0, 255, 1)">TO</span><span style="color: rgba(0, 0, 0, 1)"> if_wd_component_usage.
  </span><span style="color: rgba(0, 0, 255, 1)">DATA</span><span style="color: rgba(0, 0, 0, 1)">:
    display_btn_cancel  </span><span style="color: rgba(0, 0, 255, 1)">TYPE</span><span style="color: rgba(0, 0, 0, 1)"> abap_bool,
    display_btn_check   </span><span style="color: rgba(0, 0, 255, 1)">TYPE</span><span style="color: rgba(0, 0, 0, 1)"> abap_bool,
    display_btn_reset   </span><span style="color: rgba(0, 0, 255, 1)">TYPE</span><span style="color: rgba(0, 0, 0, 1)"> abap_bool,
    display_btn_execute </span><span style="color: rgba(0, 0, 255, 1)">TYPE</span><span style="color: rgba(0, 0, 0, 1)"> abap_bool.


</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)"> create the used component</span>
  l_ref_cmp_usage = wd_this-&gt;<span style="color: rgba(0, 0, 0, 1)">wd_cpuse_selection( ).
  </span><span style="color: rgba(0, 0, 255, 1)">IF</span> l_ref_cmp_usage-&gt;has_active_component( ) <span style="color: rgba(0, 0, 255, 1)">IS</span> <span style="color: rgba(0, 0, 255, 1)">INITIAL</span><span style="color: rgba(0, 0, 0, 1)">.
    l_ref_cmp_usage</span>-&gt;<span style="color: rgba(0, 0, 0, 1)">create_component( ).
  </span><span style="color: rgba(0, 0, 255, 1)">ENDIF</span><span style="color: rgba(0, 0, 0, 1)">.


</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)"> get a pointer to the interface controller of the select options</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">component</span>
  wd_this-&gt;m_wd_select_options = wd_this-&gt;<span style="color: rgba(0, 0, 0, 1)">wd_cpifc_selection( ).

</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)"> init the select screen</span>
  wd_this-&gt;m_handler =<span style="color: rgba(0, 0, 0, 1)">
  wd_this</span>-&gt;m_wd_select_options-&gt;<span style="color: rgba(0, 0, 0, 1)">init_selection_screen( ).

</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)"> adjust the global options</span>
  wd_this-&gt;m_handler-&gt;<span style="color: rgba(0, 0, 0, 1)">set_global_options(
      i_display_btn_cancel  </span>=<span style="color: rgba(0, 0, 0, 1)"> display_btn_cancel
      i_display_btn_check   </span>=<span style="color: rgba(0, 0, 0, 1)"> display_btn_check
      i_display_btn_reset   </span>=<span style="color: rgba(0, 0, 0, 1)"> display_btn_reset
      i_display_btn_execute </span>=<span style="color: rgba(0, 0, 0, 1)"> display_btn_execute ).


</span><span style="color: rgba(0, 0, 255, 1)">ENDMETHOD</span>.</pre>
</div>
<p>5，根据下拉列表初始化选择条件和alv</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">METHOD</span><span style="color: rgba(0, 0, 0, 1)"> onactionselect_comp .
  </span><span style="color: rgba(0, 0, 255, 1)">DATA</span> lo_nd_zcrmt0209 <span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">REF</span> <span style="color: rgba(0, 0, 255, 1)">TO</span><span style="color: rgba(0, 0, 0, 1)"> if_wd_context_node.
  </span><span style="color: rgba(0, 0, 255, 1)">DATA</span> lo_el_zcrmt0209 <span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">REF</span> <span style="color: rgba(0, 0, 255, 1)">TO</span><span style="color: rgba(0, 0, 0, 1)"> if_wd_context_element.
  </span><span style="color: rgba(0, 0, 255, 1)">DATA</span> ls_zcrmt0209 <span style="color: rgba(0, 0, 255, 1)">TYPE</span> wd_this-&gt;<span style="color: rgba(0, 0, 0, 1)">element_zcrmt0209.

</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)">   navigate from &lt;CONTEXT&gt; to &lt;ZCRMT0209&gt; via lead selection</span>
  lo_nd_zcrmt0209 = wd_context-&gt;get_child_node( name = wd_this-&gt;<span style="color: rgba(0, 0, 0, 1)">wdctx_zcrmt0209 ).
</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)">   get element via lead selection</span>
  lo_el_zcrmt0209 = lo_nd_zcrmt0209-&gt;<span style="color: rgba(0, 0, 0, 1)">get_element( ).
</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)">   get all declared attributes</span>
  lo_el_zcrmt0209-&gt;<span style="color: rgba(0, 0, 0, 1)">get_static_attributes(
    </span><span style="color: rgba(0, 0, 255, 1)">IMPORTING</span><span style="color: rgba(0, 0, 0, 1)">
      static_attributes </span>=<span style="color: rgba(0, 0, 0, 1)"> ls_zcrmt0209 ).

  </span><span style="color: rgba(0, 0, 255, 1)">CHECK</span> ls_zcrmt0209-component_name <span style="color: rgba(0, 0, 255, 1)">IS</span> <span style="color: rgba(0, 0, 255, 1)">NOT</span> <span style="color: rgba(0, 0, 255, 1)">INITIAL</span><span style="color: rgba(0, 0, 0, 1)">.
</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)">*初始化select和alv</span>
  add_select( ls_zcrmt0209-<span style="color: rgba(0, 0, 0, 1)">component_name ).
  init_alv( ls_zcrmt0209</span>-<span style="color: rgba(0, 0, 0, 1)">component_name ).

</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)">*控制查询清空按钮显示</span>
  <span style="color: rgba(0, 0, 255, 1)">DATA</span> lo_el_context <span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">REF</span> <span style="color: rgba(0, 0, 255, 1)">TO</span><span style="color: rgba(0, 0, 0, 1)"> if_wd_context_element.
  </span><span style="color: rgba(0, 0, 255, 1)">DATA</span> ls_context <span style="color: rgba(0, 0, 255, 1)">TYPE</span> wd_this-&gt;<span style="color: rgba(0, 0, 0, 1)">element_context.
  </span><span style="color: rgba(0, 0, 255, 1)">DATA</span> lv_bt_vis <span style="color: rgba(0, 0, 255, 1)">TYPE</span> wd_this-&gt;element_context-<span style="color: rgba(0, 0, 0, 1)">bt_vis.
</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)">   get element via lead selection</span>
  lo_el_context = wd_context-&gt;<span style="color: rgba(0, 0, 0, 1)">get_element( ).
</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)">   @TODO fill attribute</span>
  lv_bt_vis = <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">X</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">.
</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)">   set single attribute</span>
  lo_el_context-&gt;<span style="color: rgba(0, 0, 0, 1)">set_attribute(
    name </span>=<span style="color: rgba(0, 0, 0, 1)">  `BT_VIS`
    value </span>=<span style="color: rgba(0, 0, 0, 1)"> lv_bt_vis ).
</span><span style="color: rgba(0, 0, 255, 1)">ENDMETHOD</span>.</pre>
</div>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">METHOD</span><span style="color: rgba(0, 0, 0, 1)"> add_select .
  </span><span style="color: rgba(0, 0, 255, 1)">DATA</span>:gt_zcrmt0209s <span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">TABLE</span> <span style="color: rgba(0, 0, 255, 1)">OF</span><span style="color: rgba(0, 0, 0, 1)"> zcrmt0209s,
       gw_zcrmt0209s </span><span style="color: rgba(0, 0, 255, 1)">LIKE</span> <span style="color: rgba(0, 0, 255, 1)">LINE</span> <span style="color: rgba(0, 0, 255, 1)">OF</span><span style="color: rgba(0, 0, 0, 1)"> gt_zcrmt0209s.
  </span><span style="color: rgba(0, 0, 255, 1)">DATA</span><span style="color: rgba(0, 0, 0, 1)">:
    lt_range_table </span><span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">REF</span> <span style="color: rgba(0, 0, 255, 1)">TO</span><span style="color: rgba(0, 0, 0, 1)"> data,
    rt_range_table </span><span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">REF</span> <span style="color: rgba(0, 0, 255, 1)">TO</span><span style="color: rgba(0, 0, 0, 1)"> data,
    read_only      </span><span style="color: rgba(0, 0, 255, 1)">TYPE</span><span style="color: rgba(0, 0, 0, 1)"> abap_bool,
    typename       </span><span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)">,
    id             </span><span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)">,
    desc           </span><span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)">.

  wd_this</span>-&gt;m_handler-&gt;<span style="color: rgba(0, 0, 0, 1)">remove_all_sel_screen_items( ).
</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)">*根据选择的组件从配置表中带出查询条件并添加到select option中</span>
  <span style="color: rgba(0, 0, 255, 1)">SELECT</span> * <span style="color: rgba(0, 0, 255, 1)">INTO</span> <span style="color: rgba(0, 0, 255, 1)">TABLE</span> gt_zcrmt0209s <span style="color: rgba(0, 0, 255, 1)">FROM</span> zcrmt0209s <span style="color: rgba(0, 0, 255, 1)">WHERE</span> component_name = component_name <span style="color: rgba(0, 0, 255, 1)">AND</span> zusage = <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">S</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">.

  </span><span style="color: rgba(0, 0, 255, 1)">CHECK</span> gt_zcrmt0209s[] <span style="color: rgba(0, 0, 255, 1)">IS</span> <span style="color: rgba(0, 0, 255, 1)">NOT</span> <span style="color: rgba(0, 0, 255, 1)">INITIAL</span><span style="color: rgba(0, 0, 0, 1)">.


  </span><span style="color: rgba(0, 0, 255, 1)">LOOP</span> <span style="color: rgba(0, 0, 255, 1)">AT</span> gt_zcrmt0209s <span style="color: rgba(0, 0, 255, 1)">INTO</span><span style="color: rgba(0, 0, 0, 1)"> gw_zcrmt0209s.
    typename </span>= gw_zcrmt0209s-<span style="color: rgba(0, 0, 0, 1)">field_type.
    id </span>= gw_zcrmt0209s-<span style="color: rgba(0, 0, 0, 1)">field.
    desc </span>= gw_zcrmt0209s-<span style="color: rgba(0, 0, 0, 1)">text.
</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)"> create a range table that consists of this new data element</span>
    lt_range_table = wd_this-&gt;m_handler-&gt;create_range_table( i_typename =<span style="color: rgba(0, 0, 0, 1)"> typename ).
</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)"> add a new field to the selection</span>
    wd_this-&gt;m_handler-&gt;<span style="color: rgba(0, 0, 0, 1)">add_selection_field(
                            i_id </span>=<span style="color: rgba(0, 0, 0, 1)"> id
                            i_description </span>=<span style="color: rgba(0, 0, 0, 1)"> desc
                            it_result </span>=<span style="color: rgba(0, 0, 0, 1)"> lt_range_table
                            i_read_only </span>=<span style="color: rgba(0, 0, 0, 1)"> read_only ).
  </span><span style="color: rgba(0, 0, 255, 1)">ENDLOOP</span><span style="color: rgba(0, 0, 0, 1)">.
</span><span style="color: rgba(0, 0, 255, 1)">ENDMETHOD</span>.</pre>
</div>
<p>根据配置表初始化alv字段结构并绑定到alv</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">METHOD</span><span style="color: rgba(0, 0, 0, 1)"> init_alv .
  </span><span style="color: rgba(0, 0, 255, 1)">DATA</span>:lt_child_node <span style="color: rgba(0, 0, 255, 1)">TYPE</span><span style="color: rgba(0, 0, 0, 1)"> wdr_context_child_info_map,
       ls_child_node </span><span style="color: rgba(0, 0, 255, 1)">TYPE</span><span style="color: rgba(0, 0, 0, 1)"> wdr_context_child_info.
  </span><span style="color: rgba(0, 0, 255, 1)">DATA</span>:lv_name <span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)">.
  </span><span style="color: rgba(0, 0, 255, 1)">DATA</span>:gt_zcrmt0209s <span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">TABLE</span> <span style="color: rgba(0, 0, 255, 1)">OF</span><span style="color: rgba(0, 0, 0, 1)"> zcrmt0209s,
       gw_zcrmt0209s </span><span style="color: rgba(0, 0, 255, 1)">LIKE</span> <span style="color: rgba(0, 0, 255, 1)">LINE</span> <span style="color: rgba(0, 0, 255, 1)">OF</span><span style="color: rgba(0, 0, 0, 1)"> gt_zcrmt0209s.
  </span><span style="color: rgba(0, 0, 255, 1)">DATA</span>: ls_comp     <span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">LINE</span> <span style="color: rgba(0, 0, 255, 1)">OF</span> cl_abap_structdescr=&gt;<span style="color: rgba(0, 0, 0, 1)">component_table,
        lt_comp     </span><span style="color: rgba(0, 0, 255, 1)">TYPE</span> cl_abap_structdescr=&gt;<span style="color: rgba(0, 0, 0, 1)">component_table,
        ls_fieldcat </span><span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">LINE</span> <span style="color: rgba(0, 0, 255, 1)">OF</span><span style="color: rgba(0, 0, 0, 1)"> lvc_t_fcat,
        struct_type </span><span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">REF</span> <span style="color: rgba(0, 0, 255, 1)">TO</span><span style="color: rgba(0, 0, 0, 1)"> cl_abap_structdescr.


  lt_child_node </span>= wd_context-&gt;get_node_info( )-&gt;<span style="color: rgba(0, 0, 0, 1)">get_child_nodes( ).
</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)">*取配置表的结果R字段，构建动态的节点，节点名就用报表名</span>
  <span style="color: rgba(0, 0, 255, 1)">SELECT</span> * <span style="color: rgba(0, 0, 255, 1)">INTO</span> <span style="color: rgba(0, 0, 255, 1)">TABLE</span> gt_zcrmt0209s <span style="color: rgba(0, 0, 255, 1)">FROM</span> zcrmt0209s <span style="color: rgba(0, 0, 255, 1)">WHERE</span> component_name = component_name <span style="color: rgba(0, 0, 255, 1)">AND</span> zusage = <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">R</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">.


  </span><span style="color: rgba(0, 0, 255, 1)">LOOP</span> <span style="color: rgba(0, 0, 255, 1)">AT</span> gt_zcrmt0209s <span style="color: rgba(0, 0, 255, 1)">INTO</span><span style="color: rgba(0, 0, 0, 1)"> gw_zcrmt0209s.
    ls_comp</span>-name = gw_zcrmt0209s-<span style="color: rgba(0, 0, 0, 1)">field.
    ls_comp</span>-type ?= cl_abap_typedescr=&gt;describe_by_name( gw_zcrmt0209s-<span style="color: rgba(0, 0, 0, 1)">field_type ).
    </span><span style="color: rgba(0, 0, 255, 1)">APPEND</span> ls_comp <span style="color: rgba(0, 0, 255, 1)">TO</span><span style="color: rgba(0, 0, 0, 1)"> lt_comp.
  </span><span style="color: rgba(0, 0, 255, 1)">ENDLOOP</span><span style="color: rgba(0, 0, 0, 1)">.

</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)"> Create structure defined in lt_comp</span>
  struct_type = cl_abap_structdescr=&gt;<span style="color: rgba(0, 0, 0, 1)">create( lt_comp ).
  lv_name </span>=<span style="color: rgba(0, 0, 0, 1)"> component_name.

  </span><span style="color: rgba(0, 0, 255, 1)">READ</span> <span style="color: rgba(0, 0, 255, 1)">TABLE</span> lt_child_node <span style="color: rgba(0, 0, 255, 1)">INTO</span> ls_child_node <span style="color: rgba(0, 0, 255, 1)">WITH</span> KEY name =<span style="color: rgba(0, 0, 0, 1)"> lv_name.
  </span><span style="color: rgba(0, 0, 255, 1)">IF</span> sy-subrc = <span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">.
  </span><span style="color: rgba(0, 0, 255, 1)">ELSE</span><span style="color: rgba(0, 0, 0, 1)">.
</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)"> Append dynamic node with name (  )</span>
    wd_context-&gt;get_node_info( )-&gt;<span style="color: rgba(0, 0, 0, 1)">add_new_child_node(
                            name                </span>=<span style="color: rgba(0, 0, 0, 1)"> lv_name
                            is_mandatory        </span>=<span style="color: rgba(0, 0, 0, 1)"> abap_true
                            is_multiple         </span>=<span style="color: rgba(0, 0, 0, 1)"> abap_true
                            static_element_rtti </span>=<span style="color: rgba(0, 0, 0, 1)"> struct_type
                            is_static           </span>=<span style="color: rgba(0, 0, 0, 1)"> abap_false ).

  </span><span style="color: rgba(0, 0, 255, 1)">ENDIF</span><span style="color: rgba(0, 0, 0, 1)">.

</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)">*Step 4: Assign this context to ALV</span>
  <span style="color: rgba(0, 0, 255, 1)">DATA</span> lo_interfacecontroller <span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">REF</span> <span style="color: rgba(0, 0, 255, 1)">TO</span><span style="color: rgba(0, 0, 0, 1)"> iwci_salv_wd_table .
  lo_interfacecontroller </span>=   wd_this-&gt;<span style="color: rgba(0, 0, 0, 1)">wd_cpifc_dynmaic_alv( ).

  lo_interfacecontroller</span>-&gt;<span style="color: rgba(0, 0, 0, 1)">set_data(
</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)">   only_if_new_descr =                 " wdy_boolean</span>
  r_node_data = wd_context-&gt;get_child_node( lv_name )   <span style="color: rgba(128, 128, 128, 1)">"</span><span style="color: rgba(128, 128, 128, 1)"> ref to if_wd_context_node</span>
<span style="color: rgba(0, 0, 0, 1)">  ).
</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)">*以下是根据配置表控制alv显示的，暂时用默认也可以，先不用</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  DATA:gt_zcrmt0209s TYPE TABLE OF zcrmt0209s,</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">       gw_zcrmt0209s LIKE LINE OF gt_zcrmt0209s.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  DATA: lr_comp_alv    TYPE REF TO if_wd_component_usage,</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">        lr_comp_if_alv TYPE REF TO iwci_salv_wd_table.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  DATA: lr_column_settings TYPE REF TO if_salv_wd_column_settings,</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">        lr_column          TYPE REF TO cl_salv_wd_column,</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">        lr_column_header   TYPE REF TO cl_salv_wd_column_header.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  DATA:gv_string TYPE string.</span><span style="color: rgba(128, 128, 128, 1)">
*
*</span><span style="color: rgba(128, 128, 128, 1)">  DATA: lt_column TYPE salv_wd_t_column_ref,</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">        ls_column TYPE salv_wd_s_column_ref.</span><span style="color: rgba(128, 128, 128, 1)">
*
*</span><span style="color: rgba(128, 128, 128, 1)">****"定义特殊格式的类型</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  DATA: lr_input_field TYPE REF TO cl_salv_wd_uie_input_field,</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">        lr_checkbox    TYPE REF TO cl_salv_wd_uie_checkbox,</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">        lr_link        TYPE REF TO cl_salv_wd_uie_link_to_action,</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">        lr_drop        TYPE REF TO cl_salv_wd_uie_dropdown_by_key.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  DATA lr_column_id TYPE string.</span><span style="color: rgba(128, 128, 128, 1)">
*
*
*</span><span style="color: rgba(128, 128, 128, 1)">  CHECK gt_zcrmt0209s[] IS NOT INITIAL.</span><span style="color: rgba(128, 128, 128, 1)">
*
*
*
*
*</span><span style="color: rgba(128, 128, 128, 1)">  "创建组件/实例化组件</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  lr_comp_alv = wd_this-&gt;wd_cpuse_dynmaic_alv( ) .</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  IF lr_comp_alv-&gt;has_active_component( ) IS INITIAL.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">    lr_comp_alv-&gt;create_component( ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  ENDIF.</span><span style="color: rgba(128, 128, 128, 1)">
*
*
*</span><span style="color: rgba(128, 128, 128, 1)">  DATA lr_config TYPE REF TO cl_salv_wd_config_table.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  DATA:lr_func_config TYPE REF TO cl_salv_wd_config_table.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  "获取ALV对象的设置对象</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  lr_comp_if_alv = wd_this-&gt;wd_cpifc_dynmaic_alv( ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  lr_config      = lr_comp_if_alv-&gt;get_model( ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  lr_func_config      = lr_comp_if_alv-&gt;get_model( ).</span><span style="color: rgba(128, 128, 128, 1)">
*
*</span><span style="color: rgba(128, 128, 128, 1)">  lr_column_settings ?= lr_config .</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  lt_column = lr_column_settings-&gt;get_columns( )."获取ALV字段</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  "取配置表数据</span><span style="color: rgba(128, 128, 128, 1)">
*
*</span><span style="color: rgba(128, 128, 128, 1)">*=========================================================</span><span style="color: rgba(128, 128, 128, 1)">
*
*</span><span style="color: rgba(128, 128, 128, 1)">  DATA: l_value  TYPE REF TO cl_salv_wd_config_table.</span><span style="color: rgba(128, 128, 128, 1)">
*
*</span><span style="color: rgba(128, 128, 128, 1)">  l_value = lr_comp_if_alv-&gt;get_model( ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  l_value-&gt;if_salv_wd_table_settings~set_fixed_table_layout( abap_false ).  "使列宽不可自动调节</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  l_value-&gt;if_salv_wd_table_settings~set_width( '100%'  ) .                "设置宽度</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  l_value-&gt;if_salv_wd_table_settings~set_visible_row_count( '15' ).        "显示的行数</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  l_value-&gt;if_salv_wd_table_settings~set_scrollable_col_count( '10' )."设置滚动条行数</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  l_value-&gt;if_salv_wd_table_settings~set_read_only( abap_false )."设置只读</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  l_value-&gt;if_salv_wd_table_settings~set_display_empty_rows( abap_false )."设置空表也显示alv行</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  l_value-&gt;if_salv_wd_table_settings~set_selection_mode( cl_wd_table=&gt;e_selection_mode-multi_no_lead )."多选无lead</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  l_value-&gt;if_salv_wd_function_settings~set_enabled( abap_true ) ."功能</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  l_value-&gt;if_salv_wd_std_functions~set_edit_check_available( abap_false ) .</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  l_value-&gt;if_salv_wd_std_functions~set_edit_insert_row_allowed( abap_false ) .</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  l_value-&gt;if_salv_wd_std_functions~set_export_allowed( abap_true ) ."可excel导出</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">*  l_value-&gt;if_salv_wd_std_functions~set_view_list_allowed( abap_false ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  l_value-&gt;if_salv_wd_std_functions~set_pdf_allowed( abap_false ) ."可pdf导出</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  l_value-&gt;if_salv_wd_std_functions~set_edit_append_row_allowed( abap_false ) .</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  l_value-&gt;if_salv_wd_std_functions~set_edit_delete_row_allowed( abap_false ) .</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  l_value-&gt;if_salv_wd_std_functions~set_filter_filterline_allowed( abap_true ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  l_value-&gt;if_salv_wd_std_functions~set_filter_complex_allowed( abap_true )."多字段筛选</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">*  l_value-&gt;if_salv_wd_std_functions~set_dialog_settings_allowed( abap_true ).</span><span style="color: rgba(128, 128, 128, 1)">
*
*</span><span style="color: rgba(128, 128, 128, 1)">  DATA: lr_table_settings TYPE REF TO if_salv_wd_table_settings.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  lr_table_settings ?= l_value.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  lr_table_settings-&gt;set_data_check( '01' ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  lr_table_settings-&gt;set_read_only( abap_false ).</span><span style="color: rgba(128, 128, 128, 1)">
*
*</span><span style="color: rgba(128, 128, 128, 1)">  LOOP AT lt_column INTO ls_column.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">    lr_column_id = ls_column-id.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">    lr_column = ls_column-r_column.</span><span style="color: rgba(128, 128, 128, 1)">
*
*</span><span style="color: rgba(128, 128, 128, 1)">    lr_column-&gt;set_resizable( value = 'X' ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">    lr_column-&gt;set_width( value = '100' ).</span><span style="color: rgba(128, 128, 128, 1)">
*
*</span><span style="color: rgba(128, 128, 128, 1)">    READ TABLE gt_zcrmt0209s INTO gw_zcrmt0209s WITH KEY field = ls_column-id.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">    IF sy-subrc = 0.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">*      IF gw_zcrmt0209s-visiable = 'X'.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">      lr_column_header = ls_column-r_column-&gt;create_header( ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">*        ls_column-r_column-&gt;set_position( gw_ZCRMT0209S-posit ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">      CASE gw_zcrmt0209s-field.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">        WHEN 'SEL'.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">          CREATE OBJECT lr_checkbox</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">            EXPORTING</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">              checked_fieldname = ls_column-id.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">          ls_column-r_column-&gt;set_cell_editor( lr_checkbox ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">        WHEN 'ZZCON_TYPE'.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">          CREATE OBJECT lr_drop</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">            EXPORTING</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">              selected_key_fieldname = ls_column-id.</span><span style="color: rgba(128, 128, 128, 1)">
*
*</span><span style="color: rgba(128, 128, 128, 1)">          lr_drop-&gt;set_read_only_fieldname( value = ls_column-id ).</span><span style="color: rgba(128, 128, 128, 1)">
*
*</span><span style="color: rgba(128, 128, 128, 1)">          ls_column-r_column-&gt;set_cell_editor( lr_drop ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">        WHEN 'CTYPE'.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">          CREATE OBJECT lr_drop</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">            EXPORTING</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">              selected_key_fieldname = ls_column-id.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">*            lr_drop-&gt;set_read_only_fieldname( value = ls_column-id ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">          ls_column-r_column-&gt;set_cell_editor( lr_drop ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">        WHEN 'OBJECT_ID'.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">          CREATE OBJECT lr_link.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">          lr_link-&gt;set_text_fieldname( ls_column-id ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">          ls_column-r_column-&gt;set_cell_editor( lr_link ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">        WHEN 'E'.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">        WHEN 'F'.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">        WHEN OTHERS.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">      ENDCASE.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">      IF gw_zcrmt0209s-text CS 'CRM/'."otr text使用特定格式的</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">        gv_string = gw_zcrmt0209s-text.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">        lr_column_header-&gt;set_text( zcl_otr=&gt;get_text( gv_string ) ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">      ELSE.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">        IF gw_zcrmt0209s-text IS NOT INITIAL.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">          gv_string = gw_zcrmt0209s-text.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">          lr_column_header-&gt;set_text( gv_string ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">        ENDIF.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">      ENDIF.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">*      ELSE.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">*        ls_column-r_column-&gt;set_position( gw_zcrmt0209s-posit ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">*        lr_column = lr_column_settings-&gt;get_column( ls_column-id ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">*        lr_column-&gt;set_visible( if_wdl_core=&gt;visibility_none ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">*      ENDIF.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">    ELSE.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">*      ls_column-r_column-&gt;set_position( gw_zcrmt0209s-posit ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">      lr_column = lr_column_settings-&gt;get_column( ls_column-id ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">      lr_column-&gt;set_visible( if_wdl_core=&gt;visibility_none ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">    ENDIF.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  ENDLOOP.</span>

<span style="color: rgba(0, 0, 255, 1)">ENDMETHOD</span>.</pre>
</div>
<p>6，查询处理，动态构建内表并展示</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">METHOD</span><span style="color: rgba(0, 0, 0, 1)"> onactionsearch .
  </span><span style="color: rgba(0, 0, 255, 1)">DATA</span>:gt_zcrmt0209s <span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">TABLE</span> <span style="color: rgba(0, 0, 255, 1)">OF</span><span style="color: rgba(0, 0, 0, 1)"> zcrmt0209s,
       gw_zcrmt0209s </span><span style="color: rgba(0, 0, 255, 1)">LIKE</span> <span style="color: rgba(0, 0, 255, 1)">LINE</span> <span style="color: rgba(0, 0, 255, 1)">OF</span><span style="color: rgba(0, 0, 0, 1)"> gt_zcrmt0209s,
       gw_zcrmt0209  </span><span style="color: rgba(0, 0, 255, 1)">TYPE</span><span style="color: rgba(0, 0, 0, 1)"> zcrmt0209.
  </span><span style="color: rgba(0, 0, 255, 1)">DATA</span> lo_nd_zcrmt0209 <span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">REF</span> <span style="color: rgba(0, 0, 255, 1)">TO</span><span style="color: rgba(0, 0, 0, 1)"> if_wd_context_node.
  </span><span style="color: rgba(0, 0, 255, 1)">DATA</span> lo_el_zcrmt0209 <span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">REF</span> <span style="color: rgba(0, 0, 255, 1)">TO</span><span style="color: rgba(0, 0, 0, 1)"> if_wd_context_element.
  </span><span style="color: rgba(0, 0, 255, 1)">DATA</span> ls_zcrmt0209 <span style="color: rgba(0, 0, 255, 1)">TYPE</span> wd_this-&gt;<span style="color: rgba(0, 0, 0, 1)">element_zcrmt0209.
  </span><span style="color: rgba(0, 0, 255, 1)">DATA</span>: rt_object_id <span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">REF</span> <span style="color: rgba(0, 0, 255, 1)">TO</span><span style="color: rgba(0, 0, 0, 1)"> data,
        lt_where     </span><span style="color: rgba(0, 0, 255, 1)">TYPE</span><span style="color: rgba(0, 0, 0, 1)"> rsds_where_tab,
        lt_from      </span><span style="color: rgba(0, 0, 255, 1)">TYPE</span><span style="color: rgba(0, 0, 0, 1)"> rsds_where_tab,
        lt_sql       </span><span style="color: rgba(0, 0, 255, 1)">TYPE</span><span style="color: rgba(0, 0, 0, 1)"> rsds_where_tab,
        lv_s         </span><span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)">,
        lv_n         </span><span style="color: rgba(0, 0, 255, 1)">TYPE</span> n LENGTH <span style="color: rgba(128, 0, 128, 1)">2</span><span style="color: rgba(0, 0, 0, 1)">,
        lv_line(</span><span style="color: rgba(128, 0, 128, 1)">70</span>)  <span style="color: rgba(0, 0, 255, 1)">TYPE</span><span style="color: rgba(0, 0, 0, 1)"> c.
  </span><span style="color: rgba(0, 0, 255, 1)">DATA</span>: dy_table <span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">REF</span> <span style="color: rgba(0, 0, 255, 1)">TO</span><span style="color: rgba(0, 0, 0, 1)"> data,
        ifc      </span><span style="color: rgba(0, 0, 255, 1)">TYPE</span><span style="color: rgba(0, 0, 0, 1)">        lvc_t_fcat.
  </span><span style="color: rgba(0, 0, 255, 1)">FIELD-SYMBOLS</span><span style="color: rgba(0, 0, 0, 1)">:
    </span>&lt;fs01&gt; <span style="color: rgba(0, 0, 255, 1)">TYPE</span><span style="color: rgba(0, 0, 0, 1)"> table,
    </span>&lt;fs02&gt; <span style="color: rgba(0, 0, 255, 1)">TYPE</span><span style="color: rgba(0, 0, 0, 1)"> table,
    </span>&lt;fs03&gt; <span style="color: rgba(0, 0, 255, 1)">TYPE</span><span style="color: rgba(0, 0, 0, 1)"> table,
    </span>&lt;fs04&gt; <span style="color: rgba(0, 0, 255, 1)">TYPE</span><span style="color: rgba(0, 0, 0, 1)"> table,
    </span>&lt;fs05&gt; <span style="color: rgba(0, 0, 255, 1)">TYPE</span><span style="color: rgba(0, 0, 0, 1)"> table,
    </span>&lt;fs06&gt; <span style="color: rgba(0, 0, 255, 1)">TYPE</span><span style="color: rgba(0, 0, 0, 1)"> table,
    </span>&lt;fs07&gt; <span style="color: rgba(0, 0, 255, 1)">TYPE</span><span style="color: rgba(0, 0, 0, 1)"> table,
    </span>&lt;fs08&gt; <span style="color: rgba(0, 0, 255, 1)">TYPE</span><span style="color: rgba(0, 0, 0, 1)"> table,
    </span>&lt;fs09&gt; <span style="color: rgba(0, 0, 255, 1)">TYPE</span><span style="color: rgba(0, 0, 0, 1)"> table,
    </span>&lt;fs10&gt; <span style="color: rgba(0, 0, 255, 1)">TYPE</span><span style="color: rgba(0, 0, 0, 1)"> table.
  </span><span style="color: rgba(0, 0, 255, 1)">FIELD-SYMBOLS</span> : &lt;table&gt; <span style="color: rgba(0, 0, 255, 1)">TYPE</span> ANY <span style="color: rgba(0, 0, 255, 1)">TABLE</span><span style="color: rgba(0, 0, 0, 1)">.
  </span><span style="color: rgba(0, 0, 255, 1)">DATA</span>:lr_node <span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">REF</span> <span style="color: rgba(0, 0, 255, 1)">TO</span><span style="color: rgba(0, 0, 0, 1)"> if_wd_context_node.

</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)">   navigate from &lt;CONTEXT&gt; to &lt;ZCRMT0209&gt; via lead selection</span>
  lo_nd_zcrmt0209 = wd_context-&gt;get_child_node( name = wd_this-&gt;<span style="color: rgba(0, 0, 0, 1)">wdctx_zcrmt0209 ).
</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)">   get element via lead selection</span>
  lo_el_zcrmt0209 = lo_nd_zcrmt0209-&gt;<span style="color: rgba(0, 0, 0, 1)">get_element( ).
</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)">   get all declared attributes</span>
  lo_el_zcrmt0209-&gt;<span style="color: rgba(0, 0, 0, 1)">get_static_attributes(
    </span><span style="color: rgba(0, 0, 255, 1)">IMPORTING</span><span style="color: rgba(0, 0, 0, 1)">
      static_attributes </span>=<span style="color: rgba(0, 0, 0, 1)"> ls_zcrmt0209 ).
  </span><span style="color: rgba(128, 128, 128, 1)">"</span><span style="color: rgba(128, 128, 128, 1)">根据配置表查询条件获得查询参数，限制10个条件</span>
  <span style="color: rgba(0, 0, 255, 1)">SELECT</span> * <span style="color: rgba(0, 0, 255, 1)">INTO</span> <span style="color: rgba(0, 0, 255, 1)">TABLE</span> gt_zcrmt0209s <span style="color: rgba(0, 0, 255, 1)">FROM</span> zcrmt0209s <span style="color: rgba(0, 0, 255, 1)">WHERE</span> component_name = ls_zcrmt0209-component_name <span style="color: rgba(0, 0, 255, 1)">AND</span> zusage = <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">S</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">.
  </span><span style="color: rgba(0, 0, 255, 1)">LOOP</span> <span style="color: rgba(0, 0, 255, 1)">AT</span> gt_zcrmt0209s <span style="color: rgba(0, 0, 255, 1)">INTO</span><span style="color: rgba(0, 0, 0, 1)"> gw_zcrmt0209s.
    </span><span style="color: rgba(0, 0, 255, 1)">CLEAR</span><span style="color: rgba(0, 0, 0, 1)">:lv_line,lv_s.
    lv_n </span>= sy-<span style="color: rgba(0, 0, 0, 1)">tabix.
    lv_s </span>= gw_zcrmt0209s-<span style="color: rgba(0, 0, 0, 1)">field.
    rt_object_id </span>= wd_this-&gt;m_handler-&gt;get_range_table_of_sel_field( i_id =<span style="color: rgba(0, 0, 0, 1)"> lv_s ).
    </span><span style="color: rgba(0, 0, 255, 1)">CASE</span><span style="color: rgba(0, 0, 0, 1)"> lv_n.
      WHEN </span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">01</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">ASSIGN</span> rt_object_id-&gt;* <span style="color: rgba(0, 0, 255, 1)">TO</span> &lt;fs01&gt;<span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">IF</span> &lt;fs01&gt;[] <span style="color: rgba(0, 0, 255, 1)">IS</span> <span style="color: rgba(0, 0, 255, 1)">INITIAL</span><span style="color: rgba(0, 0, 0, 1)">.
          </span><span style="color: rgba(0, 0, 255, 1)">CONTINUE</span><span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">ENDIF</span><span style="color: rgba(0, 0, 0, 1)">.
      WHEN </span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">02</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">ASSIGN</span> rt_object_id-&gt;* <span style="color: rgba(0, 0, 255, 1)">TO</span> &lt;fs02&gt;<span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">IF</span> &lt;fs02&gt;[] <span style="color: rgba(0, 0, 255, 1)">IS</span> <span style="color: rgba(0, 0, 255, 1)">INITIAL</span><span style="color: rgba(0, 0, 0, 1)">.
          </span><span style="color: rgba(0, 0, 255, 1)">CONTINUE</span><span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">ENDIF</span><span style="color: rgba(0, 0, 0, 1)">.
      WHEN </span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">03</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">ASSIGN</span> rt_object_id-&gt;* <span style="color: rgba(0, 0, 255, 1)">TO</span> &lt;fs03&gt;<span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">IF</span> &lt;fs03&gt;[] <span style="color: rgba(0, 0, 255, 1)">IS</span> <span style="color: rgba(0, 0, 255, 1)">INITIAL</span><span style="color: rgba(0, 0, 0, 1)">.
          </span><span style="color: rgba(0, 0, 255, 1)">CONTINUE</span><span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">ENDIF</span><span style="color: rgba(0, 0, 0, 1)">.
      WHEN </span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">04</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">ASSIGN</span> rt_object_id-&gt;* <span style="color: rgba(0, 0, 255, 1)">TO</span> &lt;fs04&gt;<span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">IF</span> &lt;fs04&gt;[] <span style="color: rgba(0, 0, 255, 1)">IS</span> <span style="color: rgba(0, 0, 255, 1)">INITIAL</span><span style="color: rgba(0, 0, 0, 1)">.
          </span><span style="color: rgba(0, 0, 255, 1)">CONTINUE</span><span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">ENDIF</span><span style="color: rgba(0, 0, 0, 1)">.
      WHEN </span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">05</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">ASSIGN</span> rt_object_id-&gt;* <span style="color: rgba(0, 0, 255, 1)">TO</span> &lt;fs05&gt;<span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">IF</span> &lt;fs05&gt;[] <span style="color: rgba(0, 0, 255, 1)">IS</span> <span style="color: rgba(0, 0, 255, 1)">INITIAL</span><span style="color: rgba(0, 0, 0, 1)">.
          </span><span style="color: rgba(0, 0, 255, 1)">CONTINUE</span><span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">ENDIF</span><span style="color: rgba(0, 0, 0, 1)">.
      WHEN </span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">06</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">ASSIGN</span> rt_object_id-&gt;* <span style="color: rgba(0, 0, 255, 1)">TO</span> &lt;fs06&gt;<span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">IF</span> &lt;fs06&gt;[] <span style="color: rgba(0, 0, 255, 1)">IS</span> <span style="color: rgba(0, 0, 255, 1)">INITIAL</span><span style="color: rgba(0, 0, 0, 1)">.
          </span><span style="color: rgba(0, 0, 255, 1)">CONTINUE</span><span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">ENDIF</span><span style="color: rgba(0, 0, 0, 1)">.
      WHEN </span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">07</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">ASSIGN</span> rt_object_id-&gt;* <span style="color: rgba(0, 0, 255, 1)">TO</span> &lt;fs07&gt;<span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">IF</span> &lt;fs07&gt;[] <span style="color: rgba(0, 0, 255, 1)">IS</span> <span style="color: rgba(0, 0, 255, 1)">INITIAL</span><span style="color: rgba(0, 0, 0, 1)">.
          </span><span style="color: rgba(0, 0, 255, 1)">CONTINUE</span><span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">ENDIF</span><span style="color: rgba(0, 0, 0, 1)">.
      WHEN </span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">08</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">ASSIGN</span> rt_object_id-&gt;* <span style="color: rgba(0, 0, 255, 1)">TO</span> &lt;fs08&gt;<span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">IF</span> &lt;fs08&gt;[] <span style="color: rgba(0, 0, 255, 1)">IS</span> <span style="color: rgba(0, 0, 255, 1)">INITIAL</span><span style="color: rgba(0, 0, 0, 1)">.
          </span><span style="color: rgba(0, 0, 255, 1)">CONTINUE</span><span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">ENDIF</span><span style="color: rgba(0, 0, 0, 1)">.
      WHEN </span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">09</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">ASSIGN</span> rt_object_id-&gt;* <span style="color: rgba(0, 0, 255, 1)">TO</span> &lt;fs09&gt;<span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">IF</span> &lt;fs09&gt;[] <span style="color: rgba(0, 0, 255, 1)">IS</span> <span style="color: rgba(0, 0, 255, 1)">INITIAL</span><span style="color: rgba(0, 0, 0, 1)">.
          </span><span style="color: rgba(0, 0, 255, 1)">CONTINUE</span><span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">ENDIF</span><span style="color: rgba(0, 0, 0, 1)">.
      WHEN </span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">10</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">ASSIGN</span> rt_object_id-&gt;* <span style="color: rgba(0, 0, 255, 1)">TO</span> &lt;fs10&gt;<span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">IF</span> &lt;fs10&gt;[] <span style="color: rgba(0, 0, 255, 1)">IS</span> <span style="color: rgba(0, 0, 255, 1)">INITIAL</span><span style="color: rgba(0, 0, 0, 1)">.
          </span><span style="color: rgba(0, 0, 255, 1)">CONTINUE</span><span style="color: rgba(0, 0, 0, 1)">.
        </span><span style="color: rgba(0, 0, 255, 1)">ENDIF</span><span style="color: rgba(0, 0, 0, 1)">.
      WHEN OTHERS.
    </span><span style="color: rgba(0, 0, 255, 1)">ENDCASE</span><span style="color: rgba(0, 0, 0, 1)">.
    </span><span style="color: rgba(128, 128, 128, 1)">"</span><span style="color: rgba(128, 128, 128, 1)">动态查询条件，第二次拼接需要添加and</span>
    <span style="color: rgba(0, 0, 255, 1)">CONCATENATE</span> <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">&lt;fs</span><span style="color: rgba(128, 0, 0, 1)">'</span> lv_n <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">&gt;</span><span style="color: rgba(128, 0, 0, 1)">'</span> <span style="color: rgba(0, 0, 255, 1)">INTO</span><span style="color: rgba(0, 0, 0, 1)"> lv_line.
    </span><span style="color: rgba(0, 0, 255, 1)">IF</span> lt_where[] <span style="color: rgba(0, 0, 255, 1)">IS</span> <span style="color: rgba(0, 0, 255, 1)">INITIAL</span><span style="color: rgba(0, 0, 0, 1)">.
      </span><span style="color: rgba(0, 0, 255, 1)">CONCATENATE</span> gw_zcrmt0209s-name_on_db <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">IN</span><span style="color: rgba(128, 0, 0, 1)">'</span> lv_line <span style="color: rgba(0, 0, 255, 1)">INTO</span> lv_line SEPARATED <span style="color: rgba(0, 0, 255, 1)">BY</span><span style="color: rgba(0, 0, 0, 1)"> space.
    </span><span style="color: rgba(0, 0, 255, 1)">ELSE</span><span style="color: rgba(0, 0, 0, 1)">.
      </span><span style="color: rgba(0, 0, 255, 1)">CONCATENATE</span> <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">AND</span><span style="color: rgba(128, 0, 0, 1)">'</span> gw_zcrmt0209s-name_on_db <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">IN</span><span style="color: rgba(128, 0, 0, 1)">'</span> lv_line <span style="color: rgba(0, 0, 255, 1)">INTO</span> lv_line SEPARATED <span style="color: rgba(0, 0, 255, 1)">BY</span><span style="color: rgba(0, 0, 0, 1)"> space.
    </span><span style="color: rgba(0, 0, 255, 1)">ENDIF</span><span style="color: rgba(0, 0, 0, 1)">.

    </span><span style="color: rgba(0, 0, 255, 1)">APPEND</span> lv_line <span style="color: rgba(0, 0, 255, 1)">TO</span><span style="color: rgba(0, 0, 0, 1)"> lt_where.

  </span><span style="color: rgba(0, 0, 255, 1)">ENDLOOP</span><span style="color: rgba(0, 0, 0, 1)">.

  </span><span style="color: rgba(0, 0, 255, 1)">CHECK</span> lt_where[] <span style="color: rgba(0, 0, 255, 1)">IS</span> <span style="color: rgba(0, 0, 255, 1)">NOT</span> <span style="color: rgba(0, 0, 255, 1)">INITIAL</span><span style="color: rgba(0, 0, 0, 1)">.
  </span><span style="color: rgba(0, 0, 255, 1)">DATA</span>:lv_name <span style="color: rgba(0, 0, 255, 1)">TYPE</span> <span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)">.



  </span><span style="color: rgba(0, 0, 255, 1)">SELECT</span> name_on_db <span style="color: rgba(0, 0, 255, 1)">INTO</span> <span style="color: rgba(0, 0, 255, 1)">TABLE</span> lt_sql <span style="color: rgba(0, 0, 255, 1)">FROM</span> zcrmt0209s <span style="color: rgba(0, 0, 255, 1)">WHERE</span> component_name = ls_zcrmt0209-component_name <span style="color: rgba(0, 0, 255, 1)">AND</span> zusage = <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">R</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">.


  </span><span style="color: rgba(128, 128, 128, 1)">"</span><span style="color: rgba(128, 128, 128, 1)">根据配置字段属性，构建动态内表</span>
  <span style="color: rgba(0, 0, 255, 1)">SELECT</span> dd03l~fieldname dd03l~inttype dd03l~leng AS intlen dd03l~decimals <span style="color: rgba(0, 0, 255, 1)">INTO</span> <span style="color: rgba(0, 0, 255, 1)">CORRESPONDING</span> <span style="color: rgba(0, 0, 255, 1)">FIELDS</span> <span style="color: rgba(0, 0, 255, 1)">OF</span> <span style="color: rgba(0, 0, 255, 1)">TABLE</span> ifc <span style="color: rgba(0, 0, 255, 1)">FROM</span><span style="color: rgba(0, 0, 0, 1)"> dd03l INNER JOIN zcrmt0209s
    </span><span style="color: rgba(0, 0, 255, 1)">ON</span> zcrmt0209s~field = dd03l~fieldname <span style="color: rgba(0, 0, 255, 1)">AND</span> zcrmt0209s~dbtabname =<span style="color: rgba(0, 0, 0, 1)"> dd03l~tabname
    </span><span style="color: rgba(0, 0, 255, 1)">WHERE</span> zcrmt0209s~component_name = ls_zcrmt0209-component_name <span style="color: rgba(0, 0, 255, 1)">AND</span> zusage = <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">R</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">.

  </span><span style="color: rgba(0, 0, 255, 1)">CALL</span> <span style="color: rgba(0, 0, 255, 1)">METHOD</span> cl_alv_table_create=&gt;<span style="color: rgba(0, 0, 0, 1)">create_dynamic_table
    </span><span style="color: rgba(0, 0, 255, 1)">EXPORTING</span><span style="color: rgba(0, 0, 0, 1)">
      it_fieldcatalog </span>=<span style="color: rgba(0, 0, 0, 1)"> ifc
    </span><span style="color: rgba(0, 0, 255, 1)">IMPORTING</span><span style="color: rgba(0, 0, 0, 1)">
      ep_table        </span>=<span style="color: rgba(0, 0, 0, 1)"> dy_table.
  </span><span style="color: rgba(0, 0, 255, 1)">ASSIGN</span> dy_table-&gt;* <span style="color: rgba(0, 0, 255, 1)">TO</span> &lt;table&gt;<span style="color: rgba(0, 0, 0, 1)">.
</span><span style="color: rgba(128, 128, 128, 1)">*</span><span style="color: rgba(128, 128, 128, 1)">*另一种动态构建内表的方法</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  DATA: ls_comp     TYPE LINE OF cl_abap_structdescr=&gt;component_table,</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">        lt_comp     TYPE cl_abap_structdescr=&gt;component_table,</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">        ls_fieldcat TYPE LINE OF lvc_t_fcat,</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">        struct_type TYPE REF TO cl_abap_structdescr.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  SELECT * INTO TABLE gt_zcrmt0209s FROM zcrmt0209s WHERE component_name = ls_zcrmt0209-component_name AND zusage = 'R'.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  LOOP AT gt_zcrmt0209s INTO gw_zcrmt0209s.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">    ls_comp-name = gw_zcrmt0209s-field.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">    ls_comp-type ?= cl_abap_typedescr=&gt;describe_by_name( gw_zcrmt0209s-field_type ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">    APPEND ls_comp TO lt_comp.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  ENDLOOP.</span><span style="color: rgba(128, 128, 128, 1)">
*
*</span><span style="color: rgba(128, 128, 128, 1)">* Create structure defined in lt_comp</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  struct_type = cl_abap_structdescr=&gt;create( lt_comp ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  DATA p_result     TYPE REF TO cl_abap_tabledescr.</span><span style="color: rgba(128, 128, 128, 1)">
*
*</span><span style="color: rgba(128, 128, 128, 1)">  p_result = cl_abap_tabledescr=&gt;create(</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">      p_line_type  = CAST #( struct_type )</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">       p_table_kind = cl_abap_tabledescr=&gt;tablekind_std ).</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  DATA: table TYPE REF TO data.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  CREATE DATA table TYPE HANDLE p_result.</span><span style="color: rgba(128, 128, 128, 1)">
*</span><span style="color: rgba(128, 128, 128, 1)">  ASSIGN table-&gt;* TO &lt;table&gt;.</span>


  <span style="color: rgba(128, 128, 128, 1)">"</span><span style="color: rgba(128, 128, 128, 1)">查询表连接处理</span>
  <span style="color: rgba(0, 0, 255, 1)">SELECT</span> <span style="color: rgba(0, 0, 255, 1)">SINGLE</span> * <span style="color: rgba(0, 0, 255, 1)">INTO</span> gw_zcrmt0209 <span style="color: rgba(0, 0, 255, 1)">FROM</span> zcrmt0209 <span style="color: rgba(0, 0, 255, 1)">WHERE</span> uname = sy-uname <span style="color: rgba(0, 0, 255, 1)">AND</span> component_name = ls_zcrmt0209-<span style="color: rgba(0, 0, 0, 1)">component_name.

  </span><span style="color: rgba(0, 0, 255, 1)">CHECK</span> gw_zcrmt0209-fromcond <span style="color: rgba(0, 0, 255, 1)">IS</span> <span style="color: rgba(0, 0, 255, 1)">NOT</span> <span style="color: rgba(0, 0, 255, 1)">INITIAL</span><span style="color: rgba(0, 0, 0, 1)">.
  </span><span style="color: rgba(0, 0, 255, 1)">SPLIT</span> gw_zcrmt0209-fromcond <span style="color: rgba(0, 0, 255, 1)">AT</span> <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">/</span><span style="color: rgba(128, 0, 0, 1)">'</span> <span style="color: rgba(0, 0, 255, 1)">INTO</span> <span style="color: rgba(0, 0, 255, 1)">TABLE</span><span style="color: rgba(0, 0, 0, 1)"> lt_from.

  </span><span style="color: rgba(128, 128, 128, 1)">"</span><span style="color: rgba(128, 128, 128, 1)">动态查询</span>
  <span style="color: rgba(0, 0, 255, 1)">SELECT</span><span style="color: rgba(0, 0, 0, 1)"> (lt_sql)
    </span><span style="color: rgba(0, 0, 255, 1)">INTO</span> <span style="color: rgba(0, 0, 255, 1)">CORRESPONDING</span> <span style="color: rgba(0, 0, 255, 1)">FIELDS</span> <span style="color: rgba(0, 0, 255, 1)">OF</span> <span style="color: rgba(0, 0, 255, 1)">TABLE</span> &lt;table&gt;
    <span style="color: rgba(0, 0, 255, 1)">FROM</span><span style="color: rgba(0, 0, 0, 1)"> (lt_from)
    </span><span style="color: rgba(0, 0, 255, 1)">WHERE</span><span style="color: rgba(0, 0, 0, 1)"> (lt_where).


  lv_name </span>= ls_zcrmt0209-<span style="color: rgba(0, 0, 0, 1)">component_name.

  </span><span style="color: rgba(128, 128, 128, 1)">"</span><span style="color: rgba(128, 128, 128, 1)">绑定结果到node显示</span>
  lr_node = wd_context-&gt;get_child_node( name =<span style="color: rgba(0, 0, 0, 1)"> lv_name ).

  lr_node</span>-&gt;bind_table( new_items = &lt;table&gt; set_initial_elements =<span style="color: rgba(0, 0, 0, 1)"> abap_true ).



</span><span style="color: rgba(0, 0, 255, 1)">ENDMETHOD</span>.</pre>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>效果展示：</p>
<p>配置数据：</p>
<p><img src="https://img2024.cnblogs.com/blog/514105/202506/514105-20250617091830556-1475667804.png" alt="" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/514105/202506/514105-20250617091851951-1335889582.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p><img src="https://img2024.cnblogs.com/blog/514105/202506/514105-20250617091723072-155338113.gif" alt=""></p>
<p>&nbsp;</p>
</div>
<div id="MySignature" role="contentinfo">
    ^_^很多人都把资料锁进了note里，以后还怎么百度呢^_^
</div>
<div class="clear"></div>

	<div class="postDesc">posted on 
<span id="post-date" data-last-update-days="0.002777777777777778" data-date-updated="2025-06-17 09:19">2025-06-17 09:15</span>&nbsp;
<a href="https://www.cnblogs.com/sapSB">^ω^SAP傻X^o^</a>&nbsp;
阅读(<span id="post_view_count">34</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18932282);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18932282', targetLink: 'https://www.cnblogs.com/sapSB/p/18932282', title: '用配置表给WEB DYNPRO做配置报表（限十个查询条件）' })">举报</a>
</div>
