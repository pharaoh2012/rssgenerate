
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/paozhu/p/19048793" title="发布于 2025-08-20 15:15">
    <span role="heading" aria-level="2">PaoZhu C++ Web Framework比美Java SpringBoot 的注解</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>&nbsp; PaoZhu C++ Web Framework 内置HTTP/2 ORM 可以完全开发Web生态，提供注解功能。</p>
<p><span id="content">&nbsp; C++ 注解机制更加简单</span></p>
<div class="cnblogs_Highlighter">
<pre class="brush:cpp;gutter:true;">//@urlpath(admin_islogin,admin/add_article)
</pre>
</div>
<p>&nbsp;<span id="content">一句话可以把一个函数变成注解函数，admin_islogin是拦截函数，访问admin/add_article之前执行认证，如果没有认证，不能执行注解函数。</span></p>
<p><span><span id="content">详细代码，在controller/src目录下创建文件article</span></span></p>
<div class="cnblogs_Highlighter">
<pre class="brush:cpp;gutter:true;">//@urlpath(admin_islogin,admin/add_article)
std::string admin_add_article(std::shared_ptr&lt;httppeer&gt; peer)
{
    httppeer &amp;client = peer-&gt;get_peer();
    client&lt;&lt;"Hello World!";
    return "";
}
</pre>
</div>
<p>&nbsp;这样可以在浏览器http://localhost/admin/add_article 这样访问了，非常简单地输出了Hello World! 到浏览器，是不是很惊讶，C++ 怎么做到的，这就是PaoZhu C++ Web Framework。</p>
<p>&nbsp; PaoZhu ORM提供协程和同步模式支持。</p>
<p>协程模式</p>
<div class="cnblogs_Highlighter">
<pre class="brush:cpp;gutter:true;">        //@urlpath(null,queries)
        asio::awaitable&lt;std::string&gt; techempowerqueries(std::shared_ptr&lt;httppeer&gt; peer)
        {
            peer-&gt;type("application/json; charset=UTF-8");
            peer-&gt;set_header("Date", get_gmttime());
        
            unsigned int get_num = peer-&gt;get["queries"].to_int();
            if (get_num == 0)
            {
                get_num = 1;
            }
            else if (get_num &gt; 500)
            {
                get_num = 500;
            }
            auto myworld = orm::World();
            myworld.record.reserve(get_num);
            myworld.lock_conn();
            for (unsigned int i = 0; i &lt; get_num; i++)
            {
                myworld.wheresql.clear();
                unsigned int rd_num = rand_range(1, 10000);
                myworld.where("id", rd_num);
                co_await myworld.async_fetch_append();
            }
            myworld.unlock_conn();
            peer-&gt;output = myworld.to_json();
            co_return "";
        }
</pre>
</div>
<p>&nbsp;同步模式</p>
<div class="cnblogs_Highlighter">
<pre class="brush:cpp;gutter:true;">        //@urlpath(admin_islogin,admin/addtopic)
        std::string admin_addtopic(std::shared_ptr&lt;httppeer&gt; peer)
        {
            httppeer &amp;client = peer-&gt;get_peer();
            try
            {
                auto topicm = orm::cms::Topic();
                topicm.where("userid", client.session["userid"].to_int()).asc("parentid").fetch();
        
                client.val["list"].set_array();
                obj_val temp;
        
                for (unsigned int i = 0; i &lt; topicm.record.size(); i++)
                {
                    temp["id"]       = topicm.record[i].topicid;
                    temp["parentid"] = topicm.record[i].parentid;
                    temp["value"]    = topicm.record[i].title;
                    client.val["list"].push(temp);
                }
            }
            catch (std::exception &amp;e)
            {
                client.val["code"] = 1;
            }
        
            peer-&gt;view("admin/addtopic");
            return "";
        }
        
</pre>
</div>
<p>&nbsp;他们都是方便利用了注解功能做控制器。</p>
<p>&nbsp;</p>
<p>更多入门内容可以访问官方入门文档。</p>
<p><a title="https://hggq.github.io/paozhudocs/documentation.html" href="https://hggq.github.io/paozhudocs/documentation.html" target="_blank" rel="noopener nofollow">https://hggq.github.io/paozhudocs/documentation.html</a></p>
<p>Paozhu C++ Web框架 官方github库</p>
<p><a title="https://github.com/hggq/paozhu" href="https://github.com/hggq/paozhu" target="_blank" rel="noopener nofollow">https://github.com/hggq/paozhu</a></p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.003472222222222222" data-date-updated="2025-08-20 15:20">2025-08-20 15:15</span>&nbsp;
<a href="https://www.cnblogs.com/paozhu">游水小鸡</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19048793);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19048793', targetLink: 'https://www.cnblogs.com/paozhu/p/19048793', title: 'PaoZhu C++ Web Framework比美Java SpringBoot 的注解' })">举报</a>
</div>
        