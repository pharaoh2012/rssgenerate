
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/codemz/p/18666943" title="发布于 2025-01-12 14:37">
    <span role="heading" aria-level="2">git worktree同一个仓库多个分支并行开发和管理</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        Git Worktree 是 Git 提供的一个功能，允许你在同一个仓库中同时工作在多个工作目录中，每个目录都有自己的工作树和索引。这对于同时处理多个分支或版本非常有用。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="介绍">介绍</h1>
<p>Git Worktree 是 Git 提供的一个功能，允许你在同一个仓库中同时工作在多个工作目录中，每个目录都有自己的工作树和索引。这对于同时处理多个分支或版本非常有用。</p>
<h1 id="常用命令">常用命令</h1>
<table>
<thead>
<tr>
<th>命令</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>git worktree --help</code></td>
<td>查看命令帮助</td>
</tr>
<tr>
<td><code>git worktree list [-v | --porcelain [-z]]</code></td>
<td>列出每个工作树的详细信息</td>
</tr>
<tr>
<td><code>git worktree remove [-f] &lt;worktree&gt;</code></td>
<td>删除指定的工作树</td>
</tr>
<tr>
<td><code>git worktree prune [-n] [-v] [--expire &lt;expire&gt;]</code></td>
<td>清理工作树的信息</td>
</tr>
<tr>
<td><code>git worktree add [-f] [--detach] [--checkout] [--lock [--reason &lt;string&gt;]]  [--orphan] [(-b | -B) &lt;new-branch&gt;] &lt;path&gt; [&lt;commit-ish&gt;]</code></td>
<td>新增工作树</td>
</tr>
</tbody>
</table>
<h1 id="重要命令讲解">重要命令讲解</h1>
<h2 id="git-worktree-add">git worktree add</h2>
<h3 id="应用场景">应用场景</h3>
<blockquote>
<p>[path] 不能带有特殊字符，规则同本地创建文件夹一致。如路径不能包含“/”，可以用如"-"来替代</p>
</blockquote>
<h4 id="1-本地创建新分支">1. 本地创建新分支</h4>
<p>假设有一个vite-project的项目，本地创建新分支"feature/2025/update"：<br>
（注意：这里是创建新分支，不要与远程分支名一样！）</p>
<pre><code class="language-bash">git worktree add ../feature-20250112-update -b feature/20250112/update
</code></pre>
<p>../feature-20250112-update：代表在vite-project同级下创建名字叫feature-20250112-update的文件夹，通常为了辨识度，名字会和分支名雷同；<br>
-b 后面跟的就是实际要创建的新分支名称；<br>
<img src="https://img2024.cnblogs.com/blog/3564427/202501/3564427-20250112143045839-1616693633.png" alt="" loading="lazy"></p>
<p>此时通过“git worktree list”查看工作树信息，已经列出了刚创建好的工作树目录，同时“git branch”也能够查看到新分支“feature/20250112/update”；</p>
<h4 id="2-拉取远程分支">2. 拉取远程分支</h4>
<p>假设本地没有“feature/2025/update”分支，准备拉取远程分支"feature/2025/update"：</p>
<pre><code class="language-bash">git worktree add ../feature-20250112-update feature/20250112/update
</code></pre>
<p>可以注意到去掉了-b，并且拉取的分支名称要和远程分支名称保持一致，不需要写“origin”，直接写分支本名即可，git会自动识别匹配；</p>
<p><img src="https://img2024.cnblogs.com/blog/3564427/202501/3564427-20250112143055555-2023453518.png" alt="" loading="lazy"></p>
<p>创建后可以在信息中看出，明确指明了 set up to track 'xxx' 的是追踪的哪个远程分支；“git worktree list” 可以看到已经创建成功了，同样“git branch” 能够看到本地有了同名分支；</p>
<p><strong>【注意】</strong> 如果远程分支名称写错了，会有错误提示；如果明确是要创建新分支，记得在新分支前加上-b；<br>
<img src="https://img2024.cnblogs.com/blog/3564427/202501/3564427-20250112143103454-1611153414.png" alt="" loading="lazy"></p>
<h2 id="git-worktree-remove">git worktree remove</h2>
<p>【操作流程】</p>
<ol>
<li>"git worktree list" 查看已有的工作树</li>
<li>"git worktree remove <worktree>" 删除指定分支</worktree></li>
<li>如果在文件夹中手动删除了工作树，通过 “git worktree prune” 清理工作树信息</li>
<li>删除工作树后，“git branch” 查看本地分支列表，“git branch -D” 删除与工作树同名的分支</li>
</ol>
<h1 id="vscode-推荐插件">VSCode 推荐插件</h1>
<p>git worktree可视化插件，评测了几个类似的插件，最终选了这个；<br>
有了这个插件就可以简化命令操作，切换工作树也很方便，可以试试~<br>
<img src="https://img2024.cnblogs.com/blog/3564427/202501/3564427-20250112143108580-1945158476.png" alt="" loading="lazy"></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.06929557046064815" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-12 14:37">2025-01-12 14:37</span>&nbsp;
<a href="https://www.cnblogs.com/codemz">代码喵仔</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18666943" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18666943);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18666943', targetLink: 'https://www.cnblogs.com/codemz/p/18666943', title: 'git worktree同一个仓库多个分支并行开发和管理' })">举报</a>
</div>
        