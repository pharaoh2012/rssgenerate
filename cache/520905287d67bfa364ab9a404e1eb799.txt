
	<h1 class="postTitle"><a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/CharXL/p/19064437" title="发布于 2025-08-29 14:05">
    <span role="heading" aria-level="2">git版本管理全流程命令操作</span>
    

</a>
</h1>
	<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<ul>
<li>git完整使用流程：</li>
</ul>
<pre><code class="language-bash"># 1. 从远程仓库拉取代码
git clone &lt;repo link&gt;
# 2. 从mian分支创建其他分支
git checkout -b &lt;my_branch&gt;
# 3. 查看main分支最新提交，但不合并（pull会合并merge）
git fetch origin
# 3. 从远程仓库拉取指定分支的更新并合并到当前分支，会产生merge提交
git pull &lt;branch&gt;
# 4. 将自己分支挂到mian分支上同步main分支更新
git rebase origin/main
## 解决了冲突并准备继续
	git rebase --continue
## 不想继续当前的 rebase 操作
	git rebase --abort
# 5. 将自己文件添加到暂存区
git add &lt;my_new_file&gt;
## 查看暂存区状态
	git status
## 将暂存区的文件还原到工作区
	git restore --staged &lt;my_new_file&gt;
## 还原除暂存区外的工作区文件修改（不影响未跟踪的文件/新键未add的文件）
	git restore .
## 还原除暂存区外的工作区所有文件f/目录d修改
	git clean -fd
## 将当前所有未提交的修改（未暂存和暂存的修改）打包存起来并清空现场
	git stash
## 恢复现场
	git stash pop
	git stash apply
# 6. 将自己的文件提交到本地仓库
git commit -m "commit message"
## 将指定 commit 的 file.txt 恢复到当前工作区
	git checkout &lt;commit_id&gt; -- file.txt
## 修改上一次提交
	git commit --amend
## 回退到指定commit处，之后的commit被撤销
	git reset --hard &lt;commit_id&gt;
## 删除commit的更新
	git rm &lt;file&gt;
# 7. 推送本地分支更新到远程仓库
git push origin &lt;my_branch&gt;
# 8. 触发MR，将branch合并到当前分支（会产生merge提交）
git merge &lt;branch&gt;
# 9. 触发PR
gh pr create --base main --head feature-branch --title "功能描述" --body "变更说明"
# 10. 修改仓库路径
git remote -v
git remote set-url origin [new_repo_path]
</code></pre>
<ul>
<li>配置用户</li>
</ul>
<pre><code class="language-bash"># 全局配置
git config --global user.name "你的名字"
git config --global user.email "你的邮箱@example.com"
# 验证
git config --global --list
# 单仓库配置
git config user.name "仓库专用名字"
git config user.email "repo@example.com"
#
git config --list
</code></pre>
<ul>
<li>远程仓库链接</li>
</ul>
<pre><code class="language-bash"># 查看远程仓库
git remote -v
# 修改远程仓库url
git remote set-url origin https://new-url.com/用户名/仓库.git
</code></pre>

</div>
<div class="clear"></div>

	<div class="postDesc">posted on 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-08-29 14:05">2025-08-29 14:05</span>&nbsp;
<a href="https://www.cnblogs.com/CharXL">CharXL</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19064437);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19064437', targetLink: 'https://www.cnblogs.com/CharXL/p/19064437', title: 'git版本管理全流程命令操作' })">举报</a>
</div>
