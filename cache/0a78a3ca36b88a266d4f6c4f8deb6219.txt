
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/kqdssheng/p/18675446" title="发布于 2025-01-16 17:31">
    <span role="heading" aria-level="2">Linux 提权指南</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<blockquote>
<p>知屋漏者在宇下，知政失者在草野，知经误者在诸子。</p>
</blockquote>
<hr>
<h2 id="导航">导航</h2>
<ul>
<li><a href="#id1" rel="noopener nofollow">壹 - 密码搜寻</a></li>
<li><a href="#id2" rel="noopener nofollow">贰 - Sudo 命令</a></li>
<li><a href="#id3" rel="noopener nofollow">叁 - SUID/SGID 特权</a></li>
<li><a href="#id4" rel="noopener nofollow">肆 - 计划任务</a></li>
<li><a href="#id5" rel="noopener nofollow">伍 - 文件/目录</a></li>
<li><a href="#id6" rel="noopener nofollow">陆 - Linux 内核</a></li>
<li><a href="#id7" rel="noopener nofollow">柒 - 服务程序</a>
<ul>
<li><a href="#id7.1" rel="noopener nofollow">MySQL UDF</a></li>
<li><a href="#id7.2" rel="noopener nofollow">NFS 共享</a></li>
<li><a href="#id7.3" rel="noopener nofollow">Docker 容器</a></li>
<li><a href="#id7.4" rel="noopener nofollow">LXD 容器</a></li>
</ul>
</li>
<li><a href="#id8" rel="noopener nofollow">捌 - 自动化工具</a></li>
</ul>
<hr>
<h2 id="壹---密码搜寻"><div id="id1">壹 - 密码搜寻</div></h2>
<ol>
<li>在 /var/www/* 目录下查找 web 应用相关的 config/seting/install <strong>配置文件</strong>，其中可能会包含连接 SQL 数据库的密码。</li>
<li>在 /home/* 目录下检查各<strong>用户家目录</strong>下的<code>.*sh_history 命令历史文件、.ssh 目录、.* 隐藏文件、备注文档、其它程序/脚本</code>。【命令 <code>ls -Ral /home/</code> 可快速遍历家目录情况。】</li>
<li>遍历整个文件系统，查找<strong>特殊命名</strong>的文件。【 命令 <code>ls -alR / | grep -iI "passw\|pwd"</code> 或 <code> locate ‘passw’</code>】</li>
<li>遍历整个文件系统，查找包含<strong>特殊字串</strong>的文件。【命令 <code>grep --color=auto -rnw -iIe "PASSW\|PASSWD\|PASSWORD\|PWD" --color=always / 2&gt;/dev/null </code> 】</li>
<li>若能够登录 SQL 数据库，则遍历 <strong>系统内置库/用户自建库</strong> 中的 user 表中的用户密码。</li>
<li>在 /var/backup/ 目录下检查可能的<strong>备份文件</strong>，例如 shadow.bak、passwd.bak、pwds.db 等。</li>
<li><a href="https://www.cnblogs.com/kqdssheng/p/18307244" target="_blank">更多详情...</a></li>
</ol>
<h2 id="贰---sudo-命令"><div id="id2">贰 - Sudo 命令</div></h2>
<ol>
<li><strong>枚举当前用户</strong>是否拥有可用的 sudo 命令，若无可用命令则直接跳过本节除步骤2以外的其他步骤。【命令 <code>sudo -l</code> 】</li>
<li><strong>枚举其它用户</strong>是否处于 sudo 组中，用以提供可能的横向突破点。【命令 <code>id user</code> 的方式逐一查询 /etc/passwd 中的 bash 用户；或命令 <code>for user in $(cat /etc/passwd | awk -F: '{print $1}');do echo "$user" ; id "$user" ;done | grep -B 1 "sudo"</code> 快速查询。】</li>
<li>将 <code>sudo -l</code> 查询到的命令在 <strong><a href="https://gtfobins.github.io/" target="_blank" rel="noopener nofollow">GTFOBins</a></strong> 网站中查找对应的利用方法，查找不到的命令亦可在 Google 中进行最后的搜索；若这些命令中存在<strong>非系统标准命令</strong>，那么关于这些命令的利用方法同样可参考下面 <em><strong>SUID/SGID 特权部分</strong></em> 的步骤4中介绍的几种利用方法；若这些命令中存在 python 执行程序，则还可以尝试<strong>劫持上游依赖模块</strong>进行利用。</li>
<li>执行命令 <code>sudo LD_PRELOAD=/null /bin/id</code> 或<code>sudo LD_LIBRARY_PATH=. /bin/id</code> 后，若没有输出<code>sorry, you are not allowed to set the following environment variables: LD_PRELOAD</code>这样的提示，则可以进行 <strong>sudo 预加载注入利用</strong>，该方法适用于所有通过 <code>sudo -l</code> 查询得到的命令。【<a href="https://www.cnblogs.com/kqdssheng/p/18198431#id3" target="_blank">利用方法</a>】</li>
<li>使用 <code>sudo -V</code> <strong>检查 sudo 版本</strong>，若 sudo 版本 ≤1.8.27 且满足 <code> user ALL=(ALL,!root) /bin/bash</code> 这样的条件，那么可以查看此<a href="https://www.cnblogs.com/kqdssheng/p/18198431#id5" target="_blank">利用方法</a>；若 sudo 版本 ≤1.9.12p1 且满足 <code> user ALL=(ALL:ALL) sudoedit</code> 这样的条件，那么可以查看此<a href="https://www.cnblogs.com/kqdssheng/p/18198431#id6" target="_blank">利用方法</a>；</li>
<li><a href="https://www.cnblogs.com/kqdssheng/p/18198105" target="_blank">更多详情1</a>、<a href="https://www.cnblogs.com/kqdssheng/p/18198431" target="_blank">更多详情2</a>。</li>
</ol>
<h2 id="叁---suidsgid-特权"><div id="id3">叁 - SUID/SGID 特权</div></h2>
<ol>
<li>枚举系统中所有的 <strong>SUID 文件</strong>。【命令 <code>find / -type f -perm -u=s 2&gt;/dev/null | xargs ls -l</code>】</li>
<li>枚举系统中所有的 <strong>SGID 文件</strong>，此时还应该枚举对应的组能够读取的文件有哪些，这些文件中是否包含类似 /etc/passwd 或 /etc/shadow 这样的文件，然后依此来判断拥有 SGID 特权的命令是否可以进行有效的利用。【命令 <code>find / -type f -perm -g=s 2&gt;/dev/null | xargs ls -l</code>；命令 <code>find / -group root -type f</code>】</li>
<li>若步骤1枚举到的是<strong>系统标准命令</strong>，则可先在 <strong><a href="https://gtfobins.github.io/" target="_blank" rel="noopener nofollow">GTFOBins</a></strong> 网站中查找对应的利用方法，查找不到时再到 Google 中进行最后的搜索。</li>
<li>若步骤1枚举到的是<strong>非系统标准命令</strong>（用户自定义命令、第三方程序打包的命令），则使用步骤3的办法可能无效，此时(1)需要先与其交互看看它做了什么，(2)再查找版本号或对应的安装包，(3)接着通过 strings 提取可疑的字符串，(4)最后通过 strace 进行调试检查。这类程序的利用方式通常如下：
<ol>
<li>根据程序加载的共享库，进行<strong>共享对象注入</strong>。【<a href="https://www.cnblogs.com/kqdssheng/p/18288785#id3" target="_blank">利用方法</a>】</li>
<li>根据程序调用的<strong>非绝对路径</strong>的命令，进行 <strong>PATH 环境变量注入</strong>。【<a href="https://www.cnblogs.com/kqdssheng/p/18288785#id4" target="_blank">利用方法</a>】</li>
<li>根据程序调用的<strong>绝对路径</strong>的命令，优先检查用户是否拥有对该绝对路径<strong>直接写入或删除覆盖的权限</strong>，若无此权限则可以检查步骤5中动作。</li>
<li>根据程序的版本或 help 信息<strong>确定其安装包程序</strong>，然后通过 Google 或 searchsploit 搜索其漏洞利用。【<a href="https://www.cnblogs.com/kqdssheng/p/18288785#id6" target="_blank">利用方法</a>】</li>
<li>使用 <code>bash --version</code> 检查 bash 的版本，若 bash 版本&lt;4.2 则 <strong>bash 允许定义与程序中调用的绝对路径同名的函数</strong>，其执行优先级会高于程序中调用的绝对路径的命令；若 bash 版本&lt;4.4 则可以利用<strong>调试模式生成调试语句的PS4提示能力</strong>。【<a href="https://www.cnblogs.com/kqdssheng/p/18288785#id5" target="_blank">利用方法</a>】</li>
</ol>
</li>
<li><a href="https://www.cnblogs.com/kqdssheng/p/18286462" target="_blank">更多详情1</a>、<a href="https://www.cnblogs.com/kqdssheng/p/18288785" target="_blank">更多详情2</a>。</li>
</ol>
<blockquote>
<p>注意：SUID 特权对于 sh 脚本不起作用，因此在进行上述 <strong>注入、写入/覆盖、同名函数</strong> 等利用时，切记要使用 C 语言编译的利用程序。</p>
<pre><code class="language-bash">echo '#include &lt;stdio.h&gt;' &gt; exploit.c
echo '#include &lt;stdlib.h&gt;' &gt;&gt; exploit.c
echo '' &gt;&gt; exploit.c
echo 'int main(){' &gt;&gt; exploit.c
echo '    system("cp /bin/bash /tmp &amp;&amp; chmod +s /tmp/bash");' &gt;&gt; exploit.c
echo '  return 0;' &gt;&gt; exploit.c
echo '}' &gt;&gt; exploit.c

gcc exploit.c -o exploit
</code></pre>
</blockquote>
<h2 id="肆---计划任务"><div id="id4">肆 - 计划任务</div></h2>
<ol>
<li>
<p><strong>枚举系统 Cron 任务</strong>，通过检查 /etc/crontab、/etc/cron.d/* 文件内容，查看是否存在用户自定义的任务。</p>
</li>
<li>
<p><strong>枚举用户 Cron 任务</strong>，可通过命令 <code>crontab -l</code> 查看当前用户的自定义任务，而需要查看其它用户的自定义任务，则需借助 <a href="https://github.com/DominicBreuker/pspy" target="_blank" rel="noopener nofollow">PsPy</a> 这个工具进行。</p>
</li>
<li>
<p>有关计划任务的利用方式，通常如下：</p>
<ol>
<li>任务命令非绝对路径，则可能存在 <strong>PATH 路径劫持</strong>。【<a href="https://www.cnblogs.com/kqdssheng/p/18234849#id4" target="_blank">利用方法</a>】</li>
<li>任务命令是绝对路径，则检查命令自身的<strong>文件权限是否可写入</strong>，命令所在的<strong>目录权限是否可写入</strong>。【<a href="https://www.cnblogs.com/kqdssheng/p/18234849#id5" target="_blank">利用方法</a>】</li>
<li>任务命令自身的用法是否存在漏洞，如 find 命令的通配符注入漏洞。【<a href="https://www.cnblogs.com/kqdssheng/p/18234849#id7" target="_blank">参考方法</a>】</li>
</ol>
</li>
<li>
<p><a href="https://www.cnblogs.com/kqdssheng/p/18234849" target="_blank">更多详情</a></p>
</li>
</ol>
<h2 id="伍---文件目录"><div id="id5">伍 - 文件/目录</div></h2>
<p><code>find /etc -maxdepth 1 -writable -type f 2&gt; /dev/null</code></p>
<p><code>find /etc -maxdepth 1 -readable -type f 2&gt; /dev/null</code></p>
<p><code>find / -executable -writable -type d 2&gt; /dev/null</code></p>
<p>重点<strong>文件</strong>：/etc/passwd、/etc/shadow、/etc/sudoers、</p>
<p>重点<strong>目录</strong>：/tmp/、/var/backups/、/etc/init.d/、/usr/lib/systemd/system/、/etc/update-motd.d/、</p>
<h2 id="陆---linux-内核"><div id="id6">陆 - Linux 内核</div></h2>
<ol>
<li><strong>检查内核版本</strong>。【命令 <code>uname -r</code>；或命令 <code>cat /proc/version</code>；或命令 <code>dpkg -l</code> 中搜索 linux-image 关键字；或命令 <code>ls /boot/vmlinuz*</code> ；】</li>
<li>搜索<strong>内核漏洞利用</strong>，使用命令 <code>searchsploit linux kernel *.*</code> 查找漏洞，或在本地借助 <a href="https://github.com/The-Z-Labs/linux-exploit-suggester" target="_blank" rel="noopener nofollow">linux-exploit-suggester</a> 工具 <code>./linux-exploit-suggester.sh -k *.*</code> 查看漏洞建议。【linux-exploit-suggester 工具建议 git 本地拉取定时更新，因为其脚本中的漏洞编号在不断的添加。】</li>
<li>优质内核漏洞利用<strong>推荐</strong>：
<ol>
<li>[Kernels：2.6.0~2.6.37] Half-Nelson/Full-Nelson [获取方式：命令<code>searchsploit nelson</code>，id15704、id17787。]</li>
<li>[Kernels：2.6.39~3.1.0] Memodipper [获取方式：命令<code>searchsploit dipper</code>，id35161。]</li>
<li>[Kernels：2.6.22~3.9] DirtyCow/DirtyCow2 [获取方式：命令<code>searchsploit dirty cow</code>，id40839、id40611。<a href="https://github.com/dirtycow/dirtycow.github.io/wiki/PoCs" target="_blank" rel="noopener nofollow">其它变种</a>。]</li>
<li>[Kernels：4.4.0~4.13.x] eBPF Verifier [获取方式：命令<code>searchsploit 4.13.9</code>，id45010。]</li>
<li><a href="https://github.com/lucyoa/kernel-exploits" target="_blank" rel="noopener nofollow">其它已编译的内核漏洞</a></li>
</ol>
</li>
<li><a href="https://www.cnblogs.com/kqdssheng/p/18231011" target="_blank">更多详情</a>。</li>
</ol>
<blockquote>
<p>注意：Linux 内核漏洞的利用容易造成系统的崩溃，建议仅在黔驴技穷的情况下使用。</p>
</blockquote>
<h2 id="柒---服务程序"><div id="id7">柒 - 服务程序</div></h2>
<blockquote>
<p>在此之前，首先通过命令 <code> ps aux</code> 和 <code>netstat -antp</code> 确定在此系统中有哪些运行的服务可能是我们感兴趣的。</p>
</blockquote>
<h4 id="1mysql-udf"><div id="id7.1">1、MySQL UDF</div></h4>
<ol>
<li>利用条件：(1) mysqld 进程以 root 身份运行。【命令 <code>ps aux | grep mysql</code> 】(2) 拥有高权限的数据库登录账户，如 root。(3) mysql 版本符合 4.x/5.x/[6.x?]。【命令 <code>mysql -V</code>】</li>
<li>利用方法：<a href="https://www.cnblogs.com/kqdssheng/p/18254942" target="_blank">参考链接1</a>、<a href="https://xz.aliyun.com/t/2199?time__1311=n4%2Bxni0%3DE4BD0Djx0ykfDuexgDmEpnnerzoD" target="_blank" rel="noopener nofollow">参考链接2</a>。</li>
<li>获取方式：命令 ``searchsploit mysql udf`，id1518。</li>
</ol>
<h4 id="2nfs-共享"><div id="id7.2">2、NFS 共享</div></h4>
<ol>
<li>利用条件：(1) nfs 进程正在运行。【命令 <code>ps aux | grep nfs</code>】(2) 共享文件夹启用了 no_root_squash 权限，命令 <code>cat /etc/exports</code> 可检查共享文件夹是否存在 no_root_squash 权限。 (3) 远端攻击机可挂载共享并写入 SUID 权限的程序。</li>
<li>利用方法：<a href="https://www.cnblogs.com/kqdssheng/p/18310245" target="_blank">参考链接</a>。</li>
<li>获取方式：无需</li>
</ol>
<h4 id="3docker-容器"><div id="id7.3">3、Docker 容器</div></h4>
<ol>
<li><strong>处于容器外部</strong>的利用条件：(1) dockerd 进程以 root 身份运行。【命令 <code>ps aux | grep dockerd</code>】(2) 用户可以使用 <code>docker images</code> 命令枚举镜像。【非 root 用户只要加入 docker 组便拥有操作 docker 容器的权限。】(3) dockerd 进程以 root 身份运行。(4) 容器内用户以 root 身份运行。【命令 <code>docker run --rm -it alpine sh -c "id"</code>】</li>
<li><strong>处于容器内部</strong>的利用条件1：(1) 当前容器身份是 root 。(2) 该容器是<strong>特权容器</strong>。【命令 <code>fdisk -l | grep -A 10 -i "device"</code> 输出的结果中存在/dev/sda* 这样的文件系统。】</li>
<li><strong>处于容器内部</strong>的利用条件2：(1) 当前容器身份是 root 。(2) 该容器<strong>非特权容器</strong>。(3) 容器启用 CAP_SYS_ADMIN 功能。【命令 <code>capsh --print | grep cap_sys_admin</code> 有输出信息。】(3) 容器中的 AppArmor 功能停止或未加载。【命令 <code>cat /sys/kernel/security/apparmor/profiles</code> 文件不存在。】</li>
<li>利用方法：<a href="https://www.cnblogs.com/kqdssheng/p/18275541" target="_blank">参考链接</a>。</li>
<li>获取方式：无需</li>
</ol>
<h4 id="4lxd-容器"><div id="id7.4">4、LXD 容器</div></h4>
<ol>
<li>利用条件：(1) lxd 进程以 root 身份运行。【命令 <code>ps aux | grep -i lxd\|lxc</code>】(2) 用户可以使用 <code>lxc list</code> 命令枚举镜像。【非 root 用户只要加入 lxd 组便拥有操作 lxd 容器的权限。】</li>
<li>利用方法：<a href="https://www.cnblogs.com/kqdssheng/p/18270185" target="_blank">参考链接</a>。</li>
<li>获取方式：<a href="https://github.com/saghul/lxd-alpine-builder" target="_blank" rel="noopener nofollow">https://github.com/saghul/lxd-alpine-builder</a></li>
</ol>
<h2 id="捌---自动化工具辅助"><div id="id8">捌 - 自动化工具(辅助)</div></h2>
<ol>
<li>PEASS-ng：<a href="https://github.com/peass-ng/PEASS-ng" target="_blank" rel="noopener nofollow">https://github.com/peass-ng/PEASS-ng</a></li>
<li>LinEnum：<a href="https://github.com/rebootuser/LinEnum" target="_blank" rel="noopener nofollow">https://github.com/rebootuser/LinEnum</a></li>
<li>linux-smart-enumeration：<a href="https://github.com/diego-treitos/linux-smart-enumeration" target="_blank" rel="noopener nofollow">https://github.com/diego-treitos/linux-smart-enumeration</a></li>
<li>SUID3NUM：<a href="https://github.com/Anon-Exploiter/SUID3NUM" target="_blank" rel="noopener nofollow">https://github.com/Anon-Exploiter/SUID3NUM</a></li>
</ol>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.36473831038425925" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-16 17:38">2025-01-16 17:31</span>&nbsp;
<a href="https://www.cnblogs.com/kqdssheng">扛枪的书生</a>&nbsp;
阅读(<span id="post_view_count">95</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18675446" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18675446);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18675446', targetLink: 'https://www.cnblogs.com/kqdssheng/p/18675446', title: 'Linux 提权指南' })">举报</a>
</div>
        