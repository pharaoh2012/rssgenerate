
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/helloyaren/p/19054391" title="发布于 2025-08-23 13:36">
    <span role="heading" aria-level="2">Docker Desktop里搭建RabbitMq 4.1.3集群的保姆级教程</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<div>
<blockquote>
<div>最近想自己开发一个小系统，而我的电脑里还没有安装任何的开发相关的配套软件和环境，所以想着方便以后开发的原则，就想从头到尾搭建一个RabbitMq cluster集群环境。一开始觉得这个搭建应该不难，网上有很多现成的资料而且有AI大模型的加持，所以理论上很快能搞定，可结果是我花了大概半天时间才算基本完成环境搭建，因此记录一下整个过程很有必要。</div>
</blockquote>
</div>
<h2>一、涉及软件及环境</h2>
<div>
<table><colgroup><col><col><col></colgroup>
<tbody>
<tr>
<td data-cell-id="l9aN-1755926621673">
<div class="table-cell-line">序号</div>
</td>
<td data-cell-id="pb0L-1755926621676">
<div class="table-cell-line">软件名称</div>
</td>
<td data-cell-id="U79B-1755926621679">
<div class="table-cell-line">版本号</div>
</td>
</tr>
<tr>
<td data-cell-id="GFgO-1755926621683">
<div class="table-cell-line">1</div>
</td>
<td data-cell-id="fotO-1755926621686">
<div class="table-cell-line">Windows 11 家庭中文版</div>
</td>
<td data-cell-id="nNVv-1755926621689">
<div class="table-cell-line">26100.4652</div>
</td>
</tr>
<tr>
<td data-cell-id="umfp-1755926621693">
<div class="table-cell-line">2</div>
</td>
<td data-cell-id="uKHK-1755926621696">
<div class="table-cell-line">Docker Desktop</div>
</td>
<td data-cell-id="YCvq-1755926621699">
<div class="table-cell-line">4.44.2&nbsp;(202017)</div>
</td>
</tr>
</tbody>
</table>
</div>
<h2 id="d1qU-1755926621703">二、Docker Desktop下载&amp;安装</h2>
<div>这个就省略了，请参考《<a href="https://www.cnblogs.com/helloyaren/p/19050950">Docker Desktop里搭建Mysql 9.4主从复制的保姆级教程</a>》相关内容。</div>
<h2>三、RabbitMq 4.1.3下载&amp;安装</h2>
<div>1、在Docker Desktop终端里输入“docker pull rabbitmq:latest”，下载最新的redis镜像，如下：</div>
<div><img alt="0" width="1161" height="378" data-media-type="image" data-src="https://img2024.cnblogs.com/blog/1644550/202508/1644550-20250823133636237-956373052.png" class="lazyload"></div>
<div>
<div>由于我已经下载了，所以这里没有出现下载进度界面，如果想跟我一样的话，请将latest替换成“4.1.3”</div>
</div>
<div>2、创建专用网络</div>
<div data-theme="tomorrow" data-language="bash">
<div class="cnblogs_code">
<pre>docker network create rabbitmq-cluster</pre>
</div>
</div>
<div>3、RabbitMQ节点配置</div>
<div>
<ul>
<li>启动第一个节点（主节点）</li>
</ul>
</div>
<div data-theme="tomorrow" data-language="bash">
<div class="cnblogs_code">
<pre>docker run -d --<span style="color: rgba(0, 0, 255, 1)">hostname</span> rabbit1 --name rabbit1 -p <span style="color: rgba(128, 0, 128, 1)">5672</span>:<span style="color: rgba(128, 0, 128, 1)">5672</span> -p <span style="color: rgba(128, 0, 128, 1)">15672</span>:<span style="color: rgba(128, 0, 128, 1)">15672</span> -e RABBITMQ_ERLANG_COOKIE=<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">cluster-cookie</span><span style="color: rgba(128, 0, 0, 1)">'</span> -e RABBITMQ_NODENAME=rabbit@rabbit1 --network rabbitmq-cluster rabbitmq:latest</pre>
</div>
</div>
<div>
<ul>
<li>启动第二个节点</li>
</ul>
</div>
<div data-theme="tomorrow" data-language="bash">
<div class="cnblogs_code">
<pre>docker run -d --<span style="color: rgba(0, 0, 255, 1)">hostname</span> rabbit2 --name rabbit2 -p <span style="color: rgba(128, 0, 128, 1)">5673</span>:<span style="color: rgba(128, 0, 128, 1)">5672</span> -p <span style="color: rgba(128, 0, 128, 1)">15673</span>:<span style="color: rgba(128, 0, 128, 1)">15672</span> -e RABBITMQ_ERLANG_COOKIE=<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">cluster-cookie</span><span style="color: rgba(128, 0, 0, 1)">'</span> -e RABBITMQ_NODENAME=rabbit@rabbit2 --network rabbitmq-cluster rabbitmq:latest</pre>
</div>
<p>&nbsp;</p>
</div>
<div>
<ul>
<li>启动第三个节点</li>
</ul>
</div>
<div data-theme="tomorrow" data-language="bash">
<div class="cnblogs_code">
<pre>docker run -d --<span style="color: rgba(0, 0, 255, 1)">hostname</span> rabbit3 --name rabbit3 -p <span style="color: rgba(128, 0, 128, 1)">5674</span>:<span style="color: rgba(128, 0, 128, 1)">5672</span> -p <span style="color: rgba(128, 0, 128, 1)">15674</span>:<span style="color: rgba(128, 0, 128, 1)">15672</span> -e RABBITMQ_ERLANG_COOKIE=<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">cluster-cookie</span><span style="color: rgba(128, 0, 0, 1)">'</span> -e RABBITMQ_NODENAME=rabbit@rabbit3 --network rabbitmq-cluster rabbitmq:latest</pre>
</div>
</div>
<div>
<ul>
<li>在docker desktop里能看到3个rabbitmq节点正常启动，如下：</li>
</ul>
</div>
<div><img alt="0" width="1458" height="492" data-media-type="image" data-src="https://img2024.cnblogs.com/blog/1644550/202508/1644550-20250823133636258-1770529942.png" class="lazyload"></div>
<div>4、集群配置步骤</div>
<div>
<ul>
<li>方法一、在docker desktop终端里输入命令，进入rabbit2容器：</li>
</ul>
</div>
<div data-theme="tomorrow" data-language="bash">
<div class="cnblogs_code">
<pre>docker exec -it rabbit2 bash</pre>
</div>
</div>
<div>
<ul>
<li>方法二、直接在docker desktop的Containers里点击rabbit2容器实例的操作，然后在弹出的菜单里点击“Open in terminal”，进入rabbit2的容器终端里，如下</li>
</ul>
</div>
<div><img alt="0" width="1902" height="963" data-media-type="image" data-src="https://img2024.cnblogs.com/blog/1644550/202508/1644550-20250823133636301-7688965.png" class="lazyload"></div>
<div>
<ul>
<li>停止RabbitMQ应用：</li>
</ul>
</div>
<div data-theme="tomorrow" data-language="bash">
<div class="cnblogs_code">
<pre>rabbitmqctl stop_app</pre>
</div>
</div>
<div>
<ul>
<li>加入集群：</li>
</ul>
</div>
<div data-theme="tomorrow" data-language="bash">
<div class="cnblogs_code">
<pre>rabbitmqctl join_cluster rabbit@rabbit1</pre>
</div>
</div>
<div>
<ul>
<li>启动应用：</li>
</ul>
</div>
<div data-theme="tomorrow" data-language="bash">
<div class="cnblogs_code">
<pre>rabbitmqctl start_app</pre>
</div>
</div>
<div>
<ul>
<li>运行终端界面如下：</li>
</ul>
</div>
<div><img alt="0" width="1277" height="374" data-media-type="image" data-src="https://img2024.cnblogs.com/blog/1644550/202508/1644550-20250823133636138-1982403882.png" class="lazyload"></div>
<div>
<ul>
<li>‌重复上述步骤配置rabbit3节点，具体执行命令的界面如下：</li>
</ul>
</div>
<div><img alt="0" width="1119" height="405" data-media-type="image" data-src="https://img2024.cnblogs.com/blog/1644550/202508/1644550-20250823133636187-566967151.png" class="lazyload"></div>
<div>5、验证集群状态</div>
<div>
<ul>
<li>先进入rabbit1的终端命令界面，如下：</li>
</ul>
</div>
<div data-theme="tomorrow" data-language="bash">
<div class="cnblogs_code">
<pre>docker exec -it rabbit1 bash</pre>
</div>
</div>
<div>
<ul>
<li>在终端里直接输入验证命令，如下：</li>
</ul>
</div>
<div data-theme="tomorrow" data-language="bash">
<div class="cnblogs_code">
<pre>rabbitmqctl cluster_status</pre>
</div>
</div>
<div>
<ul>
<li>运行命令后，返回如下信息：</li>
</ul>
</div>
<div><img alt="0" width="1266" height="501" data-media-type="image" data-src="https://img2024.cnblogs.com/blog/1644550/202508/1644550-20250823133636211-56936086.png" class="lazyload"></div>
<div><img alt="0" width="1257" height="456" data-media-type="image" data-src="https://img2024.cnblogs.com/blog/1644550/202508/1644550-20250823133636213-1183324854.png" class="lazyload"></div>
<div><img alt="0" width="1257" height="438" data-media-type="image" data-src="https://img2024.cnblogs.com/blog/1644550/202508/1644550-20250823133636192-266126530.png" class="lazyload"></div>
<div><img alt="0" width="1263" height="438" data-media-type="image" data-src="https://img2024.cnblogs.com/blog/1644550/202508/1644550-20250823133636177-268599017.png" class="lazyload"></div>
<div><img alt="0" width="1251" height="435" data-media-type="image" data-src="https://img2024.cnblogs.com/blog/1644550/202508/1644550-20250823133636229-1724636113.png" class="lazyload"></div>
<div><img alt="0" width="1254" height="455" data-media-type="image" data-src="https://img2024.cnblogs.com/blog/1644550/202508/1644550-20250823133636235-1322735366.png" class="lazyload"></div>
<div><img alt="0" width="1260" height="204" data-media-type="image" data-src="https://img2024.cnblogs.com/blog/1644550/202508/1644550-20250823133636063-207811449.png" class="lazyload"></div>
<div>6、管理界面访问</div>
<div>
<ul>
<li>在浏览器里输入如下访问地址及账户密码‌</li>
</ul>
</div>
<div>
<div>主节点管理界面：<a href="http://localhost:15672" rel="noopener nofollow">http://localhost:15672</a></div>
</div>
<div>
<div>默认用户名/密码：guest/guest</div>
</div>
<div>结果浏览器里输入后，访问不了。经过一番搜索之后找到如下解决方案：</div>
<div>进入rabbit1容器实例的终端，然后输入如下命令：</div>
<div data-theme="tomorrow" data-language="bash">
<div class="cnblogs_code">
<pre>rabbitmq-plugins enable rabbitmq_management</pre>
</div>
</div>
<div>界面如下：</div>
<div><img alt="0" width="1518" height="903" data-media-type="image" data-src="https://img2024.cnblogs.com/blog/1644550/202508/1644550-20250823133636253-1249602794.png" class="lazyload"></div>
<div>这个时候在浏览器里输入访问地址出现登录界面，如下：</div>
<div><img alt="0" width="1697" height="771" data-media-type="image" data-src="https://img2024.cnblogs.com/blog/1644550/202508/1644550-20250823133636162-2031360052.png" class="lazyload"></div>
<div>输入账户密码之后，界面如下：</div>
<div><img alt="0" width="1887" height="1020" data-media-type="image" data-src="https://img2024.cnblogs.com/blog/1644550/202508/1644550-20250823133636232-1161681827.png" class="lazyload"></div>
<div>至此，整个rabbitmq集群就搭建完成了。</div>
<h2>四、总结</h2>
<div>整体搭建过程相对mysql主从复制以及redis 集群搭建来说，要简单一些。也许是有了前面的搭建经验，效率提升不少。遇到问题时候只要借助AI大模型搜索，基本上都能得到解决。这里主要的问题就是搭建之后在浏览器里输入访问地址访问不了，不过这个问题解决起来还算比较容易。</div>
</div>
<div id="MySignature" role="contentinfo">
    <br><br>请扫码关注！！！ <br>
<b>您的关注将是您做的最正确的事情！！！</b>
<br>
大龄码农那些事专注分享大龄码农的点滴。
<br>

本文版权归作者helloyaren和博客园共有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文连接，否则保留追究法律责任的权利。
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-08-23 13:37">2025-08-23 13:36</span>&nbsp;
<a href="https://www.cnblogs.com/helloyaren">helloyaren</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19054391);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19054391', targetLink: 'https://www.cnblogs.com/helloyaren/p/19054391', title: 'Docker Desktop里搭建RabbitMq 4.1.3集群的保姆级教程' })">举报</a>
</div>
        