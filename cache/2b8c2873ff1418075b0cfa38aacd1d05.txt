
    <a name="top"></a>
    <h2><a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/yuweijade/p/18762939" title="发布于 2025-03-10 16:13">
    <span role="heading" aria-level="2">PanWeiDB2.0异构数据库访问测试</span>
    

</a>
</h2>
    <small>
<span id="post-date" data-last-update-days="0.003172402394675926" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-10 16:14">2025-03-10 16:13</span>&nbsp;
<a href="https://www.cnblogs.com/yuweijade">狂澜与玉昆0950</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18762939" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18762939);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18762939', targetLink: 'https://www.cnblogs.com/yuweijade/p/18762939', title: 'PanWeiDB2.0异构数据库访问测试' })">举报</a>
</small>
    <div class="entry">
        <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h1 id="PanWeiDB2.0异构数据库访问测试" data-v-md-heading="panweidb2-0异构数据库访问测试" data-v-md-line="1">PanWeiDB2.0异构数据库访问测试</h1>
<h2 id="异构数据库访问兼容性测试一览表" data-v-md-heading="异构数据库访问兼容性测试一览表" data-v-md-line="3">异构数据库访问兼容性测试一览表</h2>
<table data-v-md-line="5">
<thead>
<tr><th>No</th><th>访问路径</th><th>多维度结果</th><th>备注</th></tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>PanWeiDB（集中式）—访问—PanWeiDB（集中式）</td>
<td>√</td>
<td>支持复杂SQL</td>
</tr>
<tr>
<td>2</td>
<td>PanWeiDB（集中式）—访问—Oracle</td>
<td>√</td>
<td>支持</td>
</tr>
<tr>
<td>3</td>
<td>Oracle—访问—PanWeiDB（集中式）</td>
<td>√</td>
<td>受Oracle默认大写影响，dblink涉及磐维的对象及字段，需要用双引号""括起来。不支持求平均值，偶发性出现链接错误，重新登录正常</td>
</tr>
<tr>
<td>4</td>
<td>PanWeiDB（集中式）—访问—PanWeiDB（分布式）</td>
<td>×</td>
<td>基础select不支持，缺少<code>get_typmod_with_unit</code>系统基础函数</td>
</tr>
<tr>
<td>5</td>
<td>PanWeiDB（分布式）—访问—PanWeiDB（集中式）</td>
<td>×</td>
<td>不支持database link语法，厂商反馈：不支持database link访问磐维集中式</td>
</tr>
<tr>
<td>6</td>
<td>PanWeiDB（集中式）—访问—GoldenDB（分布式）</td>
<td>√</td>
<td>支持简单SQL，需注意与GoldenDB数据交互或者修改时，外部表定义的数据类型可能会出现转换异常的情况</td>
</tr>
<tr>
<td>7</td>
<td>PanWeiDB（集中式）—访问—AntDB（集中式）</td>
<td>×</td>
<td>认证交互错误：<code>DETAIL: expected authentication request from server, but received v</code></td>
</tr>
<tr>
<td>8</td>
<td>AntDB（集中式）—访问—PanWeiDB（集中式）</td>
<td>×</td>
<td>外部表映射错误，ERROR: user mapping not found for “antdb”</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>
</tbody>
</table>
<h2 id="测试过程" data-v-md-heading="测试过程" data-v-md-line="17">测试过程</h2>
<h3 id="1、PanWeiDB访问PanWeiDB" data-v-md-heading="_1、panweidb访问panweidb" data-v-md-line="19">1、PanWeiDB访问PanWeiDB</h3>
<h4 id="测试结果" data-v-md-heading="测试结果" data-v-md-line="21">测试结果</h4>
<table data-v-md-line="23">
<thead>
<tr><th>序号</th><th>复杂度</th><th>具体操作</th><th>结果</th></tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>基本SQL操作</td>
<td>查询远程数据（SELECT）</td>
<td>验证通过</td>
</tr>
<tr>
<td>2</td>
<td>&nbsp;</td>
<td>插入数据到本地表（INSERT）</td>
<td>验证通过</td>
</tr>
<tr>
<td>3</td>
<td>&nbsp;</td>
<td>更新本地表数据（UPDATE）</td>
<td>验证通过</td>
</tr>
<tr>
<td>4</td>
<td>&nbsp;</td>
<td>删除数据（DELETE）</td>
<td>验证通过</td>
</tr>
<tr>
<td>5</td>
<td>复杂SQL操作</td>
<td>多表关联（4表JOIN）</td>
<td>验证通过</td>
</tr>
<tr>
<td>6</td>
<td>&nbsp;</td>
<td>笛卡尔积与过滤条件</td>
<td>验证通过</td>
</tr>
<tr>
<td>7</td>
<td>&nbsp;</td>
<td>嵌套循环（NESTED LOOP）</td>
<td>验证通过</td>
</tr>
<tr>
<td>8</td>
<td>&nbsp;</td>
<td>哈希连接（HASH JOIN）</td>
<td>验证通过</td>
</tr>
<tr>
<td>9</td>
<td>&nbsp;</td>
<td>聚合函数与GROUP BY</td>
<td>验证通过</td>
</tr>
<tr>
<td>10</td>
<td>&nbsp;</td>
<td>子查询与EXISTS</td>
<td>验证通过</td>
</tr>
<tr>
<td>11</td>
<td>&nbsp;</td>
<td>窗口函数与RANK</td>
<td>验证通过</td>
</tr>
<tr>
<td>12</td>
<td>&nbsp;</td>
<td>复杂条件与函数</td>
<td>验证通过</td>
</tr>
</tbody>
</table>
<p data-v-md-line="38">测试账户</p>
<div data-v-md-line="40">
<div class="v-md-pre-wrapper v-md-pre-wrapper- extra-class">
<pre class="v-md-hljs-"><code>create user testuser1 with sysadmin password '3GahEH271';
create database testdb1 owner testuser1;
\q
gsql -r -p 17700 -d testdb1 -U testuser1 -W 3GahEH271
</code></pre>
</div>
</div>
<h4 id="1.1 创建dblink" data-v-md-heading="_1-1-创建dblink" data-v-md-line="47">1.1 创建dblink</h4>
<div data-v-md-line="49">
<div class="v-md-pre-wrapper v-md-pre-wrapper- extra-class">
<pre class="v-md-hljs-"><code>grant all on database testdb1 to testuser1;
GRANT ALL PRIVILEGES ON DATABASE testdb1 TO testuser1;

create extension postgres_fdw;
grant usage on foreign data wrapper postgres_fdw to testuser1;

# 创建到oracle的映射，执行此语句需预先使用 gs_guc generate 命令生成 datasource 文件，此处以如下命令为例：
gs_guc generate -S 'Gs@123456' -D $GAUSSHOME/bin -o usermapping

create database link dblink_pwcrm149 connect to testuser1 identified by '3GahEH271' using postgres_fdw(host '10.183.162.149',port '17700',dbname 'testdb1');
</code></pre>
</div>
</div>
<p data-v-md-line="61"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/42329856/image.png" alt="image.png" height="auto"><br><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/16877614/image.png" alt="image.png" height="auto"><br><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/29328141/image.png" alt="image.png" height="auto"><br><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/29581213/image.png" alt="image.png" height="auto"></p>
<h4 id="2.1 基本SQL操作" data-v-md-heading="_2-1-基本sql操作" data-v-md-line="66"><strong>2.1 基本SQL操作</strong></h4>
<p data-v-md-line="68"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/54698740/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="70"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/22124915/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="72"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/17379760/image.png" alt="image.png" height="auto"></p>
<h4 id="3. 复杂SQL示例" data-v-md-heading="_3-复杂sql示例" data-v-md-line="74"><strong>3. 复杂SQL示例</strong></h4>
<h5 id="3.1 多表关联（4表JOIN）" data-v-md-heading="_3-1-多表关联-4表join" data-v-md-line="76"><strong>3.1 多表关联（4表JOIN）</strong></h5>
<p data-v-md-line="78"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/26856893/image.png" alt="image.png" height="auto"></p>
<h5 id="3.2 笛卡尔积与过滤条件" data-v-md-heading="_3-2-笛卡尔积与过滤条件" data-v-md-line="80"><strong>3.2 笛卡尔积与过滤条件</strong></h5>
<p data-v-md-line="82"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/18549039/image.png" alt="image.png" height="auto"></p>
<h5 id="3.3 嵌套循环（NESTED LOOP）" data-v-md-heading="_3-3-嵌套循环-nested-loop" data-v-md-line="84"><strong>3.3 嵌套循环（NESTED LOOP）</strong></h5>
<p data-v-md-line="86"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/16023296/image.png" alt="image.png" height="auto"></p>
<h5 id="3.4 哈希连接（HASH JOIN）" data-v-md-heading="_3-4-哈希连接-hash-join" data-v-md-line="88"><strong>3.4 哈希连接（HASH JOIN）</strong></h5>
<p data-v-md-line="90"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/26076780/image.png" alt="image.png" height="auto"></p>
<h5 id="3.5 聚合函数与GROUP BY" data-v-md-heading="_3-5-聚合函数与group-by" data-v-md-line="92"><strong>3.5 聚合函数与GROUP BY</strong></h5>
<p data-v-md-line="94"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/23523667/image.png" alt="image.png" height="auto"></p>
<h5 id="3.6 子查询与EXISTS" data-v-md-heading="_3-6-子查询与exists" data-v-md-line="96"><strong>3.6 子查询与EXISTS</strong></h5>
<p data-v-md-line="98"><img src="http://123.57.227.171:82/?wework_cfm_code=NBtpF%2BI3OJqX22x8y6q7mi7suV8n22UYrWH3SONM729zqmeECEy%2FdD33sW040zFmLmadLBo2y1qUPspZhZS3M0s%3D" alt="image-20250305120438474"></p>
<h5 id="3.7 窗口函数与RANK" data-v-md-heading="_3-7-窗口函数与rank" data-v-md-line="100"><strong>3.7 窗口函数与RANK</strong></h5>
<p data-v-md-line="102"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/95961286/image.png" alt="image.png" height="auto"></p>
<h5 id="3.8 复杂条件与函数" data-v-md-heading="_3-8-复杂条件与函数" data-v-md-line="104"><strong>3.8 复杂条件与函数</strong></h5>
<p data-v-md-line="106"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/29808423/image.png" alt="image.png" height="auto"></p>
<h3 id="2、PanWeiDB访问Oracle" data-v-md-heading="_2、panweidb访问oracle" data-v-md-line="108">2、PanWeiDB访问Oracle</h3>
<p data-v-md-line="110">PanWeiDB（PanWeiDB版本升级测试库），访问，Oracle（运维库）</p>
<div data-v-md-line="112">
<div class="v-md-pre-wrapper v-md-pre-wrapper- extra-class">
<pre class="v-md-hljs-"><code>create extension oracle_fdw;
create user cboss_ora password 'cboss_ora@123';
grant usage on foreign data wrapper oracle_fdw to cboss_ora ;
\c - cboss_ora
create server ora_fdw_server foreign data wrapper oracle_fdw
options(dbserver '10.176.240.129:1521/cbosslo');
# gs_guc generate -S 'cboss_ora@123' -D $GAUSSHOME/bin -o usermapping
create user mapping for cboss_ora server ora_fdw_server options(user 'OPERUSER_MY',password 'zvMc!P47dK');
create foreign table emp_fdw_ora(empno int,ename varchar(30)) server ora_fdw_server options(schema 'SYSTEM',table 'EMP_FDW');
create foreign table emp_fdw_ora(empno int,ename varchar(30)) server ora_fdw_server options(schema 'OPERUSER_MY',table 'emp_fdw');
select * from emp_fdw_ora;
insert into emp_fdw_ora values(3,'bar3');
</code></pre>
</div>
</div>
<p data-v-md-line="127"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/89261437/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="129"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/16917776/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="131"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/97664190/image.png" alt="image.png" height="auto"></p>
<h4 id="测试复杂场景" data-v-md-heading="测试复杂场景" data-v-md-line="133">测试复杂场景</h4>
<div data-v-md-line="137">
<div class="v-md-pre-wrapper v-md-pre-wrapper- extra-class">
<pre class="v-md-hljs-"><code>drop table t1;
create table t1 (id number primary key,update_time timestamp);
INSERT INTO t1 (id, update_time) VALUES (1, TO_TIMESTAMP('2025-01-01 10:00:00', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO t1 (id, update_time) VALUES (2, TO_TIMESTAMP('2025-01-02 12:00:00', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO t1 (id, update_time) VALUES (3, TO_TIMESTAMP('2025-01-03 14:00:00', 'YYYY-MM-DD HH24:MI:SS'));
commit;
select * from t1;
drop table t2;
create table t2 (
    id number,
    name varchar2(50),
    t1_id number
);
INSERT INTO t2 (id, name, t1_id) VALUES (101, 'Alice', 1);
INSERT INTO t2 (id, name, t1_id) VALUES (102, 'Bob', 2);
INSERT INTO t2 (id, name, t1_id) VALUES (103, 'Charlie', 3);
commit;
select * from t2;
select * from t1_fdw_ora;
SELECT t1.id, t1.update_time, t2.name
FROM t1_fdw_ora as t1
JOIN t2 as t2 ON t1.id = t2.t1_id;
testdb1=&gt; explain analyze SELECT t1.id, t1.update_time, t2.name
testdb1-&gt; FROM t1_fdw_ora as t1
testdb1-&gt; JOIN t2 as t2 ON t1.id = t2.t1_id;
                                                         QUERY PLAN                                                         
----------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=100.04..114.88 rows=2 width=158) (actual time=1.364..1.404 rows=3 loops=1)
   Hash Cond: (t2.t1_id = t1.id)
   -&gt;  Seq Scan on t2  (cost=0.00..13.85 rows=385 width=150) (actual time=0.023..0.034 rows=3 loops=1)
   -&gt;  Hash  (cost=100.03..100.03 rows=1 width=40) (actual time=1.215..1.215 rows=3 loops=1)
          Buckets: 32768  Batches: 1  Memory Usage: 257kB
         -&gt;  Foreign Scan on t1_fdw_ora t1  (cost=100.00..100.03 rows=1 width=40) (actual time=0.904..1.165 rows=3 loops=1)
 Total runtime: 20.764 ms
(7 rows)

testdb1=&gt; 
</code></pre>
</div>
</div>
<p data-v-md-line="177"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/68642394/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="179"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/89919877/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="181"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/41881334/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="183"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/57242187/image.png" alt="image.png" height="auto"></p>
<h3 id="3、Oracle访问PanWeiDB" data-v-md-heading="_3、oracle访问panweidb" data-v-md-line="185">3、Oracle访问PanWeiDB</h3>
<p data-v-md-line="187">Oracle（DBA运维库），访问，PanWeiDB（PanWeiDB版本升级测试库）</p>
<p data-v-md-line="189"><a href="http://123.57.227.171:82/?wework_cfm_code=NBtpF%2BI3OJqX22x8y6q7mi7suV8n22UYrWH3SONM729zqmeECEy%2FdD33sW040zFmLmadLBo2y1qUPspZhZS3M0s%3D" rel="noopener nofollow">Oracle使用透明网关访问PanWeiDB数据库</a></p>
<p data-v-md-line="191"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/42098768/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="193"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/23419022/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="195"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/40651659/image.png" alt="image.png" height="auto"></p>
<h4 id="3.1 多表关联（4表JOIN）" data-v-md-heading="_3-1-多表关联-4表join-1" data-v-md-line="197"><strong>3.1 多表关联（4表JOIN）</strong></h4>
<div data-v-md-line="199">
<div class="v-md-pre-wrapper v-md-pre-wrapper-sql extra-class">
<pre class="v-md-hljs-sql"><code><span class="hljs-comment">-- 左连接 + 右连接 + 窗口函数
<span class="hljs-keyword">select 
    "ee"."emp_name",
    d.dept_name,
    "pp"."project_name",
    pa.role,
    "ee"."salary"
<span class="hljs-keyword">from "employees"<span class="hljs-variable">@pg_link "ee"
<span class="hljs-keyword">left <span class="hljs-keyword">join departments d <span class="hljs-keyword">on "ee"."department" <span class="hljs-operator">= d.dept_name
<span class="hljs-keyword">right <span class="hljs-keyword">join "projects"<span class="hljs-variable">@pg_link "pp" <span class="hljs-keyword">on d.dept_id <span class="hljs-operator">= "pp"."dept_id"
<span class="hljs-keyword">join project_assignments pa <span class="hljs-keyword">on pa.project_id <span class="hljs-operator">= "pp"."project_id"
<span class="hljs-keyword">where "pp"."start_date" <span class="hljs-operator">&gt; sysdate <span class="hljs-operator">- <span class="hljs-number">365
<span class="hljs-keyword">and "ee"."salary" <span class="hljs-operator">&gt; <span class="hljs-number">6000;
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
</div>
<p data-v-md-line="215">database link涉及磐维对象及字段，需要用双引号""括起来，这受Oracle默认大写影响</p>
<p data-v-md-line="217"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/82923772/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="219">不支持求平均值</p>
<p data-v-md-line="221"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/79441214/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="223">可以查询</p>
<p data-v-md-line="225"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/50515269/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="227"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/87190531/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="229"><strong>偶发性出现链接错误</strong></p>
<p data-v-md-line="231"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/68397106/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="233"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/84314571/image.png" alt="image.png" height="auto"></p>
<h4 id="3.2 笛卡尔积与过滤条件" data-v-md-heading="_3-2-笛卡尔积与过滤条件-1" data-v-md-line="235"><strong>3.2 笛卡尔积与过滤条件</strong></h4>
<div data-v-md-line="237">
<div class="v-md-pre-wrapper v-md-pre-wrapper-sql extra-class">
<pre class="v-md-hljs-sql"><code><span class="hljs-comment">-- 笛卡尔积 + CASE判断
<span class="hljs-keyword">SELECT 
    "ee"."emp_name",
    p.project_name,
    <span class="hljs-keyword">CASE 
        <span class="hljs-keyword">WHEN "ee"."salary" <span class="hljs-operator">&gt; <span class="hljs-number">10000 <span class="hljs-keyword">THEN <span class="hljs-string">'High'
        <span class="hljs-keyword">WHEN "ee"."salary" <span class="hljs-keyword">BETWEEN <span class="hljs-number">5000 <span class="hljs-keyword">AND <span class="hljs-number">10000 <span class="hljs-keyword">THEN <span class="hljs-string">'Medium'
        <span class="hljs-keyword">ELSE <span class="hljs-string">'Low'
    <span class="hljs-keyword">END <span class="hljs-keyword">AS salary_level
<span class="hljs-keyword">FROM "employees"<span class="hljs-variable">@pg_link "ee", projects p
<span class="hljs-keyword">WHERE p.dept_id <span class="hljs-operator">= <span class="hljs-number">1
<span class="hljs-keyword">AND "ee"."department" <span class="hljs-operator">= <span class="hljs-string">'IT';
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
</div>
<p data-v-md-line="252">执行计划</p>
<p data-v-md-line="254"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/82224802/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="256"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/45647984/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="258"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/99134740/image.png" alt="image.png" height="auto"></p>
<h4 id="3.3 嵌套循环（NESTED LOOP）" data-v-md-heading="_3-3-嵌套循环-nested-loop-1" data-v-md-line="260"><strong>3.3 嵌套循环（NESTED LOOP）</strong></h4>
<div data-v-md-line="262">
<div class="v-md-pre-wrapper v-md-pre-wrapper-sql extra-class">
<pre class="v-md-hljs-sql"><code><span class="hljs-comment">-- 强制使用NESTED LOOP（提示方式）
<span class="hljs-keyword">SELECT <span class="hljs-comment">/*+ USE_NL(e "dd") */
    e.emp_id,
    "dd"."dept_name"
<span class="hljs-keyword">FROM employees e
<span class="hljs-keyword">JOIN "departments"<span class="hljs-variable">@pg_link "dd" <span class="hljs-keyword">ON e.department <span class="hljs-operator">= "dd"."dept_name"
<span class="hljs-keyword">WHERE "dd"."budget" <span class="hljs-operator">&gt; <span class="hljs-number">500000;
</span></span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
</div>
<p data-v-md-line="272"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/96882896/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="274"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/23739740/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="276"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/97573402/image.png" alt="image.png" height="auto"></p>
<h4 id="3.4 哈希连接（HASH JOIN）" data-v-md-heading="_3-4-哈希连接-hash-join-1" data-v-md-line="278"><strong>3.4 哈希连接（HASH JOIN）</strong></h4>
<div data-v-md-line="280">
<div class="v-md-pre-wrapper v-md-pre-wrapper-sql extra-class">
<pre class="v-md-hljs-sql"><code><span class="hljs-comment">-- 强制使用HASH JOIN
<span class="hljs-keyword">SELECT <span class="hljs-comment">/*+ USE_HASH(pa "pp") */
    pa.assignment_id,
    "pp"."project_name"
<span class="hljs-keyword">FROM project_assignments pa
<span class="hljs-keyword">JOIN "projects"<span class="hljs-variable">@pg_link "pp" <span class="hljs-keyword">ON pa.project_id <span class="hljs-operator">= "pp"."project_id"
<span class="hljs-keyword">WHERE "pp"."end_date" <span class="hljs-operator">&gt; SYSDATE;
</span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
</div>
<p data-v-md-line="290"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/42254831/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="292"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/91456200/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="294"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/19305445/image.png" alt="image.png" height="auto"></p>
<h4 id="3.5 聚合函数与GROUP BY" data-v-md-heading="_3-5-聚合函数与group-by-1" data-v-md-line="296"><strong>3.5 聚合函数与GROUP BY</strong></h4>
<div data-v-md-line="298">
<div class="v-md-pre-wrapper v-md-pre-wrapper-sql extra-class">
<pre class="v-md-hljs-sql"><code><span class="hljs-comment">-- 聚合函数 + HAVING
<span class="hljs-keyword">SELECT 
    "dd"."dept_name",
    <span class="hljs-built_in">COUNT(e.emp_id) <span class="hljs-keyword">AS total_employees,
    <span class="hljs-built_in">SUM(e.salary) <span class="hljs-keyword">AS total_salary
<span class="hljs-keyword">FROM "departments"<span class="hljs-variable">@pg_link "dd"
<span class="hljs-keyword">LEFT <span class="hljs-keyword">JOIN employees e <span class="hljs-keyword">ON "dd"."dept_name" <span class="hljs-operator">= e.department
<span class="hljs-keyword">GROUP <span class="hljs-keyword">BY "dd"."dept_name"
<span class="hljs-keyword">HAVING <span class="hljs-built_in">SUM(e.salary) <span class="hljs-operator">&gt; <span class="hljs-number">100000;
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
</div>
<p data-v-md-line="310"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/56413930/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="312"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/74069748/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="314"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/29113929/image.png" alt="image.png" height="auto"></p>
<h4 id="3.6 子查询与EXISTS" data-v-md-heading="_3-6-子查询与exists-1" data-v-md-line="316"><strong>3.6 子查询与EXISTS</strong></h4>
<div data-v-md-line="318">
<div class="v-md-pre-wrapper v-md-pre-wrapper-sql extra-class">
<pre class="v-md-hljs-sql"><code><span class="hljs-comment">-- EXISTS子查询
<span class="hljs-keyword">SELECT 
    e.emp_name
<span class="hljs-keyword">FROM employees e
<span class="hljs-keyword">WHERE <span class="hljs-keyword">EXISTS (
    <span class="hljs-keyword">SELECT <span class="hljs-number">1 
    <span class="hljs-keyword">FROM "project_assignments"<span class="hljs-variable">@pg_link "pa"
    <span class="hljs-keyword">WHERE "pa"."emp_id" <span class="hljs-operator">= e.emp_id
    <span class="hljs-keyword">AND "pa"."role" <span class="hljs-operator">= <span class="hljs-string">'Manager'
);
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
</div>
<p data-v-md-line="331"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/79001534/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="333"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/32132579/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="335"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/67516525/image.png" alt="image.png" height="auto"></p>
<h4 id="3.7 窗口函数与RANK" data-v-md-heading="_3-7-窗口函数与rank-1" data-v-md-line="337"><strong>3.7 窗口函数与RANK</strong></h4>
<div data-v-md-line="339">
<div class="v-md-pre-wrapper v-md-pre-wrapper-sql extra-class">
<pre class="v-md-hljs-sql"><code><span class="hljs-comment">-- RANK()窗口函数
<span class="hljs-keyword">SELECT 
    "emp_name",
    "salary",
    <span class="hljs-built_in">RANK() <span class="hljs-keyword">OVER (<span class="hljs-keyword">ORDER <span class="hljs-keyword">BY "salary" <span class="hljs-keyword">DESC) <span class="hljs-keyword">AS salary_rank
<span class="hljs-keyword">FROM "employees"<span class="hljs-variable">@pg_link
<span class="hljs-keyword">WHERE "department" <span class="hljs-operator">= <span class="hljs-string">'IT';
</span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
</div>
<p data-v-md-line="349"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/25405460/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="351"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/55946773/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="353"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/74018493/image.png" alt="image.png" height="auto"></p>
<h4 id="3.8 复杂条件与函数" data-v-md-heading="_3-8-复杂条件与函数-1" data-v-md-line="355"><strong>3.8 复杂条件与函数</strong></h4>
<div data-v-md-line="357">
<div class="v-md-pre-wrapper v-md-pre-wrapper-sql extra-class">
<pre class="v-md-hljs-sql"><code><span class="hljs-comment">-- 字符串函数 + 日期计算
<span class="hljs-keyword">SELECT 
    "ee"."emp_name",
    <span class="hljs-built_in">UPPER(d.dept_name) <span class="hljs-keyword">AS dept_upper,
    ADD_MONTHS("ee"."hire_date", <span class="hljs-number">12) <span class="hljs-keyword">AS hire_anniversary
<span class="hljs-keyword">FROM "employees"<span class="hljs-variable">@pg_link "ee"
<span class="hljs-keyword">JOIN departments d <span class="hljs-keyword">ON "ee"."department" <span class="hljs-operator">= d.dept_name
<span class="hljs-keyword">WHERE TO_CHAR("ee"."hire_date", <span class="hljs-string">'YYYY') <span class="hljs-operator">= <span class="hljs-string">'2023'
<span class="hljs-keyword">AND LENGTH("ee"."emp_name") <span class="hljs-operator">&gt; <span class="hljs-number">5;
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
</div>
<p data-v-md-line="369"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/94047247/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="371"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/91660579/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="373"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/85044317/image.png" alt="image.png" height="auto"></p>
<h3 id="4、集中式PanWeiDB访问分布式PanWeiDB" data-v-md-heading="_4、集中式panweidb访问分布式panweidb" data-v-md-line="375">4、集中式PanWeiDB访问分布式PanWeiDB</h3>
<p data-v-md-line="377">PanWeiDB（PanWeiDB版本升级测试库），访问，PanWeiDB分布式（计费系统）</p>
<h4 id="测试结果" data-v-md-heading="测试结果-1" data-v-md-line="379">测试结果</h4>
<table data-v-md-line="381">
<thead>
<tr><th>序号</th><th>复杂度</th><th>具体操作</th><th>结果</th></tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>基本SQL操作</td>
<td>查询远程数据（SELECT）</td>
<td>测试未通过</td>
</tr>
</tbody>
</table>
<p data-v-md-line="385">测试账户</p>
<div data-v-md-line="387">
<div class="v-md-pre-wrapper v-md-pre-wrapper- extra-class">
<pre class="v-md-hljs-"><code>create user testuser2 with sysadmin password '3GahEH271';
create database testdb1 owner testuser2;
\q
gsql -r -p 17700 -d testdb1 -U testuser2 -W 3GahEH271
</code></pre>
</div>
</div>
<h4 id="1.1 创建dblink" data-v-md-heading="_1-1-创建dblink-1" data-v-md-line="394">1.1 创建dblink</h4>
<div data-v-md-line="396">
<div class="v-md-pre-wrapper v-md-pre-wrapper- extra-class">
<pre class="v-md-hljs-"><code>create database link dblink_jfjsxt19098 connect to testuser2 identified by '3GahEH271' using postgres_fdw(host '10.183.190.98',port '17700',dbname 'testdb1');
</code></pre>
</div>
</div>
<p data-v-md-line="400"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/20767337/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="402"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/53776446/image.png" alt="image.png" height="auto"></p>
<h4 id="2.1 基本SQL操作" data-v-md-heading="_2-1-基本sql操作-1" data-v-md-line="404"><strong>2.1 基本SQL操作</strong></h4>
<p data-v-md-line="406"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/02968639/image.png" alt="image.png" height="auto"></p>
<div data-v-md-line="408">
<div class="v-md-pre-wrapper v-md-pre-wrapper- extra-class">
<pre class="v-md-hljs-"><code>testdb1=&gt; SELECT * FROM employees@dblink_jfjsxt19098 WHERE department = 'IT';
ERROR:  function get_typmod_with_unit(integer, text[]) does not exist
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
CONTEXT:  Remote SQL command: SELECT a.attname,
  (case pg_catalog.format_type(a.atttypid, get_typmod_with_unit(a.atttypmod, a.attoptions)) when 'oradate' then 'date' else pg_catalog.format_type(a.atttypid, get_typmod_with_unit(a.atttypmod, a.attoptions)) end)
  FROM pg_catalog.pg_attribute a
  WHERE a.attrelid = (select oid from pg_class where relname='employees' and relnamespace=(select oid from pg_namespace where nspname='testuser2'))
  AND a.attnum &gt; 0 AND NOT a.attisdropped AND a.attkvtype != 4 AND a.attname &lt;&gt; 'tableoid' AND a.attname &lt;&gt; 'tablebucketid'
  ORDER BY a.attnum;
referenced column: format_type
testdb1=&gt; 
</code></pre>
</div>
</div>
<p data-v-md-line="422">磐维集中式数据库-SQL执行正常</p>
<p data-v-md-line="424"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/53912284/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="426">磐维分布式数据库-SQL无法执行</p>
<p data-v-md-line="428"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/82760364/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="430">磐维分布式数据库缺少函数“get_typmod_with_unit”，导致集中式数据库访问分布式数据库时，无法执行查询：</p>
<p data-v-md-line="432">查询&nbsp;<code>pg_attribute</code>&nbsp;系统表，检索有关表&nbsp;<code>employees</code>&nbsp;的列信息，以获取列名和数据类型信息，</p>
<p data-v-md-line="434"><code>get_typmod_with_unit</code>&nbsp;是一个系统函数，用于从类型修饰符中提取单位信息。</p>
<p data-v-md-line="436">它的作用是将类型修饰符转换为更易读的格式</p>
<p data-v-md-line="438">手动创建函数get_typmod_with_unit</p>
<div data-v-md-line="440">
<div class="v-md-pre-wrapper v-md-pre-wrapper- extra-class">
<pre class="v-md-hljs-"><code>CREATE OR REPLACE FUNCTION get_typmod_with_unit(typmod integer, options text[])
RETURNS integer
AS $$
DECLARE
    unit integer;
BEGIN
    -- 从类型修饰符中提取单位信息
    -- 这里是一个示例逻辑，实际逻辑可能需要根据你的数据库系统进行调整
    unit := typmod % 1000; -- 假设单位信息存储在 typmod 的低三位

    -- 返回提取的单位信息
    RETURN unit;
END;
$$ LANGUAGE plpgsql;

</code></pre>
</div>
</div>
<p data-v-md-line="458"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/11158444/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="460">磐维集中式dblink访问</p>
<p data-v-md-line="462"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/29399005/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="464">查询报错，依然缺少函数“get_typmod_with_unit”函数，暂无方案解决（20250305）。</p>
<h3 id="5、分布式PanWeiDB访问集中式PanWeiDB" data-v-md-heading="_5、分布式panweidb访问集中式panweidb" data-v-md-line="466">5、分布式PanWeiDB访问集中式PanWeiDB</h3>
<p data-v-md-line="468">PanWeiDB分布式（结算系统（计费系统-计费云详单）），访问，PanWeiDB（PanWeiDB版本升级测试库）</p>
<p data-v-md-line="470"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/24182189/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="472">分布式磐维数据库，暂不支持dblink</p>
<h3 id="6、PanWeiDB访问GoldenDB" data-v-md-heading="_6、panweidb访问goldendb" data-v-md-line="474">6、PanWeiDB访问GoldenDB</h3>
<p data-v-md-line="476">PanWeiDB（PanWeiDB版本升级测试库），访问，GoldenDB分布式（中台中心）</p>
<p data-v-md-line="478">数据类型略微调整</p>
<div data-v-md-line="480">
<div class="v-md-pre-wrapper v-md-pre-wrapper- extra-class">
<pre class="v-md-hljs-"><code>create extension mysql_fdw;
grant usage on foreign data wrapper mysql_fdw to testuser1;
create server goldendb_fdw_server foreign data wrapper mysql_fdw options(HOST '10.183.200.193',PORT '8880');
create user mapping for testuser1 server goldendb_fdw_server options(username 'testuser1',password '3GahEH271!');
create foreign table employees_fdw_goldendb (
    emp_id NUMBER(10) ,
    emp_name VARCHAR2(50) NOT NULL,
    hire_date DATE,
    salary NUMBER(10, 2),
    department VARCHAR2(50),
    resume CLOB,
    photo BLOB
) server goldendb_fdw_server options(DBNAME 'testdb1',table_name 'employees');
create foreign table departments_fdw_goldendb (
    dept_id NUMBER(10),
    dept_name VARCHAR2(50) ,
    manager_id NUMBER(10),
    budget NUMBER(15, 2)
) server goldendb_fdw_server options(DBNAME 'testdb1',table_name 'departments');
create foreign table projects_fdw_goldendb (
    project_id NUMBER(10),
    project_name VARCHAR2(100),
    start_date DATE,
    end_date DATE,
    dept_id NUMBER(10)
) server goldendb_fdw_server options(DBNAME 'testdb1',table_name 'projects');
create foreign table project_assignments_fdw_goldendb (
    assignment_id NUMBER(10) ,
    emp_id NUMBER(10),
    project_id NUMBER(10),
    role VARCHAR2(50)
) server goldendb_fdw_server options(DBNAME 'testdb1',table_name 'project_assignments');

</code></pre>
</div>
</div>
<p data-v-md-line="516"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/12968812/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="518"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/57831573/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="520"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/62314886/image.png" alt="image.png" height="auto"></p>
<h4 id="基本SQL操作" data-v-md-heading="基本sql操作" data-v-md-line="522"><strong>基本SQL操作</strong></h4>
<p data-v-md-line="524"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/62999694/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="526"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/53344727/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="528"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/31246521/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="530">根据错误信息，问题出在数据类型转换上。具体来说，磐维无法将常量值的数据类型（1399）转换为GoldenDB 的数据类型。这通常发生在使用外部表（FDW，Foreign Data Wrapper）时，数据类型不匹配。</p>
<h4 id="错误分析" data-v-md-heading="错误分析" data-v-md-line="532">错误分析</h4>
<ol data-v-md-line="534">
<li>
<p data-v-md-line="534"><strong>数据类型不匹配</strong></p>
<ul data-v-md-line="535">
<li>错误信息&nbsp;<code>cannot convert constant value to MySQL value</code>&nbsp;表明，磐维 无法将某个常量值转换为 GoldenDB 的数据类型。</li>
<li><code>Constant value data type: 1399</code>&nbsp;表示常量值的数据类型是 1399，这可能是 GoldenDB 中的&nbsp;<code>DECIMAL</code>&nbsp;类型。</li>
</ul>
</li>
<li>
<p data-v-md-line="538"><strong>外部表定义问题</strong></p>
<ul data-v-md-line="539">
<li>外部表&nbsp;<code>employees_fdw_goldendb</code>&nbsp;的定义可能与GoldenDB 表的结构不完全匹配。</li>
</ul>
</li>
</ol>
<h5 id="解决方案" data-v-md-heading="解决方案" data-v-md-line="541">解决方案</h5>
<ol data-v-md-line="543">
<li>
<p data-v-md-line="543"><strong>检查外部表定义</strong></p>
<ul data-v-md-line="544">
<li>确保外部表&nbsp;<code>employees_fdw_goldendb</code>&nbsp;的定义与GoldenDB 表的结构完全匹配。</li>
<li>使用&nbsp;<code>SHOW CREATE TABLE</code>&nbsp;或&nbsp;<code>DESCRIBE</code>&nbsp;命令检查 GoldenDB 表的结构。</li>
</ul>
</li>
<li>
<p data-v-md-line="547"><strong>修改外部表定义</strong></p>
<ul data-v-md-line="548">
<li>如果数据类型不匹配，修改外部表的定义，使其与 GoldenDB 表的结构一致。</li>
<li>例如，如果 GoldenDB 表中的&nbsp;<code>emp_id</code>&nbsp;是&nbsp;<code>INT</code>&nbsp;类型，确保外部表中的&nbsp;<code>emp_id</code>&nbsp;也是&nbsp;<code>INT</code>&nbsp;类型。</li>
</ul>
</li>
<li>
<p data-v-md-line="551"><strong>检查常量值的数据类型</strong></p>
<ul data-v-md-line="552">
<li>确保插入或查询时使用的常量值的数据类型与外部表的定义匹配。</li>
<li>如果需要，使用显式类型转换。</li>
</ul>
</li>
</ol>
<h4 id="MySQL_FDW功能描述" data-v-md-heading="mysql-fdw功能描述" data-v-md-line="555">MySQL_FDW功能描述</h4>
<p data-v-md-line="557">外部表，支持select查询、dml操作。</p>
<p data-v-md-line="559">支持创建外部数据封装器mysql_fdw，连接MariaDB或MySQL或者GoldenDB数据库，并能在外部表上进行查询、插入、更新和删除操作。</p>
<p data-v-md-line="561">mysql_fdw插件默认参与编译，用户可直接使用mysql_fdw，无须其他操作。</p>
<p data-v-md-line="563"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/44962151/image.png" alt="image.png" height="auto"></p>
<h3 id="7、GoldenDB访问PanWeiDB" data-v-md-heading="_7、goldendb访问panweidb" data-v-md-line="565">7、GoldenDB访问PanWeiDB</h3>
<p data-v-md-line="567">GoldenDB分布式（中台中心），访问，PanWeiDB（PanWeiDB版本升级测试库）</p>
<h3 id="8、PanWeiDB访问AntDB" data-v-md-heading="_8、panweidb访问antdb" data-v-md-line="569">8、PanWeiDB访问AntDB</h3>
<p data-v-md-line="571">PanWeiDB（PanWeiDB版本升级测试库），访问，AntDB（财务系统）</p>
<p data-v-md-line="573">创建扩展</p>
<div data-v-md-line="575">
<div class="v-md-pre-wrapper v-md-pre-wrapper- extra-class">
<pre class="v-md-hljs-"><code>-- 本地数据库创建表
-- 表1: employees (员工表)
CREATE TABLE employees (
    emp_id int PRIMARY KEY,
    emp_name VARCHAR(50) NOT NULL,
    hire_date DATE,
    salary int,
    department VARCHAR(50),
    resume text,
    photo text
);

-- 表2: departments (部门表)
CREATE TABLE departments (
    dept_id int PRIMARY KEY,
    dept_name VARCHAR(50) UNIQUE,
    manager_id int,
    budget int,
    CONSTRAINT fk_manager FOREIGN KEY (manager_id) REFERENCES employees(emp_id)
);

-- 表3: projects (项目表)
CREATE TABLE projects (
    project_id int PRIMARY KEY,
    project_name VARCHAR(100),
    start_date DATE,
    end_date DATE,
    dept_id int,
    CONSTRAINT fk_dept FOREIGN KEY (dept_id) REFERENCES departments(dept_id)
);

-- 表4: project_assignments (项目分配表)
CREATE TABLE project_assignments (
    assignment_id int PRIMARY KEY,
    emp_id int,
    project_id int,
    role VARCHAR(50),
    CONSTRAINT fk_emp FOREIGN KEY (emp_id) REFERENCES employees(emp_id),
    CONSTRAINT fk_project FOREIGN KEY (project_id) REFERENCES projects(project_id)
);

-- 创建索引
CREATE INDEX idx_emp_dept ON employees(department);
CREATE INDEX idx_proj_dept ON projects(dept_id);
CREATE INDEX idx_assign_role ON project_assignments(role);
</code></pre>
</div>
</div>
<p data-v-md-line="623">插入数据</p>
<div data-v-md-line="625">
<div class="v-md-pre-wrapper v-md-pre-wrapper- extra-class">
<pre class="v-md-hljs-"><code>-- 插入员工数据
DO $$
BEGIN
    FOR i IN 1..1000 LOOP
        INSERT INTO employees VALUES (
            i,
            'Employee' || i,
            CURRENT_DATE - MOD(i, 365),
            5000 + MOD(i, 10000),
            CASE MOD(i, 4)
                WHEN 0 THEN 'IT'
                WHEN 1 THEN 'HR'
                WHEN 2 THEN 'Finance'
                ELSE 'Sales'
            END,
            'aaaaaaaaaa',
            'bbbbbbbbbb'
        );
    END LOOP;
END;
$$;


-- 插入部门数据
INSERT INTO departments VALUES (1, 'IT', 100, 1000000);
INSERT INTO departments VALUES (2, 'HR', 200, 500000);

-- 插入项目数据
INSERT INTO projects VALUES (101, 'ERP System', CURRENT_DATE-100, CURRENT_DATE+200, 1);
INSERT INTO projects VALUES (102, 'HR Portal', CURRENT_DATE-50, CURRENT_DATE+100, 2);

-- 插入项目分配数据
DO $$
BEGIN
    FOR i IN 1..500 LOOP
        INSERT INTO project_assignments VALUES (
        i,
        MOD(i, 1000) + 1,
        CASE MOD(i, 2) WHEN 0 THEN 101 ELSE 102 END,
        CASE MOD(i, 3) WHEN 0 THEN 'Developer' WHEN 1 THEN 'Tester' ELSE 'Manager' END
        );
    END LOOP;
END;
$$;

</code></pre>
</div>
</div>
<p data-v-md-line="673"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/66913879/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="675"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/11117941/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="677"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/69878854/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="679">不支持使用dblink直接访问</p>
<div data-v-md-line="681">
<div class="v-md-pre-wrapper v-md-pre-wrapper- extra-class">
<pre class="v-md-hljs-"><code>testdb1=&gt; SELECT * FROM employees@dblink_antdb WHERE department = 'IT';
ERROR: could not connect to server "dblink_antdb"
DETAIL: expected authentication request from server, but received v
testdb1=&gt;
</code></pre>
</div>
</div>
<p data-v-md-line="688">认证错误</p>
<p data-v-md-line="690">使用外部表的方式访问</p>
<div data-v-md-line="692">
<div class="v-md-pre-wrapper v-md-pre-wrapper- extra-class">
<pre class="v-md-hljs-"><code>create extension postgres_fdw;
grant usage on foreign data wrapper postgres_fdw to testuser1;
create server antdb_fdw_server foreign data wrapper postgres_fdw options(HOST '10.183.103.130',PORT '5432');
create user mapping for testuser1 server antdb_fdw_server options(user 'testuser1',password '3GahEH271!');
create foreign table employees_fdw_antdb (
    emp_id NUMBER(10) ,
    emp_name VARCHAR2(50) NOT NULL,
    hire_date DATE,
    salary NUMBER(10, 2),
    department VARCHAR2(50),
    resume CLOB,
    photo BLOB
) server antdb_fdw_server options(schema_name 'public',table_name 'employees');
create foreign table departments_fdw_antdb (
    dept_id NUMBER(10),
    dept_name VARCHAR2(50) ,
    manager_id NUMBER(10),
    budget NUMBER(15, 2)
) server antdb_fdw_server options(schema_name 'public',table_name 'departments');
create foreign table projects_fdw_antdb (
    project_id NUMBER(10),
    project_name VARCHAR2(100),
    start_date DATE,
    end_date DATE,
    dept_id NUMBER(10)
) server antdb_fdw_server options(schema_name 'public',table_name 'projects');
create foreign table project_assignments_fdw_antdb (
    assignment_id NUMBER(10) ,
    emp_id NUMBER(10),
    project_id NUMBER(10),
    role VARCHAR2(50)
) server antdb_fdw_server options(schema_name 'public',table_name 'project_assignments');

</code></pre>
</div>
</div>
<p data-v-md-line="728"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/30148679/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="730"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/17718683/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="732"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/94643732/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="734">依然无法访问。</p>
<h3 id="9、AntDB访问PanWeiDB" data-v-md-heading="_9、antdb访问panweidb" data-v-md-line="736">9、AntDB访问PanWeiDB</h3>
<p data-v-md-line="738">AntDB（财务系统、全面预算系统），访问，PanWeiDB（PanWeiDB版本升级测试库）</p>
<div data-v-md-line="740">
<div class="v-md-pre-wrapper v-md-pre-wrapper- extra-class">
<pre class="v-md-hljs-"><code>create extension postgres_fdw;
grant usage on foreign data wrapper postgres_fdw to testuser1;
create server panweidb_fdw_server foreign data wrapper postgres_fdw options(HOST '10.183.162.150',PORT '17700',dbname 'testdb1');
create user mapping for testuser1 server panweidb_fdw_server options(user 'testuser1',password '3GahEH271');
create foreign table employees_fdw_panweidb (
    emp_id int ,
    emp_name VARCHAR(50) NOT NULL,
    hire_date DATE,
    salary int,
    department VARCHAR(50),
    resume text,
    photo text
) server panweidb_fdw_server options(schema_name 'public',table_name 'employees');

</code></pre>
</div>
</div>
<p data-v-md-line="757"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/65773056/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="759">不支持number、varchar2、clob、blob</p>
<p data-v-md-line="761"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/67205693/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="763"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/94860416/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="765"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/24457707/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="767">无法访问外部表</p>
<p data-v-md-line="769"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/46453785/image.png" alt="image.png" height="auto"></p>
<p data-v-md-line="771"><img src="https://bucket-mvs.oss-cn-beijing.aliyuncs.com/doc/20250310/26908140/image.png" alt="image.png" height="auto"></p>
<h1 id="测试用例" data-v-md-heading="测试用例" data-v-md-line="773">测试用例</h1>
<p data-v-md-line="775">以下是一个基于Oracle数据库使用DBLink的详细案例，包含测试用例、完整SQL语句及复杂查询示例：</p>
<hr data-v-md-line="777">
<h3 id="1. 测试用例设计" data-v-md-heading="_1-测试用例设计" data-v-md-line="779"><strong>1. 测试用例设计</strong></h3>
<h4 id="1.1 创建测试表及约束" data-v-md-heading="_1-1-创建测试表及约束" data-v-md-line="781"><strong>1.1 创建测试表及约束</strong></h4>
<div data-v-md-line="783">
<div class="v-md-pre-wrapper v-md-pre-wrapper-sql extra-class">
<pre class="v-md-hljs-sql"><code><span class="hljs-comment">-- 本地数据库创建表
<span class="hljs-comment">-- 表1: employees (员工表)
<span class="hljs-keyword">CREATE <span class="hljs-keyword">TABLE employees (
    emp_id NUMBER(<span class="hljs-number">10) <span class="hljs-keyword">PRIMARY KEY,
    emp_name VARCHAR2(<span class="hljs-number">50) <span class="hljs-keyword">NOT <span class="hljs-keyword">NULL,
    hire_date <span class="hljs-type">DATE,
    salary NUMBER(<span class="hljs-number">10, <span class="hljs-number">2),
    department VARCHAR2(<span class="hljs-number">50),
    resume <span class="hljs-type">CLOB,
    photo <span class="hljs-type">BLOB
);

<span class="hljs-comment">-- 表2: departments (部门表)
<span class="hljs-keyword">CREATE <span class="hljs-keyword">TABLE departments (
    dept_id NUMBER(<span class="hljs-number">10) <span class="hljs-keyword">PRIMARY KEY,
    dept_name VARCHAR2(<span class="hljs-number">50) <span class="hljs-keyword">UNIQUE,
    manager_id NUMBER(<span class="hljs-number">10),
    budget NUMBER(<span class="hljs-number">15, <span class="hljs-number">2),
    <span class="hljs-keyword">CONSTRAINT fk_manager <span class="hljs-keyword">FOREIGN KEY (manager_id) <span class="hljs-keyword">REFERENCES employees(emp_id)
);

<span class="hljs-comment">-- 表3: projects (项目表)
<span class="hljs-keyword">CREATE <span class="hljs-keyword">TABLE projects (
    project_id NUMBER(<span class="hljs-number">10) <span class="hljs-keyword">PRIMARY KEY,
    project_name VARCHAR2(<span class="hljs-number">100),
    start_date <span class="hljs-type">DATE,
    end_date <span class="hljs-type">DATE,
    dept_id NUMBER(<span class="hljs-number">10),
    <span class="hljs-keyword">CONSTRAINT fk_dept <span class="hljs-keyword">FOREIGN KEY (dept_id) <span class="hljs-keyword">REFERENCES departments(dept_id)
);

<span class="hljs-comment">-- 表4: project_assignments (项目分配表)
<span class="hljs-keyword">CREATE <span class="hljs-keyword">TABLE project_assignments (
    assignment_id NUMBER(<span class="hljs-number">10) <span class="hljs-keyword">PRIMARY KEY,
    emp_id NUMBER(<span class="hljs-number">10),
    project_id NUMBER(<span class="hljs-number">10),
    role VARCHAR2(<span class="hljs-number">50),
    <span class="hljs-keyword">CONSTRAINT fk_emp <span class="hljs-keyword">FOREIGN KEY (emp_id) <span class="hljs-keyword">REFERENCES employees(emp_id),
    <span class="hljs-keyword">CONSTRAINT fk_project <span class="hljs-keyword">FOREIGN KEY (project_id) <span class="hljs-keyword">REFERENCES projects(project_id)
);

<span class="hljs-comment">-- 创建索引
<span class="hljs-keyword">CREATE INDEX idx_emp_dept <span class="hljs-keyword">ON employees(department);
<span class="hljs-keyword">CREATE INDEX idx_proj_dept <span class="hljs-keyword">ON projects(dept_id);
<span class="hljs-keyword">CREATE INDEX idx_assign_role <span class="hljs-keyword">ON project_assignments(role);
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
</div>
<h4 id="1.2 插入测试数据（通过PL/SQL循环）" data-v-md-heading="_1-2-插入测试数据-通过pl-sql循环" data-v-md-line="831"><strong>1.2 插入测试数据（通过PL/SQL循环）</strong></h4>
<div data-v-md-line="833">
<div class="v-md-pre-wrapper v-md-pre-wrapper-sql extra-class">
<pre class="v-md-hljs-sql"><code><span class="hljs-comment">-- 插入员工数据
<span class="hljs-keyword">BEGIN
  <span class="hljs-keyword">FOR i <span class="hljs-keyword">IN <span class="hljs-number">1.<span class="hljs-number">.1000 LOOP
    <span class="hljs-keyword">INSERT <span class="hljs-keyword">INTO employees <span class="hljs-keyword">VALUES (
      i,
      <span class="hljs-string">'Employee' <span class="hljs-operator">|| i,
      SYSDATE <span class="hljs-operator">- <span class="hljs-built_in">MOD(i, <span class="hljs-number">365),
      <span class="hljs-number">5000 <span class="hljs-operator">+ <span class="hljs-built_in">MOD(i, <span class="hljs-number">10000),
      <span class="hljs-keyword">CASE <span class="hljs-built_in">MOD(i, <span class="hljs-number">4) <span class="hljs-keyword">WHEN <span class="hljs-number">0 <span class="hljs-keyword">THEN <span class="hljs-string">'IT' <span class="hljs-keyword">WHEN <span class="hljs-number">1 <span class="hljs-keyword">THEN <span class="hljs-string">'HR' <span class="hljs-keyword">WHEN <span class="hljs-number">2 <span class="hljs-keyword">THEN <span class="hljs-string">'Finance' <span class="hljs-keyword">ELSE <span class="hljs-string">'Sales' <span class="hljs-keyword">END,
      EMPTY_CLOB(),
      EMPTY_BLOB()
    );
  <span class="hljs-keyword">END LOOP;
<span class="hljs-keyword">END;
<span class="hljs-operator">/

<span class="hljs-comment">-- 插入部门数据
<span class="hljs-keyword">INSERT <span class="hljs-keyword">INTO departments <span class="hljs-keyword">VALUES (<span class="hljs-number">1, <span class="hljs-string">'IT', <span class="hljs-number">100, <span class="hljs-number">1000000);
<span class="hljs-keyword">INSERT <span class="hljs-keyword">INTO departments <span class="hljs-keyword">VALUES (<span class="hljs-number">2, <span class="hljs-string">'HR', <span class="hljs-number">200, <span class="hljs-number">500000);

<span class="hljs-comment">-- 插入项目数据
<span class="hljs-keyword">INSERT <span class="hljs-keyword">INTO projects <span class="hljs-keyword">VALUES (<span class="hljs-number">101, <span class="hljs-string">'ERP System', SYSDATE<span class="hljs-number">-100, SYSDATE<span class="hljs-operator">+<span class="hljs-number">200, <span class="hljs-number">1);
<span class="hljs-keyword">INSERT <span class="hljs-keyword">INTO projects <span class="hljs-keyword">VALUES (<span class="hljs-number">102, <span class="hljs-string">'HR Portal', SYSDATE<span class="hljs-number">-50, SYSDATE<span class="hljs-operator">+<span class="hljs-number">100, <span class="hljs-number">2);

<span class="hljs-comment">-- 插入项目分配数据
<span class="hljs-keyword">BEGIN
  <span class="hljs-keyword">FOR i <span class="hljs-keyword">IN <span class="hljs-number">1.<span class="hljs-number">.500 LOOP
    <span class="hljs-keyword">INSERT <span class="hljs-keyword">INTO project_assignments <span class="hljs-keyword">VALUES (
      i,
      <span class="hljs-built_in">MOD(i, <span class="hljs-number">1000) <span class="hljs-operator">+ <span class="hljs-number">1,
      <span class="hljs-keyword">CASE <span class="hljs-built_in">MOD(i, <span class="hljs-number">2) <span class="hljs-keyword">WHEN <span class="hljs-number">0 <span class="hljs-keyword">THEN <span class="hljs-number">101 <span class="hljs-keyword">ELSE <span class="hljs-number">102 <span class="hljs-keyword">END,
      <span class="hljs-keyword">CASE <span class="hljs-built_in">MOD(i, <span class="hljs-number">3) <span class="hljs-keyword">WHEN <span class="hljs-number">0 <span class="hljs-keyword">THEN <span class="hljs-string">'Developer' <span class="hljs-keyword">WHEN <span class="hljs-number">1 <span class="hljs-keyword">THEN <span class="hljs-string">'Tester' <span class="hljs-keyword">ELSE <span class="hljs-string">'Manager' <span class="hljs-keyword">END
    );
  <span class="hljs-keyword">END LOOP;
<span class="hljs-keyword">END;
<span class="hljs-operator">/
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
</div>
<hr data-v-md-line="872">
<h3 id="2. DBLink配置与基本SQL" data-v-md-heading="_2-dblink配置与基本sql" data-v-md-line="874"><strong>2. DBLink配置与基本SQL</strong></h3>
<h4 id="2.1 创建DBLink" data-v-md-heading="_2-1-创建dblink" data-v-md-line="876"><strong>2.1 创建DBLink</strong></h4>
<div data-v-md-line="878">
<div class="v-md-pre-wrapper v-md-pre-wrapper-sql extra-class">
<pre class="v-md-hljs-sql"><code><span class="hljs-comment">-- 创建到远程数据库的DBLink（假设远程数据库名为remote_db）
<span class="hljs-comment">-- CREATE DATABASE LINK remote_db_link
<span class="hljs-comment">-- CONNECT TO remote_user IDENTIFIED BY remote_password
<span class="hljs-comment">-- USING 'remote_db';

<span class="hljs-keyword">grant <span class="hljs-keyword">all <span class="hljs-keyword">on database testdb1 <span class="hljs-keyword">to testuser1;
<span class="hljs-keyword">create extension postgres_fdw;
<span class="hljs-keyword">grant usage <span class="hljs-keyword">on <span class="hljs-keyword">foreign data wrapper postgres_fdw <span class="hljs-keyword">to testuser1;

# 创建到oracle的映射，执行此语句需预先使用 gs_guc generate 命令生成 datasource 文件，此处以如下命令为例：
gs_guc generate <span class="hljs-operator">-S <span class="hljs-string">'Gs@123456' <span class="hljs-operator">-D $GAUSSHOME<span class="hljs-operator">/bin <span class="hljs-operator">-o usermapping

<span class="hljs-keyword">create database link dblink_pwcrm149 <span class="hljs-keyword">connect <span class="hljs-keyword">to testuser1 identified <span class="hljs-keyword">by <span class="hljs-string">'3GahEH271' <span class="hljs-keyword">using postgres_fdw(host <span class="hljs-string">'10.183.162.149',port <span class="hljs-string">'17700',dbname <span class="hljs-string">'testdb1');
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
</div>
<h4 id="2.2 基本SQL操作" data-v-md-heading="_2-2-基本sql操作" data-v-md-line="894"><strong>2.2 基本SQL操作</strong></h4>
<div data-v-md-line="896">
<div class="v-md-pre-wrapper v-md-pre-wrapper-sql extra-class">
<pre class="v-md-hljs-sql"><code><span class="hljs-comment">-- 查询远程数据（SELECT）
<span class="hljs-keyword">SELECT <span class="hljs-operator">* <span class="hljs-keyword">FROM employees<span class="hljs-variable">@dblink_pwcrm149 <span class="hljs-keyword">WHERE department <span class="hljs-operator">= <span class="hljs-string">'IT';

<span class="hljs-comment">-- 插入数据到本地表（INSERT）
<span class="hljs-keyword">INSERT <span class="hljs-keyword">INTO employees
<span class="hljs-keyword">SELECT <span class="hljs-operator">* <span class="hljs-keyword">FROM employees<span class="hljs-variable">@dblink_pwcrm149 <span class="hljs-keyword">WHERE emp_id <span class="hljs-operator">&gt; <span class="hljs-number">500;

<span class="hljs-comment">-- 更新本地表数据（UPDATE）
<span class="hljs-keyword">UPDATE employees e
<span class="hljs-keyword">SET e.salary <span class="hljs-operator">= e.salary <span class="hljs-operator">* <span class="hljs-number">1.1
<span class="hljs-keyword">WHERE <span class="hljs-keyword">EXISTS (
  <span class="hljs-keyword">SELECT dept_id <span class="hljs-keyword">FROM departments<span class="hljs-variable">@dblink_pwcrm149 d
  <span class="hljs-keyword">WHERE d.dept_name <span class="hljs-operator">= e.department <span class="hljs-keyword">AND d.dept_name <span class="hljs-operator">= <span class="hljs-string">'IT'
);

<span class="hljs-comment">-- 删除数据（DELETE）
<span class="hljs-keyword">DELETE <span class="hljs-keyword">FROM project_assignments
<span class="hljs-keyword">WHERE project_id <span class="hljs-keyword">IN (
  <span class="hljs-keyword">SELECT project_id <span class="hljs-keyword">FROM projects<span class="hljs-variable">@dblink_pwcrm149 <span class="hljs-keyword">WHERE dept_id <span class="hljs-operator">= <span class="hljs-number">1
);
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
</div>
<hr data-v-md-line="919">
<h3 id="3. 复杂SQL示例" data-v-md-heading="_3-复杂sql示例-1" data-v-md-line="921"><strong>3. 复杂SQL示例</strong></h3>
<h4 id="3.1 多表关联（4表JOIN）" data-v-md-heading="_3-1-多表关联-4表join-2" data-v-md-line="923"><strong>3.1 多表关联（4表JOIN）</strong></h4>
<div data-v-md-line="925">
<div class="v-md-pre-wrapper v-md-pre-wrapper-sql extra-class">
<pre class="v-md-hljs-sql"><code><span class="hljs-comment">-- 左连接 + 右连接 + 窗口函数
<span class="hljs-keyword">SELECT 
    e.emp_name,
    d.dept_name,
    p.project_name,
    pa.role,
    <span class="hljs-built_in">AVG(e.salary) <span class="hljs-keyword">OVER (<span class="hljs-keyword">PARTITION <span class="hljs-keyword">BY d.dept_id) <span class="hljs-keyword">AS avg_dept_salary
<span class="hljs-keyword">FROM employees<span class="hljs-variable">@dblink_pwcrm149 e
<span class="hljs-keyword">LEFT <span class="hljs-keyword">JOIN departments d <span class="hljs-keyword">ON e.department <span class="hljs-operator">= d.dept_name
<span class="hljs-keyword">RIGHT <span class="hljs-keyword">JOIN projects<span class="hljs-variable">@dblink_pwcrm149 p <span class="hljs-keyword">ON d.dept_id <span class="hljs-operator">= p.dept_id
<span class="hljs-keyword">JOIN project_assignments pa <span class="hljs-keyword">ON pa.project_id <span class="hljs-operator">= p.project_id
<span class="hljs-keyword">WHERE p.start_date <span class="hljs-operator">&gt; SYSDATE <span class="hljs-operator">- <span class="hljs-number">365
<span class="hljs-keyword">AND e.salary <span class="hljs-operator">&gt; <span class="hljs-number">6000;
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
</div>
<h4 id="3.2 笛卡尔积与过滤条件" data-v-md-heading="_3-2-笛卡尔积与过滤条件-2" data-v-md-line="941"><strong>3.2 笛卡尔积与过滤条件</strong></h4>
<div data-v-md-line="943">
<div class="v-md-pre-wrapper v-md-pre-wrapper-sql extra-class">
<pre class="v-md-hljs-sql"><code><span class="hljs-comment">-- 笛卡尔积 + CASE判断
<span class="hljs-keyword">SELECT 
    e.emp_name,
    p.project_name,
    <span class="hljs-keyword">CASE 
        <span class="hljs-keyword">WHEN e.salary <span class="hljs-operator">&gt; <span class="hljs-number">10000 <span class="hljs-keyword">THEN <span class="hljs-string">'High'
        <span class="hljs-keyword">WHEN e.salary <span class="hljs-keyword">BETWEEN <span class="hljs-number">5000 <span class="hljs-keyword">AND <span class="hljs-number">10000 <span class="hljs-keyword">THEN <span class="hljs-string">'Medium'
        <span class="hljs-keyword">ELSE <span class="hljs-string">'Low'
    <span class="hljs-keyword">END <span class="hljs-keyword">AS salary_level
<span class="hljs-keyword">FROM employees<span class="hljs-variable">@dblink_pwcrm149 e, projects p
<span class="hljs-keyword">WHERE p.dept_id <span class="hljs-operator">= <span class="hljs-number">1
<span class="hljs-keyword">AND e.department <span class="hljs-operator">= <span class="hljs-string">'IT';
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
</div>
<h4 id="3.3 嵌套循环（NESTED LOOP）" data-v-md-heading="_3-3-嵌套循环-nested-loop-2" data-v-md-line="958"><strong>3.3 嵌套循环（NESTED LOOP）</strong></h4>
<div data-v-md-line="960">
<div class="v-md-pre-wrapper v-md-pre-wrapper-sql extra-class">
<pre class="v-md-hljs-sql"><code><span class="hljs-comment">-- 强制使用NESTED LOOP（提示方式）
<span class="hljs-keyword">SELECT <span class="hljs-comment">/*+ USE_NL(e d) */
    e.emp_id,
    d.dept_name
<span class="hljs-keyword">FROM employees e
<span class="hljs-keyword">JOIN departments<span class="hljs-variable">@dblink_pwcrm149 d <span class="hljs-keyword">ON e.department <span class="hljs-operator">= d.dept_name
<span class="hljs-keyword">WHERE d.budget <span class="hljs-operator">&gt; <span class="hljs-number">500000;
</span></span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
</div>
<h4 id="3.4 哈希连接（HASH JOIN）" data-v-md-heading="_3-4-哈希连接-hash-join-2" data-v-md-line="970"><strong>3.4 哈希连接（HASH JOIN）</strong></h4>
<div data-v-md-line="972">
<div class="v-md-pre-wrapper v-md-pre-wrapper-sql extra-class">
<pre class="v-md-hljs-sql"><code><span class="hljs-comment">-- 强制使用HASH JOIN
<span class="hljs-keyword">SELECT <span class="hljs-comment">/*+ USE_HASH(pa p) */
    pa.assignment_id,
    p.project_name
<span class="hljs-keyword">FROM project_assignments pa
<span class="hljs-keyword">JOIN projects<span class="hljs-variable">@dblink_pwcrm149 p <span class="hljs-keyword">ON pa.project_id <span class="hljs-operator">= p.project_id
<span class="hljs-keyword">WHERE p.end_date <span class="hljs-operator">&gt; SYSDATE;
</span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
</div>
<h4 id="3.5 聚合函数与GROUP BY" data-v-md-heading="_3-5-聚合函数与group-by-2" data-v-md-line="982"><strong>3.5 聚合函数与GROUP BY</strong></h4>
<div data-v-md-line="984">
<div class="v-md-pre-wrapper v-md-pre-wrapper-sql extra-class">
<pre class="v-md-hljs-sql"><code><span class="hljs-comment">-- 聚合函数 + HAVING
<span class="hljs-keyword">SELECT 
    d.dept_name,
    <span class="hljs-built_in">COUNT(e.emp_id) <span class="hljs-keyword">AS total_employees,
    <span class="hljs-built_in">SUM(e.salary) <span class="hljs-keyword">AS total_salary
<span class="hljs-keyword">FROM departments<span class="hljs-variable">@dblink_pwcrm149 d
<span class="hljs-keyword">LEFT <span class="hljs-keyword">JOIN employees e <span class="hljs-keyword">ON d.dept_name <span class="hljs-operator">= e.department
<span class="hljs-keyword">GROUP <span class="hljs-keyword">BY d.dept_name
<span class="hljs-keyword">HAVING <span class="hljs-built_in">SUM(e.salary) <span class="hljs-operator">&gt; <span class="hljs-number">100000;
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
</div>
<h4 id="3.6 子查询与EXISTS" data-v-md-heading="_3-6-子查询与exists-2" data-v-md-line="996"><strong>3.6 子查询与EXISTS</strong></h4>
<div data-v-md-line="998">
<div class="v-md-pre-wrapper v-md-pre-wrapper-sql extra-class">
<pre class="v-md-hljs-sql"><code><span class="hljs-comment">-- EXISTS子查询
<span class="hljs-keyword">SELECT 
    e.emp_name
<span class="hljs-keyword">FROM employees e
<span class="hljs-keyword">WHERE <span class="hljs-keyword">EXISTS (
    <span class="hljs-keyword">SELECT <span class="hljs-number">1 
    <span class="hljs-keyword">FROM project_assignments<span class="hljs-variable">@dblink_pwcrm149 pa
    <span class="hljs-keyword">WHERE pa.emp_id <span class="hljs-operator">= e.emp_id
    <span class="hljs-keyword">AND pa.role <span class="hljs-operator">= <span class="hljs-string">'Manager'
);
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
</div>
<h4 id="3.7 窗口函数与RANK" data-v-md-heading="_3-7-窗口函数与rank-2" data-v-md-line="1010"><strong>3.7 窗口函数与RANK</strong></h4>
<div data-v-md-line="1012">
<div class="v-md-pre-wrapper v-md-pre-wrapper-sql extra-class">
<pre class="v-md-hljs-sql"><code><span class="hljs-comment">-- RANK()窗口函数
<span class="hljs-keyword">SELECT 
    emp_name,
    salary,
    <span class="hljs-built_in">RANK() <span class="hljs-keyword">OVER (<span class="hljs-keyword">ORDER <span class="hljs-keyword">BY salary <span class="hljs-keyword">DESC) <span class="hljs-keyword">AS salary_rank
<span class="hljs-keyword">FROM employees<span class="hljs-variable">@dblink_pwcrm149
<span class="hljs-keyword">WHERE department <span class="hljs-operator">= <span class="hljs-string">'IT';
</span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
</div>
<h4 id="3.8 复杂条件与函数" data-v-md-heading="_3-8-复杂条件与函数-2" data-v-md-line="1022"><strong>3.8 复杂条件与函数</strong></h4>
<div data-v-md-line="1024">
<div class="v-md-pre-wrapper v-md-pre-wrapper-sql extra-class">
<pre class="v-md-hljs-sql"><code><span class="hljs-comment">-- 字符串函数 + 日期计算
<span class="hljs-keyword">SELECT 
    e.emp_name,
    <span class="hljs-built_in">UPPER(d.dept_name) <span class="hljs-keyword">AS dept_upper,
    ADD_MONTHS(e.hire_date, <span class="hljs-number">12) <span class="hljs-keyword">AS hire_anniversary
<span class="hljs-keyword">FROM employees<span class="hljs-variable">@dblink_pwcrm149 e
<span class="hljs-keyword">JOIN departments d <span class="hljs-keyword">ON e.department <span class="hljs-operator">= d.dept_name
<span class="hljs-keyword">WHERE TO_CHAR(e.hire_date, <span class="hljs-string">'YYYY') <span class="hljs-operator">= <span class="hljs-string">'2023'
<span class="hljs-keyword">AND LENGTH(e.emp_name) <span class="hljs-operator">&gt; <span class="hljs-number">5;
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
</div>
</div>
<h3 id="总结" data-v-md-heading="总结" data-v-md-line="1036"><strong>总结</strong></h3>
<ul data-v-md-line="1038">
<li><strong>测试用例</strong>：覆盖了多表结构、索引、约束及循环插入数据。</li>
<li><strong>DBLink操作</strong>：实现了跨数据库的增删改查。</li>
<li><strong>复杂SQL</strong>：包含多表关联、窗口函数、不同连接算法及优化提示。</li>
</ul>
<p data-v-md-line="1042">通过以上案例，可以从多个维度测试不同数据库DBLink的功能性和性能，同时满足复杂业务场景需求。</p>
</div>
<div id="MySignature" role="contentinfo">
    我报路长嗟日暮，学诗谩有惊人句。
九万里风鹏正举。风休住，蓬舟吹取三山去！ 
</div>
<div class="clear"></div>

        <div class="clear"></div>
        
</div>
    <ul class="postmetadata">
        <vc:categories-tags blog-app="yuweijade" blog-id="486229" post-id="18762939"></vc:categories-tags>
    </ul>
