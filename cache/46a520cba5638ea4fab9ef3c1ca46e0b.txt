
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/du-hong/p/17994186" title="发布于 2025-08-15 16:25">
    <span role="heading" aria-level="2">Python零基础从入门到精通详细教程2-变量与常量</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h3>1.简介</h3>
<p>程序就是用来处理数据的，而变量就是用来存储数据的。好呀，那我们今天就来聊聊 Python 中的变量吧！这可是编程里的一个重要概念哦。</p>
<h3>2.变量的定义</h3>
<p>变量，英文名叫做variable，是计算机语言中能储存计算结果或能表示值的抽象概念。变量，你可以把它想象成一个装东西的盒子。这个盒子可以装不同类型的东西，比如数字、文字、甚至是更复杂的数据。在 Python 里，变量就是用来存储数据的。</p>
<p>在《计算机科学概述》中，变量是这样定义的：“高级程序设计语言允许使用描述性的名字指向主存储器中的位置，而不必再使用数字地址，这样的名字称为变量（variable）。之所以是这样取名是因为，随着程序的执行，只要改变存储在这个位置里的值，那么与改名字相联系的值就会改变。”</p>
<h3>3.初识变量</h3>
<p>变量–数据的容器–计算机的本质就是和各种数据打交道。</p>
<p>编程中有很多的数据可能会反复使用,每次都重写很笨,所以就把它保存起来,取个好理解的名字,要用的时候直接使用就可以。</p>
<p>在计算机里我们的变量是由3个东西组成的：</p>
<p>1.数据类型(type)</p>
<p>2.内存地址(id)</p>
<p>3.值(value)</p>
<p>可以把变量想象成为一个仓库:</p>
<p>1.数据类型–&gt;仓库类型<br>2.内存地址–&gt;仓库地址<br>3.变量值–&gt;仓库里放的东西</p>
<p>在Python中，变量是一个用于存储数据值的容器。与一些其他编程语言不同，Python中的变量不需要显式声明类型；它们会根据分配给它们的值自动确定类型。这意味着你可以将整数、浮点数、字符串、列表、元组、字典、集合等不同类型的值赋给同一个变量，但每次赋值后，变量的类型会随之改变。</p>
<h3>4.变量名</h3>
<p>变量可以使用短名称（如 x 和 y）或更具描述性的名称（age、carname、total_volume）。</p>
<h3>5.变量命名规则</h3>
<p>在Python中，变量名必须遵循以下规则：</p>
<p>只能包含字母、数字和下划线：变量名可以包含字母（a-z, A-Z）、数字（0-9）以及下划线（_）。</p>
<p>不能以数字开头：变量名不能以数字开头，但可以在名称的其余部分包含数字。</p>
<p>区分大小写：Python是大小写敏感的，因此myVar和myvar会被视为两个不同的变量。</p>
<p>不能使用Python的保留字：Python有一些保留字（也称为关键字），如if、for、class等，这些词不能用作变量名。</p>
<h4>5.1 命名规则1（蛇形命名）</h4>
<pre><code>1.= 号两边各留一个空格
2.变量名由超过两个以上的单词组成，每个单词之间由下划线链接
3.每个单词都小写
4.first_name,my_school_num 
</code></pre>
<h4>5.2 命名规则2（驼峰命名）</h4>
<pre><code>小驼峰：
1.第一个单词小写开始，后续单词大写
2.firstName

大驼峰：
1.每个单词的首字母都大写
2.FirstName</code></pre>
<h3>6.变量使用规范</h3>
<p>使用变量时，需要遵守一些规则。违反这些规则将引发错误。</p>
<p>~变量名只能包含数字、字母、下划线。变量名不能以数字开头以及不能包含空格。</p>
<p>~变量名不能将Python保留字和函数名作为变量名。如print等</p>
<p>如下是python3的33个保留字列表：</p>
<p><img src="https://img2018.cnblogs.com/blog/1008644/201903/1008644-20190325105531997-1116734281.png" alt="" class="medium-zoom-image"></p>
<p>~变量名要简单又具有描述性。如name比n好，user_name比u_n好。</p>
<p>~慎用大写字母I和O，避免看错成数字1和0。</p>
<h3>7.变量的声明和赋值</h3>
<p>Python 变量的赋值指的是将数据放入变量的过程。在Python中，变量的声明和赋值是同时进行的。当你将一个值赋给一个变量时，Python会自动声明这个变量。</p>
<h4>7.1Python中的变量不需要声明类型</h4>
<p>这是根据Python的动态语言特性而来。变量可以直接使用，而不需要提前声明类型。例如下面的a，b，c，d四个变量，在使用前没有进行任何的诸如 int a, str b, list c , int d 的类型声明，而这在C语言和JAVA编程语言中是必须要携带的。例如：</p>
<div class="cnblogs_code">
<pre> a = 4<span style="color: rgba(0, 0, 0, 1)">
 b </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">haha</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
 c </span>=<span style="color: rgba(0, 0, 0, 1)"> []
 d </span>= 9-5</pre>
</div>
<h4>7.2用“=”号来给变量赋值</h4>
<div class="cnblogs_code">
<pre>a = 100</pre>
</div>
<p>这里的等号要理解并读作“赋值”，而不是“等于”，“赋值”是对变量的操作，而“等于”是对两个变量进行比较。上面的a，b，c，d四个变量，就通过“=”号，赋予了不同的值。</p>
<h4>7.3每个变量在使用前都必须赋值，变量赋值以后才会被创建。</h4>
<p>新的变量通过赋值的动作，创建并开辟内存空间，保存值。如果没有赋值而直接使用会抛出赋值前引用的异常或者未命名异常。例如：</p>
<div class="cnblogs_code">
<pre>a       <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 孤单单一个a，什么也表示不了，只能报错</span>
a = 1   <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 这样就没问题了，解释器知道a是个新变量了</span>
c.append(1)     <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> c是个什么鬼？</span></pre>
</div>
<p>没有赋值报错如下：</p>
<p>NameError: name ‘a’ is not defined<br>NameError: name ‘c’ is not defined</p>
<h4>变量的作用：昵称其代指内存里某个地址中保存的内容。</h4>
<h4>7.4变量的赋值</h4>
<p>Python 中的变量赋值不需要类型声明。每个变量在内存中创建，都包括变量的标识，名称和数据这些信息。每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建。等号（=）用来给变量赋值。等号（=）运算符左边是一个变量名,等号（=）运算符右边是存储在变量中的值。</p>
<p>1.单个变量赋值语法：<strong><code>变量名称 = 值</code></strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span><span style="color: rgba(0, 0, 0, 1)">
name1 </span>= <span style="color: rgba(128, 0, 0, 1)">"北京-宏哥</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)"><br></span></pre>
</div>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202412/1232840-20241224144157808-68150170.png" alt="" width="523" height="262" loading="lazy"></p>
<p>2.多个变量赋值（同时给多个变量赋相同的值）语法：<strong>变量名称 = 变量名称 = 变量名称 = 值</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>
<span style="color: rgba(0, 0, 0, 1)">
name1</span>=name2 = <span style="color: rgba(128, 0, 0, 1)">"北京-宏哥</span><span style="color: rgba(128, 0, 0, 1)">"</span></pre>
</div>
<p>或者：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>
<span style="color: rgba(0, 0, 0, 1)">
name1 </span>= <span style="color: rgba(128, 0, 0, 1)">"北京-宏哥</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
name2 </span>= name1</pre>
</div>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202412/1232840-20241224144955094-228499932.png" alt="" width="534" height="297" loading="lazy"></p>
<p>3.多个变量赋值（同时给多个变量赋不同的值）语法：<strong>变量名称1 , 变量名称2 , 变量名称3 = 值1 , 值2 ，值3</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>
<span style="color: rgba(0, 0, 0, 1)">
name1, name2 </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">北京-宏哥</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">宏哥</span><span style="color: rgba(128, 0, 0, 1)">"</span></pre>
</div>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202412/1232840-20241224144530610-1712488286.png" alt="" width="548" height="298" loading="lazy"></p>
<h4>7.5变量的值交换</h4>
<p>实例，如下：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>
<span style="color: rgba(0, 0, 0, 1)">
name1, name2 </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">北京-宏哥</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">宏哥</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
name1, name2 </span>= name2, name1</pre>
</div>
<h3>8.变量类型</h3>
<p>在内存中创建一个变量，会包括:</p>
<ul>
<li>变量名称</li>
<li>变量保存的数据</li>
<li>变量存储数据的类型</li>
<li>变量的地址 (标示)</li>
</ul>
<p>变量存储在内存中的值。这就意味着在创建变量时会在内存中开辟一个空间。基于变量的数据类型，解释器会分配指定内存，并决定什么数据可以被存储在内存中。因此，变量可以指定不同的数据类型，这些变量可以存储整数，小数或字符。</p>
<p>在Python中，变量本身没有数据类型的概念通常所说的“变量类型”是变量所引用的对象的类型，或者说是变量的值的类型。</p>
<pre class="highlighter-hljs"><code class="prism language-python highlighter-hljs hljs">a = <span class="hljs-number">1
a = <span class="hljs-string">"haha"
a = [<span class="hljs-number">1, <span class="hljs-number">2, <span class="hljs-number">3]
a = { <span class="hljs-string">"k1":<span class="hljs-string">"v1"}
</span></span></span></span></span></span></span></code></pre>
<p>变量a在创建的时候，赋予了值为1的整数类型，然后又被改成字符串“haha”，再又变成一个列表，最后是个字典。变量a在动态的改变，它的值分别是不同的数据类型，这是动态语言的特点。</p>
<h3>9.“=”号这个赋值运算符是从右往左的计算顺序</h3>
<pre class="highlighter-hljs"><code class="prism language-python highlighter-hljs hljs">a = <span class="hljs-number">1
b = <span class="hljs-number">2
c = a + b  <span class="hljs-comment"># 先计算a+b的值，再赋给c
<span class="hljs-built_in">print(c)
</span></span></span></span></code></pre>
<h3>10.Python允许同时为多个变量赋值</h3>
<pre class="highlighter-hljs"><code class="highlighter-hljs hljs language-r">（例如：a <span class="hljs-operator">= b <span class="hljs-operator">= <span class="hljs-built_in">c <span class="hljs-operator">= <span class="hljs-number">1，最终大家都是<span class="hljs-number">1）。也可以同时为多个变量赋值，用逗号分隔，逐一对应。
</span></span></span></span></span></span></code></pre>
<p>例如：a, b, c = 1, 2, 3，最后a是1，b是2，c是3。</p>
<p>不要把赋值语句的等号等同于数学的等号。</p>
<pre class="highlighter-hljs"><code class="prism language-python highlighter-hljs hljs">x = <span class="hljs-number">1
x = x + <span class="hljs-number">2
</span></span></code></pre>
<p>如果从数学上理解x = x + 2那无论如何是不成立的，在程序中，赋值语句先计算右侧的表达式x + 2，得到结果3，再赋给变量x。由于x之前的值是1，重新赋值后，x的值变成3。</p>
<p>a = 'ABC’时，Python解释器干了两件事情：</p>
<pre class="highlighter-hljs"><code class="highlighter-hljs hljs language-markdown"><span class="hljs-bullet">1. 在内存中创建了一个‘ABC’的字符串对象；

<span class="hljs-bullet">2. 在内存中创建了一个名为a的变量，并把它指向'ABC'。

 也可以把一个变量a赋值给另一个变量b，这个操作实际上是将变量b指向变量a所指向的数据，

例如下面的代码：
</span></span></code></pre>
<pre class="highlighter-hljs"><code class="prism language-python highlighter-hljs hljs">a = <span class="hljs-string">'Jack'
b = a
a = <span class="hljs-string">'Tom'
<span class="hljs-built_in">print(b)
<span class="hljs-built_in">print(a)
</span></span></span></span></code></pre>
<p>最后变量b的内容到底是’Jack’还是’Tom’？如果从数学意义上理解，就会错误地得出b和a相同是‘Tom’，但实际上b的值还是’Jack ‘!</p>
<p>请牢记：Python中的一切都是对象，变量是对象的引用！</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202412/1232840-20241224145457464-828030321.png" alt="" loading="lazy"></p>
<p>执行a = ‘Jack’，解释器创建字符串‘Jack’对象和变量a，并把a指向‘Jack’对象；</p>
<p>执行b = a，解释器创建变量b，并且将其指向变量a指向的字符串‘Jack’对象；</p>
<p>执行a = ‘Tom’，解释器创建字符串‘Tom’对象，并把a改为指向‘Tom’对象，与b无关。</p>
<h3>11.常量</h3>
<p>常量就是不变的变量，比如常用的数学常数圆周率就是一个常量。在Python中，通常用全部大写的变量名表示常量：</p>
<pre class="highlighter-hljs"><code class="prism language-python highlighter-hljs hljs">PI = <span class="hljs-number">3.14159265359
</span></code></pre>
<p>但事实上，从Python语法角度看，PI仍然是一个变量，因为Python根本没有任何机制保证PI不会被改变。你完全可以给PI赋值为10，不会弹出任何错误。所以，用全部大写的变量名表示常量只是一个习惯上的用法。</p>
<p>常量通常放置在代码的最上部，并作为全局使用。</p>
<h3>12.变量内存地址变化</h3>
<p>文章的最后，讲点比较深奥的东西。在Python中，变量的内存地址标识码可以用id()命令来查看。</p>
<h4>12.1变量的内存地址</h4>
<p>在Python中，变量并不是直接存储数据本身，而是存储了对数据对象的引用（或者说是“指针”的概念，尽管Python内部并不直接使用“指针”这个词）。这意味着变量实际上存储的是数据对象在内存中的地址。然而，由于Python的内存管理机制（包括垃圾回收机制），直接暴露内存地址给开发者并不是Python设计的一部分，因此我们不能直接像C或C++那样通过指针来操作内存地址。</p>
<p>尽管如此，Python提供了一些方法来间接查看或理解变量的“内存地址”概念，尽管这些通常是通过对象的身份（identity）来表现的，而不是直接的内存地址。</p>
<h4>12.2如何查看变量的“内存地址”</h4>
<p>在Python中，你可以使用id()函数来获取一个对象的“身份”，这个函数返回的是一个整数，这个整数在对象的生命周期内是唯一的，并且在大多数实现中，这个整数可以被视为对象在内存中的地址（尽管这不是严格保证的，因为它依赖于Python解释器的具体实现）。</p>
<p>1.实例如下：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>
<span style="color: rgba(0, 0, 0, 1)">
name1 </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">北京-宏哥</span><span style="color: rgba(128, 0, 0, 1)">"</span>
<span style="color: rgba(0, 0, 255, 1)">print</span><span style="color: rgba(0, 0, 0, 1)">(id(name1))
name2 </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">宏哥</span><span style="color: rgba(128, 0, 0, 1)">"</span>
<span style="color: rgba(0, 0, 255, 1)">print</span>(id(name2))</pre>
</div>
<p>2.运行代码：</p>
<div class="cnblogs_code">
<pre>D:\Python\python.exe D:/Demo/<span style="color: rgba(0, 0, 0, 1)">test.py
</span>2597726271672
2597726560080<span style="color: rgba(0, 0, 0, 1)">

Process finished with exit code 0</span></pre>
</div>
<p>3.从上边我们知道点击运行按钮，会输出两个不同的数字,这就是变量a的内存地址，可以发现更改后有所变化。奇妙的是：再次点击运行按钮，输出结果却变了：</p>
<div class="cnblogs_code">
<pre>D:\Python\python.exe D:/Demo/<span style="color: rgba(0, 0, 0, 1)">test.py
</span>2537443375288
2537443663696<span style="color: rgba(0, 0, 0, 1)">

Process finished with exit code 0</span></pre>
</div>
<p>4.显然，再次运行，内存地址又变了！这就说明：在每次计算机运行代码时，都会在创建变量时会在内存中开辟一个空间。基于变量的数据类型，解释器会分配指定内存，并决定什么数据可以被存储在内存中。</p>
<h3>13.总结</h3>
<h4>13.1变量练习题</h4>
<p>可以用其他变量的计算结果来定义变量。</p>
<p>需求：</p>
<ul>
<li>苹果的价格是 8.5 元/斤</li>
<li>顾客一共买了 7.5斤苹果</li>
<li>计算顾客付款金额总数</li>
</ul>
<p>python实现的程序代码：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-01-16
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: Python零基础从入门到精通详细教程2-变量与常量
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 定义苹果的价格</span>
price = 8.5
<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 定义买的数量</span>
weight = 7.5
<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 定义总金额</span>
money = price *<span style="color: rgba(0, 0, 0, 1)"> weight
</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 输出最后的价格</span>
<span style="color: rgba(0, 0, 255, 1)">print</span><span style="color: rgba(0, 0, 0, 1)">(money)

</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 变量名 只有在第一次出现 才是定义变量</span><span style="color: rgba(0, 128, 0, 1)">
#</span><span style="color: rgba(0, 128, 0, 1)"> 变量名 再次出现，不是定义变量，而是直接使用之前定义过的变量</span></pre>
</div>
<h4>13.2变量类型练习题</h4>
<p>需求：</p>
<p>定义变量保存小明的个人信息</p>
<p>姓名:小明</p>
<p>年龄:18岁</p>
<p>性别:是男生</p>
<p>身高:1.75米</p>
<p>体重:75.0公斤</p>
<p>python实现代码：在运行的时候，Python 解释器会根据赋值语句等号右侧的数据自动推导出变量中保存数据的准确类型</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-01-16
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: Python零基础从入门到精通详细教程2-变量与常量
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span>
<span style="color: rgba(0, 0, 0, 1)">
name </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">小明</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
age </span>= 18<span style="color: rgba(0, 0, 0, 1)">
sex </span>=<span style="color: rgba(0, 0, 0, 1)"> True
high </span>= 1.75<span style="color: rgba(0, 0, 0, 1)">
weight </span>= 75.0</pre>
</div>
<p>利用断点debug调试确认变量中保存数据的类型，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202412/1232840-20241227143017905-2131074956.png" alt="" loading="lazy"></p>
<h4>13.2一个变量能否指向多个值？</h4>
<p>&nbsp;答案当然是不可以啦！在Python中，一个变量不能“直接”指向多个值。变量在任何给定时间都只引用（或“指向”）一个对象。但是，你可以通过改变变量的引用来使其指向不同的对象。</p>
<p>实例如下：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> -*- coding:utf-8 -*-</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 1.先设置编码，utf-8可支持中英文，如上，一般放在第一行</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 2.注释：包括记录创建时间，创建人，项目名称。</span>
<span style="color: rgba(128, 0, 0, 1)">'''</span><span style="color: rgba(128, 0, 0, 1)">
Created on 2025-01-16
@author: 北京-宏哥
北京宏哥（微信搜索：北京宏哥，关注宏哥，提前解锁更多测试干货！）
Project: Python零基础从入门到精通详细教程2-变量与常量
</span><span style="color: rgba(128, 0, 0, 1)">'''</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 3.导入模块</span>
<span style="color: rgba(0, 0, 0, 1)">
a </span>= 10
<span style="color: rgba(0, 0, 255, 1)">print</span>(id(a))  <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 变量a的内存地址：140714215203952</span>

<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 给a变量重新赋值</span>
a = 20
<span style="color: rgba(0, 0, 255, 1)">print</span>(id(a))  <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 变量a的内存地址：140714215204272 ，与上一个不同，因为a现在引用了一个不同的对象</span></pre>
</div>
<p>在这个例子中，变量<code>a</code>最初引用了一个值为10的对象，然后我们改变了<code>a</code>的引用，使其指向了一个值为20的新对象。这并不意味着<code>a</code>“同时”指向了两个值；它只是改变了它的引用。</p>
<p><img src="https://img2024.cnblogs.com/blog/1232840/202412/1232840-20241227143315009-1597714782.png" alt="" loading="lazy"></p>
<p>本文基于Python基础，主要介绍了Python基础中变量和常量的区别 。希望对大家的学习有帮助。</p>
</div>
<div id="MySignature" role="contentinfo">
    <div id="MySignature" style="display: block">
	<div style="font-size: 13px; border: 1px dashed rgb(45, 161, 45); padding: 10px 15px; background-color: rgb(248, 248, 248)">
		<label style="font-weight: bold">
			&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家在移动端也能看到我分享的博文，现已注册个人微信公众号，扫描左下方二维码即可，欢迎大家关注，提前解锁更多测试干货！有时间会及时分享相关技术博文。
		</label>
		<br>
		<label style="font-weight: bold">
			&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家互动讨论相关技术问题，刚刚建立了咱们的专门的微信群交流互动群，群内会分享交流测试领域前沿知识。  请您扫描中间的微信二维码进群 
		</label>
		<br>
		<label style="font-weight: bold">
			&nbsp;&nbsp;&nbsp;&nbsp;为了方便大家互动讨论相关技术问题，现已组建专门的微信群，由于微信群满100，请您扫描右下方宏哥个人微信二维码拉你进群
			<label style="font-weight: bold; color: red; font-size: 15px">
				（请务必备注：已关注公众号进群）平时上班忙（和你一样），所以加好友不及时，请稍安勿躁~
			</label>
			，欢迎大家加入这个大家庭，我们一起畅游知识的海洋。
		</label>
		<br>
		&nbsp;&nbsp;&nbsp;&nbsp;感谢您花时间阅读此篇文章,如果您觉得这篇文章你学到了东西也是为了犒劳下博主的码字不易不妨打赏一下吧，让博主能喝上一杯咖啡，在此谢过了！
		<br>
		&nbsp;&nbsp;&nbsp;&nbsp;如果您觉得阅读本文对您有帮助，请点一下左下角
		<a id="recommend" style="font-weight: bold; color: red; font-size: 15px; text-decoration: underline">
			“推荐”
		</a>
		按钮，您的
		<label style="font-weight: bold; color: red; font-size: 15px">
			“推荐”
		</label>
		将是我最大的写作动力！另外您也可以选择
		<a id="follow_me_btn" style="cursor: pointer; color: blue; text-decoration: underline">
			【
			<strong>
				关注我
			</strong>
			】
		</a>
		，可以很方便找到我！
		<br>
		&nbsp;&nbsp;&nbsp;&nbsp;本文版权归作者和博客园共有，来源网址：
		<a href="https://www.cnblogs.com/du-hong" style="color: red; text-decoration: underline" target="_blank">
			https://www.cnblogs.com/du-hong
		</a>
		欢迎各位转载，但是未经作者本人同意，转载文章之后必须在文章页面明显位置给出作者和原文连接，否则保留追究法律责任的权利！
	</div>
	<div style="text-align: center; margin-top: 10px">
		<p style=" font-weight: bolder; color: red; ">
			公众号(关注宏哥)&nbsp; &nbsp;&nbsp;&nbsp;
			&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
			微信群(扫码进群) &nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;客服微信
		</p>
		<img style="width: 200px;padding-right: 50px;" alt="个人微信公众号" src="https://img2018.cnblogs.com/common/1741949/201911/1741949-20191119095948011-608816619.png">
		<img style="width: 200px;padding-right: 65px;" alt="微信群" src="https://img2024.cnblogs.com/blog/1232840/202506/1232840-20250610113707419-637869921.png">
		<img style="width: 200px" alt="个人微信" src="https://img2018.cnblogs.com/common/1741949/201911/1741949-20191106101257091-849954564.png">
	</div>
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-08-15 16:26">2025-08-15 16:25</span>&nbsp;
<a href="https://www.cnblogs.com/du-hong">北京-宏哥</a>&nbsp;
阅读(<span id="post_view_count">179</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(17994186);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '17994186', targetLink: 'https://www.cnblogs.com/du-hong/p/17994186', title: 'Python零基础从入门到精通详细教程2-变量与常量' })">举报</a>
</div>
        