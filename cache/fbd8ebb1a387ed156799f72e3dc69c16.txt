
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/niceWk/p/18975722" title="发布于 2025-07-09 21:03">
    <span role="heading" aria-level="2">Rust修仙之道 第八章：意动境 · 闭包与迭代的灵动之道</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="第八章意动境--闭包与迭代的灵动之道">第八章：意动境 · 闭包与迭代的灵动之道</h2>
<blockquote>
<p><em>“他人需咏符念咒，我一念而动术；他人遍历千灵，我引灵自来去。”</em></p>
</blockquote>
<p>顾行云望着铺天盖地的灵纹数据，若要逐一施术，岂非精神耗尽？他开始思索：是否能唤出<strong>意动即术</strong>的技法，让函数式灵气随心而施？</p>
<p>此境，被称为：<strong>闭包（closure）与迭代（iterator）之术</strong>。</p>
<h3 id="一闭包术法--心念即召咒">一、闭包术法 · 心念即召咒</h3>
<p>闭包是可以捕获环境灵气的“微型法印”：</p>
<pre><code class="language-rust">let double = |x| x * 2;
println!("双倍灵力：{}", double(6)); // 输出 12
</code></pre>
<p>闭包可有类型，也可由灵器自动推断：</p>
<pre><code class="language-rust">let sum = |a: i32, b: i32| -&gt; i32 { a + b };
</code></pre>
<p>他发现闭包可捕获周围灵气变量，实现“无声咒”：</p>
<pre><code class="language-rust">let mut boost = 3;
let enhance = |val: i32| val + boost;
boost = 5; // 若闭包未立即调用，则变动影响术式行为
</code></pre>
<p>修炼提示：</p>
<ul>
<li>
<p>若闭包只借用外部灵气 → <code>&amp;T</code>；</p>
</li>
<li>
<p>若需要修改外部灵气 → <code>&amp;mut T</code>；</p>
</li>
<li>
<p>若夺取所有权 → <code>T</code>（<code>move</code> 关键字）</p>
</li>
</ul>
<h3 id="二迭代灵术--万象遍历心识">二、迭代灵术 · 万象遍历心识</h3>
<p>顾行云学会用 <code>.iter()</code> 唤出“灵迹之流”：</p>
<pre><code class="language-rust">let relics = vec!["火符", "冰珠", "雷骨"];
for item in relics.iter() {
    println!("发现灵物：{}", item);
}
</code></pre>
<p>若要加工每个灵物，他使用链式灵术：</p>
<pre><code class="language-rust">let results: Vec&lt;_&gt; = relics
    .iter()
    .map(|r| format!("{}・鉴定完毕", r))
    .collect();
</code></pre>
<p>常用迭代技：</p>
<table>
<thead>
<tr>
<th>灵术名</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>.map()</code></td>
<td>变换术，灵转其形</td>
</tr>
<tr>
<td><code>.filter()</code></td>
<td>过滤术，留下精华</td>
</tr>
<tr>
<td><code>.find()</code></td>
<td>探测术，找出首个满足条件之灵</td>
</tr>
<tr>
<td><code>.fold()</code></td>
<td>折叠术，从多个灵点汇聚为一</td>
</tr>
<tr>
<td><code>.any()</code> / <code>.all()</code></td>
<td>判定术，部分/全部满足某条件</td>
</tr>
</tbody>
</table>
<p>示例：</p>
<pre><code class="language-rust">let values = vec![10, 20, 30];
let total = values.iter().fold(0, |acc, x| acc + x); // 60
</code></pre>
<h3 id="三闭环炼灵自定义迭代器">三、闭环炼灵：自定义迭代器</h3>
<p>更高阶的术士还可自制迭代灵阵：</p>
<pre><code class="language-rust">struct Counter {
    count: u32,
}

impl Iterator for Counter {
    type Item = u32;
    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {
        self.count += 1;
        if self.count &lt; 6 {
            Some(self.count)
        } else {
            None
        }
    }
}
</code></pre>
<blockquote>
<p>顾行云试炼自制迭代灵脉，掌控步数与终止契机，堪比“灵律编舞”术。</p>
</blockquote>
<h3 id="-术式心诀--意动之理">🧘 术式心诀 · 意动之理</h3>
<blockquote>
<p><em>咒可省，灵自随；序可化，念自回；动静循环间，术由心生。</em><br>
⬅️ <a href="https://www.cnblogs.com/niceWk/p/18974493" target="_blank">上一章</a>　　　　　　　　　　　　[下一章 待续➡️]</p>
</blockquote>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.003472222222222222" data-date-updated="2025-07-09 21:08">2025-07-09 21:03</span>&nbsp;
<a href="https://www.cnblogs.com/niceWk">NiceWk</a>&nbsp;
阅读(<span id="post_view_count">8</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18975722);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18975722', targetLink: 'https://www.cnblogs.com/niceWk/p/18975722', title: 'Rust修仙之道 第八章：意动境 &amp;#183; 闭包与迭代的灵动之道' })">举报</a>
</div>
        