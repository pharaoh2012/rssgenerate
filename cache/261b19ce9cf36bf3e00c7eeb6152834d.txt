
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/youlanjihua/p/18951604" title="发布于 2025-06-27 10:17">
    <span role="heading" aria-level="2">HarmonyOS NEXT仓颉开发语言实现画板案例</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p data-id="p124945a-5hEh8Kr0">大家上午好，今天分享一下仓颉开发语言实现的画板案例。</p>
<p data-id="p124945a-i0HLbZTd">最近总是有同学说我写ArkTS冒充仓颉，为了自证清白，截图给大家看一下，确实是仓颉文件：</p>
<p><img data-type="block" data-src="https://dl-harmonyos.51cto.com/images/202506/f53b45e488003447f57792e65f474435d146e3.png" class="lazyload"></p>
<p data-id="p124945a-Cc44fVQC">仓颉提供了画布组件Canvas，我们所有的绘制工作都要在画布上进行，所以首先在页面添加一个足够大的画布组件：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>Canvas(this.context)
.backgroundColor(0xffff00)
.width(100.percent)
.height(100.percent)</code></pre>
</div>
<p data-id="p124945a-XnVTSF30">看到上面的代码，大家可能会问this.context是什么，幽蓝君将它比作画笔，使用画笔在画布上作画，context可以绘制图形、文本、图片等内容。画笔的样式是可以修改的，比如粗细、颜色等等：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>var settings: RenderingContextSettings = RenderingContextSettings(antialias: true)
var context: CanvasRenderingContext2D = CanvasRenderingContext2D(this.settings)
var path2Db: Path2D = Path2D()


protected open func onPageShow(){
  context.lineWidth(5)
  context.strokeStyle(0x0000ff)
}</code></pre>
</div>
<p data-id="p124945a-IechO8DR">今天我们做的是让画笔跟随我们触摸过的轨迹绘制曲线。</p>
<p><img data-type="block" data-src="https://dl-harmonyos.51cto.com/images/202506/b178c7961151ae420de3161eeff31e113a9cbe.png" class="lazyload"></p>
<p data-id="p124945a-FMsW6YKg">要实现这个需求，首先我们需要知道绘制国的轨迹坐标，才能在画布上准确的绘制。</p>
<p data-id="p124945a-fSn3xAvQ">为了让绘制更加准确，我使用了三次贝塞尔曲线，这样我需要记录下至少两个点，然后将这个点的中点也传入贝塞尔曲线的坐标。</p>
<p data-id="p124945a-9nTt26Y0">触摸滑动事件可以使用onTouch，onTouch的事件有几种类型，如Down、Move等，在仓颉中对类型我使用了非常规的判断方式：</p>
<div>
<pre class="language-plain highlighter-hljs"><code>.onTouch({e:TouchEvent =&gt;
    var pointX = e.touches[0].x;
    var pointY = e.touches[0].y;
    if(e.eventType.toString() == 'Move'){
            let curX = (pointX + this.pointX1)/Float64(2)
            let curY = (pointY + this.pointY1)/Float64(2)
            this.path2Db.bezierCurveTo(this.pointX1,this.pointY1,this.pointX2,this.pointY2,curX,curY)
            this.pointX1 = pointX
            this.pointY1 = pointY
            this.pointX2 = curX
            this.pointY2 = curY
            this.context.stroke(this.path2Db)
    }else if(e.eventType.toString() == 'Down'){
         this.path2Db.moveTo(e.touches[0].x, e.touches[0].y);
            this.pointX1 = pointX
            this.pointY1 = pointY
            this.pointX2 = pointX
            this.pointY2 = pointY
        }
    })</code></pre>
</div>
<p data-id="p124945a-GwXtCzpD">实现绘制曲线后，可以使用clearRect方法实现对画布的清空。</p>
<div>
<pre class="language-plain highlighter-hljs"><code>Button('清空').onClick({e =&gt;  
	this.context.clearRect(0, 0, 3000, 3000)
  })</code></pre>
</div>
<p data-id="p124945a-mVvIUV7Z">这样一个简单的画板效果就实现啦，感谢阅读。​<a>​#​</a>​​<a>​#HarmonyOS语言​</a>​##仓颉##休闲娱乐#</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-06-27 10:17">2025-06-27 10:17</span>&nbsp;
<a href="https://www.cnblogs.com/youlanjihua">幽蓝计划</a>&nbsp;
阅读(<span id="post_view_count">174</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18951604);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18951604', targetLink: 'https://www.cnblogs.com/youlanjihua/p/18951604', title: 'HarmonyOS NEXT仓颉开发语言实现画板案例' })">举报</a>
</div>
        