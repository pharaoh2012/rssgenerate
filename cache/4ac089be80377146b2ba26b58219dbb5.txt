
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/yayujs/p/18714337" title="发布于 2025-02-13 20:01">
    <span role="heading" aria-level="2">Svelte 最新中文文档翻译（7）—— snippet 与 @render</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="前言">前言</h2>
<p>Svelte，一个非常“有趣”、用起来“很爽”的前端框架。从 Svelte 诞生之初，就备受开发者的喜爱，根据统计，<strong>从 2019 年到 2024 年，连续 6 年一直是开发者最感兴趣的前端框架 No.1</strong>：</p>
<p><img src="https://yayujs-blog.oss-cn-beijing.aliyuncs.com/405488775-48df16b1-939c-489b-8d52-6071869893f0.png" alt="image.png" loading="lazy"></p>
<p>Svelte 以其独特的编译时优化机制著称，具有<strong>轻量级</strong>、<strong>高性能</strong>、<strong>易上手</strong>等特性，<strong>非常适合构建轻量级 Web 项目，也是我做个人项目的首选技术栈。</strong></p>
<p>目前 Svelte 基于 Svelte 5 发布了最新的官方文档，但却缺少对应的中文文档。为了帮助大家学习 Svelte，为爱发电翻译了官方文档。</p>
<p>我同时搭建了 Svelte 最新的中文文档站点：<a href="https://svelte.yayujs.com" target="_blank" rel="noopener nofollow">https://svelte.yayujs.com</a> ，如果需要辅助学习，也可以入手我的小册<a href="https://s.juejin.cn/ds/iycmvygA/" target="_blank" rel="noopener nofollow">《Svelte 开发指南》</a>，语法篇、实战篇、原理篇三大篇章带你系统掌握 Svelte！</p>
<p>虽说是翻译，但个人并不喜欢严格遵守原文，为了保证中文阅读流畅，会删减部分语句，对难懂的部分也会另做补充解释，希望能给大家带来一个好的中文学习体验。</p>
<p>欢迎围观我的<a href="https://yayujs.com" target="_blank" rel="noopener nofollow">“朋友圈”</a>、加入<a href="https://www.yuque.com/yayu/nice-people/xou8qr" target="_blank" rel="noopener nofollow">“低调务实优秀中国好青年”</a>前端社群，分享技术，带你成长。</p>
<h2 id="snippet">snippet</h2>
<pre><code class="language-svelte">{#snippet name()}...{/snippet}
</code></pre>
<pre><code class="language-svelte">{#snippet name(param1, param2, paramN)}...{/snippet}
</code></pre>
<p>代码片段和 <a href="https://svelte.yayujs.com/docs/svelte/@render" target="_blank" rel="noopener nofollow">渲染标签</a> 是在组件内部创建可复用标记块的一种方法。与其编写<a href="https://svelte.yayujs.com/playground/untitled#H4sIAAAAAAAAE5VUYW-kIBD9K8Tmsm2yXXRzvQ-s3eR-R-0HqqOQKhAZb9sz_vdDkV1t000vRmHewMx7w2AflbIGG7GnPlK8gYhFv42JthG-m9Gwf6BGcLbVXZuPSGrzVho8ZirDGpDIhldgySN5GpEMez9kaNuckY1ANJZRamRuu2ZnhEZt6a84pvs43mzD4pMsUDDi8DMkQFYCGdkvsJwblFq5uCik9bmJ4JZwUkv1eoknWigX2eGNN6aGXa6bjV8ybP-X7sM36T58SVcrIIV2xVIaA41xeD5kKqWXuqpUJEefOqVuOkL9DfBchGrzWfu0vb-RpTd3o-zBR045Ga3HfuE5BmJpKauuhbPtENlUF2sqR9jqpsPSxWsMrlngyj3VJiyYjJXb1-lMa7IWC-iSk2M5Zzh-SJjShe-siq5kpZRPs55BbSGU5YPyte4vVV_VfFXxVb10dSLf17pS2lM5HnpPxw4Zpv6x-F57p0jI3OKlVnhv5V9wPQrNYQQ9D_f6aGHlC89fq1Z3qmDkJCTCweOGF4VUFSPJvD_DhreVdA0eu8ehJJ5x91dBaBkpWm3ureCFPt3uzRv56d4kdp-2euG38XZ6dsnd3ZmPG9yRBCrzRUvi-MccOdwz3qE-fOZ7AwAhlrtTUx3c76vRhSwlFBHDtoPhefgHX3dM0PkEAAA=" target="_blank" rel="noopener nofollow">这样的</a>重复代码...</p>
<pre><code class="language-svelte">{#each images as image}
    {#if image.href}
        &lt;a href={image.href}&gt;
            &lt;figure&gt;
                &lt;img src={image.src} alt={image.caption} width={image.width} height={image.height} /&gt;
                &lt;figcaption&gt;{image.caption}&lt;/figcaption&gt;
            &lt;/figure&gt;
        &lt;/a&gt;
    {:else}
        &lt;figure&gt;
            &lt;img src={image.src} alt={image.caption} width={image.width} height={image.height} /&gt;
            &lt;figcaption&gt;{image.caption}&lt;/figcaption&gt;
        &lt;/figure&gt;
    {/if}
{/each}
</code></pre>
<p>...你可以<a href="https://svelte.yayujs.com/playground/untitled#H4sIAAAAAAAAE5VUYW-bMBD9KxbRlERKY4jWfSA02n5H6QcXDmwVbMs-lnaI_z6D7TTt1moTAnPvzvfenQ_GpBEd2CS_HxPJekjy5IfWyS7BFz0b9id0CM62ajDVjBS2MkLjqZQldoBE9KwFS-7I_YyUOPqlRGuqnKw5orY5pVpUduj3mitUln5LU3pI0_UuBp9FjTwnDr9AHETLMSeHK6xiGoWSLi9yYT034cwSRjohn17zcQPNFTs8s153sK9Uv_Yh0-5_5d7-o9zbD-UqCaRWrllSYZQxLw_HUhb0ta-y4NnJUxfUvc7QuLJSaO0a3oh2MLBZat8u-wsPnXzKQvTtVVF34xK5d69ThFmHEQ4SpzeVRediTG8rjD5vBSeN3E5JyHh6R1DQK9-iml5kjzQUN_lSgVU8DhYLx7wwjSvRkMDvTjiwF4zM1kXZ7DlF1eN3A7IG85e-zRrYEjjm0FkI4Cc7Ripm0pHOChexhcWXzreeZyRMU6Mk3ljxC9w4QH-cQZ_b3T5pjHxk1VNr1CDrnJy5QDh6XLO6FrLNSRb2l9gz0wo3S6m7HErSgLsPGMHkpDZK31jOanXeHPQz-eruLHUP0z6yTbpbrn223V70uMXNSpQSZjpL0y8hcxxpNqA6_ql3BQAxlxvfpQ_uT9GrWjQC6iRHM8D0MP0GQsIi92QEAAA=" target="_blank" rel="noopener nofollow">这样写</a>:</p>
<pre><code class="language-svelte">{#snippet figure(image)}
    &lt;figure&gt;
        &lt;img src={image.src} alt={image.caption} width={image.width} height={image.height} /&gt;
        &lt;figcaption&gt;{image.caption}&lt;/figcaption&gt;
    &lt;/figure&gt;
{/snippet}

{#each images as image}
    {#if image.href}
        &lt;a href={image.href}&gt;
                {@render figure(image)}
        &lt;/a&gt;
    {:else}
        {@render figure(image)}
    {/if}
{/each}
</code></pre>
<p>像函数声明一样，代码片段可以有任意数量的参数，这些参数可以有默认值，并且你可以对每个参数进行解构。然而，你不能使用剩余参数。</p>
<h3 id="代码片段作用域">代码片段作用域</h3>
<p>代码片段可以在组件的任何地方声明。它们可以引用在自身之外声明的值，例如在 <code>&lt;script&gt;</code> 标签或 <code>{#each ...}</code> 块中 (<a href="https://svelte.yayujs.com/playground/untitled#H4sIAAAAAAAAE12P0QrCMAxFfyWrwhSEvc8p-h1OcG5RC10bmkyQ0n-3HQPBx3vCPUmCemiDrOpLULYbUdXqTKR2Sj6UA7_RCKbMbvJ9Jg33XpMcW9uKQYEAIzJ3T4QD3LSUDE-PnYA4YET4uOkGMc3W5B3xZrtvbVP9HDas2GqiZHqhMW6Tr9jGbG_oOCMImcUCwrIpFk1FqRyqpRpn0cmjHdAvnrIzuscyq_4nd3dPPD01ukE_NA6qFj9hvMYvGjJADw8BAAA=" target="_blank" rel="noopener nofollow">demo</a>)...</p>
<pre><code class="language-svelte">&lt;script&gt;
	let { message = `很高兴见到你！` } = $props();
&lt;/script&gt;

{#snippet hello(name)}
	&lt;p&gt;你好 {name}! {message}!&lt;/p&gt;
{/snippet}

{@render hello('alice')}
{@render hello('bob')}
</code></pre>
<p>...并且它们对同一词法作用域中的所有内容都是"可见的"（即兄弟节点和这些兄弟节点的子节点）：</p>
<pre><code class="language-svelte">&lt;div&gt;
    {#snippet x()}
        {#snippet y()}...{/snippet}

        &lt;!-- 这很好 --&gt;
        {@render y()}
    {/snippet}

    &lt;!-- 这将出错，因为 `y` 不在作用域中 --&gt;
    {@render y()}
&lt;/div&gt;

&lt;!-- 这也将出错，因为 `x` 不在作用域中 --&gt;
{@render x()}
</code></pre>
<p>代码片段可以引用自身和其他片段 (<a href="https://svelte.yayujs.com/playground/untitled#H4sIAAAAAAAAE2WPTQqDMBCFrxLiRqH1Zysi7TlqF1YnENBJSGJLCYGeo5tesUeosfYH3c2bee_jjaWMd6BpfrAU6x5oTvdS0g01V-mFPkNnYNRaDKrxGxto5FKCIaeu1kYwFkauwsoUWtZYPh_3W5FMY4U2mb3egL9kIwY0rbhgiO-sDTgjSEqSTvIDs-jiOP7i_MHuFGAL6p9BtiSbOTl0GtzCuihqE87cqtyam6WRGz_vRcsZh5bmRg3gju4Fptq_kzQBAAA=" target="_blank" rel="noopener nofollow">demo</a>)：</p>
<pre><code class="language-svelte">{#snippet blastoff()}
    &lt;span&gt;🚀&lt;/span&gt;
{/snippet}

{#snippet countdown(n)}
    {#if n &gt; 0}
        &lt;span&gt;{n}...&lt;/span&gt;
        {@render countdown(n - 1)}
    {:else}
        {@render blastoff()}
    {/if}
{/snippet}

{@render countdown(10)}
</code></pre>
<h3 id="将代码片段传递给组件">将代码片段传递给组件</h3>
<p>在模板中，代码片段和其他值一样。这样，它们可以作为 props 传递给组件 (<a href="https://svelte.yayujs.com/playground/untitled#H4sIAAAAAAAAE3VS247aMBD9lZGpBGwDASRegonaPvQL2qdlH5zYEKvBNvbQLbL875VzAcKyj3PmzJnLGU8UOwqSkd8KJdaCk4TsZS0cyV49wYuJuQiQpGd-N2bu_ooaI1YwJ57hpVYoFDqSEepKKw3mO7VDeTTaIvxiRS1gb_URxvO0ibrS8WanIrHUyiHs7Vmigy28RmyHHmKvDMbMmFq4cQInvGSwTsBYWYoMVhCSB2rBFFPsyl0uruTlR3JZCWvlTXl1Yy_mawiR_rbZKZrellJ-5JQ0RiBUgnFhJ9OGR7HKmwVoilXeIye8DOJGfYCgRlZ3iE876TBsZPX7hPdteO75PC4QaIo8vwNPePmANQ2fMeEFHrLD7rR1jTNkW986E8C3KwfwVr8HSHOSEBT_kGRozyIkn_zQveXDL3rIfPJHtUDwzShJd_Qk3gQCbOGLsdq4yfTRJopRuin3I7nv6kL7ARRjmLdBDG3uv1mhuLA3V2mKtqNEf_oCn8p9aN-WYqH5peP4kWBl1UwJzAEPT9U7K--0fRrrWnPTXpCm1_EVdXjpNmlA8G1hPPyM1fKgMqjFHjctXGjLhZ05w0qpDhksGrybuNEHtJnCalZWsuaTlfq6nPaaBSv_HKw-K57BjzOiVj9ZKQYKzQjZodYFqydYTRN4gPhVzTDO2xnma3HsVWjaLjT8nbfwHy7Q5f2dBAAA" target="_blank" rel="noopener nofollow">demo</a>):</p>
<pre><code class="language-svelte">&lt;script&gt;
    import Table from './Table.svelte';

    const fruits = [
        { name: '苹果', qty: 5, price: 2 },
        { name: '香蕉', qty: 10, price: 1 },
        { name: '樱桃', qty: 20, price: 0.5 }
    ];
&lt;/script&gt;

{#snippet header()}
    &lt;th&gt;水果&lt;/th&gt;
    &lt;th&gt;数量&lt;/th&gt;
    &lt;th&gt;价格&lt;/th&gt;
    &lt;th&gt;总计&lt;/th&gt;
{/snippet}

{#snippet row(d)}
    &lt;td&gt;{d.name}&lt;/td&gt;
    &lt;td&gt;{d.qty}&lt;/td&gt;
    &lt;td&gt;{d.price}&lt;/td&gt;
    &lt;td&gt;{d.qty * d.price}&lt;/td&gt;
{/snippet}

&lt;Table data={fruits} {header} {row} /&gt;
</code></pre>
<p>把它想象成向组件传递内容而非数据。这个概念类似于 Web 组件中的插槽。</p>
<p>为了方便，直接在组件<em>内部</em>声明的代码片段会隐式成为组件的 props (<a href="https://svelte.yayujs.com/playground/untitled#H4sIAAAAAAAAE3VSTa_aMBD8Kyu_SkAbCA-JSzBR20N_QXt6vIMTO8SqsY29tI2s_PcqTiB8vaPHs7MzuxuIZgdBMvJLo0QlOElIJZXwJHsLBBvb_XUASc7Mb9Yu_B-hsMMK5sUzvDQahUZPMkJ96aTFfKd3KA_WOISfrFACKmcOMFmk8TWUTjY73RFLoz1C5U4SPWzhrcN2GKDrlcGEWauEnyRwxCaDdQLWyVJksII2uaMWTDPNLtzX5YX8-kgua-GcHJVXI3u5WEPb0d83O03TMZSmfRzOkG1Db7mNacOL19JagVALxoWbztq-H8U6j0SaYp2P2BGbOyQ2v8PQIFMXLKRDk177pq0zf6d8bMrzwBdd0pamyPMb-IjNEzS2f86Gz_Dwf-2F9nvNSUJQ_EOSoTuJNvngqK5v4Pas7n4-OCwlEEJcQTIMO-nSQwtb-GSdsX46e9gbRoP9yGQ11I0rEuycunu6PHx1QnPhxm3SFN15MOlYEFJZtf0dUywMbwZOeBGsrKNLYB54-1R9WNqVdki7usim6VmQphf7mnpshiQRhNAXdoOfMyX3OgMlKtz0cGEcF27uLSul3mewjPjgOOoDukxjPS9rqfh0pb-8zs6aBSt_7505aZ7B9xOi0T9YKW4UooVsr0zB1BTrWQJ3EL-oWcZ572GxFoezCk37QLe3897-B2i2U62uBAAA" target="_blank" rel="noopener nofollow">demo</a>)：</p>
<pre><code class="language-svelte">&lt;!-- 这在语义上与上面的相同 --&gt;
&lt;Table data={fruits}&gt;
    {#snippet header()}
        &lt;th&gt;水果&lt;/th&gt;
        &lt;th&gt;数量&lt;/th&gt;
        &lt;th&gt;价格&lt;/th&gt;
        &lt;th&gt;总计&lt;/th&gt;
    {/snippet}

    {#snippet row(d)}
        &lt;td&gt;{d.name}&lt;/td&gt;
        &lt;td&gt;{d.qty}&lt;/td&gt;
        &lt;td&gt;{d.price}&lt;/td&gt;
        &lt;td&gt;{d.qty * d.price}&lt;/td&gt;
    {/snippet}
&lt;/Table&gt;
</code></pre>
<p>组件标签内的任何<em>不是</em>代码片段声明的内容都将隐式成为 <code>children</code> 代码片段的一部分 (<a href="https://svelte.yayujs.com/playground/untitled#H4sIAAAAAAAAE3WOQQrCMBBFrzIMggql3ddY1Du4si5sOmIwnYRkFKX07lKqglqX8_7_w2uRDw1hjlsWI5ZqTPBoLEXMdy3K3fdZDzB5Ndfep_FKVnpWHSKNce1YiCVijirqYLwUJQOYxrsgsLmIOIZjcA1M02w4n-PpomSVvTclqyEutDX6DA2pZ7_ABIVugrmEC3XJH92P55_G39GodCmWBFrQJ2PrQAwdLGHig_NxNv9xrQa1dhWIawrv1Wzeqawa8953D-8QOmaEAQAA" target="_blank" rel="noopener nofollow">demo</a>)：</p>
<pre><code class="language-svelte">&lt;!--- file: App.svelte ---&gt;
&lt;Button&gt;点击我&lt;/Button&gt;
</code></pre>
<pre><code class="language-svelte">&lt;!--- file: Button.svelte ---&gt;
&lt;script&gt;
    let { children } = $props();
&lt;/script&gt;

&lt;!-- 结果将是 &lt;button&gt;点击我&lt;/button&gt; --&gt;
&lt;button&gt;{@render children()}&lt;/button&gt;
</code></pre>
<blockquote>
<p>[!NOTE] 请注意，如果组件内部还有内容，你不能有名为 <code>children</code> 的 prop — 基于这个原因，应该避免使用这个名称作为 prop</p>
</blockquote>
<p>你可以将代码片段 props 声明为可选的。你可以使用可选链，当代码片段未设置时不渲染任何内容...</p>
<pre><code class="language-svelte">&lt;script&gt;
    let { children } = $props();
&lt;/script&gt;

{@render children?.()}
</code></pre>
<p>...或者使用 <code>#if</code> 块来渲染后备内容：</p>
<pre><code class="language-svelte">&lt;script&gt;
    let { children } = $props();
&lt;/script&gt;

{#if children}
    {@render children()}
{:else}
    后备内容
{/if}
</code></pre>
<h3 id="代码片段类型">代码片段类型</h3>
<p>代码片段实现了从 <code>'svelte'</code> 导入的 <code>Snippet</code> 接口：</p>
<pre><code class="language-svelte">&lt;script lang="ts"&gt;
    import type { Snippet } from 'svelte';

    interface Props {
        data: any[];
        children: Snippet;
        row: Snippet&lt;[any]&gt;;
    }

    let { data, children, row }: Props = $props();
&lt;/script&gt;
</code></pre>
<p>通过这项改动，如果你尝试在没有提供 <code>data</code> prop 和 <code>row</code> 代码片段的情况下使用该组件，则会出现红色波浪线。请注意，提供给 <code>Snippet</code> 的类型参数是一个<a href="https://ts.yayujs.com/handbook/ObjectTypes.html#%E5%85%83%E7%BB%84%E7%B1%BB%E5%9E%8B-tuple-types" target="_blank" rel="noopener nofollow">元组</a>，因为代码片段可以有多个参数。</p>
<p>我们可以通过声明泛型来进一步收窄类型，以便 <code>data</code> 和 <code>row</code> 引用相同的类型：</p>
<pre><code class="language-svelte">&lt;script lang="ts" generics="T"&gt;
    import type { Snippet } from 'svelte';

    let {
        data,
        children,
        row
    }: {
        data: T[];
        children: Snippet;
        row: Snippet&lt;[T]&gt;;
    } = $props();
&lt;/script&gt;
</code></pre>
<h3 id="导出代码片段">导出代码片段</h3>
<p>在 <code>.svelte</code> 文件顶层声明的代码片段可以从 <code>&lt;script module&gt;</code> 导出以供其他组件使用，前提是它们不引用非模块 <code>&lt;script&gt;</code> 中的任何声明（无论是直接引用还是通过其他代码片段间接引用） (<a href="https://svelte.yayujs.com/playground/untitled#H4sIAAAAAAAAE3WPwY7CMAxEf8UyB1hRgdhjl13Bga8gHFJipEqtGyUGFUX5dxJUtEB3b9bYM_MckHVLWOKut50TMuC5tpbEY4GnuiGP5T6gXG0-ykLSB8vW2oW_UCNZq7Snv_Rjx0Kc4kpc-6OrrfwoVlK3uQ4CaGMgwsl1LUwXy0f54J9-KV4vf20cNo7YkMu22aqAz4-oOLUI9YKluDPF4h_at-hX5PFyzA1tZ84N3fGpf8YfUU6GvDumLqDKmEqCjjCHUEX4hqDTWCU5PJ6Or38c4g1cPu9tnAEAAA==" target="_blank" rel="noopener nofollow">demo</a>)：</p>
<pre><code class="language-svelte">&lt;script module&gt;
    export { add };
&lt;/script&gt;

{#snippet add(a, b)}
    {a} + {b} = {a + b}
{/snippet}
</code></pre>
<blockquote>
<p>[!NOTE]<br>
这需要 Svelte 5.5.0 或更新版本</p>
</blockquote>
<h3 id="程序化代码片段">程序化代码片段</h3>
<p>代码片段可以通过 <a href="https://svelte.yayujs.com/docs/svelte/svelte#createRawSnippet" target="_blank" rel="noopener nofollow"><code>createRawSnippet</code></a> API 以编程方式创建。这适用于高级用例。</p>
<h3 id="代码片段和插槽">代码片段和插槽</h3>
<p>在 Svelte 4 中，可以使用 <a href="https://svelte.yayujs.com/docs/svelte/legacy-slots" target="_blank" rel="noopener nofollow">插槽</a> 将内容传递给组件。代码片段更强大、更灵活，因此在 Svelte 5 中插槽已被弃用。</p>
<h2 id="_"></h2>
<p>要渲染一个<a href="https://svelte.yayujs.com/docs/svelte/snippet" target="_blank" rel="noopener nofollow">代码片段</a>，请使用 <code>{@render ...}</code> 标签。</p>
<pre><code class="language-svelte">{#snippet sum(a, b)}
    &lt;p&gt;{a} + {b} = {a + b}&lt;/p&gt;
{/snippet}

{@render sum(1, 2)}
{@render sum(3, 4)}
{@render sum(5, 6)}
</code></pre>
<p>表达式可以是像 <code>sum</code> 这样的标识符，也可以是任意的 JavaScript 表达式：</p>
<pre><code class="language-svelte">{@render (cool ? coolSnippet : lameSnippet)()}
</code></pre>
<h3 id="可选代码片段">可选代码片段</h3>
<p>如果代码片段可能未定义 — 例如，因为它是一个传入的 prop — 那么你可以使用可选链操作符，只在代码片段确实存在时才渲染它：</p>
<pre><code class="language-svelte">{@render children?.()}
</code></pre>
<p>或者，使用<a href="https://svelte.yayujs.com/docs/svelte/if" target="_blank" rel="noopener nofollow"><code>{#if ...}</code></a> 块配合 <code>:else</code> 子句来渲染后备内容：</p>
<pre><code class="language-svelte">{#if children}
    {@render children()}
{:else}
    &lt;p&gt;后备内容&lt;/p&gt;
{/if}
</code></pre>
<h2 id="svelte-中文文档">Svelte 中文文档</h2>
<p>本篇已收录在掘金专栏 <a href="https://juejin.cn/column/7459299646696374284" target="_blank" rel="noopener nofollow">《Svelte 中文文档》</a>，该系列预计 40 篇。</p>
<p>系统学习 Svelte，欢迎入手小册<a href="https://s.juejin.cn/ds/iycmvygA/" target="_blank" rel="noopener nofollow">《Svelte 开发指南》</a>。语法篇、实战篇、原理篇三大篇章带你系统掌握 Svelte！</p>
<p>此外我还写过 <a href="https://juejin.cn/column/7035531575974592520" target="_blank" rel="noopener nofollow">JavaScript 系列</a>、<a href="https://juejin.cn/column/7029490086710345742" target="_blank" rel="noopener nofollow">TypeScript 系列</a>、<a href="https://juejin.cn/column/7142674773930147853" target="_blank" rel="noopener nofollow">React 系列</a>、<a href="https://juejin.cn/column/7343569488744611849" target="_blank" rel="noopener nofollow">Next.js 系列</a>、<a href="https://juejin.cn/column/7039526067891077151" target="_blank" rel="noopener nofollow">冴羽答读者问</a>等 14 个系列文章， 全系列文章目录：<a href="https://github.com/mqyqingfeng/Blog" target="_blank" rel="noopener nofollow">https://github.com/mqyqingfeng/Blog</a></p>
<p>通过文字建立交流本身就是一种缘分，欢迎围观我的<a href="https://yayujs.com" target="_blank" rel="noopener nofollow">“朋友圈”</a>、加入<a href="https://www.yuque.com/yayu/nice-people/xou8qr" target="_blank" rel="noopener nofollow">“低调务实优秀中国好青年”</a>前端社群，分享技术，带你成长。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="8.033601652157408" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-13 20:02">2025-02-13 20:01</span>&nbsp;
<a href="https://www.cnblogs.com/yayujs">冴羽</a>&nbsp;
阅读(<span id="post_view_count">10</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18714337" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18714337);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18714337', targetLink: 'https://www.cnblogs.com/yayujs/p/18714337', title: 'Svelte 最新中文文档翻译（7）—— snippet 与 @render' })">举报</a>
</div>
        