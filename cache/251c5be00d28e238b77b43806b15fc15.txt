
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Johny-zhao/p/19030721" title="发布于 2025-08-10 14:52">
    <span role="heading" aria-level="2">Rsync + Sersync 实时数据同步方案</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p><strong>方案架构</strong></p>
<ul>
<li><strong>源服务器</strong>：部署 Sersync（监控文件变化） + Rsync（推送数据）</li>
<li><strong>目标服务器</strong>：部署 Rsync Daemon（接收数据）</li>
<li><strong>同步逻辑</strong>：源服务器文件变动 → Sersync 实时触发 → Rsync 增量同步至目标服务器</li>
</ul>
<div align="center"><hr align="center" size="1" width="100%"></div>
<p><strong>详细实施步骤</strong></p>
<p><strong>一、目标服务器配置（数据接收端）</strong></p>
<ol start="1">
<li><strong>安装 Rsync</strong></li>
</ol>
<p>bash</p>
<p>yum install rsync -y&nbsp; <em># CentOS</em></p>
<p>apt install rsync -y&nbsp; <em># Ubuntu</em></p>
<ol start="2">
<li><strong>创建 Rsync 配置文件</strong></li>
</ol>
<p>bash</p>
<p>vim /etc/rsyncd.conf</p>
<p>ini</p>
<p>uid = root</p>
<p>gid = root</p>
<p>use chroot = no</p>
<p>max connections = 2000</p>
<p>pid file = /var/run/rsyncd.pid</p>
<p>lock file = /var/run/rsync.lock</p>
<p>log file = /var/log/rsyncd.log</p>
<p>&nbsp;</p>
<p>[data_backup]&nbsp; # 模块名称（客户端同步时指定）</p>
<p>path = /data/backup&nbsp; # 同步目录</p>
<p>comment = Backup Directory</p>
<p>read only = no&nbsp; # 允许写入</p>
<p>auth users = rsync_user&nbsp; # 认证用户</p>
<p>secrets file = /etc/rsync.password&nbsp; # 密码文件</p>
<ol start="3">
<li><strong>创建认证文件</strong></li>
</ol>
<p>bash</p>
<p>echo "rsync_user:your_password" &gt; /etc/rsync.password</p>
<p>chmod 600 /etc/rsync.password</p>
<ol start="4">
<li><strong>创建同步目录</strong></li>
</ol>
<p>bash</p>
<p>mkdir -p /data/backup</p>
<p>chown -R rsync_user:rsync_user /data/backup</p>
<ol start="5">
<li><strong>启动 Rsync 守护进程</strong></li>
</ol>
<p>bash</p>
<p>systemctl start rsyncd</p>
<p>systemctl enable rsyncd</p>
<ol start="6">
<li><strong>开放防火墙端口</strong></li>
</ol>
<p>bash</p>
<p>firewall-cmd --add-port=873/tcp --permanent</p>
<p>firewall-cmd --reload</p>
<div align="center"><hr align="center" size="1" width="100%"></div>
<p><strong>二、源服务器配置（数据发送端）</strong></p>
<ol start="1">
<li><strong>安装 Rsync</strong></li>
</ol>
<p>bash</p>
<p>yum install rsync -y&nbsp; <em># CentOS</em></p>
<p>apt install rsync -y&nbsp; <em># Ubuntu</em></p>
<ol start="2">
<li><strong>创建 Rsync 密码文件</strong></li>
</ol>
<p>bash</p>
<p>echo "your_password" &gt; /etc/rsync.password</p>
<p>chmod 600 /etc/rsync.password</p>
<ol start="3">
<li><strong>测试手动同步</strong></li>
</ol>
<p>bash</p>
<p>rsync -avz /source/data/ rsync_user@目标服务器IP::data_backup --password-file=/etc/rsync.password</p>
<ol start="3">
<ul>
<li><strong>作用</strong>：验证配置正确性，确保网络和权限正常。</li>
</ul>
<li><strong>安装 Sersync</strong></li>
</ol>
<p>bash</p>
<p>wget https://github.com/wsgzao/sersync/raw/master/sersync2.5.4_64bit_binary_stable_final.tar.gz</p>
<p>tar -zxvf sersync2.5.4_64bit_binary_stable_final.tar.gz -C /opt/</p>
<p>mv /opt/GNU-Linux-x86/ /opt/sersync</p>
<ol start="5">
<li><strong>修改 Sersync 配置文件</strong></li>
</ol>
<p>bash</p>
<p>vim /opt/sersync/confxml.xml</p>
<p>xml</p>
<p><em>&lt;!-- 监控目录设置 --&gt;</em></p>
<p>&lt;localpath watch="/source/data"&gt;&nbsp; <em>&lt;!-- </em><em>源服务器需同步的目录 --&gt;</em></p>
<p>&nbsp;&nbsp;&nbsp; &lt;remote ip="目标服务器IP" name="data_backup"/&gt;&nbsp; <em>&lt;!-- </em><em>目标服务器模块名 --&gt;</em></p>
<p>&lt;/localpath&gt;</p>
<p>&nbsp;</p>
<p><em>&lt;!-- Rsync 参数 --&gt;</em></p>
<p>&lt;rsync&gt;</p>
<p>&nbsp;&nbsp;&nbsp; &lt;commonParams params="-artuz"/&gt;&nbsp; # 归档模式（保留属性）</p>
<p>&nbsp;&nbsp;&nbsp; &lt;auth start="true" users="rsync_user" passwordfile="/etc/rsync.password"/&gt;</p>
<p>&nbsp;&nbsp;&nbsp; &lt;timeout start="false" time="100"/&gt;&nbsp; <em>&lt;!-- </em><em>超时设置 --&gt;</em></p>
<p>&lt;/rsync&gt;</p>
<ol start="6">
<li><strong>启动 Sersync</strong></li>
</ol>
<p>bash</p>
<p>/opt/sersync/sersync2 -d -r -o /opt/sersync/confxml.xml</p>
<ol start="6">
<ul>
<li><strong>参数说明</strong>：</li>
<ul>
<li><strong>-d</strong>：守护进程模式</li>
<li><strong>-r</strong>：启动时先全量同步</li>
<li><strong>-o</strong>：指定配置文件</li>
</ul>
</ul>
<li><strong>设置开机自启</strong></li>
</ol>
<p>bash</p>
<p>echo "/opt/sersync/sersync2 -d -r -o /opt/sersync/confxml.xml" &gt;&gt; /etc/rc.local</p>
<p>chmod +x /etc/rc.local</p>
<div align="center"><hr align="center" size="1" width="100%"></div>
<p><strong>三、验证实时同步</strong></p>
<ol start="1">
<li><strong>在源服务器创建测试文件</strong></li>
</ol>
<p>bash</p>
<p>touch /source/data/testfile.txt</p>
<ol start="2">
<li><strong>检查目标服务器同步结果</strong></li>
</ol>
<p>bash</p>
<p>ls /data/backup&nbsp; <em># </em><em>应出现 testfile.txt</em></p>
<ol start="3">
<li><strong>查看 Sersync 日志</strong></li>
</ol>
<p>bash</p>
<p>tail -f /opt/sersync/rsync_fail_log.sh&nbsp; <em># </em><em>同步失败日志</em></p>
<div align="center"><hr align="center" size="1" width="100%"></div>
<p><strong>四、多维优化与监控</strong></p>
<p><strong>1. 性能优化</strong></p>
<ul>
<li><strong>调整 inotify 限制</strong>（解决监控文件数不足问题）：</li>
</ul>
<p>bash</p>
<p>echo "fs.inotify.max_user_watches=1000000" &gt;&gt; /etc/sysctl.conf</p>
<p>sysctl -p</p>
<ul>
<li><strong>Rsync 带宽限制</strong>（避免影响业务）：</li>
</ul>
<p>xml</p>
<p><em>&lt;!-- 在 confxml.xml 中增加 --&gt;</em></p>
<p>&lt;commonParams params="--bwlimit=10240 -artuz"/&gt;&nbsp; <em>&lt;!-- </em><em>限速 10MB/s --&gt;</em></p>
<p><strong>2. 高可用方案</strong></p>
<ul>
<li><strong>双活监控</strong>：部署多个 Sersync 进程监控不同目录。</li>
<li><strong>异常重启</strong>：添加 crontab 监控进程：</li>
</ul>
<p>bash</p>
<p>*/5 * * * * pgrep sersync2 || /opt/sersync/sersync2 -d -o /opt/sersync/confxml.xml</p>
<p><strong>3. 安全加固</strong></p>
<ul>
<li><strong>Rsync 最小权限</strong>：</li>
<ul>
<li>目标服务器使用非 root 用户运行 Rsync。</li>
<li>配置文件设置&nbsp;<strong>uid = rsync_user</strong>,&nbsp;<strong>gid = rsync_user</strong>。</li>
</ul>
<li><strong>SSH 隧道加密</strong>：</li>
</ul>
<p>xml</p>
<p><em>&lt;!-- 修改 confxml.xml --&gt;</em></p>
<p>&lt;rsync&gt;</p>
<p>&nbsp;&nbsp;&nbsp; &lt;ssh start="true" port="22" user="rsync_user"/&gt;</p>
<p>&lt;/rsync&gt;</p>
<p><strong>4. 故障排查工具</strong></p>
<ul>
<li><strong>手动触发同步</strong>：</li>
</ul>
<p>bash</p>
<p>/opt/sersync/sersync2 -r -o /opt/sersync/confxml.xml</p>
<ul>
<li><strong>查看 inotify 事件</strong>：</li>
</ul>
<p>bash</p>
<p>tail -f /proc/sys/fs/inotify/*&nbsp; <em># </em><em>监控事件队列</em></p>
<div align="center"><hr align="center" size="1" width="100%"></div>
<p><strong>方案优势</strong></p>
<ol start="1">
<li><strong>秒级延迟</strong>：Sersync 基于 inotify 内核事件触发，响应速度 &lt;1s。</li>
<li><strong>增量高效</strong>：Rsync 只同步变化部分，节省带宽。</li>
<li><strong>低资源占用</strong>：Sersync 单进程设计，CPU/内存消耗极低。</li>
<li><strong>断点续传</strong>：Rsync 支持传输中断后续传。</li>
</ol>
<p><strong>注意</strong>：大规模集群建议使用&nbsp;<strong>Lsyncd</strong>&nbsp;或&nbsp;<strong>DRBD</strong>，单服务器场景本方案为最优解。</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-08-10 14:52">2025-08-10 14:52</span>&nbsp;
<a href="https://www.cnblogs.com/Johny-zhao">Johny_Zhao</a>&nbsp;
阅读(<span id="post_view_count">91</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19030721);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19030721', targetLink: 'https://www.cnblogs.com/Johny-zhao/p/19030721', title: 'Rsync + Sersync 实时数据同步方案' })">举报</a>
</div>
        