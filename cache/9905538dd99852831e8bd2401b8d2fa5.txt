
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/isnotyou/p/18831285" title="发布于 2025-04-17 23:21">
    <span role="heading" aria-level="2">[not]exists和[not]in的区别</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p><strong>前言</strong>：近期在处理业务实际问题时发现使用in导致查询速度非常慢，于是查阅资料后发现使用exists能极大缩短查询时间，便将此经历记录下来。</p>
<h1 id="数据源">数据源：</h1>
<p>grade表<br>
<img src="https://img2024.cnblogs.com/blog/3407765/202504/3407765-20250417221159073-675327314.png" alt="" loading="lazy"><br>
stu_info表<br>
<img src="https://img2024.cnblogs.com/blog/3407765/202504/3407765-20250417221239130-1943255726.png" alt="" loading="lazy"></p>
<h1 id="exists与in">exists与in</h1>
<h2 id="in">in</h2>
<p><code>select name from stu_info where stu_no in ( select distinct stu_no from grade);</code></p>
<p>执行结果：<br>
<img src="https://img2024.cnblogs.com/blog/3407765/202504/3407765-20250417223527713-878483983.png" alt="" loading="lazy"></p>
<p>执行流程：</p>
<ul>
<li>首先通过子查询查出有成绩的所有学生学号</li>
<li>拿到结果后与user表进行比对<br>
in相当于多个or，如果内表即子查询返回m条记录，那么会用外表去遍历匹配内表，查m次。<br>
in是先查内表，在查外表。</li>
</ul>
<h2 id="exists">exists</h2>
<p><code>select name from stu_info  where exists (select * from grade where stu_info.stu_no = grade.stu_no);</code><br>
执行结果：<br>
<img src="https://img2024.cnblogs.com/blog/3407765/202504/3407765-20250417223527713-878483983.png" alt="" loading="lazy"></p>
<p>执行流程：</p>
<ul>
<li>首先查询外表，及执行 select name from stu_info</li>
<li>然后根据每条记录执行内表，判断内表中where条件是否成立，成立返回true，该行记录保留；不成立返回false，该行记录舍弃，得到最终结果。<br>
exists是先查外表，再查内表，根据外表行数去逐条查询。</li>
</ul>
<h2 id="区别">区别：</h2>
<p>内表m条，外表n条<br>
in：循环比对n次<br>
exists：循环比对m次</p>
<h2 id="什么时候用in什么时候用exists">什么时候用in什么时候用exists？</h2>
<ul>
<li>当内表大外表小，即m&gt;n时，使用in</li>
<li>当内表小外表大，即m&lt;n时，使用exists</li>
<li>当内表外表数据量差距很小时，用哪个都可以</li>
</ul>
<h1 id="not-in-与-not-exists">not in 与 not exists:</h1>
<p>比对结果与上述相反，但执行流程与上述相同<br>
<code>select name from stu_info where stu_no not in ( select distinct stu_no from grade);</code><br>
<code>select name from stu_info  where not exists (select * from grade where stu_info.stu_no = grade.stu_no);</code><br>
结果均为：<br>
<img src="https://img2024.cnblogs.com/blog/3407765/202504/3407765-20250417224323650-1839282717.png" alt="" loading="lazy"></p>
<h1 id="注">注：</h1>
<ul>
<li>exists子句中返回结果只为true或false，因此无论select后面时*或者某些字段效果都一样，mysql在子查询中忽略这些字段。<br>
如<code>select name from stu_info  where exists (select * from grade where stu_info.stu_no = grade.stu_no);</code>与<code>select name from stu_info  where exists (select 1 from grade where stu_info.stu_no = grade.stu_no);</code>执行结果是相同的。</li>
<li>exists子句中返回任意行即为true，即便是包含null值的行，若不返回任何行则为false。<br>
如：<code>select name from stu_info  where exists (select null);</code>等同于<code>select name from stu_info;</code>，因为select null返回含null的行，exists子句返回true。<br>
<code>select name from stu_info  where exists (select * from grade where stu_no = '100');</code>等同于<code>select name from stu_info  where false;</code>,不返回任意行，因为exists子查询中的结果不返回任意行，exists返回false。</li>
<li>以上可参考文档：<a href="https://dev.mysql.com/doc/refman/8.4/en/exists-and-not-exists-subqueries.html" target="_blank" rel="noopener nofollow">Subqueries with EXISTS or NOT EXISTS</a></li>
</ul>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.03907487023842592" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-17 23:24">2025-04-17 23:21</span>&nbsp;
<a href="https://www.cnblogs.com/isnotyou">玛卡巴卡H</a>&nbsp;
阅读(<span id="post_view_count">2</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18831285);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18831285', targetLink: 'https://www.cnblogs.com/isnotyou/p/18831285', title: '[not]exists和[not]in的区别' })">举报</a>
</div>
        