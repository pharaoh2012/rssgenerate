
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/GuijiH6/p/18647154" title="发布于 2025-01-03 10:39">
    <span role="heading" aria-level="2">DVWA靶场Weak Session IDs(弱会话) 漏洞所有级别通关教程及源码审计</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="weak-session-ids弱会话">Weak Session IDs(弱会话)</h1>
<p><strong>Weak Session IDs（弱会话ID）</strong>漏洞是一种安全漏洞，涉及在 web 应用程序中使用不安全或容易被猜测的会话标识符（Session  IDs）。会话ID是服务器用来识别用户会话的唯一标识符，通常在用户登录后生成并传递。弱会话ID有可能被攻击者预测、窃取或伪造，从而获取未经授权的访问权限</p>
<p>感兴趣的师傅可看看我的个人公众号：<strong>泷羽Sec-track</strong> ，不定期分享渗透测试常用工具</p>
<h2 id="low">low</h2>
<p>点击按钮并抓包</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20241230180913529.png" alt="" loading="lazy"></p>
<p>这里可以看到<strong>dvwaSession=某个数字</strong></p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20241230181829846.png" alt="" loading="lazy"></p>
<p>再一次抓包，这里变成了2，所以应该是每次刷新增加1</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20241230181916508.png" alt="" loading="lazy"></p>
<p>在浏览器找到cookie，并删除数据</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20241230182237775.png" alt="" loading="lazy"></p>
<p>这里在浏览器访问http://127.0.0.1/DVWA/vulnerabilities/weak_id/</p>
<p>抓包修改<strong>cookie</strong>即可成功登录</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20241230182615848.png" alt="" loading="lazy"></p>
<h3 id="源码审计">源码审计</h3>
<p>只设置了<strong>cookie值每次+1</strong></p>
<pre><code class="language-php">&lt;?php

$html = ""; // 初始化一个空字符串变量$html

if ($_SERVER['REQUEST_METHOD'] == "POST") { // 检查HTTP请求方法是否为POST
    if (!isset($_SESSION['last_session_id'])) { // 如果$_SESSION['last_session_id']没有被设置
        $_SESSION['last_session_id'] = 0; // 将$_SESSION['last_session_id']初始化为0
    }
    $_SESSION['last_session_id']++; // 递增$_SESSION['last_session_id']
    $cookie_value = $_SESSION['last_session_id']; // 赋值$cookie_value为当前的$_SESSION['last_session_id']
    setcookie("dvwaSession", $cookie_value); // 设置一个cookie，名称为"dvwaSession"，值为$cookie_value
}
?&gt;
</code></pre>
<h2 id="medium">medium</h2>
<p>这里步骤和low一样，就不多描述了，看看不同点</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20241230182953344.png" alt="" loading="lazy"></p>
<p>这里添加了<strong>时间戳</strong>，可以在这个网站生成时间戳https://tool.lu/timestamp/，发包时需要添加时间戳修改</p>
<h3 id="源码审计-1">源码审计</h3>
<p>设置了时间戳，并将其赋值给<code>$cookie_value</code></p>
<pre><code class="language-php">&lt;?php

$html = ""; // 初始化一个空字符串变量$html

if ($_SERVER['REQUEST_METHOD'] == "POST") { // 检查HTTP请求方法是否为POST
    $cookie_value = time(); // 获取当前的时间戳，并将其赋值给$cookie_value
    setcookie("dvwaSession", $cookie_value); // 设置一个cookie，名称为"dvwaSession"，值为当前时间戳
}
?&gt;
</code></pre>
<h2 id="high">high</h2>
<p>这里步骤也和之前一样，不再重复了，看看不同点，提交后出现了一个参数，<strong>dvwasession</strong>，</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20241230184249200.png" alt="" loading="lazy"></p>
<p>是md5加密，找个网站解密，是7</p>
<p><img src="https://track123.oss-cn-beijing.aliyuncs.com/20241230184413331.png" alt="" loading="lazy"></p>
<p>说明这个和low一样，只不过是数字进行了md5加密</p>
<h3 id="源码审计-2">源码审计</h3>
<p>如果<strong>last_session_id_high</strong>变量不存在，初始化它为<code>0</code>，并且+1，还设置了md5加密算法，设置cookie的有效期为当前时间加上1小时（3600秒），并且设置了请求域</p>
<pre><code class="language-php">&lt;?php

$html = ""; // 初始化一个空字符串变量$html

if ($_SERVER['REQUEST_METHOD'] == "POST") { // 检查HTTP请求方法是否为POST
    if (!isset($_SESSION['last_session_id_high'])) { // 检查会话变量'last_session_id_high'是否存在
        $_SESSION['last_session_id_high'] = 0; // 如果不存在，初始化该变量为0
    }
    $_SESSION['last_session_id_high']++; // 将会话变量'last_session_id_high'自增1
    $cookie_value = md5($_SESSION['last_session_id_high']); // 计算自增后的值的MD5哈希，作为cookie值
    setcookie(
        "dvwaSession", 
        $cookie_value, 
        time() + 3600, // 设置cookie的有效期为当前时间加上1小时（3600秒）
        "/vulnerabilities/weak_id/", // 限定cookie在此路径下可用
        $_SERVER['HTTP_HOST'], // 设置cookie的可用域为当前请求的主机
        false, // 设置cookie无需通过HTTPS传输
        false  // 设置cookie在HTTP头中可见，而不仅限于脚本访问
    );
}
?&gt;
</code></pre>
<h2 id="impossible">impossible</h2>
<h3 id="源码审计-3">源码审计</h3>
<p>生成一个更安全的随机会话ID，保证了<strong>cookie</strong>的安全性</p>
<pre><code class="language-php">&lt;?php

$html = ""; // 初始化一个空字符串变量$html

if ($_SERVER['REQUEST_METHOD'] == "POST") { // 检查HTTP请求方法是否为POST
    $cookie_value = sha1(mt_rand() . time() . "Impossible"); // 生成一个随机的cookie值
    setcookie(
        "dvwaSession", 
        $cookie_value, 
        time() + 3600, // 设置cookie的有效期为当前时间加上1小时（3600秒）
        "/vulnerabilities/weak_id/", // 限定cookie在此路径下可用
        $_SERVER['HTTP_HOST'], // 设置cookie的可用域为当前请求的主机
        true, // 设置cookie仅通过HTTPS传输
        true  // 设置cookie只能通过HTTP协议访问（不能被JavaScript访问，以提高安全性）
    );
}
?&gt;
</code></pre>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.31742452148958333" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-03 10:39">2025-01-03 10:39</span>&nbsp;
<a href="https://www.cnblogs.com/GuijiH6">H轨迹H</a>&nbsp;
阅读(<span id="post_view_count">18</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18647154" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18647154);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18647154', targetLink: 'https://www.cnblogs.com/GuijiH6/p/18647154', title: 'DVWA靶场Weak Session IDs(弱会话) 漏洞所有级别通关教程及源码审计' })">举报</a>
</div>
        