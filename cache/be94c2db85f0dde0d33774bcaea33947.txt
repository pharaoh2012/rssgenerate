
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/deali/p/19062037/git-lfs-manage-large-files" title="发布于 2025-08-28 09:28">
    <span role="heading" aria-level="2">模型文件硬塞进 Git，GitHub 直接打回原形：使用Git-LFS管理大文件</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        GitHub硬怼大文件？Git LFS了解一下，免费额度逼得你快用完就买。别指望这玩意儿当网盘用，模型放代码里提交是吧？这操作真是下饭。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="前言">前言</h2>
<p>最近接手了一个计算机视觉项目</p>
<p>代码是屎山就不说了，反正我也不看代码</p>
<p>主要就是构建一下 docker 镜像，测试一下部署的兼容性</p>
<p>这本来不难</p>
<p>但是，国内服务器的网络环境实在是恶劣，需要配置各种镜像（docker镜像、apt镜像、pip镜像），这些镜像还各有各的问题，结果就是搭配下来一直无法构建成功。</p>
<p>之后我灵机一动，利用 GitHub Actions 来构建镜像，以 GitHub 的服务器网络，所有问题不就迎刃而解了吗？</p>
<p>试了之后果然可以成功构建出镜像</p>
<p>不过中途也踩了一些坑，比如大文件的问题</p>
<p>之前的项目没遇到过大文件，因为我从不把 PyTorch 的模型文件放在代码里跟着提交到 git 里！</p>
<p>能做出这种操作的，多少带点那啥😅</p>
<h2 id="github对大文件的限制">GitHub对大文件的限制</h2>
<p><strong>GitHub 文件大小限制</strong>：</p>
<ul>
<li>单个文件 &gt; 50MB 会有警告</li>
<li>单个文件 &gt; 100MB 会直接被拒绝推送</li>
</ul>
<p>结果就是:</p>
<pre><code class="language-bash">Writing objects: 100% (304/304), 463.41 MiB | 3.23 MiB/s, done. Total 304 (delta 32), reused 0 (delta 0), pack-reused 0 (from 0) remote: Resolving deltas: 100% (32/32), done. remote: warning: File fire_detection/yolov5l.pt is 88.50 MB; this is larger than GitHub's recommended maximum file size of 50.00 MB remote: error: Trace: 52267c96d371181694b02dad5eebead817ce6d985e2f8d356c2b458adfbb2a09 remote: error: See https://gh.io/lfs for more information. remote: error: File runs/detect/fire_smoke_detection/weights/best.pt is 166.91 MB; this exceeds GitHub's file size limit of 100.00 MB remote: error: File runs/detect/fire_smoke_detection/weights/best.pt is 250.32 MB; this exceeds GitHub's file size limit of 100.00 MB remote: error: GH001: Large files detected. You may want to try Git Large File Storage - https://git-lfs.github.com. To github.com:cppstudio/fire-detection.git ! [remote rejected] master -&gt; master (pre-receive hook declined) error: failed to push some refs to 'github.com:studio/fire-detection.git'
</code></pre>
<p>解决办法就是用 <strong>Git LFS (Large File Storage)</strong>，GitHub 官方提供的专门存储大文件（模型权重、二进制、音频视频）的功能。</p>
<p>不过这个也挺抠门的，GitHub LFS 免费额度只有 <strong>1GB 存储 + 1GB 流量</strong>，超出需要买额外配额（或者用 HuggingFace/百度网盘/OSS 等托管模型文件）。</p>
<p>如果只是存 <code>.pt</code> 模型，可以考虑把权重放 HuggingFace，然后在 README 里写下载链接。</p>
<h2 id="安装-git-lfs-工具">安装 git-lfs 工具</h2>
<p>每个系统都能很容易安装</p>
<pre><code class="language-bash"># Linux (Ubuntu/Debian)
sudo apt install git-lfs

# macOS (brew)
brew install git-lfs

# Windows (scoop)
scoop install git-lfs
</code></pre>
<p>然后初始化</p>
<pre><code class="language-bash">git lfs install
</code></pre>
<h2 id="跟踪大文件类型">跟踪大文件类型</h2>
<p>比如说在本文的场景里，<code>.pt</code> 模型文件很大，可以指定让 LFS 管理</p>
<pre><code class="language-bash">git lfs track "*.pt"
</code></pre>
<p>这会在仓库生成一个 <code>.gitattributes</code> 文件，内容大概是</p>
<pre><code class="language-bash">*.pt filter=lfs diff=lfs merge=lfs -text
</code></pre>
<p>记得把这个 <code>.gitattributes</code> 也提交进 git</p>
<pre><code class="language-bash">git add .gitattributes
git commit -m "track large files with Git LFS"
</code></pre>
<h2 id="重新提交大文件">重新提交大文件</h2>
<p>之前的提交如果包含了大文件</p>
<p>需要把这些大文件重新提交到 LFS</p>
<p>好在 git-lfs 提供了很方便的命令来清理历史，不然就得用我之前发的那篇文章里的方法来清理大文件了。详见: <a href="https://blog.deali.cn/p/clean-git-history-large-files" target="_blank" rel="noopener nofollow">如何清理误提交到git的历史大文件？</a></p>
<pre><code class="language-bash"># 用 git lfs migrate 自动替换历史中的大文件
git lfs migrate import --include="*.pt"

# 强制推送
git push origin master --force
</code></pre>
<p>之后正常执行推送操作就行了</p>
<pre><code class="language-bash">git push origin master
</code></pre>
<p>GitHub 就会把大文件存到 LFS，而不是普通 Git 仓库里。</p>
<h2 id="拉取大文件">拉取大文件</h2>
<p>用了 <strong>Git LFS</strong> 之后，仓库里保存的大文件（比如 <code>.pt</code>）在普通 <code>git clone</code> 的时候只会看到一个 <strong>指针文件</strong>（几十字节，记录了真实文件在 LFS 存储里的位置）。</p>
<p>要把大文件本体下载下来，必须要安装过 <strong>Git LFS</strong>。</p>
<h3 id="具体情况">具体情况</h3>
<ul>
<li><strong>如果机器上没装 Git LFS</strong>：clone 下来后，大文件就是“指针文件”，打不开、用不了。</li>
<li><strong>如果机器上装了 Git LFS</strong>：clone 时会自动替换成真正的大文件。</li>
<li><strong>如果已经 clone 过但大文件没拉下来</strong>：可以手动执行：<code>git lfs pull</code></li>
</ul>
<p>所以通常项目 README 里会写一句提示：</p>
<pre><code class="language-markdown">## 注意

本项目使用 [Git LFS](https://git-lfs.github.com/) 管理大文件（模型权重等）。

请先执行：

```bash
git lfs install
git lfs pull
```
</code></pre>
<h2 id="小结">小结</h2>
<p>这次折腾 GitHub 大文件问题，其实给了我几点启发：</p>
<ol>
<li><strong>GitHub 的限制</strong>：超过 100MB 的文件是绝对过不去的，别想着强行提交。</li>
<li><strong>Git LFS 的价值</strong>：官方解决方案简单好用，但免费额度很抠，适合小规模文件管理。</li>
<li><strong>替代方案</strong>：如果模型文件动辄几百 MB，推荐放在 HuggingFace、OSS、百度网盘等专门的存储平台，再在代码里提供下载脚本或链接。</li>
<li><strong>最佳实践</strong>：代码就是代码，模型就是模型，别混着提交；把仓库保持干净，后期协作和部署都省心。</li>
</ol>
<p>简单一句话总结：<strong>学会用 Git LFS，能应急；但别把它当免费网盘用。</strong></p>
<p>另外，再多嘴一句：这个项目看着就像典型的“大学生作业仓库”——代码像屎山，模型直接丢进 git 里，八成还是教授一拍脑袋甩给研究生的“科研成果”。说实话，能跑起来已经算奇迹了 😂。</p>

</div>
<div id="MySignature" role="contentinfo">
    微信公众号：「程序设计实验室」
专注于互联网热门新技术探索与团队敏捷开发实践，包括架构设计、机器学习与数据分析算法、移动端开发、Linux、Web前后端开发等，欢迎一起探讨技术，分享学习实践经验。
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-08-28 09:29">2025-08-28 09:28</span>&nbsp;
<a href="https://www.cnblogs.com/deali">程序设计实验室</a>&nbsp;
阅读(<span id="post_view_count">174</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19062037);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19062037', targetLink: 'https://www.cnblogs.com/deali/p/19062037/git-lfs-manage-large-files', title: '模型文件硬塞进 Git，GitHub 直接打回原形：使用Git-LFS管理大文件' })">举报</a>
</div>
        