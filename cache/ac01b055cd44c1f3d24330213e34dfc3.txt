
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ChebyshevTST/p/18673509" title="发布于 2025-01-15 17:32">
    <span role="heading" aria-level="2">在OERV也可以玩MC（下）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>  <span style="font-size: 16px">话接上回，上期讲述了在OERV安装HMCL的历程，这期讲讲HMCL的打包。</span></p>
<p><span style="font-size: 16px">  <a href="https://build.tarsier-infra.isrc.ac.cn/package/show/openEuler:24.09/HMCL" rel="noopener nofollow">Show openEuler:24.09 / HMCL - 开源软件构建与测试</a>。在这个网站里，可以看到有好几个文件，这些都跟HMCL打包有关。 第一个是_service文件，这个文件用于从特定仓库里面拉取代码文件到当前平台，可以看见每个文件都有特定前缀，这些都是拉取过来之后平台自动加的。</span></p>
<p><span style="font-size: 16px"><img src="https://img2024.cnblogs.com/blog/3254001/202501/3254001-20250115171353863-1728914608.png"></span></p>
<p><span style="font-size: 16px">  如果想自己动手进行打包，只需要把url的git仓库换掉就行。然后上传_service文件，相应的仓库就拉取过来了。</span></p>
<p><span style="font-size: 16px">  此外还可以看到有spec文件和一个压缩包，其它的可以暂时不用关注。spec文件用于编写打包脚本，包括包的编译依赖、运行依赖以及编译行为等。压缩文件是源码包文件，从包对应的官方网站下载。接下来重点关注spec文件的编写过程。</span></p>
<p><span style="font-size: 16px">  如果对spec文件的规范不熟悉，可以先看这篇：<a href="https://www.openeuler.org/zh/blog/yushi-Icy/2023-08-20-introduce-to-rpm.html" rel="noopener nofollow">软件包引入前置基础知识（RPM/SPEC/DNF） | openEuler社区</a>。</span></p>
<p><img src="https://img2024.cnblogs.com/blog/3254001/202501/3254001-20250115171903156-299886545.png"></p>
<p><span style="font-size: 16px">  这么简洁，我一开始也没想到。甚至在编译阶段都不需要写任何脚本，只需要在下载阶段进行相应的文件拷贝和处理就行。BuildRequires是编译依赖，主要用于编译过程，在下载阶段需要通过desktop-file-validate以及desktop-file-install对desktop文件处理。而Requires是运行时依赖，如果编译好HMCL，想要安装则需要jdk17的加持，可以看到上期我为了安装jdk17也是费了不少心思。BuildRequires和Requires填写的包都需要obs平台事先编译过，不然平台会显示unresolvable。</span></p>
<p><span style="font-size: 16px">  %files阶段其实和%install阶段差不多，%build和%install都是在临时环境中运行的，为了防止破坏系统，到了%files阶段则列出rpm包里的文件有哪些，下载了之后就可以见到这些文件了，这个阶段是指明文件最终的安装路径的。至于要写哪些文件，则需要自己打开压缩包查看，需要对软件包本身比较熟悉（往往很多时候都是看到编译失败再来改改spec文件，一次性完整写好我做不到😭）</span></p>
<p><span style="font-size: 16px"><img src="https://img2024.cnblogs.com/blog/3254001/202501/3254001-20250115173121699-1209355681.png"></span></p>
<p><span style="font-size: 16px">  压缩包只有这三个文件，所以上面%files阶段也只有三个文件。</span></p>
<p><span style="font-size: 16px">  另外，编写spec文件过程运用到了大量的宏，这样可以保证跨平台性，在openEuler 24.09的仓库当中，HMCL的打包算是比较简洁的了，恰好MC又是一款有趣的游戏，打包也简单。</span></p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.7816399276180556" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-15 17:32">2025-01-15 17:32</span>&nbsp;
<a href="https://www.cnblogs.com/ChebyshevTST">ChebyshevTST</a>&nbsp;
阅读(<span id="post_view_count">59</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18673509" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18673509);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18673509', targetLink: 'https://www.cnblogs.com/ChebyshevTST/p/18673509', title: '在OERV也可以玩MC（下）' })">举报</a>
</div>
        