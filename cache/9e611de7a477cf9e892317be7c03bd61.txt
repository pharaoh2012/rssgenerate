
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Hu-yan-xin/p/19041878" title="发布于 2025-08-16 10:51">
    <span role="heading" aria-level="2">VsCode 使用指南（配置 + 美化）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="0xff-写在前面">0xFF 写在前面</h2>
<p>感谢 <a href="https://www.luogu.com.cn/user/1399785" target="_blank" rel="noopener nofollow">hinin</a> 对我的技术指导以及 <a href="https://www.luogu.com.cn/user/901379" target="_blank" rel="noopener nofollow">ltl0825 </a> 和 <a href="https://www.luogu.com.cn/user/1256312" target="_blank" rel="noopener nofollow">Charllote_</a> 在使用配置 VsCode 的过程中对我文章的勘误与补充。</p>
<h2 id="0x01-安装-mingw">0x01 安装 MinGW</h2>
<p><a href="http://gh.llkk.cc/https://github.com/skeeto/w64devkit/releases/download/v2.4.0/w64devkit-x64-2.4.0.7z.exe" target="_blank" rel="noopener nofollow">link</a> 下载，在下载中点击下图安装包下载，</p>
<p><img src="https://origin.picgo.net/2025/08/16/17ada67d12f6e4b9e5.png" alt="17" loading="lazy"></p>
<p>将这个链接复制（等会会用到），</p>
<p><img src="https://origin.picgo.net/2025/08/16/1876ed6e3bdc398cb3.png" alt="18" loading="lazy"></p>
<p>如果弹出此弹窗，就说明已经有 MinGW，直接跳过下载即可（点击 Cancel），</p>
<p><img src="https://origin.picgo.net/2025/08/16/193b39277f762ec3b6.png" alt="19" loading="lazy"></p>
<p>下载完成后在控制面板中搜索 <strong>查看高级系统设置</strong>，</p>
<p><img src="https://origin.picgo.net/2025/08/14/16f68c000af77f26e.png" alt="1" loading="lazy"></p>
<p>点击环境变量，</p>
<p><img src="https://origin.picgo.net/2025/08/14/2baf4bdf736075fc8.png" alt="2" loading="lazy"></p>
<p>点击系统变量中的 <code>Path</code> 变量，点击编辑，</p>
<p><img src="https://origin.picgo.net/2025/08/15/14df4895a3d99c9af7.png" alt="14" loading="lazy"></p>
<p>点击新建，接着将刚刚保存的地址复制进去。</p>
<p><img src="https://origin.picgo.net/2025/08/15/3fd2ae9ed49feb793.png" alt="3" loading="lazy"></p>
<p>测试：按 Win + R 调出命令指示符，输入 cmd，输入 g ++ --veresion，若弹出如下图类似的字符，即设置成功。</p>
<p><img src="https://origin.picgo.net/2025/08/14/41ab3989e2557ddd4.png" alt="4" loading="lazy"></p>
<h2 id="0x02-安装-vscode">0x02 安装 VsCode</h2>
<p>今入官网（<a href="https://code.visualstudio.com/Download" target="_blank" rel="noopener nofollow">link</a>）并点击对应的版本安装（如果你是管理员，则请安装 <strong>System Installer</strong> 版，否则安装 <strong>User Installer</strong> 版），安装好之后点击安装包安装。</p>
<p><img src="https://origin.picgo.net/2025/08/14/636057c453a12c633.png" alt="6" loading="lazy"></p>
<h2 id="0x03-必要的配置">0x03 必要的配置</h2>
<p>安装完成后按 Ctrl + Shift + X，下载如下插件：</p>
<ul>
<li>Chinese (Simplified) (简体中文)，进行必要的汉化。</li>
<li>OI Runner ++ ，可以用于运行你的程序（文件路径必须无中文，否则会乱码引起错误）。</li>
<li>C/C++，将 C/C++ 的语言支持添加到 Visual Studio 代码中，包括编辑（IntelliSense）和调试功能。</li>
<li>Competitive Programming Helper (cph)，可以直接在左侧窗口输入样例和并测试。</li>
<li>Error Lens：改进错误、警告和其他语言诊断的突出显示。</li>
</ul>
<h2 id="0x04-运行文件">0x04 运行文件</h2>
<h3 id="方法-1">方法 1</h3>
<p>点击左侧的三条竖线，点击 "+ Create Problem"，并在第一个框中输入样例输入，第二个框中输入样例输出，点击 Run 即可运行。</p>
<p><img src="https://origin.picgo.net/2025/08/14/8474434269168f889.png" alt="8" loading="lazy"></p>
<p>如果显示 <code>Passed</code> 就是已经通过，如果是 <code>Failed</code> 就是答案错误，如果输出了 <code>SEGTERM</code> 就是输出过多或死循环 RE，TLE 了就直接停摆了。<img src="https://origin.picgo.net/2025/08/14/967db0bc2f5d63e64.png" alt="9" loading="lazy"></p>
<h3 id="方法-2">方法 2</h3>
<p>容易发现，法 1 无法进行死循环输出或判断代码是否 RE 或 TLE，所以此处给出另一种方法：点击文件，点击右上角的三角，接着点击 <code>Launch OI Runner ++ </code>，在下面的窗口的 <code>Input</code> 输入样例输入，点击两个叠起来的三角，就可以运行，可以应用于死循环和 RE，但要求文件路径为全英文，如图（建议使用深色主题，否则浅色的运行按钮看不见）：<img src="https://origin.picgo.net/2025/08/15/153ff33155ff9c191a.png" alt="15" loading="lazy"></p>
<h2 id="0x04-luogu-刷题必备">0x04 luogu 刷题必备</h2>
<ol>
<li>安装 vscode-luogu，之后跟随引导登录；</li>
<li>如果要查看 Luogu 里的题目时 先按 Ctrl + Alt + G，接着再按 P 并输入题号，可以弹出题目内容，点击“传送到 cph”，进入三条杠运行即可；</li>
<li>需要提交题目时，按 Ctrl + Alt + G，接着按 S 再输入题号并选择语言即可提交代码。</li>
</ol>
<h2 id="0x05-缺省源设置">0x05 缺省源设置</h2>
<p>点击左下角设置，点击 "代码片段"，在上方搜索框中输入 <code>cpp.json</code>，</p>
<p><img src="https://origin.picgo.net/2025/08/14/10ab082d5a06523250.png" alt="10" loading="lazy"></p>
<p>这是默认情况：</p>
<pre><code class="language-cpp">{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
}

</code></pre>
<p>这里给出我的缺省源：</p>
<pre><code class="language-cpp">{
	"QWQ": {
		"prefix": "Problem",
		"body": [
			"#include &lt;bits/stdc++.h&gt;",
			"#define PII pair &lt;int, int&gt;",
			"#define LL long long",
			"#define ST string",
			"#define DB double",
			"",
			"#define fr(x, y, z) for(int x = y; x &lt;= z; x ++ )",
			"#define dfr(x, y, z) for(int x = y; x &gt;= z; x -- )",
			"",
			"using namespace std;",
			"",
			"const int N = 0;",
			"",
			"signed main()",
			"{",
			"    ios::sync_with_stdio(false);",
			"    cin.tie(0);",
			"",
			"    return 0;",
			"}",
			""
		]
	},
	"QAQ": {
		"prefix": "Contest",
		"body": [
			"#include &lt;bits/stdc++.h&gt;",
			"#define PII pair &lt;int, int&gt;",
			"#define LL long long",
			"#define ST string",
			"#define DB double",
			"",
			"#define fr(x, y, z) for(int x = y; x &lt;= z; x ++ )",
			"#define dfr(x, y, z) for(int x = y; x &gt;= z; x -- )",
			"",
			"using namespace std;",
			"",
			"const int N = 0;",
			"",
			"signed main()",
			"{",
			"    freopen(\".in\", \"r\", stdin);",
			"    freopen(\".out\", \"w\", stdout);",
			"",
			"    ios::sync_with_stdio(false);",
			"    cin.tie(0);",
			"",
			"    return 0;",
			"}",
			""
		]
	}
}
</code></pre>
<p>在 cpp 程序中，若是我的缺省源，输入 <code>Problem</code> 或 <code>Contest</code> 就会激活缺省源，具体效果如图：</p>
<p><img src="https://origin.picgo.net/2025/08/16/201585289dffcbf209.png" alt="20" loading="lazy"></p>
<p>如果觉得手动打缺省源太累了的话，可以使用以下代码：</p>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    string s;
    bool flg = 1;
    while(1)
    {
        getline(cin,s);
        if(s[0] == '~') break;
        if(!flg) cout &lt;&lt; ",\n";
        flg = 0;
        cout &lt;&lt; '"' &lt;&lt; s &lt;&lt; '"';
    }
    cout&lt;&lt;endl;

    return 0;
} 

</code></pre>
<p>其中以 <code>~</code> 判断缺省源输入是否结束，所以请在缺省源结束时输入 <code>~</code>。</p>
<h2 id="0x06-vscode-字体设置">0x06 VsCode 字体设置</h2>
<ol>
<li>Fira Code（<a href="https://github.com/tonsky/FiraCode/blob/master/README_CN.md" target="_blank" rel="noopener nofollow">link</a>）</li>
<li>JetBrains Mono（<a href="https://www.jetbrains.com/lp/mono/" target="_blank" rel="noopener nofollow">link</a>）</li>
<li>Cascadia Code（<a href="https://github.com/microsoft/cascadia-code" target="_blank" rel="noopener nofollow">link</a>)</li>
</ol>
<p>设置时按 Ctrl + , 进入设置，搜索 <code>editor.fontFamily</code>，在跳出的输入框中输入 <code>'X', monospace</code> 的格式（<code>X</code> 为要使用的字体名称，一定要加上单引号括起来），就可以完成替换。<img src="https://origin.picgo.net/2025/08/15/133598706e3f35fee8.png" alt="13" loading="lazy"></p>
<h2 id="0x07-提升-vscode-的适应性">0x07 提升 VsCode 的适应性</h2>
<ul>
<li>Office Viewer：查看表格和 PDF</li>
<li>Markdown Editor：实时查看 Mardown 文件</li>
<li>Markdown All in One：按下 Ctrl + K 接着按 V 在侧边栏预览，按下 Ctrl + Shift + V 直接进行预览</li>
</ul>
<h2 id="0x08-vscode-主题">0x08 VsCode 主题</h2>
<p>主题的效果因人而异，不同的人对于不同的主题可能有不同的看法，还是那句话：喜欢就好，下面是几款推荐的主题（第一个使我用的）</p>
<ul>
<li>Tomorrow and Tomorrow Night Theme Kit</li>
<li>One Dark Pro</li>
<li>Atom One Light</li>
<li>Monokai Pro</li>
<li>Material Theme</li>
<li>Night Owl</li>
<li>SynthWave '84</li>
<li>Winter is Coming</li>
<li>GitHub Theme</li>
<li>Shades of Purple</li>
<li>Panda Theme</li>
</ul>
<p>VsCode 设置主题的方法：按下 Ctrl + K 之后按 Ctrl + T，在上方弹出的主题表中选择主题即可。</p>
<h2 id="0x09-其他-vscode-优化">0x09 其他 VsCode 优化</h2>
<ul>
<li>BRacket Pair Colorizer：给匹配的括号上色</li>
<li>Indent-Rainbow：使缩进带有颜色</li>
<li>Mataerial Icon Theme：美化文件图标</li>
<li>Power Mode：在输入字符时显示粒子效果（如觉得卡顿可以去除抖动效果）</li>
<li>TODO Highlight：<code>TODO</code> 字符高亮显示</li>
<li>A-super-translate：划词翻译</li>
<li>Prettier - Code formatter：代码格式化</li>
<li>filesize：在下方蓝色状态栏中显示文件的大小</li>
<li>TabNine：使用 AI 补全代码，匹配时候的字串</li>
<li>VS Code Counter：将代码、注释、空白行数，以及使用语言整理成表格，使用时右键需要统计的文件夹 —Count lines in directory 即可</li>
<li>Rainbow CSV：使 CSV 类型文件看起来更好看</li>
<li>Peacock：美化工作区颜色</li>
<li>会了吧：打开源码后自动分析所有包含的英语单词</li>
</ul>
<h2 id="0x0a-写在结尾">0x0A 写在结尾</h2>
<p>其实我也刚熟悉 VsCode 的使用模式，如有疏漏，敬请大家提出修改意见，我会及时修改。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.001388888888888889" data-date-updated="2025-08-16 10:53">2025-08-16 10:51</span>&nbsp;
<a href="https://www.cnblogs.com/Hu-yan-xin">Hyvial</a>&nbsp;
阅读(<span id="post_view_count">35</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(19041878);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '19041878', targetLink: 'https://www.cnblogs.com/Hu-yan-xin/p/19041878', title: 'VsCode 使用指南（配置 + 美化）' })">举报</a>
</div>
        