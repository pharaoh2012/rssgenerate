
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lemondu/p/18829218" title="发布于 2025-04-16 17:42">
    <span role="heading" aria-level="2">Cursor入门教程-JetBrains过度向</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        <img src="https://img2024.cnblogs.com/blog/3570497/202504/3570497-20250416174141230-201287298.png" alt="Cursor入门教程-JetBrains过度向" class="desc_img">
        前置：之前博主使用的是JetBrains的IDE，VSCode使用比较少，所以会尽量朝着JetBrains的使用习惯及样式去调整。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="cursor使用笔记">Cursor使用笔记</h1>
<p><strong>前置：</strong>之前博主使用的是JetBrains的IDE，VSCode使用比较少，所以会尽量朝着JetBrains的使用习惯及样式去调整。</p>
<h2 id="一设置语言为中文">一、设置语言为中文</h2>
<p>如果刚上手Cursor，那么肯定对Cursor中的众多选项配置项不熟悉，这时候如果是默认的英文，会比较妨碍快速熟悉Cursor，因此可以将其语言调整为中文，因为Cursor是以VSCode为模版拓展的，所以我们可以直接下载一个中文插件（Chinese (Simplified) (简体中文) Language Pack for Visual Studio Code），安装完重启Cursor后就会显示中文界面了。<img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416103723852.png" alt="image-20250416103723852" loading="lazy"></p>
<p><img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416103845980.png" alt="image-20250416103845980" loading="lazy"></p>
<h2 id="二设置jetbrains的主题">二、设置JetBrains的主题</h2>
<h3 id="21-颜色主题">2.1 颜色主题</h3>
<p>Cursor的默认主题，真的两眼一黑，颜色很淡而且还有大量紫色这样的鲜艳颜色，属于是多看一眼我都会爆炸。后来我在试用了多个主题后，包括最火的吸血鬼主题，还有Community Material Theme主题以及所有的JetBrains主题，最好用的感觉还是JetBrains Darcula Theme这款主题。<img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416105712043.png" alt="image-20250416105712043" loading="lazy"></p>
<p>设置方法为首选项 -&gt; 主题 -&gt; 颜色主题，选择JetBrains Darcula Theme就可以。</p>
<p><img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416105923830.png" alt="image-20250416105923830" loading="lazy"></p>
<p>颜色大致如下：</p>
<p><img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416110451808.png" alt="image-20250416110451808" loading="lazy"></p>
<h3 id="22-icon主题">2.2 Icon主题</h3>
<p>Icon主题选择JetBrains Icon Theme这个插件进行安装，在首选项 -&gt; 主题 -&gt; 文件图标主题中添加图中的Icon主题安装：<img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416111550943.png" alt="image-20250416111550943" loading="lazy"></p>
<p>其图标样式大致如下：</p>
<img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416111636065.png" alt="image-20250416111636065" style="zoom: 67%">
<h2 id="三插件推荐">三、插件推荐</h2>
<p>除了以上几款主题的插件推荐，还有几款实用的插件也建议安装一下。</p>
<h3 id="git">Git</h3>
<p>首先是两款Git相关的插件，分别是Git Graph和Git History，Git Graph是可以看到分支的提交合并回滚等记录，十分方便，Git History则是可以查看当前代码是在哪个提交中，提交人是谁，能够更好的追踪溯源。</p>
<p><img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416112819591.png" alt="image-20250416112819591" loading="lazy"></p>
<p><img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416112836647.png" alt="image-20250416112836647" loading="lazy"></p>
<h3 id="快捷键">快捷键</h3>
<p>如果用惯了IDEA的快捷键，那你肯定不习惯VSCode的快捷键，这时候就需要它了：IntelliJ IDEA Keybindings，这款插件安装后可以帮你自动设置好IDEA中快捷键，无缝衔接～</p>
<p><img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416113302775.png" alt="image-20250416113302775" loading="lazy"></p>
<h3 id="markdown">Markdown</h3>
<p>有一个插件可以直接在Cursor中预览Markdown，名字叫Markdown Preview Mermaid Support，安装完就可以直接在Cursor中预览MD文档了。</p>
<p><img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416172155516.png" alt="image-20250416172155516" loading="lazy"></p>
<h2 id="四cursor使用">四、Cursor使用</h2>
<h3 id="41-界面介绍">4.1 界面介绍</h3>
<p><img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416140922875.png" alt="image-20250416140922875" loading="lazy"></p>
<p>Cursor的界面主要分为四块</p>
<ul>
<li>最左边就是文件区，可以显示打开的项目文件目录；</li>
<li>中间是展示区，点击文件，文件内容会展示在这里，编写代码就在这个区域；</li>
<li>最右边的就是Cursor独有的对话区，可以直接进行对话并帮助你编写代码直接生成到项目中，这也是Cursor的核心具体后面会进行介绍；</li>
<li>最后就是下方输出区，日志打印，调试控制台，终端等都在这里。</li>
</ul>
<p>另外还有一个需要关注的，就是如何展示关闭这三块内容，一开始熟悉Cursor的时候我关闭了下方输出窗口，找了半天没有找到，后来发现在界面的右上角：</p>
<p><img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416141818372.png" alt="image-20250416141818372" loading="lazy"></p>
<p>这三个分别对应着上个界面图里介绍的文件区，输出区和AI对话区，点击即可打开或关闭。</p>
<h3 id="42-运行与调试">4.2 运行与调试</h3>
<p>由于JetBrains的IDE是可以直接在文件中或者调试的，有一个绿色的三角，点击可以选择run或者debug。Cursor中找了半天没找到，后来发现它在界面的左上角：</p>
<p><img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416140043400.png" alt="image-20250416140043400" loading="lazy"></p>
<p>点击图标后点击运行和调试即可，要注意选到对应的main函数入口文件再进行运行调试，调试的字段参数都在左侧：</p>
<p><img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416140417495.png" alt="image-20250416140417495" loading="lazy"></p>
<p>debug工具在上面：</p>
<p><img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416140518668.png" alt="image-20250416140518668" loading="lazy"></p>
<h3 id="43-git使用">4.3 git使用</h3>
<p>在界面左上角的git标志中，会展示各个项目的源代码管理，点击某个项目的右侧三个小点，可以看到如下展示：</p>
<img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416142508952.png" alt="image-20250416142508952" style="zoom: 67%">
<ul>
<li>拉取：从该分支的远程分支上拉取最新提交到本地分支上</li>
<li>推送：将本地上该分支的修改内容推送到远程分支上</li>
<li>克隆：通过ssh或者https链接克隆新的项目</li>
<li>签出到...：切换分支</li>
<li>抓取：从远程上抓取整个项目的变动，包括分支的新增删除</li>
</ul>
<blockquote>
<p>[!NOTE]</p>
<p>注意，如果出现远程与本地tag冲突，删除本地tag即可。<code>git tag -d 具体tag名字</code></p>
</blockquote>
<h3 id="44-多项目同时打开">4.4 多项目同时打开</h3>
<p>原先在JetBrains的IDE中，是可以使用Merge All Project Windows合并所有的项目，可以方便的在IDE顶部进行切换</p>
<p><img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416152803726.png" alt="image-20250416152803726" loading="lazy"></p>
<p><img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416152941599.png" alt="image-20250416152941599" loading="lazy"></p>
<p>不过我在Cursor中并没有看到有这样的功能，不过有一个类似的，只不过在左侧的文件栏中，具体方法是 <strong>文件-&gt; 将文件添加到工作区中</strong>，这样每个项目都是一个文件夹，可以在文件栏中进行切换，不过感觉还是没有IDEA中方便。</p>
<p><img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416153136879.png" alt="image-20250416153136879" loading="lazy"></p>
<h3 id="45-cursor特性">4.5 Cursor特性</h3>
<h4 id="451-智能补全代码">4.5.1 智能补全代码</h4>
<p>Cursor可以自动学习你的代码编程习惯，你只要打一点代码，Cursor就会自动进行智能补全，这时候只需按下<code>Tab</code>键，就可以将生成的代码直接补全，这也是AI编程中最常用的一种，能够极大提高效率，不过要注意检查生成的代码逻辑是否正确。如图，我只打了if，就帮忙自动补全了接下来原本要写的代码。</p>
<p><img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416165021697.png" alt="image-20250416165021697" loading="lazy"></p>
<h4 id="452-快速添加询问内容">4.5.2 快速添加询问内容</h4>
<p>在Cursor中，不必再手动复制想要更改的代码片段，或者输出的报错这些内容到对话框中，Cursor提供了一键添加到快捷功能，选中某个片段，可以看到<code>Add to Chat</code>这个功能。</p>
<p><img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416155949610.png" alt="image-20250416155949610" loading="lazy"></p>
<p>点击后，可以看到这几行以及整个的这个文件的索引都会被添加到对话框中，这样就可以方便的添加上下文，便于模型去理解以达到更好的生成效果，选择好后，输入想要实现或者更改的功能，点击send稍等片刻就可以获得生成后的代码了。</p>
<p><img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416160105346.png" alt="image-20250416160105346" loading="lazy"></p>
<h4 id="453-内联代码编辑与生成">4.5.3 内联代码编辑与生成</h4>
<p>在选中代码段后，除了<code>Add to Chat</code>选项，还有个<code>Edit</code>选项，快捷键为系统键➕K，可以快速在代码内生成一个对话框，输入想要实现的内容，会快速在当前内容上进行修改，可以选择<code>Accept</code>或者<code>Reject</code>。</p>
<p><img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416163058577.png" alt="image-20250416163058577" loading="lazy"></p>
<p>也可以选择<code>quick question</code>，这就和普通的AI对话一样，不会修改代码只提供建议。</p>
<p><img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416163313662.png" alt="image-20250416163313662" loading="lazy"></p>
<h4 id="454-agent快速生成">4.5.4 Agent快速生成</h4>
<p>Cursor的协作模式有三种：Ask、Edit和Agent三种模式。</p>
<p><strong>Ask模式</strong></p>
<ul>
<li>询问特定代码段的问题</li>
<li>获取复杂函数的解释</li>
<li>查找代码模式和示例</li>
<li>探索并理解代码库</li>
</ul>
<p><strong>Edit模式</strong></p>
<ul>
<li>对代码进行单次编辑</li>
<li>精确应用有针对性的更改</li>
<li>自信地审查和应用更改</li>
<li>单独处理文件</li>
</ul>
<p><strong>Agent模式(默认)</strong></p>
<ul>
<li>进行代码库范围的更改和重构</li>
<li>根据需求实现新功能</li>
<li>调试跨多个文件的复杂问题</li>
<li>生成测试和文档</li>
<li>保持整个项目的一致性</li>
</ul>
<p>最常用的是Agent模式，其他两种用的比较少。</p>
<p>如果说上面的内联代码快速生成可以提高编程效率，那<code>Agent</code>就是一个AI配对程序员，可以用于复杂的代码修改，甚至可以大规模进行编辑，比如现在我要生成一个新的时间工具类，我只需使用@指定新文件生成位置，然后告诉其诉求，就可以直接生成一个新的时间类方法文件。</p>
<img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416165812894.png" alt="image-20250416165812894" style="zoom: 67%">
<p>点击Accept后，这个新文件可以直接添加到对应目录中，当然如果不满意或者有新的功能需要更改，可以继续在对话框中添加要求直至生成符合自己要求的代码文件。</p>
<img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416165954236.png" alt="image-20250416165954236" style="zoom: 50%">
<p>除了代码，你甚至还可以在Cursor中生成流程图之类的文档，给予指令“生成流程图，使用markdown语法，并生成一个新文件”，可以得到如图所示的流程图文档：</p>
<p><img src="https://blog-lemon.oss-cn-shanghai.aliyuncs.com/blog/image-20250416172437027.png" alt="image-20250416172437027" loading="lazy"></p>
<p>Agent的使用方法还有很多很多，这里只是介绍了最基础的用法，更多优质用法需要发掘。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.19151268835416665" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-16 17:42">2025-04-16 17:42</span>&nbsp;
<a href="https://www.cnblogs.com/lemondu">LemonDus</a>&nbsp;
阅读(<span id="post_view_count">59</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18829218);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18829218', targetLink: 'https://www.cnblogs.com/lemondu/p/18829218', title: 'Cursor入门教程-JetBrains过度向' })">举报</a>
</div>
        