
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/myleaf/p/18687156" title="发布于 2025-01-23 09:48">
    <span role="heading" aria-level="2">legged-robot关于locomotion、Navigation任务主要文章速览</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="0-前言">0. 前言</h1>
<p>目前legged robot包括locomotion（怎么走）、navigation（往哪走）、人形机器人的whole body control以及基于机械臂的manipulation的任务。<br>
本文章特此记录<br>
一方面便于日后自己的温故学习，另一方面也便于大家的学习和交流。<br>
如有不对之处，欢迎评论区指出错误，你我共同进步学习！<br>
<strong>警告⚠：这篇文章没有一句水话</strong></p>
<h1 id="1-先验">1. 先验</h1>
<h2 id="11-四足机器人的机械结构">1.1 四足机器人的机械结构：</h2>
<ul>
<li>液压驱动（液压系统的基本原理是利用密封管道内的液体，在不同压力的作用下产生力和运动）</li>
<li>电机驱动 （电机驱动的运动是通过调节电机的速度和扭矩来操纵关节的运动，操作时通常需要电池或其他形式的电源）</li>
<li>气体驱动 （气动驱动的四足机器人利用压缩空气或气体来驱动执行器，如气缸或气动肌肉，通过调节气体的压力实现运动）<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250116172636487-154204013.png" alt="image" loading="lazy"></li>
</ul>
<h2 id="12-步态设计">1.2 步态设计</h2>
<p>这里写下四足机器人的运动控制步态：<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250116173133007-1174965631.png" alt="image" loading="lazy"></p>
<h2 id="13-传统运动控制方法">1.3 传统运动控制方法</h2>
<p>这些都是不基于深度学习等方法的，都是基于传统运动控制的方法。<br>
这里MPC是最耳熟能详的方法了，其他的就是了解。<br>
下图包括基于模型和不基于模型的：<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250116173251466-1972183220.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250117105047090-1495098281.png" alt="image" loading="lazy"></p>
<h1 id="2-正文">2. 正文</h1>
<p>笔者记录一些论文的核心关键点，也就是主要框架，其他讲故事和实验的方面我就不再提及，因为这个地方主要看你的文笔好不好了，和技术没啥关系。</p>
<p>笔者这里就不贴出每个论文的跳转链接了，大家可以根据标题的名字自行搜索！</p>
<p><strong>笔者速刷ArXiv，凝练一些关键词，细节部分可以自行品尝原文！！！</strong></p>
<p><strong>顺序不分先后。</strong></p>
<h2 id="21-learning-quadrupedal-locomotion-over-challenging-terrain">2.1 Learning Quadrupedal Locomotion over Challenging Terrain</h2>
<p>Science Robotics 2020<br>
2020.Oct<br>
Robotic Systems Lab, ETH Zurich, Zurich, Switzerland<br>
这篇工作的主要特点是仅利用了四足机器人的本体信息（proprioceptive feedback），使用强化学习进行仿真环境训练和 zero-shot 的 sim-to-real 真实环境迁移，得到了能够在许多 challenging terrain 上成功的行走策略。<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250116113723251-1771968588.png" alt="image" loading="lazy"><br>
这篇工作提出<strong><code>privileged</code></strong>观测，也就是特权观测，这个观测值比如：接触力度、地形轮廓、摩擦系数等，这些参数不是很好能在现实中获得，因为如果要获得就得加上很多的传感器，很冗余。这些观测输入给教师网络进行第一次训练。随后学生进行第二次训练。两阶段的学习任务。</p>
<p>还有<strong><code>环境自适应的课程算法</code></strong>。能够逐渐调整地形难度</p>
<p>这基本就是之后locomotion任务的基础框架了</p>
<h2 id="22-learning-robust-perceptive-locomotion-for-quadrupedal-robots-in-the-wild">2.2 Learning Robust Perceptive Locomotion for Quadrupedal Robots in the Wild</h2>
<p>Science Robotics, 19 Jan 2022, Vol 7, Issue 62<br>
<a href="https://arxiv.org/abs/2201.08117" target="_blank" rel="noopener nofollow">https://arxiv.org/abs/2201.08117</a><br>
2022.1.20<br>
这篇工作和上一篇工作的主要区别在于使用了感知信息（视觉、雷达）使四足能够获得更加完备的信息。<br>
仿真使用<code>RaiSim</code><br>
听说这篇论文的工作量都可以发好几篇论文了</p>
<p>分析论文的<code>相关博客</code>： <a href="https://zhuanlan.zhihu.com/p/583242760" target="_blank" rel="noopener nofollow">https://zhuanlan.zhihu.com/p/583242760</a></p>
<blockquote>
<p>Abstract<br>
迄今为止最强大和最通用的腿式运动解决方案完全依赖于本体感受。这严重限制了运动速度，因为机器人必须先物理地感受地形，然后才能相应地调整步态。在这里，我们提出了一种稳健且通用的解决方案，用于将外部感受和本体感受整合到腿部运动中</p>
</blockquote>
<pre><code>propriception obs 本体观测值
exteroception obs 外体观测值：包括高城图
priviledged obs
</code></pre>
<p>具体如下图所是：<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250121204235798-1623440873.png" alt="image" loading="lazy"></p>
<h3 id="221-main-idea">2.2.1 Main idea</h3>
<p>门用来控制有多少的外部数据进入其中：<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250121171745602-391933906.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250121171851949-769519598.png" alt="image" loading="lazy"></p>
<p>高层图加噪<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250121192330559-828690049.png" alt="image" loading="lazy"><br>
不同的噪声等级<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250121192419305-1503843008.png" alt="image" loading="lazy"></p>
<h3 id="222-teacher-policy">2.2.2 Teacher Policy</h3>
<p>达到的效果是：既满足了现实世界中实体传感器的不可抗局限性，同时满足了策略本身<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250121185334345-1288257489.png" alt="image" loading="lazy"></p>
<h3 id="223-student-policy">2.2.3 Student Policy</h3>
<p>后面和之前的文章是一样的，计算重建损失函数和behavior损失函数：<br>
不过重建损失是显式的。<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250121185455563-1478831759.png" alt="image" loading="lazy"></p>
<h3 id="224-部署">2.2.4 部署</h3>
<p><img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250121190842462-856015428.png" alt="image" loading="lazy"></p>
<h2 id="23-extreme-parkour-with-legged-robots-">2.3 <strong>Extreme Parkour with Legged Robots</strong> 【】</h2>
<p><img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250116111423661-413684782.png" alt="image" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250116112454287-2088378189.png" alt="image" loading="lazy"><br>
特权观测：scandots、环境参数、通过waypoints引导的waypoints</p>
<h2 id="24-legged-locomotion-in-challenging-terrains-using-egocentric-vision">2.4 Legged Locomotion in Challenging Terrains using Egocentric Vision</h2>
<blockquote>
<p>Egocentric：自我的、以自己为中心的</p>
</blockquote>
<p>Conference on Robot Learning (CoRL), 2023.<br>
scandots的首先提出<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250116154253668-493474190.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250116134955582-751716155.png" alt="image" loading="lazy"></p>
<blockquote>
<p>分两个阶段训练我们的运动策略，以避免太多样本的渲染深度。在第 1 阶段，我们使用 RL 训练策略 π1，该策略可以访问计算成本低的扫描点。在第 2 阶段，我们使用 π1 来提供另一个策略 π2 被训练来模仿的基本事实动作。这个学生可以访问来自前置摄像头的深度图。我们考虑两种架构 (1) 一个整体架构，它是一个 GRU，经过训练，可以输出与原始观察关节角度作为输入 (2) 使用 RMA [3] 训练的解耦架构，该架构经过训练以估计以基本前馈步行策略为条件的视觉和本体感觉潜伏期。</p>
</blockquote>
<p>monolithic整体的</p>
<p><strong>Mono结构</strong></p>
<h2 id="25-anymal-parkour-learning-agile-navigation-for-quadrupedal-robots">2.5 <strong>ANYmal Parkour: Learning Agile Navigation for Quadrupedal Robots</strong>【】</h2>
<p>2023.6.26<br>
还是ETH的</p>
<h3 id="251-整体结构">2.5.1 整体结构</h3>
<ol>
<li>感知模块：<br>
感知模块接收来自机载摄像头和激光雷达的点云测量数据，并计算机器人周围地形的估计，以及表示场景belief state的紧凑潜在向量</li>
<li>定位模块：<br>
5种action</li>
<li>导航模块：</li>
</ol>
<p><img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250116161420133-1852800961.png" alt="image" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250116161432356-1589670969.png" alt="image" loading="lazy"></p>
<h3 id="252-任务">2.5.2 任务</h3>
<h4 id="1--locomotion任务">1.  <strong>locomotion任务</strong></h4>
<p>MPC，模型预测控制（MPC）可用于穿越需要精确脚位的具有挑战性的地形，但是在滑移或不完全地形感知的情况下，MPC往往失败<br>
DRL，现在主流的方式，但仍然不能够开发他的全部潜力？？？？？<br>
Agile locomotion，</p>
<blockquote>
<p>值得注意的例子包括跳跃和攀爬[2]，做猫一样的落地动作[14]，[15]，从跌倒中恢复[16]，[17]，以及用足球运球[18]，[19]。</p>
</blockquote>
<p><img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250122164318046-52457847.png" alt="image" loading="lazy"></p>
<h4 id="2-navigation任务">2. <strong>navigation任务</strong></h4>
<p>通过从感知模块的潜在空间中提取3D信息，规划器能够根据其对地形的瞬时测量来选择子目标。<br>
导航策略必须学习如何正确地组合每个技能的位置、航向和定时命令，以达到预期的效果。<br>
这里可以看原始图像更高青：<br>
根据高度不同，展示了机器人会如何决策：<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250122165303706-65218327.png" alt="image" loading="lazy"><br>
整体：<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250122165226246-1136722426.png" alt="image" loading="lazy"><br>
作者还比较了不同的地形情况下，他们的方法和人工的手段进行比较：<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250122165628286-1680058838.png" alt="image" loading="lazy"></p>
<h4 id="3--perception任务">3.  <strong>Perception任务</strong></h4>
<blockquote>
<p>it is equipped with a total of six Intel Realsense depth cameras (two in the front, two in the back, one left, one right), and a Velodyne Puck LiDAR<br>
ROS控制<br>
NVIDIA Jetson Orin部署percption<br>
导航和运动策略从感知模块接收到的最后一条消息来推断它们各自的网络</p>
</blockquote>
<p>第一列对应于测量结果，第二列对应于作为点云可视化的基线地图，最后一列对应于我们的重建<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250122170123917-1565049124.png" alt="image" loading="lazy"><br>
方法产生了一个多分辨率输出，将高分辨率输出（机器人周围2米的细化过程）涂成红色，将粗分辨率输出涂成蓝色，以便更好地区分。<br>
雷达获取点云地形图</p>
<p>coarse:粗糙的</p>
<h3 id="253-方法">2.5.3 方法</h3>
<p><strong>1)  Perception Module:</strong><br>
encoder-decoder的方法<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250122172631622-1141614224.png" alt="image" loading="lazy"><br>
事实上，靠近机器人，地图更小，分辨率更高，因为这个区域对运动至关重要。距离越远，分辨率越低，以获得更广阔的视野。这些区域的导航模块只需要对场景进行近似配置，即可进行路径规划和策略选择，因此分辨率较低就足够了。<br>
<code>voxel(立体像素)</code><br>
高分辨率网络使用粗分辨率网络最后一层的特征作为输入，以及点云测量。注意，它没有使用自回归反馈，因为时间信息已经包含在它的输入中<br>
<strong>2)  Locomotion Module:</strong><br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250122173434802-1763996930.png" alt="image" loading="lazy"></p>
<blockquote>
<p>作为输入，策略接收当前本体感觉状态、周围地形的局部地图、中间命令，并向电机输出位置命令。<br>
这些技能是分开训练的，共享观察和行动空间，但需要不同的奖励和终止条件，以便有效地训练</p>
</blockquote>
<p><strong>使用的是基于位置的命令，而不是基于track vel的命令</strong>：训练设置与[2]非常相似，并使用基于位置的命令。机器人必须在给定的时间内到达目标位置，而不是跟踪速度命令</p>
<p>除了位置和时间命令外，我们还添加了一个航向目标，指定了机器人在轨迹结束时必须采用的偏航方向。</p>
<p>当导航模块接收到地图的完整3D表示时，由于运动策略的高更新率和训练期间相应的计算成本，这对于运动策略来说是不切实际的。他们在机器人周围使用<code>2.5D高程图</code>，这可以直接从感知模块的点云输出中计算出来</p>
<p><strong>3)  Navigation Module:</strong><br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250122181638947-491482570.png" alt="image" loading="lazy"><br>
它由运行5赫兹navigation module的外环和运行50赫兹locomotion module的内环组成。<br>
训练的时候，locomotion的inner loop被冻住。</p>
<blockquote>
<p>At every high-level time step, the navigation policy receives the relative position of the final goal, the remaining time to accomplish the task, the robot's base velocity, orientation, and the latent tensor of the perception module<br>
在每个高级时间步长，导航策略接收最终目标的相对位置、完成任务的剩余时间、机器人的基本速度、方向和感知模块的潜在张量</p>
</blockquote>
<h2 id="26-rma-rapid-motor-adaptation-for-legged-robots-">2.6 RMA: Rapid Motor Adaptation for Legged Robots 【】</h2>
<p>2021.1.8<br>
RMA: Rapid Motor Adaptation for Legged Robots<br>
提出了RMA模型，可以根据以往的历史信息来学习<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250116135531336-1000739142.png" alt="image" loading="lazy"><br>
两阶段训练，base policy:100HZ和adaptive policy:10HZ</p>
<h2 id="27-learning-to-walk-in-minutes-using-massively-parallel-deep-reinforcement-learning">2.7 <strong>Learning to walk in minutes using massively parallel deep reinforcement learning</strong>【】</h2>
<p>CoRL 2022<br>
机器人并行训练，github的legged-gym被世人传唱。<br>
train框架<br>
sim2sim<br>
sim2real</p>
<h2 id="28-learning-agile-and-dynamic-motor-skills-for-legged-robots-">*2.8 Learning Agile and Dynamic Motor Skills for Legged Robots 【】</h2>
<p>2019年的，太早了<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250116161926009-860017546.png" alt="image" loading="lazy"></p>
<h2 id="29-robot-parkour-learning">2.9 <strong>Robot Parkour Learning</strong></h2>
<p>庄子文大佬的文章，之前有幸线上听过他的讲座。</p>
<p><img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250116162351490-1550598727.png" alt="image" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250116162401541-1050483319.png" alt="image" loading="lazy"></p>
<h2 id="210-dreamwaq-learning-robust-quadrupedal-locomotion-with-implicit-terrain-imagination-via-deep-reinforcement-learning">2.10 DreamWaQ: Learning Robust Quadrupedal Locomotion With Implicit Terrain Imagination via Deep Reinforcement Learning</h2>
<p>2023.3.3<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250116141027049-695577554.png" alt="image" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250116141855771-402232523.png" alt="image" loading="lazy"><br>
DreamWaQ训练运动策略隐式地推断地形属性，如高度图、摩擦、恢复和障碍物。<br>
1、非对称的AC<br>
2、latent（上下文辅助器）</p>
<p><img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250116143206889-1805550089.png" alt="image" loading="lazy"><br>
我才看懂论文里这个w/o是啥意思，是without的意思。。。。w/是with的意思。。。。。</p>
<h2 id="211-concurrent-training-of-a-control-policy-and-a-state-estimator-for-dynamic-and-robust-legged-locomotion">2.11 Concurrent Training of a Control Policy and a State Estimator for Dynamic and Robust Legged Locomotion</h2>
<p>2022.3<br>
IEEE Robotics And Automation Letters</p>
<p><img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250117151711821-1491172103.png" alt="image" loading="lazy"></p>
<h2 id="212-cts-concurrent-teacher-student-reinforcement-learning-for-legged-locomotion">2.12 CTS: Concurrent Teacher-Student Reinforcement Learning for Legged Locomotion</h2>
<p>2024.9.1<br>
IEEE ROBOTICS AND AUTOMATION LETTERS<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250116165540080-162277040.png" alt="image" loading="lazy"><br>
教师和学生并行训练，将两阶段合并为一个阶段。我们直接来看结构：</p>
<p>为了学习最优策略，机器人需要从可用的观测ot中推断出其当前状态st。由于环境的部分可观察性，通常不可能从单个观察中推断出实际状态。因此，推理问题 p(st|ot, ot−1, · · · , ot−n) 需要观察的历史序列。</p>
<blockquote>
<p>文章通过将并行代理分为两组，称为教师组和学生组，同时训练教师和学生策略，然后使用上图所示的非对称演员-评论家框架，其中教师策略包括特权编码器和Policy Network，学生策略包括本体感知编码器和Policy Network。</p>
</blockquote>
<p>两组中的代理都使用近端策略优化 (PPO) 进行训练，而它们共享相同的策略网络 πθ 和评论家网络 Vφ。</p>
<p><strong>最近的工作利用变分自动编码器 (VAE) 或师生学习来隐式推断状态或与任务相关的信息。文章整合了这两种方法的优点，并采用近端策略优化 (PPO) 进行训练。</strong></p>
<p>然后再来关注一下二者的损失函数：<br>
PPO损失函数：（这些就是PPO算法里面的公式，不属于本片作者的工作范畴，他就是引用了下，略过）<br>
1、actor的<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250117143759865-1636977751.png" alt="image" loading="lazy"><br>
2、critic的<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250117145536391-2088178037.png" alt="image" loading="lazy"><br>
3、PPO算法<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250117145235732-1776437984.png" alt="image" loading="lazy"><br>
<a href="https://www.cnblogs.com/myleaf/p/18595876" title="还不懂得可以看我之前写的博客" target="_blank">关于PPO算法还不懂得可以看我之前写的博客</a><br>
4、TS网络的损失函数：<br>
直接把隐变量作MSE：<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250117145639092-1594408574.png" alt="image" loading="lazy"></p>
<p>他这个网络结构也比较清晰哈哈：<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250117145955950-915903936.png" alt="image" loading="lazy"></p>
<h2 id="213-a-walk-in-the-park-learning-to-walk-in-20-minutes-with-model-free-reinforcement-learning">*2.13 A Walk in the Park: Learning to Walk in 20 Minutes With Model-Free Reinforcement Learning</h2>
<p>由于样本效率低下，深度强化学习应用主要集中在模拟环境上<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250116163236863-1337406067.png" alt="image" loading="lazy"></p>
<blockquote>
<p>不建议newer看原文，找不到要点，这篇不建议看，扫一下目录就行</p>
</blockquote>
<h2 id="214-learning-robust-and-agile-legged-locomotion-using-adversarial-motion-priors">2.14 <strong>Learning Robust and Agile Legged Locomotion Using Adversarial Motion Priors</strong></h2>
<p>2023.8<br>
看了b站视频，效果很惊艳！跑的很快<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250117164310759-1825522001.png" alt="image" loading="lazy"><br>
这些工作只显示了在具有挑战性的地形上低速或中等速度的运动，而没有测试自然地形上的高速运动,所以文章提点来进行实操。<br>
<code>legged movements in the experiments of the papers employing RL methods are unnatural and jerky</code>：现有文章的效果腿部不自然</p>
<p>AMP是动画领域，使用GAN来模仿生成逼真动作的一个方法。下面引用自<code>AMP</code>这篇论文：<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250121150031866-1074134287.png" alt="image" loading="lazy"><br>
Generative adversarial imitation learning (GAIL) -------GAN(Generative adversarial network)</p>
<blockquote>
<p>这里简单介绍下AMP<br>
AMP主要利用了对抗的方式，利用state-to-state方式进行训练，尽可能的缩小数据集里的state-to-state pair和现实里通过policy生成的state-to-state pair之间的差距<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250121151401526-768523533.png" alt="image" loading="lazy"><br>
最终可以完成很多不可思议的操作<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250121151654278-2056976158.png" alt="image" loading="lazy"></p>
</blockquote>
<p>我们再回到这篇论文：<br>
AMP应该是用在了后面的这个地方：<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250121145631370-757768297.png" alt="image" loading="lazy"><br>
通过一个轨迹的优化，相当于AMP的Dataset，继而通过GAN将state-to-state pair和真实的的做GAN discriminator，得到的结果作为一个奖励函数，最后做一个加权。<br>
其中奖励函数包括：目标奖励函数、风格奖励函数和正则化奖励函数（应该是用来方式过拟合）</p>
<ol>
<li>风格奖励函数：<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250121161710547-1403541479.png" alt="image" loading="lazy"></li>
<li>判别器的目标函数：<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250121161853158-346415764.png" alt="image" loading="lazy"></li>
</ol>
<p>接下来可以来查看这个数据集是怎么构建的：</p>
<blockquote>
<p>引自《Gait and Trajectory Optimization for Legged Systems Through Phase-Based End-Effector Parameterization》<br>
ICRA 2018 主要是基于轨迹优化的方法生成各式腿足机器人的多种步态 <code>TO</code><br>
提出了一种TOWR的方法，能够实现产生这种Dataset用来学习</p>
</blockquote>
<p>最终通过这种方式进行优化，这是第一个阶段：<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250121162226816-1575212831.png" alt="image" loading="lazy"></p>
<blockquote>
<p>论文里经常出现roll out这个词：<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250121162735398-406650035.png" alt="image" loading="lazy"></p>
</blockquote>
<h2 id="215-a-reduction-of-imitation-learning-and-structured-prediction-to-no-regret-online-learning">2.15 A Reduction of Imitation Learning and Structured Prediction to No-Regret Online Learning</h2>
<p>解读论文：<br>
<a href="https://zhuanlan.zhihu.com/p/140939491" target="_blank" rel="noopener nofollow">https://zhuanlan.zhihu.com/p/140939491</a><br>
2011年的论文：<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250121163252978-1182236872.png" alt="image" loading="lazy"></p>
<p>经常会在locomotion任务iu的论文里看到这样一句话：<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250121163044438-1297189875.png" alt="image" loading="lazy"><br>
于是总是来到这个所谓的 <code>DAgger</code>，这下不得不仔细看看了。<br>
这个不属于策略，这是一种方法，我看前面的论文总是提到这种方法，因此我就记录在这里了</p>
<p><code>DAgger  (Dataset Aggregation) </code>旨在解决模仿学习的两个问题：</p>
<ol>
<li>传统的学习一个classifier或regressor的方式，不适用于序列决策过程。因为t时刻的预测会影响t+1, ..., t+n时刻的状态，这违背了统计学中的 iid(独立同分布假设)；</li>
<li>误差累积。<br>
算法流程：<br>
一开始我们令<span class="math inline">\(\beta_1 =  1\)</span>,即用expert policy获取初始数据。然后再随着训练过程指数级衰减这个系数<span class="math inline">\(\beta_i = p^{i-1}\)</span> ：<br>
带上角标<code>E</code>的是专家expert策略<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250116155750471-525628042.png" alt="image" loading="lazy"><br>
说白了一句话：<code>DAgger在每一次迭代中利用当前的policy收集数据，然后利用所有的数据集训练下一次的policy。</code></li>
</ol>
<p>regret 指预测者(forecaster)的累计损失与专家(expert)之间的差，其用于度量预测者在事后有多后悔没有跟随专家的指导。</p>
<h2 id="216-walk-these-ways-tuning-robot-control-for-generalization-with-multiplicity-of-behavior">2.16 <strong>Walk These Ways: Tuning Robot Control for Generalization with Multiplicity of Behavior</strong></h2>
<p>2022.12.6<br>
<a href="https://github.com/Improbable-AI/walk-these-ways" target="_blank" rel="noopener nofollow">https://github.com/Improbable-AI/walk-these-ways</a><br>
2022.dec.6<br>
Conference on Robot Learning (CoRL)<br>
多步态<br>
解析论文：<br>
<a href="https://blog.csdn.net/qq_23096319/article/details/137370675" target="_blank" rel="noopener nofollow">https://blog.csdn.net/qq_23096319/article/details/137370675</a></p>
<blockquote>
<p>Abstract<br>
学习一个单一的策略，该策略编码一个结构化的运动策略家族，以不同的方式解决训练任务，从而产生行为多样性（MoB）<br>
不同的策略有不同的概括方式，可以在新的任务或环境中实时选择，而无需耗时的再培训<br>
发布了一个快速，强大的开源MoB运动控制器----Walk These Ways，可以执行不同的步态与可变的脚摆，姿势和速度，解锁不同的下游任务：蹲伏、跳跃、高速跑步、楼梯穿越、支撑对推搡、有节奏的舞蹈等</p>
</blockquote>
<p><img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250121144851991-435319749.png" alt="image" loading="lazy"><br>
MoB的任务框架：<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250121144919498-2049584491.png" alt="image" loading="lazy"></p>
<h2 id="217-hybrid-internal-model-learning-agile-legged-locomotion-with-simulated-robot-response">2.17 <strong>Hybrid Internal Model: Learning Agile Legged Locomotion with Simulated Robot Response</strong></h2>
<p>这篇工作故事讲的比较好，对前人的工作总结的比较到位。<br>
2024.1.2<br>
HIM模型<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250116143945323-989129068.png" alt="image" loading="lazy"><br>
two-phase training paradigm 两阶段的学习范式<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250116150327396-1371360754.png" alt="image" loading="lazy"><br>
故事讲的不错，将高程图和地面摩擦等作为系统扰动，受到经典IMC的启发，Internal Model Control (PID)的启发。</p>
<p>论文里小小的总结了一下前人的这些方法，同时基于模仿学习的训练方法可以被分为两个类别The mimic learning methods can be categorized into two main frameworks: adaptation and teacher-student.：</p>
<pre><code>1、Teacher-Student refers to (Miki et al., 2022a)  		基于T-S的方法
2、MONO means (Agarwal et al., 2023)
3、AMP means Adversarial Motion Priors (Wu et al., 2022; Escontrela et al., 2022) 
4、RMA means Rapid Motor Adaptation (Kumar et al., 2021)  		基于Adaption的方法
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250116195210838-1117315851.png" alt="image" loading="lazy"><br>
其中Ot包含：<br>
采用对比学习：<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250117102517739-327231633.png" alt="image" loading="lazy"></p>
<h2 id="213-daydreamer-world-models-for-physical-robot-learning">2.13 DayDreamer: World Models for Physical Robot Learning</h2>
<p>CoRL 2022<br>
这是model-based的方法<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250117112332121-800796081.png" alt="image" loading="lazy"><br>
agent和环境进行交互，得到的数据先学一个World Model，给定state和action预测next state<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250117112346884-1387360780.png" alt="image" loading="lazy"></p>
<blockquote>
<p>agent和环境进行交互，得到的数据先学一个World Model，给定state和action预测next state，当然都是在latent space里的，所以上图a有一个encoder和decoder去训练这个embedding state。<br>
而你会发现这里还有个h，h是rnn的state，然后这个state是个概率状态，所以z是从h里sample出来的。<br>
实际训练的时候就用右边图b这种方式在latent space里训练policy。<br>
然后根据Plan2explore，实际在训练时会训练两个policy，一个policy用于给world model收集数据，另一个policy用于完成某种任务。因此在world model里面会有两种reward function，一种是Intrinsic reward，用于探索world以提供更高质量的数据给world model，一种是task reward用于训练完成任务的policy。<br>
但作者在文章里似乎就用了DreamerV2，没有Intrinsic reward</p>
</blockquote>
<p>在实验部分作者准备了四种不同的机器人：<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250117112513604-1410272410.png" alt="image" loading="lazy"><br>
选这四个机器人是因为可以包括连续和离散的动作空间，参数和视觉观测空间，绸密和稀疏的奖励函数</p>
<h2 id="218-coupling-vision-and-proprioception-for-navigation-of-legged-robots">2.18 Coupling Vision and Proprioception for Navigation of Legged Robots</h2>
<p>CVPR 2022</p>
<h2 id="219-learning-vision-guided-quadrupedal-locomotion-end-to-end-with-cross-modal-transformers">2.19 Learning vision-guided quadrupedal locomotion end-to-end with cross-modal transformers</h2>
<p>ICLR 2022</p>
<h2 id="220-learning-a-unified-policy-for-whole-body-control-of-manipulation-and-locomotion">2.20 Learning a Unified Policy for Whole-Body Control of Manipulation and Locomotion</h2>
<p>本文的目标是将四足机器人本身的运动和机械臂的操作作为一个整体来进行控制，控制器可以同时输出四足的运动策略和机械臂的操作策略</p>
<h1 id="221-rapid-locomotion-via-reinforcement-learning">2.21 Rapid Locomotion via Reinforcement Learning</h1>
<p>mit 2022.5.5 arxiv<br>
<img src="https://img2024.cnblogs.com/blog/3481742/202501/3481742-20250117171207203-1184453349.png" alt="image" loading="lazy"><br>
狗子的快速移动<br>
<code>used RL to train Mini Cheetah to learn high-speed movements over natural terrains.</code></p>
<h1 id="3-后记">3. 后记</h1>
<p>这篇博客暂时记录到这里，日后我会继续补充。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.1879691397488426" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-23 09:49">2025-01-23 09:48</span>&nbsp;
<a href="https://www.cnblogs.com/myleaf">泪水下的笑靥</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18687156" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18687156);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18687156', targetLink: 'https://www.cnblogs.com/myleaf/p/18687156', title: 'legged-robot关于locomotion、Navigation任务主要文章速览' })">举报</a>
</div>
        