
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wuty/p/18931865" title="发布于 2025-06-16 21:41">
    <span role="heading" aria-level="2">记录.Net 8 发布增加 PublishTrimmed 裁剪选项，调用WMI 的ManagementObject 异常</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>最近在做OTA的功能，需要获取到sn做一些业务的逻辑。我们自己实现的库里边的，大部分都是调用&nbsp;<strong>System.Management 的&nbsp;ManagementObjectSearcher&nbsp;</strong>获取 Bios 的序列号</p>
<p>如下所示：</p>
<div class="cnblogs_code">
<pre> <span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">void</span> BtnWmi_OnClick(<span style="color: rgba(0, 0, 255, 1)">object</span><span style="color: rgba(0, 0, 0, 1)"> sender, RoutedEventArgs e)
 {
     </span><span style="color: rgba(0, 0, 255, 1)">try</span><span style="color: rgba(0, 0, 0, 1)">
     {
         </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 创建 WMI 查询</span>
         ManagementObjectSearcher searcher = <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> ManagementObjectSearcher(
             </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">SELECT SerialNumber FROM Win32_BIOS</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);

         </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 遍历查询结果</span>
         <span style="color: rgba(0, 0, 255, 1)">foreach</span> (ManagementObject obj <span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)"> searcher.Get())
         {
             </span><span style="color: rgba(0, 0, 255, 1)">string</span> serialNumber = obj[<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">SerialNumber</span><span style="color: rgba(128, 0, 0, 1)">"</span>]?<span style="color: rgba(0, 0, 0, 1)">.ToString();

             </span><span style="color: rgba(0, 0, 255, 1)">if</span> (!<span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)">.IsNullOrEmpty(serialNumber))
             {
                 Console.WriteLine($</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">BIOS 序列号: {serialNumber}</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
                 </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)">;
             }
         }

         Console.WriteLine(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">未找到 BIOS 序列号信息</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
     }
     </span><span style="color: rgba(0, 0, 255, 1)">catch</span><span style="color: rgba(0, 0, 0, 1)"> (ManagementException ex)
     {
         Console.WriteLine($</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">WMI 查询错误: {ex.Message}</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
     }
     </span><span style="color: rgba(0, 0, 255, 1)">catch</span><span style="color: rgba(0, 0, 0, 1)"> (Exception ex)
     {
         Console.WriteLine($</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">WMI 查询异常错误: {ex.Message}</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
     }

 }</span></pre>
</div>
<p>&nbsp;</p>
<p>由于我们项目现在新建的项目都是基于.Net 8 开发，而且为了兼容多种设备和系统，我们目前的打包方式都是以发布独立部署的方式</p>
<p><img src="https://img2024.cnblogs.com/blog/1063618/202506/1063618-20250616212454626-2100399995.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>同时为了能减少输出文件的大小，我们会启用裁剪的方式&nbsp;&nbsp;<strong> &lt;PublishTrimmed&gt;true&lt;/PublishTrimmed&gt;</strong></p>
<p><img src="https://img2024.cnblogs.com/blog/1063618/202506/1063618-20250616212814001-1081654851.png" alt="" loading="lazy"></p>
<div class="cnblogs_code">
<pre>  &lt;PublishTrimmed&gt;<span style="color: rgba(0, 0, 255, 1)">true</span>&lt;/PublishTrimmed&gt;
  &lt;_SuppressWpfTrimError&gt;<span style="color: rgba(0, 0, 255, 1)">true</span>&lt;/_SuppressWpfTrimError&gt;
  &lt;BuiltInComInteropSupport&gt;<span style="color: rgba(0, 0, 255, 1)">true</span>&lt;/BuiltInComInteropSupport&gt;
  &lt;TrimMode&gt;<span style="color: rgba(0, 0, 255, 1)">partial</span>&lt;/TrimMode&gt;</pre>
</div>
<p>&nbsp;</p>
<p>以上准备工作做好，发布以上的程序，运行发现如下的错误：</p>
<p><img src="https://img2024.cnblogs.com/blog/1063618/202506/1063618-20250616212950693-1012383927.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><strong>查询了官网的资料，有如下的说明：<a href="https://learn.microsoft.com/zh-cn/dotnet/core/deploying/trimming/trimming-options" rel="noopener nofollow">剪裁选项 - .NET | Microsoft Learn</a></strong></p>
<p><strong>就是启用裁剪会禁用掉某些框架的功能。</strong></p>
<p>&nbsp;</p>
<p>解决方法：</p>
<p>参考：<a href="https://learn.microsoft.com/zh-cn/windows/win32/wmisdk/connecting-to-wmi-remotely-with-c-" rel="noopener nofollow">使用 C# 远程连接到 WMI - Win32 apps | Microsoft Learn</a></p>
<p>使用&nbsp;<a href="https://learn.microsoft.com/zh-cn/previous-versions/windows/desktop/wmi_v2/mi-managed-api/hh832958(v=vs.85)" data-linktype="absolute-path" rel="noopener nofollow">Microsoft.Management.Infrastructure</a>&nbsp;的&nbsp;<a href="https://learn.microsoft.com/zh-cn/previous-versions/windows/desktop/wmi_v2/mi-managed-api/hh832539(v=vs.85)" data-linktype="absolute-path" rel="noopener nofollow">CimSession</a>&nbsp;替换WMI 早期的版本</p>
<p>如下所示：</p>
<div class="cnblogs_code">
<pre> <span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> Microsoft.Management.Infrastructure;

</span><span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">void</span> BtnCim_OnClick(<span style="color: rgba(0, 0, 255, 1)">object</span><span style="color: rgba(0, 0, 0, 1)"> sender, RoutedEventArgs e)
 {
     </span><span style="color: rgba(0, 0, 255, 1)">try</span><span style="color: rgba(0, 0, 0, 1)">
     {
         </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 创建本地CIM会话</span>
         <span style="color: rgba(0, 0, 255, 1)">using</span> (<span style="color: rgba(0, 0, 255, 1)">var</span> session = CimSession.Create(<span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">))
         {
             </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 查询Win32_BIOS类</span>
             <span style="color: rgba(0, 0, 255, 1)">var</span> instances = session.QueryInstances(<span style="color: rgba(128, 0, 0, 1)">@"</span><span style="color: rgba(128, 0, 0, 1)">root\cimv2</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">WQL</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">SELECT SerialNumber FROM Win32_BIOS</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
             </span><span style="color: rgba(0, 0, 255, 1)">foreach</span> (<span style="color: rgba(0, 0, 255, 1)">var</span> instance <span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)"> instances)
             {
                 </span><span style="color: rgba(0, 0, 255, 1)">var</span> serialNumber = instance.CimInstanceProperties[<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">SerialNumber</span><span style="color: rgba(128, 0, 0, 1)">"</span>].Value?<span style="color: rgba(0, 0, 0, 1)">.ToString();
                 Console.WriteLine($</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">BIOS 序列号: {serialNumber}</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
             }
         }
     }
     </span><span style="color: rgba(0, 0, 255, 1)">catch</span><span style="color: rgba(0, 0, 0, 1)"> (Exception ex)
     {
         Console.WriteLine($</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">错误: {ex.Message}</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
     }

 }</span></pre>
</div>
<p>&nbsp;</p>
<p><strong>不修改发布选项的情况下，运行如下：是可以获取得到Bios的sn的</strong></p>
<p><img src="https://img2024.cnblogs.com/blog/1063618/202506/1063618-20250616213555289-1091063640.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><strong>总结：</strong></p>
<p><strong>1、推荐使用&nbsp;Microsoft.Management.Infrastructure 的&nbsp;CimSession 替换 WMI 旧版的 ManagementObject</strong></p>
<p><strong>2、裁剪的选项&nbsp;PublishTrimmed 如果不介意应用程序的一点体积，是可以忽略不加</strong></p>
<p>&nbsp;</p>
<p>参考：</p>
<p>1、<a href="https://learn.microsoft.com/zh-cn/dotnet/core/deploying/trimming/trimming-options" rel="noopener nofollow">剪裁选项 - .NET | Microsoft Learn</a></p>
<p>2、<a href="https://learn.microsoft.com/zh-cn/dotnet/core/deploying/single-file/overview?tabs=cli" rel="noopener nofollow">为应用程序部署创建单个文件 - .NET | Microsoft Learn</a></p>
<p>3、<a href="https://learn.microsoft.com/zh-cn/windows/win32/wmisdk/connecting-to-wmi-remotely-with-c-" rel="noopener nofollow">使用 C# 远程连接到 WMI - Win32 apps | Microsoft Learn</a></p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-06-16 21:42">2025-06-16 21:41</span>&nbsp;
<a href="https://www.cnblogs.com/wuty">wuty007</a>&nbsp;
阅读(<span id="post_view_count">40</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18931865);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18931865', targetLink: 'https://www.cnblogs.com/wuty/p/18931865', title: '记录.Net 8 发布增加 PublishTrimmed 裁剪选项，调用WMI 的ManagementObject 异常' })">举报</a>
</div>
        