
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/the-pig-of-zf/p/18632480" title="发布于 2024-12-26 12:24">
    <span role="heading" aria-level="2">Makefile文件中，两个$的变量变量$$Xxx 与一个$的变量 $Xxx的区别</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        <img src="https://img2024.cnblogs.com/blog/658970/202412/658970-20241226122423916-2126030544.png" alt="Makefile文件中，两个$的变量变量$$Xxx 与一个$的变量 $Xxx的区别" class="desc_img">
        使用来引用 Makefile 中的变量。使用$$来引用 shell 中的变量，以确保在传递给 shell 时保留单个符号。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<blockquote>
<p><strong>原文地址:<a href="https://frozencola.com/?p=814" target="_blank" rel="noopener nofollow">Makefile文件中，两个$的变量变量$$Xxx 与一个$的变量 $Xxx的区别</a></strong></p>
</blockquote>
<h1 id="makefile-中的变量引用">Makefile 中的变量引用</h1>
<p>在 <code>Makefile</code> 中，<code>$</code> 符号用于变量替换，但它的使用方式有一些细微的区别：</p>
<h2 id="单个--符号xxx">单个 <code>$</code> 符号（<code>$Xxx</code>）</h2>
<ul>
<li>
<p><strong>用途</strong>：用于引用 <code>Makefile</code> 中定义的变量。</p>
</li>
<li>
<p><strong>用法</strong>：<code>$</code> 后面可以跟变量名，通常用括号或花括号括起来以明确变量名的边界。</p>
</li>
<li>
<p><strong>示例</strong>：</p>
<pre><code class="language-makefile">VAR = value
all:
    echo $(VAR)
</code></pre>
<p>在这个例子中，<code>$(VAR)</code> 会被替换为 <code>value</code>。</p>
</li>
</ul>
<h2 id="双--符号xxx">双 <code>$</code> 符号（<code>$$Xxx</code>）</h2>
<ul>
<li>
<p><strong>用途</strong>：用于在 Makefile 中传递给 shell 的命令中引用 shell 变量。</p>
</li>
<li>
<p><strong>用法</strong>：<code>$$</code> 会被 make 解析为单个 <code>$</code>，从而在 shell 中使用。</p>
</li>
<li>
<p><strong>示例</strong>：</p>
<pre><code class="language-makefile">all:
    echo $$PATH
</code></pre>
<p>在这个例子中，<code>$$PATH</code> 会被 make 解析为 <code>$PATH</code>，从而在 shell 中输出环境变量 PATH 的值。</p>
</li>
</ul>
<h2 id="具体区别">具体区别</h2>
<ul>
<li><code>$Xxx</code>：用于 Makefile 变量替换。make 会在执行命令之前将其替换为变量的值。</li>
<li><code>$$Xxx</code>：用于传递给 shell 的命令中引用 shell 变量。make 会将 <code>$$</code> 转换为 <code>$</code>，从而在 shell 中使用。</li>
</ul>
<h2 id="例子">例子</h2>
<p>假设你有一个 Makefile 如下：</p>
<pre><code class="language-makefile">VAR = Hello

all:
    # 使用 Makefile 变量
    echo $(VAR)
    # 使用 shell 变量
    echo $$USER
</code></pre>
<ul>
<li><code>echo $(VAR)</code>：make 会将 <code>$(VAR)</code> 替换为 <code>Hello</code>，然后执行 <code>echo Hello</code>。</li>
<li><code>echo $$USER</code>：make 会将 <code>$$USER</code> 转换为 <code>$USER</code>，然后 shell 会替换 <code>$USER</code> 为当前用户的用户名。</li>
</ul>
<h2 id="总结">总结</h2>
<ul>
<li>使用 <code>$</code> 来引用 Makefile 中的变量。</li>
<li>使用 <code>$$</code> 来引用 shell 中的变量，以确保在传递给 shell 时保留单个 <code>$</code> 符号。</li>
</ul>

</div>
<div id="MySignature" role="contentinfo">
    <p>本文来自博客园，作者：<a href="https://www.cnblogs.com/the-pig-of-zf/" target="_blank">张飞的猪</a>，转载请注明原文链接：<a href="https://www.cnblogs.com/the-pig-of-zf/p/18632480" target="_blank">https://www.cnblogs.com/the-pig-of-zf/p/18632480</a></p>
<p>公众号：张飞的猪大数据分享，不定期分享大数据学习的总结和相关资料，欢迎关注。</p>
<p>个人网站"张飞的猪编程工作室"链接: <a href="https://zhangfeidezhu.com" target="_blank">https://zhangfeidezhu.com</a> </p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.24330563203703703" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2024-12-26 12:25">2024-12-26 12:24</span>&nbsp;
<a href="https://www.cnblogs.com/the-pig-of-zf">张飞的猪</a>&nbsp;
阅读(<span id="post_view_count">33</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18632480" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18632480);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18632480', targetLink: 'https://www.cnblogs.com/the-pig-of-zf/p/18632480', title: 'Makefile文件中，两个$的变量变量$$Xxx 与一个$的变量 $Xxx的区别' })">举报</a>
</div>
        