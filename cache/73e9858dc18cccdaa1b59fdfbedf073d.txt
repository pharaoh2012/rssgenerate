
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/liyongqiang-cc/p/18816921" title="发布于 2025-04-09 16:43">
    <span role="heading" aria-level="2">面试官：如果某个业务量突然提升100倍QPS你会怎么做？</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p><font style="color: rgba(64, 64, 64, 1)">“假设你负责的系统，某个业务线的QPS突然暴增100倍，你会怎么应对？”<br>
——这是上周朋友去面试，被问到一道题，他答了“加机器扩容”，结果面试官眉头一皱：“如果机器不够呢？如果数据库崩了呢？”朋友当场卡壳。其实这道题就像“高压水枪”，专冲知识漏洞。</font></p>
<p><font style="color: rgba(64, 64, 64, 1)">作为开发者，如果只回答“加机器”“扩容”，可能直接暴露知识盲区。<br>
</font><strong><font style="color: rgba(64, 64, 64, 1)">真正的答案，需要从架构设计、资源调度、容灾兜底等多个维度拆解。</font></strong></p>
<h2 id="第一步先问为什么再想怎么做">第一步：先问“为什么”，再想“怎么做”</h2>
<p><font style="color: rgba(64, 64, 64, 1)">面对突发流量，</font><strong><font style="color: rgba(64, 64, 64, 1)">盲目优化=挖坑埋自己</font></strong><font style="color: rgba(64, 64, 64, 1)">。<br>
</font><font style="color: rgba(64, 64, 64, 1)">先理清关键问题：</font></p>
<h3 id="qps来源是否合理"><font style="color: rgba(64, 64, 64, 1)">QPS来源是否合理？</font></h3>
<ul>
<li><font style="color: rgba(64, 64, 64, 1)">是正常业务爆发（如双十一促销），还是异常流量（如恶意攻击、代码BUG）？</font></li>
<li><font style="color: rgba(64, 64, 64, 1)">若是异常，需优先拦截（风控、限流），而非盲目扩容。</font></li>
</ul>
<h3 id="-流量暴增的范围和时间"><font style="color: rgba(64, 64, 64, 1)"> 流量暴增的范围和时间？</font></h3>
<ul>
<li><font style="color: rgba(64, 64, 64, 1)">是全局流量激增，还是单个接口/功能？</font></li>
<li><font style="color: rgba(64, 64, 64, 1)">是短期高峰（如秒杀），还是长期持续？</font></li>
</ul>
<h3 id="-当前系统的瓶颈在哪里"><font style="color: rgba(64, 64, 64, 1)"> 当前系统的瓶颈在哪里？</font></h3>
<ul>
<li><font style="color: rgba(64, 64, 64, 1)">CPU/内存/磁盘/网络？</font></li>
<li><font style="color: rgba(64, 64, 64, 1)">数据库？缓存？第三方服务？</font></li>
</ul>
<h2 id="第二步分层拆解针对性优化">第二步：分层拆解，针对性优化</h2>
<h3 id="-快速止血限流降级保住核心业务"><font style="color: rgba(64, 64, 64, 1)"> 快速止血：限流降级，保住核心业务</font></h3>
<ul>
<li><strong><font style="color: rgba(64, 64, 64, 1)">限流</font></strong><font style="color: rgba(64, 64, 64, 1)">：对非核心接口设置QPS阈值（如令牌桶算法），超限请求直接熔断。</font></li>
<li><strong><font style="color: rgba(64, 64, 64, 1)">降级</font></strong><font style="color: rgba(64, 64, 64, 1)">：关闭次要功能（如评论、推荐），确保核心链路（如支付、下单）可用。</font></li>
<li><strong><font style="color: rgba(64, 64, 64, 1)">预案</font></strong><font style="color: rgba(64, 64, 64, 1)">：提前配置好降级开关，通过配置中心实时生效。</font></li>
</ul>
<h3 id="-横向扩展无状态服务快速扩容"><font style="color: rgba(64, 64, 64, 1)"> 横向扩展：无状态服务快速扩容</font></h3>
<ul>
<li><strong><font style="color: rgba(64, 64, 64, 1)">容器化+弹性伸缩</font></strong><font style="color: rgba(64, 64, 64, 1)">：Kubernetes自动扩缩容，应对流量波动。</font></li>
<li><strong><font style="color: rgba(64, 64, 64, 1)">负载均衡</font></strong><font style="color: rgba(64, 64, 64, 1)">：调整权重，将流量分流到压力较小的节点。</font></li>
<li><strong><font style="color: rgba(64, 64, 64, 1)">注意点</font></strong><font style="color: rgba(64, 64, 64, 1)">：确保服务无状态，避免扩容后Session丢失等问题。</font></li>
</ul>
<h3 id="-缓存为王减少穿透击穿数据库"><font style="color: rgba(64, 64, 64, 1)"> 缓存为王：减少穿透击穿数据库</font></h3>
<ul>
<li><strong><font style="color: rgba(64, 64, 64, 1)">本地缓存</font></strong><font style="color: rgba(64, 64, 64, 1)">：高频读数据（如商品信息）。</font></li>
<li><strong><font style="color: rgba(64, 64, 64, 1)">分布式缓存</font></strong><font style="color: rgba(64, 64, 64, 1)">：Redis集群抗住大部分查询请求，设置多级缓存架构。</font></li>
<li><strong><font style="color: rgba(64, 64, 64, 1)">缓存预热</font></strong><font style="color: rgba(64, 64, 64, 1)">：提前加载热点数据，避免冷启动雪崩。</font></li>
</ul>
<h3 id="-数据库优化分库分表读写分离"><font style="color: rgba(64, 64, 64, 1)"> 数据库优化：分库分表+读写分离</font></h3>
<ul>
<li><strong><font style="color: rgba(64, 64, 64, 1)">读写分离</font></strong><font style="color: rgba(64, 64, 64, 1)">：主库负责写，从库集群承担读请求。</font></li>
<li><strong><font style="color: rgba(64, 64, 64, 1)">分库分表</font></strong><font style="color: rgba(64, 64, 64, 1)">：按业务拆分（用户库、订单库），或按Hash分片。</font></li>
<li><strong><font style="color: rgba(64, 64, 64, 1)">连接池优化</font></strong><font style="color: rgba(64, 64, 64, 1)">：调整最大连接数、超时时间，避免线程阻塞。</font></li>
</ul>
<h3 id="-异步化削峰填谷解耦系统"><font style="color: rgba(64, 64, 64, 1)"> 异步化：削峰填谷，解耦系统</font></h3>
<ul>
<li><strong><font style="color: rgba(64, 64, 64, 1)">消息队列</font></strong><font style="color: rgba(64, 64, 64, 1)">：Kafka/RocketMQ承接突发流量，后端异步消费。</font></li>
<li><strong><font style="color: rgba(64, 64, 64, 1)">批量处理</font></strong><font style="color: rgba(64, 64, 64, 1)">：合并多次请求（如库存扣减），减少数据库压力。</font></li>
</ul>
<h2 id="第三步长期防御构建弹性架构">第三步：长期防御，构建弹性架构</h2>
<h3 id="-全链路压测"><font style="color: rgba(64, 64, 64, 1)"> 全链路压测</font></h3>
<ul>
<li><font style="color: rgba(64, 64, 64, 1)">定期模拟极端流量，暴露系统瓶颈（如数据库连接池耗尽、慢SQL）。</font></li>
<li><font style="color: rgba(64, 64, 64, 1)">阿里的“全链路压测”已成为大厂标配。</font></li>
</ul>
<h3 id="-监控告警体系"><font style="color: rgba(64, 64, 64, 1)"> 监控告警体系</font></h3>
<ul>
<li><font style="color: rgba(64, 64, 64, 1)">关键指标实时监控：CPU、内存、QPS、RT、错误率。</font></li>
<li><font style="color: rgba(64, 64, 64, 1)">设置多级阈值（预警、严重、致命），通过企业微信/钉钉通知。</font></li>
</ul>
<h3 id="-容灾演练"><font style="color: rgba(64, 64, 64, 1)"> 容灾演练</font></h3>
<ul>
<li><font style="color: rgba(64, 64, 64, 1)">定期演练机房断电、网络分区、缓存崩溃等极端场景。</font></li>
<li><font style="color: rgba(64, 64, 64, 1)">确保故障发生时，能自动切换灾备节点。</font></li>
</ul>
<h2 id="总结高并发的本质是分治">总结：高并发的本质是“分治”</h2>
<p><font style="color: rgba(64, 64, 64, 1)">应对突发流量的核心逻辑：<br>
</font><font style="color: rgba(64, 64, 64, 1)">🔹</font><font style="color: rgba(64, 64, 64, 1)"> </font><strong><font style="color: rgba(64, 64, 64, 1)">横向拆分</font></strong><font style="color: rgba(64, 64, 64, 1)">：用空间换时间（扩容、分库分表）。<br>
</font><font style="color: rgba(64, 64, 64, 1)">🔹</font><font style="color: rgba(64, 64, 64, 1)"> </font><strong><font style="color: rgba(64, 64, 64, 1)">纵向分层</font></strong><font style="color: rgba(64, 64, 64, 1)">：每层专注单一问题（缓存、异步、限流）。<br>
</font><font style="color: rgba(64, 64, 64, 1)">🔹</font><font style="color: rgba(64, 64, 64, 1)"> </font><strong><font style="color: rgba(64, 64, 64, 1)">冗余设计</font></strong><font style="color: rgba(64, 64, 64, 1)">：假设任何环节都会挂，做好兜底方案。</font></p>
<p><strong><font style="color: rgba(64, 64, 64, 1)">如果老板要求“零预算优化”，不能加机器，你会怎么做？</font></strong><font style="color: rgba(64, 64, 64, 1)"><br>
</font><font style="color: rgba(64, 64, 64, 1)">欢迎评论区讨论！</font><font style="color: rgba(64, 64, 64, 1)">💡</font><br>
<img src="https://img2024.cnblogs.com/blog/2063798/202504/2063798-20250409164311760-985510669.png" alt="" loading="lazy"></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.761396151056713" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-04-09 16:44">2025-04-09 16:43</span>&nbsp;
<a href="https://www.cnblogs.com/liyongqiang-cc">代码拾光</a>&nbsp;
阅读(<span id="post_view_count">377</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18816921" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18816921);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18816921', targetLink: 'https://www.cnblogs.com/liyongqiang-cc/p/18816921', title: '面试官：如果某个业务量突然提升100倍QPS你会怎么做？' })">举报</a>
</div>
        