
<table cellspacing="0" cellpadding="0"><tbody><tr><td class="t_f" id="postmessage_52993595">
<font size="3">又到了网上学习的时候了，这次刷视频的特点是每一章节结束后，会弹出一个本章视频结束的弹窗，发现只要点弹窗上的“确定”按钮，便可以自动跳到下一节视频。想到，如果可以利用浏览器自带的“开发人员工具-控制台”来自动实现点击操作，那可太方便了。可惜我找了一圈，没有和我这种情况一样的，遂打起了AI的想法，没想到要求一提，“确定”按钮通过“元素”查找再“喂”给AI，这代码就跑起来了，舒服~</font><br>
<font size="3">下面为你提供一个在网页中检测特定文字，若发现该文字就点击指定按钮的 JavaScript 代码示例。</font><br>
<br>
<font color="#ff0000">提问</font>：<font style="color:rgba(0, 0, 0, 0.85)"><font style="background-color:rgba(0, 0, 0, 0.04)"><font face="Inter, -apple-system, BlinkMacSystemFont, &amp;quot"><font style="font-size:16px">发现某段文字，点击网页上出现的按钮</font></font></font></font><br>
<font color="#ff0000">AI 回答的相关内容</font>：<br>
### 思路分析<br>
1. **文字检测**：借助 `document.body.textContent` 获取整个页面的文本内容，再使用 `includes` 方法检查特定文字是否存在。<br>
2. **按钮查找**：运用 `document.querySelector` 或者 `document.querySelectorAll` 方法查找页面上的按钮元素。<br>
3. **按钮点击**：一旦找到按钮元素，就调用其 `click` 方法触发点击操作。<br>
<br>
### 代码示例<br>
```javascript<br>
// 要查找的特定文字<br>
const targetText = "特定文字";<br>
// 要点击的按钮选择器，可以是 ID、类名、标签名等，这里假设按钮有一个 class 为 target-button<br>
const buttonSelector = ".target-button";<br>
<br>
function checkAndClickButton() {<br>
&nbsp; &nbsp; const pageText = document.body.textContent;<br>
&nbsp; &nbsp; if (pageText.includes(targetText)) {<br>
&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;const button = document.querySelector(buttonSelector);<br>
&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if (button) {<br>
&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;button.click();<br>
&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;console.log("按钮已点击");<br>
&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;} else {<br>
&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;console.log("未找到指定按钮");<br>
&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}<br>
&nbsp; &nbsp; } else {<br>
&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;console.log("未发现特定文字");<br>
&nbsp; &nbsp; }<br>
}<br>
<br>
// 页面加载完成后执行检查<br>
window.addEventListener('load', checkAndClickButton);<br>
<br>
// 若页面内容动态加载，可以添加定时器定期检查<br>
setInterval(checkAndClickButton, 2000);<br>
<br>
```<br>
<br>
### 代码解释<br>
1. **变量定义**：<br>
&nbsp; &nbsp; - `targetText`：表示你要查找的特定文字。<br>
&nbsp; &nbsp; - `buttonSelector`：是用于查找按钮的 CSS 选择器。<br>
2. **`checkAndClickButton` 函数**：<br>
&nbsp; &nbsp; - 先获取页面的文本内容，检查是否包含特定文字。<br>
&nbsp; &nbsp; - 若包含特定文字，就查找指定按钮并点击；若不包含，则输出相应提示信息。<br>
3. **事件监听和定时器**：<br>
&nbsp; &nbsp; - `window.addEventListener('load', checkAndClickButton)`：页面加载完成后执行一次检查。<br>
&nbsp; &nbsp; - `setInterval(checkAndClickButton, 2000)`：每 2 秒执行一次检查，以此应对页面内容动态加载的情况。<br>
<br>
### 使用方法<br>
你可以将上述代码复制到浏览器的开发者工具控制台中运行，或者把代码嵌入到网页的 `&lt;script&gt;` 标签里。在运行前，要确保 `targetText` 和 `buttonSelector` 的值与实际情况相符。 <br>
<br>
（内心OS：“确定”按钮的具体信息我不知道，直接通过元素查找按键，获得<font style="color:rgba(0, 0, 0, 0.85)"><font face="Inter, -apple-system, BlinkMacSystemFont, &amp;quot"><font style="font-size:16px">HTML 按钮元素）</font></font></font><br>
<font style="color:rgba(0, 0, 0, 0.85)"><font face="Inter, -apple-system, BlinkMacSystemFont, &amp;quot"><font style="font-size:16px"><br>
</font></font></font><br>
<font face="Inter, -apple-system, BlinkMacSystemFont, &amp;quot"><font size="2"><font color="#ff0000">提问</font><font style="color:rgba(0, 0, 0, 0.85)">：</font></font></font><font color="#1c1f23"><font face="Inter, -apple-system, BlinkMacSystemFont, &amp;quot"><font size="3">&lt;button type="button" class="el-button el-button--default el-button--small el-button--primary "&gt;&lt;!----&gt;&lt;!----&gt;&lt;span&gt;</font></font></font><font color="#1c1f23"><font face="Inter, -apple-system, BlinkMacSystemFont, &amp;quot"><font size="3">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; 确定&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&lt;/span&gt;&lt;/button&gt;</font></font></font><br>
<font color="#ff0000">AI 回答</font>：<br>
你给出了一个 HTML 按钮元素，推测你是希望在页面检测到特定文字后点击这个“确定”按钮。以下是结合之前逻辑的完整代码，你可以将其复制到浏览器开发者工具的控制台运行。<br>
<br>
```javascript<br>
<font color="#ff00ff">// 要查找的特定文字</font><br>
<font color="#ff00ff">const targetText = "特定文字";</font><br>
<font color="#ff00ff">// 查找按钮的选择器，根据你提供的按钮，这里通过类名和内部文本内容来精准查找</font><br>
<font color="#ff00ff">function findButton() {</font><br>
<font color="#ff00ff">&nbsp; &nbsp; const buttons = document.querySelectorAll('button.el-button.el-button--default.el-button--small.el-button--primary');</font><br>
<font color="#ff00ff">&nbsp; &nbsp; for (let i = 0; i &lt; buttons.length; i++) {</font><br>
<font color="#ff00ff">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;const span = buttons<i>.querySelector('span');</i></font><i><br>
<font color="#ff00ff">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if (span &amp;&amp; span.textContent.trim() === '确定') {</font><br>
<font color="#ff00ff">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;return buttons<i>;</i></font><i><br>
<font color="#ff00ff">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}</font><br>
<font color="#ff00ff">&nbsp; &nbsp; }</font><br>
<font color="#ff00ff">&nbsp; &nbsp; return null;</font><br>
<font color="#ff00ff">}</font><br>
<font color="#ff00ff"><br>
</font><br>
<font color="#ff00ff">function checkAndClickButton() {</font><br>
<font color="#ff00ff">&nbsp; &nbsp; const pageText = document.body.textContent;</font><br>
<font color="#ff00ff">&nbsp; &nbsp; if (pageText.includes(targetText)) {</font><br>
<font color="#ff00ff">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;const button = findButton();</font><br>
<font color="#ff00ff">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if (button) {</font><br>
<font color="#ff00ff">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;button.click();</font><br>
<font color="#ff00ff">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;console.log("'确定' 按钮已点击");</font><br>
<font color="#ff00ff">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;} else {</font><br>
<font color="#ff00ff">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;console.log("未找到 '确定' 按钮");</font><br>
<font color="#ff00ff">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}</font><br>
<font color="#ff00ff">&nbsp; &nbsp; } else {</font><br>
<font color="#ff00ff">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;console.log("未发现特定文字");</font><br>
<font color="#ff00ff">&nbsp; &nbsp; }</font><br>
<font color="#ff00ff">}</font><br>
<font color="#ff00ff"><br>
</font><br>
<font color="#ff00ff">// 页面加载完成后执行检查</font><br>
<font color="#ff00ff">window.addEventListener('load', checkAndClickButton);</font><br>
<font color="#ff00ff"><br>
</font><br>
<font color="#ff00ff">// 若页面内容动态加载，可以添加定时器定期检查</font><br>
<font color="#ff00ff">setInterval(checkAndClickButton, 2000);</font><br>
<br>
```<br>
<br>
### 代码解释<br>
1. **`targetText` 变量**：这里设置为要查找的特定文字，你可以按需修改成实际需要检测的文字。<br>
2. **`findButton` 函数**：<br>
&nbsp; &nbsp; - 先使用 `querySelectorAll` 找出所有符合类名的按钮。<br>
&nbsp; &nbsp; - 接着遍历这些按钮，检查每个按钮内的 `span` 元素文本内容是否为“确定”，若匹配则返回该按钮。<br>
3. **`checkAndClickButton` 函数**：<br>
&nbsp; &nbsp; - 检查页面文本是否包含特定文字。<br>
&nbsp; &nbsp; - 若包含，调用 `findButton` 函数查找“确定”按钮并点击；若不包含，输出未发现特定文字的提示。<br>
4. **事件监听和定时器**：<br>
&nbsp; &nbsp; - `window.addEventListener('load', checkAndClickButton)`：页面加载完成时执行一次检查。<br>
&nbsp; &nbsp; - `setInterval(checkAndClickButton, 2000)`：每 2 秒执行一次检查，以应对页面内容动态加载的情况。 <br>
<br>
（文章内容有点长，纯小白分享，希望能给遇到同样问题的人，一个小小的参考）（ps：直接复制红紫色的代码到该网页的控制台，<font color="#ff0000">特定文字</font> 换成只有在弹窗上的，定时器时间可以自己设置 2000就是2s）</i></i></td></tr></tbody></table>


