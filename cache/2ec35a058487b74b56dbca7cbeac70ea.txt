
		<h1 class="postTitle">
			<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/FaceAISDK/p/18762891" title="发布于 2025-03-10 16:12">
    <span role="heading" aria-level="2">基于近红外与可见光双目摄像头的人脸识别与活体检测，文末附Demo</span>
    

</a>

		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p><strong>基于近红外与可见光双目摄像头的活体人脸检测原理</strong></p>
<p><strong>人脸活体检测</strong>（Face Anti-Spoofing）是人脸识别系统中的重要一环，它负责验证捕捉到的人脸是否为真实活体，以抵御各种伪造攻击，如彩色纸张打印的人脸图、电子设备屏幕中的人脸数字图像及面具等。这些攻击手段若得逞，将对金融安全、门禁管理等造成严重威胁。</p>
<p>基于近红外与可见光双目摄像头的活体人脸检测利用红外摄像头下视频和大部分纸张不能呈现图像的特性，有效的防止了视频中伪造人脸的攻击；同时利用近红外摄像头和可见光摄像头下真实人脸与照片人脸纹理差异和颜色差异，可以有效地区分人脸是来自真实人脸还是照片中的伪造人脸。</p>
<p><img src="https://img2024.cnblogs.com/blog/3610923/202503/3610923-20250310155645474-701423355.png" alt="" loading="lazy"></p>
<p>Android实现双目红外活体检测<br>
首先建议使用上图1 的USB 双目摄像头，能支持双头Type-C 接口UVC协议的，现在的手机平板大部分都是TypeC 接口了，千万别整公头USB口，需要特定的开发板才能开发调试。<br>
然后 打通UVC协议摄像头预览，能正常预览才能取数据进行AI分析人脸识别等，目前Android 平台的UVC协议摄像头库最有名的就是日本大神的 saki4510t/UVCCamera，但是很久不维护了，文章最后的源码会集成到Demo 中<br>
最后 就可以拿双目摄像头中的RGB和IR 图像进行活体检测人脸识别了。<br>
ini 代码解读复制代码    /**<br>
* 初始化IR 摄像头<br>
*<br>
*/<br>
private void initIRCamara() {<br>
irCameraManager.initCameraHelper();<br>
irCameraManager.setOpeningMultiCamera(true);<br>
irCameraManager.setCameraView(binding.irCameraTextureView,true);<br>
irCameraManager.selectUsbCamera(UsbCameraEnum.IR);</p>
<pre><code>    irCameraManager.setOnDeviceStatuesCallBack(new UsbCameraManager.OnDeviceStatuesCallBack() {
        @Override
        public void onAttach(UsbDevice device) {
        }

        @Override
        public void onDeviceOpen(UsbDevice device, boolean isFirstOpen) {

         }
    });

    irCameraManager.setPreviewHeight(PREVIEW_HEIGHT);
    irCameraManager.setFrameCallback(frame -&gt; {
        Size currentPreviewSize = irCameraManager.getCurrentPreviewSize();
        int width = PREVIEW_WIDTH;
        int height = PREVIEW_HEIGHT;
        if (currentPreviewSize != null) {
            width = currentPreviewSize.width;
            height = currentPreviewSize.height;
        }
        Bitmap bitmap = DataConvertUtils.NV21Data2Bitmap(frame, width, height, 0, 0, false);
        if (bitmap != null) {
            faceVerifySetBitmap(bitmap, FaceVerifyUtils.BitmapType.IR);
        }
    }, UVCCamera.PIXEL_FORMAT_NV21);
}
</code></pre>
<p>初始化RGB和IR 数据后把数据转为Bitmap 后送入引擎开始人脸识别，双目活体检测了<br>
ini 代码解读复制代码faceVerifyUtils.goVerifyWithIR(irBitmap, rgbBitmap);</p>
<p>注意事项</p>
<p>目前的USB双目摄像头的带宽普遍不足，但好在人脸识别，双目活体检测不需要太高分辨率，1280*720 足够了<br>
需要宽动态抗逆光摄像头，调试的时候经常经常用手触摸镜头需要保持镜头整洁<br>
确保两个摄像头都正常稳定同步的输出了影像画面</p>
<p>演示接入代码Demo 和体验App 下载<br>
上述的UVC 协议摄像头管理已经放在工程目了libs 下面了打包成了AAR 文件，整个项目代码GitHub 搜索AnyLifeZLB/FaceVerificationSDK<br>
或者点击： github.com/AnyLifeZLB/…<br>
手上有双目摄像头的连接设备可以立马体验效果<br>
<img src="https://img2024.cnblogs.com/blog/3610923/202503/3610923-20250310155625587-1849598153.jpg" alt="" loading="lazy"></p>

</div>
<div class="clear"></div>

		</div>
		<div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.004586136696759259" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-10 16:12">2025-03-10 16:12</span>&nbsp;
<a href="https://www.cnblogs.com/FaceAISDK">FaceAISDK</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18762891" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18762891);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18762891', targetLink: 'https://www.cnblogs.com/FaceAISDK/p/18762891', title: '基于近红外与可见光双目摄像头的人脸识别与活体检测，文末附Demo' })">举报</a>
</div>
	