
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wang_yb/p/18774585" title="发布于 2025-03-16 09:21">
    <span role="heading" aria-level="2">manim边学边做--三维图形的场景类</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>在<code>Manim</code>中，<code>ThreeDScene</code>是一个专门为<strong>三维场景</strong>设计的类。</p>
<p>它通过配置三维相机、支持复杂的相机运动以及管理物体与相机的交互关系，为<strong>科学可视化</strong>、<strong>工程仿真</strong>、<strong>数学教育</strong>等领域提供了强大的工具。</p>
<p>典型应用场景包括：</p>
<ul>
<li>三维几何图形的动态演示（如旋转立方体、莫比乌斯环）</li>
<li>物理过程的三维可视化（如分子运动、流体动力学）</li>
<li>交互式数学模型的构建（如曲面方程、向量场分析）</li>
<li>虚拟现实场景的原型开发</li>
</ul>
<h1 id="1-threedscene概要">1. ThreeDScene概要</h1>
<p><code>ThreeDScene</code>是<code>Manim</code>中用于处理三维场景的核心类。</p>
<p>与普通的二维场景不同，<code>ThreeDScene</code>提供了对三维空间的全面支持，包括：</p>
<ol>
<li><strong>三维对象的创建和操作</strong>：可以轻松地在三维空间中放置和移动对象</li>
<li><strong>相机的自由移动和旋转</strong>：通过调整相机的位置和方向，可以实现多种视角和动画效果</li>
<li><strong>固定对象的显示</strong>：某些对象可以被设置为固定在相机帧中，即使相机移动，这些对象也不会改变位置或方向。</li>
</ol>
<h2 id="11-主要参数">1.1. 主要参数</h2>
<p><code>ThreeDScene</code>继承自<code>Scene</code>，所有<code>Scene</code>的参数都适用于<code>ThreeDScene</code>，</p>
<table>
<thead>
<tr>
<th><strong>参数名称</strong></th>
<th><strong>类型</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>camera_class</td>
<td>Camera</td>
<td>指定使用的相机类，默认为<code>ThreeDCamera</code>。这个参数决定了相机的行为和特性</td>
</tr>
<tr>
<td>ambient_camera_rotation</td>
<td></td>
<td>设置相机的环境旋转。可以指定旋转的速率和方向</td>
</tr>
<tr>
<td>default_angled_camera_orientation_kwargs</td>
<td></td>
<td>设置默认的相机倾斜角度和其他相关参数</td>
</tr>
</tbody>
</table>
<h2 id="12-主要方法">1.2. 主要方法</h2>
<p><code>ThreeDScene</code>提供了一系列方法，用于控制相机和对象的行为：</p>
<table>
<thead>
<tr>
<th><strong>名称</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>add_fixed_in_frame_mobjects</td>
<td>将指定的对象固定在相机帧中，即使相机移动，这些对象也不会改变位置或方向</td>
</tr>
<tr>
<td>add_fixed_orientation_mobjects</td>
<td>将指定的对象固定在相机的方向上，即使相机旋转，这些对象也不会改变方向</td>
</tr>
<tr>
<td>begin_3dillusion_camera_rotation</td>
<td>开始一个三维相机旋转的动画效果，可以通过参数控制旋转的速率和方向</td>
</tr>
<tr>
<td>begin_ambient_camera_rotation</td>
<td>开始一个环境相机旋转，通常围绕 Z 轴旋转</td>
</tr>
<tr>
<td>move_camera</td>
<td>动画化地移动相机到指定的球坐标位置</td>
</tr>
<tr>
<td>set_camera_orientation</td>
<td>设置相机的当前方向</td>
</tr>
<tr>
<td>stop_3dillusion_camera_rotation</td>
<td>停止所有三维相机旋转的动画效果</td>
</tr>
<tr>
<td>stop_ambient_camera_rotation</td>
<td>停止环境相机旋转</td>
</tr>
</tbody>
</table>
<h1 id="2-使用示例">2. 使用示例</h1>
<p>以下是四个能够展示<code>ThreeDScene</code>特点的动画示例，每个示例都突出了<code>ThreeDScene</code>的独特功能。</p>
<h2 id="21-旋转的立方体">2.1. 旋转的立方体</h2>
<p>在这个示例中，我们创建了一个立方体，并使用<code>begin_3dillusion_camera_rotation</code>方法让相机围绕立方体旋转，同时立方体自身也在旋转。</p>
<p>这种双重旋转效果展示了<code>ThreeDScene</code>在处理复杂三维动画时的强大能力。</p>
<pre><code class="language-python">cube = Cube(side_length=2, fill_color=BLUE, fill_opacity=0.7)
self.set_camera_orientation(phi=75 * DEGREES, theta=30 * DEGREES)
self.begin_3dillusion_camera_rotation(rate=0.1)
self.play(Rotate(cube, axis=RIGHT, angle=2 * PI), run_time=5)
self.stop_3dillusion_camera_rotation()
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/83005/202503/83005-20250316092029140-1177638021.gif" alt="" loading="lazy"></p>
<h2 id="22-固定在相机帧中的文本">2.2. 固定在相机帧中的文本</h2>
<p>这个示例展示了如何使用<code>add_fixed_in_frame_mobjects</code>方法将文本固定在相机帧中。</p>
<p>即使相机旋转，文本始终保持在屏幕的左上角，不会受到相机运动的影响。</p>
<pre><code class="language-python">axes = ThreeDAxes()
text = Text("固定的 文本内容", font_size=48).to_corner(UL)
self.add_fixed_in_frame_mobjects(text)
self.add(axes)
self.set_camera_orientation(phi=75 * DEGREES, theta=30 * DEGREES)
self.begin_3dillusion_camera_rotation(rate=0.5)
self.wait(3)
self.stop_3dillusion_camera_rotation()
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/83005/202503/83005-20250316092029078-357491759.gif" alt="" loading="lazy"></p>
<h2 id="23-动态调整相机视角">2.3. 动态调整相机视角</h2>
<p>在这个示例中，我们使用<code>move_camera</code>方法动态调整相机的视角。</p>
<p>通过指定新的球坐标位置，相机平滑地移动到新的视角，展示了<code>ThreeDScene</code>在相机动画方面的灵活性。</p>
<pre><code class="language-python">sphere = Sphere(radius=2, fill_color=RED, fill_opacity=0.7)
self.add(sphere)
self.set_camera_orientation(phi=75 * DEGREES, theta=30 * DEGREES)
self.move_camera(phi=30 * DEGREES, theta=120 * DEGREES, run_time=3)
self.wait()
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/83005/202503/83005-20250316092029221-1729699457.gif" alt="" loading="lazy"></p>
<h2 id="24-固定方向的对象">2.4. 固定方向的对象</h2>
<p>这个示例展示了如何使用<code>add_fixed_orientation_mobjects</code>方法固定对象的方向。</p>
<p>即使相机旋转，箭头始终保持指向右侧，不会随着相机的旋转而改变方向。</p>
<pre><code class="language-python">axes = ThreeDAxes()
arrow = Arrow3D(start=ORIGIN, end=RIGHT * 3, color=GREEN)
self.add_fixed_orientation_mobjects(arrow)
self.add(axes)
self.set_camera_orientation(phi=75 * DEGREES, theta=30 * DEGREES)
self.begin_3dillusion_camera_rotation(rate=0.5)
self.wait(3)
self.stop_3dillusion_camera_rotation()
</code></pre>
<p><img src="https://img2024.cnblogs.com/blog/83005/202503/83005-20250316092029057-744003577.gif" alt="" loading="lazy"></p>
<h1 id="3-附件">3. 附件</h1>
<p>文中的代码只是关键部分的截取，完整的代码共享在网盘中（<code>threed.py</code>），</p>
<p>下载地址: <a href="https://url11.ctfile.com/d/45455611-65421115-a8be22?p=6872" target="_blank" rel="noopener nofollow">完整代码</a> (访问密码: 6872)</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.5367201358553241" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-16 09:21">2025-03-16 09:21</span>&nbsp;
<a href="https://www.cnblogs.com/wang_yb">wang_yb</a>&nbsp;
阅读(<span id="post_view_count">52</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18774585" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18774585);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18774585', targetLink: 'https://www.cnblogs.com/wang_yb/p/18774585', title: 'manim边学边做--三维图形的场景类' })">举报</a>
</div>
        