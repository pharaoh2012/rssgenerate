
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/fs7744/p/18647113" title="发布于 2025-01-02 11:08">
    <span role="heading" aria-level="2">2024个人总结</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>眼睛一睁一闭，一年又过去了，小小总结一下个人的2024</p>
<ul>
<li>
<p>构建了某某跨平台电商工具站点后端核心<br>
尽事在人，成事在天，主体架构构建不孬，吾亦算尽忠职守<br>
偏处吾编码也随事之变化不断磨砺改造工具利剑，某些经验也总结成了库<a href="https://github.com/fs7744/sv.db" target="_blank" rel="noopener nofollow">sv.db</a>和几篇文章,不算多强，只是为自己工作省事不少</p>
</li>
<li>
<p>略微遗憾基于openresty的项目停滞<br>
廉颇老矣，曾能饭否，奈何君王无需廉颇征战新战场已<br>
不过廉颇好处尚在，基于lua特性实现的非停机插件功能，为个人工作各种功能开发依旧省事不少 （假如有人感兴趣可以看这里<a href="https://github.com/fs7744/nature" target="_blank" rel="noopener nofollow">nature</a>）</p>
</li>
<li>
<p>几年后再一次研究 <a href="https://learn.microsoft.com/en-us/dotnet/csharp/roslyn-sdk/#source-generators" target="_blank" rel="noopener nofollow">Source Generators</a><br>
历经数年演化，其惊喜不少，特别 Interceptor ，当年Source Generators刚推出，第一反应便是 aop扩展，惜于各类限制，尝试中道崩殂，<br>
现已内置 Interceptor ，惊喜异常，果然同道者思想尚有着契合之处<br>
几篇文章便由此而来<br>
<a href="https://www.cnblogs.com/fs7744/p/18332993" target="_blank">一个基于 SourceGenerator 生成 从 dbReader转换为 class 数据的性能测试实验</a><br>
<a href="https://www.cnblogs.com/fs7744/p/18338301" target="_blank">SourceGenerator 生成db to class代码优化结果记录</a><br>
<a href="https://www.cnblogs.com/fs7744/p/18340422" target="_blank">SourceGenerator 生成db to class代码优化结果记录 二</a><br>
<a href="https://www.cnblogs.com/fs7744/p/18346094" target="_blank">c#12 实验特性Interceptor如何使用的一个简单但完整的示例</a><br>
<a href="https://www.cnblogs.com/fs7744/p/18390200" target="_blank">探索一下 Enum 优化</a></p>
</li>
<li>
<p>某些积累会在需要时开花<br>
年初兴趣所致，研究了以下一些东东<br>
<a href="https://www.cnblogs.com/fs7744/p/18014877" target="_blank">通过解析库探究函数式抽象代价</a><br>
<a href="https://www.cnblogs.com/fs7744/p/18016371" target="_blank">通过解析库探究函数式抽象代价 ( ini 解析示例补充)</a><br>
<a href="https://www.cnblogs.com/fs7744/p/18038661" target="_blank">以解析csv数据为例，讨论string、char[]、stream 不同类型来源是否能进行高性能读取解析封装可能性</a><br>
<a href="https://www.cnblogs.com/fs7744/p/18043193" target="_blank">骚操作之 持有 ReadOnlySpan 数据</a><br>
无心插柳柳成荫，当年便用上了某些，再编写以下内容还有某些工作内容还是有不小帮助<br>
<a href="https://www.cnblogs.com/fs7744/p/18437966" target="_blank">尝试让查询更简单</a><br>
<a href="https://www.cnblogs.com/fs7744/p/18463884" target="_blank">让查询可以使用 json path</a></p>
</li>
<li>
<p>某些杂想<br>
偿还童年 哲学三问引出虚无，面向它，弥补过去之缺，接受三千世界不同自己相同自己不认可忽视的自己，多做想做的，人生的浪费才好玩<br>
ai  大数据 -》 元宇宙 -》 ai 资本手段总是相似，毕竟赚钱的贪欲是无止境的，如果有人没多大能力，又想赚，下一波记得多卖卖网课，赚钱就靠你口才了<br>
黑悟空 多年玩家的期待，接下来游戏业估计一波繁荣，再一波灭亡，再后来成否，不敢断言，但吾奢望它成</p>
</li>
<li>
<p>2025<br>
希望有空，还是造些轮子玩，多读一些书吧</p>
</li>
</ul>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.9138880427743056" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-02 11:08">2025-01-02 11:08</span>&nbsp;
<a href="https://www.cnblogs.com/fs7744">victor.x.qu</a>&nbsp;
阅读(<span id="post_view_count">798</span>)&nbsp;
评论(<span id="post_comment_count">2</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18647113" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18647113);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18647113', targetLink: 'https://www.cnblogs.com/fs7744/p/18647113', title: '2024个人总结' })">举报</a>
</div>
        