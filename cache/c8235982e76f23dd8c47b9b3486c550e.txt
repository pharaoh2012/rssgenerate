
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/springsource/p/18936461" title="发布于 2025-06-19 15:23">
    <span role="heading" aria-level="2">Java团队Cursor最佳实践：3分钟构建「零泄漏」AI开发环境</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h3>&nbsp;</h3>
<h3><em><span><span>最近用了段时间的 cursor, &nbsp;发现卷程序员的还是程序员自己, &nbsp;开发效率确实飞起了. 没办法, 开源卷自己、AI还是第一个卷自己, 但对于我们个人来说, 只能拥抱变化. 本文总结了下最近用到的基础配置, 希望对大家有帮助, 点用起来吧.&nbsp;</span></span></em></h3>
<hr>
<p>&nbsp;</p>
<p><em><span><span><span><span>环境基础配置</span></span></span></span></em></p>
<h3 data-lake-index-type="2">&nbsp;</h3>
<h3 data-lake-index-type="2"><span><span><span>1.1 &nbsp;<span><span>JDK设置</span></span></span></span></span></h3>
<h4 data-lake-index-type="2"><span>通过 command+shfit+p</span></h4>
<p><img src="https://img2024.cnblogs.com/blog/323385/202506/323385-20250619141540717-1372530370.png" alt="" width="632" height="501" loading="lazy"></p>
<p>&nbsp;</p>
<p>选择自己的jdk版本 (公司还是用1.8)</p>
<p><img src="https://img2024.cnblogs.com/blog/323385/202506/323385-20250619141611776-1943735416.png" alt="" width="630" height="454" loading="lazy"></p>
<p>&nbsp;</p>
<h3 data-lake-index-type="2"><span><span><span>1.2.&nbsp;<span><span>maven配置, 自定义settings</span></span></span></span></span></h3>
<p data-lake-index-type="2">国外的maven仓库卡成狗, 需要换成阿里云的配置方案 (或自己公司的私有库), 减少90%下载时间</p>
<div class="cnblogs_Highlighter">
<pre class="brush:bash;gutter:true;">&lt;mirror&gt;
  &lt;id&gt;aliyunmaven&lt;/id&gt;
  &lt;url&gt;https://maven.aliyun.com/repository/public&lt;/url&gt;
  &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;
&lt;/mirror&gt;
</pre>
</div>
<p>cursor里完成 maven setting 地址设置, 快捷键: ‘comand+, ’&nbsp;</p>
<p><img src="https://img2024.cnblogs.com/blog/323385/202506/323385-20250619141816534-788998525.png" alt="" width="672" height="453" loading="lazy"></p>
<p>&nbsp;</p>
<h3 data-lake-index-type="2"><span><span><span>1.3. 防代码泄漏</span></span></span></h3>
<p>&nbsp;</p>
<p><span><span>模型隐私数据保护设置,&nbsp;<span data-pm-slice="1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;p&quot;,&quot;attributes&quot;:{&quot;id&quot;:&quot;u812dbca6&quot;,&quot;class&quot;:&quot;ne-p&quot;,&quot;style&quot;:&quot;margin: 0; padding: 0; min-height: 24px;&quot;},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;},&quot;node&quot;,{&quot;tagName&quot;:&quot;span&quot;,&quot;attributes&quot;:{&quot;class&quot;:&quot;ne-text&quot;},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]"><span>避免<span><span>代码被上传了, 如果是公司用, 这个很重要.</span></span></span></span></span></span>&nbsp;</p>
<p><span><span>选择设置 -&gt; 选择模型类型</span></span></p>
<p><img src="https://img2024.cnblogs.com/blog/323385/202506/323385-20250619141855885-1477251667.png" alt="" width="675" height="410" loading="lazy"></p>
<p>settings.json 部分 (包含在了下面settings.json里面了)</p>
<div class="cnblogs_Highlighter">
<pre class="brush:bash;gutter:true;">// settings.json  
{  
  "allowAiService": false,     // 禁止代码上传至AI服务  
  "telemetry.enableTelemetry": false // 关闭数据采集  
}  
</pre>
</div>
<p>&nbsp;</p>
<hr>
<p>&nbsp;&nbsp;</p>
<h2><span><span>2、项目核心文件<span data-pm-slice="1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;p&quot;,&quot;attributes&quot;:{&quot;id&quot;:&quot;u7f368f0e&quot;,&quot;class&quot;:&quot;ne-p&quot;,&quot;style&quot;:&quot;margin: 0; padding: 0; min-height: 24px;&quot;},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;},&quot;node&quot;,{&quot;tagName&quot;:&quot;span&quot;,&quot;attributes&quot;:{&quot;class&quot;:&quot;ne-text&quot;},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]"><span>配置 (团队统一项目配置)</span></span></span></span>&nbsp;</h2>
<h3 data-lake-index-type="2"><span><span><span>2.1 &nbsp;.<span><span>vscode/settings.json&nbsp;</span></span></span></span></span></h3>
<p data-lake-index-type="2" data-pm-slice="3 3 []"><span>下面有几个文件很重要, &nbsp;团队必须统一</span></p>
<ul>
<li>
<p data-lake-index-type="2" data-pm-slice="3 3 []">&nbsp;settings.json,项目专属编辑器配置（缩进/格式化/路径等）</p>
</li>
<li>
<p data-lake-index-type="2" data-pm-slice="3 3 []">launch.json,调试配置（Spring Boot/JUnit/远程调试）</p>
</li>
<li>
<p data-lake-index-type="2" data-pm-slice="3 3 []">tasks.json,自定义构建任务（Maven/Gradle 命令封装）</p>
</li>
<li>
<p data-lake-index-type="2" data-pm-slice="3 3 []">extensions.json, 推荐插件列表（提示团队安装统一插件）</p>
</li>
</ul>
<p>&nbsp;</p>
<p data-lake-index-type="2" data-pm-slice="3 3 []"><span>文件位置. 项目的根目录 &nbsp;<span>.<span><span>vscode&nbsp;下面:</span></span></span></span></p>
<p><img src="https://img2024.cnblogs.com/blog/323385/202506/323385-20250619142644460-1259340278.png" alt="" width="276" height="257" loading="lazy"></p>
<p>&nbsp;</p>
<p data-lake-index-type="2"><span><span>主要影响开发效率和体验的是&nbsp;<span>settings.json<span>&nbsp;和&nbsp;<span>launch.json<span>&nbsp;最为重要</span></span></span></span></span></span></p>
<p data-lake-index-type="2"><span data-pm-slice="1 1 [&quot;table&quot;,{&quot;interlaced&quot;:null,&quot;align&quot;:null,&quot;class&quot;:&quot;ne-table&quot;,&quot;style&quot;:&quot;table-layout: fixed; border-collapse: collapse; border: 1px solid #d9d9d9; width: 750px;&quot;},&quot;table_body&quot;,null,&quot;table_row&quot;,{&quot;class&quot;:null,&quot;style&quot;:&quot;height: 33px;&quot;},&quot;table_cell&quot;,{&quot;colspan&quot;:1,&quot;rowspan&quot;:1,&quot;colwidth&quot;:null,&quot;width&quot;:&quot;250&quot;,&quot;valign&quot;:null,&quot;align&quot;:null,&quot;style&quot;:&quot;border: 1px solid #d9d9d9; &quot;},&quot;para&quot;,{&quot;tagName&quot;:&quot;p&quot;,&quot;attributes&quot;:{&quot;id&quot;:&quot;ucd33df23&quot;,&quot;class&quot;:&quot;ne-p&quot;,&quot;style&quot;:&quot;margin: 0; padding: 0; min-height: 24px; text-align: center;&quot;},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;},&quot;node&quot;,{&quot;tagName&quot;:&quot;code&quot;,&quot;attributes&quot;:{&quot;class&quot;:&quot;ne-code&quot;,&quot;style&quot;:&quot;font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, Courier, monospace; background-color: rgba(0, 0, 0, 0.06); border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; padding: 0px 2px;&quot;},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;},&quot;node&quot;,{&quot;tagName&quot;:&quot;span&quot;,&quot;attributes&quot;:{&quot;class&quot;:&quot;ne-text&quot;,&quot;style&quot;:&quot;font-size: 14px; color: rgba(0, 0, 0, 0.9);&quot;},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]"><span>settings.json 的配置</span></span></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">{
  </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> ================ 基础编辑器设置 ================</span>
  <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">editor.fontSize</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 128, 1)">14</span><span style="color: rgba(0, 0, 0, 1)">,
  </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">editor.fontFamily</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">'JetBrains Mono', Consolas, monospace</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
  </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">editor.tabSize</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 128, 1)">4</span>,                     <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Java标准缩进</span>
  <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">editor.insertSpaces</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">,             
  </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">editor.rulers</span><span style="color: rgba(128, 0, 0, 1)">"</span>: [<span style="color: rgba(128, 0, 128, 1)">120</span>],                  <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 单行长度限制（保留120）</span>
  <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">editor.bracketPairColorization.enabled</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">,

  </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> ================ 保存时自动化 ================</span>
  <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">editor.formatOnSave</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(0, 0, 255, 1)">true</span>,             <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 保存自动格式化</span>
  <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">editor.codeActionsOnSave</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">source.organizeImports</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(0, 0, 255, 1)">true</span>,        <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 自动整理import</span>
    <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">source.fixAll</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(0, 0, 255, 1)">true</span>                  <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 自动修复问题</span>
<span style="color: rgba(0, 0, 0, 1)">  },

  </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> ================ 文件管理 ================</span>
  <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">files.autoSave</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">afterDelay</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
  </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">files.autoSaveDelay</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 128, 1)">2000</span>,             <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 2秒延迟保存</span>
  <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">files.trimTrailingWhitespace</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(0, 0, 255, 1)">true</span>,    <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 清除行尾空格</span>
  <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">files.insertFinalNewline</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(0, 0, 255, 1)">true</span>,        <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 文件末尾保留空行</span>
  <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">files.encoding</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">utf8</span><span style="color: rgba(128, 0, 0, 1)">"</span>,                <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> UTF-8编码

  </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> ================ 性能优化（关键！） ================</span>
  <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">search.exclude</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">**/target</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(0, 0, 255, 1)">true</span>,                     <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 忽略构建目录</span>
    <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">**/*.jar</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(0, 0, 255, 1)">true</span>,                      <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 忽略JAR文件</span>
    <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">**/*.class</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(0, 0, 255, 1)">true</span>                     <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 忽略字节码</span>
<span style="color: rgba(0, 0, 0, 1)">  },
  </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">files.watcherExclude</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">**/target/**</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(0, 0, 255, 1)">true</span>,                  <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 停止监控构建目录（防卡顿）</span>
    <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">**/node_modules/**</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">
  },

  </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> ================ Java专项配置 ================</span>
  <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">[java]</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">editor.tabSize</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 128, 1)">4</span>,                   <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Java专属缩进</span>
    <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">editor.defaultFormatter</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">redhat.java</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
  },
  </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">java.jdt.ls.java.home</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">/path/to/jdk-8</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> ⚠️必须修改为团队JDK路径</span>
  <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">java.maven.downloadSources</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(0, 0, 255, 1)">true</span>,       <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 自动下载源码</span>
  <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">java.autobuild.enabled</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(0, 0, 255, 1)">true</span>,           <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 启用自动构建

  </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> ================ 团队安全规范 ================</span>
  <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">allowAiService</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(0, 0, 255, 1)">false</span>,                  <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 禁用AI服务访问代码（安全红线！）</span>
  <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">telemetry.enableTelemetry</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(0, 0, 255, 1)">false</span>        <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 关闭数据收集</span>
}</pre>
</div>
<p>&nbsp;</p>
<p><span>launch.json 的配置</span></p>
<div class="cnblogs_Highlighter">
<pre class="brush:bash;gutter:true;">{
  "version": "0.2.0",
  "configurations": [
    {
      "type": "java",
      "name": "Debug Spring Boot",
      "request": "launch",
      "mainClass": "com.example.Application", // ⚠️替换为你的启动类
      "console": "integratedTerminal",
      "vmArgs": [
        "-Xmx1024m",                        // 堆内存上限（防OOM）
        "-Dspring.profiles.active=dev",     // 开发环境配置
        "-Dspring.devtools.restart.enabled=true" // 热重载开关
      ],
      "env": {
        "SPRING_PROFILES_ACTIVE": "dev"     // 双重环境配置保障
      }
    },
    {
      "type": "java",
      "name": "Debug JUnit Tests",
      "request": "launch",
      "testKind": "junit",                 // JUnit专用模式
      "vmArgs": ["-ea"],                   // 启用断言检查
      "env": {
        "SPRING_PROFILES_ACTIVE": "test"   // 测试环境隔离
      }
    },

    {
      "type": "java",
      "name": "Debug Current File",
      "request": "launch",
      "mainClass": "${file}",                // 自动获取当前文件
      "vmArgs": ["-Dfile.encoding=UTF-8"]    // 强制UTF-8编码
    }
  ]
}
</pre>
</div>
<p>　　</p>
<hr>
<p>&nbsp;</p>
<h2><span><span><span>3. 几个<span><span>常用快捷键</span></span></span></span></span></h2>
<h3>常用快捷键</h3>
<ul>
<li>⌘ + , 打开设置面板（配置 JDK/Maven 必备）</li>
<li>⌘ + ⇧ + P 万能命令面板（搜命令/切语言/装插件）</li>
<li>⌘ + P 快速文件跳转（输入文件名直达）</li>
<li>⌘ + K ⌘ + S 打开快捷键自定义面板</li>
</ul>
<h3>日常快捷键设置</h3>
<div>
<p data-lake-index-type="2" data-pm-slice="3 3 []">⌘ + ⇧ + P&nbsp; ,&nbsp; 输入 keyboard,&nbsp;&nbsp;打开快捷键设置</p>
<p><img src="https://img2024.cnblogs.com/blog/323385/202506/323385-20250619145556601-233539209.png" alt="" width="590" height="129" loading="lazy"></p>
<p>&nbsp;</p>
<p>开始设置个人习惯的几个快捷键, 如:&nbsp;</p>
<p data-lake-index-type="2" data-pm-slice="3 3 []"><span>回到上一个操作光标位置</span></p>
<p><img src="https://img2024.cnblogs.com/blog/323385/202506/323385-20250619145702928-780274626.png" alt="" width="575" height="108" loading="lazy"></p>
<p data-lake-index-type="2" data-pm-slice="3 3 []">&nbsp;</p>
<p data-lake-index-type="2" data-pm-slice="3 3 []"><span>回到下一个操作光标</span></p>
<p><img src="https://img2024.cnblogs.com/blog/323385/202506/323385-20250619145938721-1865969116.png" alt="" width="606" height="82" loading="lazy"></p>
<p>&nbsp;</p>
<p data-lake-index-type="2" data-pm-slice="3 3 []"><span>等等, 这里就不一一展示了, 自己设置即可. (我是习惯了eclipse的操作...)</span></p>
<p data-lake-index-type="2" data-pm-slice="3 3 []"><span>&nbsp;</span>各位有什么高效的快捷键分享, 也欢迎留言区分享下....</p>
<hr>
<h2><em data-pm-slice="0 0 []"><span>5. 最后</span></em></h2>
<p><em data-pm-slice="0 0 []"><span>Cursor这款轻量级神器正在Java圈悄然崛起！本篇手把手教你配置开发环境, &nbsp;可以逐步迁移idea等到AI编辑器了</span></em></p>
<p><span><br></span><span>以上配置对cursor、trae 都是通用的, 目前几款AI编辑器都是基于vsCode.</span><span>基础配置先到这, 团队里对cursor的插件、rule、doc 、mcp 也应该保持一致. 后续继续分享, 欢迎持续关注.</span>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;<img src="https://img2024.cnblogs.com/blog/323385/202506/323385-20250613171608656-2008298749.png" alt="" width="347" height="140" class="medium-zoom-image" loading="lazy"></p>

</div>
<p>&nbsp;</p>
<pre class="code-snippet__js" data-lang="xml"><code></code></pre>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-06-19 15:23">2025-06-19 15:23</span>&nbsp;
<a href="https://www.cnblogs.com/springsource">何锦彬</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18936461);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18936461', targetLink: 'https://www.cnblogs.com/springsource/p/18936461', title: 'Java团队Cursor最佳实践：3分钟构建「零泄漏」AI开发环境' })">举报</a>
</div>
        