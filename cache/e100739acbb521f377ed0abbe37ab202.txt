
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/HaiJun-Aion/p/18912201" title="发布于 2025-06-05 13:27">
    <span role="heading" aria-level="2">记录第一次公司内部分享：如何基于大模型搭建企业+AI业务</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605132301864-1131627578.png" alt="image" loading="lazy"></p>
<p>Hello， 大家好，我是程序员海军,&nbsp;<code>全栈开发</code>&nbsp;|<code>AI爱好者</code>&nbsp;｜&nbsp;<code>独立开发</code>。</p>
<p>记录第一次在公司内部分享AI+业务 落地实践。</p>
<p>如今，AI时代带来的无限可能性，很多业务都值得从做一遍。</p>
<p>最近，老大参加了行业的AI 大会，回来之后将这项任务交给了我。由于我经常研究各种AI 玩法以及AI圈动态，对这块还是有点研究的。</p>
<p>于是，我调研了一天，用最快的时间验证我的思路是否可行跑通，我采用了我最熟悉最快的技术栈， Express + Langchain + Mysql 去将 业务 + AI大模型 结合 开发落地 MVP， LangChain 对于我是陌生的。于是开始学习了3天，建立了对它大概的认知，并开始搭建项目，以及微调提示词等，并开发了 业务的MCP Server 来扩展大模型的能力，以便它能了解公司业务并将业务数据 语义化后返回给客户，最终，从调研+学习大模型开发+实战用时一周，最终结果符合老大的预期效果。 于是就有了这个次的内部分享会，给团队 讲解 LLM 以及 如何将业务 + LLM 结合。</p>
<p>根据团队技术储备情况以及其它因素，我采用的方案是：非本地部署方案，这样节省了很多成本。<br>
<code>提示词工程 + RAG + 大模型语义化</code></p>
<p></p>
<p></p>
<p>下面主要讲了需要的AI 技术储备，可以让团队快速建立AI方面的技术认知，以及如何将业务+AI LLM 结合起来的思路，更多细节没有在本文里面去表现。有什么问题咨询或交流，可以加我微信(备注来意)。</p>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/428799/1748510184720-3f64d86a-18b2-4540-94d5-0b5538454a72.png" alt="" loading="lazy"></p>
<h2 id="实现效果">实现效果</h2>
<h3 id="新建表">新建表</h3>
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605130956574-876219974.png" alt="image" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605131017486-166554974.png" alt="image" loading="lazy"></p>
<h3 id="查询操作">查询操作</h3>
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605131314769-558835638.png" alt="image" loading="lazy"></p>
<h3 id="写入操作后台增删改操作">写入操作，后台增删改操作</h3>
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605131337234-2055630653.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605131352084-1221429974.png" alt="image" loading="lazy"></p>
<h3 id="记录ai--用户之间信息">记录AI &amp; 用户之间信息</h3>
<p>后期也可以训练 提高精准度</p>
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605131406556-1914061180.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605131422364-1682609863.png" alt="image" loading="lazy"></p>
<h2 id="mcp协议">MCP协议</h2>
<p>它是由Anthropic在2024年11月提出，目标是让大模型和外部工具、数据的交互变得标准化、简单化。</p>
<p>MCP让大模型的交互规则更统一，也方便了模型之间的调用和协作。</p>
<p><em>没有MCP 协议之前：</em></p>
<p><strong>规则各异：</strong>每个模型调用的接口各异，需要为不同的模型编写对应的调用规则。</p>
<p><em>多模型协作困难</em>：不同模型之间几乎没办法“串联”工作。</p>
<hr>
<p><em>有了MCP 协议之后:</em></p>
<p><strong>统一接口：</strong> 开发者不用为每个大模型写适配器，只需要遵循MCP 协议写一次，就能适配所有支持MCP的模型。</p>
<p><strong>跨模型调用：</strong> 每个模型之间可互通调用。</p>
<p><strong>工具调用更加灵活</strong></p>
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605131446651-693509478.png" alt="image" loading="lazy"></p>
<p><strong><font style="color: rgba(36, 41, 47, 1)">模型上下文协议</font></strong><font style="color: rgba(36, 41, 47, 1)">（Model Context Protocol, MCP）是一种专为</font><strong><font style="color: rgba(36, 41, 47, 1)">机器学习模型服务</font></strong><font style="color: rgba(36, 41, 47, 1)">设计的通信协议，</font></p>
<p><code>&lt;font style="color:rgb(214, 51, 132);"&gt;MCP&lt;/font&gt;</code><font style="color: rgba(33, 37, 41, 1)"> 通过定义统一的接口，使 </font><code>&lt;font style="color:rgb(214, 51, 132);"&gt;AI&lt;/font&gt;</code><font style="color: rgba(33, 37, 41, 1)"> 应用能够安全、灵活地访问和操作本地及远程数据资源，提升模型的功能性和可扩展性。</font><font style="color: rgba(36, 41, 47, 1)">  </font></p>
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605131512688-367783627.png" alt="image" loading="lazy"></p>
<p><font style="color: rgba(17, 124, 238, 1)">MCP本身并不处理复杂的逻辑；它只是协调AI模型与工具之间的数据和指令流动，MCP简化了AI模型与你的数据、工具和服务的交互方式。</font></p>
<h3 id="mcp核心功能">MCP核心功能</h3>
<p><strong>上下文管理：</strong> MCP 协议旨在标准化和优化模型上下文的管理和传递，从而提高模型的性能和应用范围。</p>
<p><strong>外部数据集成：</strong> 使 LLMs 能够安全地访问和操作本地及远程数据，为 LLMs 应用提供连接万物的接口。</p>
<p><strong>工具调用：</strong> MCP 协议能够为 LLMs 提供执行具体操作的能力，例如调用 API、访问数据库等。</p>
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605131527856-526403483.png" alt="image" loading="lazy"></p>
<h3 id="mcp-架构">MCP 架构</h3>
<p>** MCP 遵循客户端-服务器架构，包含以下核心组件：**</p>
<ul>
<li><strong>MCP 主机（MCP Hosts）：  提供了连接大模型的能力，例如当前的 豆包，元宝，DeepSeek。</strong></li>
<li><strong>MCP 客户端（MCP Clients）： 客户端可通过 调用MCP Server 来扩展其功能</strong></li>
<li><strong>MCP 服务器（MCP Servers）： 提供数据、工具和服务的外部系统来扩展大模型的功能，可以根据自己的业务搭建使用。</strong></li>
</ul>
<h3 id="当下主流mcp以及-应用">当下主流MCP以及 应用</h3>
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605131542095-1072050446.png" alt="image" loading="lazy"></p>
<h4 id="自动建模">自动建模</h4>
<p><font style="color: rgba(0, 0, 0, 1)">实现方式：使用开源项目 blender-mcp（GitHub 地址：<a href="https://github.com/ahujasid/blender-mcp%EF%BC%89%EF%BC%8C%E5%8C%85%E5%90%AB%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E4%B8%8E" target="_blank" rel="noopener nofollow">https://github.com/ahujasid/blender-mcp），包含服务器端与</a> Blender 插件.</font></p>
<p><img src="https://github.com/ahujasid/blender-mcp/raw/main/assets/addon-instructions.png" alt="" loading="lazy"></p>
<p><img src="https://github.com/ahujasid/blender-mcp/raw/main/assets/hammer-icon.png" alt="" loading="lazy"></p>
<h4 id="supabase-mcp------数据与数据库集成">Supabase MCP   -  数据与数据库集成</h4>
<p><font style="color: rgba(0, 0, 0, 0.9)">通过MCP将Supabase数据库连接到Cursor,自动化创建管理数据库。</font><br>
<img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605131625628-460836986.png" alt="image" loading="lazy"></p>
<h4 id="figma-mcp-----figma-设计稿转换为代码">Figma MCP -   Figma 设计稿转换为代码</h4>
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605131705502-1137746644.png" alt="image" loading="lazy"></p>
<h2 id="mcp-server">MCP Server</h2>
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605131723748-1171424138.png" alt="image" loading="lazy"></p>
<p><code>@modelcontextprotocol/sdk</code> 提供了核心的四个概念：<code>Server</code>、<code>Resources</code>、<code>Tools</code> 和 <code>Prompts</code>。</p>
<p><code>**Server**</code>** 是 MCP 的核心入口，扮演一个中枢管理者的角色**，它将各类资源（资源模型、外部工具、提示词）注册进来，然后对外提供统一的处理能力。</p>
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605131742106-1784405482.png" alt="image" loading="lazy"></p>
<p>可以使用 官方提供的SDK 进行开发 <code>MCP Server</code> 开发，供LLM 调用。</p>
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605131948540-58630639.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605132018571-727523891.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605132029457-1681543823.png" alt="image" loading="lazy"></p>
<h2 id="langchain">LangChain</h2>
<p>LangChain 是构建 <strong>基于大语言模型（LLM）应用</strong>的一个核心的框架， 它可以高效的对接大模型，内部封装了很多模块，方便与大模型之间进行协作。</p>
<p>LangChain = Prompt [提示词] + Chain [链] + Tool [工具]+ Memory [记忆] + Retrieval  [RAG]</p>
<h3 id="执行流程">执行流程</h3>
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605132045313-1697316921.png" alt="image" loading="lazy"></p>
<h3 id="主要模块">主要模块</h3>
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605132100029-1859347392.png" alt="image" loading="lazy"></p>
<h2 id="向量数据库--rag">向量数据库 + RAG</h2>
<p><strong>向量数据库</strong>是一种专门用于存储和检索<strong>高维向量</strong>（embedding）的数据库。</p>
<p>通俗的说，就是它可以更接近"语义相似"标准去检索文本最接近的信息块。</p>
<p>**RAG **主要是<font style="color: rgba(64, 64, 64, 1)">将外部知识检索与大模型生成结合的技术框架，解决大模型“幻觉”、数据时效性、隐私安全三大痛点</font></p>
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605132116350-207893973.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605132134618-2012972885.png" alt="image" loading="lazy"></p>
<h2 id="实战环节">实战环节</h2>
<p>我的方案是：  「Prompt Engineering → 模型输出 → 业务路由/执行 → 模型润色」</p>
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605132146558-409404115.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605132153066-1970096673.png" alt="image" loading="lazy"></p>
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605132157955-436851218.png" alt="image" loading="lazy"></p>
<h2 id="提示词微调面临问题">提示词微调面临问题</h2>
<p><img src="https://img2024.cnblogs.com/blog/1654515/202506/1654515-20250605132204967-379645491.png" alt="image" loading="lazy"></p>
<h2 id="应对的策略">应对的策略</h2>
<h3 id="优化提示词设计">优化提示词设计</h3>
<ul>
<li><strong>模块化提示词    静态部分（如数据库结构、规则）和动态部分（如用户输入、历史记录）</strong></li>
<li><strong>精简上下文  只在必要时传递数据库结构。</strong></li>
<li><strong>明确边界   在提示词中加入更详细的边界条件</strong></li>
</ul>
<hr>
<h3 id="输入预处理和校验">输入预处理和校验</h3>
<ul>
<li>在调用大模型之前，添加一层输入预处理逻辑，使用正则表达式或NLP工具过滤用户输入中的潜在危险内容</li>
<li>对用户输入进行意图分类，明确是否需要SQL查询、调用MCP server，还是直接返回语义化回答。</li>
</ul>
<h3 id="结果把控">结果把控</h3>
<ul>
<li>在大模型生成SQL后，添加一层校验逻辑（如SQL解析器）检查生成的SQL是否符合数据库结构和规则，避免无效或危险的SQL被执行。</li>
<li>对返回的JSON结果进行格式校验，确保字段完整且符合预期。</li>
</ul>
<h2 id="最后">最后</h2>
<p>接下来的小半年时间，会落地上面这些结合业务，需要一些时间。这样在具体的业务场景提高效率，增加了成交率，也减少了企业的额外支出。</p>
<p>在当今这个AI迅猛发展的时代，传统互联网企业正面临着前所未有的挑战与机遇。AI 正在重塑各行各业的格局，推动着产业升级和变革。</p>
<p>业务不上AI，许多传统互联网企业可能会逐渐被淘汰。AI技术能够大幅提升效率、优化用户体验、降低运营成本，并为企业带来新的增长点。</p>
<p>只能拥抱变化，拥抱AI， 在未来的商业竞争中立于不败之地。</p>
<p><strong><a href="https://img-hello-world.oss-cn-beijing.aliyuncs.com/imgs/c95cfc940e64c8f034898e884d64ec28.jpg" target="_blank" rel="noopener nofollow">点击：欢迎关注我，第一时间获取AI 最新动态</a></strong></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.20105575635185186" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-06-05 13:28">2025-06-05 13:27</span>&nbsp;
<a href="https://www.cnblogs.com/HaiJun-Aion">程序员海军</a>&nbsp;
阅读(<span id="post_view_count">161</span>)&nbsp;
评论(<span id="post_comment_count">1</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18912201);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18912201', targetLink: 'https://www.cnblogs.com/HaiJun-Aion/p/18912201', title: '记录第一次公司内部分享：如何基于大模型搭建企业+AI业务' })">举报</a>
</div>
        