
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/sharpeye/p/18748536" title="发布于 2025-03-03 17:02">
    <span role="heading" aria-level="2">使用Windows任务计划程序实现每天更换一张Processing创意桌面壁纸</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>Windows<strong>任务计划程序</strong>（Windows Task Scheduler）是Windows操作系统中的一项系统工具，它允许用户安排自动执行的任务。通过任务计划程序，用户可以设定特定的时间或条件来运行各种脚本、程序或任务，例如系统维护、数据备份、软件更新等。要实现每天能更换桌面壁纸，使用它是一个很好的选择。</p>
<p>具体想法：每次登陆Windows，可以被任务计划程序触发任务，自动执行更换桌面壁纸的批处理脚本，而该脚本获得指定目录下的由Processing设计并绘制的桌面壁纸，通过修改注册表信息，实现更换桌面壁纸。</p>
<hr>
<h2>首先</h2>
<p>编写Processing程序。Processing 是一种灵活的语言，专为电子艺术、新媒体艺术和交互式媒体设计而设计的Java衍生语言。它由Casey Reas和Ben Fry在2001年创建，旨在简化代码编写，以及加快数字媒体艺术创作。Processing基于Java语言开发而来，但提供了更为简洁和直观的语法，使得艺术家、设计师和爱好者能够更容易地学习和使用。它有很多活跃的社团和论坛，大量的源码可供学习参考。我们使用它做一个简单例子------在画布上绘制渐变色，然后在画布中央写上当天的年月日。【作为示例，不必过多设计，此博文核心在于工具间的联合使用】</p>
<p>代码如下：</p>
<pre class="language-java highlighter-hljs"><code>public void settings() {
  size(3200, 2000);  // 设置画布大小，参考桌面设置
  //fullScreen();
  println(width, height); // 方便调试，将画布大小打印出来
}

public void setup() {
  // 如果想要替换系统默认字体，设置指定字体和文字大小
  //textFont(createFont("Arial", 30));
  
  //文本居中
  textAlign(CENTER, CENTER);

  // 绘制内容
  renderContent();

  // 定义参数   保存的图片文件名，包含日期信息
  String filename = "daily_art_" + year() + "_" + nf(month(), 2) + "_" + nf(day(), 2) + ".png";

  // 保存当前帧
  save(filename);
  
  // 自动退出程序
  exit(); 
  
}

// 可以不写draw循环函数

public void draw() {
  // 禁用循环
  //noLoop();
  // renderContent();
}

private void renderContent() {
  background(255); // 设置初始背景颜色为白色

  // 获取当前日期
  int day = day();
  int month = month();
  int year = year();
  String dateText = "Today is " + month + "/" + day + "/" + year;

  // 根据日期调整渐变颜色
  for (int i = 0; i &lt; height; i++) {
    // 计算颜色值
    float r = map(i, 0, height, day * 1.5f, (day + month) * 2.5f);
    float g = map(i, 0, height, month * 3.0f, (month + year) / 20.0f);
    float b = map(i, 0, height, year % 100, (year * month) / 100.0f);

    // 确保颜色值在 0 到 255 范围内
    r = constrain(r, 0, 255);
    g = constrain(g, 0, 255);
    b = constrain(b, 0, 255);

    // 绘制彩线 试图构成渐变
    stroke(r, g, b);
    line(0, i, width, i);
  }

  // 绘制动态文字
  fill(255, 255, 255);
  noStroke();
  textSize(displayHeight / 30);
  text(dateText, width / 2, height / 2);
}</code></pre>
<p>执行程序，可得如下壁纸：</p>
<p><img src="https://img2024.cnblogs.com/blog/944545/202503/944545-20250303161444208-497966645.png" width="600"></p>
<p id="1740989693333">注意，代码中的 <code>save(filename);</code>。保存的图片会放置在该代码所在文件夹下。还有，因为不需要交互动画，所以，不用编写<code>draw()</code>循环函数，执行完<code>steup()</code>函数后，即可<code>exit()</code>退出。</p>
<hr>
<h2>其次</h2>
<p>准备好批处理程序。在windows下脚本执行实现更换桌面壁纸，Dos、VBs、PowerShell都可以，这里使用Dos。</p>
<pre class="language-powershell highlighter-hljs"><code>@echo off                  REM 关闭回显，不显示后续命令
setlocal                   REM 开始定义局部变量

REM 获取系统当前日期和时间
for /f "tokens=2 delims==" %%a in ('wmic OS Get localdatetime /value ^| find "="') do (
  set datetime=%%a         REM 将获取的日期时间值存储在变量datetime中
)

REM 提取日期时间的年、月、日部分
set year=%datetime:~0,4%   REM 年份，取datetime的前4位
set month=%datetime:~4,2%  REM 月份，取datetime的第5和第6位
set day=%datetime:~6,2%    REM 日期，取datetime的第7和第8位

REM 定义日期格式
set mydate=%year%_%month%_%day%

REM 定义图片路径
set "image_path=D:\projects\processing\fxfromdate\daily_art_%mydate%.png"
echo "%image_path%"         REM 打印图片路径

REM 检查图片文件是否存在
if not exist "%image_path%" (
  echo 文件 "%image_path%" 不存在！
  pause                    REM 暂停，等待用户响应
  exit /b 1                REM 非零退出代码表示错误，退出脚本
)

REM 设置壁纸
echo 设置壁纸...
reg add "HKCU\Control Panel\Desktop" /v Wallpaper /t REG_SZ /d "%image_path%" /f
if errorlevel 1 (
  echo 注册表修改失败！
  pause                    REM 暂停，等待用户响应
  exit /b 1                REM 非零退出代码表示错误，退出脚本
)

REM 刷新桌面以应用壁纸更改
echo 刷新桌面...
RUNDLL32.EXE user32.dll,UpdatePerUserSystemParameters

echo 壁纸已设置为: "%image_path%" REM 打印已设置的壁纸路径

endlocal                   REM 结束局部变量定义
timeout /t 1 /nobreak &gt; nul REM 等待1秒，防止命令窗口立即关闭</code></pre>
<p>&nbsp;脚本执行，自动读取图片，然后修改注册表配置，更换壁纸。</p>
<hr>
<h2>最后</h2>
<p>打开【任务计划程序】，进行配置。</p>
<ul>
<li>打开任务计划程序，创建新任务。</li>
<li><strong>常规:</strong> 设置任务名称，例如 "每天修改壁纸"。 勾选 "使用最高权限运行"。</li>
<li><strong>触发器:</strong>&nbsp;设置触发器为每天凌晨，例如凌晨 1 点。</li>
<li><strong>操作:</strong>
<ul>
<li><strong>操作 1:</strong>
<ul>
<li>程序/脚本: <code>D:\processing-4.3.2\processing-java.exe</code>&nbsp;</li>
<li>添加参数 (可选):&nbsp;<code>--sketch=D:\projects\processing\fxfromdate --run</code>&nbsp;</li>
</ul>
</li>
<li><strong>操作 2:</strong>
<ul>
<li>程序/脚本: <code>D:\projects\processing\fxfromdate\changebg.bat</code></li>
<li>添加参数:&nbsp; 无</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>如下图：</p>
<p><img src="https://img2024.cnblogs.com/blog/944545/202503/944545-20250303164313259-1782321621.png" width="600"></p>
<p>这样的话一切准备完毕。</p>
<hr>
<h2>结尾</h2>
<p>经过测试，可以顺利实现功能。这次实现，只是做个示例，至于创意壁纸如何“创意法”，就看个人的创造力和Processing功力了。</p>
<p>其实，好好利用Windows自带的任务计划程序，可以做好多有意思的事情。再接再厉吧~</p>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.38675457354513887" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-03-03 17:03">2025-03-03 17:02</span>&nbsp;
<a href="https://www.cnblogs.com/sharpeye">SHARP-EYE</a>&nbsp;
阅读(<span id="post_view_count">68</span>)&nbsp;
评论(<span id="post_comment_count">2</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18748536" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18748536);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18748536', targetLink: 'https://www.cnblogs.com/sharpeye/p/18748536', title: '使用Windows任务计划程序实现每天更换一张Processing创意桌面壁纸' })">举报</a>
</div>
        