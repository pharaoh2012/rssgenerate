
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/18687025" title="发布于 2025-01-24 08:19">
    <span role="heading" aria-level="2">C# as 和 is 运算符区别和用法</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p><img src="https://img2024.cnblogs.com/blog/1336199/202501/1336199-20250123022455739-182936425.png" alt="" loading="lazy"></p>
<h2 data-tool="mdnice编辑器">前言</h2>
<p data-tool="mdnice编辑器">在C#中，as 和 is 关键字都用于处理类型转换的运算符，但它们有不同的用途和行为。本文我们将详细解释这两个运算符的区别和用法。</p>
<h2 data-tool="mdnice编辑器">is 运算符</h2>
<p data-tool="mdnice编辑器">is 运算符用于检查对象是否是某个特定类型，或者是否可以转换为该类型。它返回一个布尔值 (true 或 false)。</p>
<pre data-tool="mdnice编辑器"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;title&nbsp;=&nbsp;"Hello&nbsp;DotNetGuide";<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(title&nbsp;is&nbsp;string)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine("是&nbsp;string&nbsp;类型");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine("不是&nbsp;string&nbsp;类型");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(title&nbsp;is&nbsp;not&nbsp;null)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine("不为&nbsp;null");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine("为&nbsp;null");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br></code></pre>
<h3 data-tool="mdnice编辑器">模式匹配</h3>
<p data-tool="mdnice编辑器">C# 7.0 引入了模式匹配，允许在 is 表达式中进行类型检查和转换：</p>
<pre data-tool="mdnice编辑器"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object&nbsp;obj&nbsp;=&nbsp;"追逐时光者";<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(obj&nbsp;is&nbsp;string&nbsp;str)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine($"&nbsp;{str}");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine("不是指定类型");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br></code></pre>
<h3 data-tool="mdnice编辑器">列表模式</h3>
<p data-tool="mdnice编辑器">从 C# 11 开始，可以使用列表模式来匹配列表或数组的元素。以下代码检查数组中处于预期位置的整数值：</p>
<pre data-tool="mdnice编辑器"><code>int[]&nbsp;empty&nbsp;=&nbsp;[];<br>int[]&nbsp;one&nbsp;=&nbsp;[1];<br>int[]&nbsp;odd&nbsp;=&nbsp;[1,&nbsp;3,&nbsp;5];<br>int[]&nbsp;even&nbsp;=&nbsp;[2,&nbsp;4,&nbsp;6];<br>int[]&nbsp;fib&nbsp;=&nbsp;[1,&nbsp;1,&nbsp;2,&nbsp;3,&nbsp;5];<br><br>Console.WriteLine(odd&nbsp;is&nbsp;[1,&nbsp;_,&nbsp;2,&nbsp;..]);&nbsp;&nbsp;&nbsp;//&nbsp;false<br>Console.WriteLine(fib&nbsp;is&nbsp;[1,&nbsp;_,&nbsp;2,&nbsp;..]);&nbsp;&nbsp;&nbsp;//&nbsp;true<br>Console.WriteLine(fib&nbsp;is&nbsp;[_,&nbsp;1,&nbsp;2,&nbsp;3,&nbsp;..]);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;true<br>Console.WriteLine(fib&nbsp;is&nbsp;[..,&nbsp;1,&nbsp;2,&nbsp;3,&nbsp;_&nbsp;]);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;true<br>Console.WriteLine(even&nbsp;is&nbsp;[2,&nbsp;_,&nbsp;6]);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;true<br>Console.WriteLine(even&nbsp;is&nbsp;[2,&nbsp;..,&nbsp;6]);&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;true<br>Console.WriteLine(odd&nbsp;is&nbsp;[..,&nbsp;3,&nbsp;5]);&nbsp;//&nbsp;true<br>Console.WriteLine(even&nbsp;is&nbsp;[..,&nbsp;3,&nbsp;5]);&nbsp;//&nbsp;false<br>Console.WriteLine(fib&nbsp;is&nbsp;[..,&nbsp;3,&nbsp;5]);&nbsp;//&nbsp;true<br></code></pre>
<h2 data-tool="mdnice编辑器">as 运算符</h2>
<p data-tool="mdnice编辑器">as 运算符尝试将对象转换为特定类型，如果转换失败，则返回 null 而不是抛出异常。它通常用于在不需要显式检查对象是否为特定类型的情况下进行安全的类型转换。</p>
<blockquote data-tool="mdnice编辑器">
<p>注意：as 运算符仅考虑引用、可以为 null、装箱和取消装箱转换。它不支持用户定义的或复杂的类型转换，这种情况需要使用强制转换表达式。</p>
</blockquote>
<pre data-tool="mdnice编辑器"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object&nbsp;title&nbsp;=&nbsp;"Hello&nbsp;DotNetGuide";<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;str&nbsp;=&nbsp;title&nbsp;as&nbsp;string;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(str&nbsp;!=&nbsp;null)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine("是&nbsp;string&nbsp;类型:&nbsp;"&nbsp;+&nbsp;str);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine("不是&nbsp;string&nbsp;类型");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int?&nbsp;num&nbsp;=&nbsp;title&nbsp;as&nbsp;int?;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(num.HasValue)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine("是&nbsp;int&nbsp;类型:&nbsp;"&nbsp;+&nbsp;num.Value);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine("不是&nbsp;int&nbsp;类型");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br></code></pre>
<h2 data-tool="mdnice编辑器">C#/.NET/.NET Core面试宝典</h2>
<ul>
<li><span style="color: rgba(0, 0, 255, 1)"><a href="https://github.com/YSGStudyHards/DotNetGuide" target="_blank" rel="noopener nofollow"><span style="color: rgba(0, 0, 255, 1)">https://github.com/YSGStudyHards/DotNetGuide</span></a></span></li>
</ul>
<p data-tool="mdnice编辑器">本文已收录至C#/.NET/.NET Core面试宝典中，欢迎关注获取更多面试干货内容。</p>
<p><img src="https://img2024.cnblogs.com/blog/1336199/202501/1336199-20250123022519317-732792656.png" alt="" loading="lazy"></p>
<h2 data-tool="mdnice编辑器">参考文章</h2>
<ul class="list-paddingleft-1" data-tool="mdnice编辑器">
<li><span style="color: rgba(0, 0, 255, 1)"><a href="https://learn.microsoft.com/zh-cn/dotnet/csharp/language-reference/operators/is" target="_blank" rel="noopener nofollow"><span style="color: rgba(0, 0, 255, 1)">https://learn.microsoft.com/zh-cn/dotnet/csharp/language-reference/operators/is</span></a></span></li>
<li><span style="color: rgba(0, 0, 255, 1)"><a href="https://learn.microsoft.com/zh-cn/dotnet/csharp/language-reference/operators/type-testing-and-cast#as-operator" target="_blank" rel="noopener nofollow"><span style="color: rgba(0, 0, 255, 1)">https://learn.microsoft.com/zh-cn/dotnet/csharp/language-reference/operators/type-testing-and-cast#as-operator</span></a></span></li>
</ul>
</div>
<div id="MySignature" role="contentinfo">
    <blockquote>
<p style="font-family:YouYuan;font-size: 16px;margin: 0 auto 0.01em auto;"><span style="font-size: 17px; ">作者名称：</span><a href="https://www.cnblogs.com/Can-daydayup/" target="_blank">追逐时光者</a></p>
<p style="font-family:YouYuan;font-size: 16px;margin: 0 auto 0.01em auto;"><span style="font-size: 17px; ">作者简介：</span>一个热爱编程、善于分享、喜欢学习、探索、尝试新事物和新技术的全栈软件工程师。</p>
<p style="font-family:YouYuan;font-size: 16px;margin: 0 auto 0.01em auto;">
本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文链接，否则保留追究法律责任的权利。如果该篇文章对您有帮助的话，可以点一下右下角的<a onclick="votePost(cb_entryId,'Digg')" href="javascript:void(0)" style="color:red;">【♥推荐♥】</a>，希望能够持续的为大家带来好的技术文章，文中可能存在描述不正确的地方，欢迎指正或补充，不胜感激。
</p>
</blockquote>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.029265394983796298" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-24 08:19">2025-01-24 08:19</span>&nbsp;
<a href="https://www.cnblogs.com/Can-daydayup">追逐时光者</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18687025" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18687025);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18687025', targetLink: 'https://www.cnblogs.com/Can-daydayup/p/18687025', title: 'C# as 和 is 运算符区别和用法' })">举报</a>
</div>
        