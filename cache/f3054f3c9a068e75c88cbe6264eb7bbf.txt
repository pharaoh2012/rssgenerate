
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/noear/p/18901214" title="发布于 2025-05-28 20:15">
    <span role="heading" aria-level="2">启用 Java AOT 编译打包 Solon 项目（Solon AOT）</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        本文介绍了Java的AOT（提前编译）与Solon AOT增强模式。Solon AOT在打包时通过动态代理生成具体类，需Java 17+环境，并通过solon-maven-plugin自动完成编译-收集-打包流程。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h3 id="1java-的-aotahead-of-time">1、Java 的 AOT（Ahead-Of-Time）</h3>
<p>AOT（Ahead-Of-Time）编译是与 JIT（Just-In-Time）相对的一种编译方式。<br>
在 AOT 模式下，Java 字节码（Bytecode）在程序运行之前，就被提前编译为目标平台的本地机器代码。</p>
<h3 id="2solon-aot">2、Solon AOT</h3>
<p>Solon AOT 是 Java AOT 的增强模式。可借助容器在运行时收集相关的类信息，然后在打包时为有 “动态代理需求的类” 生成对应具体类（类名风格，Xxx$$SolonAotProxy.class）。</p>
<p>使用条件要求：</p>
<ul>
<li>使用 solon-maven-plugin 打包方式</li>
<li>要求 java 17+ （java 17 后才支持 AOT）</li>
</ul>
<p>大概的构建过程（过程为自动）：</p>
<pre><code>编译（生成 .class 文件） -&gt; Solon AOT（运行-&gt;收集-&gt;生成补充的 .class 文件） -&gt; 打包
</code></pre>
<h3 id="3使用-solon-parent">3、使用 solon-parent</h3>
<pre><code class="language-xml">&lt;parent&gt;
    &lt;groupId&gt;org.noear&lt;/groupId&gt;
    &lt;artifactId&gt;solon-parent&lt;/artifactId&gt;
    &lt;version&gt;最新版本&lt;/version&gt;
&lt;/parent&gt;
</code></pre>
<p>以 maven 打包为例，启用配置文件 native（会自动启用一批配置），然后使用 maven 的 pakage 命令即可。</p>
<p>补充说明：</p>
<ul>
<li>使用 maven:pakage 打包，会使用 AOT 编译，生成常规的 jar 包</li>
<li>使用 graalvm:native:build 打包，会使用 AOT 编译，且生成 graalvm image （具体参考专题资料）</li>
</ul>
<img src="https://solon.noear.org/img/d69236ae829149c880a553f348a48291.png" width="400">
<h3 id="4如果没有使用-solon-parent">4、如果没有使用 solon-parent</h3>
<p>以 maven 打包为例，在 pom.xml 手动添加一个 native profile（名字便取，叫 AOT 也挺好的）。之后，参考上面的说明。</p>
<pre><code class="language-xml">&lt;profiles&gt;
    &lt;profile&gt;
        &lt;id&gt;native&lt;/id&gt;
        &lt;build&gt;
            &lt;plugins&gt;
                &lt;plugin&gt;
                    &lt;groupId&gt;org.noear&lt;/groupId&gt;
                    &lt;artifactId&gt;solon-maven-plugin&lt;/artifactId&gt;
                    &lt;version&gt;${solon.version}&lt;/version&gt;
                    &lt;executions&gt;
                        &lt;execution&gt;
                            &lt;id&gt;process-aot&lt;/id&gt;
                            &lt;goals&gt;
                                &lt;goal&gt;process-aot&lt;/goal&gt;
                            &lt;/goals&gt;
                        &lt;/execution&gt;
                    &lt;/executions&gt;
                &lt;/plugin&gt;
            &lt;/plugins&gt;
        &lt;/build&gt;
        &lt;dependencies&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;org.noear&lt;/groupId&gt;
                &lt;artifactId&gt;solon-aot&lt;/artifactId&gt;
            &lt;/dependency&gt;
        &lt;/dependencies&gt;
    &lt;/profile&gt;
&lt;/profiles&gt;
</code></pre>
<p>配置内容说明：</p>
<ul>
<li><code>org.noear:solon-aot</code> 依赖包，封装了 aot 的关键工作：收集类信息，生成补充类</li>
<li><code>solon-maven-plugin:process-aot</code> 则是关联编译行为，在编译后，再进行 Solon AOT  二次编译</li>
</ul>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.010789288142361112" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-28 20:15">2025-05-28 20:15</span>&nbsp;
<a href="https://www.cnblogs.com/noear">带刺的坐椅</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18901214);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18901214', targetLink: 'https://www.cnblogs.com/noear/p/18901214', title: '启用 Java AOT 编译打包 Solon 项目（Solon AOT）' })">举报</a>
</div>
        