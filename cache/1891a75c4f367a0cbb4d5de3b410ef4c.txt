
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/fanfanfanlichun/p/18898883" title="发布于 2025-05-28 16:28">
    <span role="heading" aria-level="2">重磅开源 基于AI大语言模型的AI 助手全套开源解决方案 AI开源平台</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h1>介绍</h1>
<ul>
<li>GeekAI 基于AI大语言模型的AI 助手全套开源解决方案，自带运营管理后台，开箱即用。集成了 OpenAI, Claude, 通义千问，Kimi，DeepSeek等多个平台的大语言模型。&nbsp;</li>
<li>基于极客学长大佬的开源项目geekai 二次开发而来。首先感谢大佬的开源，致敬。大佬的项目地址：<a href="https://gitee.com/blackfox/geekai" rel="noopener nofollow">https://gitee.com/blackfox/geekai</a></li>
<li>我就是把前台页面修改了下，后端go语言我换成了python语言。</li>
<li>后端go web框架gin 我换成了python web框架Django。</li>
<li>我只是修改了大佬的一部分功能。</li>
<li>我这个是基于geekai v4.0.5版本二次开发的。</li>
<li>哈哈 bug比较多，本着学习的目的。欢迎大家可以一起交流，学习。</li>
</ul>
<p>&nbsp;</p>
<h1>软件架构</h1>
<ul>
<li>
<p>前端：Vue3 + element-plus</p>
</li>
<li>
<p>后端：python3.11 + django</p>
</li>
<li>
<p>mysql: 8.0</p>
</li>
<li>
<p>redis: 6</p>
</li>
<li>
<p>daphne: 4.1.2</p>
</li>
<li>
<p>channels: 4.1.0</p>
</li>
<li>
<p>celery: 5.4.0</p>
</li>
<li>
<p>邮件服务，邮箱登录需要用到，也可不用</p>
</li>
<li>
<p>短信服务，短信登录需要用到，也可不用</p>
</li>
<li>
<p>支付宝支付(企业用户)，也可不用</p>
</li>
<li>
<p>微信支付(企业用户)，也可不用</p>
</li>
</ul>
<p>&nbsp;</p>
<h1>安装后端</h1>
<p>1，先安装python3.11</p>
<p>因为python3.11 不能yum安装，所以咱们就编译安装</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)"># 先安装依赖

</span><span style="color: rgba(0, 0, 255, 1)">yum</span> groupinstall <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Development Tools</span><span style="color: rgba(128, 0, 0, 1)">"</span>
<span style="color: rgba(0, 0, 255, 1)">yum</span> <span style="color: rgba(0, 0, 255, 1)">install</span> zlib-devel <span style="color: rgba(0, 0, 255, 1)">bzip2</span>-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel libffi-<span style="color: rgba(0, 0, 0, 1)">devel

# 下载软件包
</span><span style="color: rgba(0, 0, 255, 1)">wget</span> https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">mirrors.aliyun.com/python-release/source/Python-3.11.0.tgz</span>
<span style="color: rgba(0, 0, 255, 1)">tar</span> xf Python-<span style="color: rgba(128, 0, 128, 1)">3.11</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">.tgz
cd Python</span>-<span style="color: rgba(128, 0, 128, 1)">3.11</span>.<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">

# 编译安装
.</span>/<span style="color: rgba(0, 0, 0, 1)">configure
</span><span style="color: rgba(0, 0, 255, 1)">make</span>
<span style="color: rgba(0, 0, 255, 1)">make</span><span style="color: rgba(0, 0, 0, 1)"> altinstall       # altinstall 为了不影响系统python，这样两个python都会同时存在

# 新建env环境，这样就可以每一个项目都有自己的环境，不会影响到其他的项目
python3.</span><span style="color: rgba(128, 0, 128, 1)">11</span> -m venv py311-geekai-<span style="color: rgba(0, 0, 0, 1)">django
source </span>/root/flc-code/py-all-<span style="color: rgba(0, 0, 255, 1)">env</span>/py311-geekai-django/bin/<span style="color: rgba(0, 0, 0, 1)">activate

# 如果退出虚拟环境就是    deactivate

# 这样python3.</span><span style="color: rgba(128, 0, 128, 1)">11</span> 就安装好了</pre>
</div>
<p>&nbsp;</p>
<p>2，安装一些系统依赖包</p>
<div class="cnblogs_code">
<pre># 需要安装mysql-<span style="color: rgba(0, 0, 0, 1)">devel，因为mysqlclient需要用到
</span><span style="color: rgba(0, 0, 255, 1)">wget</span> https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm</span>
rpm -ivh mysql80-community-release-el7-<span style="color: rgba(128, 0, 128, 1)">3</span><span style="color: rgba(0, 0, 0, 1)">.noarch.rpm
rpm </span>--import https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">repo.mysql.com/RPM-GPG-KEY-mysql</span>
<span style="color: rgba(0, 0, 255, 1)">yum</span> <span style="color: rgba(0, 0, 255, 1)">install</span> mysql-devel --nogpgcheck -y</pre>
</div>
<p>&nbsp;</p>
<p>3，安装项目依赖</p>
<div class="cnblogs_code">
<pre># 我直接用的豆瓣源 加速安装，国内比较慢<br>cd backend/<span style="color: rgba(0, 0, 0, 1)">
pip </span><span style="color: rgba(0, 0, 255, 1)">install</span> -r requirements.txt -i https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">pypi.doubanio.com/simple</span></pre>
</div>
<p>&nbsp;</p>
<p>4，修改配置</p>
<p>Django的配置文件在项目的settings.py文件。vim backend/ChatgptServer/settings.py</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)"># mysql 配置
DATABASES </span>=<span style="color: rgba(0, 0, 0, 1)"> {
    </span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">default</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">: {
        </span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">ENGINE</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">django.db.backends.mysql</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">,
        </span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">NAME</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">chat_gpt_test</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">,
        </span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">USER</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">root</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">,
        </span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">PASSWORD</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">12345678</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">,
        </span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">HOST</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">10.8.100.113</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">,
        </span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">PORT</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">3306</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">,
        </span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">OPTIONS</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">: {
            # </span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">init_command</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">SET sql_mode='STRICT_TRANS_TABLES', time_zone = '+08:00'</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
            </span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">init_command</span><span style="color: rgba(128, 0, 0, 1)">'</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">SET sql_mode='STRICT_TRANS_TABLES'</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
        },
    }
}</span></pre>
</div>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)"># websock 配置
ASGI_APPLICATION </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">ChatgptServer.asgi.application</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
CHANNEL_LAYERS </span>=<span style="color: rgba(0, 0, 0, 1)"> {
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">default</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
        </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">BACKEND</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">channels_redis.core.RedisChannelLayer</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
        </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">CONFIG</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
            </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">hosts</span><span style="color: rgba(128, 0, 0, 1)">"</span>: [(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">redis://:Tedur3Ed6iOsPCLk@192.168.191.125:6379</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)],
        },
    },
}</span></pre>
</div>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)"># 阿里云短信服务
ALI_SMS_CONF </span>=<span style="color: rgba(0, 0, 0, 1)"> {
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">AccessKey</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">LTAI5t7AkjSECLU6Bidsadehxsn</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">AccessSecret</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">fTLDxVwSeydsadsafxjARJM2r53aq</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">SignName</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">ai系统</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">TemplateCode</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">SMS_471500265</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
}</span></pre>
</div>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)"># 异步任务配置 celery
CELERY_BROKER_URL </span>= <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">redis://:Tedur3Ed6iOsPCLk@192.168.191.125:6379/2</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">  # 使用 Redis 作为消息队列
CELERY_RESULT_BACKEND </span>= <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">redis://:Tedur3Ed6iOsPCLk@192.168.191.125:6379/2</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">
CELERY_TIMEZONE </span>= <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Asia/Shanghai</span><span style="color: rgba(128, 0, 0, 1)">'</span></pre>
</div>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)"># 微信支付
WECHAT_PAY_CONFIG </span>=<span style="color: rgba(0, 0, 0, 1)"> {
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Enabled</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: True,
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">AppId</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">wx3614dsadfq399975</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,    # AppId
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">MchId</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">15512441</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,    # 商户ID
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">SerialNo</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">1D1061712edeasd2410D8E6DE8D1446644</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, # API 证书序列号
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">PrivateKey</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">cert/apiclient_key.pem</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, # 将私钥拷贝到对应的目录
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">ApiV3Key</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">kXnZPHg2Z213fdscsdcKeFbjG</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, # APIv3密钥
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">NotifyURL</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">https://cs.dnzx.com/api/payment/wechat/notify</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, # 支付回调地址
    # </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">NotifyURL</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">https://dev.dnzx.com/api/payment/wechat/notify</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, # 支付回调地址
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">ReturnURL</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">""</span><span style="color: rgba(0, 0, 0, 1)">
}</span></pre>
</div>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)"># 支付宝配置
ALI_PAY_CONFIG </span>=<span style="color: rgba(0, 0, 0, 1)"> {
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Enabled</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)"> : True, # 启用支付宝支付通道,
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">UserId</span><span style="color: rgba(128, 0, 0, 1)">"</span> : <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">208872102132481</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, # 商户ID
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">AppId</span><span style="color: rgba(128, 0, 0, 1)">"</span> : <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">202143141238058</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, # App Id2021004198638058
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">PrivateKey</span><span style="color: rgba(128, 0, 0, 1)">"</span> : <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">cert/alipay/app_private_key_test.pem</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">PublicKey</span><span style="color: rgba(128, 0, 0, 1)">"</span> : <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">cert/alipay/alipay_public_key_test.pem</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">NotifyURL</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">https://cs.dnzx.com/api/payment/wechat/notify</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, # 支付回调地址
    # </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">NotifyURL</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">https://dev.dnzx.com/api/payment/alipay/notify</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, # 支付回调地址
}</span></pre>
</div>
<p>&nbsp;</p>
<p>5，迁移数据库</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">python manage.py makemigrations
python manage.py migrate</span></pre>
</div>
<p>&nbsp;</p>
<p>6，初始化mysql数据</p>
<div class="cnblogs_code">
<pre># 初始化数据在backend/init-<span style="color: rgba(0, 0, 0, 1)">sql.sql里面
# 连接数据库 执行sql就行
# 后台管理的密码是admin</span>/<span style="color: rgba(128, 0, 128, 1)">12345678</span></pre>
</div>
<p>&nbsp;</p>
<p>7，启动后端程序</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)"># 启动asgi服务
daphne ChatgptServer.asgi:application </span>-b <span style="color: rgba(128, 0, 128, 1)">0.0</span>.<span style="color: rgba(128, 0, 128, 1)">0.0</span> -p <span style="color: rgba(128, 0, 128, 1)">8080</span><span style="color: rgba(0, 0, 0, 1)">

# 启动异步任务<br># 这个是为了 dell画图用的，因为画图使用了异步任务。画图时间会比较慢
celery </span>-A CeleryProject worker --loglevel=INFO</pre>
</div>
<p>这样咱们的后端程序 就启动起来了，正常应该没有啥问题，有问题可以关注我的仓库提交问题。或者关注我的公众号私信我。</p>
<p>&nbsp;</p>
<h1>安装前端</h1>
<p>1，安装node v16.5</p>
<p>咱们使用nvm管理多个版本的node</p>
<p>国内使用github安装nvm比较慢，咱们之间使用gitee大佬的项目：nvm-cn</p>
<div class="cnblogs_code">
<pre>bash -c <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">$(curl -fsSL https://gitee.com/RubyMetric/nvm-cn/raw/main/install.sh)</span><span style="color: rgba(128, 0, 0, 1)">"<br><br># 这样就安装好了nvm<br># 咱们再安装node<br>nvm install v16.5.0<br></span></pre>
</div>
<p>&nbsp;</p>
<p>2，安装依赖</p>
<div class="cnblogs_code">
<pre>cd frontend/<span style="color: rgba(0, 0, 0, 1)">web

# 咱们在安装nvm</span>-<span style="color: rgba(0, 0, 0, 1)">cn的时候，这个项目就直接把国内源给配置好了，安装应该会很快
npm </span><span style="color: rgba(0, 0, 255, 1)">install</span></pre>
</div>
<p>&nbsp;</p>
<p>3，修改配置</p>
<div class="cnblogs_code">
<pre>vim frontend/web/.<span style="color: rgba(0, 0, 255, 1)">env</span><span style="color: rgba(0, 0, 0, 1)">.development
<br># api接口
VUE_APP_API_HOST</span>=http:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">10.8.100.113:8080</span>
<br># websocket地址<br>VUE_APP_WS_HOST=ws:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">10.8.100.113:8080</span>
<span style="color: rgba(0, 0, 0, 1)">
# 网站前缀<br>VUE_APP_KEY_PREFIX</span>=<span style="color: rgba(0, 0, 0, 1)">ChatPLUS_DEV_
VUE_APP_TITLE</span>=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Chatgpt</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
VUE_APP_VERSION</span>=v1.<span style="color: rgba(128, 0, 128, 1)">0.0</span></pre>
</div>
<p>&nbsp;</p>
<p>4，启动服务</p>
<div class="cnblogs_code">
<pre>npm run dev</pre>
</div>
<p>&nbsp;</p>
<p>5，访问服务</p>
<div class="cnblogs_code">
<pre>http:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">ip:8888</span>
<span style="color: rgba(0, 0, 0, 1)">
# 后端地址
http:</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">ip:8888/admin</span>
<span style="color: rgba(0, 0, 0, 1)">
# 账号密码
admin</span>/<span style="color: rgba(128, 0, 128, 1)">12345678</span></pre>
</div>
<p>&nbsp;</p>
<h1>Docker安装</h1>
<h2>安装docker</h2>
<p>咱们就使用阿里云的centos7安装办法</p>
<div class="cnblogs_code">
<pre># step <span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">: 安装必要的一些系统工具
</span><span style="color: rgba(0, 0, 255, 1)">sudo</span> <span style="color: rgba(0, 0, 255, 1)">yum</span> <span style="color: rgba(0, 0, 255, 1)">install</span> -y <span style="color: rgba(0, 0, 255, 1)">yum</span>-<span style="color: rgba(0, 0, 0, 1)">utils

# Step </span><span style="color: rgba(128, 0, 128, 1)">2</span><span style="color: rgba(0, 0, 0, 1)">: 添加软件源信息
</span><span style="color: rgba(0, 0, 255, 1)">yum</span>-config-manager --add-repo https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span>
<span style="color: rgba(0, 0, 0, 1)">
# Step </span><span style="color: rgba(128, 0, 128, 1)">3</span><span style="color: rgba(0, 0, 0, 1)">: 安装Docker
</span><span style="color: rgba(0, 0, 255, 1)">sudo</span> <span style="color: rgba(0, 0, 255, 1)">yum</span> <span style="color: rgba(0, 0, 255, 1)">install</span> docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-<span style="color: rgba(0, 0, 0, 1)">plugin

# Step </span><span style="color: rgba(128, 0, 128, 1)">4</span><span style="color: rgba(0, 0, 0, 1)">: 开启Docker服务
</span><span style="color: rgba(0, 0, 255, 1)">sudo</span><span style="color: rgba(0, 0, 0, 1)"> service docker start

# 注意：
# 官方软件源默认启用了最新的软件，您可以通过编辑软件源的方式获取各个版本的软件包。例如官方并没有将测试版本的软件源置为可用，您可以通过以下方式开启。同理可以开启各种测试版本等。
# vim </span>/etc/<span style="color: rgba(0, 0, 255, 1)">yum</span>.repos.d/docker-<span style="color: rgba(0, 0, 0, 1)">ce.repo
#   将[docker</span>-ce-test]下方的enabled=0修改为enabled=<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">
#
# 安装指定版本的Docker</span>-<span style="color: rgba(0, 0, 0, 1)">CE:
# Step </span><span style="color: rgba(128, 0, 128, 1)">1</span>: 查找Docker-<span style="color: rgba(0, 0, 0, 1)">CE的版本:
# </span><span style="color: rgba(0, 0, 255, 1)">yum</span> list docker-ce.x86_64 --showduplicates | <span style="color: rgba(0, 0, 255, 1)">sort</span> -<span style="color: rgba(0, 0, 0, 1)">r
#   Loading mirror speeds from cached hostfile
#   Loaded plugins: branch, fastestmirror, langpacks
#   docker</span>-ce.x86_64            <span style="color: rgba(128, 0, 128, 1)">17.03</span>.<span style="color: rgba(128, 0, 128, 1)">1</span>.ce-<span style="color: rgba(128, 0, 128, 1)">1</span>.el7.centos            docker-ce-<span style="color: rgba(0, 0, 0, 1)">stable
#   docker</span>-ce.x86_64            <span style="color: rgba(128, 0, 128, 1)">17.03</span>.<span style="color: rgba(128, 0, 128, 1)">1</span>.ce-<span style="color: rgba(128, 0, 128, 1)">1</span>.el7.centos            @docker-ce-<span style="color: rgba(0, 0, 0, 1)">stable
#   docker</span>-ce.x86_64            <span style="color: rgba(128, 0, 128, 1)">17.03</span>.<span style="color: rgba(128, 0, 128, 1)">0</span>.ce-<span style="color: rgba(128, 0, 128, 1)">1</span>.el7.centos            docker-ce-<span style="color: rgba(0, 0, 0, 1)">stable
#   Available Packages
# Step2: 安装指定版本的Docker</span>-CE: (VERSION例如上面的17.<span style="color: rgba(128, 0, 128, 1)">03.0</span>.ce.<span style="color: rgba(128, 0, 128, 1)">1</span>-<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">.el7.centos)
# </span><span style="color: rgba(0, 0, 255, 1)">sudo</span> <span style="color: rgba(0, 0, 255, 1)">yum</span> -y <span style="color: rgba(0, 0, 255, 1)">install</span> docker-ce-[VERSION]</pre>
</div>
<p>&nbsp;</p>
<h2>后端</h2>
<div class="cnblogs_code">
<pre># 后端dockerfile在 backend下面的Dockerfile文件<br>cd backend<br><br>docker build <span class="nt">-t geekai-django:v1 <span class="nb">.<br><br></span></span># 然后就会出现镜像<span class="nt">geekai-django:v1</span></pre>
</div>
<p>&nbsp;</p>
<pre>Dockerfile文件内容</pre>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 128, 1)">FROM</span> python:3.11<span style="color: rgba(0, 0, 0, 1)">-slim-bullseye


</span><span style="color: rgba(0, 128, 128, 1)">ARG</span> APT_MIRROR=https://mirrors.aliyun.com
<span style="color: rgba(0, 128, 128, 1)">RUN</span><span style="color: rgba(0, 0, 0, 1)"> --mount=type=cache,target=/var/cache/apt,sharing=locked,id=core-apt \
    --mount=type=cache,target=/var/lib/apt,sharing=locked,id=core-apt \
    sed -i </span>"s@http://.*.debian.org@${APT_MIRROR}@g"<span style="color: rgba(0, 0, 0, 1)"> /etc/apt/sources.list \
    &amp;&amp; rm -f /etc/apt/apt.conf.d/docker-clean \
    &amp;&amp; ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \
    &amp;&amp; apt-get update \
    &amp;&amp; apt-get -y install --no-install-recommends pkg-config \
                                                  default-libmysqlclient-dev \
                                                  default-mysql-client \
                                                  gcc


# 设置环境变量
</span><span style="color: rgba(0, 128, 128, 1)">ENV</span> PYTHONDONTWRITEBYTECODE 1
<span style="color: rgba(0, 128, 128, 1)">ENV</span> PYTHONUNBUFFERED 1<span style="color: rgba(0, 0, 0, 1)">


# 创建工作目录
</span><span style="color: rgba(0, 128, 128, 1)">WORKDIR</span><span style="color: rgba(0, 0, 0, 1)"> /app


# 安装依赖
</span><span style="color: rgba(0, 128, 128, 1)">COPY</span><span style="color: rgba(0, 0, 0, 1)"> requirements.txt /app/
</span><span style="color: rgba(0, 128, 128, 1)">RUN</span><span style="color: rgba(0, 0, 0, 1)"> pip install --upgrade pip &amp;&amp; pip install -r requirements.txt -i https://pypi.doubanio.com/simple

# 拷贝项目
</span><span style="color: rgba(0, 128, 128, 1)">COPY</span> . /app/</pre>
</div>
<p>&nbsp;</p>
<h2>前端</h2>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)"># 前端的Dockerfile在frontend下面
cd frontend

# 然后执行脚本build</span>-images.<span style="color: rgba(0, 0, 255, 1)">sh</span><span style="color: rgba(0, 0, 0, 1)">
# 你需要修改脚本里面的镜像名称啥的</span></pre>
</div>
<p>&nbsp;</p>
<p>dockerfile文件</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)"># 前端 Vue 项目构建
# 其实编译完后 就是一个dist目录
# 咱们把目录放到nginx下面就行
</span><span style="color: rgba(0, 128, 128, 1)">FROM</span> registry.cn-beijing.aliyuncs.com/fanlichun/tedu-chat-web:nginx-1.20.2

<span style="color: rgba(0, 128, 128, 1)">WORKDIR</span><span style="color: rgba(0, 0, 0, 1)"> /var/www/app
</span><span style="color: rgba(0, 128, 128, 1)">COPY</span><span style="color: rgba(0, 0, 0, 1)"> ./web/dist /var/www/app/dist

</span><span style="color: rgba(0, 128, 128, 1)">EXPOSE</span> 80
<span style="color: rgba(0, 128, 128, 1)">EXPOSE</span> 443</pre>
</div>
<p>&nbsp;</p>
<h2>启动</h2>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)"># 关于启动的话，可以直接docker一个一个的启动
# 我这里提供docker</span>-compose.yml文件启动<br># 文件：backend/deploy/docker-compose.yml<br># 你需要去修改yml文件里面的地址 以及新建一些目录<br><br># 然后咱们就可以启动了<br>docker compose up -d</pre>
</div>
<p>&nbsp;</p>
<pre>docker-compose.yml文件</pre>
<div class="cnblogs_code">
<pre>version: <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">3.11</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">
 
services:
  api:
    image: teduchat</span>-api:v1.<span style="color: rgba(128, 0, 128, 1)">0.2</span><span style="color: rgba(0, 0, 0, 1)">
    container_name: teduchat</span>-<span style="color: rgba(0, 0, 0, 1)">api
    restart: always
    command: daphne ChatgptServer.asgi:application </span>-b <span style="color: rgba(128, 0, 128, 1)">0.0</span>.<span style="color: rgba(128, 0, 128, 1)">0.0</span> -p <span style="color: rgba(128, 0, 128, 1)">8080</span><span style="color: rgba(0, 0, 0, 1)">
    ports:
      </span>- <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">8080:8080</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
    volumes:
      </span>- /usr/share/zoneinfo/Asia/Shanghai:/etc/<span style="color: rgba(0, 0, 0, 1)">localtime
      </span>- /data/teduchat-api/media:/app/<span style="color: rgba(0, 0, 0, 1)">media
      </span>- /data/teduchat-api/wechatpay-logs:/app/<span style="color: rgba(0, 0, 0, 1)">logs
      </span>- /data/teduchat-api/wechatpay-cert:/app/<span style="color: rgba(0, 0, 0, 1)">cert


  task:
    image: teduchat</span>-api:v1.<span style="color: rgba(128, 0, 128, 1)">0.2</span><span style="color: rgba(0, 0, 0, 1)">
    container_name: teduchat</span>-<span style="color: rgba(0, 0, 0, 1)">task
    restart: always
    command: celery </span>-A CeleryProject worker --loglevel=<span style="color: rgba(0, 0, 0, 1)">INFO
    volumes:
      </span>- /usr/share/zoneinfo/Asia/Shanghai:/etc/<span style="color: rgba(0, 0, 0, 1)">localtime
      </span>- /data/teduchat-api/media:/app/<span style="color: rgba(0, 0, 0, 1)">media
 

  web:
    image: teduchat</span>-web:v1.<span style="color: rgba(128, 0, 128, 1)">0.2</span><span style="color: rgba(0, 0, 0, 1)">
    container_name: teduchat</span>-<span style="color: rgba(0, 0, 0, 1)">web
    ports:
      </span>- <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">80:80</span><span style="color: rgba(128, 0, 0, 1)">"</span>
      - <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">443:443</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
    volumes:
      </span>- /usr/share/zoneinfo/Asia/Shanghai:/etc/<span style="color: rgba(0, 0, 0, 1)">localtime
      </span>- /data/teduchat-web/nginx/conf/conf.d:/etc/nginx/<span style="color: rgba(0, 0, 0, 1)">conf.d
      </span>- /data/teduchat-web/nginx/conf/nginx.conf:/etc/nginx/<span style="color: rgba(0, 0, 0, 1)">nginx.conf
      </span>- /data/teduchat-web/nginx/logs:/var/log/<span style="color: rgba(0, 0, 0, 1)">nginx
      </span>- /data/teduchat-web/nginx/conf/ssl:/etc/nginx/<span style="color: rgba(0, 0, 0, 1)">ssl
      </span>- /data/teduchat-api/media:/var/www/app/media</pre>
</div>
<p>&nbsp;</p>
<h1>Q&amp;A</h1>
<p>1，关于OpenAI的模型</p>
<p>这个需要大家去找代理，进行访问。因为国内访问不了api</p>
<p>&nbsp;</p>
<p>2，关于国内的模型</p>
<p>国内的模型，只要支持openai 的 SDK就可以在这个平台添加使用。</p>
<p>因为我这里直接用的openai 模块。没有用各大厂商的api。</p>
<p>&nbsp;</p>
<p>3，关于一些bug</p>
<p>因为我是本着学习的目的去改写的，所以存在很多bug。</p>
<p>但是大家可以一起交流，学习。</p>
<p>&nbsp;</p>
<p>4，关于问题</p>
<p>可以提交仓库的lssues。或者关注我的公众号私信我</p>
<p>&nbsp;</p>
<h1>我的公众号</h1>
<p><img src="https://img2024.cnblogs.com/blog/1257808/202505/1257808-20250528140400648-709428030.jpg" alt="" width="178" height="178"></p>
<p>&nbsp;</p>
<h1>项目地址</h1>
<ul>
<li>码云地址：<a href="https://gitee.com/ccsang/geekai-django" rel="noopener nofollow">https://gitee.com/ccsang/geekai-django</a></li>
</ul>
<p>&nbsp;</p>
<h1>我的博客圆</h1>
<ul>
<li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.cnblogs.com%2Ffanfanfanlichun" rel="noopener nofollow" target="_blank">https://www.cnblogs.com/fanfanfanlichun</a></li>
</ul>
<p>&nbsp;</p>
<h1>我的开源项目</h1>
<ol>
<li>
<p>微信公众号自动发布文章，小绿书，自动发布热搜，利用AI自动发布种草小绿书&nbsp;&nbsp;<a href="https://gitee.com/ccsang/wxmp" rel="noopener nofollow">https://gitee.com/ccsang/wxmp</a></p>
</li>
<li>
<p>jumpserver二次开发，简易工单管理。node，mysql，redis申请权限&nbsp;&nbsp;<a href="https://gitee.com/ccsang/jumpserver-ticket" rel="noopener nofollow">https://gitee.com/ccsang/jumpserver-ticket</a></p>
</li>
</ol>
<p>&nbsp;</p>
<h1>平台截图展示</h1>
<p>首页</p>
<p><img src="https://img2024.cnblogs.com/blog/1257808/202505/1257808-20250528140646052-541905895.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1257808/202505/1257808-20250528140713373-632301666.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1257808/202505/1257808-20250528140722252-1851842551.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1257808/202505/1257808-20250528140730359-1802887490.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1257808/202505/1257808-20250528140737146-538873952.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1257808/202505/1257808-20250528140743661-294715615.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1257808/202505/1257808-20250528140750329-401247024.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1257808/202505/1257808-20250528140756728-570834736.png" alt=""></p>
<p>&nbsp;</p>
<p><img src="https://img2024.cnblogs.com/blog/1257808/202505/1257808-20250528140817517-2025890451.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1257808/202505/1257808-20250528140823923-831732018.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1257808/202505/1257808-20250528140831137-341310999.png" alt=""></p>
<p><img src="https://img2024.cnblogs.com/blog/1257808/202505/1257808-20250528140840933-818384640.png" alt=""></p>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.16860477039467592" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-28 16:28">2025-05-28 16:28</span>&nbsp;
<a href="https://www.cnblogs.com/fanfanfanlichun">春寒知冬冷</a>&nbsp;
阅读(<span id="post_view_count">41</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18898883);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18898883', targetLink: 'https://www.cnblogs.com/fanfanfanlichun/p/18898883', title: '重磅开源 基于AI大语言模型的AI 助手全套开源解决方案 AI开源平台' })">举报</a>
</div>
        