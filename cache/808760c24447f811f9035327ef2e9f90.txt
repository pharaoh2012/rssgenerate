
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/FreakEmbedded/p/18742422" title="发布于 2025-02-28 01:21">
    <span role="heading" aria-level="2">手把手教你用 MicroPython 玩转幻尔串口舵机，代码+教程全公开</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        <img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250228011836942-370888604.png" alt="手把手教你用 MicroPython 玩转幻尔串口舵机，代码+教程全公开" class="desc_img">
        MicroPython串口舵机库，支持幻尔科技全系列舵机，支持mpremote工具一键导入，28条指令全测试。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="原文链接">原文链接：</h2>
<p><a href="https://www.cnblogs.com/FreakEmbedded" target="_blank"><strong>FreakStudio的博客</strong></a></p>
<h2 id="摘要">摘要</h2>
<p>MicroPython串口舵机库，支持幻尔科技全系列舵机，支持mpremote工具一键导入，28条指令全测试。</p>
<h2 id="往期推荐">往期推荐：</h2>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzkwMTYzNTY3Ng==&amp;mid=2247483825&amp;idx=1&amp;sn=149aaf3baa6a96703713e554d4a888db&amp;chksm=c0b08a82f7c70394074a24b722a1caddb0ad598a7303e61133216ae61423df0b5bc57a6b82b2&amp;scene=21#wechat_redirect" title="**学嵌入式的你，还不会面向对象？？！**" target="_blank" rel="noopener nofollow"><strong>学嵌入式的你，还不会面向对象？？！</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/sycnlnMhtFji8q2fYh0MFQ" title="**全网最适合入门的面向对象编程教程：00 面向对象设计方法导论**" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：00 面向对象设计方法导论</strong></a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzkwMTYzNTY3Ng==&amp;mid=2247483853&amp;idx=1&amp;sn=c7685237216b8dd1cadf95f3353fde8e&amp;chksm=c0b08afef7c703e8ce7b76958718ebe381220a199fac9e872710ea1cb4f8fc6f93d36d151279&amp;scene=21#wechat_redirect" title="**全网最适合入门的面向对象编程教程：01 面向对象编程的基本概念**" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：01 面向对象编程的基本概念</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/XKpEAGY9WJ7GRFc98E6dcw" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：02 类和对象的 Python 实现-使用 Python 创建类</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/LsNtLbHLNtVBtiQ3eaJnSg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：03 类和对象的 Python 实现-为自定义类添加属性</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/A5rMO3ppTZTUwRPL2NQxdg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：04 类和对象的Python实现-为自定义类添加方法</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/YjM1JPzLakfyWiDkyy4LQw" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：05 类和对象的Python实现-PyCharm代码标签</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/z7CmgHJXf0QlAgIIRRTXlw" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：06 类和对象的Python实现-自定义类的数据封装</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/7r4hgM3a187si_D5ReEMCA" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：07 类和对象的Python实现-类型注解</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/sSO-L_NQHarXh160xiVZVg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：08 类和对象的Python实现-@property装饰器</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/cAZzXr9MSL0nVxVcTgNlQA" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：09 类和对象的Python实现-类之间的关系</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/29Lr_nigsMuIJMmWEObk1g" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：10 类和对象的Python实现-类的继承和里氏替换原则</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/HEvQNiVXkjlnbhz8Sdt_4Q" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：11 类和对象的Python实现-子类调用父类方法</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/QHYLu7Mrs2ErUHvy_k59QA" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：12 类和对象的Python实现-Python使用logging模块输出程序运行日志</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/EbJJpqIq8v_eRQZfdWONFA" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：13 类和对象的Python实现-可视化阅读代码神器Sourcetrail的安装使用</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/fLSGXknzwY8FHzavunfQXg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：全网最适合入门的面向对象编程教程：14 类和对象的Python实现-类的静态方法和类方法</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/fLSGXknzwY8FHzavunfQXg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：15 类和对象的 Python 实现-__slots__魔法方法</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/VNlMnPhSyglZ9FalqIfw-A" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：16 类和对象的Python实现-多态、方法重写与开闭原则</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/mffQ0sdsI5yt_tJrZRxe-g" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：17 类和对象的Python实现-鸭子类型与“file-like object“</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/JSIKlWJ4pNShBGkfXolkQg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：18 类和对象的Python实现-多重继承与PyQtGraph串口数据绘制曲线图</strong></a></p>
<p><a href="https://www.cnblogs.com/FreakEmbedded/p/18308599" target="_blank"><strong>全网最适合入门的面向对象编程教程：19 类和对象的 Python 实现-使用 PyCharm 自动生成文件注释和函数注释</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/_TuErM5YRBsy2wixYbbbkw" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：20 类和对象的Python实现-组合关系的实现与CSV文件保存</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/zqG3vuxVq0pmUqrV-tztng" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：21 类和对象的Python实现-多文件的组织：模块module和包package</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/Wj5ovLUWqKudW5VSiycK5A" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：22 类和对象的Python实现-异常和语法错误</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/o5cgglFtmr9q3lW5gAiYEg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：23 类和对象的Python实现-抛出异常</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/DPC8Drr6iCnC0j-YMGyOfg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：24 类和对象的Python实现-异常的捕获与处理</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/ghhS3fk98LTkh1a-daEg0Q" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：25 类和对象的Python实现-Python判断输入数据类型</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/LHj-igDSYaL_1z8H7VEj1Q" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：26 类和对象的Python实现-上下文管理器和with语句</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/tQ2NHEWCMI4e4AG5BBsSpw" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：27 类和对象的Python实现-Python中异常层级与自定义异常类的实现</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/rvHzNvuovU-3KY2FtcQK-Q" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：28 类和对象的Python实现-Python编程原则、哲学和规范大汇总</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/swfA2JsajMFpaOa5PZCEbg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：29 类和对象的Python实现-断言与防御性编程和help函数的使用</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/5NxKSJUxetAkdwYW9n941w" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：30 Python的内置数据类型-object根类</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/Z3AMqnfkmhqzcK3A-J3ylw" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：31 Python的内置数据类型-对象Object和类型Type</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/C4pj9ujGsQMMOnLEqI414A" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：32 Python的内置数据类型-类Class和实例Instance</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/V_3QFDJRss_lAJHgJ4oVwg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：33 Python的内置数据类型-对象Object和类型Type的关系</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/crZBcEEBKBfDfWA9ub-d-A" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：34 Python的内置数据类型-Python常用复合数据类型：元组和命名元组</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/_X7sKhro7wJ96KwhbAcopg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：35 Python的内置数据类型-文档字符串和__doc__属性</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/KCvCx7Im35uiBkPpJASTkg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：36 Python的内置数据类型-字典</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/bNSPkIhKgmzLFz5BYdizNQ" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：37 Python常用复合数据类型-列表和列表推导式</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/XgTr4hvBC4Uk2hPmaDRn2Q" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：38 Python常用复合数据类型-使用列表实现堆栈、队列和双端队列</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/Cx0--RZGrzud_aILXTlEJg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：39 Python常用复合数据类型-集合</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/bCxbepaVypefwEOtKnzb5g" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：40 Python常用复合数据类型-枚举和enum模块的使用</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/Ah-fhWf67Jm7TF-OGooy-g" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：41 Python常用复合数据类型-队列（FIFO、LIFO、优先级队列、双端队列和环形队列）</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/XkIocfNXpie-65voC4W8wA" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：42 Python常用复合数据类型-collections容器数据类型</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/ODYRdwzdlcBQkCE3xpYjIA" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：43 Python常用复合数据类型-扩展内置数据类型</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/DLylf2L_dpkcXYw6iFnhwA" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：44 Python内置函数与魔法方法-重写内置类型的魔法方法</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/AEyP4BfRGZB63akTgGLWZw" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：45 Python实现常见数据结构-链表、树、哈希表、图和堆</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/3COyHC1ob9xs_EUQtk7hCA" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：46 Python函数方法与接口-函数与事件驱动框架</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/wmc2ZcSC3l5JOLpMpthv6Q" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：47 Python函数方法与接口-回调函数Callback</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/MEvlZqaItRNwP4zRtMQHhQ" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：48 Python函数方法与接口-位置参数、默认参数、可变参数和关键字参数</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/qDQo9KxfGrTj5-FDo-MBiA" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：49 Python函数方法与接口-函数与方法的区别和lamda匿名函数</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/DwKug8eHOYyC2pE77eLw9w" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：50 Python函数方法与接口-接口和抽象基类</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/pDQWfDDh3WeCgjC5b5rP1Q" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：51 Python函数方法与接口-使用Zope实现接口</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/Wgqc8PbpMMf8pKFHo4H7PA" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：52 Python函数方法与接口-Protocol协议与接口</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/jvOLalgkUpxR7LGgQnJ9aQ" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：53 Python字符串与序列化-字符串与字符编码</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/z3JS3dcpPQTD9ygWyxRUDg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：54 Python字符串与序列化-字符串格式化与format方法</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/C0rgRhmC1ydh2PpEwAuMlw" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：55 Python字符串与序列化-字节序列类型和可变字节字符串</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/UmXPSAbrLvYyH-45kBHLZQ" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：56 Python字符串与序列化-正则表达式和re模块应用</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/-Y8DX8wo1OAhKkWK7dikzg" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：57 Python字符串与序列化-序列化与反序列化</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/BFTYNXXtXarbU70RvOs20Q" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：58 Python字符串与序列化-序列化Web对象的定义与实现</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/cgs1FP0bRMvqXv00J1AzkA" target="_blank" rel="noopener nofollow"><strong>全网最适合入门的面向对象编程教程：59 Python并行与并发-并行与并发和线程与进程</strong></a></p>
<h2 id="更多精彩内容可看">更多精彩内容可看：</h2>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzkwMTYzNTY3Ng==&amp;mid=2247483747&amp;idx=1&amp;sn=0e203586516fd6e925085b9c1244dbee&amp;scene=21#wechat_redirect" title="**给你的 Python 加加速：一文速通 Python 并行计算**" target="_blank" rel="noopener nofollow"><strong>给你的 Python 加加速：一文速通 Python 并行计算</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzkwMTYzNTY3Ng==&amp;mid=2247483719&amp;idx=1&amp;sn=7ece9da65d002fdc3df9539cc43f3a8d&amp;scene=21#wechat_redirect" title="**一文搞懂 CM3 单片机调试原理**" target="_blank" rel="noopener nofollow"><strong>一文搞懂 CM3 单片机调试原理</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzkwMTYzNTY3Ng==&amp;mid=2247483671&amp;idx=1&amp;sn=c267a0c6f4ab93d6b6d934bf803b5919&amp;scene=21#wechat_redirect" title="**肝了半个月，嵌入式技术栈大汇总出炉**" target="_blank" rel="noopener nofollow"><strong>肝了半个月，嵌入式技术栈大汇总出炉</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzkwMTYzNTY3Ng==&amp;mid=2247483774&amp;idx=1&amp;sn=46d57506febe92c1719c8567ebe95269&amp;scene=21#wechat_redirect" title="**电子计算机类比赛的“武林秘籍”**" target="_blank" rel="noopener nofollow"><strong>电子计算机类比赛的“武林秘籍”</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzkwMTYzNTY3Ng==&amp;mid=2247483854&amp;idx=1&amp;sn=fd666dc501a0de850abfbd8793abff00&amp;chksm=c0b08afdf7c703eb494f8e402a5d60eba9a802bfdb02c07a5e1666a8a1b335e38240adc6c1b5&amp;scene=21#wechat_redirect" title="**一个MicroPython的开源项目集锦：awesome-micropython，包含各个方面的Micropython工具库**" target="_blank" rel="noopener nofollow"><strong>一个MicroPython的开源项目集锦：awesome-micropython，包含各个方面的Micropython工具库</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/2-Z6WqekVOuDbEdiE65Wfw" target="_blank" rel="noopener nofollow"><strong>Avnet ZUBoard 1CG开发板—深度学习新选择</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/WrFVqS2-s1g6RYNd_Q5CDA" target="_blank" rel="noopener nofollow"><strong>工程师不要迷信开源代码，还要注重基本功</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/FUzf9kAHABNfo2aZh1jHzA" target="_blank" rel="noopener nofollow"><strong>什么？配色个性化的电机驱动模块？！！</strong></a></p>
<p><a href="https://mp.weixin.qq.com/s/TNsGwgi0pdE9v-tY4FZu6w" target="_blank" rel="noopener nofollow"><strong>什么？XIAO主控新出三款扩展板!</strong></a></p>
<h1 id="1原先库存在的问题">1.原先库存在的问题</h1>
<p><img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250228010648632-1913003454.png" alt="image" loading="lazy"></p>
<p>这里，我们看厂家提供的MicroPython库中代码：</p>
<p><img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250228005026369-1415569734.png" alt="image" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250228005030294-2123598633.png" alt="image" loading="lazy"></p>
<p>实际上，并没有很好的实现功能解耦和充分利用Python面向对象的特性。<br>
可以看到，多个方法中间存在重复的收发逻辑：<br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250228005401897-799101171.png" alt="image" loading="lazy"><br>
同时，UART 波特率（115200）、超时时间（50ms）等硬编码在代码中，而非可配置：<br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250228005427173-1293099974.png" alt="image" loading="lazy"><br>
并且，无 API 文档和示例代码，不利于用户快速上手，也缺乏必要的入口参数校验机制，如判断舵机ID、角度范围、速度范围是否合理：<br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250228005451258-291485341.png" alt="image" loading="lazy"></p>
<p>因此，我决定自己写一个MicroPython版本的幻尔科技串口舵机库。<br>
仓库地址为：<br>
<a href="https://github.com/leezisheng/freakstudio-micropython-libraries/tree/main/serial_servo" title="Freak嵌入式-MicroPython串口舵机库" target="_blank" rel="noopener nofollow"><strong>Freak嵌入式-MicroPython串口舵机库</strong></a></p>
<p>我也将其发布到了PyPi上（虽然不适合发布到上面，只是方便后期讲解Python发布第三方库）：<br>
<a href="https://github.com/leezisheng/freakstudio-micropython-libraries/tree/main/serial_servo" title="Freak嵌入式-MicroPython串口舵机库" target="_blank" rel="noopener nofollow"><strong>Freak嵌入式-MicroPython串口舵机库-PyPi</strong></a><br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250228005654822-1931577709.png" alt="image" loading="lazy"></p>
<h1 id="2serial_servo库介绍">2.serial_servo库介绍</h1>
<h2 id="21-简介与主要特性">2.1 简介与主要特性</h2>
<p>通过串口舵机库，用户可以控制多个舵机的角度、速度等参数，实现高效、灵活的舵机控制，程序中使用了串口通讯与舵机进行数据交互，提供了完整的控制命令和反馈解析功能。</p>
<p>推荐大家使用我们的串口舵机扩展板，感谢支持：<br>
<a href="https://oshwhub.com/freakstudio/chuan-kou-duo-ji-qu-dong-ban-zhuan-ye-ban" title="Freak嵌入式-多米诺系列-串口舵机驱动板" target="_blank" rel="noopener nofollow"><strong>Freak嵌入式-多米诺系列-串口舵机驱动板</strong></a><br>
主要特性包括：</p>
<ul>
<li>使用UART串口与舵机通信，支持多舵机控制。</li>
<li>支持舵机的角度、速度、工作模式等多种设置。</li>
<li>支持舵机温度、电压、角度等实时读取。</li>
<li>校验和机制确保数据传输的完整性，幻尔科技串口舵机28条指令全部实现，并且封装为类。</li>
<li>完整的异常捕获机制，对入口参数进行详细检查。</li>
<li>注释完善，所有方法和类均提供了类型注解。</li>
</ul>
<p>该类封装了舵机控制相关的所有功能，包括生成和发送控制指令、接收舵机反馈、读取舵机状态等。<br>
<img src="https://github.com/leezisheng/freakstudio-micropython-libraries/raw/main/serial_servo/image/UART_SERVO_Class.png" alt="UART_SERVO_Class" loading="lazy"></p>
<ul>
<li><code>__init__(self, uart: UART) -&gt; None</code>：初始化串口舵机控制类。</li>
<li><code>calculate_checksum(data: list[int]) -&gt; int</code>：计算校验和，确保数据的完整性和正确性。</li>
<li><code>build_packet(servo_id: int, cmd: int, params: list[int]) -&gt; bytearray</code>：构建舵机控制指令包。</li>
<li><code>send_command(servo_id: int, cmd: int, params: list[int] = []) -&gt; None</code>：发送控制指令到指定舵机。</li>
<li><code>receive_command(expected_cmd: int, expected_data_len: int) -&gt; list</code>：接收并解析舵机返回的指令数据包。</li>
<li><code>move_servo_immediate(servo_id: int, angle: float, time_ms: int) -&gt; None</code>：立即控制舵机转动到指定角度。</li>
<li><code>get_servo_move_immediate(servo_id: int) -&gt; tuple</code>：获取舵机的预设角度和时间。</li>
<li><code>move_servo_with_time_delay(servo_id: int, angle: float, time_ms: int) -&gt; None</code>：控制舵机延迟转动到指定角度。</li>
<li><code>get_servo_move_with_time_delay(servo_id: int) -&gt; tuple</code>：获取舵机的延迟转动角度和时间。</li>
<li><code>start_servo(servo_id: int) -&gt; None</code>：启动舵机的转动。</li>
<li><code>stop_servo(servo_id: int) -&gt; None</code>：立即停止舵机转动并停在当前角度位置。</li>
<li><code>set_servo_id(servo_id: int, new_id: int) -&gt; None</code>：设置舵机的新 ID 值。</li>
<li><code>get_servo_id(servo_id: int) -&gt; int</code>：获取舵机的 ID。</li>
<li><code>set_servo_angle_offset(servo_id: int, angle: float, save_to_memory: bool = False) -&gt; None</code>：根据角度值调整舵机的偏差。</li>
<li><code>get_servo_angle_offset(servo_id: int) -&gt; float</code>：获取舵机的偏差角度。</li>
<li><code>set_servo_angle_range(servo_id: int, min_angle: float, max_angle: float) -&gt; None</code>：设置舵机的最小和最大角度限制。</li>
<li><code>get_servo_angle_range(servo_id: int) -&gt; tuple</code>：获取舵机的角度限位。</li>
<li><code>set_servo_vin_range(servo_id: int, min_vin: float, max_vin: float) -&gt; None</code>：设置舵机的最小和最大输入电压限制。</li>
<li><code>get_servo_vin_range(servo_id: int) -&gt; tuple</code>：获取舵机的电压限制值。</li>
<li><code>set_servo_temp_range(servo_id: int, max_temp: int) -&gt; None</code>：设置舵机的最高温度限制。</li>
<li><code>get_servo_temp_range(servo_id: int) -&gt; int</code>：获取舵机的内部最高温度限制值。</li>
<li><code>read_servo_temp(servo_id: int) -&gt; int</code>：获取舵机的实时温度。</li>
<li><code>read_servo_voltage(servo_id: int) -&gt; float</code>：获取舵机的实时输入电压。</li>
<li><code>read_servo_pos(servo_id: int) -&gt; float</code>：获取舵机的实时角度位置。</li>
<li><code>set_servo_mode_and_speed(servo_id: int, mode: int, speed: int) -&gt; None</code>：设置舵机的工作模式和电机转速。</li>
<li><code>get_servo_mode_and_speed(servo_id: int) -&gt; tuple</code>：获取舵机的工作模式和转动速度。</li>
<li><code>set_servo_motor_load(servo_id: int, unload: bool) -&gt; None</code>：设置舵机的电机是否卸载掉电。</li>
<li><code>get_servo_motor_load_status(servo_id: int) -&gt; bool</code>：获取舵机电机是否装载或卸载。</li>
<li><code>set_servo_led(servo_id: int, led_on: bool) -&gt; None</code>：设置舵机的 LED 灯的亮灭状态。</li>
<li><code>get_servo_led(servo_id: int) -&gt; bool</code>：获取舵机 LED 的亮灭状态。</li>
<li><code>set_servo_led_alarm(servo_id: int, alarm_code: int) -&gt; None</code>：设置舵机 LED 闪烁报警对应的故障值。</li>
<li><code>get_servo_led_alarm(servo_id: int) -&gt; int</code>：获取舵机 LED 故障报警状态。</li>
</ul>
<h2 id="22-核心方法介绍">2.2 核心方法介绍</h2>
<p>该类的核心是通过 UART（串口通信）与舵机通信。类中的常量定义包括了多种控制命令和舵机相关的设置。这些常量包括了指令的编号、参数长度和返回数据长度。例如：</p>
<ul>
<li><code>SERVO_MOVE_TIME_WRITE</code> 和 <code>SERVO_MOVE_TIME_READ</code> 是与舵机位置控制相关的指令及其参数格式。</li>
<li><code>SERVO_ID_WRITE</code> 和 <code>SERVO_ID_READ</code> 是与舵机ID相关的读写指令。</li>
</ul>
<p>这些常量帮助类在进行通信时，能确保发送正确的指令和正确解析返回的数据。</p>
<p><code>READ_COMMANDS</code> 集合定义了所有读取命令的编号，这些命令对应舵机的数据读取请求，例如，读取舵机的实时电压、角度、温度等信息。<br>
这个集合便于在 <code>receive_command()</code> 方法中判断接收到的数据是否为期望的读取命令。</p>
<p>串口舵机类的核心方法为：</p>
<ul>
<li><strong>构建数据包方法 <code>build_packet</code></strong>：该方法用于构建舵机控制的指令包，指令包由以下部分组成：
<ul>
<li><strong>帧头</strong>：固定为 0x55, 0x55</li>
<li><strong>舵机ID</strong>：唯一标识每个舵机</li>
<li><strong>数据长度</strong>：包括指令和参数</li>
<li><strong>指令编号</strong>：具体的控制指令</li>
<li><strong>参数</strong>：控制指令的参数</li>
<li><strong>校验和</strong>：用于校验数据包的完整性</li>
</ul>
</li>
</ul>
<p><img src="https://github.com/leezisheng/freakstudio-micropython-libraries/raw/main/serial_servo/image/build_packet.png" alt="build_packet" loading="lazy"></p>
<ul>
<li><strong>发送指令方法 <code>send_command</code></strong>：该方法构建指令包并通过 <code>UART</code> 发送给舵机，它调用了<code>build_packet()</code>来构造数据包，<br>
并通过<code>self.uart.write()</code>发送数据。</li>
</ul>
<p><img src="https://github.com/leezisheng/freakstudio-micropython-libraries/raw/main/serial_servo/image/send_command.png" alt="send_command" loading="lazy"></p>
<ul>
<li><strong>接收指令方法 <code>receive_command</code></strong>：<code>receive_command() </code>方法用于接收来自舵机的反馈数据，此方法的工作过程如下：
<ol>
<li><strong>命令验证</strong>：确认接收到的是读取命令，而不是其他类型的命令。</li>
<li><strong>数据检查</strong>：检查数据的帧头是否正确，命令编号是否匹配，数据长度是否符合预期。</li>
<li><strong>校验和验证</strong>：验证接收到的数据包的校验和是否正确，确保数据未被篡改。</li>
<li><strong>数据解析</strong>：根据返回的数据长度，解析并返回舵机的状态或数据（例如电压、角度等）。</li>
<li>如果数据包无效（如校验和错误、数据长度不符等），该方法将返回空列表。</li>
</ol>
</li>
</ul>
<p><img src="https://github.com/leezisheng/freakstudio-micropython-libraries/raw/main/serial_servo/image/receive_command.png" alt="receive_command" loading="lazy"></p>
<p>SerialServo 类的设计通过封装舵机控制指令和数据包的构建逻辑，简化了舵机通信过程，核心思路是通过统一的数据包格式和校验机制确保指令的正确传输，<br>
结合 UART 通信接口实现与舵机的高效交互。类内指令常量和参数处理使得操作更加清晰易懂，<br>
同时通过校验和和数据长度的验证确保数据的完整性和可靠性。</p>
<h1 id="3如何使用">3.如何使用</h1>
<h2 id="31-安装依赖">3.1 安装依赖</h2>
<p>在运行示例程序之前，确保你的环境中安装了<code>machine</code>和<code>time</code>等模块。你可以通过MicroPython的包管理器安装依赖。</p>
<p>您可以使用如下语句和 <code>mpremote</code> 工具安装该库：</p>
<pre><code class="language-bash">mpremote mip install https://github.com/leezisheng/freakstudio-micropython-libraries/tree/main/serial_servo
</code></pre>
<p>或者（<strong>推荐</strong>）：</p>
<pre><code class="language-bash">mpremote mip install github:leezisheng/freakstudio-micropython-libraries/serial_servo
</code></pre>
<p>安装进行中会显示：</p>
<pre><code class="language-bash">(base) PS D:\lee\windows terminal\terminal-1.17.11461.0&gt; mpremote mip install github:leezisheng/freakstudio-micropython-libraries/serial_servo
Install github:leezisheng/freakstudio-micropython-libraries/serial_servo
Installing github:leezisheng/freakstudio-micropython-libraries/serial_servo/package.json to /lib
Installing: /lib/serial_servo/__init__.py
Installing: /lib/serial_servo/serial_servo.py
Installing micropython-machine (latest) from https://micropython.org/pi/v2 to /lib
Package may be partially installed
mpremote: Package not found: https://micropython.org/pi/v2/package/6/micropython-machine/latest.json
</code></pre>
<p>安装完成后，通过mpremote工具，连接你的开发板，如果成功安装，会显示如下信息：</p>
<pre><code class="language-bash">(base) PS D:\lee\windows terminal\terminal-1.17.11461.0&gt; mpremote connect COM8
Connected to MicroPython at COM8
Use Ctrl-] or Ctrl-x to exit this shell

&gt;&gt;&gt; import os
&gt;&gt;&gt; os.listdir()
['lib']
&gt;&gt;&gt; from serial_servo import SerialServo
&gt;&gt;&gt;
</code></pre>
<p>如果通过 <code>mpremote</code> 安装失败，您可以选择手动安装库，即选择 Download ZIP，然后解压文件。</p>
<ol>
<li>将该程序文件保存为 <code>serial_servo.py</code>。</li>
<li>确保使用的主控板通过舵机驱动扩展板已连接好舵机和串口，接线供电无异常。</li>
<li>在MicroPython环境中，通过<code>import serial_servo</code>导入该模块。</li>
</ol>
<h2 id="32-使用示例">3.2 使用示例</h2>
<p>在使用前，我们需要注意:</p>
<ul>
<li><strong>硬件连接</strong>：确保舵机的电源和控制线正确连接</li>
<li><strong>串口通信参数设置</strong>：串口通信的波特率必须与舵机的波特率匹配，为115200，数据位为8，无校验位，停止位为1。</li>
<li><strong>响应等待</strong>：每次发送指令后，最好等待舵机响应，避免指令丢失。</li>
</ul>
<p>你可以像下面这样，去调用串口舵机控制类中方法控制舵机或者读取其状态：</p>
<pre><code class="language-python">from machine import Pin, UART
from serial_servo import SerialServo

# 配置UART串口
uart = UART(1, baudrate=115200, tx=Pin(4), rx=Pin(5))

# 初始化串口舵机控制类
servo = SerialServo(uart)

# 控制舵机转到指定角度
servo.move_servo_immediate(servo_id=1, angle=90.0, time_ms=1000)

# 获取舵机的角度和时间设置
angle, time = servo.get_servo_move_immediate(servo_id=1)
print(f"Servo ID: 1, Angle: {angle}, Time: {time}")
</code></pre>
<p>下面是实测的相关图片：<br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250228011705314-1318840670.png" alt="image" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250228011707515-1018471868.png" alt="image" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250228011721439-1819139814.png" alt="image" loading="lazy"><br>
<img src="https://img2024.cnblogs.com/blog/2591203/202502/2591203-20250228011724891-355426291.png" alt="image" loading="lazy"></p>
<p>如有任何问题或需要帮助，请通过 <a href="mailto:10696531183@qq.com" target="_blank" rel="noopener nofollow">10696531183@qq.com</a> 联系开发者。</p>
<p><img src="https://img2024.cnblogs.com/blog/2591203/202411/2591203-20241121002659547-1525516382.png" alt="image" loading="lazy"></p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.04042661148726852" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-28 01:27">2025-02-28 01:21</span>&nbsp;
<a href="https://www.cnblogs.com/FreakEmbedded">FreakStudio</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18742422" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18742422);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18742422', targetLink: 'https://www.cnblogs.com/FreakEmbedded/p/18742422', title: '手把手教你用 MicroPython 玩转幻尔串口舵机，代码+教程全公开' })">举报</a>
</div>
        