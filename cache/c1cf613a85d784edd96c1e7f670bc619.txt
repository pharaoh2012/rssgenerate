
		<h1 class="postTitle">
			<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chingho/p/18897980" title="发布于 2025-05-27 09:26">
    <span role="heading" aria-level="2">C#实现SSE通信方式的MCP Server</span>
    

</a>

		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>前面的课程，我们使用MCP Server，用的是网络上魔搭提供的。</p>
<p>下面我们一起来实现，用C#实现自己的MCP Server。</p>
<p>MCP Server通信方式支持<strong>SSE</strong>、<strong>Stdio。</strong></p>
<p><strong>下面我们先实现SSE通信方式的MCP Server。</strong></p>
<h1 id="一创建项目"><strong>一、创建项目</strong></h1>
<p>创建Web API项目。</p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202505/93789-20250527092611819-1752534064.png" alt="图片" loading="lazy"></p>
<p>项目名称</p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202505/93789-20250527092611789-785845705.png" alt="图片" loading="lazy"></p>
<p>勾选配置如下：</p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202505/93789-20250527092611793-1587838660.png" alt="图片" loading="lazy"></p>
<p>项目创建完成后。</p>
<p>添加依赖库：ModelContextProtocol.AspNetCore，版本为：0.1.0-preview.14。<strong>添加的时候记得勾选：包括预发行版。</strong></p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202505/93789-20250527092611770-1273255584.png" alt="图片" loading="lazy"></p>
<h1 id="二代码实现">二、代码实现</h1>
<h2 id="21-programcs">2.1 Program.cs</h2>
<p>Program.cs代码修改如下，注册 McpServer 相关服务、并自动扫描 tool 工具列表。</p>
<pre><code>var&nbsp;builder =&nbsp;WebApplication.CreateBuilder(args);
builder.Services
&nbsp; .AddMcpServer()&nbsp;// 注册 McpServer 相关服务
&nbsp; .WithHttpTransport()&nbsp;// 使用HTTP传输的MCP请求和会话
&nbsp; .WithToolsFromAssembly()&nbsp;// 从程序集中扫描添加 tool工具列表
&nbsp; &nbsp; ;
var&nbsp;app = builder.Build();
app.UseHttpsRedirection();
// 注册MCP协议终结点
app.MapMcp();
app.Run();
</code></pre>
<h2 id="22-sse-实例代码">2.2 SSe 实例代码</h2>
<p>添加类：DemoTool</p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202505/93789-20250527092611781-884828259.png" alt="图片" loading="lazy"></p>
<p>DemoTool的代码如下，这里有几个关键点，通过为类、方法、参数来添加标识，这样才能被识别 MCP tool：</p>
<p>1、[<strong>McpServerToolType</strong>] 标记此类为 MCP 服务器工具类型</p>
<p>2、[<strong>McpServerTool</strong>] 标记的方法会被框架识别并注册为可用工具。</p>
<p>3、[<strong>Description</strong>("获取服务器时间")] &nbsp;描述方法的工具。</p>
<p>4、[<strong>Description</strong>("格式")] &nbsp; 描述参数。</p>
<pre><code>// 服务器上下文模型相关的协议定义
using&nbsp;ModelContextProtocol.Server;
// 用于支持组件属性描述等功能
using&nbsp;System.ComponentModel;
namespace&nbsp;MCPServer.SSE
{
&nbsp; &nbsp;&nbsp;// 标记此类为 MCP 服务器工具类型
&nbsp; &nbsp; [McpServerToolType]
&nbsp; &nbsp;&nbsp;public&nbsp;static&nbsp;class&nbsp;DemoTool
&nbsp; &nbsp; {
&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;///&nbsp;&lt;summary&gt;
&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;///&nbsp;服务器工具方法，用于获取当前服务器时间。
&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;///&nbsp;&lt;/summary&gt;
&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;///&nbsp;&lt;param name="format"&gt;时间格式字符串，默认值为 "yyyy-MM-dd HH:mm:ss"&lt;/param&gt;
&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;///&nbsp;&lt;returns&gt;当前服务器时间按照指定格式转换后的字符串&lt;/returns&gt;

&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;///标记的方法会被框架识别并注册为可用工具。
&nbsp; &nbsp; &nbsp; &nbsp; [McpServerTool, Description("获取服务器时间")]
&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;public&nbsp;static&nbsp;string&nbsp;ServerTime([Description("格式")]&nbsp;string&nbsp;format&nbsp;=&nbsp;"yyyy-MM-dd HH:mm:ss")
&nbsp; &nbsp; &nbsp; &nbsp; {
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;return&nbsp;DateTime.Now.ToString(format);
&nbsp; &nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; }
}
</code></pre>
<p>以上代码功能，根据客户端要求的格式，返回服务器时间。</p>
<h2 id="23-启动项目">2.3 启动项目</h2>
<p>运行项目如下，url 后面加 /sse，这个是默认地址。</p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202505/93789-20250527092611669-2084167524.png" alt="图片" loading="lazy"></p>
<h1 id="三结合mcp-client-测试效果">三、结合MCP Client 测试效果</h1>
<p>使用上一个课程：<a href="https://mp.weixin.qq.com/s?__biz=MjM5MDE5MDM5NA==&amp;mid=2449946251&amp;idx=1&amp;sn=d4cd6345e9bff7b40c5d72c4d1b5a0ab&amp;scene=21#wechat_redirect" target="_blank" rel="noopener nofollow">实现MCP Client 与 LLM 连接，实现抓取网页内容功能！</a> 的Client示例。</p>
<p>把 Endpoint 的值改为我们自己的： <strong><a href="https://localhost:7130/sse" target="_blank" rel="noopener nofollow">https://localhost:7130/sse</a></strong></p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202505/93789-20250527092611900-1662566501.png" alt="图片" loading="lazy"></p>
<p>运行MCP Client，成功连接MCP Server，并打印出工具列表。</p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202505/93789-20250527092611673-369726078.png" alt="图片" loading="lazy"></p>
<p>测试效果如下，根据用户要求的格式，返回对应格式的时间。</p>
<p><img src="https://img2024.cnblogs.com/blog/93789/202505/93789-20250527092611750-284831064.png" alt="图片" loading="lazy"></p>
<p>好了，今天就分享到这边！</p>
<p>下一个课程：<strong>实现Stdio通信方式的MCP Server。</strong></p>
<p><strong>文中示例代码：</strong><a href="https://pan.quark.cn/s/e188ecb7eae0" target="_blank" rel="noopener nofollow">https://pan.quark.cn/s/e188ecb7eae0</a></p>
<blockquote>
<p>该专栏优先在飞书发布，欢迎收藏关注！</p>
<p><a href="https://www.feishu.cn/community/article?id=7507084665509904403" target="_blank" rel="noopener nofollow">https://www.feishu.cn/community/article?id=7507084665509904403</a></p>
</blockquote>
<p>- End -</p>
<p>推荐阅读</p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDE5MDM5NA==&amp;mid=2449946251&amp;idx=1&amp;sn=d4cd6345e9bff7b40c5d72c4d1b5a0ab&amp;scene=21#wechat_redirect" target="_blank" rel="noopener nofollow">C#实现MCP Client 与 LLM 连接，抓取网页内容功能！</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDE5MDM5NA==&amp;mid=2449946235&amp;idx=1&amp;sn=a56c877cf4e1ddbccc157de1ee060f8b&amp;scene=21#wechat_redirect" target="_blank" rel="noopener nofollow">VS Code + Cline + 魔搭MCP Server 实现抓取网页内容。</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDE5MDM5NA==&amp;mid=2449946207&amp;idx=1&amp;sn=e2650b43d0019b2f222762545bf73a43&amp;scene=21#wechat_redirect" target="_blank" rel="noopener nofollow">C#实现自己的MCP Client</a></p>

</div>
<div class="clear"></div>

		</div>
		<div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.07059331572106481" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-27 09:27">2025-05-27 09:26</span>&nbsp;
<a href="https://www.cnblogs.com/chingho">chingho</a>&nbsp;
阅读(<span id="post_view_count">48</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18897980);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18897980', targetLink: 'https://www.cnblogs.com/chingho/p/18897980', title: 'C#实现SSE通信方式的MCP Server' })">举报</a>
</div>
	