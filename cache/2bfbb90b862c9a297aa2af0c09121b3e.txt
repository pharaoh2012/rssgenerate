
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/fanliang11/p/18860510" title="发布于 2025-05-05 22:08">
    <span role="heading" aria-level="2">如何搭建基于surging的分布式直播流媒体</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h1 class="postTitle">前言</h1>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 这几天一直在优化测试dotnetty，代码是基于<a href="https://github.com/cuteant/SpanNetty" rel="noopener nofollow" target="_blank">https://github.com/cuteant/SpanNetty </a>，基础上修改优化的，然后发布搭建了分布式rtmp直播服务，内存一直稳定在70mb左右，然后大家可以下载进行测试，也可以观看直播推流的电影，一共有两部，一部是黑衣人，一部是大红包。还有要求性能比较高的，还是关闭链路式跟踪，一般可以用在调试测试和并发不高的系统上，微服务调试用上了链路跟踪大大减少了开发调试时间，就比如某个链路调用出现错误，可以点开查看相关日志，就可以跳到相关日志列表，然后点开某一条日志，就可以看到详细的报错信息</p>
<p><img src="https://img2024.cnblogs.com/blog/192878/202505/192878-20250505205028843-1595012638.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p><img src="https://img2024.cnblogs.com/blog/192878/202505/192878-20250505210406798-2124620682.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p><img src="https://img2024.cnblogs.com/blog/192878/202505/192878-20250505205043544-451754611.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>&nbsp;HttpFlv:<a href="http://117.72.121.2:281/httpflv.html" rel="noopener nofollow" target="_blank">http://117.72.121.2:281/httpflv.html</a>&nbsp; <a target="_blank">（黑衣人）</a></p>
<p>&nbsp;HttpFlv:<a href="http://117.72.121.2:281/httpflv1.html" target="_blank" rel="noopener nofollow">http://117.72.121.2:281/httpflv1.html&nbsp;</a> <a target="_blank">（大红包）</a></p>
<p>rtmp:<a target="_blank">rtmp://117.72.121.2:76/live1/livestream2&nbsp;&nbsp; （黑衣人）</a></p>
<p>rtmp:<a target="_blank">rtmp://117.72.121.2:76/live1/livestream3&nbsp;&nbsp; （大红包）</a></p>
<p>&nbsp; 凯亚 (Kayak) 是什么?</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 凯亚(Kayak)是基于.NET6.0软件环境下的surging微服务引擎进行开发的, 平台包含了微服务和物联网平台。支持异步和响应式编程开发，功能包含了物模型,设备,产品,网络组件的统一管理和微服务平台下的注册中心，服务路由，模块，中间服务等管理。还有多协议适配(TCP,MQTT,UDP,CoAP,HTTP,Grpc,websocket,rtmp,httpflv,webservice,等),通过灵活多样的配置适配能够接入不同厂家不同协议等设备。并且通过设备告警,消息通知,数据可视化等功能。能够让你能快速建立起微服务物联网平台系统。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; 凯亚物联网平台：<a href="http://117.72.121.2:3100" rel="noopener nofollow" target="_blank">http://117.72.121.2:3100</a>（用户名：fanly&nbsp; 密码：123456）</p>
<p>&nbsp; &nbsp; 链路跟踪Skywalking V8:<a href="http://117.72.121.2:8080/" rel="noopener nofollow" target="_blank">http://117.72.121.2:8080/</a></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; surging 微服务引擎开源地址：<a href="https://github.com/fanliang11/surging" rel="noopener nofollow" target="_blank">https://github.com/fanliang11/surging</a>（后面surging 会移动到<a href="https://github.com/microsurging/" rel="noopener nofollow" target="_blank">microsurging</a>进行维护）</p>
<h1 class="postTitle">搭建直播流媒体</h1>
<p><strong>&nbsp;&nbsp; 下载地址：</strong></p>
<p>通过网盘分享的文件：rtmp.zip<br>链接: https://pan.baidu.com/s/12dVChSd1K5Tu7ajv6FC98Q?pwd=hn9u 提取码: hn9u</p>
<p>以下是目录：</p>
<p>点击startup.bat 就能开启分布式直播推流</p>
<p><img src="https://img2024.cnblogs.com/blog/192878/202505/192878-20250505212805348-488989107.png" alt="" loading="lazy"></p>
<p>&nbsp;在bin 文件中有3.bat,4.bat ，里面是ffmpeg推流3.mp4和4.mp4，需要拷贝两部视频到本目录下，然后点击3.bat和4.bat（你也可以利用OBS Studio等直播软件进行推流）</p>
<p><img src="https://img2024.cnblogs.com/blog/192878/202505/192878-20250505214046553-171628322.png" alt="" loading="lazy"></p>
<p><strong>以下是对应配置（可以通过surgingSettings.json进行修改）</strong></p>
<div class="table-wrapper">
<div class="table-wrapper">
<div class="table-wrapper">
<table border="0" align="left">
<tbody>
<tr>
<td>宿主机地址</td>
<td>宿主机端口</td>
<td>是否支持服务器推流</td>
<td>推流地址</td>
<td>RtmpPort</td>
<td>HttpFlvPort</td>
<td>文件目录</td>
<td>httflv 文件</td>



</tr>
<tr>
<td>127.0.0.1</td>
<td>83</td>
<td>是</td>
<td>
<p>live1/livestream2</p>
<p>live1/livestream3</p>



</td>
<td>76</td>
<td>8080</td>
<td>rtmpserver</td>
<td>
<p>httpflv3.html（live1/livestream2）</p>
<p>httpflv4.html（live1/livestream3）</p>



</td>



</tr>
<tr>
<td>127.0.0.1</td>
<td>82</td>
<td>否</td>
<td>
<p>live1/livestream2</p>
<p>live1/livestream3</p>



</td>
<td>77</td>
<td>8081</td>
<td>rtmpserver1</td>
<td>
<p>httpflv1.html（live1/livestream2）</p>
<p>httpflv5.html（live1/livestream3）</p>



</td>



</tr>
<tr>
<td>127.0.0.1</td>
<td>84</td>
<td>否</td>
<td>
<p>live1/livestream2</p>
<p>live1/livestream3</p>



</td>
<td>74</td>
<td>8082</td>
<td>
<p>rtmpserver2</p>



</td>
<td>
<p>httpflv2.html（live1/livestream2）</p>



</td>



</tr>



</tbody>



</table>



</div>
<div class="table-wrapper">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>
<div class="table-wrapper">&nbsp;</div>
<div class="table-wrapper">&nbsp;</div>
<div class="table-wrapper">&nbsp;</div>
<div class="table-wrapper">&nbsp;</div>
<div class="table-wrapper">&nbsp;</div>



</div>
<div class="table-wrapper">&nbsp;</div>
<div class="table-wrapper">&nbsp;</div>
<div class="table-wrapper">&nbsp;</div>
<div class="table-wrapper">&nbsp;</div>
<div class="table-wrapper">&nbsp;</div>



<br>
<div class="table-wrapper"><strong>HttpFlv客户端页面</strong></div>
<div class="table-wrapper">
<p><img src="https://img2024.cnblogs.com/blog/192878/202505/192878-20250505214623616-1932507164.png" alt="" loading="lazy"></p>
<p>以下是测试结果，通过推流live1/livestream2，live1/livestream3， 打开6个httpflv 和1个rtmp， 运行1小时10分钟，内存一直稳定在70MB，CPU一直在0.5左右波动。</p>
<p><img src="https://img2024.cnblogs.com/blog/192878/202505/192878-20250505214848768-1778049435.png" alt="" loading="lazy"></p>
<p>&nbsp;通过以上测试，直播推流已经非常稳定了，那么像抖音，快手只要推流做下压缩，帧率在12左右，那么推流大小应该在200kb/s 左右，然后10G带宽,&nbsp; 一台服务器可以支持8000在线观看直播，那么300台就能支持240万，按照正常是这样算的，如果加上还有压缩算法，弹性扩容，推荐流量,聊天，刷礼物，打PK，特效背景等一些功能就可能不止这些服务器，估计要上千台。</p>
<h1 class="postTitle">总结</h1>
<p>以上是基于surging 做的分布式推流，这些能满足部分需要，如果需要强大的功能，如压缩算法，弹性扩容等功能请关注凯亚物联网平台，后续会添加流媒体管理。</p>



</div>




</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.38966884469328705" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-05-06 08:57">2025-05-05 22:08</span>&nbsp;
<a href="https://www.cnblogs.com/fanliang11">fanly11</a>&nbsp;
阅读(<span id="post_view_count">82</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18860510);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18860510', targetLink: 'https://www.cnblogs.com/fanliang11/p/18860510', title: '如何搭建基于surging的分布式直播流媒体' })">举报</a>
</div>
        