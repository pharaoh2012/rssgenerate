
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiao987334176/p/18912784" title="发布于 2025-06-06 16:33">
    <span role="heading" aria-level="2">dify打造数据可视化图表</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h1>一、概述</h1>
<p>在日常工作和学习中，我们经常需要和数据打交道。无论是分析报告、项目展示，还是简单的数据洞察，一个清晰直观的图表，往往能胜过千言万语。</p>
<p>一款能让数据可视化变得超级简单的 MCP Server，由蚂蚁集团 AntV 团队开源的 mcp-server-chart</p>
<p>github地址：<a href="https://github.com/antvis/mcp-server-chart" target="_blank" rel="noopener nofollow">https://github.com/antvis/mcp-server-chart</a></p>
<p>&nbsp;</p>
<p>目前已经支持超过 15 种我们常用的可视化图表类型，比如：</p>
<ul>
<li data-pid="St3uqGGU">折线图、柱状图、饼图、面积图、条形图</li>
<li data-pid="cVL50Eci">直方图、散点图、矩阵树图、词云图、双轴图</li>
<li data-pid="NCgwoxEc">雷达图、思维导图、网络图、流程图、鱼骨图</li>
</ul>
<p>可以说，它几乎能满足我们日常工作中绝大多数场景的可视化需求。 最棒的是，它会以图片链接的形式返回生成结果，方便你嵌入到任何需要的地方。</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250605173258861-763978853.png" alt="" width="1174" height="641"></p>
<h1>二、MCP工具初体验</h1>
<h2>docker运行</h2>
<p>mcp-server-chart官方已经封装好了镜像，docker hub地址：<a href="https://hub.docker.com/r/acuvity/mcp-server-chart" target="_blank" rel="noopener nofollow">https://hub.docker.com/r/acuvity/mcp-server-chart</a></p>
<p>目前最新版本是0.4.0，运行一下</p>
<div class="cnblogs_code">
<pre>docker run -d --name mcp-server-chart -it -p <span style="color: rgba(128, 0, 128, 1)">8000</span>:<span style="color: rgba(128, 0, 128, 1)">8000</span>  acuvity/mcp-server-chart:<span style="color: rgba(128, 0, 128, 1)">0.4</span>.<span style="color: rgba(128, 0, 128, 1)">0</span></pre>
</div>
<p>mcp-server-chart支持3种调用方式，分别是STDIO，SSE，streamable Http</p>
<h2>Cherry Studio调用</h2>
<p>这里以Cherry Studio客户端，来演示一下如何使用</p>
<p>添加MCP服务器</p>
<p>名称：mcp-server-chart</p>
<p>类型：streamable Http</p>
<p>地址：http://10.44.32.14:8000/mcp</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250605180631057-1071802479.png" alt="" loading="lazy"></p>
<p>&nbsp;添加完成后，查看工具列表</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250605180737879-1240765903.png" alt="" loading="lazy"></p>
<p>&nbsp;能看到几十个工具方法，就说明运行正常。</p>
<p>&nbsp;</p>
<p>新建一个默认会话，选择mcp服务器</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250605180839106-1256457403.png" alt="" loading="lazy"></p>
<p>&nbsp;输入提示词：</p>
<div class="cnblogs_code">
<pre>根据诗人的名气以诗人的名字生成一个词云图，至少50位中国古代诗人，给出图片链接后再用Markdown语法直接展示。</pre>
</div>
<p>效果如下：</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250605180924017-2050641184.png" alt="" loading="lazy"></p>
<p>&nbsp;整个过程，大模型就像一位经验丰富的设计师，不仅理解了你的需求，还自动帮你准备好了绘制图表所需的各种参数（比如图片的宽度、高度、标题等），最后给出了图片链接。</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250605181016120-981256114.png" alt="" loading="lazy"></p>
<p>注意，这个链接，公网是可以打开的</p>
<p>https://mdn.alipayobjects.com/one_clip/afts/img/EKJYTr0ONCAAAAAAVvAAAAgAoEACAQFr/original</p>
<p>&nbsp;</p>
<h1>三、Dify+可视化图表MCP</h1>
<p>目前有很多文章，一般都是通过Dify 结合数据库和 ECharts插件，实现数据可视化的。</p>
<p>但是实现过程比较复杂，首先通过数据库查询原始数据，其次通过python代码转换成 ECharts能够理解的图表格式，最后调用ECharts插件实现图表展示。</p>
<p>整个过程需要不少经验和技巧，一不小心就容易出错。</p>
<p>&nbsp;</p>
<p>但是！有了 mcp-server-chart 这个 MCP 工具，事情就变得简单多了。</p>
<p>场景演示：用户用自然语言提问，我们通过 Dify 工作流从数据库里查询数据，并生成图表。</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606150447493-970144271.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<h2>示例数据</h2>
<p>为了方便演示，我用MySQL 数据库搭建了一些示例数据</p>
<p>&nbsp;</p>
<p>新建表boxoffice</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">CREATE</span> <span style="color: rgba(0, 0, 255, 1)">TABLE</span><span style="color: rgba(0, 0, 0, 1)"> `boxoffice` (
  `id` </span><span style="color: rgba(0, 0, 255, 1)">bigint</span> <span style="color: rgba(128, 128, 128, 1)">NOT</span> <span style="color: rgba(0, 0, 255, 1)">NULL</span><span style="color: rgba(0, 0, 0, 1)">,
  `years` </span><span style="color: rgba(0, 0, 255, 1)">varchar</span>(<span style="color: rgba(128, 0, 0, 1); font-weight: bold">64</span>) COLLATE utf8mb4_unicode_ci <span style="color: rgba(0, 0, 255, 1)">DEFAULT</span> <span style="color: rgba(0, 0, 255, 1)">NULL</span><span style="color: rgba(0, 0, 0, 1)">,
  `movie_name` </span><span style="color: rgba(0, 0, 255, 1)">varchar</span>(<span style="color: rgba(128, 0, 0, 1); font-weight: bold">255</span>) COLLATE utf8mb4_unicode_ci <span style="color: rgba(0, 0, 255, 1)">DEFAULT</span> <span style="color: rgba(0, 0, 255, 1)">NULL</span><span style="color: rgba(0, 0, 0, 1)">,
  `score` </span><span style="color: rgba(0, 0, 255, 1)">float</span> <span style="color: rgba(0, 0, 255, 1)">DEFAULT</span> <span style="color: rgba(0, 0, 255, 1)">NULL</span><span style="color: rgba(0, 0, 0, 1)">,
  `director` </span><span style="color: rgba(0, 0, 255, 1)">varchar</span>(<span style="color: rgba(128, 0, 0, 1); font-weight: bold">64</span>) COLLATE utf8mb4_unicode_ci <span style="color: rgba(0, 0, 255, 1)">DEFAULT</span> <span style="color: rgba(0, 0, 255, 1)">NULL</span><span style="color: rgba(0, 0, 0, 1)">,
  `box_office` </span><span style="color: rgba(0, 0, 255, 1)">float</span> <span style="color: rgba(0, 0, 255, 1)">DEFAULT</span> <span style="color: rgba(0, 0, 255, 1)">NULL</span><span style="color: rgba(0, 0, 0, 1)">,
  </span><span style="color: rgba(0, 0, 255, 1)">PRIMARY</span> <span style="color: rgba(0, 0, 255, 1)">KEY</span><span style="color: rgba(0, 0, 0, 1)"> (`id`)
) ENGINE</span><span style="color: rgba(128, 128, 128, 1)">=</span>InnoDB <span style="color: rgba(0, 0, 255, 1)">DEFAULT</span> CHARSET<span style="color: rgba(128, 128, 128, 1)">=</span>utf8mb4 COLLATE<span style="color: rgba(128, 128, 128, 1)">=</span>utf8mb4_unicode_ci;</pre>
</div>
<p>&nbsp;</p>
<p>插入数据</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">INSERT</span> <span style="color: rgba(0, 0, 255, 1)">INTO</span> boxoffice (id, years, movie_name, score, director, box_office) <span style="color: rgba(0, 0, 255, 1)">VALUES</span><span style="color: rgba(0, 0, 0, 1)">
(</span><span style="color: rgba(128, 0, 0, 1); font-weight: bold">1</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">2025</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">哪吒之魔童闹海</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">8.5</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">饺子</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">1467030</span><span style="color: rgba(0, 0, 0, 1)">),
(</span><span style="color: rgba(128, 0, 0, 1); font-weight: bold">2</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">2021</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">长津湖</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">7.6</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">陈凯歌</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">577524</span><span style="color: rgba(0, 0, 0, 1)">),
(</span><span style="color: rgba(128, 0, 0, 1); font-weight: bold">3</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">2017</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">战狼2</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">7.1</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">吴京</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">569456</span><span style="color: rgba(0, 0, 0, 1)">),
(</span><span style="color: rgba(128, 0, 0, 1); font-weight: bold">4</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">2021</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">你好，李焕英</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">8.1</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">贾玲</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">541372</span><span style="color: rgba(0, 0, 0, 1)">),
(</span><span style="color: rgba(128, 0, 0, 1); font-weight: bold">5</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">2019</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">哪吒之魔童降世</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">8.5</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">饺子</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">503557</span><span style="color: rgba(0, 0, 0, 1)">),
(</span><span style="color: rgba(128, 0, 0, 1); font-weight: bold">6</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">2019</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">流浪地球</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">7.9</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">郭帆</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">468814</span><span style="color: rgba(0, 0, 0, 1)">),
(</span><span style="color: rgba(128, 0, 0, 1); font-weight: bold">7</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">2023</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">满江红</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">7.8</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">张艺谋</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">454437</span><span style="color: rgba(0, 0, 0, 1)">),
(</span><span style="color: rgba(128, 0, 0, 1); font-weight: bold">8</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">2021</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">唐人街探案3</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">5.6</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">陈思诚</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">452392</span><span style="color: rgba(0, 0, 0, 1)">),
(</span><span style="color: rgba(128, 0, 0, 1); font-weight: bold">9</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">2019</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">复仇者联盟4：终局之战</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">8.5</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">安东尼·罗素</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">424889</span><span style="color: rgba(0, 0, 0, 1)">),
(</span><span style="color: rgba(128, 0, 0, 1); font-weight: bold">10</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">2022</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">长津湖之水门桥</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">7.2</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">徐克</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">406724</span><span style="color: rgba(0, 0, 0, 1)">),
(</span><span style="color: rgba(128, 0, 0, 1); font-weight: bold">11</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">2023</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">流浪地球2</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">8.2</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">郭帆</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">402869</span><span style="color: rgba(0, 0, 0, 1)">),
(</span><span style="color: rgba(128, 0, 0, 1); font-weight: bold">12</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">2023</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">孤注一掷</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">6.9</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">申奥</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">384848</span><span style="color: rgba(0, 0, 0, 1)">),
(</span><span style="color: rgba(128, 0, 0, 1); font-weight: bold">13</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">2018</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">红海行动</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">8.5</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">林超贤</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">365185</span><span style="color: rgba(0, 0, 0, 1)">),
(</span><span style="color: rgba(128, 0, 0, 1); font-weight: bold">14</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">2023</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">消失的她</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">6.8</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">崔睿</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">352396</span><span style="color: rgba(0, 0, 0, 1)">),
(</span><span style="color: rgba(128, 0, 0, 1); font-weight: bold">15</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">2025</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">唐探1900</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">6.6</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">陈思诚</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">348642</span><span style="color: rgba(0, 0, 0, 1)">),
(</span><span style="color: rgba(128, 0, 0, 1); font-weight: bold">16</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">2024</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">热辣滚烫</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">7.9</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">贾玲</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">346040</span><span style="color: rgba(0, 0, 0, 1)">),
(</span><span style="color: rgba(128, 0, 0, 1); font-weight: bold">17</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">2024</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">飞驰人生2</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">7.7</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">韩寒</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">339842</span><span style="color: rgba(0, 0, 0, 1)">),
(</span><span style="color: rgba(128, 0, 0, 1); font-weight: bold">18</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">2018</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">唐人街探案2</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">7.1</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">陈思诚</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">339769</span><span style="color: rgba(0, 0, 0, 1)">),
(</span><span style="color: rgba(128, 0, 0, 1); font-weight: bold">19</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">2016</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">美人鱼</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">6.8</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">周星驰</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">339211</span><span style="color: rgba(0, 0, 0, 1)">),
(</span><span style="color: rgba(128, 0, 0, 1); font-weight: bold">20</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">2024</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">抓娃娃</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">7.3</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">闫非</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">332751</span>);</pre>
</div>
<p>&nbsp;</p>
<p>打开表，效果如下：</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250605181951034-665656977.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<h2>开始节点</h2>
<p>新建一个空白应用</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250605182440998-682707465.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>开始节点默认配置，接收用户问题。</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250605182614949-900648661.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<h2>需求提炼</h2>
<p data-pid="nPQf198C">分析用户问题，判断用户是否需要生成图表，提取出SQL查询的需求。</p>
<p data-pid="xf7spafJ">输出如下：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">sql_requirement: [精炼后的数据查询需求]
need_chart: [是</span>/<span style="color: rgba(0, 0, 0, 1)">否]
chart_type: [推荐的Echarts图表类型或“无”]</span></pre>
</div>
<p>大模型选择DeepSeek-V3</p>
<p><span style="color: rgba(255, 0, 0, 1)"><strong>注意：大模型必须选择DeepSeek-V3，选择其他模型可能会导致最后图表无法生成。</strong></span></p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606150555163-500492542.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>&nbsp;提示词如下：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">你是一名专业的数据需求提炼师。

请仔细阅读用户的自然语言问题{{#context#}}，只保留与数据查询直接相关的核心需求。自动忽略与数据查询无关的内容（如生成图表、导出Excel、制作报表等）。

请判断用户是否需要用图表展示结果。如果需要，请根据问题内容推荐最合适的Echarts图表类型（如area、bar、column、dual</span>-axes、fishbone-diagram、flow-diagram、histogram、line、mind-map、network-graph、pie、radar、scatter、treemap、word-<span style="color: rgba(0, 0, 0, 1)">cloud等）；如果不需要图表，请填写“无”。

请严格按照如下格式输出，不要有任何解释或多余内容：
sql_requirement: [精炼后的数据查询需求]
need_chart: [是</span>/<span style="color: rgba(0, 0, 0, 1)">否]
chart_type: [推荐的Echarts图表类型或“无”]</span></pre>
</div>
<p>&nbsp;</p>
<h2>参数提取器</h2>
<p>把上一个节点的三个输出参数提取出来。</p>
<p>添加提取参数</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606150639318-306168785.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>&nbsp;第一个参数，内容如下</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">sql_requirement
sql需求</span></pre>
</div>
<p>&nbsp;</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250605183505774-425574676.png" alt="" loading="lazy"></p>
<p>其他参数依次类推</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">need_chart
是否需要图表
chart_type
图表类型</span></pre>
</div>
<p>&nbsp;</p>
<p>最后效果如下：</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606150708942-2130803262.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<h2>自然语言转SQL（ROOKIE_TEXT2DATA）</h2>
<p>打开插件市场，搜索关键字ROOKIE_TEXT2DATA，安装插件</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250605184434791-1975986002.png" alt="" loading="lazy"></p>
<p>添加节点，注意选择rookie text2data</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250605185102235-702645590.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p data-pid="qAnskY2F">这个节点的核心功能就是把用户的自然语言转成SQL语句了。</p>
<p data-pid="vrOK8cPw">输入为提取后的SQL语句需求，关联参数提取节点的sql_requirement。</p>
<p><strong>数据库配置</strong>: 正确填写数据库类型、IP、端口、库名、用户名、密码。</p>
<p><strong>大模型</strong>：我这里必须用DeepSeek-V3</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606150802260-954187090.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>注意：这里的查询语句，选择变量sql_requirement。输入/就有下拉框</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606140517927-1302568906.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>&nbsp;提示词如下：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">表名：boxoffice
字段说明：
</span>- <span style="color: rgba(0, 0, 255, 1)">id</span>：<span style="color: rgba(0, 0, 255, 1)">id</span>，<span style="color: rgba(0, 0, 255, 1)">int</span>
- years：年份，<span style="color: rgba(0, 0, 255, 1)">int</span>
- movie_name：电影名，<span style="color: rgba(0, 0, 255, 1)">string</span>
- score：评分，<span style="color: rgba(0, 0, 255, 1)">float</span>
- director：导演，<span style="color: rgba(0, 0, 255, 1)">string</span>
- box_office：票房，<span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)">

注意事项：
</span>-<span style="color: rgba(0, 0, 0, 1)"> 如有分组统计，请使用SUM、AVG等聚合函数，不要直接用原始字段。
</span>-<span style="color: rgba(0, 0, 0, 1)"> 所有非聚合字段必须出现在GROUP BY中。
</span>-<span style="color: rgba(0, 0, 0, 1)"> 只输出SQL语句，不要解释。

示例查询：
</span><span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">. 查询每个导演的总票房：SELECT director, SUM(box_office) FROM boxoffice GROUP BY director;
</span><span style="color: rgba(128, 0, 128, 1)">2</span>. 查询每年票房最高的电影：SELECT years, movie_name, MAX(box_office) FROM boxoffice GROUP BY years;</pre>
</div>
<p>&nbsp;</p>
<p>数据库配置连接信息</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606150946474-1767147116.png" alt="" loading="lazy"></p>
<p><strong><span style="color: rgba(255, 0, 0, 1)">注意返回格式，选择text</span></strong></p>
<p>&nbsp;</p>
<h2>执行SQL</h2>
<p>此节点负责连接数据库，并执行上一步生成的SQL语句。</p>
<p>输入变量：上一节点返回的SQL语句。</p>
<p>数据库配置: 正确填写数据库类型、IP、端口、库名、用户名、密码。</p>
<p>输出变量：返回数据格式为文本。</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606151137028-1059363247.png" alt="" loading="lazy"></p>
<p><span style="color: rgba(255, 0, 0, 1)">&nbsp;<strong>注意返回格式，选择text</strong></span></p>
<p>&nbsp;</p>
<p>注意，这里的执行sql语句，选择变量&nbsp;ROOKIE TEXT2DATA.text</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606140757933-1797968981.png" alt="" loading="lazy"></p>
<h2>条件分支</h2>
<p>判断是否需要图表，给到不同的分支。</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606141220885-1716202522.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<h2>图文总结</h2>
<p>如果需要生成图表，走这个节点。</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606151511884-1990889740.png" alt="" loading="lazy"></p>
<p>Agent策略选择ReAct（Support MCP Tools）</p>
<p>MCP服务器配置如下，url换成你自己的</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">{
  </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">mcp-server-chart</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {
    </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">url</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">http://10.44.32.14:8000/sse</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
  }
}</span></pre>
</div>
<p><strong><span style="color: rgba(255, 0, 0, 1)">注意：这里必须是SSE模式，不能用streamable_http</span></strong></p>
<p><strong><span style="color: rgba(255, 0, 0, 1)">为什么？因为插件Agent策略，不支持以streamable_http协议生成图表，但是SSE协议是支持的。</span></strong></p>
<p>&nbsp;</p>
<p>但是上面你明明用Cherry Studio客户端，可以生成图表了呀。</p>
<p>我们首先要理清一点，mcp-server-chart本身是支持以streamable_http协议生成图表</p>
<p>Cherry Studio是客户端，它更新快。那么插件Agent策略，它也是客户端，更新很慢。现在问题是插件目前不支持，怎么办？等插件更新就好了。</p>
<p>&nbsp;</p>
<p><strong>指令</strong></p>
<p>注意选择ROOKIE EXCUTE SOL.text</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606153506023-584115930.png" alt="" loading="lazy"></p>
<p><span style="color: rgba(0, 0, 0, 1)">查询</span></p>
<p><span style="color: rgba(0, 0, 0, 1)">提示词如下：</span></p>
<div class="cnblogs_code">
<pre>根据给定的数据选择合适的工具生成相应的图表，图表类型参考 {{#<span style="color: rgba(128, 0, 128, 1)">1749119517859</span>.chart_type#}}。如果有小数的话保留小数点后面2位就行。输出先用自然语言简要给出数据分析，给出图片链接地址，并展示图片，要求全部用中文回答。</pre>
</div>
<p><span style="color: rgba(255, 0, 0, 1)"><strong>注意：这里的提示词复制之后，需要手动替换一下里面的变量。 因为每一个人的变量id是不一样的。 我这里是1749119517859，你那里就不一样了。</strong></span></p>
<p><span style="color: rgba(0, 0, 0, 1)"><strong>手动替换好之后，效果如下：</strong></span></p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606153908009-970594888.png" alt="" loading="lazy"></p>
<h2>文字总结</h2>
<p>如果用户只是想查询数据，不需要图表，那么工作流就会走到这个相对简单的节点。它会根据数据库查询结果，用简洁的自然语言给出分析和意见。</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606154255005-1820916671.png" alt="" loading="lazy"></p>
<p>&nbsp;模型，必须是DeepSeek-V3</p>
<p>上下文，选择变量rookie excute_sql.text</p>
<p>提示词如下：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">请根据用户问题和查询结果，用简洁的中文自然语言回答并给出分析意见。
用户问题:{{#</span><span style="color: rgba(128, 0, 128, 1)">1749119517859</span><span style="color: rgba(0, 0, 0, 1)">.sql_requirement#}}
查询结果:{{#context#}}</span></pre>
</div>
<p><span style="color: rgba(255, 0, 0, 1)"><strong>注意：这里的提示词复制之后，需要手动替换一下里面的变量。 因为每一个人的变量id是不一样的。 我这里是1749119517859，你那里就不一样了。</strong></span></p>
<p>替换好之后，就是上面的效果了。</p>
<h2>回复节点</h2>
<p>直接引用图文总结或文字总结的输出就好了。</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606154611922-366656859.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<h1>四、测试</h1>
<p>比如问一下各导演的票房占比，可以看到给出了分析结果和图片链接地址。</p>
<h2>各导演的票房占比是多少?</h2>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606154836752-383541640.png" alt="" loading="lazy"></p>
<p>图片链接可以直接打开：<a class="cursor-pointer underline !decoration-primary-700 decoration-dashed" href="https://mdn.alipayobjects.com/one_clip/afts/img/qUhrTLIUAWEAAAAASRAAAAgAoEACAQFr/original" target="_blank" rel="noopener nofollow">https://mdn.alipayobjects.com/one_clip/afts/img/qUhrTLIUAWEAAAAASRAAAAgAoEACAQFr/original</a></p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606154959139-327183427.jpg" alt="" width="1004" height="669"></p>
<p>在测试一下折线图。</p>
<h2>请用图表展示历年票房变化</h2>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606155151293-560182207.png" alt="" loading="lazy"></p>
<p>打开图表链接：<a href="https://mdn.alipayobjects.com/one_clip/afts/img/LX_NRqh9-FIAAAAARrAAAAgAoEACAQFr/original" target="_blank" rel="noopener nofollow">https://mdn.alipayobjects.com/one_clip/afts/img/LX_NRqh9-FIAAAAARrAAAAgAoEACAQFr/original</a></p>
<p>&nbsp;<img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606155303341-252154718.jpg" alt="" width="1010" height="673"></p>
<h1>五、AntV插件的使用</h1>
<p>除了MCP工具，在插件市场搜索antv可以看到蚂蚁集团提供的这个可视化工具插件。</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606155454386-1694814058.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>&nbsp;和mcp server一样，也是支持了15种工具。</p>
<p>&nbsp;</p>
<p>创建一个Agent</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606160556752-1468668738.png" alt="" loading="lazy"></p>
<p>添加这些工具</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606162647896-1963337110.png" alt="" loading="lazy"></p>
<p>&nbsp;提示词如下：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">根据用户提供的数据选择相应的工具生成可视化图表。
展示图片的时候先给出图片的链接地址，后直接展示图片。
回复全部使用中文回答。</span></pre>
</div>
<p>&nbsp;</p>
<p>最终效果如下：</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606162814237-1800180252.png" alt="" loading="lazy"></p>
<p>注意确保有生成词云图</p>
<p>&nbsp;</p>
<p>默认只能添加10个工具，如果需要添加更多数量，需要修改dify环境变量</p>
<div class="cnblogs_code">
<pre>MAX_TOOLS_NUM=<span style="color: rgba(128, 0, 128, 1)">20</span></pre>
</div>
<p>重启dify所有组件，就可以添加20个工具了。</p>
<p>&nbsp;</p>
<p>直接加满</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606184533174-394662630.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p data-pid="IAwg4Zne">我们就可以随便用自然语言让大模型给出相应的图表了。</p>
<p data-pid="UdTkN_iu">我让它生成了一个《三体》小说的人物词云图。</p>
<p>&nbsp;</p>
<p>生成一个三体小说主要人物的词云图。至少列举出30个主要人物来。</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606162906135-649737033.png" alt="" loading="lazy"></p>
<p>插件不支持插入图片，手动打开图片：<a href="https://mdn.alipayobjects.com/one_clip/afts/img/3-8JSqF4yhUAAAAASXAAAAgAoEACAQFr/original" target="_blank" rel="noopener nofollow">https://mdn.alipayobjects.com/one_clip/afts/img/3-8JSqF4yhUAAAAASXAAAAgAoEACAQFr/original</a></p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606163005843-2133591351.jpg" alt="" width="1128" height="752"></p>
<p data-pid="VGqN5liv">当然了，你也可以在工作流中调用这些工具。</p>
<p data-pid="EaZNsrOr">和其他的生成图表的插件类似，给出对应的数据。</p>
<p data-pid="EaZNsrOr">&nbsp;</p>
<p data-pid="EaZNsrOr">不过，这个插件可以更方便的调整图表的大小。自定义图表的宽和高。</p>
<p data-pid="EaZNsrOr">点击设置</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606163122918-848086976.png" alt="" loading="lazy"></p>
<p>&nbsp;可以设置宽高</p>
<p><img src="https://img2024.cnblogs.com/blog/1341090/202506/1341090-20250606163139843-1111868580.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p data-pid="uDyYpZf4"><span style="color: rgba(0, 0, 0, 1)"><strong>这些“底层轮子”的不断涌现，无疑是一件大好事。</strong></span></p>
<p data-pid="gctJ95_E">它们让我们能够从繁琐的、重复性的底层技术实现中解放出来，更专注于业务逻辑本身，更聚焦于如何创造真正的价值。</p>
<p>&nbsp;</p>
<p>本文参考链接：https://zhuanlan.zhihu.com/p/1911538446977176761</p>
<p>&nbsp;</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.898858938712963" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-06-06 18:46">2025-06-06 16:33</span>&nbsp;
<a href="https://www.cnblogs.com/xiao987334176">肖祥</a>&nbsp;
阅读(<span id="post_view_count">239</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18912784);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18912784', targetLink: 'https://www.cnblogs.com/xiao987334176/p/18912784', title: 'dify打造数据可视化图表' })">举报</a>
</div>
        