
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Tomorrowland/p/18723309" title="发布于 2025-02-19 09:10">
    <span role="heading" aria-level="2">c++中bitset的常见用法</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>C++ 中的 <code>bitset</code> 是一个用于处理固定大小位序列的模板类，提供高效的位操作功能。以下是对其关键特性的详细介绍：</p>
<h3 id="1-声明与初始化">1. <strong>声明与初始化</strong></h3>
<ul>
<li><strong>头文件</strong>：需包含 <code>&lt;bitset&gt;</code>。</li>
<li><strong>声明</strong>：<code>bitset&lt;N&gt;</code> 表示一个包含 <code>N</code> 位的二进制集合（<code>N</code> 为编译时常量）。<pre><code class="language-cpp">bitset&lt;8&gt; b1;       // 默认初始化，所有位为0
bitset&lt;4&gt; b2(5);    // 用整数初始化：0101
bitset&lt;4&gt; b3("1010"); // 用字符串初始化：1010
bitset&lt;4&gt; b4(b3);   // 拷贝构造
</code></pre>
</li>
</ul>
<h3 id="2-初始化规则">2. <strong>初始化规则</strong></h3>
<ul>
<li><strong>整数初始化</strong>：高位截断，低位对齐。<pre><code class="language-cpp">bitset&lt;3&gt; b(10);    // 10的二进制为1010 → 截断为010（值为2）
</code></pre>
</li>
<li><strong>字符串初始化</strong>：
<ul>
<li>字符串只能包含 <code>'0'</code> 和 <code>'1'</code>。</li>
<li>默认从字符串的 <strong>左端（高位）</strong> 开始解析。</li>
</ul>
<pre><code class="language-cpp">bitset&lt;4&gt; b("1010"); // 高位 → 低位：1 0 1 0 → 十进制10
bitset&lt;4&gt; b("101010", 2, 4); // 从索引2取4位："1010" → 值为10
</code></pre>
</li>
</ul>
<h3 id="3-常用操作">3. <strong>常用操作</strong></h3>
<ul>
<li>
<p><strong>位访问</strong>：</p>
<ul>
<li><code>[]</code> 运算符：通过索引访问（从右到左，0为最低位）。</li>
<li><code>test(pos)</code>：检查指定位是否为1，越界抛出异常。</li>
</ul>
<pre><code class="language-cpp">bitset&lt;4&gt; b("1010");
bool bit0 = b[0];   // 0 → 最低位
bool bit3 = b[3];   // 1 → 最高位
</code></pre>
</li>
<li>
<p><strong>修改位</strong>：</p>
<ul>
<li><code>set(pos, val)</code>：设置某位（默认1）。</li>
<li><code>reset(pos)</code>：清除某位（设为0）。</li>
<li><code>flip(pos)</code>：翻转某位。</li>
</ul>
<pre><code class="language-cpp">b.set(0);       // 1010 → 1011
b.reset(3);     // 1011 → 0011
b.flip(1);      // 0011 → 0001
</code></pre>
</li>
<li>
<p><strong>统计与判断</strong>：</p>
<ul>
<li><code>count()</code>：返回1的个数。</li>
<li><code>any()/none()/all()</code>：判断是否存在/没有/全部为1。</li>
</ul>
<pre><code class="language-cpp">if (b.any()) cout &lt;&lt; "至少1位为1";
</code></pre>
</li>
</ul>
<h3 id="4-位运算">4. <strong>位运算</strong></h3>
<ul>
<li>支持 <code>&amp;</code>、<code>|</code>、<code>^</code>、<code>~</code>、<code>&lt;&lt;</code>、<code>&gt;&gt;</code> 等运算符（长度需相同）：<pre><code class="language-cpp">bitset&lt;4&gt; a("1010"), b("1100");
auto c = a &amp; b;     // 1000
auto d = a &lt;&lt; 1;    // 0100
</code></pre>
</li>
</ul>
<h3 id="5-类型转换">5. <strong>类型转换</strong></h3>
<ul>
<li><code>to_ulong()/to_ullong()</code>：转为无符号整数（可能溢出）。</li>
<li><code>to_string()</code>：转为字符串，可指定填充字符。<pre><code class="language-cpp">bitset&lt;4&gt; b(10);
string s = b.to_string(); // "1010"
</code></pre>
</li>
</ul>
<h3 id="6-应用场景">6. <strong>应用场景</strong></h3>
<ul>
<li>位标志管理：如权限控制、状态标记。</li>
<li>位掩码操作：快速筛选或修改特定位。</li>
<li>数据压缩：高效存储布尔值。</li>
</ul>
<h3 id="示例代码">示例代码</h3>
<pre><code class="language-cpp">#include &lt;bitset&gt;
#include &lt;iostream&gt;
using namespace std;

int main() {
    bitset&lt;8&gt; b1(42);          // 00101010
    bitset&lt;8&gt; b2("10101010");  // 10101010
    cout &lt;&lt; b1 &lt;&lt; endl;         // 输出 00101010
    b1.set(0);                 // 变为 00101011
    b2.flip();                 // 变为 01010101
    cout &lt;&lt; (b1 &amp; b2) &lt;&lt; endl; // 00000001
    cout &lt;&lt; b1.to_ulong() &lt;&lt; endl; // 43
    return 0;
}
</code></pre>
<h3 id="注意事项">注意事项</h3>
<ul>
<li><strong>越界访问</strong>：<code>test(pos)</code> 会检查越界，<code>[]</code> 不会。</li>
<li><strong>性能</strong>：位操作高效，适合密集运算。</li>
<li><strong>字符串顺序</strong>：字符串的第一个字符对应高位。</li>
</ul>
<p><code>bitset</code> 是处理二进制数据的利器，结合明确的位序规则和丰富的接口，可显著简化位级操作代码。</p>

</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.3795535483796296" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-02-19 09:10">2025-02-19 09:10</span>&nbsp;
<a href="https://www.cnblogs.com/Tomorrowland">Tomorrowland_D</a>&nbsp;
阅读(<span id="post_view_count">91</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18723309" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18723309);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18723309', targetLink: 'https://www.cnblogs.com/Tomorrowland/p/18723309', title: 'c++中bitset的常见用法' })">举报</a>
</div>
        