
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/LuoCore/p/18972388" title="发布于 2025-07-08 10:10">
    <span role="heading" aria-level="2">如何识别SQL Server中需要添加索引的查询</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h2>引言</h2>
<p>在数据库性能优化中，索引是提升查询速度最有效的手段之一。然而，不恰当的索引会降低写操作性能并增加存储开销。作为DBA，我们经常面临这样的挑战：如何精准定位哪些查询真正需要添加索引？ 本文将分享几种实用的T-SQL查询，帮助您科学识别缺失索引，并提供最佳实践指南。</p>
<h2>一、为什么需要索引优化？</h2>
<ul>
<li>
<p>性能瓶颈：全表扫描（Table Scan）可能导致简单查询耗时数秒</p>
</li>
<li>
<p>资源浪费：未使用索引的查询消耗额外CPU和I/O资源</p>
</li>
<li>
<p>隐性成本：缺失索引可能使关键业务操作延迟数倍</p>
</li>
</ul>
<blockquote>
<p>据统计，合理添加索引可使查询性能提升10-100倍（来源：Microsoft SQL Server性能调优白皮书）</p>
</blockquote>
<h2>二、核心诊断查询</h2>
<h3>1. 缺失索引自动生成脚本</h3>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">SELECT</span> <span style="color: rgba(0, 0, 255, 1)">TOP</span> <span style="color: rgba(128, 0, 0, 1); font-weight: bold">10</span>

   <span style="color: rgba(255, 0, 255, 1)">ROUND</span>(migs.avg_total_user_cost <span style="color: rgba(128, 128, 128, 1)">*</span> migs.avg_user_impact <span style="color: rgba(128, 128, 128, 1)">*</span> (migs.user_seeks <span style="color: rgba(128, 128, 128, 1)">+</span> migs.user_scans), <span style="color: rgba(128, 0, 0, 1); font-weight: bold">0</span>) <span style="color: rgba(0, 0, 255, 1)">AS</span><span style="color: rgba(0, 0, 0, 1)"> improvement_measure,

   </span><span style="color: rgba(255, 0, 255, 1)">DB_NAME</span>(mid.database_id) <span style="color: rgba(0, 0, 255, 1)">AS</span><span style="color: rgba(0, 0, 0, 1)"> database_name,

   </span><span style="color: rgba(255, 0, 255, 1)">OBJECT_NAME</span>(mid.<span style="color: rgba(255, 0, 255, 1)">object_id</span>) <span style="color: rgba(0, 0, 255, 1)">AS</span><span style="color: rgba(0, 0, 0, 1)"> table_name,

   </span><span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">CREATE INDEX [IX_</span><span style="color: rgba(255, 0, 0, 1)">'</span> <span style="color: rgba(128, 128, 128, 1)">+</span> <span style="color: rgba(255, 0, 255, 1)">OBJECT_NAME</span>(mid.<span style="color: rgba(255, 0, 255, 1)">object_id</span>) <span style="color: rgba(128, 128, 128, 1)">+</span> <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">_</span><span style="color: rgba(255, 0, 0, 1)">'</span>

       <span style="color: rgba(128, 128, 128, 1)">+</span> <span style="color: rgba(255, 0, 255, 1)">REPLACE</span>(<span style="color: rgba(255, 0, 255, 1)">REPLACE</span>(<span style="color: rgba(255, 0, 255, 1)">REPLACE</span>(<span style="color: rgba(255, 0, 255, 1)">ISNULL</span>(mid.equality_columns, <span style="color: rgba(255, 0, 0, 1)">''</span>), <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">, </span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">_</span><span style="color: rgba(255, 0, 0, 1)">'</span>), <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">[</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">''</span>), <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">]</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">''</span><span style="color: rgba(0, 0, 0, 1)">) 

       </span><span style="color: rgba(128, 128, 128, 1)">+</span> <span style="color: rgba(255, 0, 255, 1)">CASE</span> <span style="color: rgba(0, 0, 255, 1)">WHEN</span> mid.inequality_columns <span style="color: rgba(0, 0, 255, 1)">IS</span> <span style="color: rgba(128, 128, 128, 1)">NOT</span> <span style="color: rgba(0, 0, 255, 1)">NULL</span> <span style="color: rgba(0, 0, 255, 1)">THEN</span> <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">_</span><span style="color: rgba(255, 0, 0, 1)">'</span> <span style="color: rgba(128, 128, 128, 1)">+</span> <span style="color: rgba(255, 0, 255, 1)">REPLACE</span>(<span style="color: rgba(255, 0, 255, 1)">REPLACE</span>(<span style="color: rgba(255, 0, 255, 1)">REPLACE</span>(mid.inequality_columns, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">, </span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">_</span><span style="color: rgba(255, 0, 0, 1)">'</span>), <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">[</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">''</span>), <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">]</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">''</span>) <span style="color: rgba(0, 0, 255, 1)">ELSE</span> <span style="color: rgba(255, 0, 0, 1)">''</span> <span style="color: rgba(0, 0, 255, 1)">END</span> 

       <span style="color: rgba(128, 128, 128, 1)">+</span> <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">] ON </span><span style="color: rgba(255, 0, 0, 1)">'</span> <span style="color: rgba(128, 128, 128, 1)">+</span><span style="color: rgba(0, 0, 0, 1)"> mid.statement 

       </span><span style="color: rgba(128, 128, 128, 1)">+</span> <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)"> (</span><span style="color: rgba(255, 0, 0, 1)">'</span> <span style="color: rgba(128, 128, 128, 1)">+</span> <span style="color: rgba(255, 0, 255, 1)">ISNULL</span>(mid.equality_columns, <span style="color: rgba(255, 0, 0, 1)">''</span><span style="color: rgba(0, 0, 0, 1)">)

       </span><span style="color: rgba(128, 128, 128, 1)">+</span> <span style="color: rgba(255, 0, 255, 1)">CASE</span> <span style="color: rgba(0, 0, 255, 1)">WHEN</span> mid.equality_columns <span style="color: rgba(0, 0, 255, 1)">IS</span> <span style="color: rgba(128, 128, 128, 1)">NOT</span> <span style="color: rgba(0, 0, 255, 1)">NULL</span> <span style="color: rgba(128, 128, 128, 1)">AND</span> mid.inequality_columns <span style="color: rgba(0, 0, 255, 1)">IS</span> <span style="color: rgba(128, 128, 128, 1)">NOT</span> <span style="color: rgba(0, 0, 255, 1)">NULL</span> <span style="color: rgba(0, 0, 255, 1)">THEN</span> <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">,</span><span style="color: rgba(255, 0, 0, 1)">'</span> <span style="color: rgba(0, 0, 255, 1)">ELSE</span> <span style="color: rgba(255, 0, 0, 1)">''</span> <span style="color: rgba(0, 0, 255, 1)">END</span>

       <span style="color: rgba(128, 128, 128, 1)">+</span> <span style="color: rgba(255, 0, 255, 1)">ISNULL</span>(mid.inequality_columns, <span style="color: rgba(255, 0, 0, 1)">''</span>) <span style="color: rgba(128, 128, 128, 1)">+</span> <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">)</span><span style="color: rgba(255, 0, 0, 1)">'</span> 

       <span style="color: rgba(128, 128, 128, 1)">+</span> <span style="color: rgba(255, 0, 255, 1)">ISNULL</span>(<span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)"> INCLUDE (</span><span style="color: rgba(255, 0, 0, 1)">'</span> <span style="color: rgba(128, 128, 128, 1)">+</span> mid.included_columns <span style="color: rgba(128, 128, 128, 1)">+</span> <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">)</span><span style="color: rgba(255, 0, 0, 1)">'</span>, <span style="color: rgba(255, 0, 0, 1)">''</span>) <span style="color: rgba(0, 0, 255, 1)">AS</span><span style="color: rgba(0, 0, 0, 1)"> create_index_statement,

   migs.user_seeks </span><span style="color: rgba(0, 0, 255, 1)">AS</span><span style="color: rgba(0, 0, 0, 1)"> seek_operations,

   migs.avg_user_impact </span><span style="color: rgba(0, 0, 255, 1)">AS</span><span style="color: rgba(0, 0, 0, 1)"> improvement_percent

</span><span style="color: rgba(0, 0, 255, 1)">FROM</span> sys.dm_db_missing_index_group_stats <span style="color: rgba(0, 0, 255, 1)">AS</span><span style="color: rgba(0, 0, 0, 1)"> migs

</span><span style="color: rgba(0, 0, 255, 1)">INNER</span> <span style="color: rgba(128, 128, 128, 1)">JOIN</span> sys.dm_db_missing_index_groups <span style="color: rgba(0, 0, 255, 1)">AS</span><span style="color: rgba(0, 0, 0, 1)"> mig

   </span><span style="color: rgba(0, 0, 255, 1)">ON</span> migs.group_handle <span style="color: rgba(128, 128, 128, 1)">=</span><span style="color: rgba(0, 0, 0, 1)"> mig.index_group_handle

</span><span style="color: rgba(0, 0, 255, 1)">INNER</span> <span style="color: rgba(128, 128, 128, 1)">JOIN</span> sys.dm_db_missing_index_details <span style="color: rgba(0, 0, 255, 1)">AS</span><span style="color: rgba(0, 0, 0, 1)"> mid

   </span><span style="color: rgba(0, 0, 255, 1)">ON</span> mig.index_handle <span style="color: rgba(128, 128, 128, 1)">=</span><span style="color: rgba(0, 0, 0, 1)"> mid.index_handle

</span><span style="color: rgba(0, 0, 255, 1)">WHERE</span> mid.database_id <span style="color: rgba(128, 128, 128, 1)">=</span> <span style="color: rgba(255, 0, 255, 1)">DB_ID</span><span style="color: rgba(0, 0, 0, 1)">()

</span><span style="color: rgba(0, 0, 255, 1)">ORDER</span> <span style="color: rgba(0, 0, 255, 1)">BY</span> improvement_measure <span style="color: rgba(0, 0, 255, 1)">DESC</span>;</pre>
</div>
<p>&nbsp;</p>
<p>结果解读：</p>
<ul>
<li>
<p><code>improvement_measure</code>：综合改进指标（值越大优先级越高）</p>
</li>
<li>
<p><code>improvement_percent</code>：预估查询性能提升百分比</p>
</li>
<li>
<p><code>seek_operations</code>：该索引可能被使用的次数</p>
</li>
</ul>
<h3>2. 高开销扫描查询定位</h3>
<div class="cnblogs_Highlighter">
<pre class="brush:sql;gutter:true;">SELECT TOP 5

   qs.total_logical_reads / qs.execution_count AS avg_logical_reads,

   qs.execution_count,

   SUBSTRING(st.text, (qs.statement_start_offset/2) + 1,

       ((CASE qs.statement_end_offset

           WHEN -1 THEN DATALENGTH(st.text)

           ELSE qs.statement_end_offset

       END - qs.statement_start_offset)/2) + 1) AS query_text,

   qp.query_plan

FROM sys.dm_exec_query_stats AS qs

CROSS APPLY sys.dm_exec_sql_text(qs.sql_handle) AS st

CROSS APPLY sys.dm_exec_query_plan(qs.plan_handle) AS qp

WHERE qp.query_plan.exist('//RelOp[@PhysicalOp="Index Scan" or @PhysicalOp="Clustered Index Scan"]') = 1

ORDER BY avg_logical_reads DESC;
</pre>
</div>
<p>　　</p>
<p>关键指标：</p>
<ul>
<li>
<p><code>avg_logical_reads</code> &gt; 1000 表示严重I/O问题</p>
</li>
<li>
<p>执行计划中出现 <code>Index Scan</code> 警告</p>
</li>
</ul>
<h3>3. 未索引的热点列检测</h3>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">SELECT</span> <span style="color: rgba(0, 0, 255, 1)">TOP</span> <span style="color: rgba(128, 0, 0, 1); font-weight: bold">10</span><span style="color: rgba(0, 0, 0, 1)">

   t.name </span><span style="color: rgba(0, 0, 255, 1)">AS</span><span style="color: rgba(0, 0, 0, 1)"> TableName,

   c.name </span><span style="color: rgba(0, 0, 255, 1)">AS</span><span style="color: rgba(0, 0, 0, 1)"> ColumnName,

   </span><span style="color: rgba(255, 0, 255, 1)">SUM</span>(us.user_scans) <span style="color: rgba(0, 0, 255, 1)">AS</span><span style="color: rgba(0, 0, 0, 1)"> total_scans

</span><span style="color: rgba(0, 0, 255, 1)">FROM</span><span style="color: rgba(0, 0, 0, 1)"> sys.tables t

</span><span style="color: rgba(128, 128, 128, 1)">JOIN</span> sys.columns c <span style="color: rgba(0, 0, 255, 1)">ON</span> t.<span style="color: rgba(255, 0, 255, 1)">object_id</span> <span style="color: rgba(128, 128, 128, 1)">=</span> c.<span style="color: rgba(255, 0, 255, 1)">object_id</span>

<span style="color: rgba(128, 128, 128, 1)">LEFT</span> <span style="color: rgba(128, 128, 128, 1)">JOIN</span><span style="color: rgba(0, 0, 0, 1)"> sys.index_columns ic 

   </span><span style="color: rgba(0, 0, 255, 1)">ON</span> ic.<span style="color: rgba(255, 0, 255, 1)">object_id</span> <span style="color: rgba(128, 128, 128, 1)">=</span> t.<span style="color: rgba(255, 0, 255, 1)">object_id</span> <span style="color: rgba(128, 128, 128, 1)">AND</span> ic.column_id <span style="color: rgba(128, 128, 128, 1)">=</span><span style="color: rgba(0, 0, 0, 1)"> c.column_id

</span><span style="color: rgba(128, 128, 128, 1)">LEFT</span> <span style="color: rgba(128, 128, 128, 1)">JOIN</span> sys.indexes i <span style="color: rgba(0, 0, 255, 1)">ON</span> i.<span style="color: rgba(255, 0, 255, 1)">object_id</span> <span style="color: rgba(128, 128, 128, 1)">=</span> t.<span style="color: rgba(255, 0, 255, 1)">object_id</span> <span style="color: rgba(128, 128, 128, 1)">AND</span> i.index_id <span style="color: rgba(128, 128, 128, 1)">=</span><span style="color: rgba(0, 0, 0, 1)"> ic.index_id

</span><span style="color: rgba(128, 128, 128, 1)">LEFT</span> <span style="color: rgba(128, 128, 128, 1)">JOIN</span> sys.dm_db_index_usage_stats us <span style="color: rgba(0, 0, 255, 1)">ON</span> us.<span style="color: rgba(255, 0, 255, 1)">object_id</span> <span style="color: rgba(128, 128, 128, 1)">=</span> t.<span style="color: rgba(255, 0, 255, 1)">object_id</span> <span style="color: rgba(128, 128, 128, 1)">AND</span> us.index_id <span style="color: rgba(128, 128, 128, 1)">=</span><span style="color: rgba(0, 0, 0, 1)"> i.index_id

</span><span style="color: rgba(0, 0, 255, 1)">WHERE</span> i.index_id <span style="color: rgba(0, 0, 255, 1)">IS</span> <span style="color: rgba(0, 0, 255, 1)">NULL</span>  <span style="color: rgba(0, 128, 128, 1)">--</span><span style="color: rgba(0, 128, 128, 1)"> 无索引列</span>

   <span style="color: rgba(128, 128, 128, 1)">AND</span> us.user_scans <span style="color: rgba(128, 128, 128, 1)">&gt;</span> <span style="color: rgba(128, 0, 0, 1); font-weight: bold">0</span>

<span style="color: rgba(0, 0, 255, 1)">GROUP</span> <span style="color: rgba(0, 0, 255, 1)">BY</span><span style="color: rgba(0, 0, 0, 1)"> t.name, c.name

</span><span style="color: rgba(0, 0, 255, 1)">ORDER</span> <span style="color: rgba(0, 0, 255, 1)">BY</span> total_scans <span style="color: rgba(0, 0, 255, 1)">DESC</span>;</pre>
</div>
<p>&nbsp;</p>
<h2>三、索引创建黄金法则</h2>
<h3>1. 索引设计原则</h3>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 128, 1)">--</span><span style="color: rgba(0, 128, 128, 1)"> 标准结构</span>

<span style="color: rgba(0, 0, 255, 1)">CREATE</span> <span style="color: rgba(0, 0, 255, 1)">INDEX</span><span style="color: rgba(0, 0, 0, 1)"> IX_Table_KeyColumns

</span><span style="color: rgba(0, 0, 255, 1)">ON</span> dbo.<span style="color: rgba(0, 0, 255, 1)">Table</span> (Column1 <span style="color: rgba(0, 0, 255, 1)">ASC</span>, Column2 <span style="color: rgba(0, 0, 255, 1)">DESC</span><span style="color: rgba(0, 0, 0, 1)">)

INCLUDE (Column3, Column4)

</span><span style="color: rgba(0, 0, 255, 1)">WITH</span> (<span style="color: rgba(0, 0, 255, 1)">FILLFACTOR</span> <span style="color: rgba(128, 128, 128, 1)">=</span> <span style="color: rgba(128, 0, 0, 1); font-weight: bold">90</span>); <span style="color: rgba(0, 128, 128, 1)">--</span><span style="color: rgba(0, 128, 128, 1)"> 针对频繁更新表</span>

<span style="color: rgba(0, 128, 128, 1)">--</span><span style="color: rgba(0, 128, 128, 1)"> 筛选索引（针对热点数据）</span>

<span style="color: rgba(0, 0, 255, 1)">CREATE</span> <span style="color: rgba(0, 0, 255, 1)">INDEX</span><span style="color: rgba(0, 0, 0, 1)"> IX_Orders_Active

</span><span style="color: rgba(0, 0, 255, 1)">ON</span><span style="color: rgba(0, 0, 0, 1)"> dbo.Orders (OrderDate)

</span><span style="color: rgba(0, 0, 255, 1)">WHERE</span> Status <span style="color: rgba(128, 128, 128, 1)">=</span> <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">Processing</span><span style="color: rgba(255, 0, 0, 1)">'</span>;</pre>
</div>
<p>&nbsp;</p>
<h3>2. 四要四不要</h3>
<p>| 该做的 | 避免的 |</p>
<p>|---------------------------|--------------------------|</p>
<p>| 优先选择高选择性列 | 在bit类型列建索引 |</p>
<p>| INCLUDED列放常用查询字段 | 创建重复功能索引 |</p>
<p>| 定期重建碎片率&gt;30%的索引 | 盲目接受所有系统建议 |</p>
<p>| 测试环境验证性能提升 | 在生产环境直接创建索引 |</p>
<h2>四、高级技巧</h2>
<h3>1. 索引使用监控</h3>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">SELECT</span> 

   <span style="color: rgba(255, 0, 255, 1)">OBJECT_NAME</span>(ix.<span style="color: rgba(255, 0, 255, 1)">object_id</span>) <span style="color: rgba(0, 0, 255, 1)">AS</span><span style="color: rgba(0, 0, 0, 1)"> TableName,

   ix.name </span><span style="color: rgba(0, 0, 255, 1)">AS</span><span style="color: rgba(0, 0, 0, 1)"> IndexName,

   ix.type_desc </span><span style="color: rgba(0, 0, 255, 1)">AS</span><span style="color: rgba(0, 0, 0, 1)"> IndexType,

   us.user_seeks,

   us.user_scans,

   us.user_lookups,

   us.user_updates

</span><span style="color: rgba(0, 0, 255, 1)">FROM</span><span style="color: rgba(0, 0, 0, 1)"> sys.dm_db_index_usage_stats us

</span><span style="color: rgba(128, 128, 128, 1)">JOIN</span> sys.indexes ix <span style="color: rgba(0, 0, 255, 1)">ON</span> us.<span style="color: rgba(255, 0, 255, 1)">object_id</span> <span style="color: rgba(128, 128, 128, 1)">=</span> ix.<span style="color: rgba(255, 0, 255, 1)">object_id</span> <span style="color: rgba(128, 128, 128, 1)">AND</span> us.index_id <span style="color: rgba(128, 128, 128, 1)">=</span><span style="color: rgba(0, 0, 0, 1)"> ix.index_id

</span><span style="color: rgba(0, 0, 255, 1)">WHERE</span> us.database_id <span style="color: rgba(128, 128, 128, 1)">=</span> <span style="color: rgba(255, 0, 255, 1)">DB_ID</span><span style="color: rgba(0, 0, 0, 1)">()

   </span><span style="color: rgba(128, 128, 128, 1)">AND</span> <span style="color: rgba(255, 0, 255, 1)">OBJECTPROPERTY</span>(us.<span style="color: rgba(255, 0, 255, 1)">object_id</span>, <span style="color: rgba(255, 0, 0, 1)">'</span><span style="color: rgba(255, 0, 0, 1)">IsUserTable</span><span style="color: rgba(255, 0, 0, 1)">'</span>) <span style="color: rgba(128, 128, 128, 1)">=</span> <span style="color: rgba(128, 0, 0, 1); font-weight: bold">1</span>;</pre>
</div>
<p>&nbsp;</p>
<p>决策依据：</p>
<ul>
<li>
<p><code>user_updates</code> &gt; 10 * (<code>user_seeks</code> + <code>user_scans</code>) → 考虑删除索引</p>
</li>
<li>
<p><code>user_lookups</code> 过高 → 需要优化INCLUDED列</p>
</li>
</ul>
<h3>2. 查询存储深度分析（SQL Server 2016+）</h3>
<div class="cnblogs_Highlighter">
<pre class="brush:sql;gutter:true;">SELECT 

   q.query_id,

   t.query_sql_text,

   rs.avg_duration,

   rs.avg_logical_io_reads,

   p.query_plan

FROM sys.query_store_query q

JOIN sys.query_store_query_text t ON q.query_text_id = t.query_text_id

JOIN sys.query_store_plan p ON q.query_id = p.query_id

JOIN sys.query_store_runtime_stats rs ON p.plan_id = rs.plan_id

WHERE rs.last_execution_time &gt; DATEADD(DAY, -7, GETDATE())

ORDER BY rs.avg_logical_io_reads DESC;
</pre>
</div>
<p>　　</p>
<h2>五、避坑指南</h2>
<ol>
<li>
<p>索引覆盖陷阱：包含过多INCLUDED列会显著增大索引体积</p>
</li>
<li>
<p>参数嗅探问题：使用<code>OPTION(RECOMPILE)</code>解决参数敏感查询</p>
</li>
<li>
<p>锁升级风险：单索引超过8KB可能引发锁升级</p>
</li>
<li>
<p>统计信息滞后：开启<code>AUTO_UPDATE_STATISTICS_ASYNC</code></p>
</li>
</ol>
<h2>结语</h2>
<p>精准的索引优化需要持续监控和迭代调整。建议每周运行一次诊断查询，重点关注：</p>
<ul>
<li>
<p>改进潜力(improvement_measure) &gt; 100,000 的索引</p>
</li>
<li>
<p>逻辑读取(avg_logical_reads) &gt; 5000 的查询</p>
</li>
<li>
<p>扫描次数(total_scans) &gt; 10,000 的热点列</p>
</li>
</ul>
<hr>
<p>附录工具推荐：</p>
<ol>
<li>
<p><a href="https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit" rel="noopener nofollow" target="_blank">sp_BlitzIndex</a> - 索引分析神器</p>
</li>
<li>
<p>Database Engine Tuning Advisor - 微软官方调优工具</p>
</li>
<li>
<p>SolarWinds DPA - 商业级性能监控平台</p>
</li>
</ol>
<p>通过科学诊断和谨慎实施，您可以将查询性能提升300%以上！欢迎在评论区分享您的索引优化实战经验。</p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0" data-date-updated="2025-07-08 10:10">2025-07-08 10:10</span>&nbsp;
<a href="https://www.cnblogs.com/LuoCore">LuoCore</a>&nbsp;
阅读(<span id="post_view_count">108</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18972388);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18972388', targetLink: 'https://www.cnblogs.com/LuoCore/p/18972388', title: '如何识别SQL Server中需要添加索引的查询' })">举报</a>
</div>
        