
		<h1 class="postTitle">
			<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chingho/p/18642994" title="发布于 2024-12-31 08:31">
    <span role="heading" aria-level="2">ImageSharp：高性能跨平台.NET开源图形库</span>
    

</a>

		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>在.Net中，System.Drawing有平台限制的问题，如果需要跨平台就需要使用第三方库。</p>
<p>今天推荐一个.NET开源图形库，不依赖任何库，支持跨平台的图形库。</p>
<h1 id="01-项目简介">01 项目简介</h1>
<p>ImageSharp是一款完全托管的代码库，高性能、跨平台的图形库。它支持在任何支持.NET 6+的环境中安装和使用，可以运用在各种场景：设备端，云端以及嵌入式和物联网等。</p>
<p>ImageSharp功能非常丰富，使用简单，常见的操作只需几行代码就可以完成。它支持jpeg、bmp、gif、pbm、png、tga、tiff、webp和qoi等多种图像格式。</p>
<p>同时ImageSharp支持超过25种不同的像素格式，并支持对元数据编辑（如IPTC EXIF、XMP）和色彩空间转换（如RGB、CMYK、灰度、CIELab等）功能。</p>
<p>此外，它还提供了超过40种常见的图像处理操作，性能出色且内存友好，能够处理任何尺寸的图像，包括数百万像素的大图。</p>
<h1 id="02-使用方法">02 使用方法</h1>
<p><strong>1、安装依赖库</strong></p>
<pre><code> Install-Package SixLabors.ImageSharp
</code></pre>
<p><strong>2、调整图像大小</strong></p>
<pre><code>using SixLabors.ImageSharp;
using SixLabors.ImageSharp.PixelFormats;
using SixLabors.ImageSharp.Processing;

// 加载图像  
using (var image = Image.Load&lt;Rgba32&gt;("demo.jpg"))
{
    // 调整图像大小  
    image.Mutate(x =&gt; x.Resize(100, 100));

    // 保存调整大小后的图像  
    image.SaveAsJpeg("resized_image.jpg");
}
</code></pre>
<p><strong>3、应用滤镜（例如灰度效果）</strong></p>
<pre><code>using SixLabors.ImageSharp;
using SixLabors.ImageSharp.PixelFormats;
using SixLabors.ImageSharp.Processing;

// 加载图像  
using (var image = Image.Load&lt;Rgba32&gt;("demo.jpg"))
{
    // 应用灰度滤镜  
    image.Mutate(x =&gt; x.Grayscale());

    // 保存应用滤镜后的图像  
    image.SaveAsJpeg("grayscale_image.jpg");
}
</code></pre>
<p><strong>4、裁剪图像</strong></p>
<pre><code>using SixLabors.ImageSharp;
using SixLabors.ImageSharp.PixelFormats;
using SixLabors.ImageSharp.Processing;

// 加载图像  
using (var image = Image.Load&lt;Rgba32&gt;("demo.jpg"))
{
    // 裁剪图像  
    var rectangle = new Rectangle(100, 100, 200, 200); // x, y, width, height  
    image.Mutate(x =&gt; x.Crop(rectangle));

    // 保存裁剪后的图像  
    image.SaveAsJpeg("cropped_image.jpg");
}
</code></pre>
<p><strong>5、旋转图像</strong></p>
<pre><code>using SixLabors.ImageSharp;
using SixLabors.ImageSharp.PixelFormats;
using SixLabors.ImageSharp.Processing;

// 加载图像  
using (var image = Image.Load&lt;Rgba32&gt;("demo.jpg"))
{
    // 旋转图像 90 度  
    image.Mutate(x =&gt; x.Rotate(90));

    // 保存旋转后的图像  
    image.SaveAsJpeg("rotated_image.jpg");
}
</code></pre>
<p><strong>6、绘制文字图形</strong></p>
<pre><code>using SixLabors.Fonts;
using SixLabors.ImageSharp;
using SixLabors.ImageSharp.Drawing.Processing;
using SixLabors.ImageSharp.Formats.Png;
using SixLabors.ImageSharp.PixelFormats;
using SixLabors.ImageSharp.Processing;
using System.Numerics;

// 加载字体文件  
var fontCollection = new FontCollection();
fontCollection.Add("C:\\Windows\\Fonts\\STZHONGS.TTF"); // 替换为您的字体文件路径  
var fontFamily = fontCollection.Get("STZhongsong"); // 替换为字体名称  
var font = fontFamily.CreateFont(size: 20); // 设置字体大小  

// 创建一个新的空白图像  
var image = new Image&lt;Rgba32&gt;(100, 100);

// 设置背景色为白色  
image.Mutate(x =&gt; x.Fill(Color.White));

// 使用ImageSharp的Drawing库来绘制文本  
image.Mutate(ctx =&gt; ctx
    .DrawText(
        "7788", // 要绘制的文本  
        font, // 使用的字体  
        Color.Black, // 文本颜色  
        new Vector2(10, 10)) // 文本开始绘制的位置  
);

// 保存图像  
image.SaveAsPng("image_with_text.png", new PngEncoder());
</code></pre>
<h1 id="03-项目地址">03 项目地址</h1>
<p><a href="https://github.com/SixLabors/ImageSharp" target="_blank" rel="noopener nofollow">https://github.com/SixLabors/ImageSharp</a></p>
<p><strong>更多开源项目：</strong>  <a href="https://github.com/bianchenglequ/NetCodeTop" target="_blank" rel="noopener nofollow">https://github.com/bianchenglequ/NetCodeTop</a></p>
<p>- End -</p>
<p>推荐阅读</p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5MDE5MDM5NA==&amp;mid=2449944741&amp;idx=1&amp;sn=d4340f322106b427c28fca250284e7ba&amp;chksm=b1bb0ef086cc87e6db71b39e13715b3081040b5ea1a72dd11c6020fef486e00190dbb9dad3fe&amp;scene=21#wechat_redirect" target="_blank" rel="noopener nofollow">Eval-Expression.NET：动态执行C#脚本，类似Javascript的Eval函数功能</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5MDE5MDM5NA==&amp;mid=2449944700&amp;idx=1&amp;sn=6da1d848e8dbb6fdfdb3f3c0971862ea&amp;chksm=b1bb0e2986cc873f1f10044d728b414979b51ef8b1fc179035cd0943d9ab0d3e7dad09ab1a45&amp;scene=21#wechat_redirect" target="_blank" rel="noopener nofollow">一个C#开源工具库，集成了超过1000个扩展方法</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5MDE5MDM5NA==&amp;mid=2449944662&amp;idx=1&amp;sn=2104aa4536863249d89c925d0d4f15f4&amp;chksm=b1bb0e0386cc8715e0baf3efec27cdc854e3801c6b11425eae2e67d469d95c6e10925581330b&amp;scene=21#wechat_redirect" target="_blank" rel="noopener nofollow">Plotly.NET：一个强大的、漂亮的.NET开源交互式图表库</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5MDE5MDM5NA==&amp;mid=2449944619&amp;idx=1&amp;sn=ea423df5559365fb585741da009d2537&amp;chksm=b1bb0e7e86cc876833ac2b088811eaca29161cc2544f51f8d4b0c3703f72e774de2eb9d973dd&amp;scene=21#wechat_redirect" target="_blank" rel="noopener nofollow">一个基于.Net的SVG图形开源操作库</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5MDE5MDM5NA==&amp;mid=2449944587&amp;idx=1&amp;sn=107ed6180f92f41b5509d7e883c57860&amp;chksm=b1bb0e5e86cc87485634703964a9fe2caff95e71226c3c3eb3d7ca8d7e1586fa6173d1bed000&amp;scene=21#wechat_redirect" target="_blank" rel="noopener nofollow">OxyPlot：一个功能强大、漂亮.Net跨平台开源绘图库</a></p>

</div>
<div class="clear"></div>

		</div>
		<div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.02219975533564815" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2024-12-31 08:31">2024-12-31 08:31</span>&nbsp;
<a href="https://www.cnblogs.com/chingho">chingho</a>&nbsp;
阅读(<span id="post_view_count">89</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18642994" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18642994);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18642994', targetLink: 'https://www.cnblogs.com/chingho/p/18642994', title: 'ImageSharp：高性能跨平台.NET开源图形库' })">举报</a>
</div>
	