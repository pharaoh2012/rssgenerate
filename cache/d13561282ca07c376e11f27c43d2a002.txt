
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/zhaoweiwei/p/18986211/wsl" title="发布于 2025-07-16 16:34">
    <span role="heading" aria-level="2">WSL初探</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        
        本文详细介绍windows下Linux子系统WSL的安装方式及主要命令，最后讲解了下如何在WSL子系统下使用主机中的GPU显卡。
    </div>
<div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h1>1 简介</h1>
<p>WSL（<span class="cosd-markdown-research cos-color-text-link cos-space-mr-3xs">&nbsp;Windows Subsystem for Linux<span class="cos-icon cos-icon-research cosd-markdown-research-icon">&nbsp;）是微软开发的兼容层，允许在<span class="cosd-markdown-research cos-color-text-link cos-space-mr-3xs">&nbsp;Windows 10<span class="cos-icon cos-icon-research cosd-markdown-research-icon">&nbsp;及更高版本上运行原生Linux二进制文件（如<span class="cosd-markdown-research cos-color-text-link cos-space-mr-3xs">&nbsp;Ubuntu<span class="cos-icon cos-icon-research cosd-markdown-research-icon">&nbsp;、<span class="cosd-markdown-research cos-color-text-link cos-space-mr-3xs">&nbsp;Debian<span class="cos-icon cos-icon-research cosd-markdown-research-icon">&nbsp;等发行版），无需传统虚拟机或双系统。</span></span></span></span></span></span></span></span></p>
<p>核心功能</p>
<p><strong>‌原生兼容‌</strong>：直接运行Linux命令行工具（如Bash），无需修改或额外安装X服务器。 ‌<br><strong>‌性能优化‌</strong>：WSL 2 支持窗口化运行Linux桌面应用，并优化内存管理。 ‌<br><strong>‌开发便捷‌</strong>：适用于Linux的Windows子系统可简化跨平台开发环境配置。</p>
<h2> ‌1.1&nbsp;‌WSL1与WSL2</h2>
<p>‌WSL1与WSL2的核心区别如下‌：</p>
<p><strong>‌内核与系统调用支持‌</strong></p>
<p>‌WSL1‌：基于动态翻译层，将Linux系统调用转换为Windows NT调用，没有真正的Linux内核。因此不支持需要完整系统调用兼容性的应用（如Docker），且部分系统功能（如systemd）不可用。‌<br>‌WSL2‌：运行在Hyper-V虚拟机中，包含完整的Linux内核（如Ubuntu内核），支持完整的系统调用兼容性（如systemd、Docker等），性能更接近原生Linux环境。‌</p>
<p><strong>‌性能表现‌</strong></p>
<p>‌文件系统集成‌：WSL2在跨操作系统文件操作时性能显著提升，而WSL1可能存在延迟和性能瓶颈（例如读写NTFS文件系统的额外开销）。‌</p>
<p>‌资源占用‌：两者启动时间和资源占用相近（WSL2因虚拟化技术可能略高），但WSL2在处理大规模文件操作时更优。‌</p>
<p><strong>‌适用场景‌</strong></p>
<p>‌WSL1‌：适合仅需轻量级命令行工具或无需完整Linux内核功能的场景（如脚本开发）。‌<br>‌WSL2‌：推荐用于容器化应用（如Docker）、图形界面应用或需要完整Linux生态支持的复杂开发环境。‌</p>
<p>‌注意事项‌：WSL2仅支持Windows 10版本1903版本18362或更高版本中可用（通过选择 Windows 徽标键 + R 来检查 Windows 版本，键入 winver，选择“确定”），WSL1支持范围更广但功能受限。‌对于低于 14393 的版本，WSL 根本不支持。下表列出了两种版本的主要特性对比。</p>
<p><img src="https://img2024.cnblogs.com/blog/465567/202507/465567-20250715184422603-1873508560.png" alt="" width="637" height="316" loading="lazy" style="display: block; margin-left: auto; margin-right: auto"></p>
<p>在Windows 10上如果默认版本是WSL1，可以手动下载更新包对其升级，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/465567/202507/465567-20250715190548645-625029143.png" alt="" width="674" height="467" loading="lazy" style="display: block; margin-left: auto; margin-right: auto"></p>
<p>&nbsp;升级完成后可通过“wsl --set-default-version 2”命令，将wsl2设置为默认版本，更详细内容请查阅<a href="https://learn.microsoft.com/zh-cn/windows/wsl/" target="_blank" rel="noopener nofollow">Windows学习文档</a>。</p>
<h2>1.2 常见命令</h2>
<p>wsl --help：显示帮助信息。</p>
<p>wsl --list：列出当前安装的虚拟机，如果在命令后面增加<span class="hljs-parameter"><span class="hljs-parameter">--verbose选项，还可以显示安装虚拟机wsl版本信息。</span></span></p>
<p><span class="hljs-parameter"><span class="hljs-parameter">wsl --list --online：列出可用的Linux分发版。</span></span></p>
<p><img src="https://img2024.cnblogs.com/blog/465567/202507/465567-20250716110524700-2101360838.png" alt="" width="301" height="179" loading="lazy" style="display: block; margin-left: auto; margin-right: auto"></p>
<p>wsl --install：安装WSL和Linux的默认Ubuntu分发版，还可以使用此命令通过运行wsl --install &lt;Distribution Name&gt;来安装其他 Linux 分发版（如果在 Windows 10 或更早版本上运行 WSL，则可能需要将-d标志包含在命令中--install以指定分发版： wsl --install -d &lt;distribution name&gt;）。</p>
<p>wsl --set-version：后面跟参数&lt;Distribution Name&gt; &lt;Version Number&gt;，表示设置相应Linux 发行版安装的WSL版本。</p>
<p>wsl --set-default：后面跟参数&lt;Distribution Name&gt;来设置默认版本。</p>
<p>wsl --update：更新wsl。</p>
<p>wsl --status：检查wsl状态。</p>
<p>wsl --export：后面跟参数&lt;Distribution Name&gt; &lt;FileName&gt;将指定分发的快照导出为新的分发文件， 默认为tar格式。&nbsp;</p>
<p>wsl --import：后面跟参数&lt;Distribution Name&gt; &lt;InstallLocation&gt; &lt;FileName&gt;将指定的tar文件导入为新的分发版。</p>
<p>wsl --unregister：后面跟参数&lt;DistributionName&gt;注销或卸载Linux分发版。</p>
<p>wsl --mount：后面跟参数&lt;DiskPath&gt;装载磁盘或设备。</p>
<p>wsl --unmount：后面跟参数&lt;DiskPath&gt;卸载磁盘。</p>
<p>wsl hostname -I：返回通过 WSL 2 安装的 Linux 分发版的 IP 地址（WSL 2 VM 地址）。</p>
<p>ip route show | grep -i default | awk '{ print $3}'：返回从WSL 2（WSL 2 VM）中看到的Windows计算机的IP地址（该命令在虚拟机中运行）。</p>
<h1>2 安装Linux发行版本</h1>
<h2>2.1 启用Hyper-V及相关项</h2>
<p>打开【控制面板】→【程序】→【启用或关闭 Windows 功能】。</p>
<p>勾选Hyper-V、虚拟机平台、适用于 Linux 的 Windows 子系统。</p>
<p>点击确定后，重启计算机。</p>
<p><img src="https://img2024.cnblogs.com/blog/465567/202507/465567-20250716111503351-551280241.png" alt="" width="556" height="542" loading="lazy" style="display: block; margin-left: auto; margin-right: auto"></p>
<p>Hyper-V 预安装在 Windows 11专业版、企业版和教育版中，只需启用即可。但是，在其他版本（如 Windows 11 家庭版）中，缺少启用 Hyper-V 的选项，下面介绍一种方法可以在 Windows 11 家庭版上安装和启用 Hyper-V。</p>
<p>复制以下代码存为<span class="nolink">hyper-v.bat：</span></p>
<div class="cnblogs_code">
<pre>pushd <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">%~dp0</span><span style="color: rgba(128, 0, 0, 1)">"</span>
<span style="color: rgba(0, 0, 255, 1)">dir</span> /b %SystemRoot%\servicing\Packages\*Hyper-V*.mum &gt;hyper-<span style="color: rgba(0, 0, 0, 1)">v.txt
</span><span style="color: rgba(0, 0, 255, 1)">for</span> /f %%i <span style="color: rgba(0, 0, 255, 1)">in</span> (<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">findstr /i . hyper-v.txt 2^&gt;nul</span><span style="color: rgba(128, 0, 0, 1)">'</span>) <span style="color: rgba(0, 0, 255, 1)">do</span> dism /online /norestart /add-package:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">%SystemRoot%\servicing\Packages\%%i</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
del hyper</span>-<span style="color: rgba(0, 0, 0, 1)">v.txt
Dism </span>/online /enable-feature /featurename:Microsoft-Hyper-V-All /LimitAccess /ALL</pre>
</div>
<p>右键该文件以管理员运行该程序，并且按照提示输入Y，重启电脑，这个时候，就会发现有了Hyper-V。</p>
<h2>2.2 安装Linux发行版</h2>
<h3>2.2.1 命令行安装</h3>
<p>运行“wsl --install”即可安装默认版本，如下图所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/465567/202507/465567-20250716113245989-960156534.png" alt="" width="525" height="310" loading="lazy" style="display: block; margin-left: auto; margin-right: auto"></p>
<p>没用使用最新的版本，又使用“wsl --install Ubuntu-22.04”命令安装早期版本Ubuntu22。</p>
<h3>2.2.2 离线安装</h3>
<p>1 前往<a href="https://aka.ms/wslubuntu2204" target="_blank" rel="noopener nofollow">https://aka.ms/wslubuntu2204</a>，下载<a href="https://wslstorestorage.blob.core.windows.net/wslblob/Ubuntu2204-221101.AppxBundle" target="_blank" rel="noopener nofollow">Ubuntu2204-221101.AppxBundle</a>，将下载的文件保存到本地路径，如C:\wsl。</p>
<p>2 以管理员权限打开PowerShell，cd到C:\wsl目录，直接运行“Add-AppxPackage .\Ubuntu2204-221101.AppxBundle”进行安装。</p>
<h3>2.2.3 安装路径</h3>
<p>Ubuntu 默认安装的位置是：C:\Users\&lt;你的用户名&gt;\AppData\Local\Packages\CanonicalGroupLimited.UbuntuonXXX_&lt;随机字符串&gt;\</p>
<p><img src="https://img2024.cnblogs.com/blog/465567/202507/465567-20250716121504887-266009006.png" alt="" width="760" height="296" loading="lazy" style="display: block; margin-left: auto; margin-right: auto"></p>
<p>LocalState\ext4.vhdx是Ubuntu根文件系统的虚拟磁盘。<br>LocalState\目录下还包含元数据等配置。<br>你无法从Windows 文件系统中直接编辑Ubuntu的Linux 路径（如 /home/），但是可以通过在资源管理器打开\\wsl$路径来访问Linux文件系统：</p>
<p><img src="https://img2024.cnblogs.com/blog/465567/202507/465567-20250716122232640-1140995845.png" alt="" width="457" height="421" loading="lazy" style="display: block; margin-left: auto; margin-right: auto"></p>
<h3>2.2.4 更改安装位置</h3>
<p>默认的wsl --install命令不会让你选择目录，需要使用导出+导入的方法来自定义安装路径。</p>
<p>首先，使用如下命令导出安装实例镜像</p>
<div class="cnblogs_code">
<pre>wsl --export Ubuntu D:\WSL\ubuntu_backup.<span style="color: rgba(0, 0, 255, 1)">tar</span></pre>
</div>
<p>其次，注销原来的 Ubuntu（可选，如果你想完全搬家并删除原始安装，会永久删除原来的实例，包括你安装的软件、数据等，导出后请确保备份）。</p>
<div class="cnblogs_code">
<pre>wsl --unregister Ubuntu</pre>
</div>
<p>之后，导入到新目录（你指定的位置）</p>
<div class="cnblogs_code">
<pre>wsl --import Ubuntu_Custom D:\WSL\UbuntuCustom D:\WSL\ubuntu_backup.<span style="color: rgba(0, 0, 255, 1)">tar</span> --version <span style="color: rgba(128, 0, 128, 1)">2</span></pre>
</div>
<p>最后，你可以用如下方式运行你的自定义实例：</p>
<div class="cnblogs_code">
<pre>wsl -d Ubuntu_Custom</pre>
</div>
<p>也可以设置默认 WSL：</p>
<div class="cnblogs_code">
<pre>wsl --set-default Ubuntu_Custom</pre>
</div>
<h1>3 使用windows上的cuda</h1>
<p>windows上版本cuda驱动要安装好，在当前笔记本中显卡为NVIDIA GeForce RTX 4060 Laptop GPU，其他详细信息如下所示：</p>
<p><img src="https://img2024.cnblogs.com/blog/465567/202507/465567-20250716160852603-549761016.png" alt="" width="625" height="452" loading="lazy" style="display: block; margin-left: auto; margin-right: auto"></p>
<p>&nbsp;需在在wsl下Ubuntu中安装相版本的cuda-tookit，安装步骤如下：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">wget</span> https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">developer.download.nvidia.com/compute/cuda/repos/wsl-ubuntu/x86_64/cuda-wsl-ubuntu.pin</span>
<span style="color: rgba(0, 0, 255, 1)">sudo</span> <span style="color: rgba(0, 0, 255, 1)">mv</span> cuda-wsl-ubuntu.pin /etc/apt/preferences.d/cuda-repository-pin-<span style="color: rgba(128, 0, 128, 1)">600</span>
<span style="color: rgba(0, 0, 255, 1)">wget</span> https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">developer.download.nvidia.com/compute/cuda/12.8.0/local_installers/cuda-repo-wsl-ubuntu-12-8-local_12.8.0-1_amd64.deb</span>
<span style="color: rgba(0, 0, 255, 1)">sudo</span> dpkg -i cuda-repo-wsl-ubuntu-<span style="color: rgba(128, 0, 128, 1)">12</span>-<span style="color: rgba(128, 0, 128, 1)">8</span>-local_12.<span style="color: rgba(128, 0, 128, 1)">8.0</span>-<span style="color: rgba(0, 0, 0, 1)">1_amd64.deb
</span><span style="color: rgba(0, 0, 255, 1)">sudo</span> <span style="color: rgba(0, 0, 255, 1)">cp</span> /var/cuda-repo-wsl-ubuntu-<span style="color: rgba(128, 0, 128, 1)">12</span>-<span style="color: rgba(128, 0, 128, 1)">8</span>-local/cuda-*-keyring.gpg /usr/share/keyrings/
<span style="color: rgba(0, 0, 255, 1)">sudo</span> apt-<span style="color: rgba(0, 0, 0, 1)">get update
</span><span style="color: rgba(0, 0, 255, 1)">sudo</span> apt-get -y <span style="color: rgba(0, 0, 255, 1)">install</span> cuda-toolkit-<span style="color: rgba(128, 0, 128, 1)">12</span>-<span style="color: rgba(128, 0, 128, 1)">8</span></pre>
</div>
<p>需要说明的是由于Nvidia可能会调整具体包的子版本号，导致以上部分链接可能失效，这时要在<a href="https://developer.nvidia.com/cuda-toolkit-archive" target="_blank" rel="noopener nofollow">https://developer.nvidia.com/cuda-toolkit-archive</a>页面自行选择适合自己的版本：</p>
<p><img src="https://img2024.cnblogs.com/blog/465567/202507/465567-20250716161326105-882084856.png" alt="" width="717" height="454" loading="lazy" style="display: block; margin-left: auto; margin-right: auto"></p>
<p>再打开相应的链接，并一步步根据自己的实际情况，产生相应的安装脚本：</p>
<p><img src="https://img2024.cnblogs.com/blog/465567/202507/465567-20250716161610786-1475832624.png" alt="" width="909" height="605" loading="lazy" style="display: block; margin-left: auto; margin-right: auto"></p>
<p>根据脚本内容，在wsl Ubuntu下完成安装，之后再在~/.bashrc最后添加加环境变量配置：</p>
<div class="cnblogs_code">
<pre>export CUDA_HOME=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">/usr/local/cuda-12.8</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
export PATH</span>=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">/usr/local/cuda-12.8/bin:$PATH</span><span style="color: rgba(128, 0, 0, 1)">"</span></pre>
</div>
<p>通过source命令使环境变量生效，然后即可查看nvcc版本信息。</p>
<p><img src="https://img2024.cnblogs.com/blog/465567/202507/465567-20250716161922608-2055027206.png" alt="" loading="lazy"></p>
<p>进行完这一步后，网上有些文章说就可以直接nvidia-smi查看windows下的显卡信息了，其实根本不行，最起码nvidia-smi这个文件根本找不到。强大的chatgpt给出原因：</p>
<p><img src="https://img2024.cnblogs.com/blog/465567/202507/465567-20250716162320567-255720159.png" alt="" width="471" height="235" loading="lazy" style="display: block; margin-left: auto; margin-right: auto"></p>
<p>并且它还给出解决方案，执行以下命令（在 Ubuntu 中）：</p>
<p><strong>步骤 1：添加 NVIDIA WSL 包源</strong></p>
<div class="cnblogs_code">
<pre>distribution=$(. /etc/os-release;<span style="color: rgba(0, 0, 255, 1)">echo</span> $ID$VERSION_ID)  # 会得到 ubuntu22.<span style="color: rgba(128, 0, 128, 1)">04</span><span style="color: rgba(0, 0, 0, 1)">
curl </span>-s -L https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit.gpg</span>
curl -s -L https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">nvidia.github.io/libnvidia-container/$distribution/libnvidia-container.list | sed 's#deb #deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit.gpg] #' | sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list &gt; /dev/null</span></pre>
</div>
<p><strong>步骤 2：更新并安装驱动组件</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">sudo</span><span style="color: rgba(0, 0, 0, 1)"> apt update
</span><span style="color: rgba(0, 0, 255, 1)">sudo</span> apt <span style="color: rgba(0, 0, 255, 1)">install</span> -y nvidia-driver-<span style="color: rgba(128, 0, 128, 1)">535</span> nvidia-utils-<span style="color: rgba(128, 0, 128, 1)">535</span> libnvidia-container-tools libnvidia-container1</pre>
</div>
<p>上面版本号（如 535）要与你 Windows 中的驱动版本一致或兼容（你当前是 572，可以试安装 <code data-start="1519" data-end="1537">nvidia-utils-525</code> 或 <code data-start="1540" data-end="1545">535</code>）。</p>
<p>以上步骤执行完以后，才可以在wsl Ubuntu下正常使用nvidia-smi命令，显示信息和windows下一致：</p>
<p><img src="https://img2024.cnblogs.com/blog/465567/202507/465567-20250716162917594-1380088176.png" alt="" width="1106" height="277" loading="lazy" style="display: block; margin-left: auto; margin-right: auto"></p>
<p>&nbsp;</p>
<p>参考：</p>
<p><a href="https://learn.microsoft.com/zh-cn/windows/wsl/basic-commands" target="_blank" rel="noopener nofollow">https://learn.microsoft.com/zh-cn/windows/wsl/basic-commands</a></p>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.058333333333333334" data-date-updated="2025-07-16 17:58">2025-07-16 16:34</span>&nbsp;
<a href="https://www.cnblogs.com/zhaoweiwei">weiwei22844</a>&nbsp;
阅读(<span id="post_view_count">67</span>)&nbsp;
评论(<span id="post_comment_count">2</span>)&nbsp;
&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18986211);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18986211', targetLink: 'https://www.cnblogs.com/zhaoweiwei/p/18986211/wsl', title: 'WSL初探' })">举报</a>
</div>
        