
            <h1 class="postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/johnnyzen/p/18662883" title="发布于 2025-01-09 20:50">
    <span role="heading" aria-level="2">[Java] 计算Java对象大小</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="序">序</h1>
<ul>
<li>在Java应用程序的性能优化场景中，时常需要考虑Java对象的大小，以便评估后，进一步提出优化方案：</li>
</ul>
<blockquote>
<ul>
<li>占用内存的大小。（比如 本地内存）</li>
<li>对象数据在网络传输中占用的网络带宽</li>
<li>对象数据在存储时占用的磁盘空间</li>
<li>...</li>
</ul>
</blockquote>
<h1 id="概述">概述</h1>
<h2 id="对象大小如何计算">对象大小如何计算</h2>
<ul>
<li><strong>对象大小</strong>包括俩部分的内容，对象头和对象内容：</li>
</ul>
<p><img src="https://img2024.cnblogs.com/blog/1173617/202501/1173617-20250109203514536-1485639451.png" alt="" loading="lazy"></p>
<h3 id="对象头">对象头</h3>
<blockquote>
<p>此处假设是64位的JVM</p>
</blockquote>
<ul>
<li>对象地址，占4个字节。</li>
<li>对象标记，占8个字节，包括锁标记，hashcode, age 等。</li>
<li>数组长度标记，占4个字节。如果对象是一个数组，会有此标记，否则没有。</li>
</ul>
<h3 id="对象内容">对象内容</h3>
<ul>
<li>对象内部属性。如果属性是对象的话，那么记录的是对象的地址，占用4个字节。</li>
</ul>
<h3 id="8字节对齐">8字节对齐</h3>
<ul>
<li><code>Java</code>对象采用的是8字节对齐。<strong>对象大小</strong>必须是<code>8</code>的倍数，不足需要补齐。</li>
</ul>
<blockquote>
<p>比如，计算一个对象只需要20字节，那么实际占用24字节。</p>
</blockquote>
<h1 id="计算对象大小的方法">计算对象大小的方法</h1>
<ul>
<li>方法1和方法2，在 String 对象的计算上，存在差异；Integer 和 Map 的计算，经简单检验：不存在差异。</li>
</ul>
<h2 id="方法1基于-jdk-原生库-推荐">方法1：基于 JDK 原生库 【推荐】</h2>
<blockquote>
<p>jdk 1.8</p>
</blockquote>
<pre><code class="language-java">import jdk.nashorn.internal.ir.debug.ObjectSizeCalculator;
import lombok.extern.slf4j.Slf4j;

@Slf4j
public class ObjectCalculatorTest {
    public static void main(String[] args) {
        String text = "Hello World!"; //12 chars
        Long objectSizeBytes = ObjectSizeCalculator.getObjectSize(text);
        log.info("objectSizeBytes: {} bytes", objectSizeBytes );//64 bytes

        Integer number = new Integer(11);
        objectSizeBytes = ObjectSizeCalculator.getObjectSize(number);
        log.info("objectSizeBytes: {} bytes", objectSizeBytes );//16 bytes
    }
}
</code></pre>
<h2 id="方法2基于lucene-core库">方法2：基于<code>lucene-core</code>库</h2>
<ul>
<li>引入依赖</li>
</ul>
<pre><code class="language-xml">&lt;dependency&gt;
	&lt;groupId&gt;org.apache.lucene&lt;/groupId&gt;
	&lt;artifactId&gt;lucene-core&lt;/artifactId&gt;
	&lt;version&gt;8.7.0&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>
<ul>
<li>计算对象大小</li>
</ul>
<blockquote>
<p>jdk 1.8</p>
</blockquote>
<pre><code class="language-java">import lombok.extern.slf4j.Slf4j;
import org.apache.lucene.util.RamUsageEstimator;

@Slf4j
public class ObjectCalculatorTest {
    public static void main(String[] args) {
        String text = "Hello World!"; //12 char = 12 byte
        objectSizeBytes = RamUsageEstimator.shallowSizeOf( text );
        log.info("objectSizeBytes: {} bytes", objectSizeBytes );//24 bytes
		
    	Integer number = new Integer(11);
        System.out.println(RamUsageEstimator.shallowSizeOf(number));//16 bytes

		Map&lt;String, String&gt; map = new HashMap&lt;&gt;();
		System.out.println(RamUsageEstimator.shallowSizeOf(map));//48 bytes
    }
}
</code></pre>
<h2 id="案例分析基于lucene-core库">案例分析(基于<code>lucene-core</code>库)</h2>
<h3 id="integer-对象大小分析">Integer 对象大小分析</h3>
<ul>
<li>它是对象，占用4个字节</li>
<li>对象标记，占用8个字节</li>
<li>查看源码，发现:</li>
</ul>
<blockquote>
<p><code>Integr</code> 内容只有以下一个<strong>非static</strong>的属性，是一个<code>int</code>的基本类型属性，占用<code>4</code>个字节.<br>
<code>static</code> 修饰的方法属性都是存储在方法区的，不占用对象空间。</p>
</blockquote>
<pre><code class="language-java">    /**
     * The value of the {@code Integer}.
     *
     * @serial
     */
    private final int value;
</code></pre>
<blockquote>
<p>故 total = 4 + 8 + 4 = 16</p>
</blockquote>
<h3 id="hashmap-对象大小分析">HashMap 对象大小分析</h3>
<ul>
<li>它是对象，占用4个字节</li>
<li>对象标记，占用8个字节</li>
<li>查看源码，发现：</li>
</ul>
<blockquote>
<p>HashMap 是继承了 AbstractMap 的，AbstractMap 中有以下的俩个属性，一共占用8个字节。因为只是存储了keySet, values 的地址</p>
</blockquote>
<pre><code class="language-java">transient Set&lt;K&gt;        keySet;
transient Collection&lt;V&gt; values;
</code></pre>
<ul>
<li>HashMap 中有以下属性，共占用 6 * 4 = 24 个字节。</li>
</ul>
<pre><code class="language-java">transient Node&lt;K,V&gt;[] table;
transient Set&lt;Map.Entry&lt;K,V&gt;&gt; entrySet;
transient int size;
transient int modCount;
int threshold;
final float loadFactor;
</code></pre>
<blockquote>
<p>total = 4 + 8 + 8 + 24 = 44, 由于 java 是8字节对齐的，故一共是 48 字节。</p>
</blockquote>
<h1 id="x-参考文献">X 参考文献</h1>
<ul>
<li><a href="https://blog.csdn.net/li12412414/article/details/128594374" target="_blank" rel="noopener nofollow">计算Java对象大小(附实际例子分析) - CSDN</a></li>
</ul>

</div>
<div id="MySignature" role="contentinfo">
    <div class="essaySuffix-box">
    <div class="essaySuffix-box-left" style=" margin: 6px auto; ">
        <img src="https://blog-static.cnblogs.com/files/johnnyzen/cnblogs-qq-group-qrcode.gif?t=1679679148" alt="QQ沟通交流群" onload="changeImg(this,200,100)">
    </div>
<div class="essaySuffix-box-right">
    <span class="essaySuffix-right-title">本文作者</span>：
        <strong><span><a href="https://github.com/Johnny-ZTSD" target="_blank">千千寰宇</a></span></strong>
    <br>
    <span style="font-weight: bold; white-space:nowrap;">本文链接</span>：
        <a href="https://www.cnblogs.com/johnnyzen" target="_blank" id="articleLinkElement"> https://www.cnblogs.com/johnnyzen</a>
    <br>
    <span class="essaySuffix-right-title">关于博文</span>：评论和私信会在第一时间回复，或<a href="https://msg.cnblogs.com/msg/send/johnnyzen" target="_blank">直接私信</a>我。
    <br>
    <span class="essaySuffix-right-title">版权声明</span>：本博客所有文章除特别声明外，均采用 <a title="https://creativecommons.org/licenses/by-nc-nd/4.0/" href="http://blog.sina.com.cn/s/blog_896327b90102y6c6.html" alt="BY-NC-SA" target="_blank">BY-NC-SA</a> 
    许可协议。转载请注明出处！<br>
    <span class="essaySuffix-right-title">日常交流</span>：大数据与软件开发-QQ交流群: 774386015<strong>
        <span style="color: #ff0000; font-size: 12pt;">【<a id="post-up" onclick="votePost(getArticleNumber(),'Digg')" href="javascript:void(0);">入群二维码</a>】</span></strong>参见左下角。您的支持、鼓励<span style="color: #ff0000; font-size: 12pt;"></span>是博主技术写作的重要动力！
    <br>
</div>
<div style="clear: both;">
</div>
</div>
</div>
<div class="clear"></div>

            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.05810163820486111" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2025-01-09 20:53">2025-01-09 20:50</span>&nbsp;
<a href="https://www.cnblogs.com/johnnyzen">千千寰宇</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18662883" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18662883);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18662883', targetLink: 'https://www.cnblogs.com/johnnyzen/p/18662883', title: '[Java] 计算Java对象大小' })">举报</a>
</div>
        